Search.setIndex({"alltitles": {"ArkoudaJSONCompat": [[41, null]], "ArkoudaPythonCompat": [[42, null]], "ArkoudaSortCompat": [[43, null]], "ArkoudaSparseMatrixCompat": [[44, null]], "ArkoudaTimeCompat": [[45, null]], "AryUtil": [[1, null]], "BigIntMsg": [[2, null]], "BigIntegerAggregation": [[5, null]], "Cast": [[3, null]], "CommAggregation": [[4, null]], "CommPrimitives": [[6, null]], "CommandMap": [[7, null]], "DynamicSort": [[8, null]], "ExternalIntegration": [[9, null]], "FileIO": [[10, null]], "GenSymIO": [[11, null]], "IOUtils": [[12, null]], "In1d": [[13, null]], "Indices and tables": [[0, "indices-and-tables"]], "Logging": [[14, null]], "MemoryMgmt": [[15, null]], "Message": [[16, null]], "MetricsMsg": [[17, null]], "MsgProcessing": [[18, null]], "MultiTypeRegEntry": [[19, null]], "MultiTypeSymEntry": [[20, null]], "MultiTypeSymbolTable": [[21, null]], "NumPyDType": [[22, null]], "NumericUnicodes": [[23, null]], "RadixSortLSD": [[24, null]], "RegistrationConfig": [[46, null]], "Registry": [[25, null]], "Security": [[26, null]], "SegStringSort": [[27, null]], "SegmentedComputation": [[28, null]], "SegmentedString": [[29, null]], "ServerConfig": [[30, null]], "ServerDaemon": [[31, null]], "ServerErrorStrings": [[32, null]], "ServerErrors": [[33, null]], "SipHash": [[34, null]], "SparseMatrix": [[35, null]], "SpsMatUtil": [[36, null]], "StatusMsg": [[37, null]], "SymArrayDmap": [[38, null]], "Unique": [[39, null]], "arkouda_server": [[40, null]], "chpldoc documentation": [[0, null]]}, "docnames": ["index", "modules/__w/arkouda/arkouda/src/AryUtil", "modules/__w/arkouda/arkouda/src/BigIntMsg", "modules/__w/arkouda/arkouda/src/Cast", "modules/__w/arkouda/arkouda/src/CommAggregation", "modules/__w/arkouda/arkouda/src/CommAggregation/BigIntegerAggregation", "modules/__w/arkouda/arkouda/src/CommPrimitives", "modules/__w/arkouda/arkouda/src/CommandMap", "modules/__w/arkouda/arkouda/src/DynamicSort", "modules/__w/arkouda/arkouda/src/ExternalIntegration", "modules/__w/arkouda/arkouda/src/FileIO", "modules/__w/arkouda/arkouda/src/GenSymIO", "modules/__w/arkouda/arkouda/src/IOUtils", "modules/__w/arkouda/arkouda/src/In1d", "modules/__w/arkouda/arkouda/src/Logging", "modules/__w/arkouda/arkouda/src/MemoryMgmt", "modules/__w/arkouda/arkouda/src/Message", "modules/__w/arkouda/arkouda/src/MetricsMsg", "modules/__w/arkouda/arkouda/src/MsgProcessing", "modules/__w/arkouda/arkouda/src/MultiTypeRegEntry", "modules/__w/arkouda/arkouda/src/MultiTypeSymEntry", "modules/__w/arkouda/arkouda/src/MultiTypeSymbolTable", "modules/__w/arkouda/arkouda/src/NumPyDType", "modules/__w/arkouda/arkouda/src/NumericUnicodes", "modules/__w/arkouda/arkouda/src/RadixSortLSD", "modules/__w/arkouda/arkouda/src/Registry", "modules/__w/arkouda/arkouda/src/Security", "modules/__w/arkouda/arkouda/src/SegStringSort", "modules/__w/arkouda/arkouda/src/SegmentedComputation", "modules/__w/arkouda/arkouda/src/SegmentedString", "modules/__w/arkouda/arkouda/src/ServerConfig", "modules/__w/arkouda/arkouda/src/ServerDaemon", "modules/__w/arkouda/arkouda/src/ServerErrorStrings", "modules/__w/arkouda/arkouda/src/ServerErrors", "modules/__w/arkouda/arkouda/src/SipHash", "modules/__w/arkouda/arkouda/src/SparseMatrix", "modules/__w/arkouda/arkouda/src/SparseMatrix/SpsMatUtil", "modules/__w/arkouda/arkouda/src/StatusMsg", "modules/__w/arkouda/arkouda/src/SymArrayDmap", "modules/__w/arkouda/arkouda/src/Unique", "modules/__w/arkouda/arkouda/src/arkouda_server", "modules/__w/arkouda/arkouda/src/compat/eq-22/ArkoudaJSONCompat", "modules/__w/arkouda/arkouda/src/compat/eq-22/ArkoudaPythonCompat", "modules/__w/arkouda/arkouda/src/compat/eq-22/ArkoudaSortCompat", "modules/__w/arkouda/arkouda/src/compat/eq-22/ArkoudaSparseMatrixCompat", "modules/__w/arkouda/arkouda/src/compat/eq-22/ArkoudaTimeCompat", "modules/__w/arkouda/arkouda/src/registry/RegistrationConfig"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2}, "filenames": ["index.rst", "modules/__w/arkouda/arkouda/src/AryUtil.rst", "modules/__w/arkouda/arkouda/src/BigIntMsg.rst", "modules/__w/arkouda/arkouda/src/Cast.rst", "modules/__w/arkouda/arkouda/src/CommAggregation.rst", "modules/__w/arkouda/arkouda/src/CommAggregation/BigIntegerAggregation.rst", "modules/__w/arkouda/arkouda/src/CommPrimitives.rst", "modules/__w/arkouda/arkouda/src/CommandMap.rst", "modules/__w/arkouda/arkouda/src/DynamicSort.rst", "modules/__w/arkouda/arkouda/src/ExternalIntegration.rst", "modules/__w/arkouda/arkouda/src/FileIO.rst", "modules/__w/arkouda/arkouda/src/GenSymIO.rst", "modules/__w/arkouda/arkouda/src/IOUtils.rst", "modules/__w/arkouda/arkouda/src/In1d.rst", "modules/__w/arkouda/arkouda/src/Logging.rst", "modules/__w/arkouda/arkouda/src/MemoryMgmt.rst", "modules/__w/arkouda/arkouda/src/Message.rst", "modules/__w/arkouda/arkouda/src/MetricsMsg.rst", "modules/__w/arkouda/arkouda/src/MsgProcessing.rst", "modules/__w/arkouda/arkouda/src/MultiTypeRegEntry.rst", "modules/__w/arkouda/arkouda/src/MultiTypeSymEntry.rst", "modules/__w/arkouda/arkouda/src/MultiTypeSymbolTable.rst", "modules/__w/arkouda/arkouda/src/NumPyDType.rst", "modules/__w/arkouda/arkouda/src/NumericUnicodes.rst", "modules/__w/arkouda/arkouda/src/RadixSortLSD.rst", "modules/__w/arkouda/arkouda/src/Registry.rst", "modules/__w/arkouda/arkouda/src/Security.rst", "modules/__w/arkouda/arkouda/src/SegStringSort.rst", "modules/__w/arkouda/arkouda/src/SegmentedComputation.rst", "modules/__w/arkouda/arkouda/src/SegmentedString.rst", "modules/__w/arkouda/arkouda/src/ServerConfig.rst", "modules/__w/arkouda/arkouda/src/ServerDaemon.rst", "modules/__w/arkouda/arkouda/src/ServerErrorStrings.rst", "modules/__w/arkouda/arkouda/src/ServerErrors.rst", "modules/__w/arkouda/arkouda/src/SipHash.rst", "modules/__w/arkouda/arkouda/src/SparseMatrix.rst", "modules/__w/arkouda/arkouda/src/SparseMatrix/SpsMatUtil.rst", "modules/__w/arkouda/arkouda/src/StatusMsg.rst", "modules/__w/arkouda/arkouda/src/SymArrayDmap.rst", "modules/__w/arkouda/arkouda/src/Unique.rst", "modules/__w/arkouda/arkouda/src/arkouda_server.rst", "modules/__w/arkouda/arkouda/src/compat/eq-22/ArkoudaJSONCompat.rst", "modules/__w/arkouda/arkouda/src/compat/eq-22/ArkoudaPythonCompat.rst", "modules/__w/arkouda/arkouda/src/compat/eq-22/ArkoudaSortCompat.rst", "modules/__w/arkouda/arkouda/src/compat/eq-22/ArkoudaSparseMatrixCompat.rst", "modules/__w/arkouda/arkouda/src/compat/eq-22/ArkoudaTimeCompat.rst", "modules/__w/arkouda/arkouda/src/registry/RegistrationConfig.rst"], "indexentries": {"!=() (in module segmentedstring)": [[29, "SegmentedString.!=", false]], "==() (in module segmentedstring)": [[29, "SegmentedString.==", false]], "a (multitypesymentry.sparsesymentry attribute)": [[20, "MultiTypeSymEntry.SparseSymEntry.a", false]], "a (multitypesymentry.symentry attribute)": [[20, "MultiTypeSymEntry.SymEntry.a", false]], "abstractregentry (class in multityperegentry)": [[19, "MultiTypeRegEntry.AbstractRegEntry", false]], "abstractsymentry (class in multitypesymentry)": [[20, "MultiTypeSymEntry.AbstractSymEntry", false]], "accumranksizes (aryutil.orderer attribute)": [[1, "AryUtil.orderer.accumRankSizes", false]], "accumulate() (spsmatutil.merge method)": [[36, "SpsMatUtil.merge.accumulate", false]], "accumulateontostate() (spsmatutil.merge method)": [[36, "SpsMatUtil.merge.accumulateOntoState", false]], "activitymutex (serverdaemon.defaultserverdaemon attribute)": [[31, "ServerDaemon.DefaultServerDaemon.activityMutex", false]], "ad() (multitypesymentry.symentry method)": [[20, "MultiTypeSymEntry.SymEntry.aD", false]], "add() (metricsmsg.averagemeasurementtable method)": [[17, "MetricsMsg.AverageMeasurementTable.add", false]], "add() (metricsmsg.measurementtable method)": [[17, "MetricsMsg.MeasurementTable.add", false]], "add() (spsmatutil.sparsematdat method)": [[36, "SpsMatUtil.sparseMatDat.add", false]], "addelementstosparsearray() (in module sparsematrix)": [[35, "SparseMatrix.addElementsToSparseArray", false]], "addentry() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.addEntry", false]], "addpayload() (message.messageargs method)": [[16, "Message.MessageArgs.addPayload", false]], "aggtype (bigintegeraggregation.dstaggregatorbigint attribute)": [[5, "BigIntegerAggregation.DstAggregatorBigint.aggType", false]], "aggtype (bigintegeraggregation.srcaggregatorbigint attribute)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.aggType", false]], "aggtype (commaggregation.dstaggregator attribute)": [[4, "CommAggregation.DstAggregator.aggType", false]], "aggtype (commaggregation.srcaggregator attribute)": [[4, "CommAggregation.SrcAggregator.aggType", false]], "akmsgsign() (in module commandmap)": [[7, "CommandMap.akMsgSign", false]], "allnumericunicodes (in module numericunicodes)": [[23, "NumericUnicodes.allNumericUnicodes", false]], "append (externalintegration.filechannel attribute)": [[9, "ExternalIntegration.FileChannel.append", false]], "appendaxis() (in module aryutil)": [[1, "AryUtil.appendAxis", false]], "appendfile() (in module fileio)": [[10, "FileIO.appendFile", false]], "appendtoconfigstr() (in module serverconfig)": [[30, "ServerConfig.appendToConfigStr", false]], "arggroup() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.argGroup", false]], "args (message.requestmsg attribute)": [[16, "Message.RequestMsg.args", false]], "argsort() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.argsort", false]], "argumenterror (class in servererrors)": [[33, "ServerErrors.ArgumentError", false]], "arkdirectory (serverdaemon.defaultserverdaemon attribute)": [[31, "ServerDaemon.DefaultServerDaemon.arkDirectory", false]], "arkouda_mem_alloc (memorymgmt.localememorystatus attribute)": [[15, "MemoryMgmt.LocaleMemoryStatus.arkouda_mem_alloc", false]], "arkouda_server (module)": [[40, "module-arkouda_server", false]], "arkoudajsoncompat (module)": [[41, "module-ArkoudaJSONCompat", false]], "arkoudapythoncompat (module)": [[42, "module-ArkoudaPythonCompat", false]], "arkoudaserverdaemon (class in serverdaemon)": [[31, "ServerDaemon.ArkoudaServerDaemon", false]], "arkoudasortcompat (module)": [[43, "module-ArkoudaSortCompat", false]], "arkoudasparsematrixcompat (module)": [[44, "module-ArkoudaSparseMatrixCompat", false]], "arkoudatimecompat (module)": [[45, "module-ArkoudaTimeCompat", false]], "arkoudaversion (in module serverconfig)": [[30, "ServerConfig.arkoudaVersion", false]], "array (multityperegentry.arrayregentry attribute)": [[19, "MultiTypeRegEntry.ArrayRegEntry.array", false]], "array (multityperegentry.bitvectorregentry attribute)": [[19, "MultiTypeRegEntry.BitVectorRegEntry.array", false]], "array() (in module gensymio)": [[11, "GenSymIO.array", false]], "arraydimensionsstr (in module registrationconfig)": [[46, "RegistrationConfig.arrayDimensionsStr", false]], "arraydimensionsty (in module registrationconfig)": [[46, "RegistrationConfig.arrayDimensionsTy", false]], "arraydimissupported() (in module serverconfig)": [[30, "ServerConfig.arrayDimIsSupported", false]], "arrayelementsty (in module registrationconfig)": [[46, "RegistrationConfig.arrayElementsTy", false]], "arrayelmtypeissupported() (in module serverconfig)": [[30, "ServerConfig.arrayElmTypeIsSupported", false]], "arraymetric (class in metricsmsg)": [[17, "MetricsMsg.ArrayMetric", false]], "arrayregentry (class in multityperegentry)": [[19, "MultiTypeRegEntry.ArrayRegEntry", false]], "arraysegstring() (in module gensymio)": [[11, "GenSymIO.arraySegString", false]], "aryutil (module)": [[1, "module-AryUtil", false]], "aslogger (in module arkouda_server)": [[40, "arkouda_server.asLogger", false]], "asmap() (multityperegentry.arrayregentry method)": [[19, "MultiTypeRegEntry.ArrayRegEntry.asMap", false]], "asmap() (multityperegentry.bitvectorregentry method)": [[19, "MultiTypeRegEntry.BitVectorRegEntry.asMap", false]], "asmap() (multityperegentry.categoricalregentry method)": [[19, "MultiTypeRegEntry.CategoricalRegEntry.asMap", false]], "asmap() (multityperegentry.dataframeregentry method)": [[19, "MultiTypeRegEntry.DataFrameRegEntry.asMap", false]], "asmap() (multityperegentry.groupbyregentry method)": [[19, "MultiTypeRegEntry.GroupByRegEntry.asMap", false]], "asmap() (multityperegentry.indexregentry method)": [[19, "MultiTypeRegEntry.IndexRegEntry.asMap", false]], "asmap() (multityperegentry.segarrayregentry method)": [[19, "MultiTypeRegEntry.SegArrayRegEntry.asMap", false]], "asmap() (multityperegentry.seriesregentry method)": [[19, "MultiTypeRegEntry.SeriesRegEntry.asMap", false]], "assemblesegstringfromparts() (in module segmentedstring)": [[29, "SegmentedString.assembleSegStringFromParts", false]], "assignabletypes (multityperegentry.abstractregentry attribute)": [[19, "MultiTypeRegEntry.AbstractRegEntry.assignableTypes", false]], "assignabletypes (multitypesymentry.abstractsymentry attribute)": [[20, "MultiTypeSymEntry.AbstractSymEntry.assignableTypes", false]], "astats() (in module aryutil)": [[1, "AryUtil.aStats", false]], "attrib() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.attrib", false]], "attrib() (multitypesymentry.compositesymentry method)": [[20, "MultiTypeSymEntry.CompositeSymEntry.attrib", false]], "attrib() (multitypesymentry.gensparsesymentry method)": [[20, "MultiTypeSymEntry.GenSparseSymEntry.attrib", false]], "attrib() (multitypesymentry.gensymentry method)": [[20, "MultiTypeSymEntry.GenSymEntry.attrib", false]], "aulogger (in module aryutil)": [[1, "AryUtil.auLogger", false]], "authenticate (in module serverconfig)": [[30, "ServerConfig.authenticate", false]], "authenticateuser() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.authenticateUser", false]], "autoshutdown (in module serverconfig)": [[30, "ServerConfig.autoShutdown", false]], "avail_mem (memorymgmt.localememorystatus attribute)": [[15, "MemoryMgmt.LocaleMemoryStatus.avail_mem", false]], "availablememorypct (in module memorymgmt)": [[15, "MemoryMgmt.availableMemoryPct", false]], "averagemeasurementtable (class in metricsmsg)": [[17, "MetricsMsg.AverageMeasurementTable", false]], "avgmetricvalue (class in metricsmsg)": [[17, "MetricsMsg.AvgMetricValue", false]], "avgresponsetimemetrics (in module metricsmsg)": [[17, "MetricsMsg.avgResponseTimeMetrics", false]], "axisslices() (in module aryutil)": [[1, "AryUtil.axisSlices", false]], "bigintcreationmsg() (in module bigintmsg)": [[2, "BigIntMsg.bigIntCreationMsg", false]], "bigintegeraggregation (module)": [[5, "module-BigIntegerAggregation", false]], "bigintmsg (module)": [[2, "module-BigIntMsg", false]], "bigintnbytesmsg() (in module bigintmsg)": [[2, "BigIntMsg.bigIntNBytesMsg", false]], "biginttouintarraysmsg() (in module bigintmsg)": [[2, "BigIntMsg.bigintToUintArraysMsg", false]], "bilogger (in module bigintmsg)": [[2, "BigIntMsg.biLogger", false]], "bitsperdigit (in module aryutil)": [[1, "AryUtil.bitsPerDigit", false]], "bitvectorregentry (class in multityperegentry)": [[19, "MultiTypeRegEntry.BitVectorRegEntry", false]], "bool2str() (in module numpydtype)": [[22, "NumPyDType.bool2str", false]], "broadcastshape() (in module aryutil)": [[1, "AryUtil.broadcastShape", false]], "bslash (in module serverconfig)": [[30, "ServerConfig.BSLASH", false]], "bufferidxalloc() (in module commaggregation)": [[4, "CommAggregation.bufferIdxAlloc", false]], "bufferidxs (bigintegeraggregation.dstaggregatorbigint attribute)": [[5, "BigIntegerAggregation.DstAggregatorBigint.bufferIdxs", false]], "bufferidxs (bigintegeraggregation.srcaggregatorbigint attribute)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.bufferIdxs", false]], "bufferidxs (commaggregation.dstaggregator attribute)": [[4, "CommAggregation.DstAggregator.bufferIdxs", false]], "bufferidxs (commaggregation.srcaggregator attribute)": [[4, "CommAggregation.SrcAggregator.bufferIdxs", false]], "buffersize (bigintegeraggregation.dstaggregatorbigint attribute)": [[5, "BigIntegerAggregation.DstAggregatorBigint.bufferSize", false]], "buffersize (bigintegeraggregation.srcaggregatorbigint attribute)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.bufferSize", false]], "buffersize (commaggregation.dstaggregator attribute)": [[4, "CommAggregation.DstAggregator.bufferSize", false]], "buffersize (commaggregation.srcaggregator attribute)": [[4, "CommAggregation.SrcAggregator.bufferSize", false]], "buildreadallmsgjson() (in module gensymio)": [[11, "GenSymIO.buildReadAllMsgJson", false]], "bytesentry (multitypesymentry.segstringsymentry attribute)": [[20, "MultiTypeSymEntry.SegStringSymEntry.bytesEntry", false]], "bytestouintarr() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.bytesToUintArr", false]], "cacert (externalintegration.httpschannel attribute)": [[9, "ExternalIntegration.HttpsChannel.caCert", false]], "cachedalloc() (commaggregation.remotebuffer method)": [[4, "CommAggregation.remoteBuffer.cachedAlloc", false]], "calcblock() (in module radixsortlsd)": [[24, "RadixSortLSD.calcBlock", false]], "calcblock() (in module segstringsort)": [[27, "SegStringSort.calcBlock", false]], "calcglobalindex() (in module radixsortlsd)": [[24, "RadixSortLSD.calcGlobalIndex", false]], "calcglobalindex() (in module segstringsort)": [[27, "SegStringSort.calcGlobalIndex", false]], "capitalize() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.capitalize", false]], "cast (module)": [[3, "module-Cast", false]], "castgensymentrytostring() (in module cast)": [[3, "Cast.castGenSymEntryToString", false]], "castlogger (in module cast)": [[3, "Cast.castLogger", false]], "caststringtobigint() (in module cast)": [[3, "Cast.castStringToBigInt", false]], "caststringtosymentry() (in module cast)": [[3, "Cast.castStringToSymEntry", false]], "categoricalregentry (class in multityperegentry)": [[19, "MultiTypeRegEntry.CategoricalRegEntry", false]], "categories (multityperegentry.categoricalregentry attribute)": [[19, "MultiTypeRegEntry.CategoricalRegEntry.categories", false]], "category (metricsmsg.metric attribute)": [[17, "MetricsMsg.Metric.category", false]], "channel (class in externalintegration)": [[9, "ExternalIntegration.Channel", false]], "channeltype (enum in externalintegration)": [[9, "ExternalIntegration.ChannelType", false]], "checkavailability() (registry.regtab method)": [[25, "Registry.RegTab.checkAvailability", false]], "checkcast() (in module gensymio)": [[11, "GenSymIO.checkCast", false]], "checkcompile() (in module segmentedstring)": [[29, "SegmentedString.checkCompile", false]], "checktable() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.checkTable", false]], "checktable() (registry.regtab method)": [[25, "Registry.RegTab.checkTable", false]], "chplversionarkouda (in module serverconfig)": [[30, "ServerConfig.chplVersionArkouda", false]], "chunkinfoasarray() (in module msgprocessing)": [[18, "MsgProcessing.chunkInfoAsArray", false]], "chunkinfoasstring() (in module msgprocessing)": [[18, "MsgProcessing.chunkInfoAsString", false]], "clear() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.clear", false]], "clearmsg() (in module msgprocessing)": [[18, "MsgProcessing.clearMsg", false]], "clone() (spsmatutil.merge method)": [[36, "SpsMatUtil.merge.clone", false]], "cmd (message.requestmsg attribute)": [[16, "Message.RequestMsg.cmd", false]], "cmd (metricsmsg.arraymetric attribute)": [[17, "MetricsMsg.ArrayMetric.cmd", false]], "codes (multityperegentry.categoricalregentry attribute)": [[19, "MultiTypeRegEntry.CategoricalRegEntry.codes", false]], "colmajorexscan() (in module sparsematrix)": [[35, "SparseMatrix.colMajorExScan", false]], "column_names (multityperegentry.dataframeregentry attribute)": [[19, "MultiTypeRegEntry.DataFrameRegEntry.column_names", false]], "columns (multityperegentry.dataframeregentry attribute)": [[19, "MultiTypeRegEntry.DataFrameRegEntry.columns", false]], "combine() (spsmatutil.merge method)": [[36, "SpsMatUtil.merge.combine", false]], "commaggregation (module)": [[4, "module-CommAggregation", false]], "commandmap (in module commandmap)": [[7, "CommandMap.commandMap", false]], "commandmap (module)": [[7, "module-CommandMap", false]], "commondtype() (in module numpydtype)": [[22, "NumPyDType.commonDType", false]], "commprimitives (module)": [[6, "module-CommPrimitives", false]], "compare() (in module segmentedstring)": [[29, "SegmentedString.compare", false]], "composite (segmentedstring.segstring attribute)": [[29, "SegmentedString.SegString.composite", false]], "compositesymentry (class in multitypesymentry)": [[20, "MultiTypeSymEntry.CompositeSymEntry", false]], "computeonsegments() (in module segmentedcomputation)": [[28, "SegmentedComputation.computeOnSegments", false]], "computesegmentownership() (in module segmentedcomputation)": [[28, "SegmentedComputation.computeSegmentOwnership", false]], "concat() (in module segmentedstring)": [[29, "SegmentedString.concat", false]], "concatarrays() (in module aryutil)": [[1, "AryUtil.concatArrays", false]], "configurationerror (class in servererrors)": [[33, "ServerErrors.ConfigurationError", false]], "configurechannel() (externalintegration.httpchannel method)": [[9, "ExternalIntegration.HttpChannel.configureChannel", false]], "configurechannel() (externalintegration.httpschannel method)": [[9, "ExternalIntegration.HttpsChannel.configureChannel", false]], "connecturl (serverdaemon.defaultserverdaemon attribute)": [[31, "ServerDaemon.DefaultServerDaemon.connectUrl", false]], "consoleoutputhandler (class in logging)": [[14, "Logging.ConsoleOutputHandler", false]], "contains() (message.messageargs method)": [[16, "Message.MessageArgs.contains", false]], "contains() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.contains", false]], "contains() (registry.regtab method)": [[25, "Registry.RegTab.contains", false]], "context (serverdaemon.defaultserverdaemon attribute)": [[31, "ServerDaemon.DefaultServerDaemon.context", false]], "context (serverdaemon.metricsserverdaemon attribute)": [[31, "ServerDaemon.MetricsServerDaemon.context", false]], "context (serverdaemon.serverstatusdaemon attribute)": [[31, "ServerDaemon.ServerStatusDaemon.context", false]], "contiguousindices() (in module aryutil)": [[1, "AryUtil.contiguousIndices", false]], "copy() (bigintegeraggregation.dstaggregatorbigint method)": [[5, "BigIntegerAggregation.DstAggregatorBigint.copy", false]], "copy() (bigintegeraggregation.srcaggregatorbigint method)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.copy", false]], "copy() (commaggregation.dstaggregator method)": [[4, "CommAggregation.DstAggregator.copy", false]], "copy() (commaggregation.dstunorderedaggregator method)": [[4, "CommAggregation.DstUnorderedAggregator.copy", false]], "copy() (commaggregation.srcaggregator method)": [[4, "CommAggregation.SrcAggregator.copy", false]], "copy() (commaggregation.srcunorderedaggregator method)": [[4, "CommAggregation.SrcUnorderedAggregator.copy", false]], "countertable (class in metricsmsg)": [[17, "MetricsMsg.CounterTable", false]], "counts (metricsmsg.countertable attribute)": [[17, "MetricsMsg.CounterTable.counts", false]], "create() (in module msgprocessing)": [[18, "MsgProcessing.create", false]], "createconfig() (in module serverconfig)": [[30, "ServerConfig.createConfig", false]], "createscalararray() (in module msgprocessing)": [[18, "MsgProcessing.createScalarArray", false]], "createserverconnectioninfo() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.createServerConnectionInfo", false]], "createsymentry() (in module multitypesymentry)": [[20, "MultiTypeSymEntry.createSymEntry", false]], "createtypedsymentry() (in module multitypesymentry)": [[20, "MultiTypeSymEntry.createTypedSymEntry", false]], "critical() (logging.logger method)": [[14, "Logging.Logger.critical", false]], "crounds (in module siphash)": [[34, "SipHash.cROUNDS", false]], "curlinfo_response_code (in module externalintegration)": [[9, "ExternalIntegration.CURLINFO_RESPONSE_CODE", false]], "curlopt_cainfo (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_CAINFO", false]], "curlopt_capath (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_CAPATH", false]], "curlopt_customrequest (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_CUSTOMREQUEST", false]], "curlopt_failonerror (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_FAILONERROR", false]], "curlopt_httpheader (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_HTTPHEADER", false]], "curlopt_keypasswd (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_KEYPASSWD", false]], "curlopt_password (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_PASSWORD", false]], "curlopt_postfields (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_POSTFIELDS", false]], "curlopt_ssl_verifypeer (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_SSL_VERIFYPEER", false]], "curlopt_sslcert (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_SSLCERT", false]], "curlopt_sslcerttype (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_SSLCERTTYPE", false]], "curlopt_sslkey (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_SSLKEY", false]], "curlopt_url (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_URL", false]], "curlopt_use_ssl (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_USE_SSL", false]], "curlopt_username (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_USERNAME", false]], "curlopt_verbose (in module externalintegration)": [[9, "ExternalIntegration.CURLOPT_VERBOSE", false]], "currenttime() (in module serverconfig)": [[30, "ServerConfig.currentTime", false]], "data (commaggregation.remotebuffer attribute)": [[4, "CommAggregation.remoteBuffer.data", false]], "dataframeregentry (class in multityperegentry)": [[19, "MultiTypeRegEntry.DataFrameRegEntry", false]], "datarepr() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.datarepr", false]], "datasetnotfounderror (class in servererrors)": [[33, "ServerErrors.DatasetNotFoundError", false]], "datastr() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.datastr", false]], "datatype (metricsmsg.metricvalue attribute)": [[17, "MetricsMsg.MetricValue.dataType", false]], "debug() (logging.logger method)": [[14, "Logging.Logger.debug", false]], "decrement() (metricsmsg.countertable method)": [[17, "MetricsMsg.CounterTable.decrement", false]], "deepcopy() (in module gensymio)": [[11, "GenSymIO.deepcopy", false]], "defaultcomparator() (in module arkoudasortcompat)": [[43, "ArkoudaSortCompat.defaultComparator", false]], "defaultserverdaemon (class in serverdaemon)": [[31, "ServerDaemon.DefaultServerDaemon", false]], "deinit() (aryutil.lowlevellocalizingslice method)": [[1, "AryUtil.lowLevelLocalizingSlice.deinit", false]], "deinit() (bigintegeraggregation.dstaggregatorbigint method)": [[5, "BigIntegerAggregation.DstAggregatorBigint.deinit", false]], "deinit() (bigintegeraggregation.srcaggregatorbigint method)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.deinit", false]], "deinit() (commaggregation.dstaggregator method)": [[4, "CommAggregation.DstAggregator.deinit", false]], "deinit() (commaggregation.dstunorderedaggregator method)": [[4, "CommAggregation.DstUnorderedAggregator.deinit", false]], "deinit() (commaggregation.remotebuffer method)": [[4, "CommAggregation.remoteBuffer.deinit", false]], "deinit() (commaggregation.srcaggregator method)": [[4, "CommAggregation.SrcAggregator.deinit", false]], "deinit() (commaggregation.srcunorderedaggregator method)": [[4, "CommAggregation.SrcUnorderedAggregator.deinit", false]], "deinit() (multitypesymentry.sparsesymentry method)": [[20, "MultiTypeSymEntry.SparseSymEntry.deinit", false]], "deinit() (multitypesymentry.symentry method)": [[20, "MultiTypeSymEntry.SymEntry.deinit", false]], "deleteentry() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.deleteEntry", false]], "deletefile() (in module fileio)": [[10, "FileIO.deleteFile", false]], "deletematchingfilenames() (in module fileio)": [[10, "FileIO.deleteMatchingFilenames", false]], "deletematchingfilenamesmsg() (in module fileio)": [[10, "FileIO.deleteMatchingFilenamesMsg", false]], "deletemsg() (in module msgprocessing)": [[18, "MsgProcessing.deleteMsg", false]], "deleteserverconnectioninfo() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.deleteServerConnectionInfo", false]], "delimitedfiletomap() (in module fileio)": [[10, "FileIO.delimitedFileToMap", false]], "densematmatmult() (in module sparsematrix)": [[35, "SparseMatrix.denseMatMatMult", false]], "deployment (enum in serverconfig)": [[30, "ServerConfig.Deployment", false]], "deployment (in module serverconfig)": [[30, "ServerConfig.deployment", false]], "deregisterfromexternalsystem() (in module externalintegration)": [[9, "ExternalIntegration.deregisterFromExternalSystem", false]], "deregisterfromkubernetes() (in module externalintegration)": [[9, "ExternalIntegration.deregisterFromKubernetes", false]], "deserialize() (in module message)": [[16, "Message.deserialize", false]], "deserializefrom() (bigintegeraggregation.bigint method)": [[5, "BigIntegerAggregation.bigint.deserializeFrom", false]], "dimensions (multitypesymentry.sparsesymentry attribute)": [[20, "MultiTypeSymEntry.SparseSymEntry.dimensions", false]], "dimensions (multitypesymentry.symentry attribute)": [[20, "MultiTypeSymEntry.SymEntry.dimensions", false]], "divdtype() (in module numpydtype)": [[22, "NumPyDType.divDType", false]], "dmap (enum in symarraydmap)": [[38, "SymArrayDmap.Dmap", false]], "domain_intersection() (in module fileio)": [[10, "FileIO.domain_intersection", false]], "domoffaxis() (in module aryutil)": [[1, "AryUtil.domOffAxis", false]], "domonaxis() (in module aryutil)": [[1, "AryUtil.domOnAxis", false]], "drounds (in module siphash)": [[34, "SipHash.dROUNDS", false]], "dstaddrs (bigintegeraggregation.srcaggregatorbigint attribute)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.dstAddrs", false]], "dstaddrs (commaggregation.srcaggregator attribute)": [[4, "CommAggregation.SrcAggregator.dstAddrs", false]], "dstaggregator (record in commaggregation)": [[4, "CommAggregation.DstAggregator", false]], "dstaggregatorbigint (record in bigintegeraggregation)": [[5, "BigIntegerAggregation.DstAggregatorBigint", false]], "dstunorderedaggregator (record in commaggregation)": [[4, "CommAggregation.DstUnorderedAggregator", false]], "dtk (enum in numpydtype)": [[22, "NumPyDType.DTK", false]], "dtype (enum in numpydtype)": [[22, "NumPyDType.DType", false]], "dtype (message.parameterobj attribute)": [[16, "Message.ParameterObj.dtype", false]], "dtype (metricsmsg.arraymetric attribute)": [[17, "MetricsMsg.ArrayMetric.dType", false]], "dtype (multitypesymentry.gensparsesymentry attribute)": [[20, "MultiTypeSymEntry.GenSparseSymEntry.dtype", false]], "dtype (multitypesymentry.gensymentry attribute)": [[20, "MultiTypeSymEntry.GenSymEntry.dtype", false]], "dtype2str() (in module numpydtype)": [[22, "NumPyDType.dtype2str", false]], "dtypesize() (in module numpydtype)": [[22, "NumPyDType.dtypeSize", false]], "dump() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.dump", false]], "dumpcommandmap() (in module commandmap)": [[7, "CommandMap.dumpCommandMap", false]], "dynamicsort (module)": [[8, "module-DynamicSort", false]], "dynamictwoarrayradixsort() (in module dynamicsort)": [[8, "DynamicSort.dynamicTwoArrayRadixSort", false]], "ediff() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.ediff", false]], "eilogger (in module externalintegration)": [[9, "ExternalIntegration.eiLogger", false]], "elemtype (commaggregation.dstaggregator attribute)": [[4, "CommAggregation.DstAggregator.elemType", false]], "elemtype (commaggregation.dstunorderedaggregator attribute)": [[4, "CommAggregation.DstUnorderedAggregator.elemType", false]], "elemtype (commaggregation.remotebuffer attribute)": [[4, "CommAggregation.remoteBuffer.elemType", false]], "elemtype (commaggregation.srcaggregator attribute)": [[4, "CommAggregation.SrcAggregator.elemType", false]], "elemtype (commaggregation.srcunorderedaggregator attribute)": [[4, "CommAggregation.SrcUnorderedAggregator.elemType", false]], "elttype (spsmatutil.merge attribute)": [[36, "SpsMatUtil.merge.eltType", false]], "emit() (logging.logger method)": [[14, "Logging.Logger.emit", false]], "emptysparsedomlike() (in module spsmatutil)": [[36, "SpsMatUtil.emptySparseDomLike", false]], "emptystartasynccheckpointdaemon() (in module commandmap)": [[7, "CommandMap.emptyStartAsyncCheckpointDaemon", false]], "ensureclose() (in module fileio)": [[10, "FileIO.ensureClose", false]], "entry__str__() (multitypesymentry.abstractsymentry method)": [[20, "MultiTypeSymEntry.AbstractSymEntry.entry__str__", false]], "entry__str__() (multitypesymentry.gensparsesymentry method)": [[20, "MultiTypeSymEntry.GenSparseSymEntry.entry__str__", false]], "entry__str__() (multitypesymentry.gensymentry method)": [[20, "MultiTypeSymEntry.GenSymEntry.entry__str__", false]], "entry__str__() (multitypesymentry.segstringsymentry method)": [[20, "MultiTypeSymEntry.SegStringSymEntry.entry__str__", false]], "entry__str__() (multitypesymentry.sparsesymentry method)": [[20, "MultiTypeSymEntry.SparseSymEntry.entry__str__", false]], "entry__str__() (multitypesymentry.symentry method)": [[20, "MultiTypeSymEntry.SymEntry.entry__str__", false]], "entrytype (multityperegentry.abstractregentry attribute)": [[19, "MultiTypeRegEntry.AbstractRegEntry.entryType", false]], "entrytype (multitypesymentry.abstractsymentry attribute)": [[20, "MultiTypeSymEntry.AbstractSymEntry.entryType", false]], "error() (logging.logger method)": [[14, "Logging.Logger.error", false]], "error() (message.msgtuple method)": [[16, "Message.MsgTuple.error", false]], "errorclass (servererrors.errorwithcontext attribute)": [[33, "ServerErrors.ErrorWithContext.errorClass", false]], "errormetrics (in module metricsmsg)": [[17, "MetricsMsg.errorMetrics", false]], "errormode (enum in cast)": [[3, "Cast.ErrorMode", false]], "errorwithcontext (class in servererrors)": [[33, "ServerErrors.ErrorWithContext", false]], "errorwithmsg (class in servererrorstrings)": [[32, "ServerErrorStrings.ErrorWithMsg", false]], "escaped_quotes (in module serverconfig)": [[30, "ServerConfig.ESCAPED_QUOTES", false]], "etype (multitypesymentry.generatorsymentry attribute)": [[20, "MultiTypeSymEntry.GeneratorSymEntry.etype", false]], "etype (multitypesymentry.segstringsymentry attribute)": [[20, "MultiTypeSymEntry.SegStringSymEntry.etype", false]], "etype (multitypesymentry.sparsesymentry attribute)": [[20, "MultiTypeSymEntry.SparseSymEntry.etype", false]], "etype (multitypesymentry.symentry attribute)": [[20, "MultiTypeSymEntry.SymEntry.etype", false]], "executecommand() (in module commandmap)": [[7, "CommandMap.executeCommand", false]], "exportallmetrics() (in module metricsmsg)": [[17, "MetricsMsg.exportAllMetrics", false]], "externalintegration (module)": [[9, "module-ExternalIntegration", false]], "externalintegrationserverdaemon (class in serverdaemon)": [[31, "ServerDaemon.ExternalIntegrationServerDaemon", false]], "extractrequest() (serverdaemon.arkoudaserverdaemon method)": [[31, "ServerDaemon.ArkoudaServerDaemon.extractRequest", false]], "filechannel (class in externalintegration)": [[9, "ExternalIntegration.FileChannel", false]], "fileio (module)": [[10, "module-FileIO", false]], "fileoutputhandler (class in logging)": [[14, "Logging.FileOutputHandler", false]], "filepath (logging.fileoutputhandler attribute)": [[14, "Logging.FileOutputHandler.filePath", false]], "filetype (enum in fileio)": [[10, "FileIO.FileType", false]], "fillsparsematrix() (in module sparsematrix)": [[35, "SparseMatrix.fillSparseMatrix", false]], "filluniform() (in module aryutil)": [[1, "AryUtil.fillUniform", false]], "findall() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.findAll", false]], "findallmatches() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.findAllMatches", false]], "findmatchlocations() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.findMatchLocations", false]], "findsubstringinbytes() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.findSubstringInBytes", false]], "fiologger (in module fileio)": [[10, "FileIO.fioLogger", false]], "fixes (enum in segmentedstring)": [[29, "SegmentedString.Fixes", false]], "flatten() (in module aryutil)": [[1, "AryUtil.flatten", false]], "flush() (bigintegeraggregation.dstaggregatorbigint method)": [[5, "BigIntegerAggregation.DstAggregatorBigint.flush", false]], "flush() (bigintegeraggregation.srcaggregatorbigint method)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.flush", false]], "flush() (commaggregation.dstaggregator method)": [[4, "CommAggregation.DstAggregator.flush", false]], "flush() (commaggregation.dstunorderedaggregator method)": [[4, "CommAggregation.DstUnorderedAggregator.flush", false]], "flush() (commaggregation.srcaggregator method)": [[4, "CommAggregation.SrcAggregator.flush", false]], "flush() (commaggregation.srcunorderedaggregator method)": [[4, "CommAggregation.SrcUnorderedAggregator.flush", false]], "flushbuffer() (bigintegeraggregation.dstaggregatorbigint method)": [[5, "BigIntegerAggregation.DstAggregatorBigint.flushBuffer", false]], "flushbuffer() (bigintegeraggregation.srcaggregatorbigint method)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.flushBuffer", false]], "flushbuffer() (commaggregation.dstaggregator method)": [[4, "CommAggregation.DstAggregator.flushBuffer", false]], "flushbuffer() (commaggregation.srcaggregator method)": [[4, "CommAggregation.SrcAggregator.flushBuffer", false]], "format (message.requestmsg attribute)": [[16, "Message.RequestMsg.format", false]], "formatary() (in module aryutil)": [[1, "AryUtil.formatAry", false]], "formatentry() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.formatEntry", false]], "formatjson() (in module ioutils)": [[12, "IOUtils.formatJson", false]], "fromresponses() (message.msgtuple method)": [[16, "Message.MsgTuple.fromResponses", false]], "fromscalar() (message.msgtuple method)": [[16, "Message.MsgTuple.fromScalar", false]], "function (class in arkoudapythoncompat)": [[42, "ArkoudaPythonCompat.Function", false]], "funstartasynccheckpointdaemon (in module commandmap)": [[7, "CommandMap.funStartAsyncCheckpointDaemon", false]], "gatherlongstrings() (in module segstringsort)": [[27, "SegStringSort.gatherLongStrings", false]], "generate() (spsmatutil.merge method)": [[36, "SpsMatUtil.merge.generate", false]], "generatedatetimestring() (logging.logger method)": [[14, "Logging.Logger.generateDateTimeString", false]], "generateerrorcontext() (in module servererrors)": [[33, "ServerErrors.generateErrorContext", false]], "generatefilename() (in module fileio)": [[10, "FileIO.generateFilename", false]], "generatefilenames() (in module fileio)": [[10, "FileIO.generateFilenames", false]], "generateheader() (externalintegration.httpchannel method)": [[9, "ExternalIntegration.HttpChannel.generateHeader", false]], "generateheader() (externalintegration.httpschannel method)": [[9, "ExternalIntegration.HttpsChannel.generateHeader", false]], "generatelogmessage() (logging.logger method)": [[14, "Logging.Logger.generateLogMessage", false]], "generatetoken() (in module security)": [[26, "Security.generateToken", false]], "generator (multitypesymentry.generatorsymentry attribute)": [[20, "MultiTypeSymEntry.GeneratorSymEntry.generator", false]], "generatorsymentry (class in multitypesymentry)": [[20, "MultiTypeSymEntry.GeneratorSymEntry", false]], "genlogger (in module multitypesymentry)": [[20, "MultiTypeSymEntry.genLogger", false]], "genregentry (class in multityperegentry)": [[19, "MultiTypeRegEntry.GenRegEntry", false]], "gensparsesymentry (class in multitypesymentry)": [[20, "MultiTypeSymEntry.GenSparseSymEntry", false]], "gensymentry (class in multitypesymentry)": [[20, "MultiTypeSymEntry.GenSymEntry", false]], "gensymio (module)": [[11, "module-GenSymIO", false]], "get() (commaggregation.remotebuffer method)": [[4, "CommAggregation.remoteBuffer.GET", false]], "get() (message.messageargs method)": [[16, "Message.MessageArgs.get", false]], "get() (metricsmsg.countertable method)": [[17, "MetricsMsg.CounterTable.get", false]], "get() (metricsmsg.measurementtable method)": [[17, "MetricsMsg.MeasurementTable.get", false]], "get_hostname() (in module serverconfig)": [[30, "ServerConfig.get_hostname", false]], "getaddr() (in module commprimitives)": [[6, "CommPrimitives.getAddr", false]], "getalluserrequestmetrics() (in module metricsmsg)": [[17, "MetricsMsg.getAllUserRequestMetrics", false]], "getarkoudamemalloc() (in module memorymgmt)": [[15, "MemoryMgmt.getArkoudaMemAlloc", false]], "getarkoudapid() (in module memorymgmt)": [[15, "MemoryMgmt.getArkoudaPid", false]], "getarkoudatoken() (in module security)": [[26, "Security.getArkoudaToken", false]], "getarrayspecfromentry() (in module multitypesymentry)": [[20, "MultiTypeSymEntry.getArraySpecFromEntry", false]], "getavailmemory() (in module memorymgmt)": [[15, "MemoryMgmt.getAvailMemory", false]], "getavgresponsetimemetrics() (in module metricsmsg)": [[17, "MetricsMsg.getAvgResponseTimeMetrics", false]], "getbigintvalue() (message.parameterobj method)": [[16, "Message.ParameterObj.getBigIntValue", false]], "getbitwidth() (in module aryutil)": [[1, "AryUtil.getBitWidth", false]], "getboolvalue() (message.parameterobj method)": [[16, "Message.ParameterObj.getBoolValue", false]], "getbyteorder() (in module serverconfig)": [[30, "ServerConfig.getByteorder", false]], "getchplversion() (in module serverconfig)": [[30, "ServerConfig.getChplVersion", false]], "getcommandmapmsg() (in module msgprocessing)": [[18, "MsgProcessing.getCommandMapMsg", false]], "getconfig() (in module serverconfig)": [[30, "ServerConfig.getConfig", false]], "getconfigmsg() (in module msgprocessing)": [[18, "MsgProcessing.getconfigMsg", false]], "getconnecthostip() (in module externalintegration)": [[9, "ExternalIntegration.getConnectHostIp", false]], "getconnecthostname() (in module serverconfig)": [[30, "ServerConfig.getConnectHostname", false]], "getconnecturl() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.getConnectUrl", false]], "getdaemontypes() (in module serverdaemon)": [[31, "ServerDaemon.getDaemonTypes", false]], "getdensedom() (in module arkoudasparsematrixcompat)": [[44, "ArkoudaSparseMatrixCompat.getDenseDom", false]], "getdigit() (in module aryutil)": [[1, "AryUtil.getDigit", false]], "getdtype() (message.parameterobj method)": [[16, "Message.ParameterObj.getDType", false]], "getentries() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.getEntries", false]], "getenv() (in module serverconfig)": [[30, "ServerConfig.getEnv", false]], "getenvint() (in module serverconfig)": [[30, "ServerConfig.getEnvInt", false]], "geterrorname() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.getErrorName", false]], "geterrorwithcontext() (in module servererrors)": [[33, "ServerErrors.getErrorWithContext", false]], "getfilemetadata() (in module fileio)": [[10, "FileIO.getFileMetadata", false]], "getfiletype() (in module fileio)": [[10, "FileIO.getFileType", false]], "getfiletypebymagic() (in module fileio)": [[10, "FileIO.getFileTypeByMagic", false]], "getfiletypemsg() (in module fileio)": [[10, "FileIO.getFileTypeMsg", false]], "getfirsteightbytesfromfile() (in module fileio)": [[10, "FileIO.getFirstEightBytesFromFile", false]], "getfixes() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.getFixes", false]], "getgenericsparsearrayentry() (in module multitypesymboltable)": [[21, "MultiTypeSymbolTable.getGenericSparseArrayEntry", false]], "getgenerictypedarrayentry() (in module multitypesymboltable)": [[21, "MultiTypeSymbolTable.getGenericTypedArrayEntry", false]], "getgrid() (in module sparsematrix)": [[35, "SparseMatrix.getGrid", false]], "getintvalue() (message.parameterobj method)": [[16, "Message.ParameterObj.getIntValue", false]], "getkubernetesderegisterparameters() (in module externalintegration)": [[9, "ExternalIntegration.getKubernetesDeregisterParameters", false]], "getkubernetesregistrationparameters() (in module externalintegration)": [[9, "ExternalIntegration.getKubernetesRegistrationParameters", false]], "getlengths() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.getLengths", false]], "getlinefromfile() (in module fileio)": [[10, "FileIO.getLineFromFile", false]], "getlist() (message.parameterobj method)": [[16, "Message.ParameterObj.getList", false]], "getlocalememorystatuses() (in module memorymgmt)": [[15, "MemoryMgmt.getLocaleMemoryStatuses", false]], "getlsa() (in module sparsematrix)": [[35, "SparseMatrix.getLSA", false]], "getlsd() (in module sparsematrix)": [[35, "SparseMatrix.getLSD", false]], "getmatchingfilenames() (in module fileio)": [[10, "FileIO.getMatchingFilenames", false]], "getmaxbitsmsg() (in module bigintmsg)": [[2, "BigIntMsg.getMaxBitsMsg", false]], "getmaxlocalememory() (in module metricsmsg)": [[17, "MetricsMsg.getMaxLocaleMemory", false]], "getmeasurementtotal() (metricsmsg.averagemeasurementtable method)": [[17, "MetricsMsg.AverageMeasurementTable.getMeasurementTotal", false]], "getmemavailmsg() (in module msgprocessing)": [[18, "MsgProcessing.getmemavailMsg", false]], "getmemlimit() (in module serverconfig)": [[30, "ServerConfig.getMemLimit", false]], "getmemorystatusmsg() (in module statusmsg)": [[37, "StatusMsg.getMemoryStatusMsg", false]], "getmemused() (in module serverconfig)": [[30, "ServerConfig.getMemUsed", false]], "getmemusedmsg() (in module msgprocessing)": [[18, "MsgProcessing.getmemusedMsg", false]], "getnumdigitsnumericarrays() (in module aryutil)": [[1, "AryUtil.getNumDigitsNumericArrays", false]], "getnumerrormetrics() (in module metricsmsg)": [[17, "MetricsMsg.getNumErrorMetrics", false]], "getnummeasurements() (metricsmsg.averagemeasurementtable method)": [[17, "MetricsMsg.AverageMeasurementTable.getNumMeasurements", false]], "getnumrequestmetrics() (in module metricsmsg)": [[17, "MetricsMsg.getNumRequestMetrics", false]], "getoutputhandler() (in module logging)": [[14, "Logging.getOutputHandler", false]], "getperusernumrequestmetrics() (in module metricsmsg)": [[17, "MetricsMsg.getPerUserNumRequestMetrics", false]], "getperusernumrequestspercommandforallusersmetrics() (metricsmsg.usermetrics method)": [[17, "MetricsMsg.UserMetrics.getPerUserNumRequestsPerCommandForAllUsersMetrics", false]], "getperusernumrequestspercommandmetrics() (metricsmsg.usermetrics method)": [[17, "MetricsMsg.UserMetrics.getPerUserNumRequestsPerCommandMetrics", false]], "getphysicalmemhere() (in module serverconfig)": [[30, "ServerConfig.getPhysicalMemHere", false]], "getpivot() (in module segstringsort)": [[27, "SegStringSort.getPivot", false]], "getpositiveintvalue() (message.parameterobj method)": [[16, "Message.ParameterObj.getPositiveIntValue", false]], "getrealvalue() (message.parameterobj method)": [[16, "Message.ParameterObj.getRealValue", false]], "getregistrationconfig() (in module msgprocessing)": [[18, "MsgProcessing.getRegistrationConfig", false]], "getresponsetimemetrics() (in module metricsmsg)": [[17, "MetricsMsg.getResponseTimeMetrics", false]], "getscalarvalue() (message.parameterobj method)": [[16, "Message.ParameterObj.getScalarValue", false]], "getsegstring() (in module segmentedstring)": [[29, "SegmentedString.getSegString", false]], "getsegstringentry() (in module multitypesymboltable)": [[21, "MultiTypeSymbolTable.getSegStringEntry", false]], "getserverdaemon() (in module serverdaemon)": [[31, "ServerDaemon.getServerDaemon", false]], "getserverdaemons() (in module serverdaemon)": [[31, "ServerDaemon.getServerDaemons", false]], "getserverinfo() (in module metricsmsg)": [[17, "MetricsMsg.getServerInfo", false]], "getservermetrics() (in module metricsmsg)": [[17, "MetricsMsg.getServerMetrics", false]], "getsizeestimate() (multitypesymentry.abstractsymentry method)": [[20, "MultiTypeSymEntry.AbstractSymEntry.getSizeEstimate", false]], "getsizeestimate() (multitypesymentry.gensymentry method)": [[20, "MultiTypeSymEntry.GenSymEntry.getSizeEstimate", false]], "getsizeestimate() (multitypesymentry.segstringsymentry method)": [[20, "MultiTypeSymEntry.SegStringSymEntry.getSizeEstimate", false]], "getsparsedom() (in module arkoudasparsematrixcompat)": [[44, "ArkoudaSparseMatrixCompat.getSparseDom", false]], "getsystemmetrics() (in module metricsmsg)": [[17, "MetricsMsg.getSystemMetrics", false]], "gettotalmemory() (in module memorymgmt)": [[15, "MemoryMgmt.getTotalMemory", false]], "gettotalmemoryusedmetrics() (in module metricsmsg)": [[17, "MetricsMsg.getTotalMemoryUsedMetrics", false]], "gettotalresponsetimemetrics() (in module metricsmsg)": [[17, "MetricsMsg.getTotalResponseTimeMetrics", false]], "gettuple() (message.parameterobj method)": [[16, "Message.ParameterObj.getTuple", false]], "getuint8value() (message.parameterobj method)": [[16, "Message.ParameterObj.getUInt8Value", false]], "getuintvalue() (message.parameterobj method)": [[16, "Message.ParameterObj.getUIntValue", false]], "getuser() (metricsmsg.users method)": [[17, "MetricsMsg.Users.getUser", false]], "getusermetrics() (metricsmsg.usermetrics method)": [[17, "MetricsMsg.UserMetrics.getUserMetrics", false]], "getusernames() (metricsmsg.users method)": [[17, "MetricsMsg.Users.getUserNames", false]], "getuserrequestmetrics() (in module metricsmsg)": [[17, "MetricsMsg.getUserRequestMetrics", false]], "getusers() (metricsmsg.users method)": [[17, "MetricsMsg.Users.getUsers", false]], "getvalue() (message.parameterobj method)": [[16, "Message.ParameterObj.getValue", false]], "getvalueof() (message.messageargs method)": [[16, "Message.MessageArgs.getValueOf", false]], "globexpansionmsg() (in module fileio)": [[10, "FileIO.globExpansionMsg", false]], "groupbyregentry (class in multityperegentry)": [[19, "MultiTypeRegEntry.GroupByRegEntry", false]], "gslogger (in module gensymio)": [[11, "GenSymIO.gsLogger", false]], "hdf5fileformaterror (class in servererrors)": [[33, "ServerErrors.HDF5FileFormatError", false]], "hostname (metricsmsg.localeinfo attribute)": [[17, "MetricsMsg.LocaleInfo.hostname", false]], "hostname (metricsmsg.serverinfo attribute)": [[17, "MetricsMsg.ServerInfo.hostname", false]], "httpchannel (class in externalintegration)": [[9, "ExternalIntegration.HttpChannel", false]], "httprequestformat (enum in externalintegration)": [[9, "ExternalIntegration.HttpRequestFormat", false]], "httprequesttype (enum in externalintegration)": [[9, "ExternalIntegration.HttpRequestType", false]], "httpschannel (class in externalintegration)": [[9, "ExternalIntegration.HttpsChannel", false]], "id (metricsmsg.localeinfo attribute)": [[17, "MetricsMsg.LocaleInfo.id", false]], "identity() (spsmatutil.merge method)": [[36, "SpsMatUtil.merge.identity", false]], "idleperiodstart (serverdaemon.defaultserverdaemon attribute)": [[31, "ServerDaemon.DefaultServerDaemon.idlePeriodStart", false]], "idx (multityperegentry.dataframeregentry attribute)": [[19, "MultiTypeRegEntry.DataFrameRegEntry.idx", false]], "idx (multityperegentry.indexregentry attribute)": [[19, "MultiTypeRegEntry.IndexRegEntry.idx", false]], "idx (multityperegentry.seriesregentry attribute)": [[19, "MultiTypeRegEntry.SeriesRegEntry.idx", false]], "in1d (module)": [[13, "module-In1d", false]], "in1d() (in module in1d)": [[13, "In1d.in1d", false]], "in1d() (in module segmentedstring)": [[29, "SegmentedString.in1d", false]], "in1dar2perlocassoc() (in module in1d)": [[13, "In1d.in1dAr2PerLocAssoc", false]], "in1dsort() (in module in1d)": [[13, "In1d.in1dSort", false]], "incompatibleargumentserror() (in module servererrorstrings)": [[32, "ServerErrorStrings.incompatibleArgumentsError", false]], "increment() (metricsmsg.countertable method)": [[17, "MetricsMsg.CounterTable.increment", false]], "incrementnumrequestspercommand() (metricsmsg.usermetrics method)": [[17, "MetricsMsg.UserMetrics.incrementNumRequestsPerCommand", false]], "incrementperuserrequestmetrics() (metricsmsg.usermetrics method)": [[17, "MetricsMsg.UserMetrics.incrementPerUserRequestMetrics", false]], "incrementtotalnumrequests() (metricsmsg.usermetrics method)": [[17, "MetricsMsg.UserMetrics.incrementTotalNumRequests", false]], "indexregentry (class in multityperegentry)": [[19, "MultiTypeRegEntry.IndexRegEntry", false]], "indextoorder() (aryutil.orderer method)": [[1, "AryUtil.orderer.indexToOrder", false]], "info() (logging.logger method)": [[14, "Logging.Logger.info", false]], "info() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.info", false]], "infomsg() (in module msgprocessing)": [[18, "MsgProcessing.infoMsg", false]], "init() (aryutil.lowlevellocalizingslice method)": [[1, "AryUtil.lowLevelLocalizingSlice.init", false]], "init() (aryutil.orderer method)": [[1, "AryUtil.orderer.init", false]], "init() (externalintegration.filechannel method)": [[9, "ExternalIntegration.FileChannel.init", false]], "init() (externalintegration.httpchannel method)": [[9, "ExternalIntegration.HttpChannel.init", false]], "init() (externalintegration.httpschannel method)": [[9, "ExternalIntegration.HttpsChannel.init", false]], "init() (logging.fileoutputhandler method)": [[14, "Logging.FileOutputHandler.init", false]], "init() (logging.logger method)": [[14, "Logging.Logger.init", false]], "init() (message.messageargs method)": [[16, "Message.MessageArgs.init", false]], "init() (message.msgtuple method)": [[16, "Message.MsgTuple.init", false]], "init() (message.parameterobj method)": [[16, "Message.ParameterObj.init", false]], "init() (metricsmsg.arraymetric method)": [[17, "MetricsMsg.ArrayMetric.init", false]], "init() (metricsmsg.localemetric method)": [[17, "MetricsMsg.LocaleMetric.init", false]], "init() (metricsmsg.metric method)": [[17, "MetricsMsg.Metric.init", false]], "init() (metricsmsg.metricvalue method)": [[17, "MetricsMsg.MetricValue.init", false]], "init() (metricsmsg.serverinfo method)": [[17, "MetricsMsg.ServerInfo.init", false]], "init() (metricsmsg.usermetric method)": [[17, "MetricsMsg.UserMetric.init", false]], "init() (multityperegentry.abstractregentry method)": [[19, "MultiTypeRegEntry.AbstractRegEntry.init", false]], "init() (multityperegentry.arrayregentry method)": [[19, "MultiTypeRegEntry.ArrayRegEntry.init", false]], "init() (multityperegentry.bitvectorregentry method)": [[19, "MultiTypeRegEntry.BitVectorRegEntry.init", false]], "init() (multityperegentry.categoricalregentry method)": [[19, "MultiTypeRegEntry.CategoricalRegEntry.init", false]], "init() (multityperegentry.dataframeregentry method)": [[19, "MultiTypeRegEntry.DataFrameRegEntry.init", false]], "init() (multityperegentry.genregentry method)": [[19, "MultiTypeRegEntry.GenRegEntry.init", false]], "init() (multityperegentry.groupbyregentry method)": [[19, "MultiTypeRegEntry.GroupByRegEntry.init", false]], "init() (multityperegentry.indexregentry method)": [[19, "MultiTypeRegEntry.IndexRegEntry.init", false]], "init() (multityperegentry.segarrayregentry method)": [[19, "MultiTypeRegEntry.SegArrayRegEntry.init", false]], "init() (multityperegentry.seriesregentry method)": [[19, "MultiTypeRegEntry.SeriesRegEntry.init", false]], "init() (multitypesymentry.abstractsymentry method)": [[20, "MultiTypeSymEntry.AbstractSymEntry.init", false]], "init() (multitypesymentry.compositesymentry method)": [[20, "MultiTypeSymEntry.CompositeSymEntry.init", false]], "init() (multitypesymentry.generatorsymentry method)": [[20, "MultiTypeSymEntry.GeneratorSymEntry.init", false]], "init() (multitypesymentry.gensparsesymentry method)": [[20, "MultiTypeSymEntry.GenSparseSymEntry.init", false]], "init() (multitypesymentry.gensymentry method)": [[20, "MultiTypeSymEntry.GenSymEntry.init", false]], "init() (multitypesymentry.segstringsymentry method)": [[20, "MultiTypeSymEntry.SegStringSymEntry.init", false]], "init() (multitypesymentry.sparsesymentry method)": [[20, "MultiTypeSymEntry.SparseSymEntry.init", false]], "init() (multitypesymentry.symentry method)": [[20, "MultiTypeSymEntry.SymEntry.init", false]], "init() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.init", false]], "init() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.init", false]], "init() (serverdaemon.metricsserverdaemon method)": [[31, "ServerDaemon.MetricsServerDaemon.init", false]], "init() (serverdaemon.serverstatusdaemon method)": [[31, "ServerDaemon.ServerStatusDaemon.init", false]], "init() (servererrors.argumenterror method)": [[33, "ServerErrors.ArgumentError.init", false]], "init() (servererrors.configurationerror method)": [[33, "ServerErrors.ConfigurationError.init", false]], "init() (servererrors.datasetnotfounderror method)": [[33, "ServerErrors.DatasetNotFoundError.init", false]], "init() (servererrors.errorwithcontext method)": [[33, "ServerErrors.ErrorWithContext.init", false]], "init() (servererrors.hdf5fileformaterror method)": [[33, "ServerErrors.HDF5FileFormatError.init", false]], "init() (servererrors.ioerror method)": [[33, "ServerErrors.IOError.init", false]], "init() (servererrors.mismatchedappenderror method)": [[33, "ServerErrors.MismatchedAppendError.init", false]], "init() (servererrors.nothdf5fileerror method)": [[33, "ServerErrors.NotHDF5FileError.init", false]], "init() (servererrors.notimplementederror method)": [[33, "ServerErrors.NotImplementedError.init", false]], "init() (servererrors.overmemorylimiterror method)": [[33, "ServerErrors.OverMemoryLimitError.init", false]], "init() (servererrors.segstringerror method)": [[33, "ServerErrors.SegStringError.init", false]], "init() (servererrors.unknownsymbolerror method)": [[33, "ServerErrors.UnknownSymbolError.init", false]], "init() (servererrors.unsupportedoserror method)": [[33, "ServerErrors.UnsupportedOSError.init", false]], "init() (servererrors.writemodeerror method)": [[33, "ServerErrors.WriteModeError.init", false]], "initarkoudadirectory() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.initArkoudaDirectory", false]], "initdirectory() (in module fileio)": [[10, "FileIO.initDirectory", false]], "insert() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.insert", false]], "integrationenabled() (in module serverdaemon)": [[31, "ServerDaemon.integrationEnabled", false]], "interpretasbytes() (in module segmentedstring)": [[29, "SegmentedString.interpretAsBytes", false]], "interpretasstring() (in module segmentedstring)": [[29, "SegmentedString.interpretAsString", false]], "interpreter (class in arkoudapythoncompat)": [[42, "ArkoudaPythonCompat.Interpreter", false]], "inttotal (metricsmsg.avgmetricvalue attribute)": [[17, "MetricsMsg.AvgMetricValue.intTotal", false]], "intvalue (metricsmsg.metricvalue attribute)": [[17, "MetricsMsg.MetricValue.intValue", false]], "ioerror (class in servererrors)": [[33, "ServerErrors.IOError", false]], "ioutils (module)": [[12, "module-IOUtils", false]], "isalnum() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.isalnum", false]], "isalpha() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.isalpha", false]], "isassignableto() (multitypesymentry.abstractsymentry method)": [[20, "MultiTypeSymEntry.AbstractSymEntry.isAssignableTo", false]], "isdecimal() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.isDecimal", false]], "isdigit() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.isdigit", false]], "isempty() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.isempty", false]], "isglobpattern() (in module fileio)": [[10, "FileIO.isGlobPattern", false]], "islower() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.isLower", false]], "ismemavailable() (in module memorymgmt)": [[15, "MemoryMgmt.isMemAvailable", false]], "isnumeric() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.isNumeric", false]], "isnumericchar() (in module segmentedstring)": [[29, "SegmentedString.isNumericChar", false]], "isnumericstring() (in module segmentedstring)": [[29, "SegmentedString.isNumericString", false]], "isowned (aryutil.lowlevellocalizingslice attribute)": [[1, "AryUtil.lowLevelLocalizingSlice.isOwned", false]], "issorted() (in module aryutil)": [[1, "AryUtil.isSorted", false]], "issorted() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.isSorted", false]], "issortedover() (in module aryutil)": [[1, "AryUtil.isSortedOver", false]], "isspace() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.isspace", false]], "issupportedos() (in module memorymgmt)": [[15, "MemoryMgmt.isSupportedOS", false]], "istitle() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.isTitle", false]], "isupper() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.isUpper", false]], "items() (metricsmsg.countertable iterator)": [[17, "MetricsMsg.CounterTable.items", false]], "items() (metricsmsg.measurementtable iterator)": [[17, "MetricsMsg.MeasurementTable.items", false]], "itemsize (multitypesymentry.gensparsesymentry attribute)": [[20, "MultiTypeSymEntry.GenSparseSymEntry.itemsize", false]], "itemsize (multitypesymentry.gensymentry attribute)": [[20, "MultiTypeSymEntry.GenSymEntry.itemsize", false]], "jsontoarray() (in module ioutils)": [[12, "IOUtils.jsonToArray", false]], "jsontomap() (in module gensymio)": [[11, "GenSymIO.jsonToMap", false]], "key (message.parameterobj attribute)": [[16, "Message.ParameterObj.key", false]], "key() (radixsortlsd.keyscomparator method)": [[24, "RadixSortLSD.KeysComparator.key", false]], "key() (radixsortlsd.keysrankscomparator method)": [[24, "RadixSortLSD.KeysRanksComparator.key", false]], "keypart() (segstringsort.stringintcomparator method)": [[27, "SegStringSort.StringIntComparator.keyPart", false]], "keys (multityperegentry.groupbyregentry attribute)": [[19, "MultiTypeRegEntry.GroupByRegEntry.keys", false]], "keyscomparator (record in radixsortlsd)": [[24, "RadixSortLSD.KeysComparator", false]], "keysrankscomparator (record in radixsortlsd)": [[24, "RadixSortLSD.KeysRanksComparator", false]], "lastlocale (bigintegeraggregation.dstaggregatorbigint attribute)": [[5, "BigIntegerAggregation.DstAggregatorBigint.lastLocale", false]], "lastlocale (bigintegeraggregation.srcaggregatorbigint attribute)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.lastLocale", false]], "lastlocale (commaggregation.dstaggregator attribute)": [[4, "CommAggregation.DstAggregator.lastLocale", false]], "lastlocale (commaggregation.srcaggregator attribute)": [[4, "CommAggregation.SrcAggregator.lastLocale", false]], "layout (enum in spsmatutil)": [[36, "SpsMatUtil.Layout", false]], "layoutstr (multitypesymentry.gensparsesymentry attribute)": [[20, "MultiTypeSymEntry.GenSparseSymEntry.layoutStr", false]], "layouttostr() (in module multitypesymentry)": [[20, "MultiTypeSymEntry.layoutToStr", false]], "lbuffers (bigintegeraggregation.dstaggregatorbigint attribute)": [[5, "BigIntegerAggregation.DstAggregatorBigint.lBuffers", false]], "lbuffers (commaggregation.dstaggregator attribute)": [[4, "CommAggregation.DstAggregator.lBuffers", false]], "lengths (multityperegentry.segarrayregentry attribute)": [[19, "MultiTypeRegEntry.SegArrayRegEntry.lengths", false]], "level (logging.logger attribute)": [[14, "Logging.Logger.level", false]], "linenumber (servererrors.errorwithcontext attribute)": [[33, "ServerErrors.ErrorWithContext.lineNumber", false]], "list_registry() (registry.regtab method)": [[25, "Registry.RegTab.list_registry", false]], "loc (commaggregation.remotebuffer attribute)": [[4, "CommAggregation.remoteBuffer.loc", false]], "locale_hostname (memorymgmt.localememorystatus attribute)": [[15, "MemoryMgmt.LocaleMemoryStatus.locale_hostname", false]], "locale_hostname (metricsmsg.localemetric attribute)": [[17, "MetricsMsg.LocaleMetric.locale_hostname", false]], "locale_id (memorymgmt.localememorystatus attribute)": [[15, "MemoryMgmt.LocaleMemoryStatus.locale_id", false]], "locale_name (metricsmsg.localemetric attribute)": [[17, "MetricsMsg.LocaleMetric.locale_name", false]], "locale_num (metricsmsg.localemetric attribute)": [[17, "MetricsMsg.LocaleMetric.locale_num", false]], "localeinfo (class in metricsmsg)": [[17, "MetricsMsg.LocaleInfo", false]], "localememavailable() (in module memorymgmt)": [[15, "MemoryMgmt.localeMemAvailable", false]], "localememorystatus (record in memorymgmt)": [[15, "MemoryMgmt.LocaleMemoryStatus", false]], "localemetric (class in metricsmsg)": [[17, "MetricsMsg.LocaleMetric", false]], "locales (metricsmsg.serverinfo attribute)": [[17, "MetricsMsg.ServerInfo.locales", false]], "localfree() (commaggregation.remotebuffer method)": [[4, "CommAggregation.remoteBuffer.localFree", false]], "localiter() (commaggregation.remotebuffer iterator)": [[4, "CommAggregation.remoteBuffer.localIter", false]], "logchannel (enum in logging)": [[14, "Logging.LogChannel", false]], "logchannel (in module serverconfig)": [[30, "ServerConfig.logChannel", false]], "logcommands (in module serverconfig)": [[30, "ServerConfig.logCommands", false]], "logger (class in logging)": [[14, "Logging.Logger", false]], "logging (module)": [[14, "module-Logging", false]], "loglevel (enum in logging)": [[14, "Logging.LogLevel", false]], "loglevel (in module serverconfig)": [[30, "ServerConfig.logLevel", false]], "lookup() (registry.regtab method)": [[25, "Registry.RegTab.lookup", false]], "lower() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.lower", false]], "lowlevellocalizingslice (record in aryutil)": [[1, "AryUtil.lowLevelLocalizingSlice", false]], "lsanymsg() (in module fileio)": [[10, "FileIO.lsAnyMsg", false]], "lsrcaddrs (bigintegeraggregation.srcaggregatorbigint attribute)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.lSrcAddrs", false]], "lsrcaddrs (commaggregation.srcaggregator attribute)": [[4, "CommAggregation.SrcAggregator.lSrcAddrs", false]], "lsrcvals (bigintegeraggregation.srcaggregatorbigint attribute)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.lSrcVals", false]], "lsrcvals (commaggregation.srcaggregator attribute)": [[4, "CommAggregation.SrcAggregator.lSrcVals", false]], "magic_arrow (in module fileio)": [[10, "FileIO.MAGIC_ARROW", false]], "magic_csv (in module fileio)": [[10, "FileIO.MAGIC_CSV", false]], "magic_hdf5 (in module fileio)": [[10, "FileIO.MAGIC_HDF5", false]], "magic_parquet (in module fileio)": [[10, "FileIO.MAGIC_PARQUET", false]], "main() (in module arkouda_server)": [[40, "arkouda_server.main", false]], "makearrayfrombytes() (in module gensymio)": [[11, "GenSymIO.makeArrayFromBytes", false]], "makedistarray() (in module symarraydmap)": [[38, "SymArrayDmap.makeDistArray", false]], "makedistdom() (in module symarraydmap)": [[38, "SymArrayDmap.makeDistDom", false]], "makedistdomtype() (in module symarraydmap)": [[38, "SymArrayDmap.makeDistDomType", false]], "makesparsearray() (in module symarraydmap)": [[38, "SymArrayDmap.makeSparseArray", false]], "makesparsedomain() (in module symarraydmap)": [[38, "SymArrayDmap.makeSparseDomain", false]], "makesparsemat() (in module spsmatutil)": [[36, "SpsMatUtil.makeSparseMat", false]], "markfreed() (commaggregation.remotebuffer method)": [[4, "CommAggregation.remoteBuffer.markFreed", false]], "matlayout (multitypesymentry.sparsesymentry attribute)": [[20, "MultiTypeSymEntry.SparseSymEntry.matLayout", false]], "max_bits (multitypesymentry.symentry attribute)": [[20, "MultiTypeSymEntry.SymEntry.max_bits", false]], "max_number_of_tasks (metricsmsg.localeinfo attribute)": [[17, "MetricsMsg.LocaleInfo.max_number_of_tasks", false]], "measurements (metricsmsg.measurementtable attribute)": [[17, "MetricsMsg.MeasurementTable.measurements", false]], "measurementtable (class in metricsmsg)": [[17, "MetricsMsg.MeasurementTable", false]], "measurementtotals (metricsmsg.averagemeasurementtable attribute)": [[17, "MetricsMsg.AverageMeasurementTable.measurementTotals", false]], "mem_used (memorymgmt.localememorystatus attribute)": [[15, "MemoryMgmt.LocaleMemoryStatus.mem_used", false]], "memcmp() (in module segmentedstring)": [[29, "SegmentedString.memcmp", false]], "memhighwater (in module serverconfig)": [[30, "ServerConfig.memHighWater", false]], "memmgmttype (enum in memorymgmt)": [[15, "MemoryMgmt.MemMgmtType", false]], "memmgmttype (in module memorymgmt)": [[15, "MemoryMgmt.memMgmtType", false]], "memorymgmt (module)": [[15, "module-MemoryMgmt", false]], "memused() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.memUsed", false]], "merge (class in spsmatutil)": [[36, "SpsMatUtil.merge", false]], "mergenumericarrays() (in module aryutil)": [[1, "AryUtil.mergeNumericArrays", false]], "message (module)": [[16, "module-Message", false]], "messageargs (class in message)": [[16, "Message.MessageArgs", false]], "metric (class in metricsmsg)": [[17, "MetricsMsg.Metric", false]], "metriccategory (enum in metricsmsg)": [[17, "MetricsMsg.MetricCategory", false]], "metricdatatype (enum in metricsmsg)": [[17, "MetricsMsg.MetricDataType", false]], "metrics (metricsmsg.usermetrics attribute)": [[17, "MetricsMsg.UserMetrics.metrics", false]], "metricscope (enum in metricsmsg)": [[17, "MetricsMsg.MetricScope", false]], "metricscope (in module metricsmsg)": [[17, "MetricsMsg.metricScope", false]], "metricsenabled() (in module serverdaemon)": [[31, "ServerDaemon.metricsEnabled", false]], "metricsmsg (module)": [[17, "module-MetricsMsg", false]], "metricsmsg() (in module metricsmsg)": [[17, "MetricsMsg.metricsMsg", false]], "metricsserverdaemon (class in serverdaemon)": [[31, "ServerDaemon.MetricsServerDaemon", false]], "metricvalue (class in metricsmsg)": [[17, "MetricsMsg.MetricValue", false]], "mismatchedappenderror (class in servererrors)": [[33, "ServerErrors.MismatchedAppendError", false]], "mlogger (in module metricsmsg)": [[17, "MetricsMsg.mLogger", false]], "mmlogger (in module memorymgmt)": [[15, "MemoryMgmt.mmLogger", false]], "module (class in arkoudapythoncompat)": [[42, "ArkoudaPythonCompat.Module", false]], "modulemap (in module commandmap)": [[7, "CommandMap.moduleMap", false]], "modulename (servererrors.errorwithcontext attribute)": [[33, "ServerErrors.ErrorWithContext.moduleName", false]], "mplogger (in module msgprocessing)": [[18, "MsgProcessing.mpLogger", false]], "msg (message.msgtuple attribute)": [[16, "Message.MsgTuple.msg", false]], "msg (servererrorstrings.errorwithmsg attribute)": [[32, "ServerErrorStrings.ErrorWithMsg.msg", false]], "msgformat (enum in message)": [[16, "Message.MsgFormat", false]], "msgformat (message.msgtuple attribute)": [[16, "Message.MsgTuple.msgFormat", false]], "msgprocessing (module)": [[18, "module-MsgProcessing", false]], "msgtuple (record in message)": [[16, "Message.MsgTuple", false]], "msgtype (enum in message)": [[16, "Message.MsgType", false]], "msgtype (message.msgtuple attribute)": [[16, "Message.MsgTuple.msgType", false]], "mtlogger (in module multitypesymboltable)": [[21, "MultiTypeSymbolTable.mtLogger", false]], "multipleserverdaemons() (in module serverdaemon)": [[31, "ServerDaemon.multipleServerDaemons", false]], "multityperegentry (module)": [[19, "module-MultiTypeRegEntry", false]], "multitypesymboltable (module)": [[21, "module-MultiTypeSymbolTable", false]], "multitypesymentry (module)": [[20, "module-MultiTypeSymEntry", false]], "mydmap (in module symarraydmap)": [[38, "SymArrayDmap.MyDmap", false]], "mylocalespace (bigintegeraggregation.dstaggregatorbigint attribute)": [[5, "BigIntegerAggregation.DstAggregatorBigint.myLocaleSpace", false]], "mylocalespace (bigintegeraggregation.srcaggregatorbigint attribute)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.myLocaleSpace", false]], "mylocalespace (commaggregation.dstaggregator attribute)": [[4, "CommAggregation.DstAggregator.myLocaleSpace", false]], "mylocalespace (commaggregation.srcaggregator attribute)": [[4, "CommAggregation.SrcAggregator.myLocaleSpace", false]], "nacode (multityperegentry.categoricalregentry attribute)": [[19, "MultiTypeRegEntry.CategoricalRegEntry.naCode", false]], "name (metricsmsg.localeinfo attribute)": [[17, "MetricsMsg.LocaleInfo.name", false]], "name (metricsmsg.metric attribute)": [[17, "MetricsMsg.Metric.name", false]], "name (metricsmsg.user attribute)": [[17, "MetricsMsg.User.name", false]], "name (multityperegentry.abstractregentry attribute)": [[19, "MultiTypeRegEntry.AbstractRegEntry.name", false]], "name (multitypesymentry.abstractsymentry attribute)": [[20, "MultiTypeSymEntry.AbstractSymEntry.name", false]], "name (segmentedstring.segstring attribute)": [[29, "SegmentedString.SegString.name", false]], "nbytes (segmentedstring.segstring attribute)": [[29, "SegmentedString.SegString.nBytes", false]], "ndim (multitypesymentry.compositesymentry attribute)": [[20, "MultiTypeSymEntry.CompositeSymEntry.ndim", false]], "ndim (multitypesymentry.gensparsesymentry attribute)": [[20, "MultiTypeSymEntry.GenSparseSymEntry.ndim", false]], "ndim (multitypesymentry.gensymentry attribute)": [[20, "MultiTypeSymEntry.GenSymEntry.ndim", false]], "newdstaggregator() (in module commaggregation)": [[4, "CommAggregation.newDstAggregator", false]], "newsrcaggregator() (in module commaggregation)": [[4, "CommAggregation.newSrcAggregator", false]], "newsymbol() (message.msgtuple method)": [[16, "Message.MsgTuple.newSymbol", false]], "nextname() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.nextName", false]], "nid (multitypesymboltable.symtab attribute)": [[21, "MultiTypeSymbolTable.SymTab.nid", false]], "nnz (multitypesymentry.gensparsesymentry attribute)": [[20, "MultiTypeSymEntry.GenSparseSymEntry.nnz", false]], "nothdf5fileerror (class in servererrors)": [[33, "ServerErrors.NotHDF5FileError", false]], "notimplementederror (class in servererrors)": [[33, "ServerErrors.NotImplementedError", false]], "notimplementederror() (in module servererrorstrings)": [[32, "ServerErrorStrings.notImplementedError", false]], "null_strings_value (in module gensymio)": [[11, "GenSymIO.NULL_STRINGS_VALUE", false]], "null_strings_value (in module segmentedstring)": [[29, "SegmentedString.NULL_STRINGS_VALUE", false]], "number_of_locales (metricsmsg.serverinfo attribute)": [[17, "MetricsMsg.ServerInfo.number_of_locales", false]], "number_of_processing_units (metricsmsg.localeinfo attribute)": [[17, "MetricsMsg.LocaleInfo.number_of_processing_units", false]], "numericunicodes (module)": [[23, "module-NumericUnicodes", false]], "nummeasurements (metricsmsg.averagemeasurementtable attribute)": [[17, "MetricsMsg.AverageMeasurementTable.numMeasurements", false]], "numpydtype (module)": [[22, "module-NumPyDType", false]], "numtasks (in module radixsortlsd)": [[24, "RadixSortLSD.numTasks", false]], "numvalues (metricsmsg.avgmetricvalue attribute)": [[17, "MetricsMsg.AvgMetricValue.numValues", false]], "objtype (enum in serverconfig)": [[30, "ServerConfig.ObjType", false]], "objtype (multityperegentry.genregentry attribute)": [[19, "MultiTypeRegEntry.GenRegEntry.objType", false]], "offset() (in module aryutil)": [[1, "AryUtil.offset", false]], "offsets (segmentedstring.segstring attribute)": [[29, "SegmentedString.SegString.offsets", false]], "offsetsentry (multitypesymentry.segstringsymentry attribute)": [[20, "MultiTypeSymEntry.SegStringSymEntry.offsetsEntry", false]], "opsuntilyield (bigintegeraggregation.dstaggregatorbigint attribute)": [[5, "BigIntegerAggregation.DstAggregatorBigint.opsUntilYield", false]], "opsuntilyield (bigintegeraggregation.srcaggregatorbigint attribute)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.opsUntilYield", false]], "opsuntilyield (commaggregation.dstaggregator attribute)": [[4, "CommAggregation.DstAggregator.opsUntilYield", false]], "opsuntilyield (commaggregation.srcaggregator attribute)": [[4, "CommAggregation.SrcAggregator.opsUntilYield", false]], "orderer (record in aryutil)": [[1, "AryUtil.orderer", false]], "outofboundserror (class in servererrors)": [[33, "ServerErrors.OutOfBoundsError", false]], "outputhandler (class in logging)": [[14, "Logging.OutputHandler", false]], "outputhandler (logging.logger attribute)": [[14, "Logging.Logger.outputHandler", false]], "overmemlimit() (in module serverconfig)": [[30, "ServerConfig.overMemLimit", false]], "overmemorylimiterror (class in servererrors)": [[33, "ServerErrors.OverMemoryLimitError", false]], "param_list (message.messageargs attribute)": [[16, "Message.MessageArgs.param_list", false]], "parameterobj (record in message)": [[16, "Message.ParameterObj", false]], "parsejson() (in module ioutils)": [[12, "IOUtils.parseJson", false]], "parsejson() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.parseJson", false]], "parsemessageargs() (in module message)": [[16, "Message.parseMessageArgs", false]], "parseparameter() (in module message)": [[16, "Message.parseParameter", false]], "path (externalintegration.filechannel attribute)": [[9, "ExternalIntegration.FileChannel.path", false]], "payload (message.messageargs attribute)": [[16, "Message.MessageArgs.payload", false]], "payload (message.msgtuple attribute)": [[16, "Message.MsgTuple.payload", false]], "payload() (message.msgtuple method)": [[16, "Message.MsgTuple.payload", false]], "pct_avail_mem (memorymgmt.localememorystatus attribute)": [[15, "MemoryMgmt.LocaleMemoryStatus.pct_avail_mem", false]], "peel() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.peel", false]], "peelregex() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.peelRegex", false]], "perlocalememlimit (in module serverconfig)": [[30, "ServerConfig.perLocaleMemLimit", false]], "permutation (multityperegentry.categoricalregentry attribute)": [[19, "MultiTypeRegEntry.CategoricalRegEntry.permutation", false]], "permutation (multityperegentry.groupbyregentry attribute)": [[19, "MultiTypeRegEntry.GroupByRegEntry.permutation", false]], "physical_memory (metricsmsg.localeinfo attribute)": [[17, "MetricsMsg.LocaleInfo.physical_memory", false]], "port (serverdaemon.arkoudaserverdaemon attribute)": [[31, "ServerDaemon.ArkoudaServerDaemon.port", false]], "postinit() (bigintegeraggregation.dstaggregatorbigint method)": [[5, "BigIntegerAggregation.DstAggregatorBigint.postinit", false]], "postinit() (bigintegeraggregation.srcaggregatorbigint method)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.postinit", false]], "postinit() (commaggregation.dstaggregator method)": [[4, "CommAggregation.DstAggregator.postinit", false]], "postinit() (commaggregation.srcaggregator method)": [[4, "CommAggregation.SrcAggregator.postinit", false]], "pretty() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.pretty", false]], "printary() (in module aryutil)": [[1, "AryUtil.printAry", false]], "printdate (logging.logger attribute)": [[14, "Logging.Logger.printDate", false]], "printownership() (in module aryutil)": [[1, "AryUtil.printOwnership", false]], "printserversplashmessage() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.printServerSplashMessage", false]], "printthresh (in module aryutil)": [[1, "AryUtil.printThresh", false]], "processerrormessagemetrics() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.processErrorMessageMetrics", false]], "processmetrics() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.processMetrics", false]], "ptr (aryutil.lowlevellocalizingslice attribute)": [[1, "AryUtil.lowLevelLocalizingSlice.ptr", false]], "publish() (servererrors.errorwithcontext method)": [[33, "ServerErrors.ErrorWithContext.publish", false]], "publishmsg (servererrors.errorwithcontext attribute)": [[33, "ServerErrors.ErrorWithContext.publishMsg", false]], "put() (commaggregation.remotebuffer method)": [[4, "CommAggregation.remoteBuffer.PUT", false]], "pythonmodulesupported() (in module arkoudapythoncompat)": [[42, "ArkoudaPythonCompat.pythonModuleSupported", false]], "pythonversion (in module serverconfig)": [[30, "ServerConfig.pythonVersion", false]], "pythonversionstring() (in module arkoudapythoncompat)": [[42, "ArkoudaPythonCompat.pythonVersionString", false]], "q (in module serverconfig)": [[30, "ServerConfig.Q", false]], "qcq (in module serverconfig)": [[30, "ServerConfig.QCQ", false]], "radixsortlsd (module)": [[24, "module-RadixSortLSD", false]], "radixsortlsd() (in module radixsortlsd)": [[24, "RadixSortLSD.radixSortLSD", false]], "radixsortlsd_keys() (in module radixsortlsd)": [[24, "RadixSortLSD.radixSortLSD_keys", false]], "radixsortlsd_keys_memest() (in module radixsortlsd)": [[24, "RadixSortLSD.radixSortLSD_keys_memEst", false]], "radixsortlsd_memest() (in module radixsortlsd)": [[24, "RadixSortLSD.radixSortLSD_memEst", false]], "radixsortlsd_ranks() (in module radixsortlsd)": [[24, "RadixSortLSD.radixSortLSD_ranks", false]], "radixsortlsd_raw() (in module segstringsort)": [[27, "SegStringSort.radixSortLSD_raw", false]], "rands (in module spsmatutil)": [[36, "SpsMatUtil.rands", false]], "randsparsematrix() (in module sparsematrix)": [[35, "SparseMatrix.randSparseMatrix", false]], "rank (aryutil.orderer attribute)": [[1, "AryUtil.orderer.rank", false]], "rbuffers (bigintegeraggregation.dstaggregatorbigint attribute)": [[5, "BigIntegerAggregation.DstAggregatorBigint.rBuffers", false]], "rbuffers (commaggregation.dstaggregator attribute)": [[4, "CommAggregation.DstAggregator.rBuffers", false]], "realtotal (metricsmsg.avgmetricvalue attribute)": [[17, "MetricsMsg.AvgMetricValue.realTotal", false]], "realvalue (metricsmsg.metricvalue attribute)": [[17, "MetricsMsg.MetricValue.realValue", false]], "reducedshape() (in module aryutil)": [[1, "AryUtil.reducedShape", false]], "regexmaxcaptures (in module serverconfig)": [[30, "ServerConfig.regexMaxCaptures", false]], "register() (in module serverdaemon)": [[31, "ServerDaemon.register", false]], "register_array() (registry.regtab method)": [[25, "Registry.RegTab.register_array", false]], "register_bitvector() (registry.regtab method)": [[25, "Registry.RegTab.register_bitvector", false]], "register_categorical() (registry.regtab method)": [[25, "Registry.RegTab.register_categorical", false]], "register_categorical_components() (registry.regtab method)": [[25, "Registry.RegTab.register_categorical_components", false]], "register_dataframe() (registry.regtab method)": [[25, "Registry.RegTab.register_dataframe", false]], "register_groupby() (registry.regtab method)": [[25, "Registry.RegTab.register_groupby", false]], "register_index() (registry.regtab method)": [[25, "Registry.RegTab.register_index", false]], "register_index_components() (registry.regtab method)": [[25, "Registry.RegTab.register_index_components", false]], "register_segarray() (registry.regtab method)": [[25, "Registry.RegTab.register_segarray", false]], "register_segarray_components() (registry.regtab method)": [[25, "Registry.RegTab.register_segarray_components", false]], "register_series() (registry.regtab method)": [[25, "Registry.RegTab.register_series", false]], "registered_entries (registry.regtab attribute)": [[25, "Registry.RegTab.registered_entries", false]], "registerfunction() (in module commandmap)": [[7, "CommandMap.registerFunction", false]], "registerservercommands() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.registerServerCommands", false]], "registerwithexternalsystem() (in module externalintegration)": [[9, "ExternalIntegration.registerWithExternalSystem", false]], "registerwithkubernetes() (in module externalintegration)": [[9, "ExternalIntegration.registerWithKubernetes", false]], "registrationconfig (module)": [[46, "module-RegistrationConfig", false]], "registrationconfigspec (in module registrationconfig)": [[46, "RegistrationConfig.registrationConfigSpec", false]], "registry (module)": [[25, "module-Registry", false]], "registry (multitypesymboltable.symtab attribute)": [[21, "MultiTypeSymbolTable.SymTab.registry", false]], "registryentrytype (enum in multityperegentry)": [[19, "MultiTypeRegEntry.RegistryEntryType", false]], "reglogger (in module multityperegentry)": [[19, "MultiTypeRegEntry.regLogger", false]], "reglogger (in module registry)": [[25, "Registry.regLogger", false]], "regtab (class in registry)": [[25, "Registry.RegTab", false]], "remotebuffer (record in commaggregation)": [[4, "CommAggregation.remoteBuffer", false]], "removeaxis() (in module aryutil)": [[1, "AryUtil.removeAxis", false]], "removedegenranks() (in module aryutil)": [[1, "AryUtil.removeDegenRanks", false]], "removedependents() (multitypesymentry.abstractsymentry method)": [[20, "MultiTypeSymEntry.AbstractSymEntry.removeDependents", false]], "removedependents() (multitypesymentry.segstringsymentry method)": [[20, "MultiTypeSymEntry.SegStringSymEntry.removeDependents", false]], "repcount (serverdaemon.defaultserverdaemon attribute)": [[31, "ServerDaemon.DefaultServerDaemon.repCount", false]], "report() (logging.logger method)": [[14, "Logging.Logger.report", false]], "reprmsg() (in module msgprocessing)": [[18, "MsgProcessing.reprMsg", false]], "reqcount (serverdaemon.defaultserverdaemon attribute)": [[31, "ServerDaemon.DefaultServerDaemon.reqCount", false]], "requestformat (externalintegration.httpchannel attribute)": [[9, "ExternalIntegration.HttpChannel.requestFormat", false]], "requestmetrics (in module metricsmsg)": [[17, "MetricsMsg.requestMetrics", false]], "requestmsg (record in message)": [[16, "Message.RequestMsg", false]], "requestshutdown() (serverdaemon.arkoudaserverdaemon method)": [[31, "ServerDaemon.ArkoudaServerDaemon.requestShutdown", false]], "requestshutdown() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.requestShutdown", false]], "requesttype (externalintegration.httpchannel attribute)": [[9, "ExternalIntegration.HttpChannel.requestType", false]], "requiredmodules (in module commandmap)": [[7, "CommandMap.requiredModules", false]], "responsetimemetrics (in module metricsmsg)": [[17, "MetricsMsg.responseTimeMetrics", false]], "reverse (multityperegentry.bitvectorregentry attribute)": [[19, "MultiTypeRegEntry.BitVectorRegEntry.reverse", false]], "routinename (servererrors.errorwithcontext attribute)": [[33, "ServerErrors.ErrorWithContext.routineName", false]], "rowmajorexscan() (in module sparsematrix)": [[35, "SparseMatrix.rowMajorExScan", false]], "rslogger (in module radixsortlsd)": [[24, "RadixSortLSD.rsLogger", false]], "rslsd_bitsperdigit (in module serverconfig)": [[30, "ServerConfig.RSLSD_bitsPerDigit", false]], "rslsd_numtasks (in module radixsortlsd)": [[24, "RadixSortLSD.RSLSD_numTasks", false]], "rslsd_vv (in module radixsortlsd)": [[24, "RadixSortLSD.RSLSD_vv", false]], "rsrcaddrs (bigintegeraggregation.srcaggregatorbigint attribute)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.rSrcAddrs", false]], "rsrcaddrs (commaggregation.srcaggregator attribute)": [[4, "CommAggregation.SrcAggregator.rSrcAddrs", false]], "rsrcvals (bigintegeraggregation.srcaggregatorbigint attribute)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.rSrcVals", false]], "rsrcvals (commaggregation.srcaggregator attribute)": [[4, "CommAggregation.SrcAggregator.rSrcVals", false]], "run() (serverdaemon.arkoudaserverdaemon method)": [[31, "ServerDaemon.ArkoudaServerDaemon.run", false]], "run() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.run", false]], "run() (serverdaemon.externalintegrationserverdaemon method)": [[31, "ServerDaemon.ExternalIntegrationServerDaemon.run", false]], "run() (serverdaemon.metricsserverdaemon method)": [[31, "ServerDaemon.MetricsServerDaemon.run", false]], "run() (serverdaemon.serverstatusdaemon method)": [[31, "ServerDaemon.ServerStatusDaemon.run", false]], "saveusedmodules (in module serverconfig)": [[30, "ServerConfig.saveUsedModules", false]], "sclogger (in module serverconfig)": [[30, "ServerConfig.scLogger", false]], "scope (metricsmsg.metric attribute)": [[17, "MetricsMsg.Metric.scope", false]], "sdlogger (in module serverdaemon)": [[31, "ServerDaemon.sdLogger", false]], "security (module)": [[26, "module-Security", false]], "seed (in module spsmatutil)": [[36, "SpsMatUtil.seed", false]], "seennotableactivity (serverdaemon.defaultserverdaemon attribute)": [[31, "ServerDaemon.DefaultServerDaemon.seenNotableActivity", false]], "segarrayregentry (class in multityperegentry)": [[19, "MultiTypeRegEntry.SegArrayRegEntry", false]], "segfunction (enum in segmentedcomputation)": [[28, "SegmentedComputation.SegFunction", false]], "segmentedcalcoffsets() (in module gensymio)": [[11, "GenSymIO.segmentedCalcOffsets", false]], "segmentedcomputation (module)": [[28, "module-SegmentedComputation", false]], "segmentedstring (module)": [[29, "module-SegmentedString", false]], "segmentedstringusehash (in module segmentedstring)": [[29, "SegmentedString.SegmentedStringUseHash", false]], "segments (multityperegentry.categoricalregentry attribute)": [[19, "MultiTypeRegEntry.CategoricalRegEntry.segments", false]], "segments (multityperegentry.groupbyregentry attribute)": [[19, "MultiTypeRegEntry.GroupByRegEntry.segments", false]], "segments (multityperegentry.segarrayregentry attribute)": [[19, "MultiTypeRegEntry.SegArrayRegEntry.segments", false]], "segstrfull() (in module segmentedstring)": [[29, "SegmentedString.segStrFull", false]], "segstring (class in segmentedstring)": [[29, "SegmentedString.SegString", false]], "segstringerror (class in servererrors)": [[33, "ServerErrors.SegStringError", false]], "segstringsort (module)": [[27, "module-SegStringSort", false]], "segstringsymentry (class in multitypesymentry)": [[20, "MultiTypeSymEntry.SegStringSymEntry", false]], "segstrwhere() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.segStrWhere", false]], "sendrepmsg() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.sendRepMsg", false]], "serialize() (in module message)": [[16, "Message.serialize", false]], "serialize() (message.messageargs method)": [[16, "Message.MessageArgs.serialize", false]], "serialize() (message.msgtuple method)": [[16, "Message.MsgTuple.serialize", false]], "serializedsize() (bigintegeraggregation.bigint method)": [[5, "BigIntegerAggregation.bigint.serializedSize", false]], "serializeinto() (bigintegeraggregation.bigint method)": [[5, "BigIntegerAggregation.bigint.serializeInto", false]], "seriesregentry (class in multityperegentry)": [[19, "MultiTypeRegEntry.SeriesRegEntry", false]], "server_port (metricsmsg.serverinfo attribute)": [[17, "MetricsMsg.ServerInfo.server_port", false]], "serveractivitymark() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.serverActivityMark", false]], "serverconfig (module)": [[30, "module-ServerConfig", false]], "serverconnectioninfo (in module serverconfig)": [[30, "ServerConfig.serverConnectionInfo", false]], "serverdaemon (module)": [[31, "module-ServerDaemon", false]], "serverdaemontype (enum in serverdaemon)": [[31, "ServerDaemon.ServerDaemonType", false]], "serverdaemontypes (in module serverdaemon)": [[31, "ServerDaemon.serverDaemonTypes", false]], "servererrors (module)": [[33, "module-ServerErrors", false]], "servererrorstrings (module)": [[32, "module-ServerErrorStrings", false]], "serverhostname (in module serverconfig)": [[30, "ServerConfig.serverHostname", false]], "serverid (multitypesymboltable.symtab attribute)": [[21, "MultiTypeSymbolTable.SymTab.serverid", false]], "serveridlestart() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.serverIdleStart", false]], "serveridlestop() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.serverIdleStop", false]], "serverinfo (class in metricsmsg)": [[17, "MetricsMsg.ServerInfo", false]], "serverinfonosplash (in module serverconfig)": [[30, "ServerConfig.serverInfoNoSplash", false]], "servermetrics (in module metricsmsg)": [[17, "MetricsMsg.serverMetrics", false]], "serverport (in module serverconfig)": [[30, "ServerConfig.ServerPort", false]], "serverstatusdaemon (class in serverdaemon)": [[31, "ServerDaemon.ServerStatusDaemon", false]], "servertoken (serverdaemon.defaultserverdaemon attribute)": [[31, "ServerDaemon.DefaultServerDaemon.serverToken", false]], "serviceendpoint (enum in externalintegration)": [[9, "ExternalIntegration.ServiceEndpoint", false]], "set() (metricsmsg.countertable method)": [[17, "MetricsMsg.CounterTable.set", false]], "set() (metricsmsg.measurementtable method)": [[17, "MetricsMsg.MeasurementTable.set", false]], "setarkoudatoken() (in module security)": [[26, "Security.setArkoudaToken", false]], "setkey() (message.parameterobj method)": [[16, "Message.ParameterObj.setKey", false]], "setmaxbitsmsg() (in module bigintmsg)": [[2, "BigIntMsg.setMaxBitsMsg", false]], "setmsg() (in module msgprocessing)": [[18, "MsgProcessing.setMsg", false]], "setname() (multityperegentry.abstractregentry method)": [[19, "MultiTypeRegEntry.AbstractRegEntry.setName", false]], "setname() (multitypesymentry.abstractsymentry method)": [[20, "MultiTypeSymEntry.AbstractSymEntry.setName", false]], "setval() (message.parameterobj method)": [[16, "Message.ParameterObj.setVal", false]], "shape (multitypesymentry.gensparsesymentry attribute)": [[20, "MultiTypeSymEntry.GenSparseSymEntry.shape", false]], "shape (multitypesymentry.gensymentry attribute)": [[20, "MultiTypeSymEntry.GenSymEntry.shape", false]], "shlogger (in module siphash)": [[34, "SipHash.shLogger", false]], "show() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.show", false]], "shutdown() (serverdaemon.arkoudaserverdaemon method)": [[31, "ServerDaemon.ArkoudaServerDaemon.shutdown", false]], "shutdown() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.shutdown", false]], "shutdown() (serverdaemon.externalintegrationserverdaemon method)": [[31, "ServerDaemon.ExternalIntegrationServerDaemon.shutdown", false]], "shutdowndaemon (serverdaemon.arkoudaserverdaemon attribute)": [[31, "ServerDaemon.ArkoudaServerDaemon.shutdownDaemon", false]], "siphash (module)": [[34, "module-SipHash", false]], "siphash() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.siphash", false]], "siphash128() (in module siphash)": [[34, "SipHash.sipHash128", false]], "siphash64() (in module siphash)": [[34, "SipHash.sipHash64", false]], "size (commaggregation.remotebuffer attribute)": [[4, "CommAggregation.remoteBuffer.size", false]], "size (message.messageargs attribute)": [[16, "Message.MessageArgs.size", false]], "size (message.requestmsg attribute)": [[16, "Message.RequestMsg.size", false]], "size (metricsmsg.arraymetric attribute)": [[17, "MetricsMsg.ArrayMetric.size", false]], "size (multitypesymentry.compositesymentry attribute)": [[20, "MultiTypeSymEntry.CompositeSymEntry.size", false]], "size (multitypesymentry.gensparsesymentry attribute)": [[20, "MultiTypeSymEntry.GenSparseSymEntry.size", false]], "size (multitypesymentry.gensymentry attribute)": [[20, "MultiTypeSymEntry.GenSymEntry.size", false]], "size (segmentedstring.segstring attribute)": [[29, "SegmentedString.SegString.size", false]], "size() (metricsmsg.countertable method)": [[17, "MetricsMsg.CounterTable.size", false]], "size() (metricsmsg.measurementtable method)": [[17, "MetricsMsg.MeasurementTable.size", false]], "slogger (in module statusmsg)": [[37, "StatusMsg.sLogger", false]], "socket (serverdaemon.defaultserverdaemon attribute)": [[31, "ServerDaemon.DefaultServerDaemon.socket", false]], "socket (serverdaemon.metricsserverdaemon attribute)": [[31, "ServerDaemon.MetricsServerDaemon.socket", false]], "socket (serverdaemon.serverstatusdaemon attribute)": [[31, "ServerDaemon.ServerStatusDaemon.socket", false]], "sparsematdat (record in spsmatutil)": [[36, "SpsMatUtil.sparseMatDat", false]], "sparsematfromarrays() (in module sparsematrix)": [[35, "SparseMatrix.sparseMatFromArrays", false]], "sparsematmatmult() (in module sparsematrix)": [[35, "SparseMatrix.sparseMatMatMult", false]], "sparsematrix (module)": [[35, "module-SparseMatrix", false]], "sparsemattopdarray() (in module sparsematrix)": [[35, "SparseMatrix.sparseMatToPdarray", false]], "sparsesymentry (class in multitypesymentry)": [[20, "MultiTypeSymEntry.SparseSymEntry", false]], "splitmsgtotuple() (serverconfig.bytes method)": [[30, "ServerConfig.bytes.splitMsgToTuple", false]], "splitmsgtotuple() (serverconfig.string method)": [[30, "ServerConfig.string.splitMsgToTuple", false]], "spsmatutil (module)": [[36, "module-SpsMatUtil", false]], "srcaggregator (record in commaggregation)": [[4, "CommAggregation.SrcAggregator", false]], "srcaggregatorbigint (record in bigintegeraggregation)": [[5, "BigIntegerAggregation.SrcAggregatorBigint", false]], "srcunorderedaggregator (record in commaggregation)": [[4, "CommAggregation.SrcUnorderedAggregator", false]], "sslogger (in module segmentedstring)": [[29, "SegmentedString.ssLogger", false]], "sslogger (in module segstringsort)": [[27, "SegStringSort.ssLogger", false]], "st (serverdaemon.arkoudaserverdaemon attribute)": [[31, "ServerDaemon.ArkoudaServerDaemon.st", false]], "startasynccheckpointtask() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.startAsyncCheckpointTask", false]], "state (multitypesymentry.generatorsymentry attribute)": [[20, "MultiTypeSymEntry.GeneratorSymEntry.state", false]], "statusmsg (module)": [[37, "module-StatusMsg", false]], "stick() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.stick", false]], "str2dtype() (in module numpydtype)": [[22, "NumPyDType.str2dtype", false]], "stringbytestouintarr() (in module segmentedstring)": [[29, "SegmentedString.stringBytesToUintArr", false]], "stringcompareliteraleq() (in module segmentedstring)": [[29, "SegmentedString.stringCompareLiteralEq", false]], "stringcompareliteralneq() (in module segmentedstring)": [[29, "SegmentedString.stringCompareLiteralNeq", false]], "stringintcomparator (record in segstringsort)": [[27, "SegStringSort.StringIntComparator", false]], "stringisalphabetic() (in module segmentedstring)": [[29, "SegmentedString.stringIsAlphabetic", false]], "stringisalphanumeric() (in module segmentedstring)": [[29, "SegmentedString.stringIsAlphaNumeric", false]], "stringisdecimal() (in module segmentedstring)": [[29, "SegmentedString.stringIsDecimal", false]], "stringisdigit() (in module segmentedstring)": [[29, "SegmentedString.stringIsDigit", false]], "stringisempty() (in module segmentedstring)": [[29, "SegmentedString.stringIsEmpty", false]], "stringislower() (in module segmentedstring)": [[29, "SegmentedString.stringIsLower", false]], "stringisnumeric() (in module segmentedstring)": [[29, "SegmentedString.stringIsNumeric", false]], "stringisspace() (in module segmentedstring)": [[29, "SegmentedString.stringIsSpace", false]], "stringistitle() (in module segmentedstring)": [[29, "SegmentedString.stringIsTitle", false]], "stringisupper() (in module segmentedstring)": [[29, "SegmentedString.stringIsUpper", false]], "stringsearch() (in module segmentedstring)": [[29, "SegmentedString.stringSearch", false]], "stringtonumericignore() (in module cast)": [[3, "Cast.stringToNumericIgnore", false]], "stringtonumericreturnvalidity() (in module cast)": [[3, "Cast.stringToNumericReturnValidity", false]], "stringtonumericstrict() (in module cast)": [[3, "Cast.stringToNumericStrict", false]], "strip() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.strip", false]], "strmsg() (in module msgprocessing)": [[18, "MsgProcessing.strMsg", false]], "sub() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.sub", false]], "subdomchunk() (in module aryutil)": [[1, "AryUtil.subDomChunk", false]], "substringsearch() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.substringSearch", false]], "success() (message.msgtuple method)": [[16, "Message.MsgTuple.success", false]], "symarraydmap (module)": [[38, "module-SymArrayDmap", false]], "symbolentrytype (enum in multitypesymentry)": [[20, "MultiTypeSymEntry.SymbolEntryType", false]], "symentry (class in multitypesymentry)": [[20, "MultiTypeSymEntry.SymEntry", false]], "symtab (class in multitypesymboltable)": [[21, "MultiTypeSymbolTable.SymTab", false]], "systemtype (enum in externalintegration)": [[9, "ExternalIntegration.SystemType", false]], "t (aryutil.lowlevellocalizingslice attribute)": [[1, "AryUtil.lowLevelLocalizingSlice.t", false]], "tab (multitypesymboltable.symtab attribute)": [[21, "MultiTypeSymbolTable.SymTab.tab", false]], "tab (registry.regtab attribute)": [[25, "Registry.RegTab.tab", false]], "tasks (in module radixsortlsd)": [[24, "RadixSortLSD.Tasks", false]], "these() (message.messageargs iterator)": [[16, "Message.MessageArgs.these", false]], "this() (message.messageargs method)": [[16, "Message.MessageArgs.this", false]], "this() (multitypesymboltable.symtab method)": [[21, "MultiTypeSymbolTable.SymTab.this", false]], "this() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.this", false]], "timestamp (metricsmsg.metric attribute)": [[17, "MetricsMsg.Metric.timestamp", false]], "title() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.title", false]], "tocompositesymentry() (in module multitypesymentry)": [[20, "MultiTypeSymEntry.toCompositeSymEntry", false]], "todataframeregentry() (multityperegentry.genregentry method)": [[19, "MultiTypeRegEntry.GenRegEntry.toDataFrameRegEntry", false]], "togeneratorsymentry() (in module multitypesymentry)": [[20, "MultiTypeSymEntry.toGeneratorSymEntry", false]], "togensparsesymentry() (in module multitypesymentry)": [[20, "MultiTypeSymEntry.toGenSparseSymEntry", false]], "togensymentry() (in module multitypesymentry)": [[20, "MultiTypeSymEntry.toGenSymEntry", false]], "token (externalintegration.httpschannel attribute)": [[9, "ExternalIntegration.HttpsChannel.token", false]], "token (message.requestmsg attribute)": [[16, "Message.RequestMsg.token", false]], "tondarray() (in module gensymio)": [[11, "GenSymIO.tondarray", false]], "toscalar() (message.parameterobj method)": [[16, "Message.ParameterObj.toScalar", false]], "toscalararray() (message.parameterobj method)": [[16, "Message.ParameterObj.toScalarArray", false]], "toscalarlist() (message.parameterobj method)": [[16, "Message.ParameterObj.toScalarList", false]], "toscalartuple() (message.parameterobj method)": [[16, "Message.ParameterObj.toScalarTuple", false]], "tosegstringsymentry() (in module multitypesymentry)": [[20, "MultiTypeSymEntry.toSegStringSymEntry", false]], "tosparsesymentry() (multitypesymentry.gensparsesymentry method)": [[20, "MultiTypeSymEntry.GenSparseSymEntry.toSparseSymEntry", false]], "tosymentry() (in module multitypesymentry)": [[20, "MultiTypeSymEntry.toSymEntry", false]], "tosymentry() (multitypesymentry.gensymentry method)": [[20, "MultiTypeSymEntry.GenSymEntry.toSymEntry", false]], "total() (metricsmsg.countertable method)": [[17, "MetricsMsg.CounterTable.total", false]], "total_mem (memorymgmt.localememorystatus attribute)": [[15, "MemoryMgmt.LocaleMemoryStatus.total_mem", false]], "totalmemoryusedmetrics (in module metricsmsg)": [[17, "MetricsMsg.totalMemoryUsedMetrics", false]], "totalmicroseconds() (arkoudatimecompat.timedelta method)": [[45, "ArkoudaTimeCompat.timeDelta.totalMicroseconds", false]], "totalresponsetimemetrics (in module metricsmsg)": [[17, "MetricsMsg.totalResponseTimeMetrics", false]], "trace (in module serverconfig)": [[30, "ServerConfig.trace", false]], "trygetscalar() (message.parameterobj method)": [[16, "Message.ParameterObj.tryGetScalar", false]], "tupshape (multitypesymentry.sparsesymentry attribute)": [[20, "MultiTypeSymEntry.SparseSymEntry.tupShape", false]], "tupshape (multitypesymentry.symentry attribute)": [[20, "MultiTypeSymEntry.SymEntry.tupShape", false]], "tupshapestring() (in module multitypesymentry)": [[20, "MultiTypeSymEntry.tupShapeString", false]], "twophasestringsort() (in module segstringsort)": [[27, "SegStringSort.twoPhaseStringSort", false]], "type2fmt() (in module numpydtype)": [[22, "NumPyDType.type2fmt", false]], "type2str() (in module numpydtype)": [[22, "NumPyDType.type2str", false]], "typesize() (in module numpydtype)": [[22, "NumPyDType.typeSize", false]], "uintbuffersize (bigintegeraggregation.srcaggregatorbigint attribute)": [[5, "BigIntegerAggregation.SrcAggregatorBigint.uintBufferSize", false]], "uki (multityperegentry.groupbyregentry attribute)": [[19, "MultiTypeRegEntry.GroupByRegEntry.uki", false]], "ulogger (in module unique)": [[39, "Unique.uLogger", false]], "unflatten() (in module aryutil)": [[1, "AryUtil.unflatten", false]], "unique (module)": [[39, "module-Unique", false]], "uniquefromsorted() (in module unique)": [[39, "Unique.uniqueFromSorted", false]], "uniquefromtruth() (in module unique)": [[39, "Unique.uniqueFromTruth", false]], "uniquegroup() (in module unique)": [[39, "Unique.uniqueGroup", false]], "uniquesort() (in module unique)": [[39, "Unique.uniqueSort", false]], "uniquesortwithinverse() (in module unique)": [[39, "Unique.uniqueSortWithInverse", false]], "unknownerror() (in module servererrorstrings)": [[32, "ServerErrorStrings.unknownError", false]], "unknownsymbolerror (class in servererrors)": [[33, "ServerErrors.UnknownSymbolError", false]], "unknownsymbolerror() (in module servererrorstrings)": [[32, "ServerErrorStrings.unknownSymbolError", false]], "unrecognizedtypeerror() (in module servererrorstrings)": [[32, "ServerErrorStrings.unrecognizedTypeError", false]], "unregister_array() (registry.regtab method)": [[25, "Registry.RegTab.unregister_array", false]], "unregister_bitvector() (registry.regtab method)": [[25, "Registry.RegTab.unregister_bitvector", false]], "unregister_categorical() (registry.regtab method)": [[25, "Registry.RegTab.unregister_categorical", false]], "unregister_categorical_components() (registry.regtab method)": [[25, "Registry.RegTab.unregister_categorical_components", false]], "unregister_dataframe() (registry.regtab method)": [[25, "Registry.RegTab.unregister_dataframe", false]], "unregister_groupby() (registry.regtab method)": [[25, "Registry.RegTab.unregister_groupby", false]], "unregister_index() (registry.regtab method)": [[25, "Registry.RegTab.unregister_index", false]], "unregister_index_components() (registry.regtab method)": [[25, "Registry.RegTab.unregister_index_components", false]], "unregister_segarray() (registry.regtab method)": [[25, "Registry.RegTab.unregister_segarray", false]], "unregister_segarray_components() (registry.regtab method)": [[25, "Registry.RegTab.unregister_segarray_components", false]], "unregister_series() (registry.regtab method)": [[25, "Registry.RegTab.unregister_series", false]], "unsafecompileregex() (in module segmentedstring)": [[29, "SegmentedString.unsafeCompileRegex", false]], "unsupportedoserror (class in servererrors)": [[33, "ServerErrors.UnsupportedOSError", false]], "unsupportedtypeerror() (in module servererrorstrings)": [[32, "ServerErrorStrings.unsupportedTypeError", false]], "update() (metricsmsg.avgmetricvalue method)": [[17, "MetricsMsg.AvgMetricValue.update", false]], "update() (metricsmsg.metricvalue method)": [[17, "MetricsMsg.MetricValue.update", false]], "upper() (segmentedstring.segstring method)": [[29, "SegmentedString.SegString.upper", false]], "url (externalintegration.httpchannel attribute)": [[9, "ExternalIntegration.HttpChannel.url", false]], "usedmodules (in module commandmap)": [[7, "CommandMap.usedModules", false]], "usedmodulesfmt (in module serverconfig)": [[30, "ServerConfig.usedModulesFmt", false]], "user (message.msgtuple attribute)": [[16, "Message.MsgTuple.user", false]], "user (message.requestmsg attribute)": [[16, "Message.RequestMsg.user", false]], "user (metricsmsg.usermetric attribute)": [[17, "MetricsMsg.UserMetric.user", false]], "user (record in metricsmsg)": [[17, "MetricsMsg.User", false]], "usermetric (class in metricsmsg)": [[17, "MetricsMsg.UserMetric", false]], "usermetrics (class in metricsmsg)": [[17, "MetricsMsg.UserMetrics", false]], "usermetrics (in module metricsmsg)": [[17, "MetricsMsg.userMetrics", false]], "users (class in metricsmsg)": [[17, "MetricsMsg.Users", false]], "users (in module metricsmsg)": [[17, "MetricsMsg.users", false]], "users (metricsmsg.usermetrics attribute)": [[17, "MetricsMsg.UserMetrics.users", false]], "users (metricsmsg.users attribute)": [[17, "MetricsMsg.Users.users", false]], "val (message.parameterobj attribute)": [[16, "Message.ParameterObj.val", false]], "validatearrayssamelength() (in module aryutil)": [[1, "AryUtil.validateArraysSameLength", false]], "validatenegativeaxes() (in module aryutil)": [[1, "AryUtil.validateNegativeAxes", false]], "value (class in arkoudapythoncompat)": [[42, "ArkoudaPythonCompat.Value", false]], "value (metricsmsg.metric attribute)": [[17, "MetricsMsg.Metric.value", false]], "value (spsmatutil.merge attribute)": [[36, "SpsMatUtil.merge.value", false]], "values (multityperegentry.segarrayregentry attribute)": [[19, "MultiTypeRegEntry.SegArrayRegEntry.values", false]], "values (multityperegentry.seriesregentry attribute)": [[19, "MultiTypeRegEntry.SeriesRegEntry.values", false]], "values (segmentedstring.segstring attribute)": [[29, "SegmentedString.SegString.values", false]], "version (metricsmsg.serverinfo attribute)": [[17, "MetricsMsg.ServerInfo.version", false]], "vv (in module radixsortlsd)": [[24, "RadixSortLSD.vv", false]], "waitforactivitymutex() (serverdaemon.defaultserverdaemon method)": [[31, "ServerDaemon.DefaultServerDaemon.waitForActivityMutex", false]], "warn() (logging.logger method)": [[14, "Logging.Logger.warn", false]], "warning() (message.msgtuple method)": [[16, "Message.MsgTuple.warning", false]], "whichdtype() (in module numpydtype)": [[22, "NumPyDType.whichDtype", false]], "width (multityperegentry.bitvectorregentry attribute)": [[19, "MultiTypeRegEntry.BitVectorRegEntry.width", false]], "write() (externalintegration.channel method)": [[9, "ExternalIntegration.Channel.write", false]], "write() (externalintegration.filechannel method)": [[9, "ExternalIntegration.FileChannel.write", false]], "write() (externalintegration.httpchannel method)": [[9, "ExternalIntegration.HttpChannel.write", false]], "write() (logging.consoleoutputhandler method)": [[14, "Logging.ConsoleOutputHandler.write", false]], "write() (logging.fileoutputhandler method)": [[14, "Logging.FileOutputHandler.write", false]], "write() (logging.outputhandler method)": [[14, "Logging.OutputHandler.write", false]], "writelinestofile() (in module fileio)": [[10, "FileIO.writeLinesToFile", false]], "writemodeerror (class in servererrors)": [[33, "ServerErrors.WriteModeError", false]], "writesparsematrix() (in module spsmatutil)": [[36, "SpsMatUtil.writeSparseMatrix", false]], "writetofile() (in module fileio)": [[10, "FileIO.writeToFile", false]], "writetofile() (logging.fileoutputhandler method)": [[14, "Logging.FileOutputHandler.writeToFile", false]], "writeusedmodules() (in module commandmap)": [[7, "CommandMap.writeUsedModules", false]], "writeusedmodulesjson() (in module commandmap)": [[7, "CommandMap.writeUsedModulesJson", false]]}, "objects": {"": [[41, 0, 0, "-", "ArkoudaJSONCompat"], [42, 0, 0, "-", "ArkoudaPythonCompat"], [43, 0, 0, "-", "ArkoudaSortCompat"], [44, 0, 0, "-", "ArkoudaSparseMatrixCompat"], [45, 0, 0, "-", "ArkoudaTimeCompat"], [1, 0, 0, "-", "AryUtil"], [2, 0, 0, "-", "BigIntMsg"], [5, 0, 0, "-", "BigIntegerAggregation"], [3, 0, 0, "-", "Cast"], [4, 0, 0, "-", "CommAggregation"], [6, 0, 0, "-", "CommPrimitives"], [7, 0, 0, "-", "CommandMap"], [8, 0, 0, "-", "DynamicSort"], [9, 0, 0, "-", "ExternalIntegration"], [10, 0, 0, "-", "FileIO"], [11, 0, 0, "-", "GenSymIO"], [12, 0, 0, "-", "IOUtils"], [13, 0, 0, "-", "In1d"], [14, 0, 0, "-", "Logging"], [15, 0, 0, "-", "MemoryMgmt"], [16, 0, 0, "-", "Message"], [17, 0, 0, "-", "MetricsMsg"], [18, 0, 0, "-", "MsgProcessing"], [19, 0, 0, "-", "MultiTypeRegEntry"], [20, 0, 0, "-", "MultiTypeSymEntry"], [21, 0, 0, "-", "MultiTypeSymbolTable"], [22, 0, 0, "-", "NumPyDType"], [23, 0, 0, "-", "NumericUnicodes"], [24, 0, 0, "-", "RadixSortLSD"], [46, 0, 0, "-", "RegistrationConfig"], [25, 0, 0, "-", "Registry"], [26, 0, 0, "-", "Security"], [27, 0, 0, "-", "SegStringSort"], [28, 0, 0, "-", "SegmentedComputation"], [29, 0, 0, "-", "SegmentedString"], [30, 0, 0, "-", "ServerConfig"], [31, 0, 0, "-", "ServerDaemon"], [32, 0, 0, "-", "ServerErrorStrings"], [33, 0, 0, "-", "ServerErrors"], [34, 0, 0, "-", "SipHash"], [35, 0, 0, "-", "SparseMatrix"], [36, 0, 0, "-", "SpsMatUtil"], [37, 0, 0, "-", "StatusMsg"], [38, 0, 0, "-", "SymArrayDmap"], [39, 0, 0, "-", "Unique"], [40, 0, 0, "-", "arkouda_server"]], "ArkoudaPythonCompat": [[42, 1, 1, "", "Function"], [42, 1, 1, "", "Interpreter"], [42, 1, 1, "", "Module"], [42, 1, 1, "", "Value"], [42, 2, 1, "", "pythonModuleSupported"], [42, 2, 1, "", "pythonVersionString"]], "ArkoudaSortCompat": [[43, 2, 1, "", "defaultComparator"]], "ArkoudaSparseMatrixCompat": [[44, 2, 1, "", "getDenseDom"], [44, 2, 1, "", "getSparseDom"]], "ArkoudaTimeCompat.timeDelta": [[45, 3, 1, "", "totalMicroseconds"]], "AryUtil": [[1, 2, 1, "", "aStats"], [1, 2, 1, "", "appendAxis"], [1, 4, 1, "", "auLogger"], [1, 5, 1, "", "axisSlices"], [1, 4, 1, "", "bitsPerDigit"], [1, 2, 1, "", "broadcastShape"], [1, 2, 1, "", "concatArrays"], [1, 2, 1, "", "contiguousIndices"], [1, 2, 1, "", "domOffAxis"], [1, 2, 1, "", "domOnAxis"], [1, 2, 1, "", "fillUniform"], [1, 2, 1, "", "flatten"], [1, 2, 1, "", "formatAry"], [1, 2, 1, "", "getBitWidth"], [1, 2, 1, "", "getDigit"], [1, 2, 1, "", "getNumDigitsNumericArrays"], [1, 2, 1, "", "isSorted"], [1, 2, 1, "", "isSortedOver"], [1, 6, 1, "", "lowLevelLocalizingSlice"], [1, 2, 1, "", "mergeNumericArrays"], [1, 5, 1, "", "offset"], [1, 6, 1, "", "orderer"], [1, 2, 1, "", "printAry"], [1, 2, 1, "", "printOwnership"], [1, 4, 1, "", "printThresh"], [1, 2, 1, "", "reducedShape"], [1, 2, 1, "", "removeAxis"], [1, 2, 1, "", "removeDegenRanks"], [1, 2, 1, "", "subDomChunk"], [1, 2, 1, "", "unflatten"], [1, 2, 1, "", "validateArraysSameLength"], [1, 2, 1, "", "validateNegativeAxes"]], "AryUtil.lowLevelLocalizingSlice": [[1, 3, 1, "", "deinit"], [1, 3, 1, "", "init"], [1, 7, 1, "", "isOwned"], [1, 7, 1, "", "ptr"], [1, 7, 1, "", "t"]], "AryUtil.orderer": [[1, 7, 1, "", "accumRankSizes"], [1, 3, 1, "", "indexToOrder"], [1, 3, 1, "", "init"], [1, 7, 1, "", "rank"]], "BigIntMsg": [[2, 4, 1, "", "biLogger"], [2, 2, 1, "", "bigIntCreationMsg"], [2, 2, 1, "", "bigIntNBytesMsg"], [2, 2, 1, "", "bigintToUintArraysMsg"], [2, 2, 1, "", "getMaxBitsMsg"], [2, 2, 1, "", "setMaxBitsMsg"]], "BigIntegerAggregation": [[5, 6, 1, "", "DstAggregatorBigint"], [5, 6, 1, "", "SrcAggregatorBigint"]], "BigIntegerAggregation.DstAggregatorBigint": [[5, 7, 1, "", "aggType"], [5, 7, 1, "", "bufferIdxs"], [5, 7, 1, "", "bufferSize"], [5, 3, 1, "", "copy"], [5, 3, 1, "", "deinit"], [5, 3, 1, "", "flush"], [5, 3, 1, "", "flushBuffer"], [5, 7, 1, "", "lBuffers"], [5, 7, 1, "", "lastLocale"], [5, 7, 1, "", "myLocaleSpace"], [5, 7, 1, "", "opsUntilYield"], [5, 3, 1, "", "postinit"], [5, 7, 1, "", "rBuffers"]], "BigIntegerAggregation.SrcAggregatorBigint": [[5, 7, 1, "", "aggType"], [5, 7, 1, "", "bufferIdxs"], [5, 7, 1, "", "bufferSize"], [5, 3, 1, "", "copy"], [5, 3, 1, "", "deinit"], [5, 7, 1, "", "dstAddrs"], [5, 3, 1, "", "flush"], [5, 3, 1, "", "flushBuffer"], [5, 7, 1, "", "lSrcAddrs"], [5, 7, 1, "", "lSrcVals"], [5, 7, 1, "", "lastLocale"], [5, 7, 1, "", "myLocaleSpace"], [5, 7, 1, "", "opsUntilYield"], [5, 3, 1, "", "postinit"], [5, 7, 1, "", "rSrcAddrs"], [5, 7, 1, "", "rSrcVals"], [5, 7, 1, "", "uintBufferSize"]], "BigIntegerAggregation.bigint": [[5, 3, 1, "", "deserializeFrom"], [5, 3, 1, "", "serializeInto"], [5, 3, 1, "", "serializedSize"]], "Cast": [[3, 8, 1, "", "ErrorMode"], [3, 2, 1, "", "castGenSymEntryToString"], [3, 4, 1, "", "castLogger"], [3, 2, 1, "", "castStringToBigInt"], [3, 2, 1, "", "castStringToSymEntry"], [3, 2, 1, "", "stringToNumericIgnore"], [3, 2, 1, "", "stringToNumericReturnValidity"], [3, 2, 1, "", "stringToNumericStrict"]], "Cast.ErrorMode": [[3, 9, 1, "", "ignore"], [3, 9, 1, "", "return_validity"], [3, 9, 1, "", "strict"]], "CommAggregation": [[4, 6, 1, "", "DstAggregator"], [4, 6, 1, "", "DstUnorderedAggregator"], [4, 6, 1, "", "SrcAggregator"], [4, 6, 1, "", "SrcUnorderedAggregator"], [4, 2, 1, "", "bufferIdxAlloc"], [4, 2, 1, "", "newDstAggregator"], [4, 2, 1, "", "newSrcAggregator"], [4, 6, 1, "", "remoteBuffer"]], "CommAggregation.DstAggregator": [[4, 7, 1, "", "aggType"], [4, 7, 1, "", "bufferIdxs"], [4, 7, 1, "", "bufferSize"], [4, 3, 1, "", "copy"], [4, 3, 1, "", "deinit"], [4, 7, 1, "", "elemType"], [4, 3, 1, "", "flush"], [4, 3, 1, "", "flushBuffer"], [4, 7, 1, "", "lBuffers"], [4, 7, 1, "", "lastLocale"], [4, 7, 1, "", "myLocaleSpace"], [4, 7, 1, "", "opsUntilYield"], [4, 3, 1, "", "postinit"], [4, 7, 1, "", "rBuffers"]], "CommAggregation.DstUnorderedAggregator": [[4, 3, 1, "", "copy"], [4, 3, 1, "", "deinit"], [4, 7, 1, "", "elemType"], [4, 3, 1, "", "flush"]], "CommAggregation.SrcAggregator": [[4, 7, 1, "", "aggType"], [4, 7, 1, "", "bufferIdxs"], [4, 7, 1, "", "bufferSize"], [4, 3, 1, "", "copy"], [4, 3, 1, "", "deinit"], [4, 7, 1, "", "dstAddrs"], [4, 7, 1, "", "elemType"], [4, 3, 1, "", "flush"], [4, 3, 1, "", "flushBuffer"], [4, 7, 1, "", "lSrcAddrs"], [4, 7, 1, "", "lSrcVals"], [4, 7, 1, "", "lastLocale"], [4, 7, 1, "", "myLocaleSpace"], [4, 7, 1, "", "opsUntilYield"], [4, 3, 1, "", "postinit"], [4, 7, 1, "", "rSrcAddrs"], [4, 7, 1, "", "rSrcVals"]], "CommAggregation.SrcUnorderedAggregator": [[4, 3, 1, "", "copy"], [4, 3, 1, "", "deinit"], [4, 7, 1, "", "elemType"], [4, 3, 1, "", "flush"]], "CommAggregation.remoteBuffer": [[4, 3, 1, "", "GET"], [4, 3, 1, "", "PUT"], [4, 3, 1, "", "cachedAlloc"], [4, 7, 1, "", "data"], [4, 3, 1, "", "deinit"], [4, 7, 1, "", "elemType"], [4, 7, 1, "", "loc"], [4, 3, 1, "", "localFree"], [4, 10, 1, "", "localIter"], [4, 3, 1, "", "markFreed"], [4, 7, 1, "", "size"]], "CommPrimitives": [[6, 2, 1, "", "getAddr"]], "CommandMap": [[7, 2, 1, "", "akMsgSign"], [7, 4, 1, "", "commandMap"], [7, 2, 1, "", "dumpCommandMap"], [7, 2, 1, "", "emptyStartAsyncCheckpointDaemon"], [7, 2, 1, "", "executeCommand"], [7, 4, 1, "", "funStartAsyncCheckpointDaemon"], [7, 4, 1, "", "moduleMap"], [7, 2, 1, "", "registerFunction"], [7, 4, 1, "", "requiredModules"], [7, 4, 1, "", "usedModules"], [7, 2, 1, "", "writeUsedModules"], [7, 2, 1, "", "writeUsedModulesJson"]], "DynamicSort": [[8, 2, 1, "", "dynamicTwoArrayRadixSort"]], "ExternalIntegration": [[9, 4, 1, "", "CURLINFO_RESPONSE_CODE"], [9, 4, 1, "", "CURLOPT_CAINFO"], [9, 4, 1, "", "CURLOPT_CAPATH"], [9, 4, 1, "", "CURLOPT_CUSTOMREQUEST"], [9, 4, 1, "", "CURLOPT_FAILONERROR"], [9, 4, 1, "", "CURLOPT_HTTPHEADER"], [9, 4, 1, "", "CURLOPT_KEYPASSWD"], [9, 4, 1, "", "CURLOPT_PASSWORD"], [9, 4, 1, "", "CURLOPT_POSTFIELDS"], [9, 4, 1, "", "CURLOPT_SSLCERT"], [9, 4, 1, "", "CURLOPT_SSLCERTTYPE"], [9, 4, 1, "", "CURLOPT_SSLKEY"], [9, 4, 1, "", "CURLOPT_SSL_VERIFYPEER"], [9, 4, 1, "", "CURLOPT_URL"], [9, 4, 1, "", "CURLOPT_USERNAME"], [9, 4, 1, "", "CURLOPT_USE_SSL"], [9, 4, 1, "", "CURLOPT_VERBOSE"], [9, 1, 1, "", "Channel"], [9, 8, 1, "", "ChannelType"], [9, 1, 1, "", "FileChannel"], [9, 1, 1, "", "HttpChannel"], [9, 8, 1, "", "HttpRequestFormat"], [9, 8, 1, "", "HttpRequestType"], [9, 1, 1, "", "HttpsChannel"], [9, 8, 1, "", "ServiceEndpoint"], [9, 8, 1, "", "SystemType"], [9, 2, 1, "", "deregisterFromExternalSystem"], [9, 2, 1, "", "deregisterFromKubernetes"], [9, 4, 1, "", "eiLogger"], [9, 2, 1, "", "getConnectHostIp"], [9, 2, 1, "", "getKubernetesDeregisterParameters"], [9, 2, 1, "", "getKubernetesRegistrationParameters"], [9, 2, 1, "", "registerWithExternalSystem"], [9, 2, 1, "", "registerWithKubernetes"]], "ExternalIntegration.Channel": [[9, 3, 1, "", "write"]], "ExternalIntegration.ChannelType": [[9, 9, 1, "", "FILE"], [9, 9, 1, "", "HTTP"], [9, 9, 1, "", "STDOUT"]], "ExternalIntegration.FileChannel": [[9, 7, 1, "", "append"], [9, 3, 1, "", "init"], [9, 7, 1, "", "path"], [9, 3, 1, "", "write"]], "ExternalIntegration.HttpChannel": [[9, 3, 1, "", "configureChannel"], [9, 3, 1, "", "generateHeader"], [9, 3, 1, "", "init"], [9, 7, 1, "", "requestFormat"], [9, 7, 1, "", "requestType"], [9, 7, 1, "", "url"], [9, 3, 1, "", "write"]], "ExternalIntegration.HttpRequestFormat": [[9, 9, 1, "", "JSON"], [9, 9, 1, "", "MULTIPART"], [9, 9, 1, "", "TEXT"]], "ExternalIntegration.HttpRequestType": [[9, 9, 1, "", "DELETE"], [9, 9, 1, "", "PATCH"], [9, 9, 1, "", "POST"], [9, 9, 1, "", "PUT"]], "ExternalIntegration.HttpsChannel": [[9, 7, 1, "", "caCert"], [9, 3, 1, "", "configureChannel"], [9, 3, 1, "", "generateHeader"], [9, 3, 1, "", "init"], [9, 7, 1, "", "token"]], "ExternalIntegration.ServiceEndpoint": [[9, 9, 1, "", "ARKOUDA_CLIENT"], [9, 9, 1, "", "METRICS"]], "ExternalIntegration.SystemType": [[9, 9, 1, "", "CONSUL"], [9, 9, 1, "", "KUBERNETES"], [9, 9, 1, "", "NONE"], [9, 9, 1, "", "REDIS"]], "FileIO": [[10, 8, 1, "", "FileType"], [10, 4, 1, "", "MAGIC_ARROW"], [10, 4, 1, "", "MAGIC_CSV"], [10, 4, 1, "", "MAGIC_HDF5"], [10, 4, 1, "", "MAGIC_PARQUET"], [10, 2, 1, "", "appendFile"], [10, 2, 1, "", "deleteFile"], [10, 2, 1, "", "deleteMatchingFilenames"], [10, 2, 1, "", "deleteMatchingFilenamesMsg"], [10, 2, 1, "", "delimitedFileToMap"], [10, 2, 1, "", "domain_intersection"], [10, 2, 1, "", "ensureClose"], [10, 4, 1, "", "fioLogger"], [10, 2, 1, "", "generateFilename"], [10, 2, 1, "", "generateFilenames"], [10, 2, 1, "", "getFileMetadata"], [10, 2, 1, "", "getFileType"], [10, 2, 1, "", "getFileTypeByMagic"], [10, 2, 1, "", "getFileTypeMsg"], [10, 2, 1, "", "getFirstEightBytesFromFile"], [10, 2, 1, "", "getLineFromFile"], [10, 2, 1, "", "getMatchingFilenames"], [10, 2, 1, "", "globExpansionMsg"], [10, 2, 1, "", "initDirectory"], [10, 2, 1, "", "isGlobPattern"], [10, 2, 1, "", "lsAnyMsg"], [10, 2, 1, "", "writeLinesToFile"], [10, 2, 1, "", "writeToFile"]], "FileIO.FileType": [[10, 9, 1, "", "ARROW"], [10, 9, 1, "", "CSV"], [10, 9, 1, "", "HDF5"], [10, 9, 1, "", "PARQUET"], [10, 9, 1, "", "UNKNOWN"]], "GenSymIO": [[11, 4, 1, "", "NULL_STRINGS_VALUE"], [11, 2, 1, "", "array"], [11, 2, 1, "", "arraySegString"], [11, 2, 1, "", "buildReadAllMsgJson"], [11, 2, 1, "", "checkCast"], [11, 2, 1, "", "deepcopy"], [11, 4, 1, "", "gsLogger"], [11, 2, 1, "", "jsonToMap"], [11, 2, 1, "", "makeArrayFromBytes"], [11, 2, 1, "", "segmentedCalcOffsets"], [11, 2, 1, "", "tondarray"]], "IOUtils": [[12, 2, 1, "", "formatJson"], [12, 2, 1, "", "jsonToArray"], [12, 2, 1, "", "parseJson"]], "In1d": [[13, 2, 1, "", "in1d"], [13, 2, 1, "", "in1dAr2PerLocAssoc"], [13, 2, 1, "", "in1dSort"]], "Logging": [[14, 1, 1, "", "ConsoleOutputHandler"], [14, 1, 1, "", "FileOutputHandler"], [14, 8, 1, "", "LogChannel"], [14, 8, 1, "", "LogLevel"], [14, 1, 1, "", "Logger"], [14, 1, 1, "", "OutputHandler"], [14, 2, 1, "", "getOutputHandler"]], "Logging.ConsoleOutputHandler": [[14, 3, 1, "", "write"]], "Logging.FileOutputHandler": [[14, 7, 1, "", "filePath"], [14, 3, 1, "", "init"], [14, 3, 1, "", "write"], [14, 3, 1, "", "writeToFile"]], "Logging.LogChannel": [[14, 9, 1, "", "CONSOLE"], [14, 9, 1, "", "FILE"]], "Logging.LogLevel": [[14, 9, 1, "", "CRITICAL"], [14, 9, 1, "", "DEBUG"], [14, 9, 1, "", "ERROR"], [14, 9, 1, "", "INFO"], [14, 9, 1, "", "WARN"]], "Logging.Logger": [[14, 3, 1, "", "critical"], [14, 3, 1, "", "debug"], [14, 3, 1, "", "emit"], [14, 3, 1, "", "error"], [14, 3, 1, "", "generateDateTimeString"], [14, 3, 1, "", "generateLogMessage"], [14, 3, 1, "", "info"], [14, 3, 1, "", "init"], [14, 7, 1, "", "level"], [14, 7, 1, "", "outputHandler"], [14, 7, 1, "", "printDate"], [14, 3, 1, "", "report"], [14, 3, 1, "", "warn"]], "Logging.OutputHandler": [[14, 3, 1, "", "write"]], "MemoryMgmt": [[15, 6, 1, "", "LocaleMemoryStatus"], [15, 8, 1, "", "MemMgmtType"], [15, 4, 1, "", "availableMemoryPct"], [15, 2, 1, "", "getArkoudaMemAlloc"], [15, 2, 1, "", "getArkoudaPid"], [15, 2, 1, "", "getAvailMemory"], [15, 2, 1, "", "getLocaleMemoryStatuses"], [15, 2, 1, "", "getTotalMemory"], [15, 2, 1, "", "isMemAvailable"], [15, 2, 1, "", "isSupportedOS"], [15, 2, 1, "", "localeMemAvailable"], [15, 4, 1, "", "memMgmtType"], [15, 4, 1, "", "mmLogger"]], "MemoryMgmt.LocaleMemoryStatus": [[15, 7, 1, "", "arkouda_mem_alloc"], [15, 7, 1, "", "avail_mem"], [15, 7, 1, "", "locale_hostname"], [15, 7, 1, "", "locale_id"], [15, 7, 1, "", "mem_used"], [15, 7, 1, "", "pct_avail_mem"], [15, 7, 1, "", "total_mem"]], "MemoryMgmt.MemMgmtType": [[15, 9, 1, "", "DYNAMIC"], [15, 9, 1, "", "STATIC"]], "Message": [[16, 1, 1, "", "MessageArgs"], [16, 8, 1, "", "MsgFormat"], [16, 6, 1, "", "MsgTuple"], [16, 8, 1, "", "MsgType"], [16, 6, 1, "", "ParameterObj"], [16, 6, 1, "", "RequestMsg"], [16, 2, 1, "", "deserialize"], [16, 2, 1, "", "parseMessageArgs"], [16, 2, 1, "", "parseParameter"], [16, 2, 1, "", "serialize"]], "Message.MessageArgs": [[16, 3, 1, "", "addPayload"], [16, 3, 1, "", "contains"], [16, 3, 1, "", "get"], [16, 3, 1, "", "getValueOf"], [16, 3, 1, "", "init"], [16, 7, 1, "", "param_list"], [16, 7, 1, "", "payload"], [16, 3, 1, "", "serialize"], [16, 7, 1, "", "size"], [16, 10, 1, "", "these"], [16, 3, 1, "", "this"]], "Message.MsgFormat": [[16, 9, 1, "", "BINARY"], [16, 9, 1, "", "STRING"]], "Message.MsgTuple": [[16, 3, 1, "", "error"], [16, 3, 1, "", "fromResponses"], [16, 3, 1, "", "fromScalar"], [16, 3, 1, "", "init"], [16, 7, 1, "", "msg"], [16, 7, 1, "", "msgFormat"], [16, 7, 1, "", "msgType"], [16, 3, 1, "", "newSymbol"], [16, 7, 1, "", "payload"], [16, 3, 1, "", "serialize"], [16, 3, 1, "", "success"], [16, 7, 1, "", "user"], [16, 3, 1, "", "warning"]], "Message.MsgType": [[16, 9, 1, "", "ERROR"], [16, 9, 1, "", "NORMAL"], [16, 9, 1, "", "WARNING"]], "Message.ParameterObj": [[16, 7, 1, "", "dtype"], [16, 3, 1, "", "getBigIntValue"], [16, 3, 1, "", "getBoolValue"], [16, 3, 1, "", "getDType"], [16, 3, 1, "", "getIntValue"], [16, 3, 1, "", "getList"], [16, 3, 1, "", "getPositiveIntValue"], [16, 3, 1, "", "getRealValue"], [16, 3, 1, "", "getScalarValue"], [16, 3, 1, "", "getTuple"], [16, 3, 1, "", "getUInt8Value"], [16, 3, 1, "", "getUIntValue"], [16, 3, 1, "", "getValue"], [16, 3, 1, "", "init"], [16, 7, 1, "", "key"], [16, 3, 1, "", "setKey"], [16, 3, 1, "", "setVal"], [16, 3, 1, "", "toScalar"], [16, 3, 1, "", "toScalarArray"], [16, 3, 1, "", "toScalarList"], [16, 3, 1, "", "toScalarTuple"], [16, 3, 1, "", "tryGetScalar"], [16, 7, 1, "", "val"]], "Message.RequestMsg": [[16, 7, 1, "", "args"], [16, 7, 1, "", "cmd"], [16, 7, 1, "", "format"], [16, 7, 1, "", "size"], [16, 7, 1, "", "token"], [16, 7, 1, "", "user"]], "MetricsMsg": [[17, 1, 1, "", "ArrayMetric"], [17, 1, 1, "", "AverageMeasurementTable"], [17, 1, 1, "", "AvgMetricValue"], [17, 1, 1, "", "CounterTable"], [17, 1, 1, "", "LocaleInfo"], [17, 1, 1, "", "LocaleMetric"], [17, 1, 1, "", "MeasurementTable"], [17, 1, 1, "", "Metric"], [17, 8, 1, "", "MetricCategory"], [17, 8, 1, "", "MetricDataType"], [17, 8, 1, "", "MetricScope"], [17, 1, 1, "", "MetricValue"], [17, 1, 1, "", "ServerInfo"], [17, 6, 1, "", "User"], [17, 1, 1, "", "UserMetric"], [17, 1, 1, "", "UserMetrics"], [17, 1, 1, "", "Users"], [17, 4, 1, "", "avgResponseTimeMetrics"], [17, 4, 1, "", "errorMetrics"], [17, 2, 1, "", "exportAllMetrics"], [17, 2, 1, "", "getAllUserRequestMetrics"], [17, 2, 1, "", "getAvgResponseTimeMetrics"], [17, 2, 1, "", "getMaxLocaleMemory"], [17, 2, 1, "", "getNumErrorMetrics"], [17, 2, 1, "", "getNumRequestMetrics"], [17, 2, 1, "", "getPerUserNumRequestMetrics"], [17, 2, 1, "", "getResponseTimeMetrics"], [17, 2, 1, "", "getServerInfo"], [17, 2, 1, "", "getServerMetrics"], [17, 2, 1, "", "getSystemMetrics"], [17, 2, 1, "", "getTotalMemoryUsedMetrics"], [17, 2, 1, "", "getTotalResponseTimeMetrics"], [17, 2, 1, "", "getUserRequestMetrics"], [17, 4, 1, "", "mLogger"], [17, 4, 1, "", "metricScope"], [17, 2, 1, "", "metricsMsg"], [17, 4, 1, "", "requestMetrics"], [17, 4, 1, "", "responseTimeMetrics"], [17, 4, 1, "", "serverMetrics"], [17, 4, 1, "", "totalMemoryUsedMetrics"], [17, 4, 1, "", "totalResponseTimeMetrics"], [17, 4, 1, "", "userMetrics"], [17, 4, 1, "", "users"]], "MetricsMsg.ArrayMetric": [[17, 7, 1, "", "cmd"], [17, 7, 1, "", "dType"], [17, 3, 1, "", "init"], [17, 7, 1, "", "size"]], "MetricsMsg.AverageMeasurementTable": [[17, 3, 1, "", "add"], [17, 3, 1, "", "getMeasurementTotal"], [17, 3, 1, "", "getNumMeasurements"], [17, 7, 1, "", "measurementTotals"], [17, 7, 1, "", "numMeasurements"]], "MetricsMsg.AvgMetricValue": [[17, 7, 1, "", "intTotal"], [17, 7, 1, "", "numValues"], [17, 7, 1, "", "realTotal"], [17, 3, 1, "", "update"]], "MetricsMsg.CounterTable": [[17, 7, 1, "", "counts"], [17, 3, 1, "", "decrement"], [17, 3, 1, "", "get"], [17, 3, 1, "", "increment"], [17, 10, 1, "", "items"], [17, 3, 1, "", "set"], [17, 3, 1, "", "size"], [17, 3, 1, "", "total"]], "MetricsMsg.LocaleInfo": [[17, 7, 1, "", "hostname"], [17, 7, 1, "", "id"], [17, 7, 1, "", "max_number_of_tasks"], [17, 7, 1, "", "name"], [17, 7, 1, "", "number_of_processing_units"], [17, 7, 1, "", "physical_memory"]], "MetricsMsg.LocaleMetric": [[17, 3, 1, "", "init"], [17, 7, 1, "", "locale_hostname"], [17, 7, 1, "", "locale_name"], [17, 7, 1, "", "locale_num"]], "MetricsMsg.MeasurementTable": [[17, 3, 1, "", "add"], [17, 3, 1, "", "get"], [17, 10, 1, "", "items"], [17, 7, 1, "", "measurements"], [17, 3, 1, "", "set"], [17, 3, 1, "", "size"]], "MetricsMsg.Metric": [[17, 7, 1, "", "category"], [17, 3, 1, "", "init"], [17, 7, 1, "", "name"], [17, 7, 1, "", "scope"], [17, 7, 1, "", "timestamp"], [17, 7, 1, "", "value"]], "MetricsMsg.MetricCategory": [[17, 9, 1, "", "ALL"], [17, 9, 1, "", "AVG_RESPONSE_TIME"], [17, 9, 1, "", "NUM_ERRORS"], [17, 9, 1, "", "NUM_REQUESTS"], [17, 9, 1, "", "RESPONSE_TIME"], [17, 9, 1, "", "SERVER"], [17, 9, 1, "", "SERVER_INFO"], [17, 9, 1, "", "SYSTEM"], [17, 9, 1, "", "TOTAL_MEMORY_USED"], [17, 9, 1, "", "TOTAL_RESPONSE_TIME"]], "MetricsMsg.MetricDataType": [[17, 9, 1, "", "INT"], [17, 9, 1, "", "REAL"]], "MetricsMsg.MetricScope": [[17, 9, 1, "", "GLOBAL"], [17, 9, 1, "", "LOCALE"], [17, 9, 1, "", "REQUEST"], [17, 9, 1, "", "USER"]], "MetricsMsg.MetricValue": [[17, 7, 1, "", "dataType"], [17, 3, 1, "", "init"], [17, 7, 1, "", "intValue"], [17, 7, 1, "", "realValue"], [17, 3, 1, "", "update"]], "MetricsMsg.ServerInfo": [[17, 7, 1, "", "hostname"], [17, 3, 1, "", "init"], [17, 7, 1, "", "locales"], [17, 7, 1, "", "number_of_locales"], [17, 7, 1, "", "server_port"], [17, 7, 1, "", "version"]], "MetricsMsg.User": [[17, 7, 1, "", "name"]], "MetricsMsg.UserMetric": [[17, 3, 1, "", "init"], [17, 7, 1, "", "user"]], "MetricsMsg.UserMetrics": [[17, 3, 1, "", "getPerUserNumRequestsPerCommandForAllUsersMetrics"], [17, 3, 1, "", "getPerUserNumRequestsPerCommandMetrics"], [17, 3, 1, "", "getUserMetrics"], [17, 3, 1, "", "incrementNumRequestsPerCommand"], [17, 3, 1, "", "incrementPerUserRequestMetrics"], [17, 3, 1, "", "incrementTotalNumRequests"], [17, 7, 1, "", "metrics"], [17, 7, 1, "", "users"]], "MetricsMsg.Users": [[17, 3, 1, "", "getUser"], [17, 3, 1, "", "getUserNames"], [17, 3, 1, "", "getUsers"], [17, 7, 1, "", "users"]], "MsgProcessing": [[18, 2, 1, "", "chunkInfoAsArray"], [18, 2, 1, "", "chunkInfoAsString"], [18, 2, 1, "", "clearMsg"], [18, 2, 1, "", "create"], [18, 2, 1, "", "createScalarArray"], [18, 2, 1, "", "deleteMsg"], [18, 2, 1, "", "getCommandMapMsg"], [18, 2, 1, "", "getRegistrationConfig"], [18, 2, 1, "", "getconfigMsg"], [18, 2, 1, "", "getmemavailMsg"], [18, 2, 1, "", "getmemusedMsg"], [18, 2, 1, "", "infoMsg"], [18, 4, 1, "", "mpLogger"], [18, 2, 1, "", "reprMsg"], [18, 2, 1, "", "setMsg"], [18, 2, 1, "", "strMsg"]], "MultiTypeRegEntry": [[19, 1, 1, "", "AbstractRegEntry"], [19, 1, 1, "", "ArrayRegEntry"], [19, 1, 1, "", "BitVectorRegEntry"], [19, 1, 1, "", "CategoricalRegEntry"], [19, 1, 1, "", "DataFrameRegEntry"], [19, 1, 1, "", "GenRegEntry"], [19, 1, 1, "", "GroupByRegEntry"], [19, 1, 1, "", "IndexRegEntry"], [19, 8, 1, "", "RegistryEntryType"], [19, 1, 1, "", "SegArrayRegEntry"], [19, 1, 1, "", "SeriesRegEntry"], [19, 4, 1, "", "regLogger"]], "MultiTypeRegEntry.AbstractRegEntry": [[19, 7, 1, "", "assignableTypes"], [19, 7, 1, "", "entryType"], [19, 3, 1, "", "init"], [19, 7, 1, "", "name"], [19, 3, 1, "", "setName"]], "MultiTypeRegEntry.ArrayRegEntry": [[19, 7, 1, "", "array"], [19, 3, 1, "", "asMap"], [19, 3, 1, "", "init"]], "MultiTypeRegEntry.BitVectorRegEntry": [[19, 7, 1, "", "array"], [19, 3, 1, "", "asMap"], [19, 3, 1, "", "init"], [19, 7, 1, "", "reverse"], [19, 7, 1, "", "width"]], "MultiTypeRegEntry.CategoricalRegEntry": [[19, 3, 1, "", "asMap"], [19, 7, 1, "", "categories"], [19, 7, 1, "", "codes"], [19, 3, 1, "", "init"], [19, 7, 1, "", "naCode"], [19, 7, 1, "", "permutation"], [19, 7, 1, "", "segments"]], "MultiTypeRegEntry.DataFrameRegEntry": [[19, 3, 1, "", "asMap"], [19, 7, 1, "", "column_names"], [19, 7, 1, "", "columns"], [19, 7, 1, "", "idx"], [19, 3, 1, "", "init"]], "MultiTypeRegEntry.GenRegEntry": [[19, 3, 1, "", "init"], [19, 7, 1, "", "objType"], [19, 3, 1, "", "toDataFrameRegEntry"]], "MultiTypeRegEntry.GroupByRegEntry": [[19, 3, 1, "", "asMap"], [19, 3, 1, "", "init"], [19, 7, 1, "", "keys"], [19, 7, 1, "", "permutation"], [19, 7, 1, "", "segments"], [19, 7, 1, "", "uki"]], "MultiTypeRegEntry.IndexRegEntry": [[19, 3, 1, "", "asMap"], [19, 7, 1, "", "idx"], [19, 3, 1, "", "init"]], "MultiTypeRegEntry.RegistryEntryType": [[19, 9, 1, "", "AbstractRegEntry"], [19, 9, 1, "", "ArrayRegEntry"], [19, 9, 1, "", "BitVectorRegEntry"], [19, 9, 1, "", "CategoricalRegEntry"], [19, 9, 1, "", "DataFrameRegEntry"], [19, 9, 1, "", "GenRegEntry"], [19, 9, 1, "", "GroupByRegEntry"], [19, 9, 1, "", "IndexRegEntry"], [19, 9, 1, "", "SegArrayRegEntry"], [19, 9, 1, "", "SeriesRegEntry"]], "MultiTypeRegEntry.SegArrayRegEntry": [[19, 3, 1, "", "asMap"], [19, 3, 1, "", "init"], [19, 7, 1, "", "lengths"], [19, 7, 1, "", "segments"], [19, 7, 1, "", "values"]], "MultiTypeRegEntry.SeriesRegEntry": [[19, 3, 1, "", "asMap"], [19, 7, 1, "", "idx"], [19, 3, 1, "", "init"], [19, 7, 1, "", "values"]], "MultiTypeSymEntry": [[20, 1, 1, "", "AbstractSymEntry"], [20, 1, 1, "", "CompositeSymEntry"], [20, 1, 1, "", "GenSparseSymEntry"], [20, 1, 1, "", "GenSymEntry"], [20, 1, 1, "", "GeneratorSymEntry"], [20, 1, 1, "", "SegStringSymEntry"], [20, 1, 1, "", "SparseSymEntry"], [20, 1, 1, "", "SymEntry"], [20, 8, 1, "", "SymbolEntryType"], [20, 2, 1, "", "createSymEntry"], [20, 2, 1, "", "createTypedSymEntry"], [20, 4, 1, "", "genLogger"], [20, 2, 1, "", "getArraySpecFromEntry"], [20, 2, 1, "", "layoutToStr"], [20, 2, 1, "", "toCompositeSymEntry"], [20, 2, 1, "", "toGenSparseSymEntry"], [20, 2, 1, "", "toGenSymEntry"], [20, 2, 1, "", "toGeneratorSymEntry"], [20, 2, 1, "", "toSegStringSymEntry"], [20, 2, 1, "", "toSymEntry"], [20, 2, 1, "", "tupShapeString"]], "MultiTypeSymEntry.AbstractSymEntry": [[20, 7, 1, "", "assignableTypes"], [20, 7, 1, "", "entryType"], [20, 3, 1, "", "entry__str__"], [20, 3, 1, "", "getSizeEstimate"], [20, 3, 1, "", "init"], [20, 3, 1, "", "isAssignableTo"], [20, 7, 1, "", "name"], [20, 3, 1, "", "removeDependents"], [20, 3, 1, "", "setName"]], "MultiTypeSymEntry.CompositeSymEntry": [[20, 3, 1, "", "attrib"], [20, 3, 1, "", "init"], [20, 7, 1, "", "ndim"], [20, 7, 1, "", "size"]], "MultiTypeSymEntry.GenSparseSymEntry": [[20, 3, 1, "", "attrib"], [20, 7, 1, "", "dtype"], [20, 3, 1, "", "entry__str__"], [20, 3, 1, "", "init"], [20, 7, 1, "", "itemsize"], [20, 7, 1, "", "layoutStr"], [20, 7, 1, "", "ndim"], [20, 7, 1, "", "nnz"], [20, 7, 1, "", "shape"], [20, 7, 1, "", "size"], [20, 3, 1, "", "toSparseSymEntry"]], "MultiTypeSymEntry.GenSymEntry": [[20, 3, 1, "", "attrib"], [20, 7, 1, "", "dtype"], [20, 3, 1, "", "entry__str__"], [20, 3, 1, "", "getSizeEstimate"], [20, 3, 1, "", "init"], [20, 7, 1, "", "itemsize"], [20, 7, 1, "", "ndim"], [20, 7, 1, "", "shape"], [20, 7, 1, "", "size"], [20, 3, 1, "", "toSymEntry"]], "MultiTypeSymEntry.GeneratorSymEntry": [[20, 7, 1, "", "etype"], [20, 7, 1, "", "generator"], [20, 3, 1, "", "init"], [20, 7, 1, "", "state"]], "MultiTypeSymEntry.SegStringSymEntry": [[20, 7, 1, "", "bytesEntry"], [20, 3, 1, "", "entry__str__"], [20, 7, 1, "", "etype"], [20, 3, 1, "", "getSizeEstimate"], [20, 3, 1, "", "init"], [20, 7, 1, "", "offsetsEntry"], [20, 3, 1, "", "removeDependents"]], "MultiTypeSymEntry.SparseSymEntry": [[20, 7, 1, "", "a"], [20, 3, 1, "", "deinit"], [20, 7, 1, "", "dimensions"], [20, 3, 1, "", "entry__str__"], [20, 7, 1, "", "etype"], [20, 3, 1, "", "init"], [20, 7, 1, "", "matLayout"], [20, 7, 1, "", "tupShape"]], "MultiTypeSymEntry.SymEntry": [[20, 7, 1, "", "a"], [20, 3, 1, "", "aD"], [20, 3, 1, "", "deinit"], [20, 7, 1, "", "dimensions"], [20, 3, 1, "", "entry__str__"], [20, 7, 1, "", "etype"], [20, 3, 1, "", "init"], [20, 7, 1, "", "max_bits"], [20, 7, 1, "", "tupShape"]], "MultiTypeSymEntry.SymbolEntryType": [[20, 9, 1, "", "AbstractSymEntry"], [20, 9, 1, "", "AnythingSymEntry"], [20, 9, 1, "", "ComplexTypedArraySymEntry"], [20, 9, 1, "", "CompositeSymEntry"], [20, 9, 1, "", "GenSparseSymEntry"], [20, 9, 1, "", "GenSymEntry"], [20, 9, 1, "", "GeneratorSymEntry"], [20, 9, 1, "", "None"], [20, 9, 1, "", "PrimitiveTypedArraySymEntry"], [20, 9, 1, "", "SegStringSymEntry"], [20, 9, 1, "", "SparseSymEntry"], [20, 9, 1, "", "TypedArraySymEntry"], [20, 9, 1, "", "UnknownSymEntry"]], "MultiTypeSymbolTable": [[21, 1, 1, "", "SymTab"], [21, 2, 1, "", "getGenericSparseArrayEntry"], [21, 2, 1, "", "getGenericTypedArrayEntry"], [21, 2, 1, "", "getSegStringEntry"], [21, 4, 1, "", "mtLogger"]], "MultiTypeSymbolTable.SymTab": [[21, 3, 1, "", "addEntry"], [21, 3, 1, "", "attrib"], [21, 3, 1, "", "checkTable"], [21, 3, 1, "", "clear"], [21, 3, 1, "", "contains"], [21, 3, 1, "", "datarepr"], [21, 3, 1, "", "datastr"], [21, 3, 1, "", "deleteEntry"], [21, 3, 1, "", "dump"], [21, 3, 1, "", "findAll"], [21, 3, 1, "", "formatEntry"], [21, 3, 1, "", "getEntries"], [21, 3, 1, "", "info"], [21, 3, 1, "", "insert"], [21, 3, 1, "", "memUsed"], [21, 3, 1, "", "nextName"], [21, 7, 1, "", "nid"], [21, 3, 1, "", "parseJson"], [21, 3, 1, "", "pretty"], [21, 7, 1, "", "registry"], [21, 7, 1, "", "serverid"], [21, 7, 1, "", "tab"], [21, 3, 1, "", "this"]], "NumPyDType": [[22, 8, 1, "", "DTK"], [22, 8, 1, "", "DType"], [22, 2, 1, "", "bool2str"], [22, 2, 1, "", "commonDType"], [22, 2, 1, "", "divDType"], [22, 2, 1, "", "dtype2str"], [22, 2, 1, "", "dtypeSize"], [22, 2, 1, "", "str2dtype"], [22, 2, 1, "", "type2fmt"], [22, 2, 1, "", "type2str"], [22, 2, 1, "", "typeSize"], [22, 2, 1, "", "whichDtype"]], "NumPyDType.DTK": [[22, 9, 1, "", "Bool"], [22, 9, 1, "", "Complex"], [22, 9, 1, "", "Float"], [22, 9, 1, "", "Integer"], [22, 9, 1, "", "Other"]], "NumPyDType.DType": [[22, 9, 1, "", "BigInt"], [22, 9, 1, "", "Bool"], [22, 9, 1, "", "Complex128"], [22, 9, 1, "", "Complex64"], [22, 9, 1, "", "Float32"], [22, 9, 1, "", "Float64"], [22, 9, 1, "", "Int16"], [22, 9, 1, "", "Int32"], [22, 9, 1, "", "Int64"], [22, 9, 1, "", "Int8"], [22, 9, 1, "", "Strings"], [22, 9, 1, "", "UInt16"], [22, 9, 1, "", "UInt32"], [22, 9, 1, "", "UInt64"], [22, 9, 1, "", "UInt8"], [22, 9, 1, "", "UNDEF"]], "NumericUnicodes": [[23, 4, 1, "", "allNumericUnicodes"]], "RadixSortLSD": [[24, 6, 1, "", "KeysComparator"], [24, 6, 1, "", "KeysRanksComparator"], [24, 4, 1, "", "RSLSD_numTasks"], [24, 4, 1, "", "RSLSD_vv"], [24, 4, 1, "", "Tasks"], [24, 2, 1, "", "calcBlock"], [24, 2, 1, "", "calcGlobalIndex"], [24, 4, 1, "", "numTasks"], [24, 2, 1, "", "radixSortLSD"], [24, 2, 1, "", "radixSortLSD_keys"], [24, 2, 1, "", "radixSortLSD_keys_memEst"], [24, 2, 1, "", "radixSortLSD_memEst"], [24, 2, 1, "", "radixSortLSD_ranks"], [24, 4, 1, "", "rsLogger"], [24, 4, 1, "", "vv"]], "RadixSortLSD.KeysComparator": [[24, 3, 1, "", "key"]], "RadixSortLSD.KeysRanksComparator": [[24, 3, 1, "", "key"]], "RegistrationConfig": [[46, 4, 1, "", "arrayDimensionsStr"], [46, 11, 1, "", "arrayDimensionsTy"], [46, 11, 1, "", "arrayElementsTy"], [46, 4, 1, "", "registrationConfigSpec"]], "Registry": [[25, 1, 1, "", "RegTab"], [25, 4, 1, "", "regLogger"]], "Registry.RegTab": [[25, 3, 1, "", "checkAvailability"], [25, 3, 1, "", "checkTable"], [25, 3, 1, "", "contains"], [25, 3, 1, "", "list_registry"], [25, 3, 1, "", "lookup"], [25, 3, 1, "", "register_array"], [25, 3, 1, "", "register_bitvector"], [25, 3, 1, "", "register_categorical"], [25, 3, 1, "", "register_categorical_components"], [25, 3, 1, "", "register_dataframe"], [25, 3, 1, "", "register_groupby"], [25, 3, 1, "", "register_index"], [25, 3, 1, "", "register_index_components"], [25, 3, 1, "", "register_segarray"], [25, 3, 1, "", "register_segarray_components"], [25, 3, 1, "", "register_series"], [25, 7, 1, "", "registered_entries"], [25, 7, 1, "", "tab"], [25, 3, 1, "", "unregister_array"], [25, 3, 1, "", "unregister_bitvector"], [25, 3, 1, "", "unregister_categorical"], [25, 3, 1, "", "unregister_categorical_components"], [25, 3, 1, "", "unregister_dataframe"], [25, 3, 1, "", "unregister_groupby"], [25, 3, 1, "", "unregister_index"], [25, 3, 1, "", "unregister_index_components"], [25, 3, 1, "", "unregister_segarray"], [25, 3, 1, "", "unregister_segarray_components"], [25, 3, 1, "", "unregister_series"]], "Security": [[26, 2, 1, "", "generateToken"], [26, 2, 1, "", "getArkoudaToken"], [26, 2, 1, "", "setArkoudaToken"]], "SegStringSort": [[27, 6, 1, "", "StringIntComparator"], [27, 2, 1, "", "calcBlock"], [27, 2, 1, "", "calcGlobalIndex"], [27, 2, 1, "", "gatherLongStrings"], [27, 2, 1, "", "getPivot"], [27, 2, 1, "", "radixSortLSD_raw"], [27, 4, 1, "", "ssLogger"], [27, 2, 1, "", "twoPhaseStringSort"]], "SegStringSort.StringIntComparator": [[27, 3, 1, "", "keyPart"]], "SegmentedComputation": [[28, 8, 1, "", "SegFunction"], [28, 2, 1, "", "computeOnSegments"], [28, 2, 1, "", "computeSegmentOwnership"]], "SegmentedComputation.SegFunction": [[28, 9, 1, "", "SipHash128"], [28, 9, 1, "", "StringCompareLiteralEq"], [28, 9, 1, "", "StringCompareLiteralNeq"], [28, 9, 1, "", "StringIsAlphaNumeric"], [28, 9, 1, "", "StringIsAlphabetic"], [28, 9, 1, "", "StringIsDecimal"], [28, 9, 1, "", "StringIsDigit"], [28, 9, 1, "", "StringIsEmpty"], [28, 9, 1, "", "StringIsLower"], [28, 9, 1, "", "StringIsNumeric"], [28, 9, 1, "", "StringIsSpace"], [28, 9, 1, "", "StringIsTitle"], [28, 9, 1, "", "StringIsUpper"], [28, 9, 1, "", "StringSearch"], [28, 9, 1, "", "StringToNumericIgnore"], [28, 9, 1, "", "StringToNumericReturnValidity"], [28, 9, 1, "", "StringToNumericStrict"]], "SegmentedString": [[29, 2, 1, "", "!="], [29, 2, 1, "", "=="], [29, 8, 1, "", "Fixes"], [29, 4, 1, "", "NULL_STRINGS_VALUE"], [29, 1, 1, "", "SegString"], [29, 4, 1, "", "SegmentedStringUseHash"], [29, 2, 1, "", "assembleSegStringFromParts"], [29, 2, 1, "", "checkCompile"], [29, 2, 1, "", "compare"], [29, 2, 1, "", "concat"], [29, 2, 1, "", "getSegString"], [29, 2, 1, "", "in1d"], [29, 2, 1, "", "interpretAsBytes"], [29, 2, 1, "", "interpretAsString"], [29, 2, 1, "", "isNumericChar"], [29, 2, 1, "", "isNumericString"], [29, 2, 1, "", "memcmp"], [29, 2, 1, "", "segStrFull"], [29, 4, 1, "", "ssLogger"], [29, 2, 1, "", "stringBytesToUintArr"], [29, 2, 1, "", "stringCompareLiteralEq"], [29, 2, 1, "", "stringCompareLiteralNeq"], [29, 2, 1, "", "stringIsAlphaNumeric"], [29, 2, 1, "", "stringIsAlphabetic"], [29, 2, 1, "", "stringIsDecimal"], [29, 2, 1, "", "stringIsDigit"], [29, 2, 1, "", "stringIsEmpty"], [29, 2, 1, "", "stringIsLower"], [29, 2, 1, "", "stringIsNumeric"], [29, 2, 1, "", "stringIsSpace"], [29, 2, 1, "", "stringIsTitle"], [29, 2, 1, "", "stringIsUpper"], [29, 2, 1, "", "stringSearch"], [29, 2, 1, "", "unsafeCompileRegex"]], "SegmentedString.Fixes": [[29, 9, 1, "", "prefixes"], [29, 9, 1, "", "suffixes"]], "SegmentedString.SegString": [[29, 3, 1, "", "argGroup"], [29, 3, 1, "", "argsort"], [29, 3, 1, "", "bytesToUintArr"], [29, 3, 1, "", "capitalize"], [29, 7, 1, "", "composite"], [29, 3, 1, "", "ediff"], [29, 3, 1, "", "findAllMatches"], [29, 3, 1, "", "findMatchLocations"], [29, 3, 1, "", "findSubstringInBytes"], [29, 3, 1, "", "getFixes"], [29, 3, 1, "", "getLengths"], [29, 3, 1, "", "init"], [29, 3, 1, "", "isDecimal"], [29, 3, 1, "", "isLower"], [29, 3, 1, "", "isNumeric"], [29, 3, 1, "", "isSorted"], [29, 3, 1, "", "isTitle"], [29, 3, 1, "", "isUpper"], [29, 3, 1, "", "isalnum"], [29, 3, 1, "", "isalpha"], [29, 3, 1, "", "isdigit"], [29, 3, 1, "", "isempty"], [29, 3, 1, "", "isspace"], [29, 3, 1, "", "lower"], [29, 7, 1, "", "nBytes"], [29, 7, 1, "", "name"], [29, 7, 1, "", "offsets"], [29, 3, 1, "", "peel"], [29, 3, 1, "", "peelRegex"], [29, 3, 1, "", "segStrWhere"], [29, 3, 1, "", "show"], [29, 3, 1, "", "siphash"], [29, 7, 1, "", "size"], [29, 3, 1, "", "stick"], [29, 3, 1, "", "strip"], [29, 3, 1, "", "sub"], [29, 3, 1, "", "substringSearch"], [29, 3, 1, "", "this"], [29, 3, 1, "", "title"], [29, 3, 1, "", "upper"], [29, 7, 1, "", "values"]], "ServerConfig": [[30, 4, 1, "", "BSLASH"], [30, 8, 1, "", "Deployment"], [30, 4, 1, "", "ESCAPED_QUOTES"], [30, 8, 1, "", "ObjType"], [30, 4, 1, "", "Q"], [30, 4, 1, "", "QCQ"], [30, 4, 1, "", "RSLSD_bitsPerDigit"], [30, 4, 1, "", "ServerPort"], [30, 2, 1, "", "appendToConfigStr"], [30, 4, 1, "", "arkoudaVersion"], [30, 2, 1, "", "arrayDimIsSupported"], [30, 2, 1, "", "arrayElmTypeIsSupported"], [30, 4, 1, "", "authenticate"], [30, 4, 1, "", "autoShutdown"], [30, 4, 1, "", "chplVersionArkouda"], [30, 2, 1, "", "createConfig"], [30, 2, 1, "", "currentTime"], [30, 4, 1, "", "deployment"], [30, 2, 1, "", "getByteorder"], [30, 2, 1, "", "getChplVersion"], [30, 2, 1, "", "getConfig"], [30, 2, 1, "", "getConnectHostname"], [30, 2, 1, "", "getEnv"], [30, 2, 1, "", "getEnvInt"], [30, 2, 1, "", "getMemLimit"], [30, 2, 1, "", "getMemUsed"], [30, 2, 1, "", "getPhysicalMemHere"], [30, 2, 1, "", "get_hostname"], [30, 4, 1, "", "logChannel"], [30, 4, 1, "", "logCommands"], [30, 4, 1, "", "logLevel"], [30, 4, 1, "", "memHighWater"], [30, 2, 1, "", "overMemLimit"], [30, 4, 1, "", "perLocaleMemLimit"], [30, 4, 1, "", "pythonVersion"], [30, 4, 1, "", "regexMaxCaptures"], [30, 4, 1, "", "saveUsedModules"], [30, 4, 1, "", "scLogger"], [30, 4, 1, "", "serverConnectionInfo"], [30, 4, 1, "", "serverHostname"], [30, 4, 1, "", "serverInfoNoSplash"], [30, 4, 1, "", "trace"], [30, 4, 1, "", "usedModulesFmt"]], "ServerConfig.Deployment": [[30, 9, 1, "", "KUBERNETES"], [30, 9, 1, "", "STANDARD"]], "ServerConfig.ObjType": [[30, 9, 1, "", "ARRAYVIEW"], [30, 9, 1, "", "BITVECTOR"], [30, 9, 1, "", "CATEGORICAL"], [30, 9, 1, "", "DATAFRAME"], [30, 9, 1, "", "DATETIME"], [30, 9, 1, "", "GROUPBY"], [30, 9, 1, "", "INDEX"], [30, 9, 1, "", "IPV4"], [30, 9, 1, "", "MULTIINDEX"], [30, 9, 1, "", "PDARRAY"], [30, 9, 1, "", "SEGARRAY"], [30, 9, 1, "", "SERIES"], [30, 9, 1, "", "STRINGS"], [30, 9, 1, "", "TIMEDELTA"], [30, 9, 1, "", "UNKNOWN"]], "ServerConfig.bytes": [[30, 3, 1, "", "splitMsgToTuple"]], "ServerConfig.string": [[30, 3, 1, "", "splitMsgToTuple"]], "ServerDaemon": [[31, 1, 1, "", "ArkoudaServerDaemon"], [31, 1, 1, "", "DefaultServerDaemon"], [31, 1, 1, "", "ExternalIntegrationServerDaemon"], [31, 1, 1, "", "MetricsServerDaemon"], [31, 8, 1, "", "ServerDaemonType"], [31, 1, 1, "", "ServerStatusDaemon"], [31, 2, 1, "", "getDaemonTypes"], [31, 2, 1, "", "getServerDaemon"], [31, 2, 1, "", "getServerDaemons"], [31, 2, 1, "", "integrationEnabled"], [31, 2, 1, "", "metricsEnabled"], [31, 2, 1, "", "multipleServerDaemons"], [31, 2, 1, "", "register"], [31, 4, 1, "", "sdLogger"], [31, 4, 1, "", "serverDaemonTypes"]], "ServerDaemon.ArkoudaServerDaemon": [[31, 3, 1, "", "extractRequest"], [31, 7, 1, "", "port"], [31, 3, 1, "", "requestShutdown"], [31, 3, 1, "", "run"], [31, 3, 1, "", "shutdown"], [31, 7, 1, "", "shutdownDaemon"], [31, 7, 1, "", "st"]], "ServerDaemon.DefaultServerDaemon": [[31, 7, 1, "", "activityMutex"], [31, 7, 1, "", "arkDirectory"], [31, 3, 1, "", "authenticateUser"], [31, 7, 1, "", "connectUrl"], [31, 7, 1, "", "context"], [31, 3, 1, "", "createServerConnectionInfo"], [31, 3, 1, "", "deleteServerConnectionInfo"], [31, 3, 1, "", "getConnectUrl"], [31, 3, 1, "", "getErrorName"], [31, 7, 1, "", "idlePeriodStart"], [31, 3, 1, "", "init"], [31, 3, 1, "", "initArkoudaDirectory"], [31, 3, 1, "", "printServerSplashMessage"], [31, 3, 1, "", "processErrorMessageMetrics"], [31, 3, 1, "", "processMetrics"], [31, 3, 1, "", "registerServerCommands"], [31, 7, 1, "", "repCount"], [31, 7, 1, "", "reqCount"], [31, 3, 1, "", "requestShutdown"], [31, 3, 1, "", "run"], [31, 7, 1, "", "seenNotableActivity"], [31, 3, 1, "", "sendRepMsg"], [31, 3, 1, "", "serverActivityMark"], [31, 3, 1, "", "serverIdleStart"], [31, 3, 1, "", "serverIdleStop"], [31, 7, 1, "", "serverToken"], [31, 3, 1, "", "shutdown"], [31, 7, 1, "", "socket"], [31, 3, 1, "", "startAsyncCheckpointTask"], [31, 3, 1, "", "waitForActivityMutex"]], "ServerDaemon.ExternalIntegrationServerDaemon": [[31, 3, 1, "", "run"], [31, 3, 1, "", "shutdown"]], "ServerDaemon.MetricsServerDaemon": [[31, 7, 1, "", "context"], [31, 3, 1, "", "init"], [31, 3, 1, "", "run"], [31, 7, 1, "", "socket"]], "ServerDaemon.ServerDaemonType": [[31, 9, 1, "", "DEFAULT"], [31, 9, 1, "", "INTEGRATION"], [31, 9, 1, "", "METRICS"], [31, 9, 1, "", "STATUS"]], "ServerDaemon.ServerStatusDaemon": [[31, 7, 1, "", "context"], [31, 3, 1, "", "init"], [31, 3, 1, "", "run"], [31, 7, 1, "", "socket"]], "ServerErrorStrings": [[32, 1, 1, "", "ErrorWithMsg"], [32, 2, 1, "", "incompatibleArgumentsError"], [32, 2, 1, "", "notImplementedError"], [32, 2, 1, "", "unknownError"], [32, 2, 1, "", "unknownSymbolError"], [32, 2, 1, "", "unrecognizedTypeError"], [32, 2, 1, "", "unsupportedTypeError"]], "ServerErrorStrings.ErrorWithMsg": [[32, 7, 1, "", "msg"]], "ServerErrors": [[33, 1, 1, "", "ArgumentError"], [33, 1, 1, "", "ConfigurationError"], [33, 1, 1, "", "DatasetNotFoundError"], [33, 1, 1, "", "ErrorWithContext"], [33, 1, 1, "", "HDF5FileFormatError"], [33, 1, 1, "", "IOError"], [33, 1, 1, "", "MismatchedAppendError"], [33, 1, 1, "", "NotHDF5FileError"], [33, 1, 1, "", "NotImplementedError"], [33, 1, 1, "", "OutOfBoundsError"], [33, 1, 1, "", "OverMemoryLimitError"], [33, 1, 1, "", "SegStringError"], [33, 1, 1, "", "UnknownSymbolError"], [33, 1, 1, "", "UnsupportedOSError"], [33, 1, 1, "", "WriteModeError"], [33, 2, 1, "", "generateErrorContext"], [33, 2, 1, "", "getErrorWithContext"]], "ServerErrors.ArgumentError": [[33, 3, 1, "", "init"]], "ServerErrors.ConfigurationError": [[33, 3, 1, "", "init"]], "ServerErrors.DatasetNotFoundError": [[33, 3, 1, "", "init"]], "ServerErrors.ErrorWithContext": [[33, 7, 1, "", "errorClass"], [33, 3, 1, "", "init"], [33, 7, 1, "", "lineNumber"], [33, 7, 1, "", "moduleName"], [33, 3, 1, "", "publish"], [33, 7, 1, "", "publishMsg"], [33, 7, 1, "", "routineName"]], "ServerErrors.HDF5FileFormatError": [[33, 3, 1, "", "init"]], "ServerErrors.IOError": [[33, 3, 1, "", "init"]], "ServerErrors.MismatchedAppendError": [[33, 3, 1, "", "init"]], "ServerErrors.NotHDF5FileError": [[33, 3, 1, "", "init"]], "ServerErrors.NotImplementedError": [[33, 3, 1, "", "init"]], "ServerErrors.OverMemoryLimitError": [[33, 3, 1, "", "init"]], "ServerErrors.SegStringError": [[33, 3, 1, "", "init"]], "ServerErrors.UnknownSymbolError": [[33, 3, 1, "", "init"]], "ServerErrors.UnsupportedOSError": [[33, 3, 1, "", "init"]], "ServerErrors.WriteModeError": [[33, 3, 1, "", "init"]], "SipHash": [[34, 4, 1, "", "cROUNDS"], [34, 4, 1, "", "dROUNDS"], [34, 4, 1, "", "shLogger"], [34, 2, 1, "", "sipHash128"], [34, 2, 1, "", "sipHash64"]], "SparseMatrix": [[35, 2, 1, "", "addElementsToSparseArray"], [35, 2, 1, "", "colMajorExScan"], [35, 2, 1, "", "denseMatMatMult"], [35, 2, 1, "", "fillSparseMatrix"], [35, 2, 1, "", "getGrid"], [35, 2, 1, "", "getLSA"], [35, 2, 1, "", "getLSD"], [35, 2, 1, "", "randSparseMatrix"], [35, 2, 1, "", "rowMajorExScan"], [35, 2, 1, "", "sparseMatFromArrays"], [35, 2, 1, "", "sparseMatMatMult"], [35, 2, 1, "", "sparseMatToPdarray"]], "SpsMatUtil": [[36, 8, 1, "", "Layout"], [36, 2, 1, "", "emptySparseDomLike"], [36, 2, 1, "", "makeSparseMat"], [36, 1, 1, "", "merge"], [36, 4, 1, "", "rands"], [36, 4, 1, "", "seed"], [36, 6, 1, "", "sparseMatDat"], [36, 2, 1, "", "writeSparseMatrix"]], "SpsMatUtil.Layout": [[36, 9, 1, "", "CSC"], [36, 9, 1, "", "CSR"]], "SpsMatUtil.merge": [[36, 3, 1, "", "accumulate"], [36, 3, 1, "", "accumulateOntoState"], [36, 3, 1, "", "clone"], [36, 3, 1, "", "combine"], [36, 7, 1, "", "eltType"], [36, 3, 1, "", "generate"], [36, 3, 1, "", "identity"], [36, 7, 1, "", "value"]], "SpsMatUtil.sparseMatDat": [[36, 3, 1, "", "add"]], "StatusMsg": [[37, 2, 1, "", "getMemoryStatusMsg"], [37, 4, 1, "", "sLogger"]], "SymArrayDmap": [[38, 8, 1, "", "Dmap"], [38, 4, 1, "", "MyDmap"], [38, 2, 1, "", "makeDistArray"], [38, 2, 1, "", "makeDistDom"], [38, 2, 1, "", "makeDistDomType"], [38, 2, 1, "", "makeSparseArray"], [38, 2, 1, "", "makeSparseDomain"]], "SymArrayDmap.Dmap": [[38, 9, 1, "", "blockDist"], [38, 9, 1, "", "defaultRectangular"]], "Unique": [[39, 4, 1, "", "uLogger"], [39, 2, 1, "", "uniqueFromSorted"], [39, 2, 1, "", "uniqueFromTruth"], [39, 2, 1, "", "uniqueGroup"], [39, 2, 1, "", "uniqueSort"], [39, 2, 1, "", "uniqueSortWithInverse"]], "arkouda_server": [[40, 4, 1, "", "asLogger"], [40, 2, 1, "", "main"]]}, "objnames": {"0": ["chpl", "module", " module"], "1": ["chpl", "class", " class"], "2": ["chpl", "function", " function"], "3": ["chpl", "method", " method"], "4": ["chpl", "data", " data"], "5": ["chpl", "iterfunction", " iterfunction"], "6": ["chpl", "record", " record"], "7": ["chpl", "attribute", " attribute"], "8": ["chpl", "enum", " enum"], "9": ["chpl", "enumconstant", " enumconstant"], "10": ["chpl", "itermethod", " itermethod"], "11": ["chpl", "type", " type"]}, "objtypes": {"0": "chpl:module", "1": "chpl:class", "2": "chpl:function", "3": "chpl:method", "4": "chpl:data", "5": "chpl:iterfunction", "6": "chpl:record", "7": "chpl:attribute", "8": "chpl:enum", "9": "chpl:enumconstant", "10": "chpl:itermethod", "11": "chpl:type"}, "terms": {"": [1, 3, 9, 16, 17, 20, 21, 22, 29, 33, 39], "0": [1, 4, 5, 9, 11, 17, 18, 20, 21, 24, 29, 30, 31, 36], "0th": 1, "0x10107": 23, "0x10108": 23, "0x10109": 23, "0x1010a": 23, "0x1010b": 23, "0x1010c": 23, "0x1010d": 23, "0x1010e": 23, "0x1010f": 23, "0x10110": 23, "0x10111": 23, "0x10112": 23, "0x10113": 23, "0x10114": 23, "0x10115": 23, "0x10116": 23, "0x10117": 23, "0x10118": 23, "0x10119": 23, "0x1011a": 23, "0x1011b": 23, "0x1011c": 23, "0x1011d": 23, "0x1011e": 23, "0x1011f": 23, "0x10120": 23, "0x10121": 23, "0x10122": 23, "0x10123": 23, "0x10124": 23, "0x10125": 23, "0x10126": 23, "0x10127": 23, "0x10128": 23, "0x10129": 23, "0x1012a": 23, "0x1012b": 23, "0x1012c": 23, "0x1012d": 23, "0x1012e": 23, "0x1012f": 23, "0x10130": 23, "0x10131": 23, "0x10132": 23, "0x10133": 23, "0x10140": 23, "0x10141": 23, "0x10142": 23, "0x10143": 23, "0x10144": 23, "0x10145": 23, "0x10146": 23, "0x10147": 23, "0x10148": 23, "0x10149": 23, "0x1014a": 23, "0x1014b": 23, "0x1014c": 23, "0x1014d": 23, "0x1014e": 23, "0x1014f": 23, "0x10150": 23, "0x10151": 23, "0x10152": 23, "0x10153": 23, "0x10154": 23, "0x10155": 23, "0x10156": 23, "0x10157": 23, "0x10158": 23, "0x10159": 23, "0x1015a": 23, "0x1015b": 23, "0x1015c": 23, "0x1015d": 23, "0x1015e": 23, "0x1015f": 23, "0x10160": 23, "0x10161": 23, "0x10162": 23, "0x10163": 23, "0x10164": 23, "0x10165": 23, "0x10166": 23, "0x10167": 23, "0x10168": 23, "0x10169": 23, "0x1016a": 23, "0x1016b": 23, "0x1016c": 23, "0x1016d": 23, "0x1016e": 23, "0x1016f": 23, "0x10170": 23, "0x10171": 23, "0x10172": 23, "0x10173": 23, "0x10174": 23, "0x10175": 23, "0x10176": 23, "0x10177": 23, "0x10178": 23, "0x1018a": 23, "0x1018b": 23, "0x102e1": 23, "0x102e2": 23, "0x102e3": 23, "0x102e4": 23, "0x102e5": 23, "0x102e6": 23, "0x102e7": 23, "0x102e8": 23, "0x102e9": 23, "0x102ea": 23, "0x102eb": 23, "0x102ec": 23, "0x102ed": 23, "0x102ee": 23, "0x102ef": 23, "0x102f0": 23, "0x102f1": 23, "0x102f2": 23, "0x102f3": 23, "0x102f4": 23, "0x102f5": 23, "0x102f6": 23, "0x102f7": 23, "0x102f8": 23, "0x102f9": 23, "0x102fa": 23, "0x102fb": 23, "0x10320": 23, "0x10321": 23, "0x10322": 23, "0x10323": 23, "0x10341": 23, "0x1034a": 23, "0x103d1": 23, "0x103d2": 23, "0x103d3": 23, "0x103d4": 23, "0x103d5": 23, "0x1040": 23, "0x1041": 23, "0x1042": 23, "0x1043": 23, "0x1044": 23, "0x1045": 23, "0x1046": 23, "0x1047": 23, "0x1048": 23, "0x1049": 23, "0x104a0": 23, "0x104a1": 23, "0x104a2": 23, "0x104a3": 23, "0x104a4": 23, "0x104a5": 23, "0x104a6": 23, "0x104a7": 23, "0x104a8": 23, "0x104a9": 23, "0x10858": 23, "0x10859": 23, "0x1085a": 23, "0x1085b": 23, "0x1085c": 23, "0x1085d": 23, "0x1085e": 23, "0x1085f": 23, "0x10879": 23, "0x1087a": 23, "0x1087b": 23, "0x1087c": 23, "0x1087d": 23, "0x1087e": 23, "0x1087f": 23, "0x108a7": 23, "0x108a8": 23, "0x108a9": 23, "0x108aa": 23, "0x108ab": 23, "0x108ac": 23, "0x108ad": 23, "0x108ae": 23, "0x108af": 23, "0x108fb": 23, "0x108fc": 23, "0x108fd": 23, "0x108fe": 23, "0x108ff": 23, "0x1090": 23, "0x1091": 23, "0x10916": 23, "0x10917": 23, "0x10918": 23, "0x10919": 23, "0x1091a": 23, "0x1091b": 23, "0x1092": 23, "0x1093": 23, "0x1094": 23, "0x1095": 23, "0x1096": 23, "0x1097": 23, "0x1098": 23, "0x1099": 23, "0x109bc": 23, "0x109bd": 23, "0x109c0": 23, "0x109c1": 23, "0x109c2": 23, "0x109c3": 23, "0x109c4": 23, "0x109c5": 23, "0x109c6": 23, "0x109c7": 23, "0x109c8": 23, "0x109c9": 23, "0x109ca": 23, "0x109cb": 23, "0x109cc": 23, "0x109cd": 23, "0x109ce": 23, "0x109cf": 23, "0x109d2": 23, "0x109d3": 23, "0x109d4": 23, "0x109d5": 23, "0x109d6": 23, "0x109d7": 23, "0x109d8": 23, "0x109d9": 23, "0x109da": 23, "0x109db": 23, "0x109dc": 23, "0x109dd": 23, "0x109de": 23, "0x109df": 23, "0x109e0": 23, "0x109e1": 23, "0x109e2": 23, "0x109e3": 23, "0x109e4": 23, "0x109e5": 23, "0x109e6": 23, "0x109e7": 23, "0x109e8": 23, "0x109e9": 23, "0x109ea": 23, "0x109eb": 23, "0x109ec": 23, "0x109ed": 23, "0x109ee": 23, "0x109ef": 23, "0x109f0": 23, "0x109f1": 23, "0x109f2": 23, "0x109f3": 23, "0x109f4": 23, "0x109f5": 23, "0x109f6": 23, "0x109f7": 23, "0x109f8": 23, "0x109f9": 23, "0x109fa": 23, "0x109fb": 23, "0x109fc": 23, "0x109fd": 23, "0x109fe": 23, "0x109ff": 23, "0x10a": 23, "0x10a40": 23, "0x10a41": 23, "0x10a42": 23, "0x10a43": 23, "0x10a44": 23, "0x10a45": 23, "0x10a46": 23, "0x10a47": 23, "0x10a48": 23, "0x10a7d": 23, "0x10a7e": 23, "0x10a9d": 23, "0x10a9e": 23, "0x10a9f": 23, "0x10aeb": 23, "0x10aec": 23, "0x10aee": 23, "0x10aef": 23, "0x10b58": 23, "0x10b59": 23, "0x10b5a": 23, "0x10b5b": 23, "0x10b5c": 23, "0x10b5d": 23, "0x10b5e": 23, "0x10b5f": 23, "0x10b78": 23, "0x10b79": 23, "0x10b7a": 23, "0x10b7b": 23, "0x10b7c": 23, "0x10b7d": 23, "0x10b7e": 23, "0x10b7f": 23, "0x10ba9": 23, "0x10baa": 23, "0x10bab": 23, "0x10bac": 23, "0x10bad": 23, "0x10bae": 23, "0x10baf": 23, "0x10cfa": 23, "0x10cfb": 23, "0x10cfc": 23, "0x10cfd": 23, "0x10cfe": 23, "0x10cff": 23, "0x10d30": 23, "0x10d31": 23, "0x10d32": 23, "0x10d33": 23, "0x10d34": 23, "0x10d35": 23, "0x10d36": 23, "0x10d37": 23, "0x10d38": 23, "0x10d39": 23, "0x10e60": 23, "0x10e61": 23, "0x10e62": 23, "0x10e63": 23, "0x10e64": 23, "0x10e65": 23, "0x10e66": 23, "0x10e67": 23, "0x10e68": 23, "0x10e69": 23, "0x10e6a": 23, "0x10e6b": 23, "0x10e6c": 23, "0x10e6d": 23, "0x10e6e": 23, "0x10e6f": 23, "0x10e70": 23, "0x10e71": 23, "0x10e72": 23, "0x10e73": 23, "0x10e74": 23, "0x10e75": 23, "0x10e76": 23, "0x10e77": 23, "0x10e78": 23, "0x10e79": 23, "0x10e7a": 23, "0x10e7b": 23, "0x10e7c": 23, "0x10e7d": 23, "0x10e7e": 23, "0x10f1d": 23, "0x10f1e": 23, "0x10f1f": 23, "0x10f20": 23, "0x10f21": 23, "0x10f22": 23, "0x10f23": 23, "0x10f24": 23, "0x10f25": 23, "0x10f26": 23, "0x10f51": 23, "0x10f52": 23, "0x10f53": 23, "0x10f54": 23, "0x10fc5": 23, "0x10fc6": 23, "0x10fc7": 23, "0x10fc8": 23, "0x10fc9": 23, "0x10fca": 23, "0x10fcb": 23, "0x11052": 23, "0x11053": 23, "0x11054": 23, "0x11055": 23, "0x11056": 23, "0x11057": 23, "0x11058": 23, "0x11059": 23, "0x1105a": 23, "0x1105b": 23, "0x1105c": 23, "0x1105d": 23, "0x1105e": 23, "0x1105f": 23, "0x11060": 23, "0x11061": 23, "0x11062": 23, "0x11063": 23, "0x11064": 23, "0x11065": 23, "0x11066": 23, "0x11067": 23, "0x11068": 23, "0x11069": 23, "0x1106a": 23, "0x1106b": 23, "0x1106c": 23, "0x1106d": 23, "0x1106e": 23, "0x1106f": 23, "0x110f0": 23, "0x110f1": 23, "0x110f2": 23, "0x110f3": 23, "0x110f4": 23, "0x110f5": 23, "0x110f6": 23, "0x110f7": 23, "0x110f8": 23, "0x110f9": 23, "0x11136": 23, "0x11137": 23, "0x11138": 23, "0x11139": 23, "0x1113a": 23, "0x1113b": 23, "0x1113c": 23, "0x1113d": 23, "0x1113e": 23, "0x1113f": 23, "0x111d0": 23, "0x111d1": 23, "0x111d2": 23, "0x111d3": 23, "0x111d4": 23, "0x111d5": 23, "0x111d6": 23, "0x111d7": 23, "0x111d8": 23, "0x111d9": 23, "0x111e1": 23, "0x111e2": 23, "0x111e3": 23, "0x111e4": 23, "0x111e5": 23, "0x111e6": 23, "0x111e7": 23, "0x111e8": 23, "0x111e9": 23, "0x111ea": 23, "0x111eb": 23, "0x111ec": 23, "0x111ed": 23, "0x111ee": 23, "0x111ef": 23, "0x111f0": 23, "0x111f1": 23, "0x111f2": 23, "0x111f3": 23, "0x111f4": 23, "0x112f0": 23, "0x112f1": 23, "0x112f2": 23, "0x112f3": 23, "0x112f4": 23, "0x112f5": 23, "0x112f6": 23, "0x112f7": 23, "0x112f8": 23, "0x112f9": 23, "0x11450": 23, "0x11451": 23, "0x11452": 23, "0x11453": 23, "0x11454": 23, "0x11455": 23, "0x11456": 23, "0x11457": 23, "0x11458": 23, "0x11459": 23, "0x114d0": 23, "0x114d1": 23, "0x114d2": 23, "0x114d3": 23, "0x114d4": 23, "0x114d5": 23, "0x114d6": 23, "0x114d7": 23, "0x114d8": 23, "0x114d9": 23, "0x11650": 23, "0x11651": 23, "0x11652": 23, "0x11653": 23, "0x11654": 23, "0x11655": 23, "0x11656": 23, "0x11657": 23, "0x11658": 23, "0x11659": 23, "0x116c0": 23, "0x116c1": 23, "0x116c2": 23, "0x116c3": 23, "0x116c4": 23, "0x116c5": 23, "0x116c6": 23, "0x116c7": 23, "0x116c8": 23, "0x116c9": 23, "0x11730": 23, "0x11731": 23, "0x11732": 23, "0x11733": 23, "0x11734": 23, "0x11735": 23, "0x11736": 23, "0x11737": 23, "0x11738": 23, "0x11739": 23, "0x1173a": 23, "0x1173b": 23, "0x118e0": 23, "0x118e1": 23, "0x118e2": 23, "0x118e3": 23, "0x118e4": 23, "0x118e5": 23, "0x118e6": 23, "0x118e7": 23, "0x118e8": 23, "0x118e9": 23, "0x118ea": 23, "0x118eb": 23, "0x118ec": 23, "0x118ed": 23, "0x118ee": 23, "0x118ef": 23, "0x118f0": 23, "0x118f1": 23, "0x118f2": 23, "0x11950": 23, "0x11951": 23, "0x11952": 23, "0x11953": 23, "0x11954": 23, "0x11955": 23, "0x11956": 23, "0x11957": 23, "0x11958": 23, "0x11959": 23, "0x11c50": 23, "0x11c51": 23, "0x11c52": 23, "0x11c53": 23, "0x11c54": 23, "0x11c55": 23, "0x11c56": 23, "0x11c57": 23, "0x11c58": 23, "0x11c59": 23, "0x11c5a": 23, "0x11c5b": 23, "0x11c5c": 23, "0x11c5d": 23, "0x11c5e": 23, "0x11c5f": 23, "0x11c60": 23, "0x11c61": 23, "0x11c62": 23, "0x11c63": 23, "0x11c64": 23, "0x11c65": 23, "0x11c66": 23, "0x11c67": 23, "0x11c68": 23, "0x11c69": 23, "0x11c6a": 23, "0x11c6b": 23, "0x11c6c": 23, "0x11d50": 23, "0x11d51": 23, "0x11d52": 23, "0x11d53": 23, "0x11d54": 23, "0x11d55": 23, "0x11d56": 23, "0x11d57": 23, "0x11d58": 23, "0x11d59": 23, "0x11da0": 23, "0x11da1": 23, "0x11da2": 23, "0x11da3": 23, "0x11da4": 23, "0x11da5": 23, "0x11da6": 23, "0x11da7": 23, "0x11da8": 23, "0x11da9": 23, "0x11f50": 23, "0x11f51": 23, "0x11f52": 23, "0x11f53": 23, "0x11f54": 23, "0x11f55": 23, "0x11f56": 23, "0x11f57": 23, "0x11f58": 23, "0x11f59": 23, "0x11fc0": 23, "0x11fc1": 23, "0x11fc2": 23, "0x11fc3": 23, "0x11fc4": 23, "0x11fc5": 23, "0x11fc6": 23, "0x11fc7": 23, "0x11fc8": 23, "0x11fc9": 23, "0x11fca": 23, "0x11fcb": 23, "0x11fcc": 23, "0x11fcd": 23, "0x11fce": 23, "0x11fcf": 23, "0x11fd0": 23, "0x11fd1": 23, "0x11fd2": 23, "0x11fd3": 23, "0x11fd4": 23, "0x12400": 23, "0x12401": 23, "0x12402": 23, "0x12403": 23, "0x12404": 23, "0x12405": 23, "0x12406": 23, "0x12407": 23, "0x12408": 23, "0x12409": 23, "0x1240a": 23, "0x1240b": 23, "0x1240c": 23, "0x1240d": 23, "0x1240e": 23, "0x1240f": 23, "0x12410": 23, "0x12411": 23, "0x12412": 23, "0x12413": 23, "0x12414": 23, "0x12415": 23, "0x12416": 23, "0x12417": 23, "0x12418": 23, "0x12419": 23, "0x1241a": 23, "0x1241b": 23, "0x1241c": 23, "0x1241d": 23, "0x1241e": 23, "0x1241f": 23, "0x12420": 23, "0x12421": 23, "0x12422": 23, "0x12423": 23, "0x12424": 23, "0x12425": 23, "0x12426": 23, "0x12427": 23, "0x12428": 23, "0x12429": 23, "0x1242a": 23, "0x1242b": 23, "0x1242c": 23, "0x1242d": 23, "0x1242e": 23, "0x1242f": 23, "0x12430": 23, "0x12431": 23, "0x12432": 23, "0x12433": 23, "0x12434": 23, "0x12435": 23, "0x12436": 23, "0x12437": 23, "0x12438": 23, "0x12439": 23, "0x1243a": 23, "0x1243b": 23, "0x1243c": 23, "0x1243d": 23, "0x1243e": 23, "0x1243f": 23, "0x12440": 23, "0x12441": 23, "0x12442": 23, "0x12443": 23, "0x12444": 23, "0x12445": 23, "0x12446": 23, "0x12447": 23, "0x12448": 23, "0x12449": 23, "0x1244a": 23, "0x1244b": 23, "0x1244c": 23, "0x1244d": 23, "0x1244e": 23, "0x1244f": 23, "0x12450": 23, "0x12451": 23, "0x12452": 23, "0x12453": 23, "0x12454": 23, "0x12455": 23, "0x12456": 23, "0x12457": 23, "0x12458": 23, "0x12459": 23, "0x1245a": 23, "0x1245b": 23, "0x1245c": 23, "0x1245d": 23, "0x1245e": 23, "0x1245f": 23, "0x12460": 23, "0x12461": 23, "0x12462": 23, "0x12463": 23, "0x12464": 23, "0x12465": 23, "0x12466": 23, "0x12467": 23, "0x12468": 23, "0x12469": 23, "0x1246a": 23, "0x1246b": 23, "0x1246c": 23, "0x1246d": 23, "0x1246e": 23, "0x1369": 23, "0x136a": 23, "0x136b": 23, "0x136c": 23, "0x136d": 23, "0x136e": 23, "0x136f": 23, "0x1370": 23, "0x1371": 23, "0x1372": 23, "0x1373": 23, "0x1374": 23, "0x1375": 23, "0x1376": 23, "0x1377": 23, "0x1378": 23, "0x1379": 23, "0x137a": 23, "0x137b": 23, "0x137c": 23, "0x16a60": 23, "0x16a61": 23, "0x16a62": 23, "0x16a63": 23, "0x16a64": 23, "0x16a65": 23, "0x16a66": 23, "0x16a67": 23, "0x16a68": 23, "0x16a69": 23, "0x16ac0": 23, "0x16ac1": 23, "0x16ac2": 23, "0x16ac3": 23, "0x16ac4": 23, "0x16ac5": 23, "0x16ac6": 23, "0x16ac7": 23, "0x16ac8": 23, "0x16ac9": 23, "0x16b50": 23, "0x16b51": 23, "0x16b52": 23, "0x16b53": 23, "0x16b54": 23, "0x16b55": 23, "0x16b56": 23, "0x16b57": 23, "0x16b58": 23, "0x16b59": 23, "0x16b5b": 23, "0x16b5c": 23, "0x16b5d": 23, "0x16b5e": 23, "0x16b5f": 23, "0x16b60": 23, "0x16b61": 23, "0x16e80": 23, "0x16e81": 23, "0x16e82": 23, "0x16e83": 23, "0x16e84": 23, "0x16e85": 23, "0x16e86": 23, "0x16e87": 23, "0x16e88": 23, "0x16e89": 23, "0x16e8a": 23, "0x16e8b": 23, "0x16e8c": 23, "0x16e8d": 23, "0x16e8e": 23, "0x16e8f": 23, "0x16e90": 23, "0x16e91": 23, "0x16e92": 23, "0x16e93": 23, "0x16e94": 23, "0x16e95": 23, "0x16e96": 23, "0x16ee": 23, "0x16ef": 23, "0x16f0": 23, "0x17e0": 23, "0x17e1": 23, "0x17e2": 23, "0x17e3": 23, "0x17e4": 23, "0x17e5": 23, "0x17e6": 23, "0x17e7": 23, "0x17e8": 23, "0x17e9": 23, "0x17f0": 23, "0x17f1": 23, "0x17f2": 23, "0x17f3": 23, "0x17f4": 23, "0x17f5": 23, "0x17f6": 23, "0x17f7": 23, "0x17f8": 23, "0x17f9": 23, "0x1810": 23, "0x1811": 23, "0x1812": 23, "0x1813": 23, "0x1814": 23, "0x1815": 23, "0x1816": 23, "0x1817": 23, "0x1818": 23, "0x1819": 23, "0x1946": 23, "0x1947": 23, "0x1948": 23, "0x1949": 23, "0x194a": 23, "0x194b": 23, "0x194c": 23, "0x194d": 23, "0x194e": 23, "0x194f": 23, "0x19d0": 23, "0x19d1": 23, "0x19d2": 23, "0x19d3": 23, "0x19d4": 23, "0x19d5": 23, "0x19d6": 23, "0x19d7": 23, "0x19d8": 23, "0x19d9": 23, "0x19da": 23, "0x1a80": 23, "0x1a81": 23, "0x1a82": 23, "0x1a83": 23, "0x1a84": 23, "0x1a85": 23, "0x1a86": 23, "0x1a87": 23, "0x1a88": 23, "0x1a89": 23, "0x1a90": 23, "0x1a91": 23, "0x1a92": 23, "0x1a93": 23, "0x1a94": 23, "0x1a95": 23, "0x1a96": 23, "0x1a97": 23, "0x1a98": 23, "0x1a99": 23, "0x1b50": 23, "0x1b51": 23, "0x1b52": 23, "0x1b53": 23, "0x1b54": 23, "0x1b55": 23, "0x1b56": 23, "0x1b57": 23, "0x1b58": 23, "0x1b59": 23, "0x1bb0": 23, "0x1bb1": 23, "0x1bb2": 23, "0x1bb3": 23, "0x1bb4": 23, "0x1bb5": 23, "0x1bb6": 23, "0x1bb7": 23, "0x1bb8": 23, "0x1bb9": 23, "0x1c40": 23, "0x1c41": 23, "0x1c42": 23, "0x1c43": 23, "0x1c44": 23, "0x1c45": 23, "0x1c46": 23, "0x1c47": 23, "0x1c48": 23, "0x1c49": 23, "0x1c50": 23, "0x1c51": 23, "0x1c52": 23, "0x1c53": 23, "0x1c54": 23, "0x1c55": 23, "0x1c56": 23, "0x1c57": 23, "0x1c58": 23, "0x1c59": 23, "0x1d2c0": 23, "0x1d2c1": 23, "0x1d2c2": 23, "0x1d2c3": 23, "0x1d2c4": 23, "0x1d2c5": 23, "0x1d2c6": 23, "0x1d2c7": 23, "0x1d2c8": 23, "0x1d2c9": 23, "0x1d2ca": 23, "0x1d2cb": 23, "0x1d2cc": 23, "0x1d2cd": 23, "0x1d2ce": 23, "0x1d2cf": 23, "0x1d2d0": 23, "0x1d2d1": 23, "0x1d2d2": 23, "0x1d2d3": 23, "0x1d2e0": 23, "0x1d2e1": 23, "0x1d2e2": 23, "0x1d2e3": 23, "0x1d2e4": 23, "0x1d2e5": 23, "0x1d2e6": 23, "0x1d2e7": 23, "0x1d2e8": 23, "0x1d2e9": 23, "0x1d2ea": 23, "0x1d2eb": 23, "0x1d2ec": 23, "0x1d2ed": 23, "0x1d2ee": 23, "0x1d2ef": 23, "0x1d2f0": 23, "0x1d2f1": 23, "0x1d2f2": 23, "0x1d2f3": 23, "0x1d360": 23, "0x1d361": 23, "0x1d362": 23, "0x1d363": 23, "0x1d364": 23, "0x1d365": 23, "0x1d366": 23, "0x1d367": 23, "0x1d368": 23, "0x1d369": 23, "0x1d36a": 23, "0x1d36b": 23, "0x1d36c": 23, "0x1d36d": 23, "0x1d36e": 23, "0x1d36f": 23, "0x1d370": 23, "0x1d371": 23, "0x1d372": 23, "0x1d373": 23, "0x1d374": 23, "0x1d375": 23, "0x1d376": 23, "0x1d377": 23, "0x1d378": 23, "0x1d7ce": 23, "0x1d7cf": 23, "0x1d7d0": 23, "0x1d7d1": 23, "0x1d7d2": 23, "0x1d7d3": 23, "0x1d7d4": 23, "0x1d7d5": 23, "0x1d7d6": 23, "0x1d7d7": 23, "0x1d7d8": 23, "0x1d7d9": 23, "0x1d7da": 23, "0x1d7db": 23, "0x1d7dc": 23, "0x1d7dd": 23, "0x1d7de": 23, "0x1d7df": 23, "0x1d7e0": 23, "0x1d7e1": 23, "0x1d7e2": 23, "0x1d7e3": 23, "0x1d7e4": 23, "0x1d7e5": 23, "0x1d7e6": 23, "0x1d7e7": 23, "0x1d7e8": 23, "0x1d7e9": 23, "0x1d7ea": 23, "0x1d7eb": 23, "0x1d7ec": 23, "0x1d7ed": 23, "0x1d7ee": 23, "0x1d7ef": 23, "0x1d7f0": 23, "0x1d7f1": 23, "0x1d7f2": 23, "0x1d7f3": 23, "0x1d7f4": 23, "0x1d7f5": 23, "0x1d7f6": 23, "0x1d7f7": 23, "0x1d7f8": 23, "0x1d7f9": 23, "0x1d7fa": 23, "0x1d7fb": 23, "0x1d7fc": 23, "0x1d7fd": 23, "0x1d7fe": 23, "0x1d7ff": 23, "0x1e140": 23, "0x1e141": 23, "0x1e142": 23, "0x1e143": 23, "0x1e144": 23, "0x1e145": 23, "0x1e146": 23, "0x1e147": 23, "0x1e148": 23, "0x1e149": 23, "0x1e2f0": 23, "0x1e2f1": 23, "0x1e2f2": 23, "0x1e2f3": 23, "0x1e2f4": 23, "0x1e2f5": 23, "0x1e2f6": 23, "0x1e2f7": 23, "0x1e2f8": 23, "0x1e2f9": 23, "0x1e4f0": 23, "0x1e4f1": 23, "0x1e4f2": 23, "0x1e4f3": 23, "0x1e4f4": 23, "0x1e4f5": 23, "0x1e4f6": 23, "0x1e4f7": 23, "0x1e4f8": 23, "0x1e4f9": 23, "0x1e8c": 23, "0x1e8c7": 23, "0x1e8c8": 23, "0x1e8c9": 23, "0x1e8ca": 23, "0x1e8cb": 23, "0x1e8cc": 23, "0x1e8cd": 23, "0x1e8cf": 23, "0x1e950": 23, "0x1e951": 23, "0x1e952": 23, "0x1e953": 23, "0x1e954": 23, "0x1e955": 23, "0x1e956": 23, "0x1e957": 23, "0x1e958": 23, "0x1e959": 23, "0x1ec7": 23, "0x1ec71": 23, "0x1ec72": 23, "0x1ec73": 23, "0x1ec74": 23, "0x1ec75": 23, "0x1ec76": 23, "0x1ec77": 23, "0x1ec78": 23, "0x1ec79": 23, "0x1ec7a": 23, "0x1ec7b": 23, "0x1ec7c": 23, "0x1ec7d": 23, "0x1ec7f": 23, "0x1ec8": 23, "0x1ec80": 23, "0x1ec81": 23, "0x1ec82": 23, "0x1ec83": 23, "0x1ec84": 23, "0x1ec85": 23, "0x1ec86": 23, "0x1ec87": 23, "0x1ec88": 23, "0x1ec89": 23, "0x1ec8a": 23, "0x1ec8b": 23, "0x1ec8c": 23, "0x1ec8d": 23, "0x1ec8f": 23, "0x1ec9": 23, "0x1ec90": 23, "0x1ec91": 23, "0x1ec92": 23, "0x1ec93": 23, "0x1ec94": 23, "0x1ec95": 23, "0x1ec96": 23, "0x1ec97": 23, "0x1ec98": 23, "0x1ec99": 23, "0x1ec9a": 23, "0x1ec9b": 23, "0x1ec9c": 23, "0x1ec9d": 23, "0x1ec9f": 23, "0x1eca": 23, "0x1eca0": 23, "0x1eca1": 23, "0x1eca2": 23, "0x1eca3": 23, "0x1eca4": 23, "0x1eca5": 23, "0x1eca6": 23, "0x1eca7": 23, "0x1eca8": 23, "0x1eca9": 23, "0x1ecaa": 23, "0x1ecab": 23, "0x1ecad": 23, "0x1ecaf": 23, "0x1ecb1": 23, "0x1ecb2": 23, "0x1ecb3": 23, "0x1ecb4": 23, "0x1ed0": 23, "0x1ed01": 23, "0x1ed02": 23, "0x1ed03": 23, "0x1ed04": 23, "0x1ed05": 23, "0x1ed06": 23, "0x1ed07": 23, "0x1ed08": 23, "0x1ed09": 23, "0x1ed0a": 23, "0x1ed0b": 23, "0x1ed0c": 23, "0x1ed0d": 23, "0x1ed0f": 23, "0x1ed1": 23, "0x1ed10": 23, "0x1ed11": 23, "0x1ed12": 23, "0x1ed13": 23, "0x1ed14": 23, "0x1ed15": 23, "0x1ed16": 23, "0x1ed17": 23, "0x1ed18": 23, "0x1ed19": 23, "0x1ed1a": 23, "0x1ed1b": 23, "0x1ed1c": 23, "0x1ed1d": 23, "0x1ed1f": 23, "0x1ed20": 23, "0x1ed21": 23, "0x1ed22": 23, "0x1ed23": 23, "0x1ed24": 23, "0x1ed25": 23, "0x1ed26": 23, "0x1ed27": 23, "0x1ed28": 23, "0x1ed29": 23, "0x1ed2a": 23, "0x1ed2b": 23, "0x1ed2c": 23, "0x1ed2d": 23, "0x1ed2f": 23, "0x1ed30": 23, "0x1ed31": 23, "0x1ed32": 23, "0x1ed33": 23, "0x1ed34": 23, "0x1ed35": 23, "0x1ed36": 23, "0x1ed37": 23, "0x1ed38": 23, "0x1ed39": 23, "0x1ed3a": 23, "0x1ed3b": 23, "0x1ed3c": 23, "0x1ed3d": 23, "0x1f100": 23, "0x1f101": 23, "0x1f102": 23, "0x1f103": 23, "0x1f104": 23, "0x1f105": 23, "0x1f106": 23, "0x1f107": 23, "0x1f108": 23, "0x1f109": 23, "0x1f10a": 23, "0x1f10b": 23, "0x1f10c": 23, "0x1fbf0": 23, "0x1fbf1": 23, "0x1fbf2": 23, "0x1fbf3": 23, "0x1fbf4": 23, "0x1fbf5": 23, "0x1fbf6": 23, "0x1fbf7": 23, "0x1fbf8": 23, "0x1fbf9": 23, "0x20001": 23, "0x20064": 23, "0x200e2": 23, "0x20121": 23, "0x2070": 23, "0x2074": 23, "0x2075": 23, "0x2076": 23, "0x2077": 23, "0x2078": 23, "0x2079": 23, "0x2080": 23, "0x2081": 23, "0x2082": 23, "0x2083": 23, "0x2084": 23, "0x2085": 23, "0x2086": 23, "0x2087": 23, "0x2088": 23, "0x2089": 23, "0x2092a": 23, "0x20983": 23, "0x2098c": 23, "0x2099c": 23, "0x20aea": 23, "0x20afd": 23, "0x20b19": 23, "0x2150": 23, "0x2151": 23, "0x2152": 23, "0x2153": 23, "0x2154": 23, "0x2155": 23, "0x2156": 23, "0x2157": 23, "0x2158": 23, "0x2159": 23, "0x215a": 23, "0x215b": 23, "0x215c": 23, "0x215d": 23, "0x215e": 23, "0x215f": 23, "0x2160": 23, "0x2161": 23, "0x2162": 23, "0x2163": 23, "0x2164": 23, "0x2165": 23, "0x2166": 23, "0x2167": 23, "0x2168": 23, "0x2169": 23, "0x216a": 23, "0x216b": 23, "0x216c": 23, "0x216d": 23, "0x216e": 23, "0x216f": 23, "0x2170": 23, "0x2171": 23, "0x2172": 23, "0x2173": 23, "0x2174": 23, "0x2175": 23, "0x2176": 23, "0x2177": 23, "0x2178": 23, "0x2179": 23, "0x217a": 23, "0x217b": 23, "0x217c": 23, "0x217d": 23, "0x217e": 23, "0x217f": 23, "0x2180": 23, "0x2181": 23, "0x2182": 23, "0x2185": 23, "0x2186": 23, "0x2187": 23, "0x2188": 23, "0x2189": 23, "0x22390": 23, "0x22998": 23, "0x23b1b": 23, "0x2460": 23, "0x2461": 23, "0x2462": 23, "0x2463": 23, "0x2464": 23, "0x2465": 23, "0x2466": 23, "0x2467": 23, "0x2468": 23, "0x2469": 23, "0x246a": 23, "0x246b": 23, "0x246c": 23, "0x246d": 23, "0x246e": 23, "0x246f": 23, "0x2470": 23, "0x2471": 23, "0x2472": 23, "0x2473": 23, "0x2474": 23, "0x2475": 23, "0x2476": 23, "0x2477": 23, "0x2478": 23, "0x2479": 23, "0x247a": 23, "0x247b": 23, "0x247c": 23, "0x247d": 23, "0x247e": 23, "0x247f": 23, "0x2480": 23, "0x2481": 23, "0x2482": 23, "0x2483": 23, "0x2484": 23, "0x2485": 23, "0x2486": 23, "0x2487": 23, "0x2488": 23, "0x2489": 23, "0x248a": 23, "0x248b": 23, "0x248c": 23, "0x248d": 23, "0x248e": 23, "0x248f": 23, "0x2490": 23, "0x2491": 23, "0x2492": 23, "0x2493": 23, "0x2494": 23, "0x2495": 23, "0x2496": 23, "0x2497": 23, "0x2498": 23, "0x2499": 23, "0x249a": 23, "0x249b": 23, "0x24ea": 23, "0x24eb": 23, "0x24ec": 23, "0x24ed": 23, "0x24ee": 23, "0x24ef": 23, "0x24f0": 23, "0x24f1": 23, "0x24f2": 23, "0x24f3": 23, "0x24f4": 23, "0x24f5": 23, "0x24f6": 23, "0x24f7": 23, "0x24f8": 23, "0x24f9": 23, "0x24fa": 23, "0x24fb": 23, "0x24fc": 23, "0x24fd": 23, "0x24fe": 23, "0x24ff": 23, "0x2626d": 23, "0x2776": 23, "0x2777": 23, "0x2778": 23, "0x2779": 23, "0x277a": 23, "0x277b": 23, "0x277c": 23, "0x277d": 23, "0x277e": 23, "0x277f": 23, "0x2780": 23, "0x2781": 23, "0x2782": 23, "0x2783": 23, "0x2784": 23, "0x2785": 23, "0x2786": 23, "0x2787": 23, "0x2788": 23, "0x2789": 23, "0x278a": 23, "0x278b": 23, "0x278c": 23, "0x278d": 23, "0x278e": 23, "0x278f": 23, "0x2790": 23, "0x2791": 23, "0x2792": 23, "0x2793": 23, "0x2cfd": 23, "0x2f890": 23, "0x30": 23, "0x3007": 23, "0x3021": 23, "0x3022": 23, "0x3023": 23, "0x3024": 23, "0x3025": 23, "0x3026": 23, "0x3027": 23, "0x3028": 23, "0x3029": 23, "0x3038": 23, "0x3039": 23, "0x303a": 23, "0x31": 23, "0x3192": 23, "0x3193": 23, "0x3194": 23, "0x3195": 23, "0x32": 23, "0x3220": 23, "0x3221": 23, "0x3222": 23, "0x3223": 23, "0x3224": 23, "0x3225": 23, "0x3226": 23, "0x3227": 23, "0x3228": 23, "0x3229": 23, "0x3248": 23, "0x3249": 23, "0x324a": 23, "0x324b": 23, "0x324c": 23, "0x324d": 23, "0x324e": 23, "0x324f": 23, "0x3251": 23, "0x3252": 23, "0x3253": 23, "0x3254": 23, "0x3255": 23, "0x3256": 23, "0x3257": 23, "0x3258": 23, "0x3259": 23, "0x325a": 23, "0x325b": 23, "0x325c": 23, "0x325d": 23, "0x325e": 23, "0x325f": 23, "0x3280": 23, "0x3281": 23, "0x3282": 23, "0x3283": 23, "0x3284": 23, "0x3285": 23, "0x3286": 23, "0x3287": 23, "0x3288": 23, "0x3289": 23, "0x32b1": 23, "0x32b2": 23, "0x32b3": 23, "0x32b4": 23, "0x32b5": 23, "0x32b6": 23, "0x32b7": 23, "0x32b8": 23, "0x32b9": 23, "0x32ba": 23, "0x32bb": 23, "0x32bc": 23, "0x32bd": 23, "0x32be": 23, "0x32bf": 23, "0x33": 23, "0x34": 23, "0x3405": 23, "0x3483": 23, "0x35": 23, "0x36": 23, "0x37": 23, "0x38": 23, "0x382a": 23, "0x39": 23, "0x3b4d": 23, "0x4e00": 23, "0x4e03": 23, "0x4e07": 23, "0x4e09": 23, "0x4e24": 23, "0x4e5d": 23, "0x4e8c": 23, "0x4e94": 23, "0x4e96": 23, "0x4eac": 23, "0x4ebf": 23, "0x4ec0": 23, "0x4edf": 23, "0x4ee8": 23, "0x4f0d": 23, "0x4f70": 23, "0x4fe9": 23, "0x5006": 23, "0x5104": 23, "0x5146": 23, "0x5169": 23, "0x516b": 23, "0x516d": 23, "0x5341": 23, "0x5343": 23, "0x5344": 23, "0x5345": 23, "0x534c": 23, "0x53c1": 23, "0x53c2": 23, "0x53c3": 23, "0x53c4": 23, "0x56db": 23, "0x58f1": 23, "0x58f9": 23, "0x5e7a": 23, "0x5efe": 23, "0x5eff": 23, "0x5f0c": 23, "0x5f0d": 23, "0x5f0e": 23, "0x5f10": 23, "0x62d0": 23, "0x62fe": 23, "0x634c": 23, "0x660": 23, "0x661": 23, "0x662": 23, "0x663": 23, "0x664": 23, "0x665": 23, "0x666": 23, "0x667": 23, "0x668": 23, "0x669": 23, "0x67d2": 23, "0x6d1e": 23, "0x6f0": 23, "0x6f06": 23, "0x6f1": 23, "0x6f2": 23, "0x6f3": 23, "0x6f4": 23, "0x6f5": 23, "0x6f6": 23, "0x6f7": 23, "0x6f8": 23, "0x6f9": 23, "0x7396": 23, "0x767e": 23, "0x7695": 23, "0x79ed": 23, "0x7c0": 23, "0x7c1": 23, "0x7c2": 23, "0x7c3": 23, "0x7c4": 23, "0x7c5": 23, "0x7c6": 23, "0x7c7": 23, "0x7c8": 23, "0x7c9": 23, "0x8086": 23, "0x842c": 23, "0x8cae": 23, "0x8cb3": 23, "0x8d30": 23, "0x920e": 23, "0x94a9": 23, "0x9621": 23, "0x9646": 23, "0x964c": 23, "0x966": 23, "0x967": 23, "0x9678": 23, "0x968": 23, "0x969": 23, "0x96a": 23, "0x96b": 23, "0x96c": 23, "0x96d": 23, "0x96e": 23, "0x96f": 23, "0x96f6": 23, "0x9e6": 23, "0x9e7": 23, "0x9e8": 23, "0x9e9": 23, "0x9ea": 23, "0x9eb": 23, "0x9ec": 23, "0x9ed": 23, "0x9ee": 23, "0x9ef": 23, "0x9f4": 23, "0x9f5": 23, "0x9f6": 23, "0x9f7": 23, "0x9f8": 23, "0x9f9": 23, "0xa": 23, "0xa620": 23, "0xa621": 23, "0xa622": 23, "0xa623": 23, "0xa624": 23, "0xa625": 23, "0xa626": 23, "0xa627": 23, "0xa628": 23, "0xa629": 23, "0xa66": 23, "0xa67": 23, "0xa68": 23, "0xa69": 23, "0xa6a": 23, "0xa6b": 23, "0xa6c": 23, "0xa6d": 23, "0xa6e": 23, "0xa6e6": 23, "0xa6e7": 23, "0xa6e8": 23, "0xa6e9": 23, "0xa6ea": 23, "0xa6eb": 23, "0xa6ec": 23, "0xa6ef": 23, "0xa6f": 23, "0xa830": 23, "0xa831": 23, "0xa832": 23, "0xa833": 23, "0xa834": 23, "0xa835": 23, "0xa8d0": 23, "0xa8d1": 23, "0xa8d2": 23, "0xa8d3": 23, "0xa8d4": 23, "0xa8d5": 23, "0xa8d6": 23, "0xa8d7": 23, "0xa8d8": 23, "0xa8d9": 23, "0xa900": 23, "0xa901": 23, "0xa902": 23, "0xa903": 23, "0xa904": 23, "0xa905": 23, "0xa906": 23, "0xa907": 23, "0xa908": 23, "0xa909": 23, "0xa9d0": 23, "0xa9d1": 23, "0xa9d2": 23, "0xa9d3": 23, "0xa9d4": 23, "0xa9d5": 23, "0xa9d6": 23, "0xa9d7": 23, "0xa9d8": 23, "0xa9d9": 23, "0xa9f0": 23, "0xa9f1": 23, "0xa9f2": 23, "0xa9f3": 23, "0xa9f4": 23, "0xa9f5": 23, "0xa9f6": 23, "0xa9f7": 23, "0xa9f8": 23, "0xa9f9": 23, "0xaa50": 23, "0xaa51": 23, "0xaa52": 23, "0xaa53": 23, "0xaa54": 23, "0xaa55": 23, "0xaa56": 23, "0xaa57": 23, "0xaa58": 23, "0xaa59": 23, "0xabf0": 23, "0xabf1": 23, "0xabf2": 23, "0xabf3": 23, "0xabf4": 23, "0xabf5": 23, "0xabf6": 23, "0xabf7": 23, "0xabf8": 23, "0xabf9": 23, "0xae6": 23, "0xae7": 23, "0xae8": 23, "0xae9": 23, "0xaea": 23, "0xaeb": 23, "0xaec": 23, "0xaee": 23, "0xaef": 23, "0xb2": 23, "0xb3": 23, "0xb66": 23, "0xb67": 23, "0xb68": 23, "0xb69": 23, "0xb6a": 23, "0xb6b": 23, "0xb6c": 23, "0xb6d": 23, "0xb6e": 23, "0xb6f": 23, "0xb72": 23, "0xb73": 23, "0xb74": 23, "0xb75": 23, "0xb76": 23, "0xb77": 23, "0xb9": 23, "0xbc": 23, "0xbd": 23, "0xbe": 23, "0xbe6": 23, "0xbe7": 23, "0xbe8": 23, "0xbe9": 23, "0xbea": 23, "0xbeb": 23, "0xbec": 23, "0xbed": 23, "0xbee": 23, "0xbef": 23, "0xbf0": 23, "0xbf1": 23, "0xbf2": 23, "0xc66": 23, "0xc67": 23, "0xc68": 23, "0xc69": 23, "0xc6a": 23, "0xc6b": 23, "0xc6c": 23, "0xc6d": 23, "0xc6e": 23, "0xc6f": 23, "0xc78": 23, "0xc79": 23, "0xc7a": 23, "0xc7b": 23, "0xc7c": 23, "0xc7d": 23, "0xc7e": 23, "0xce6": 23, "0xce7": 23, "0xce8": 23, "0xce9": 23, "0xcea": 23, "0xceb": 23, "0xcec": 23, "0xced": 23, "0xcee": 23, "0xcef": 23, "0xd58": 23, "0xd59": 23, "0xd5a": 23, "0xd5b": 23, "0xd5c": 23, "0xd5d": 23, "0xd5e": 23, "0xd66": 23, "0xd67": 23, "0xd68": 23, "0xd69": 23, "0xd6a": 23, "0xd6b": 23, "0xd6c": 23, "0xd6d": 23, "0xd6e": 23, "0xd6f": 23, "0xd70": 23, "0xd71": 23, "0xd72": 23, "0xd73": 23, "0xd74": 23, "0xd75": 23, "0xd76": 23, "0xd77": 23, "0xd78": 23, "0xde6": 23, "0xde7": 23, "0xde8": 23, "0xde9": 23, "0xdea": 23, "0xdeb": 23, "0xdec": 23, "0xded": 23, "0xdee": 23, "0xdef": 23, "0xe50": 23, "0xe51": 23, "0xe52": 23, "0xe53": 23, "0xe54": 23, "0xe55": 23, "0xe56": 23, "0xe57": 23, "0xe58": 23, "0xe59": 23, "0xed0": 23, "0xed1": 23, "0xed2": 23, "0xed3": 23, "0xed4": 23, "0xed5": 23, "0xed6": 23, "0xed7": 23, "0xed8": 23, "0xed9": 23, "0xf20": 23, "0xf21": 23, "0xf22": 23, "0xf23": 23, "0xf24": 23, "0xf25": 23, "0xf26": 23, "0xf27": 23, "0xf28": 23, "0xf29": 23, "0xf2a": 23, "0xf2b": 23, "0xf2c": 23, "0xf2d": 23, "0xf2e": 23, "0xf2f": 23, "0xf30": 23, "0xf31": 23, "0xf32": 23, "0xf33": 23, "0xf96b": 23, "0xf973": 23, "0xf978": 23, "0xf9b2": 23, "0xf9d1": 23, "0xf9d3": 23, "0xf9fd": 23, "0xff10": 23, "0xff11": 23, "0xff12": 23, "0xff13": 23, "0xff14": 23, "0xff15": 23, "0xff16": 23, "0xff17": 23, "0xff18": 23, "0xff19": 23, "1": [1, 7, 10, 16, 17, 20, 29, 30, 31, 33, 38, 46], "10": [1, 30], "1000": 1, "100x40": 18, "10x10": 1, "11": 30, "12": 30, "13": 30, "16": 30, "18": 1, "1d": [1, 20], "2": [1, 20, 27, 29, 30, 31, 34, 35, 36, 38, 46], "20": [18, 30], "241": 1, "25": 1, "25th": 1, "2d": 18, "3": [20, 21, 29, 30, 31, 46], "30": 1, "32": 26, "4": [18, 30, 34], "5": 30, "50": 18, "5555": 30, "6": [20, 30], "64": [1, 15, 17, 18, 22, 34], "7": 30, "8": [5, 11, 16, 18, 20, 21, 27, 29, 30, 34], "9": 30, "90": [15, 30], "A": [1, 35], "At": 13, "By": 29, "For": [1, 11, 13, 18, 20, 29, 46], "If": [15, 16, 17, 29, 31], "In": 22, "NOT": 11, "Not": 4, "THAT": 11, "The": [9, 14, 15, 17, 18, 29, 31, 33, 40], "Then": 1, "There": 31, "These": 20, "_": [21, 27], "__allsymbols__": 21, "__registeredsymbols__": 21, "__repr__": 18, "__str__": 18, "_local": 10, "_tupl": 1, "a0": 27, "a_max": 1, "a_mean": 1, "a_min": 1, "a_stddevi": 1, "a_vari": 1, "abl": [7, 20], "about": [1, 20], "abstractentri": 21, "abstractregentri": [19, 25], "abstractsymentri": [16, 20, 21], "abstractysymentri": 21, "abstrcatsymentri": 20, "accept": 33, "access": [9, 33], "accessor": 20, "accord": 38, "accumranks": 1, "accumul": 36, "accumulateontost": 36, "across": 18, "act": 18, "activitymutex": 31, "actual": [4, 20], "ad": [1, 20, 24, 27, 39], "ad1": 13, "ad2": 13, "add": [9, 17, 20, 36], "addelementstosparsearrai": 35, "addentri": 21, "addit": 15, "additionalamount": 30, "addpayload": 16, "address": 9, "adher": 31, "after": 29, "against": 29, "aggreg": 4, "aggtyp": [4, 5], "akmsgsign": 7, "akrouda": 30, "algorithm": [1, 39], "algorthm": 32, "all": [1, 14, 15, 16, 17, 18, 20, 21, 29, 31, 39], "allnumericunicod": 23, "alloc": [1, 15, 18, 20, 29, 30], "allow": 11, "allowerror": 11, "along": [1, 10, 39], "alphabet": 29, "alphanumer": 29, "alreadi": [11, 21, 31], "also": [1, 22, 29, 39], "altern": [1, 29], "am": 30, "amount": [1, 30], "an": [1, 9, 10, 12, 16, 17, 18, 20, 21, 22, 25, 29, 30, 31, 33, 38, 46], "analog": 14, "ancestor": 20, "ani": [16, 20, 29, 33], "anoth": [20, 29], "anythingsymentri": 20, "api": [1, 22], "api_specif": 1, "app": 31, "appear": 39, "append": [9, 10, 20, 29, 33], "appendaxi": 1, "appendfil": 10, "appendtoconfigstr": 30, "appli": 29, "applic": 9, "appnam": 9, "appropri": 13, "ar": [1, 4, 10, 14, 16, 17, 18, 20, 22, 25, 29, 31, 33, 39], "ar1": 13, "ar2": 13, "arg": [1, 10, 11, 16, 18, 20, 21, 29, 31, 32], "arg1": 16, "arg2": 16, "arggroup": 29, "argsort": 29, "argument": [1, 12, 13, 16, 18, 20, 21, 22, 29, 31, 32, 33, 38, 39], "argumenterror": 33, "arkdirectori": 31, "arkoduaseverdaemon": 31, "arkouda": [7, 9, 14, 15, 16, 30, 31, 33, 40, 46], "arkouda_cli": 9, "arkouda_mem_alloc": 15, "arkouda_serv": [0, 9, 30, 31], "arkouda_server_connection_info": 30, "arkoudajsoncompat": 0, "arkoudapythoncompat": 0, "arkoudaserverdaemon": [31, 40], "arkoudaserverdeamon": 31, "arkoudasortcompat": 0, "arkoudasparsematrixcompat": 0, "arkoudatimecompat": 0, "arkoudavers": 30, "arr": 36, "arrai": [1, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 24, 29, 35, 38, 39, 46], "array_dtyp": [2, 11, 18], "array_nam": 19, "array_nd": [2, 11, 18], "arraydimensionsstr": 46, "arraydimensionsti": 46, "arraydimissupport": 30, "arrayelementsti": 46, "arrayelmtypeissupport": 30, "arraymetr": 17, "arrayregentri": [19, 25], "arraysegstr": 11, "arrayview": 30, "arrow": 10, "arrow1": 10, "arrsiz": 29, "aryutil": 0, "aslogg": 40, "asmap": 19, "assemblesegstringfrompart": 29, "assign": [1, 20], "assignabletyp": [19, 20], "assoc": 39, "associ": [13, 18], "assum": 20, "astat": 1, "asynchron": [7, 31], "atom": 31, "attach": 16, "attempt": [20, 21, 33], "attrib": [20, 21], "attribut": [9, 21, 29], "aulogg": 1, "authent": 30, "authenticateus": 31, "automat": 30, "autoshutdown": 30, "avail": [15, 31, 33, 38], "avail_mem": 15, "availablememorypct": 15, "availbl": 18, "averag": 17, "averagemeasurementt": 17, "avg": 17, "avg_response_tim": 17, "avgmetricvalu": 17, "avgresponsetimemetr": 17, "avoid": [1, 20], "ax": 1, "axi": 1, "axisidx": 1, "axisslic": 1, "b": [1, 10, 16, 22, 35], "back": [13, 20, 31, 33], "bare": 30, "base": [1, 9, 10, 20, 30, 31, 39], "baseformat": 20, "basi": 4, "bd": 1, "becaus": 29, "been": [11, 33], "begin": 29, "being": [1, 10, 13, 30, 31, 33], "better": [1, 21], "between": [22, 29], "bigint": [1, 2, 5, 11, 16, 20, 22, 46], "bigintcreationmsg": 2, "bigintegeraggreg": [0, 4], "bigintmsg": 0, "bigintnbytesmsg": 2, "biginttouintarraysmsg": 2, "bilogg": 2, "binari": [16, 32], "bind": [7, 39], "bit": 30, "bitsperdigit": 1, "bitvector": 30, "bitvectorregentri": [19, 25], "bitwidth": 1, "block": [24, 29, 31], "blockdist": 38, "bool": [1, 3, 9, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 29, 30, 31, 39], "bool2str": 22, "boolean": [1, 13, 15, 21, 29, 31], "borrow": [1, 2, 3, 7, 10, 11, 16, 17, 18, 19, 20, 21, 29, 37], "both": 13, "brand": 33, "bre": 25, "broadcast": [1, 13, 18], "broadcastshap": 1, "bslash": 30, "bucket": [24, 27], "buffer": [1, 4], "bufferidx": [4, 5], "bufferidxalloc": 4, "buffers": [4, 5], "build": [20, 29, 46], "buildreadallmsgjson": 11, "built": [30, 33], "bundl": 29, "byte": [10, 11, 16, 21, 22, 29, 30], "bytearrai": 29, "byteord": 30, "bytesentri": 20, "bytessymentri": 20, "bytestouintarr": 29, "c": [9, 11, 29], "c_ptr": [1, 4, 5, 6], "c_sizeof": 5, "cacert": 9, "cachedalloc": 4, "calcblock": [24, 27], "calcglobalindex": [24, 27], "calcul": [11, 17], "call": [21, 29, 31], "calling_func": [21, 25], "can": [1, 11, 20, 21, 22, 29, 30, 33], "cannot": [16, 33], "capit": 29, "captur": [15, 29, 30], "case": 31, "cast": [0, 11, 20], "castgensymentrytostr": 3, "castlogg": 3, "caststringtobigint": 3, "caststringtosymentri": 3, "categor": 30, "categori": [17, 19], "categoricalregentri": [19, 25], "caus": 31, "cfg": [7, 30, 31], "chanc": 31, "chang": 31, "channel": [9, 14, 30], "channeltyp": 9, "chapel": [0, 11, 12, 20, 22, 29, 30, 33], "char": 29, "charact": 29, "check": [1, 10, 13, 15, 20, 21, 25, 29, 30], "checkavail": 25, "checkcast": 11, "checkcompil": 29, "checkpoint": [7, 31], "checksort": [24, 29], "checktabl": [21, 25], "chpl_comm_regmemheapinfo": 30, "chpl_isnondistributedarrai": 35, "chplversionarkouda": 30, "chunk": [1, 18], "chunkidx": 1, "chunkinfoasarrai": 18, "chunkinfoasstr": 18, "class": [9, 14, 16, 17, 19, 20, 21, 25, 29, 31, 32, 33, 36, 42], "clear": [18, 21], "clearmsg": 18, "client": [9, 16, 20, 30, 31, 32, 33], "clone": 36, "close": [10, 31], "cloud": [9, 30], "cmd": [2, 7, 10, 11, 16, 17, 18, 31, 37], "code": [19, 33], "coerc": 20, "coercibl": 20, "col": 35, "colblockidx": 35, "colmajorexscan": 35, "column": 19, "column_nam": 19, "combin": [7, 36], "comma": 31, "commaggreg": [0, 5], "command": [1, 7, 9, 15, 16, 18, 30, 31, 33], "commandmap": [0, 18, 31], "commondtyp": 22, "commprimit": 0, "commun": 1, "compar": [8, 29, 31], "comparison": 29, "compil": [29, 30, 31], "complet": [29, 33], "complex": 22, "complex128": 22, "complex64": 22, "complextypedarraysymentri": 20, "compon": [16, 29, 46], "compos": [9, 10, 16, 29], "composit": 29, "compositesymentri": 20, "compress": 29, "comput": 34, "computeonseg": [28, 29], "computesegmentownership": 28, "concat": 29, "concatarrai": 1, "concaten": 1, "concret": 20, "condit": [1, 29], "config": [11, 15, 18, 24, 29, 30, 36, 38, 46], "configur": [9, 14, 18, 20, 31, 33, 40], "configurationerror": 33, "configurechannel": 9, "confirm": 1, "connecturl": 31, "consid": 20, "consist": [9, 20, 32], "consol": [14, 30], "consoleoutputhandl": 14, "const": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 15, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 39, 40], "constant": [3, 9, 10, 14, 15, 16, 17, 19, 20, 22, 28, 29, 30, 31, 36, 38], "construct": [7, 30], "consul": 9, "contain": [1, 11, 13, 16, 18, 20, 21, 25, 29, 39, 46], "content": [0, 1, 7, 46], "context": [31, 33], "contigu": [1, 29], "contiguousindic": 1, "conveni": [21, 29], "convers": 21, "convert": [1, 11, 18, 21, 22, 31], "copi": [1, 4, 5], "core": 9, "corresond": 29, "correspond": [7, 15, 16, 17, 29, 31, 33], "could": [18, 39], "count": [17, 29, 39], "countert": 17, "cre": 25, "creat": [1, 4, 9, 11, 14, 16, 18, 20, 21, 31], "createconfig": 30, "createscalararrai": 18, "createserverconnectioninfo": 31, "createsymentri": 20, "createtypedsymentri": 20, "creation": 21, "critic": 14, "cround": 34, "csc": [20, 35, 36], "csr": [20, 35, 36], "csv": 10, "curl": 9, "curlinfo_response_cod": 9, "curlopt": 9, "curlopt_cainfo": 9, "curlopt_capath": 9, "curlopt_customrequest": 9, "curlopt_failonerror": 9, "curlopt_httphead": 9, "curlopt_keypasswd": 9, "curlopt_password": 9, "curlopt_postfield": 9, "curlopt_ssl_verifyp": 9, "curlopt_sslcert": 9, "curlopt_sslcerttyp": 9, "curlopt_sslkei": 9, "curlopt_url": 9, "curlopt_use_ssl": 9, "curlopt_usernam": 9, "curlopt_verbos": 9, "current": [15, 30, 33], "currenttim": 30, "d": [1, 11, 18, 20, 27, 28, 29, 34, 35, 38], "d1": 10, "d2": 10, "daemon": 31, "daemontyp": 31, "data": [1, 4, 8, 11, 16, 18, 20, 21, 33, 39], "datafram": 30, "dataframeregentri": [19, 25], "datarepr": 21, "dataset": [20, 33], "datasetnotfounderror": 33, "datastr": 21, "datatyp": 17, "datetim": [17, 30], "debug": 14, "decim": 29, "decrement": 17, "dedic": 31, "deepcopi": 11, "default": [9, 15, 17, 20, 22, 29, 30, 31], "defaultcompar": [8, 43], "defaultdmap": 38, "defaultrectangular": [20, 38], "defaultserverdaemon": [7, 31], "defin": [9, 14, 20, 21, 25, 29, 31], "degener": 1, "deinit": [1, 4, 5, 20], "delet": [9, 10, 18, 21, 31], "deleteentri": 21, "deletefil": 10, "deletematchingfilenam": 10, "deletematchingfilenamesmsg": 10, "deletemsg": 18, "deleteserverconnectioninfo": 31, "delim": 29, "delimit": [10, 16, 29, 31], "delimitedfiletomap": 10, "delimt": 29, "dens": 39, "densematmatmult": 35, "densiti": 35, "deploi": [9, 30], "deploy": 30, "deregist": [9, 31], "deregisterfromexternalsystem": 9, "deregisterfromkubernet": 9, "deriv": [1, 14, 31], "descend": 20, "describ": 9, "deseri": [12, 16], "deserializefrom": 5, "design": 17, "desir": 38, "destin": 4, "detail": 33, "determin": [1, 10, 20, 29, 30, 33], "develop": 33, "dfre": 25, "dictionari": 21, "did": 31, "differ": [20, 29, 33], "digit": [24, 29, 30], "dim": 30, "dimens": [1, 18, 20, 21, 38, 46], "dimension": 1, "directli": 29, "disconnect": 30, "discoveri": 9, "disregard": 10, "distribut": [13, 20, 24, 38], "divdtyp": 22, "divid": 17, "divis": 22, "dmap": [20, 38], "do": [1, 17, 20, 31], "doe": [11, 14, 16, 17, 29], "dom": [1, 20, 38, 44], "domain": [1, 10, 13, 20, 21, 27, 29, 38, 39], "domain_intersect": 10, "domoffaxi": 1, "domonaxi": 1, "down": 30, "driver": [31, 40], "dround": 34, "dst": [4, 5], "dstaddr": [4, 5], "dstaggreg": 4, "dstaggregatorbigint": 5, "dstbuffsiz": [4, 5], "dstr": 22, "dstunorderedaggreg": 4, "dt": 22, "dt1": 32, "dt2": 32, "dt3": 32, "dtk": 22, "dtype": [16, 17, 18, 20, 21, 22, 32], "dtype2str": 22, "dtypes": 22, "dummi": [7, 20], "dump": [7, 21], "dumpcommandmap": 7, "dure": [16, 30], "dynam": 15, "dynamicsort": 0, "dynamictwoarrayradixsort": 8, "e": [1, 29], "each": [13, 15, 16, 17, 20, 21, 29, 38, 39, 46], "eas": 20, "ediff": 29, "efunc": 32, "eilogg": 9, "either": [9, 15, 30, 33], "elapsedtim": 31, "element": [16, 18, 20, 21, 29, 33, 46], "elemtyp": 4, "els": 36, "elttyp": [20, 30, 35, 36, 38, 39], "emit": 14, "empti": [1, 29, 31], "emptysparsedomlik": 36, "emptystartasynccheckpointdaemon": 7, "enabl": 9, "encapsul": [16, 17, 31], "encod": [7, 18], "end": [29, 33], "endian": 30, "endpoint": [9, 31], "engin": 29, "ensur": 10, "ensureclos": 10, "entir": [1, 21, 29], "entireti": [20, 21], "entri": [18, 20, 21, 29, 33], "entry__str__": 20, "entrynam": 29, "entrytyp": [19, 20], "enum": [3, 9, 10, 14, 15, 16, 17, 19, 20, 22, 28, 29, 30, 31, 36, 38], "environ": [9, 30], "ephemer": 29, "equal": [1, 20, 21, 29], "equival": 29, "err": 31, "error": [3, 10, 14, 16, 21, 29, 30, 32, 33], "errorclass": 33, "errormetr": 17, "errormod": 3, "errormsg": 31, "errorwithcontext": [16, 33], "errorwithmsg": [31, 32], "escaped_quot": 30, "especi": 1, "estim": [15, 30, 39], "etc": 22, "etyp": [20, 22, 38], "everyth": 20, "ex": 1, "exampl": [1, 18, 20, 39, 46], "exce": [15, 33], "except": [21, 25], "execut": [15, 18, 31, 33], "executecommand": 7, "exist": [1, 9, 14, 16, 17, 21], "exit": 31, "expect": 4, "experiment": 29, "exportallmetr": 17, "express": [10, 29], "extend": 17, "extens": 10, "extern": [9, 31], "externalintegr": 0, "externalintegrationserverdaemon": 31, "extractrequest": 31, "f": 7, "factor": 39, "factori": [14, 20, 29, 33], "fail": 20, "fall": 29, "fals": [1, 4, 11, 13, 15, 16, 24, 29, 30, 31, 39], "fcf": 7, "fewer": 1, "field": [1, 16, 29], "file": [9, 10, 14, 30, 31, 33], "filechannel": 9, "fileerror": 11, "fileerrorcount": 11, "fileio": 0, "filenam": 10, "fileoutputhandl": 14, "filepath": [10, 14], "filetyp": 10, "filewrit": 16, "fill": 35, "fillsparsematrix": 35, "filluniform": 1, "fillvalu": 29, "find": [11, 13, 21, 29, 39], "findal": 21, "findallmatch": 29, "findmatchloc": 29, "findsubstringinbyt": 29, "fiologg": 10, "first": [1, 13, 16, 18, 20, 21, 29], "fix": [29, 30], "flag": [20, 30], "flatten": 1, "float": 22, "float32": 22, "float64": 22, "flush": [4, 5], "flushbuff": [4, 5], "fmt": 7, "follow": [10, 16, 17, 22, 29, 31], "form": [1, 11, 21], "format": [9, 11, 12, 16, 18, 20, 21, 30, 33], "formatari": 1, "formatentri": 21, "formatjson": 12, "formmat": 21, "found": [21, 32], "free": 33, "freedata": [4, 5], "from": [1, 9, 10, 11, 12, 16, 18, 20, 21, 29, 31, 33, 35], "fromrespons": 16, "fromscalar": 16, "fromtyp": 3, "front": [20, 33], "fuller": 33, "func": 7, "function": [7, 12, 17, 18, 20, 21, 28, 29, 31, 33, 42], "funstartasynccheckpointdaemon": 7, "gather": [29, 31], "gatherlongstr": 27, "gbre": 25, "gener": [7, 10, 16, 17, 18, 20, 29, 31, 32, 33, 36], "generatedatetimestr": 14, "generateerrorcontext": 33, "generatefilenam": 10, "generatehead": 9, "generatelogmessag": 14, "generatetoken": [21, 26], "generatorsymentri": 20, "genlogg": 20, "genregentri": 19, "gensparsesymentri": [20, 21], "gensymentri": [3, 20, 21, 29], "gensymio": [0, 7], "get": [1, 4, 7, 16, 17, 18, 21, 30], "get_hostnam": 30, "getaddr": 6, "getalluserrequestmetr": 17, "getarkoudamemalloc": 15, "getarkoudapid": 15, "getarkoudatoken": 26, "getarrayspecfromentri": 20, "getavailmemori": 15, "getavgresponsetimemetr": 17, "getbigintvalu": 16, "getbitwidth": 1, "getboolvalu": 16, "getbyteord": 30, "getchplvers": 30, "getcommandmapmsg": 18, "getconfig": 30, "getconfigmsg": 18, "getconnecthostip": 9, "getconnecthostnam": 30, "getconnecturl": 31, "getdaemontyp": 31, "getdensedom": 44, "getdigit": 1, "getdtyp": 16, "getentri": 21, "getenv": [17, 30], "getenvint": 30, "geterrornam": 31, "geterrorwithcontext": 33, "getfilemetadata": 10, "getfiletyp": 10, "getfiletypebymag": 10, "getfiletypemsg": 10, "getfirsteightbytesfromfil": 10, "getfix": 29, "getgenericsparsearrayentri": 21, "getgenerictypedarrayentri": 21, "getgrid": 35, "getintvalu": 16, "getkubernetesderegisterparamet": 9, "getkubernetesregistrationparamet": 9, "getlength": 29, "getlinefromfil": 10, "getlist": 16, "getlocalememorystatus": 15, "getlsa": 35, "getlsd": 35, "getmatchingfilenam": 10, "getmaxbitsmsg": 2, "getmaxlocalememori": 17, "getmeasurementtot": 17, "getmemavailmsg": 18, "getmemlimit": 30, "getmemorystatusmsg": 37, "getmemus": 30, "getmemusedmsg": 18, "getnumdigitsnumericarrai": 1, "getnumerrormetr": 17, "getnummeasur": 17, "getnumrequestmetr": 17, "getoutputhandl": 14, "getperusernumrequestmetr": 17, "getperusernumrequestspercommandforallusersmetr": 17, "getperusernumrequestspercommandmetr": 17, "getphysicalmemher": 30, "getpivot": 27, "getpositiveintvalu": 16, "getrealvalu": 16, "getregistrationconfig": 18, "getresponsetimemetr": 17, "getscalarvalu": 16, "getsegstr": 29, "getsegstringentri": 21, "getserverdaemon": 31, "getserverinfo": 17, "getservermetr": 17, "getsizeestim": 20, "getsparsedom": 44, "getsystemmetr": 17, "gettotalmemori": 15, "gettotalmemoryusedmetr": 17, "gettotalresponsetimemetr": 17, "gettupl": 16, "getuint8valu": 16, "getuintvalu": 16, "getus": 17, "getusermetr": 17, "getusernam": 17, "getuserrequestmetr": 17, "getvalu": 16, "getvalueof": 16, "give": 21, "given": [1, 11, 12, 16, 21, 29], "glob": 10, "global": [17, 30], "globexpansionmsg": 10, "go": 30, "got": 39, "greater": [1, 20, 21], "grid": 35, "group": [16, 20, 29, 30], "groupbi": 30, "groupbyregentri": [19, 25], "groupnum": 29, "gse": [3, 20], "gslogger": 11, "guarante": 29, "ha": [13, 20, 31, 33], "halt": [1, 20], "hash": [29, 34], "hasstr": 1, "have": [1, 11, 20], "hdf5": [10, 33], "hdf5fileformaterror": 33, "hdff": 33, "header": [9, 10], "heap": 30, "help": 20, "helper": [12, 20], "here": [18, 20, 24], "hierarchi": 20, "high": [4, 13, 24, 27, 29], "histogram": 39, "hook": 20, "host": [9, 15, 33], "hostnam": [17, 30], "how": [18, 30], "hpc": 30, "html": 1, "http": [1, 9], "httpchannel": 9, "httprequestformat": 9, "httprequesttyp": 9, "httpschannel": 9, "i": [1, 4, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 25, 27, 29, 30, 31, 32, 33, 46], "id": [1, 17], "id_": 21, "ideal": 7, "ident": 36, "identifi": 16, "idl": 31, "idleperiodstart": 31, "idx": [1, 10, 19, 29, 36], "ignor": [3, 18], "implement": [14, 16, 29, 32, 33], "implicitli": 46, "import": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "in1d": [0, 29], "in1dar2perlocassoc": 13, "in1dsort": 13, "includ": [29, 31, 33], "includedelimit": 29, "incom": [17, 31], "incompat": 32, "incompatibleargumentserror": 32, "increment": 17, "incrementnumrequestspercommand": 17, "incrementperuserrequestmetr": 17, "incrementtotalnumrequest": 17, "ind": [1, 27], "index": [0, 1, 10, 16, 21, 29, 30], "indexregentri": [19, 25], "indextoord": 1, "indic": [1, 10, 15, 16, 18, 21, 29, 30, 31, 35, 46], "indicesentri": 29, "individu": [16, 29], "inequ": 29, "info": [14, 18, 21, 30], "infolist": 21, "infomsg": 18, "inform": 30, "inherit": 20, "init": [1, 9, 14, 16, 17, 19, 20, 29, 31, 33], "initarkoudadirectori": 31, "initcount": 29, "initdirectori": 10, "initexpr": 38, "initi": 31, "input": [1, 12, 20, 29], "insert": 21, "instanc": [9, 29, 31, 33], "instanti": 20, "instead": [4, 20, 29], "insuffici": 15, "int": [1, 2, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 45, 46], "int16": 22, "int32": 22, "int64": [22, 29], "int8": 22, "integ": 22, "integr": [9, 31], "integrationen": 31, "interfac": [9, 14], "intern": [17, 20], "interpret": [29, 42], "interpretasbyt": 29, "interpretasstr": 29, "intersect": 13, "inttot": 17, "intvalu": 17, "invert": [13, 29], "invoc": 33, "invok": [17, 31, 40], "io": 33, "ioerror": 33, "ioutil": 0, "ip": 9, "ipv4": 30, "ir": 25, "isalnum": 29, "isalpha": 29, "isassignableto": 20, "isdecim": 29, "isdefaultrectangular": [4, 20, 38], "isdigit": 29, "isdomain": 1, "isempti": 29, "isglobpattern": 10, "ishomogeneoustupl": 1, "islow": 29, "ismemavail": 15, "isn": [1, 29], "isnumer": 29, "isnumericchar": 29, "isnumericstr": 29, "isown": 1, "israng": 1, "issort": [1, 29], "issortedov": 1, "isspac": 29, "issupportedo": 15, "istitl": 29, "isupp": 29, "item": [12, 17, 21], "items": [20, 24], "iter": [1, 4, 16, 17, 21], "iterkind": 1, "its": [7, 20, 29], "iv": 29, "join": 29, "json": [7, 9, 11, 12, 16, 18, 20, 21, 30, 31, 46], "json_str": 16, "jsontoarrai": 12, "jsontomap": 11, "just": 46, "k": 24, "keepparti": 29, "kei": [1, 16, 19, 24, 30], "keycompar": 24, "keynotfound": 16, "keypart": 27, "keypartcompar": 27, "keyscompar": 24, "keysrankscompar": 24, "keytyp": 17, "kind": [29, 32], "kr": 24, "kubernet": [9, 30, 31], "l": [20, 35], "lack": 33, "languag": 14, "larg": [13, 39], "larger": 1, "larr": 4, "last": [1, 20, 21], "lastlocal": [4, 5], "latest": 1, "layout": [20, 35, 36, 38, 44], "layoutstr": 20, "layouttostr": 20, "lbuffer": [4, 5], "lchannel": 30, "ldtype": 32, "lead": 29, "least": [15, 24], "leav": 31, "left": 29, "leftoffset": 29, "leftval": 29, "len": [20, 26, 29], "length": [1, 19, 20, 21, 27, 29], "lensentri": 29, "less": [1, 20, 21], "lessen": 31, "level": [1, 13, 14, 30], "lh": 4, "libcurl": 9, "like": 22, "limit": [15, 20, 30], "line": [7, 10, 14, 31, 33], "lineindex": 10, "linenumb": [14, 33], "list": [1, 10, 11, 16, 18, 19, 21, 25, 29, 31, 40, 46], "list_registri": 25, "listen": 31, "littl": 20, "live": 20, "llevel": 30, "loc": [4, 5, 17, 24, 27], "local": [1, 4, 9, 10, 13, 15, 17, 18, 30, 31, 33, 35], "locale_hostnam": [15, 17], "locale_id": 15, "locale_nam": 17, "locale_num": 17, "localegrid": 44, "localeinfo": 17, "localememavail": 15, "localememorystatu": 15, "localemetr": 17, "localfre": 4, "localit": 4, "localsubdomain": 1, "lockstep": 1, "log": [0, 30], "logchannel": [1, 2, 9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 24, 25, 27, 29, 30, 31, 34, 37, 39, 40], "logcommand": 30, "logger": [1, 2, 3, 9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 24, 25, 27, 29, 30, 31, 34, 37, 39, 40], "logic": [15, 29, 31], "loglevel": [1, 2, 3, 9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 24, 25, 27, 29, 30, 31, 34, 37, 39, 40], "longer": 31, "longind": 27, "lookahead": 29, "lookbehind": 29, "lookup": [25, 29], "loop": 31, "low": [1, 24, 27, 29], "lower": 29, "lowercas": 29, "lowlevellocalizingslic": 1, "lsanymsg": 10, "lsd": 30, "lsrcaddr": [4, 5], "lsrcval": [4, 5], "lss": 29, "m": 38, "made": 33, "magic": 10, "magic_arrow": 10, "magic_csv": 10, "magic_hdf5": 10, "magic_parquet": 10, "main": 40, "mainstr": 29, "maintain": 20, "major": 35, "make": [1, 20, 31, 38], "makearrayfrombyt": 11, "makedist": 20, "makedistarrai": [20, 38], "makedistdom": 38, "makedistdomtyp": 38, "makesparsearrai": [20, 38], "makesparsedomain": 38, "makesparsemat": 36, "manipulationmsg": [1, 16], "manner": 1, "map": [1, 7, 10, 11, 13, 17, 18, 19, 21, 25, 38], "markfre": 4, "mat": 36, "match": [7, 10, 16, 18, 21, 22, 29, 30, 31, 33], "matlayout": [20, 38], "matric": [1, 20], "matrix": [1, 35], "max": [16, 39], "max_bit": 20, "max_byt": 29, "max_number_of_task": 17, "maximum": 30, "maxtaskpar": 24, "mean": [14, 30, 39], "meant": 1, "measur": 17, "measurementt": 17, "measurementtot": 17, "mem": 20, "mem_us": 15, "membership": [13, 29], "memcmp": 29, "memhighwat": 30, "memmax": 30, "memmgmttyp": 15, "memori": [1, 4, 15, 18, 29, 30, 33], "memorymgmt": 0, "memus": [21, 31], "merg": 36, "mergenumericarrai": 1, "messag": [0, 1, 14, 18, 21, 30, 31, 33], "messagearg": [2, 7, 10, 11, 16, 17, 18, 31, 37], "met": 1, "metadata": 1, "metal": 30, "method": [9, 14, 17, 18, 20, 21, 29, 33, 40], "metric": [9, 17, 31], "metric_scop": 17, "metriccategori": 17, "metricdatatyp": 17, "metricnam": 17, "metricscop": 17, "metricsen": 31, "metricsmsg": 0, "metricsserverdaemon": 31, "metricvalu": 17, "mgmt": 15, "min": 39, "minu": 1, "mismatchedappenderror": 33, "mlogger": 17, "mmlogger": 15, "mod": 7, "mode": [10, 33], "model": 29, "modifi": 1, "modnam": 7, "modul": [0, 15, 31, 33, 42], "modulemap": 7, "modulenam": [14, 33], "more": [15, 20, 29], "most": 29, "mp_limb_t": 5, "mp_size_t": 5, "mplogger": 18, "msg": [14, 16, 18, 32, 33, 34, 36], "msgarg": [2, 7, 10, 11, 17, 18, 37], "msgformat": 16, "msgprocess": [0, 7], "msgtupl": [2, 3, 7, 10, 11, 16, 17, 18, 21, 31, 37], "msgtype": [16, 18], "mtlogger": 21, "much": 30, "multi": 1, "multiindex": 30, "multipart": 9, "multipl": [16, 20, 31], "multipleserverdaemon": 31, "multityperegentri": 0, "multitypesymbolt": 0, "multitypesymentri": 0, "must": [1, 16, 29, 31], "mydmap": [20, 38], "mylocalespac": [4, 5], "myregex": 29, "n": [1, 10, 11, 12, 20, 21, 29, 31, 33, 38], "n1": 1, "n2": 1, "na": 1, "nacod": 19, "name": [1, 10, 11, 16, 17, 18, 19, 20, 21, 25, 29, 30, 31, 32, 33], "nb": 1, "nbyte": 29, "nchunk": 1, "nd": [1, 21, 32], "ndarrai": 11, "ndim": [20, 21], "need": [20, 22, 29, 39], "needcount": 39, "needindic": 39, "neg": [1, 16], "ness": 31, "nest": 11, "new": [1, 2, 3, 4, 7, 8, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 29, 30, 31, 33, 34, 36, 37, 39, 40], "newdstaggreg": 4, "newlen": 29, "newli": 21, "newsrcaggreg": 4, "newsymbol": 16, "nextnam": 21, "nid": 21, "nil": 1, "nnz": [20, 36], "nnzpercolblock": 35, "nnzperrowblock": 35, "non": [1, 13, 31, 35], "none": [9, 20], "nonzero": 29, "noprefix": 20, "normal": 16, "nosuffix": 20, "note": [16, 17, 20, 29], "noth": [20, 46], "nothdf5fileerror": 33, "notimplementederror": [32, 33], "now": [17, 20, 31], "null": [11, 29], "null_strings_valu": [11, 29], "num_error": 17, "num_request": 17, "number": [1, 10, 16, 17, 20, 29, 30, 33, 39], "number_of_local": 17, "number_of_processing_unit": 17, "numchunk": 30, "numdigit": 1, "numer": 29, "numericunicod": 0, "numlocal": [4, 5, 17], "nummatchesentri": 29, "nummeasur": 17, "numpi": [11, 20, 22], "numpydtyp": [0, 16], "numtask": 24, "numvalu": 17, "o": 33, "object": [9, 11, 14, 16, 20, 21, 29, 31, 33, 40], "objtyp": [1, 11, 19, 30], "occur": [21, 29], "off": 29, "offset": [1, 11, 20, 27, 29], "offsetsentri": 20, "offsetssymentri": 20, "onc": [16, 31], "one": [15, 16, 20, 29], "onli": [1, 4, 11, 13, 16, 18, 20, 29, 33], "op": [30, 32], "oper": [22, 29, 32, 33], "oppos": 10, "opsuntilyield": [4, 5], "optim": 4, "option": [29, 31], "order": [1, 17, 35], "org": 1, "origin": [13, 29, 33], "orthogon": 1, "other": [14, 18, 20, 22, 29], "otherstr": 29, "otherwis": [11, 16, 20, 29, 30], "our": [20, 31], "out": [1, 9, 21, 29], "outofboundserror": 33, "output": 11, "outputhandl": 14, "outsid": 9, "over": [1, 13, 29, 30, 38], "overhead": 13, "overmemlimit": [20, 30], "overmemorylimiterror": 33, "overrid": [9, 14, 16, 17, 20, 31], "overridden": [9, 17, 31], "overwrit": 9, "overwritten": 10, "own": [1, 14, 17, 21, 29, 31], "p": [6, 16], "page": 0, "par1": 10, "parallel": [4, 13], "param": [1, 2, 4, 11, 12, 15, 16, 18, 20, 22, 28, 29, 30, 32, 34, 35, 38, 39, 42, 44, 46], "param_list": 16, "paramet": [16, 20, 29, 31, 33], "parameterobj": [16, 21], "parent": 31, "parentdom": [20, 36], "parquet": 10, "pars": [12, 16, 18, 33], "parsaf": 16, "parsejson": [12, 21], "parsemessagearg": 16, "parseparamet": 16, "parser": 11, "part": [16, 20], "partit": 29, "pass": [1, 20, 21, 29, 33], "patch": 9, "path": [9, 10], "pattern": [10, 21, 29], "payload": [9, 11, 16, 18], "pct_avail_mem": 15, "pd": 1, "pdarrai": [11, 20, 29, 30], "pdom": 35, "peel": 29, "peelregex": 29, "pend": 20, "per": [4, 13, 29, 30], "percentag": [15, 30], "perform": [1, 21], "perlocalememlimit": 30, "perm": 39, "permut": [19, 24, 29], "persist": 29, "physic": 30, "physical_memori": 17, "pivot": 27, "pleas": 30, "pname": 32, "pod": 31, "pointer": 1, "polar": 29, "port": [30, 31], "portion": 29, "posit": [1, 16], "positon": 29, "possibl": 31, "post": 9, "postinit": [4, 5], "postion": 29, "postit": 29, "potenti": 1, "pre": 20, "prefix": [10, 20, 29], "prepend": [20, 29, 33], "preserv": 31, "pretti": 21, "previou": 31, "primitivetypedarraysymentri": 20, "print": [1, 20, 21, 30], "printari": 1, "printdat": 14, "printownership": 1, "printserversplashmessag": 31, "printthresh": 1, "problem": 33, "proc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45], "procedur": [20, 39], "process": [9, 15, 21, 30, 31, 39], "processerrormessagemetr": 31, "processmetr": 31, "produc": 1, "project": 33, "promot": 22, "prompt": 31, "proper": 29, "properli": 11, "propos": 30, "provid": [10, 14, 16, 18, 21, 31, 33], "ptr": 1, "public": 10, "publish": 33, "publishmsg": 33, "put": [4, 9, 13], "python": [14, 16, 18, 20, 22, 29, 30], "pythonland": 22, "pythonmodulesupport": 42, "pythonvers": 30, "pythonversionstr": 42, "q": 30, "qcq": 30, "queri": 18, "r": 10, "radix": [24, 30], "radixsortlsd": 0, "radixsortlsd_kei": 24, "radixsortlsd_keys_memest": 24, "radixsortlsd_memest": 24, "radixsortlsd_rank": 24, "radixsortlsd_raw": 27, "rand": 36, "randomstream": [20, 36], "randsparsematrix": 35, "rang": [1, 29, 39], "rank": [1, 20, 38, 46], "raw": 16, "rbuffer": [4, 5], "rdtype": 32, "re2": 29, "real": [1, 11, 15, 16, 17, 18, 22, 31, 34, 36, 39, 46], "realli": 39, "realtot": 17, "realvalu": 17, "reason": 32, "rec": 8, "receipt": 9, "record": [1, 4, 5, 15, 16, 17, 24, 27, 31, 36], "redi": 9, "reduc": 29, "reducedshap": 1, "reducescanop": 36, "ref": [1, 3, 4, 5, 6, 7, 8, 11, 13, 16, 27, 28, 29, 34, 35, 36], "refer": 29, "referenc": 18, "regex": [21, 29, 30], "regexmaxcaptur": 30, "regexp": 29, "region": [1, 29], "regist": [7, 9, 21, 30, 31], "register_arrai": 25, "register_bitvector": 25, "register_categor": 25, "register_categorical_compon": 25, "register_datafram": 25, "register_groupbi": 25, "register_index": 25, "register_index_compon": 25, "register_segarrai": 25, "register_segarray_compon": 25, "register_seri": 25, "registered_entri": 25, "registerfunct": 7, "registerservercommand": 31, "registerwithexternalsystem": 9, "registerwithkubernet": 9, "registr": [18, 21, 46], "registrationconfig": 0, "registrationconfigspec": 46, "registri": [0, 21], "registryentrytyp": 19, "reglogg": [19, 25], "regtab": [21, 25], "regular": 29, "relat": [20, 30], "relev": 29, "remain": 29, "remot": [1, 4], "remotebuff": [4, 5], "remov": [1, 9, 20, 21, 29], "removeaxi": 1, "removedegenrank": 1, "removedepend": 20, "repcount": 31, "repl": 29, "replac": [29, 30], "repli": 16, "replstr": 29, "replymsg": 16, "report": [14, 21, 33], "repr": 18, "repres": [1, 10, 20, 29], "reprmsg": 18, "reqcount": 31, "reqmemori": 15, "reqmsg": 18, "requenst": 46, "request": [9, 15, 16, 17, 18, 30, 31, 33, 46], "requestformat": 9, "requestmetr": 17, "requestmsg": [16, 31], "requestshutdown": 31, "requesttyp": 9, "requir": [9, 11, 31, 33], "requiredmodul": 7, "respond": 18, "respons": [16, 18, 31], "response_tim": 17, "responsetimemetr": 17, "result": [1, 13, 22, 29], "retriev": [9, 11, 20, 21, 29, 30, 31], "retrun": 20, "rettyp": 28, "return": [1, 7, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 24, 29, 30, 31, 32, 33, 38, 39], "return_valid": 3, "returninvers": 39, "returnmatchorig": 29, "returnnumsub": 29, "revers": 19, "rh": 4, "rich": 33, "right": 29, "rightoffset": 29, "rightval": 29, "rname": 11, "rng": [3, 29], "root": 20, "roughli": 1, "routin": 33, "routinenam": [14, 33], "row": 35, "rowblockidx": 35, "rowmajorexscan": 35, "rshift": 1, "rslogger": 24, "rslsd_bitsperdigit": [1, 30], "rslsd_numtask": 24, "rslsd_vv": 24, "rsrcaddr": [4, 5], "rsrcval": [4, 5], "rss": 29, "rule": [16, 22], "run": [17, 30, 31, 40], "runtim": 30, "s1": 29, "s2": 29, "sa": 1, "safe": 4, "same": [1, 29], "save": 33, "saveusedmodul": 30, "sb": 1, "scalar": 16, "scale": 13, "sclogger": 30, "scope": [17, 31], "sd": [7, 35], "sdlogger": 31, "search": [0, 18, 21], "second": [13, 18, 29], "secur": 0, "see": [1, 15, 16, 21, 25], "seed": [1, 36], "seennotableact": 31, "segarrai": [20, 30], "segarrayregentri": [19, 25], "segfunct": [28, 29], "segment": [19, 28, 29], "segmentedcalcoffset": 11, "segmentedcomput": 0, "segmentedstr": 0, "segmentedstringusehash": 29, "segstr": [3, 11, 27, 29, 33, 39], "segstrful": 29, "segstring_offset_nam": 33, "segstring_value_nam": 33, "segstringerror": 33, "segstringsort": 0, "segstringsymentri": [20, 21, 29], "segstrwher": 29, "select": 1, "send": 31, "sendrepmsg": 31, "sensit": 14, "sent": 16, "sep": 30, "separ": [29, 31], "seri": 30, "serial": 16, "serializeds": 5, "serializeinto": 5, "seriesregentri": [19, 25], "serv": [31, 40], "server": [7, 11, 16, 17, 18, 20, 30, 31, 33], "server_info": 17, "server_port": 17, "serveractivitymark": 31, "serverconfig": [0, 15, 17, 20], "serverconnectioninfo": [30, 31], "serverconnetionfil": 31, "serverdaemon": [0, 7], "serverdaemontyp": 31, "servererror": 0, "servererrorstr": 0, "serverhostnam": 30, "serverid": 21, "serveridlestart": 31, "serveridlestop": 31, "serverinfo": 17, "serverinfonosplash": 30, "servermetr": 17, "servermodul": 31, "serverport": 30, "serverstatusdaemon": 31, "servertoken": 31, "servic": 9, "serviceendpoint": [9, 31], "servicenam": 9, "serviceport": 9, "set": [1, 7, 13, 16, 17, 18, 19, 20, 29, 30, 31], "setarkoudatoken": 26, "setkei": 16, "setmaxbitsmsg": 2, "setmsg": 18, "setnam": [19, 20], "setval": 16, "shape": [1, 11, 20, 21, 35, 38], "share": [17, 19, 20, 21, 25, 29, 31], "shim": 20, "shlogger": 34, "should": [11, 13, 20, 29, 30], "show": 29, "shut": 30, "shutdown": [9, 31], "shutdowndaemon": 31, "side": 11, "signatur": [7, 18, 31], "signfi": 21, "signifi": 21, "signific": 24, "similar": [18, 21, 29], "simpl": 11, "sinc": [4, 20], "singl": [7, 20, 34], "singular": 20, "siphash": [0, 29], "siphash128": [28, 29, 34], "siphash64": 34, "size": [1, 4, 12, 13, 16, 17, 18, 20, 21, 22, 24, 29, 38, 39], "skip": 29, "slice": [1, 29], "slogger": 37, "small": 13, "sname": 32, "so": [13, 20], "socket": [9, 31], "somehow": 39, "sort": [1, 13, 24, 29, 30, 39], "sought": 29, "sourc": 4, "space": [13, 16, 29], "spars": [20, 35, 39], "sparsegensymentri": 20, "sparsematdat": 36, "sparsematfromarrai": 35, "sparsematmatmult": 35, "sparsematrix": [0, 36], "sparsemattopdarrai": 35, "sparsesymentri": 20, "sparsiti": 39, "special": 31, "specif": [10, 20], "specifi": [1, 9, 11, 20, 21, 33, 38], "split": [1, 29], "splitmsgtotupl": 30, "spsdata": [35, 36], "spsmat": 35, "spsmatutil": [0, 35], "squeezemsg": 1, "src": [4, 5], "srcaggreg": 4, "srcaggregatorbigint": 5, "srcbuffsiz": [4, 5], "srcunorderedaggreg": 4, "srcval": 4, "sre": 25, "ss": [27, 29], "sslogger": [27, 29], "st": [1, 2, 3, 7, 10, 11, 16, 17, 18, 19, 20, 21, 29, 31, 37], "stack": 1, "stai": 20, "standalon": 1, "standard": [7, 18, 30, 31], "start": [18, 29, 31], "startasynccheckpointtask": 31, "startsentri": 29, "startup": [9, 30, 31], "stat": 1, "state": [16, 20, 31, 36], "static": 15, "statist": 1, "statu": [21, 31], "statusmsg": 0, "stdout": [9, 14], "stick": 29, "stop": 31, "store": [1, 22, 29], "str": [18, 39], "str2dtype": 22, "strarg": 28, "strategi": 13, "strict": 3, "stride": 29, "stridekind": 29, "string": [1, 2, 3, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 42, 46], "stringbytestouintarr": 29, "stringcompareliteraleq": [28, 29], "stringcompareliteralneq": [28, 29], "stringintcompar": 27, "stringisalphabet": [28, 29], "stringisalphanumer": [28, 29], "stringisdecim": [28, 29], "stringisdigit": [28, 29], "stringisempti": [28, 29], "stringislow": [28, 29], "stringisnumer": [28, 29], "stringisspac": [28, 29], "stringistitl": [28, 29], "stringisupp": [28, 29], "stringsearch": [28, 29], "stringtonumericignor": [3, 28], "stringtonumericreturnvalid": [3, 28], "stringtonumericstrict": [3, 28], "strip": 29, "strmsg": 18, "strongli": 14, "structur": 14, "stype": 32, "sub": 29, "subclass": 20, "subdomchunk": 1, "submit": 31, "submodul": [4, 35], "subset": [1, 22], "substitut": 29, "substr": 29, "substringsearch": 29, "success": [11, 16], "suffici": 15, "suffix": [20, 29], "sum": 17, "support": [7, 10, 20, 29], "susbstitut": 29, "sym": [16, 18, 20, 21], "symarraydmap": 0, "symbol": [1, 16, 18, 20, 21, 25, 29, 32], "symbolentrytyp": 20, "symbolt": 20, "symentri": [20, 21, 29], "symtab": [1, 2, 3, 7, 10, 11, 17, 18, 19, 20, 21, 29, 31, 33, 37], "symtabl": 21, "sync": 31, "synonym": 20, "sysmentri": 29, "system": [9, 17, 20, 31], "systemtyp": 9, "t": [1, 11, 12, 13, 16, 18, 20, 21, 22, 24, 28, 29, 32, 34, 38], "tab": [21, 25], "tabl": [1, 18, 20, 21, 29, 32], "tag": 1, "tail": [14, 20], "take": [1, 18, 21, 22, 29], "talk": 20, "target": 29, "targetlocaless": 10, "targetserviceport": 9, "task": [4, 24, 27, 31], "temporari": 20, "term": 13, "termin": [11, 29], "test": [11, 29], "teststr": 29, "text": 9, "th": 1, "than": [1, 20, 21], "thei": [1, 18, 20], "them": 1, "thi": [1, 7, 11, 15, 16, 17, 20, 21, 29, 30, 31, 32, 46], "those": 29, "thread": 31, "thresh": [20, 21], "threshold": [1, 20, 21], "throw": [1, 2, 3, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 37, 38, 39], "thrown": [31, 33], "time": [13, 29, 31, 39], "timedelta": [30, 45], "timesinceepoch": 30, "timestamp": 17, "titl": 29, "titlecas": 29, "tl": 9, "tmpf": 10, "tocompositesymentri": 20, "todai": 7, "todataframeregentri": 19, "togeneratorsymentri": 20, "togensparsesymentri": 20, "togensymentri": 20, "token": [9, 16, 30, 31], "tokenspath": 26, "tondarrai": 11, "toscalar": 16, "toscalararrai": 16, "toscalarlist": 16, "toscalartupl": 16, "tosegstringsymentri": 20, "tosparsesymentri": 20, "tosymentri": 20, "total": [17, 18, 21, 29], "total_mem": 15, "total_memory_us": 17, "total_response_tim": 17, "totaldigit": 1, "totalmemoryusedmetr": 17, "totalmicrosecond": 45, "totalresponsetimemetr": 17, "totalsecond": 30, "totyp": [3, 11], "trace": 30, "track": 21, "trail": 29, "transit": [16, 20], "trigger": 31, "trivial": 13, "true": [1, 11, 14, 15, 16, 24, 29, 30, 31, 39], "truncat": 10, "truth": [13, 39], "try": [17, 30, 31], "trygetscalar": 16, "tupl": [1, 10, 16, 20, 39, 46], "tupshap": 20, "tupshapestr": 20, "turn": 22, "two": [1, 22, 29], "twophasestringsort": 27, "type": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 16, 18, 20, 21, 22, 28, 29, 30, 31, 32, 33, 35, 36, 38, 43, 46], "type2fmt": 22, "type2str": 22, "typedarraysymentri": 20, "types": 22, "typic": 13, "uint": [1, 5, 11, 15, 16, 18, 20, 27, 29, 30, 31, 34], "uint16": 22, "uint32": 22, "uint64": 22, "uint8": [11, 22], "uintbuffers": 5, "uki": 19, "ulogg": 39, "ultim": 20, "undef": 22, "undefinedsymbolerror": 18, "understand": 33, "unflatten": 1, "uniqu": [0, 13], "uniquefromsort": 39, "uniquefromtruth": 39, "uniquegroup": 39, "uniquesort": 39, "uniquesortwithinvers": 39, "uniquevalarrai": 39, "uniquevalcountsarrai": 39, "unknown": [10, 20, 30], "unknownerror": 32, "unknownsymbolerror": [32, 33], "unknownsymentri": 20, "unless": 31, "unord": 4, "unrecogn": 32, "unrecognizedtypeerror": 32, "unregist": [18, 21], "unregister_arrai": 25, "unregister_bitvector": 25, "unregister_categor": 25, "unregister_categorical_compon": 25, "unregister_datafram": 25, "unregister_groupbi": 25, "unregister_index": 25, "unregister_index_compon": 25, "unregister_segarrai": 25, "unregister_segarray_compon": 25, "unregister_seri": 25, "unsafecompileregex": 29, "unstack": 16, "unsupportedoserror": 33, "unsupportedtypeerror": 32, "until": 31, "up": [20, 21], "updat": 17, "upon": [9, 10, 31], "upper": 29, "uppercas": 29, "url": 9, "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "usag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "usedmodul": 7, "usedmodulesfmt": 30, "usehash": 29, "user": [10, 16, 17, 31, 33], "usermetr": 17, "usernam": 17, "useunorderedcopi": 4, "util": [11, 20], "v": 20, "v1": 29, "v2": 29, "val": [12, 16, 17, 20, 30, 34, 35, 36], "valid": 1, "validatearrayssamelength": 1, "validatenegativeax": 1, "valtyp": 17, "valu": [1, 3, 11, 13, 16, 17, 18, 19, 20, 21, 27, 28, 29, 34, 35, 36, 39, 42], "valuesdom": 11, "valus": 20, "var": [1, 4, 5, 7, 9, 14, 15, 16, 17, 19, 20, 21, 25, 29, 30, 31, 32, 33, 36], "vari": [20, 31], "variabl": 1, "variou": 14, "vd": 28, "vector": [24, 29], "verbatim": 46, "verbos": [20, 21], "version": [1, 17, 29, 30], "via": [9, 31, 33], "visibl": 20, "vv": 24, "wa": [11, 16, 29, 30, 33], "wai": 7, "wait": 31, "waitforactivitymutex": 31, "warn": [10, 14, 16, 29], "we": [1, 11, 20, 22, 30], "well": [13, 29, 33], "were": 46, "what": 46, "when": [1, 4, 13, 16, 20, 30, 31, 46], "where": [1, 2, 4, 11, 14, 16, 18, 20, 22, 29, 30, 33, 34, 35, 38], "whether": [1, 10, 15, 21, 29, 30, 31], "which": [9, 10, 11, 20, 22, 29, 30, 31, 33, 39, 46], "whichdtyp": 22, "while": 1, "whitespac": 29, "whose": 20, "width": [19, 30], "wise": 29, "within": [1, 9, 15, 30, 31], "without": 29, "work": [4, 11, 29], "would": [7, 30], "write": [9, 14, 30], "writelinestofil": 10, "writemodeerror": 33, "writer": 16, "writeserializ": 16, "writesparsematrix": 36, "writetofil": [10, 14], "writeusedmodul": 7, "writeusedmodulesjson": 7, "written": [10, 14], "wrong": 16, "wrote": 33, "x": [1, 5, 11, 29, 36], "x00": 10, "x1a": 10, "x89hdf": 10, "xind": 29, "y": 29, "yieldfrequ": [4, 5], "yind": 29, "you": [21, 39], "zero": [29, 35], "zeromq": 30, "zmq": 31}, "titles": ["chpldoc documentation", "AryUtil", "BigIntMsg", "Cast", "CommAggregation", "BigIntegerAggregation", "CommPrimitives", "CommandMap", "DynamicSort", "ExternalIntegration", "FileIO", "GenSymIO", "IOUtils", "In1d", "Logging", "MemoryMgmt", "Message", "MetricsMsg", "MsgProcessing", "MultiTypeRegEntry", "MultiTypeSymEntry", "MultiTypeSymbolTable", "NumPyDType", "NumericUnicodes", "RadixSortLSD", "Registry", "Security", "SegStringSort", "SegmentedComputation", "SegmentedString", "ServerConfig", "ServerDaemon", "ServerErrorStrings", "ServerErrors", "SipHash", "SparseMatrix", "SpsMatUtil", "StatusMsg", "SymArrayDmap", "Unique", "arkouda_server", "ArkoudaJSONCompat", "ArkoudaPythonCompat", "ArkoudaSortCompat", "ArkoudaSparseMatrixCompat", "ArkoudaTimeCompat", "RegistrationConfig"], "titleterms": {"arkouda_serv": 40, "arkoudajsoncompat": 41, "arkoudapythoncompat": 42, "arkoudasortcompat": 43, "arkoudasparsematrixcompat": 44, "arkoudatimecompat": 45, "aryutil": 1, "bigintegeraggreg": 5, "bigintmsg": 2, "cast": 3, "chpldoc": 0, "commaggreg": 4, "commandmap": 7, "commprimit": 6, "document": 0, "dynamicsort": 8, "externalintegr": 9, "fileio": 10, "gensymio": 11, "in1d": 13, "indic": 0, "ioutil": 12, "log": 14, "memorymgmt": 15, "messag": 16, "metricsmsg": 17, "msgprocess": 18, "multityperegentri": 19, "multitypesymbolt": 21, "multitypesymentri": 20, "numericunicod": 23, "numpydtyp": 22, "radixsortlsd": 24, "registrationconfig": 46, "registri": 25, "secur": 26, "segmentedcomput": 28, "segmentedstr": 29, "segstringsort": 27, "serverconfig": 30, "serverdaemon": 31, "servererror": 33, "servererrorstr": 32, "siphash": 34, "sparsematrix": 35, "spsmatutil": 36, "statusmsg": 37, "symarraydmap": 38, "tabl": 0, "uniqu": 39}})