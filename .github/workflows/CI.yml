name: CI

on: [pull_request, merge_group, workflow_dispatch]

env:
  ARKOUDA_QUICK_COMPILE: true

jobs:

  base:
    runs-on: ubuntu-latest
    container:
      image: chapel/chapel:2.3.0   
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Install python dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          apt-get update
          apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libssl-dev libsqlite3-dev libreadline-dev libbz2-dev libffi-dev curl liblzma-dev tk-dev
          apt-get install -y libhdf5-dev

    # Download and install Python from source (updated URL for Python 3.12)
    - name: Download Python 3.12 source
      run: |
        curl -O https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tgz
        file Python-3.12.0.tgz  # Check the file type

    - name: Extract Python 3.12 source
      run: |
        tar -xvf Python-3.12.0.tgz
        cd Python-3.12.0 && ./configure --enable-optimizations && make -j$(nproc) && make altinstall && cd ..
        update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.12 1

    # Install pip for Python from the get-pip.py script
    - name: Install pip for Python 3.12
      run: |
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3.12 get-pip.py
    - name: Install Chapel frontend bindings
      run: |
        (cd /opt/chapel/tools/chapel-py && python3 -m pip install .)
    - name: make chpldoc
      run: |    
        (cd /opt/chapel && make chpldoc)
    - name: check chpldoc version
      run: |  
        chpldoc --version


  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Check for tabs
      run: |
        ! git --no-pager grep -n $'\t' -- '*.chpl'
        

  isort:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install isort==5.13.2
      # Update output format to enable automatic inline annotations.
      - name: Run isort
        run: isort --check-only --diff .

  ruff-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.11.2
      # Update output format to enable automatic inline annotations.
      - name: ruff version
        run: | 
          ruff --version
      - name: Run Ruff
        run: ruff format --check --diff

        
  mypy:
    runs-on: ubuntu-latest
    needs: base
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        python3 -m pip install -e .[dev]
    - name: Arkouda mypy
      run: |
        python3 -m mypy arkouda

  docs:
    runs-on: ubuntu-latest
    container:
      image: chapel/chapel:2.3.0
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Install python dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          apt-get update
          apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libssl-dev libsqlite3-dev libreadline-dev libbz2-dev libffi-dev curl liblzma-dev tk-dev
          apt-get install -y libhdf5-dev

    # Download and install Python from source (updated URL for Python 3.12)
    - name: Download Python 3.12 source
      run: |
        curl -O https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tgz
        file Python-3.12.0.tgz  # Check the file type

    - name: Extract Python 3.12 source
      run: |
        tar -xvf Python-3.12.0.tgz
        cd Python-3.12.0 && ./configure --enable-optimizations && make -j$(nproc) && make altinstall && cd ..
        update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.12 1

    # Install pip for Python from the get-pip.py script
    - name: Install pip for Python 3.12
      run: |
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3.12 get-pip.py
    - name: Install Chapel frontend bindings
      run: |
        (cd /opt/chapel/tools/chapel-py && python3 -m pip install .)
    - name: make chpldoc
      run: |    
        (cd /opt/chapel && make chpldoc)
    - name: check chpldoc version
      run: |  
        chpldoc --version
    - name: Install dependencies
      run: |
        python3 -m pip install .[dev]
    - name: Arkouda make doc
      run: |
        make doc

  flake8:
    runs-on: ubuntu-latest
    needs: base
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Install Dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          python3 -m pip install .[dev]
    - name: flake8 version
      run: | 
        flake8 --version
    - name: Arkouda flake8
      run: |
        flake8   

  arkouda_python_portability:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    env:
      REPOSITORY_URL : https://doris-thirdparty-repo.bj.bcebos.com/thirdparty
    container:
      image: chapel/chapel:2.3.0
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    # Install dependencies to build Python from source
    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y \
          build-essential \
          zlib1g-dev \
          libncurses5-dev \
          libgdbm-dev \
          libssl-dev \
          libsqlite3-dev \
          libreadline-dev \
          libbz2-dev \
          libffi-dev \
          curl \
          liblzma-dev \
          tk-dev
    # Download and install Python from source (updated URL for Python 3.12)
    - name: Download Python ${matrix.python-version} source
      run: |
        curl -O https://www.python.org/ftp/python/${{ matrix.python-version }}.0/Python-${{ matrix.python-version }}.0.tgz
        file Python-${{ matrix.python-version }}.0.tgz  # Check the file type

    - name: Extract Python ${matrix.python-version} source
      run: |
        tar -xvf Python-${{ matrix.python-version }}.0.tgz
        cd Python-${{ matrix.python-version }}.0
        ./configure --enable-optimizations
        make -j$(nproc)
        make altinstall
        cd ..
        rm -rf Python-${{ matrix.python-version }}.0.tgz Python-${{ matrix.python-version }}.0
        update-alternatives --install /usr/bin/python python /usr/local/bin/python${{ matrix.python-version }} 1
        update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python${{ matrix.python-version }} 1
    # Install pip for Python from the get-pip.py script
    - name: Install pip for Python ${{ matrix.python-version }}
      run: |
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        python${{ matrix.python-version }} get-pip.py
        rm get-pip.py
    # Check Python version
    - name: Check python version
      run: |
        python3 --version
    - name: Install arrow
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |   
          apt-get -y update && apt-get  -y -V upgrade && apt-get install -y -V ca-certificates lsb-release wget
          make install-arrow
    - name: Install dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |   
          apt-get update && apt-get install -y libhdf5-dev hdf5-tools libzmq3-dev python3-pip libcurl4-openssl-dev libidn2-dev libzmq3-dev
          make install-iconv
          make install-pytables
          echo "\$(eval \$(call add-path,/usr/lib/x86_64-linux-gnu/hdf5/serial/))" >> Makefile.paths
          python3 -m pip install scikit-build   
    - name: Install Chapel frontend bindings
      run: |
        (cd $CHPL_HOME/tools/chapel-py && python3 -m pip install .)
    - name: Build/Install Arkouda
      run: |
        make
        python3 -m pip install .[dev]
    - name: Arkouda unit tests
      run: |
        make test-python size=100

  arkouda_makefile_almalinux:
    runs-on: ubuntu-24.04
    container:
      image: ajpotts/almalinux-with-arkouda-deps:1.0.0
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Make install-arrow
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-arrow        
    - name: Make install-zmq
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: | 
          make install-zmq        
    - name: Make install-iconv
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: | 
          make install-iconv
    - name: Make install-idn2
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-idn2
    - name: Make install-blosc
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-blosc

  arkouda_makefile_almalinux_install_pytables:
    runs-on: ubuntu-24.04    
    strategy:
      matrix:
        python-version: ['3.12']
    container:
      image: ajpotts/almalinux-with-arkouda-deps:1.0.0
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    # Install dependencies to build Python from source
    - name: Install dependencies
      run: |
        dnf update -y
        dnf install -y zlib-devel gcc gcc-c++ make zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl openssl-devel libffi-devel xz-devel zlib-devel

    # Download and install Python from source (updated URL for Python 3.12)
    - name: Download Python ${matrix.python-version} source
      run: |
        curl -O https://www.python.org/ftp/python/${{ matrix.python-version }}.0/Python-${{ matrix.python-version }}.0.tgz
        file Python-${{ matrix.python-version }}.0.tgz  # Check the file type

    - name: Extract Python ${matrix.python-version} source
      run: |
        tar -xvf Python-${{ matrix.python-version }}.0.tgz
        cd Python-${{ matrix.python-version }}.0 && ./configure --enable-optimizations && make -j$(nproc) && make altinstall && cd ..
        update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python${{ matrix.python-version }} 1

    # Install pip for Python from the get-pip.py script
    - name: Install pip for Python ${{ matrix.python-version }}
      run: |
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python${{ matrix.python-version }} get-pip.py
    - name: Check python version
      run: |
        python3 --version
    - name: Make install-hdf5
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |  
          make install-hdf5
    - name: Make install-pytables
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          HDF5_DIR=$(pwd)/dep/hdf5-install/ make install-pytables

  arkouda_makefile:
    runs-on: ubuntu-24.04
    container:
      image: chapel/chapel:2.3.0
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Install dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          apt-get update && apt-get install -y -V ca-certificates lsb-release wget build-essential cmake
          apt-get update && apt-get install -y -V python3-pip libcurl4-openssl-dev
          apt-get update -y && apt-get -y -V upgrade
    - name: Check python version
      run: |
        python3 --version

    - name: Install Chapel frontend bindings
      run: |
        (cd $CHPL_HOME/tools/chapel-py && python3 -m pip install .)
    - name: Make install-arrow-quick
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-arrow-quick
    - name: Make install-arrow
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
            apt-get remove -y apache-arrow-apt-source
            make arrow-clean
            make install-arrow    
    - name: Make install-zmq
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-zmq        
    - name: Make install-iconv
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: | 
          make install-iconv
    - name: Make install-idn2
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-idn2        
    - name: Make install-blosc
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-blosc


  arkouda_makefile_install_pytables:
    runs-on: ubuntu-24.04 
    needs: base
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Check python version
      run: |
        python3 --version
    - name: Make install-hdf5
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-hdf5
    - name: Make install-pytables
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          HDF5_DIR=$(pwd)/dep/hdf5-install/ make install-pytables

  arkouda_chpl_portability:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chpl-version: ['2.0.0','2.1.0','2.2.0','2.3.0']
    env:
      REPOSITORY_URL : https://doris-thirdparty-repo.bj.bcebos.com/thirdparty
    container:
      image: chapel/chapel:${{matrix.chpl-version}}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Install python dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          apt-get update
          apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libssl-dev libsqlite3-dev libreadline-dev libbz2-dev libffi-dev curl liblzma-dev tk-dev
          apt-get install -y libhdf5-dev

    # Download and install Python from source (updated URL for Python 3.12)
    - name: Download Python 3.12 source
      run: |
        curl -O https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tgz
        file Python-3.12.0.tgz  # Check the file type

    - name: Extract Python 3.12 source
      run: |
        tar -xvf Python-3.12.0.tgz
        cd Python-3.12.0 && ./configure --enable-optimizations && make -j$(nproc) && make altinstall && cd ..
        update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.12 1

    # Install pip for Python from the get-pip.py script
    - name: Install pip for Python 3.12
      run: |
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3.12 get-pip.py
    - name: Install dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          apt-get update && apt-get install -y -V ca-certificates lsb-release wget
          make install-arrow
          apt-get update && apt-get install -y libhdf5-dev hdf5-tools libzmq3-dev python3-pip libcurl4-openssl-dev libidn2-dev libzmq3-dev
          make install-iconv
          make install-pytables
          echo "\$(eval \$(call add-path,/usr/lib/x86_64-linux-gnu/hdf5/serial/))" >> Makefile.paths
          python3 -m pip install scikit-build  
    - name: Check chpl version
      run: |
        chpl --version
    - name: Install Chapel frontend bindings
      run: |
        (cd $CHPL_HOME/tools/chapel-py && python3 -m pip install .)
    - name: Build/Install Arkouda
      run: |
        make
        python3 -m pip install .[dev]
    - name: Arkouda unit tests
      run: |
        make test-python size=100


  arkouda_multi-dim:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chpl-version: ['2.0.0','2.1.0','2.2.0','2.3.0']
    env:
      REPOSITORY_URL : https://doris-thirdparty-repo.bj.bcebos.com/thirdparty
    container:
      image: chapel/chapel:${{matrix.chpl-version}}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Install python dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          apt-get update
          apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libssl-dev libsqlite3-dev libreadline-dev libbz2-dev libffi-dev curl liblzma-dev tk-dev
          apt-get install -y libhdf5-dev

    # Download and install Python from source (updated URL for Python 3.12)
    - name: Download Python 3.12 source
      run: |
        curl -O https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tgz
        file Python-3.12.0.tgz  # Check the file type

    - name: Extract Python 3.12 source
      run: |
        tar -xvf Python-3.12.0.tgz
        cd Python-3.12.0 && ./configure --enable-optimizations && make -j$(nproc) && make altinstall && cd ..
        update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.12 1

    # Install pip for Python from the get-pip.py script
    - name: Install pip for Python 3.12
      run: |
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3.12 get-pip.py
    # Check Python version
    - name: Check python version
      run: |
        python3 --version 
    - name: Install dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          apt-get update && apt-get install -y -V ca-certificates lsb-release wget
          make install-arrow
          apt-get update && apt-get install -y libhdf5-dev hdf5-tools libzmq3-dev python3-pip libcurl4-openssl-dev libidn2-dev libzmq3-dev
          make install-iconv
          make install-pytables
          echo "\$(eval \$(call add-path,/usr/lib/x86_64-linux-gnu/hdf5/serial/))" >> Makefile.paths
          python3 -m pip install scikit-build   
    - name: Check chpl version
      run: |
        chpl --version
    - name: Install Chapel frontend bindings
      run: |
        (cd $CHPL_HOME/tools/chapel-py && python3 -m pip install .)
    - name: Use MultiDim Configs
      run: |
        cp .configs/registration-config-multi-dim.json registration-config.json
    - name: Build/Install Arkouda
      run: |
        make
        python3 -m pip install .[dev]
    - name: Arkouda unit tests
      run: |
        make test-python size=100

  arkouda_tests_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: chapel
            threads: 2
#          - image: chapel-gasnet-smp
#            threads: 1
    env:
      CHPL_RT_NUM_THREADS_PER_LOCALE: ${{matrix.threads}}
    container:
      image: chapel/${{matrix.image}}:2.3.0
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Install python dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          apt-get update
          apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libssl-dev libsqlite3-dev libreadline-dev libbz2-dev libffi-dev curl liblzma-dev tk-dev
          apt-get install -y libhdf5-dev

    # Download and install Python from source (updated URL for Python 3.12)
    - name: Download Python 3.12 source
      run: |
        curl -O https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tgz
        file Python-3.12.0.tgz  # Check the file type

    - name: Extract Python 3.12 source
      run: |
        tar -xvf Python-3.12.0.tgz
        cd Python-3.12.0 && ./configure --enable-optimizations && make -j$(nproc) && make altinstall && cd ..
        update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.12 1

    # Install pip for Python from the get-pip.py script
    - name: Install pip for Python 3.12
      run: |
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3.12 get-pip.py
    - name: Install dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          apt-get update && apt-get install -y -V ca-certificates lsb-release wget
          make install-arrow
          apt-get update && apt-get install -y libhdf5-dev hdf5-tools libzmq3-dev libcurl4-openssl-dev libidn2-dev libzmq3-dev
          make install-iconv
          make install-pytables
          echo "\$(eval \$(call add-path,/usr/lib/x86_64-linux-gnu/hdf5/serial/))" >> Makefile.paths
          python3 -m pip install scikit-build pytest-benchmark==3.2.2 py
    - name: Install Chapel frontend bindings
      run: |
        (cd $CHPL_HOME/tools/chapel-py && python3 -m pip install .)
    - name: Build/Install Arkouda
      run: |
        make
        python3 -m pip install .[dev]
    - name: Arkouda make check
      run: |
        make check
    - name: Arkouda unit tests
      if: matrix.image != 'chapel-gasnet-smp'
      env:
        ARKOUDA_PYTEST_OPTIONS: "--durations=0 --durations-min=5.0"
      run: |
        make test-python size=100
    - name: Arkouda benchmark --correctness-only
      if: matrix.image != 'chapel-gasnet-smp'
      run: |
        ARKOUDA_HOME=$(pwd) ./benchmarks/run_benchmarks.py --correctness-only
        ARKOUDA_HOME=$(pwd) ./benchmarks/run_benchmarks.py --size=100 --gen-graphs
        
  arkouda_benchmark_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: chapel
            threads: 2
#          - image: chapel-gasnet-smp
#            threads: 1
    env:
      CHPL_RT_NUM_THREADS_PER_LOCALE: ${{matrix.threads}}
    container:
      image: chapel/${{matrix.image}}:2.3.0
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Install python dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          apt-get update
          apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libssl-dev libsqlite3-dev libreadline-dev libbz2-dev libffi-dev curl liblzma-dev tk-dev
          apt-get install -y libhdf5-dev

    # Download and install Python from source (updated URL for Python 3.12)
    - name: Download Python 3.12 source
      run: |
        curl -O https://www.python.org/ftp/python/3.12.0/Python-3.12.0.tgz
        file Python-3.12.0.tgz  # Check the file type

    - name: Extract Python 3.12 source
      run: |
        tar -xvf Python-3.12.0.tgz
        cd Python-3.12.0 && ./configure --enable-optimizations && make -j$(nproc) && make altinstall && cd ..
        update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.12 1

    # Install pip for Python from the get-pip.py script
    - name: Install pip for Python 3.12
      run: |
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3.12 get-pip.py
    - name: Install dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          apt-get update && apt-get install -y -V ca-certificates lsb-release wget
          make install-arrow
          apt-get update && apt-get install -y libhdf5-dev hdf5-tools libzmq3-dev libcurl4-openssl-dev libidn2-dev libzmq3-dev
          make install-iconv
          make install-pytables
          echo "\$(eval \$(call add-path,/usr/lib/x86_64-linux-gnu/hdf5/serial/))" >> Makefile.paths
          python3 -m pip install scikit-build pytest-benchmark==3.2.2 py
    - name: Install Chapel frontend bindings
      run: |
        (cd $CHPL_HOME/tools/chapel-py && python3 -m pip install .)
    - name: Build/Install Arkouda
      run: |
        make
        python3 -m pip install .[dev]
    - name: Arkouda make check
      run: |
        make check
    - name: Arkouda benchmark
      run: |
        make benchmark size_bm=10
          
          
