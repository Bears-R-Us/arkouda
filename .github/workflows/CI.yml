name: CI

on: [pull_request, merge_group, workflow_dispatch]

env:
  ARKOUDA_QUICK_COMPILE: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pydocstyle>=6.3.0
    - name: Check for tabs
      run: |
        ! git --no-pager grep -n $'\t' -- '*.chpl'
    - name: Run linter (pydocstyle)
      run: |
        pydocstyle
    - name: Run doc-example check
      run: make check-doc-examples

  chpl-lint:
    runs-on: ubuntu-latest
    env:
      CHPL_HOME: /opt/chapel-2.4.0
    container:
      image: ajpotts/ubuntu-with-arkouda-deps:1.0.2
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set Python version to 3.13
      run: |
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.13 1
    - name: Install dependencies
      run: |
        (cd $CHPL_HOME && make chplcheck)
        update-alternatives --install /usr/bin/chplcheck chplcheck /opt/chapel-2.4.0/tools/chplcheck/chplcheck 1
    - name: Ensure ignore file exists
      # .chplcheckignore should live at your repo root
      run: |
        if [ ! -f .chplcheckignore ]; then
          echo "# add paths/globs to ignore, e.g. src/generated/*" > .chplcheckignore
        fi

    - name: Run chplcheck (respecting .chplcheckignore)
      run: |
        make chplcheck

  darglint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install darglint>=1.8.1
    - name: Check docstrings with darglint
      run: |
        #  darglint is a docstring linter that checks whether docstring sections (arguments, returns, raises, etc.) match the function signature or implementation.
        darglint -v 2 arkouda

  isort:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install isort==5.13.2
      # Update output format to enable automatic inline annotations.
      - name: Run isort
        run: isort --check-only --diff .

  ruff-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.11.2
      # Update output format to enable automatic inline annotations.
      - name: ruff version
        run: | 
          ruff --version
      - name: Run Ruff
        run: ruff format --check --diff

  mypy:
    runs-on: ubuntu-latest
    env:
      CHPL_HOME: /opt/chapel-2.4.0
    container:
      image: ajpotts/ubuntu-with-arkouda-deps:1.0.2
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set Python version to 3.13
      run: |
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.13 1
    - name: Install dependencies
      run: |
        python3 -m ensurepip --default-pip
        python3 -m pip install -e .[dev]
    - name: check mypy version
      run: |
        mypy --version
    - name: Arkouda mypy
      run: |
        python3 -m mypy arkouda

  docs:
    runs-on: ubuntu-latest
    env:
      CHPL_HOME: /opt/chapel-2.4.0
    container:
      image: ajpotts/ubuntu-with-arkouda-deps:1.0.2
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set Python version to 3.13
      run: |
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.13 1  
        python3 -m ensurepip --default-pip    
    - name: Set Chapel version to 2.4.0
      run: |
        update-alternatives --install /usr/bin/chpl chpl /opt/chapel-2.4.0/bin/linux64-x86_64/chpl 1
        update-alternatives --install /usr/bin/chpldoc chpldoc /opt/chapel-2.4.0/bin/linux64-x86_64/chpldoc 1
    - name: check chpldoc version
      run: |  
        chpldoc --version
    - name: Install dependencies
      run: |
        python3 -m pip install .[dev]
    - name: Arkouda make doc
      run: |
        make doc

  docstr-cov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with: { python-version: '3.x' }
      - name: Install dependencies
        run: pip install docstr-coverage
      - name: Run docstring coverage
        run: |
          mkdir -p docs
          make docstr-coverage

  flake8:
    runs-on: ubuntu-latest
    container:
      image: ajpotts/ubuntu-with-arkouda-deps:1.0.2
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set Python version to 3.13
      run: |
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.13 1
    - name: Install Dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          python3 -m ensurepip --default-pip
          python -m pip install --upgrade pip
          pip install flake8 pydoclint[flake8]==0.6.6
    - name: flake8 version
      run: | 
        flake8 --version
    - name: Arkouda flake8
      run: |
        flake8

  arkouda_python_portability:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
    env:
      CHPL_HOME: /opt/chapel-2.4.0
    container:
      image: ajpotts/ubuntu-with-arkouda-deps:1.0.2
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    # Check Python version
    - name: Set python version
      run: |    
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${{ matrix.python-version }} 1    
    - name: Set Chapel version to 2.4.0
      run: |
        update-alternatives --install /usr/bin/chpl chpl /opt/chapel-2.4.0/bin/linux64-x86_64/chpl 1
        update-alternatives --install /usr/bin/chpldoc chpldoc /opt/chapel-2.4.0/bin/linux64-x86_64/chpldoc 1
    - name: Check python version
      run: |
        python3 --version
    - name: Install dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          python3 -m ensurepip --default-pip
          echo "\$(eval \$(call add-path,/usr/lib/x86_64-linux-gnu/hdf5/serial/))" >> Makefile.paths
          echo "\$(eval \$(call add-path,$DEP_INSTALL_DIR/arrow-install/))" >> Makefile.paths
          echo "\$(eval \$(call add-path,$DEP_INSTALL_DIR/libiconv-install/))" >> Makefile.paths
    - name: Build/Install Arkouda
      run: |
        make
        python3 -m pip install .[dev]
    - name: Arkouda unit tests
      run: |
        make test-python size=100
        
  arkouda_makefile_almalinux:
    runs-on: ubuntu-24.04    
    strategy:
      matrix:
        python-version: ['3.13']
    env:
      CHPL_HOME: /opt/chapel-2.4.0
    container:
      image: ajpotts/almalinux-with-arkouda-deps:1.0.2
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    # Install dependencies to build Python from source
    - name: Install dependencies
      run: |
        dnf update -y
        dnf install -y zlib-devel gcc gcc-c++ make zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl openssl-devel libffi-devel xz-devel zlib-devel

    # Download and install Python from source (updated URL for Python 3.13)
    - name: Download Python ${matrix.python-version} source
      run: |
        curl -O https://www.python.org/ftp/python/${{ matrix.python-version }}.0/Python-${{ matrix.python-version }}.0.tgz
        file Python-${{ matrix.python-version }}.0.tgz  # Check the file type

    - name: Extract Python ${matrix.python-version} source
      run: |
        tar -xvf Python-${{ matrix.python-version }}.0.tgz
        cd Python-${{ matrix.python-version }}.0 && ./configure --enable-optimizations && make -j$(nproc) && make altinstall && cd ..
        update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python${{ matrix.python-version }} 1

    # Install pip for Python from the get-pip.py script
    - name: Install pip for Python ${{ matrix.python-version }}
      run: |
        curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python${{ matrix.python-version }} get-pip.py
    - name: Check python version
      run: |
        python3 --version
    - name: Make install-arrow
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-arrow DEP_BUILD_DIR=/dep/build
    - name: Make install-zmq
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: | 
          make install-zmq DEP_BUILD_DIR=/dep/build
    - name: Make install-iconv
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: | 
          make install-iconv DEP_BUILD_DIR=/dep/build
    - name: Make install-idn2
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-idn2 DEP_BUILD_DIR=/dep/build
    - name: Make install-blosc
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-blosc DEP_BUILD_DIR=/dep/build
    - name: Make install-hdf5
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |  
          make install-hdf5 DEP_BUILD_DIR=/dep/build
    - name: Make install-pytables
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          HDF5_DIR=$(pwd)/dep/hdf5-install/ make install-pytables

  arkouda_makefile:
    runs-on: ubuntu-24.04
    env:
      CHPL_HOME: /opt/chapel-2.4.0
    container:
      image: ajpotts/ubuntu-with-arkouda-deps:1.0.2
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4    
    - name: Set Python version to 3.13
      run: |
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.13 1 
        python3 -m ensurepip --default-pip     
    - name: Set Chapel version to 2.4.0
      run: |
        update-alternatives --install /usr/bin/chpl chpl /opt/chapel-2.4.0/bin/linux64-x86_64/chpl 1
        update-alternatives --install /usr/bin/chpldoc chpldoc /opt/chapel-2.4.0/bin/linux64-x86_64/chpldoc 1
    - name: Check python version
      run: |
        python3 --version
    - name: Make install-arrow-quick
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-arrow-quick 
    - name: Make install-arrow
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
            apt-get remove -y apache-arrow-apt-source
            make install-arrow DEP_BUILD_DIR=$DEP_BUILD_DIR
    - name: Make install-zmq
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-zmq  DEP_BUILD_DIR=$DEP_BUILD_DIR
    - name: Make install-iconv
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: | 
          make install-iconv  DEP_BUILD_DIR=$DEP_BUILD_DIR
    - name: Make install-idn2
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-idn2  DEP_BUILD_DIR=$DEP_BUILD_DIR   
    - name: Make install-blosc
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-blosc  DEP_BUILD_DIR=$DEP_BUILD_DIR
    - name: Make install-hdf5
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          make install-hdf5  DEP_BUILD_DIR=$DEP_BUILD_DIR
    - name: Make install-pytables
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          HDF5_DIR=$(pwd)/dep/hdf5-install/ make install-pytables DEP_BUILD_DIR=$DEP_BUILD_DIR


  arkouda_chpl_portability:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chpl-version: ['2.0.0','2.1.0','2.2.0','2.3.0','2.4.0']
    env:
      CHPL_HOME: /opt/chapel-${{ matrix.chpl-version }}
    container:
      image: ajpotts/ubuntu-with-arkouda-deps:1.0.2
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set Python version to 3.13
      run: |
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.13 1      
    - name: Set Chapel version to ${matrix.chpl-version}
      run: |
        update-alternatives --install /usr/bin/chpl chpl /opt/chapel-${{ matrix.chpl-version }}/bin/linux64-x86_64/chpl 1
        update-alternatives --install /usr/bin/chpldoc chpldoc /opt/chapel-${{ matrix.chpl-version }}/bin/linux64-x86_64/chpldoc 1
    - name: Check Chapel version
      run: |
        chpl --version
    - name: Install dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          python3 -m ensurepip --default-pip
          echo "\$(eval \$(call add-path,/usr/lib/x86_64-linux-gnu/hdf5/serial/))" >> Makefile.paths
          echo "\$(eval \$(call add-path,$DEP_INSTALL_DIR/arrow-install/))" >> Makefile.paths
          echo "\$(eval \$(call add-path,$DEP_INSTALL_DIR/libiconv-install/))" >> Makefile.paths
    - name: Check chpl version
      run: |
        chpl --version
    - name: Install Chapel frontend bindings
      run: |
        (cd $CHPL_HOME/tools/chapel-py && python3 -m pip install .)
    - name: Build/Install Arkouda
      run: |
        make
        python3 -m pip install .[dev]
    - name: Arkouda unit tests
      run: |
        make test-python size=100

  arkouda_multi-dim:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chpl-version: ['2.0.0','2.1.0','2.2.0','2.3.0','2.4.0']
    env:
      CHPL_HOME: /opt/chapel-${{ matrix.chpl-version }}
    container:
      image: ajpotts/ubuntu-with-arkouda-deps:1.0.2
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set Python version to 3.13
      run: |
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.13 1      
    - name: Set Chapel version to ${matrix.chpl-version}
      run: |
        update-alternatives --install /usr/bin/chpl chpl /opt/chapel-${{ matrix.chpl-version }}/bin/linux64-x86_64/chpl 1
        update-alternatives --install /usr/bin/chpldoc chpldoc /opt/chapel-${{ matrix.chpl-version }}/bin/linux64-x86_64/chpldoc 1
    - name: Check Chapel version
      run: |
        chpl --version
    - name: Install dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          python3 -m ensurepip --default-pip
          echo "\$(eval \$(call add-path,/usr/lib/x86_64-linux-gnu/hdf5/serial/))" >> Makefile.paths
          echo "\$(eval \$(call add-path,$DEP_INSTALL_DIR/arrow-install/))" >> Makefile.paths
          echo "\$(eval \$(call add-path,$DEP_INSTALL_DIR/libiconv-install/))" >> Makefile.paths
    - name: Check chpl version
      run: |
        chpl --version
    - name: Install Chapel frontend bindings
      run: |
        (cd $CHPL_HOME/tools/chapel-py && python3 -m pip install .)    
    - name: Use MultiDim Configs
      run: |
        cp .configs/registration-config-multi-dim.json registration-config.json
    - name: Build/Install Arkouda
      run: |
        make
        python3 -m pip install .[dev]
    - name: Arkouda unit tests
      run: |
        make test-python size=100

  arkouda_tests_linux:
    runs-on: ubuntu-latest
    env:
      CHPL_RT_NUM_THREADS_PER_LOCALE: 2
      CHPL_HOME: /opt/chapel-2.4.0
    container:
      image: ajpotts/ubuntu-with-arkouda-deps:1.0.2
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set Python version to 3.13
      run: |
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.13 1      
    - name: Set Chapel version to 2.4
      run: |
        update-alternatives --install /usr/bin/chpl chpl /opt/chapel-2.4.0/bin/linux64-x86_64/chpl 1
        update-alternatives --install /usr/bin/chpldoc chpldoc /opt/chapel-2.4.0/bin/linux64-x86_64/chpldoc 1
    - name: Check Chapel version
      run: |
        chpl --version
    - name: Install dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          python3 -m ensurepip --default-pip
          python3 -m pip install pytest-benchmark==3.2.2 py
          echo "\$(eval \$(call add-path,/usr/lib/x86_64-linux-gnu/hdf5/serial/))" >> Makefile.paths
          echo "\$(eval \$(call add-path,$DEP_INSTALL_DIR/arrow-install/))" >> Makefile.paths
          echo "\$(eval \$(call add-path,$DEP_INSTALL_DIR/libiconv-install/))" >> Makefile.paths
    - name: Build/Install Arkouda
      run: |
        make
        python3 -m pip install .[dev]
    - name: Arkouda make check
      run: |
        make check
    - name: Arkouda unit tests
      if: matrix.image != 'chapel-gasnet-smp'
      env:
        ARKOUDA_PYTEST_OPTIONS: "--durations=0 --durations-min=5.0"
      run: |
        make test-python size=100
    - name: Arkouda benchmark --correctness-only
      if: matrix.image != 'chapel-gasnet-smp'
      run: |
        ARKOUDA_HOME=$(pwd) ./benchmarks/run_benchmarks.py --correctness-only
        ARKOUDA_HOME=$(pwd) ./benchmarks/run_benchmarks.py --size=100 --gen-graphs
        
  arkouda_benchmark_linux:
    runs-on: ubuntu-latest
    env:
      CHPL_HOME: /opt/chapel-2.4.0
    container:
      image: ajpotts/ubuntu-with-arkouda-deps:1.0.2
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: Set Python version to 3.13
      run: |
        update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.13 1      
    - name: Set Chapel version to 2.4
      run: |
        update-alternatives --install /usr/bin/chpl chpl /opt/chapel-2.4.0/bin/linux64-x86_64/chpl 1
        update-alternatives --install /usr/bin/chpldoc chpldoc /opt/chapel-2.4.0/bin/linux64-x86_64/chpldoc 1
    - name: Check Chapel version
      run: |
        chpl --version
    - name: Install dependencies
      uses: nick-fields/retry@v2
      with:
        timeout_seconds: 1200  # or use timeout_minutes
        max_attempts: 2
        retry_wait_seconds: 60
        retry_on: error
        command: |
          python3 -m ensurepip --default-pip
          python3 -m pip install pytest-benchmark==3.2.2 py
          echo "\$(eval \$(call add-path,/usr/lib/x86_64-linux-gnu/hdf5/serial/))" >> Makefile.paths
          echo "\$(eval \$(call add-path,$DEP_INSTALL_DIR/arrow-install/))" >> Makefile.paths
          echo "\$(eval \$(call add-path,$DEP_INSTALL_DIR/libiconv-install/))" >> Makefile.paths
    - name: Build/Install Arkouda
      run: |
        make
        python3 -m pip install .[dev]
    - name: Arkouda benchmark
      run: |
        make benchmark size_bm=10
    - name: Arkouda benchmark -- Numpy
      run: |
        python3 -m pytest -c benchmark.ini --size=10 --numpy 
    - name: Arkouda benchmark -- Correctness Only
      run: |
        python3 -m pytest -c benchmark.ini --size=10 --correctness_only     
          
            
