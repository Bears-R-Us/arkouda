name: CI

on: [push, pull_request]

env:
  ARKOUDA_QUICK_COMPILE: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check for tabs
      run: |
        ! git --no-pager grep -n $'\t' -- '*.chpl'
        
  mypy:
    runs-on: ubuntu-latest
    container:
      image: chapel/chapel:1.24.1
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        apt-get update && apt-get install -y python3-pip
        python3 -m pip install types-pkg_resources
        python3 -m pip install -e .[dev]
    - name: Arkouda mypy
      run: |
        python3 -m mypy arkouda

  docs:
    runs-on: ubuntu-latest
    container:
      image: chapel/chapel:1.24.1
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        apt-get update && apt-get install -y python3-pip
        python3 -m pip install -e .[dev]
    - name: Arkouda make doc
      run: |
        make doc

  #arkouda_python_portability:
  #  runs-on: ubuntu-latest
  #  strategy:
  #    matrix:
  #      python-version: ['3.7', '3.8', '3.9', '3.x']
  #  container:
  #    image: chapel/chapel:1.24.1
  #  steps:
  #  - uses: actions/checkout@v2
  #  - name: Set up Python ${{ matrix.python-version }}
  #    uses: actions/setup-python@v2
  #    with:
  #      python-version: ${{ matrix.python-version }}
  #  - name: Install dependencies
  #    run: |
  #      apt-get update && apt-get install -y libhdf5-dev hdf5-tools libzmq3-dev python3-pip
  #      echo "\$(eval \$(call add-path,/usr/lib/x86_64-linux-gnu/hdf5/serial/))" > Makefile.paths
  #  - name: Build/Install Arkouda
  #    run: |
  #      make
  #      python3 -m pip install -e .[dev]
  #  - name: Arkouda make check
  #    run: |
  #      make check
  #  - name: Arkouda unit tests
  #    run: |
  #      make test-python

  arkouda_tests_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: chapel
            threads: 2
          - image: chapel-gasnet-smp
            threads: 1
    env:
      CHPL_RT_NUM_THREADS_PER_LOCALE: ${{matrix.threads}}
    container:
      image: chapel/${{matrix.image}}:1.24.1
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        apt-get update && apt-get install -y libhdf5-dev hdf5-tools libzmq3-dev python3-pip
        echo "\$(eval \$(call add-path,/usr/lib/x86_64-linux-gnu/hdf5/serial/))" > Makefile.paths
    - name: Build/Install Arkouda
      run: |
        make
        python3 -m pip install -e .[dev]
    - name: Arkouda make check
      run: |
        make check
    - name: Arkouda unit tests
      env:
        ARKOUDA_PYTEST_OPTIONS: "--durations=0 --durations-min=5.0"
      run: |
        make test-python
    - name: Arkouda benchmark --correctness-only
      run: |
        ./benchmarks/run_benchmarks.py --correctness-only
        if [ "${{matrix.image}}" != "chapel-gasnet-smp" ]; then
          ./benchmarks/run_benchmarks.py --size=100 --gen-graphs
        fi

  chapel_unit_tests_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [chapel, chapel-gasnet-smp]
    container:
      image: chapel/${{matrix.image}}:1.24.1
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        apt-get update && apt-get install -y libhdf5-dev hdf5-tools libzmq3-dev python3-pip
        echo "\$(eval \$(call add-path,/usr/lib/x86_64-linux-gnu/hdf5/serial/))" > Makefile.paths
    - name: Run unit tests
      run: |
        start_test test
