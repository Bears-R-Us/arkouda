Search.setIndex({"alltitles": {"API Reference": [[56, null], [66, "api-reference"], [67, "api-reference"], [68, "api-reference"], [69, "api-reference"]], "Access/Set Specific Elements in Sub-Array": [[96, "access-set-specific-elements-in-sub-array"]], "Adding Functionality to the Arkouda Server": [[57, "adding-functionality-to-the-arkouda-server"]], "Adding Issues": [[0, "adding-issues"]], "Adding Python Functionality (Client Interface)": [[57, "adding-python-functionality-client-interface"]], "Adding Your First Feature": [[57, null]], "Adding a Module from Outside the Arkouda src Directory": [[1, "adding-a-module-from-outside-the-arkouda-src-directory"]], "Adding new modules into the build process": [[77, "adding-new-modules-into-the-build-process"]], "All Dependencies": [[74, "all-dependencies"]], "Anaconda": [[76, "anaconda"]], "Append": [[90, "append"]], "Append & Prepend": [[96, "append-prepend"]], "ArgSort": [[84, "argsort"]], "Argsort": [[81, "argsort"]], "Arithmetic and Numeric Operations": [[86, null]], "Arkouda Arrays": [[65, "arkouda-arrays"]], "Arkouda DataFrames": [[65, "arkouda-dataframes"]], "Arkouda Documentation": [[71, null]], "Arkouda Formatted File": [[66, "arkouda-formatted-file"]], "Array Set Operations": [[98, null]], "ArrayView": [[67, "arrayview"]], "ArrayView in Arkouda": [[87, null]], "Arrow Install Troubleshooting": [[74, "arrow-install-troubleshooting"]], "Attributes": [[4, "attributes"], [24, "attributes"], [26, "attributes"], [35, "attributes"], [46, "attributes"], [47, "attributes"], [50, "attributes"]], "Basic Interaction": [[65, "basic-interaction"]], "Benchmark Arguments": [[58, "benchmark-arguments"]], "Between client and server": [[83, "between-client-and-server"]], "Bug Reports": [[0, "bug-reports"]], "Build Arkouda": [[59, "build-arkouda"]], "Build Chapel with GASNet": [[59, "build-chapel-with-gasnet"]], "Build from Source (Recommended)": [[76, "build-from-source-recommended"]], "Build the Server": [[74, "build-the-server"]], "Building the Arkouda Documentation": [[74, "building-the-arkouda-documentation"]], "Building the Server": [[74, null]], "CSV": [[66, null]], "Categorical": [[67, "categorical"], [67, "id3"], [69, "categorical"]], "Categoricals": [[88, null]], "Change Dtype": [[84, "change-dtype"]], "Chapel": [[0, "chapel"]], "Chapel API Reference": [[73, null]], "Chapel Compiler Flags": [[1, "chapel-compiler-flags"]], "Chapel Installation": [[75, "chapel-installation"]], "Classes": [[2, "classes"], [4, "classes"], [6, "classes"], [8, "classes"], [13, "classes"], [17, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [45, "classes"], [47, "classes"], [48, "classes"], [50, "classes"], [52, "classes"], [54, "classes"]], "Clone Arkouda Repository": [[75, "clone-arkouda-repository"], [76, "clone-arkouda-repository"]], "Coding Conventions and Linting": [[0, "coding-conventions-and-linting"]], "Compilation / Makefile": [[1, "compilation-makefile"]], "Compression": [[69, "compression"]], "Concat": [[84, "concat"]], "Concatenate": [[90, "concatenate"]], "Concatenation": [[89, "concatenation"]], "Connect a Python 3 client": [[99, "connect-a-python-3-client"]], "Connect the Python 3 Client": [[72, "connect-the-python-3-client"]], "Constant": [[89, "constant"]], "Construction": [[88, "construction"]], "Contributing": [[0, null]], "Copy": [[90, "copy"]], "Core Development Team Only": [[0, "core-development-team-only"]], "Creating & Using a DataFrame": [[65, "creating-using-a-dataframe"]], "Creating Arrays": [[89, null]], "Creation": [[87, "creation"], [95, "creation"]], "Data Distribution": [[67, "data-distribution"]], "Data Formatting": [[66, "data-formatting"]], "Data I/O": [[83, null]], "Data Preprocessing": [[83, "data-preprocessing"]], "Data Schema": [[67, "data-schema"]], "Data Type": [[94, "data-type"]], "Data Types": [[90, "data-types"]], "DataFrame": [[66, "dataframe"], [67, "dataframe"], [69, "dataframe"]], "DataFrames": [[65, "dataframes"]], "DataFrames in Arkouda": [[90, null]], "Deduplication": [[90, "deduplication"], [96, "deduplication"]], "Dependencies": [[74, "dependencies"]], "Dependency Configuration": [[74, "dependency-configuration"]], "Dependency List": [[78, "dependency-list"]], "Dependency Paths": [[1, "dependency-paths"]], "Descriptive Statistics": [[92, "descriptive-statistics"]], "Developer Documentation": [[64, null]], "Developer Specific": [[78, "developer-specific"]], "Developing Arkouda": [[0, "developing-arkouda"]], "Diff the git logs": [[61, "diff-the-git-logs"]], "Distributable Package": [[74, "distributable-package"]], "Drop": [[90, "drop"]], "Element-wise Functions": [[86, "element-wise-functions"]], "Environment Configuration": [[59, "environment-configuration"]], "Environment Variables": [[1, null]], "Environment Variables to Always Set": [[62, "environment-variables-to-always-set"]], "Example": [[57, "example"], [57, "id1"]], "Example Files": [[66, "example-files"]], "Examples": [[65, null]], "Exceptions": [[3, "exceptions"], [24, "exceptions"], [36, "exceptions"]], "Export": [[68, "export"]], "Exporting pdarray Objects": [[65, "exporting-pdarray-objects"]], "Exporting to Pandas": [[65, "exporting-to-pandas"]], "Feature Requests": [[0, "feature-requests"]], "Features": [[84, "features"], [90, "features"], [95, "features"], [97, "features"]], "File Configuration": [[67, "file-configuration"]], "File Formatting": [[66, "file-formatting"]], "File I/O": [[70, null]], "File Without Header": [[66, "file-without-header"]], "Filter": [[90, "filter"]], "Flattening": [[100, "flattening"]], "Functions": [[2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [18, "functions"], [19, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [24, "functions"], [26, "functions"], [27, "functions"], [28, "functions"], [29, "functions"], [30, "functions"], [33, "functions"], [34, "functions"], [35, "functions"], [36, "functions"], [37, "functions"], [38, "functions"], [39, "functions"], [40, "functions"], [41, "functions"], [43, "functions"], [44, "functions"], [46, "functions"], [47, "functions"], [49, "functions"], [50, "functions"], [51, "functions"], [53, "functions"], [54, "functions"], [55, "functions"]], "GASNet Development": [[59, null]], "Gather": [[81, "gather"]], "Gather/Scatter (pdarray)": [[93, "gather-scatter-pdarray"]], "General I/O API": [[70, "general-i-o-api"]], "Generating release notes": [[61, "generating-release-notes"]], "Getting Started": [[74, "getting-started"]], "GroupBy": [[65, "groupby"], [67, "groupby"], [67, "id5"], [90, "groupby"], [91, null]], "HDF5": [[67, null]], "Head/Tail": [[97, "head-tail"]], "Histogram": [[92, "histogram"]], "Homebrew": [[76, "homebrew"]], "I/O": [[100, "i-o"]], "Import": [[68, "import"]], "Import/Export": [[68, null], [83, "import-export"]], "Import/Export Support": [[70, "import-export-support"]], "Importing Pandas DataFrame": [[65, "importing-pandas-dataframe"]], "Index": [[66, "index"], [67, "index"], [69, "index"]], "Indexing": [[87, "indexing"]], "Indexing and Assignment": [[93, null]], "Indexs in Arkouda": [[84, null]], "Individual Installs": [[74, "individual-installs"]], "Install Arkouda": [[72, "install-arkouda"]], "Install Chapel": [[76, "install-chapel"]], "Install Chapel (RHEL)": [[75, "install-chapel-rhel"]], "Install Chapel (Ubuntu)": [[75, "install-chapel-ubuntu"]], "Install Dependencies": [[72, "install-dependencies"]], "Install Guides": [[80, "install-guides"]], "Installation": [[80, null]], "Installing Dependencies Manually": [[74, "installing-dependencies-manually"]], "Installing/Updating Python Dependencies": [[78, "installing-updating-python-dependencies"]], "Integer": [[93, "integer"]], "Integer pdarray index": [[93, "integer-pdarray-index"]], "Intersect": [[96, "intersect"]], "Iteration": [[87, "iteration"], [88, "iteration"], [90, "iteration"], [94, "iteration"], [96, "iteration"], [100, "iteration"]], "Large Datasets": [[83, "large-datasets"]], "Launch arkouda server": [[99, "launch-arkouda-server"]], "Launching the Server": [[72, "launching-the-server"]], "Legacy File Support": [[67, "legacy-file-support"]], "Linux": [[75, null]], "Logical indexing": [[93, "logical-indexing"]], "Lookup": [[84, "lookup"], [97, "lookup"], [97, "id1"]], "MacOS": [[76, null]], "Match Object": [[100, "match-object"]], "Merging Pull Requests": [[0, "merging-pull-requests"]], "MetaData Attributes": [[67, "metadata-attributes"]], "Modular Building": [[74, "modular-building"]], "Modular Server Builds": [[77, null]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [22, "module-contents"], [23, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [54, "module-contents"], [55, "module-contents"]], "NGrams": [[96, "ngrams"]], "Name": [[94, "name"]], "Named Arguments": [[81, "named-arguments"], [81, "named-arguments"], [81, "named-arguments"], [81, "named-arguments"], [81, "named-arguments"], [81, "named-arguments"]], "Next Steps": [[75, "next-steps"], [76, "next-steps"]], "Operation": [[96, "operation"]], "Operations": [[88, "operations"], [100, "operations"]], "Operators": [[94, "operators"]], "Overview": [[80, "overview"]], "Package Contents": [[8, "package-contents"], [21, "package-contents"], [24, "package-contents"], [41, "package-contents"], [53, "package-contents"]], "Pandas Integration": [[97, "pandas-integration"]], "Parquet": [[69, null]], "Performance": [[96, "performance"], [100, "performance"]], "Performance Testing": [[81, null]], "Permutations": [[90, "permutations"]], "Positional Arguments": [[81, "positional-arguments"], [81, "positional-arguments"], [81, "positional-arguments"], [81, "positional-arguments"], [81, "positional-arguments"], [81, "positional-arguments"]], "Prefix & Suffix": [[96, "prefix-suffix"]], "PyTest Benchmarks": [[58, null]], "Python Client": [[1, "python-client"]], "Python Dependencies": [[78, "python-dependencies"]], "Python Environment - Anaconda": [[76, "python-environment-anaconda"]], "Python Environment - Anaconda (Linux)": [[75, "python-environment-anaconda-linux"]], "Python Mapping": [[65, "python-mapping"]], "Python3": [[0, "python3"]], "Quickstart": [[72, null]], "Random": [[89, "random"]], "Random in Arkouda": [[95, null]], "Rank": [[94, "rank"]], "Read": [[70, "read"]], "Reading data from disk": [[83, "reading-data-from-disk"]], "Reading the JSON Output": [[58, "reading-the-json-output"]], "Reduce": [[81, "reduce"]], "Reducing Memory Usage of Arkouda Builds": [[60, null]], "Reductions": [[86, "reductions"]], "Regular": [[89, "regular"]], "Regular Expressions": [[100, "regular-expressions"]], "Release Process": [[0, "release-process"], [61, null]], "Rename Columns": [[90, "rename-columns"]], "Reproducing User Bugs Efficiently": [[63, "reproducing-user-bugs-efficiently"]], "Requirements": [[78, null], [80, "requirements"]], "Reset Indexes": [[90, "reset-indexes"]], "Reshape": [[94, "reshape"]], "Reviewing Pull Requests": [[0, "reviewing-pull-requests"]], "Run Arkouda": [[59, "run-arkouda"]], "Running": [[1, "running"]], "Running Single Files or Tests": [[58, "running-single-files-or-tests"]], "Running The Full Suite": [[58, "running-the-full-suite"]], "Running chapel tests": [[0, "running-chapel-tests"]], "Running python tests": [[0, "running-python-tests"]], "Saving Full Builds": [[63, "saving-full-builds"]], "Saving modules used in an Arkouda server run": [[77, "saving-modules-used-in-an-arkouda-server-run"]], "Scan": [[81, "scan"]], "Scans": [[86, "scans"]], "Scatter": [[81, "scatter"]], "SegArray": [[67, "segarray"], [67, "id4"], [69, "segarray"]], "SegArray SetOps": [[96, "segarray-setops"]], "SegArray Specific Methods": [[96, "segarray-specific-methods"]], "SegArrays in Arkouda": [[96, null]], "Series in Arkouda": [[97, null]], "Set Difference": [[96, "set-difference"]], "Shutdown/Disconnect": [[72, "shutdown-disconnect"]], "Slice": [[93, "slice"]], "Sorting": [[85, null], [90, "sorting"], [97, "sorting"]], "Specifying a custom configuration file": [[77, "specifying-a-custom-configuration-file"]], "Speeding up Arkouda Compilation": [[62, null]], "Splitting and joining": [[100, "splitting-and-joining"]], "Startup": [[99, null]], "Step-by-step instructions": [[61, "step-by-step-instructions"]], "Stream": [[81, "stream"]], "String-Specific Methods": [[100, "string-specific-methods"]], "Strings": [[66, "strings"], [67, "strings"], [67, "id2"], [69, "strings"]], "Strings in Arkouda": [[100, null]], "Sub-array of Size": [[96, "sub-array-of-size"]], "Submodules": [[8, "submodules"], [24, "submodules"], [35, "submodules"], [43, "submodules"]], "Subpackages": [[24, "subpackages"]], "Substring search": [[100, "substring-search"]], "Summarizing Data": [[92, null]], "Support Arkouda Data Types": [[66, "support-arkouda-data-types"]], "Supported Arkouda Data Types": [[67, "supported-arkouda-data-types"], [69, "supported-arkouda-data-types"]], "Supported File Formats": [[83, "supported-file-formats"]], "Supported File Formats:": [[70, null]], "Supported Write Modes": [[67, "supported-write-modes"], [69, "supported-write-modes"]], "Symmetric Difference": [[96, "symmetric-difference"]], "Tail/Head of Data": [[90, "tail-head-of-data"]], "Testing": [[0, "testing"], [1, "testing"]], "The pdarray class": [[94, null]], "Tips for Reproducing User Bugs": [[63, null]], "Type Casting": [[94, "type-casting"]], "Union": [[96, "union"]], "Updating Environment": [[76, "updating-environment"]], "Usage Guide": [[82, null]], "Using Anaconda": [[78, "using-anaconda"]], "Using Arkouda": [[72, "using-arkouda"]], "Using Environment Installed Dependencies (Recommended)": [[74, "using-environment-installed-dependencies-recommended"]], "Using Pip": [[78, "using-pip"]], "Using conda": [[74, "using-conda"]], "Using pip": [[74, "using-pip"]], "Using the Modular Build System": [[62, "using-the-modular-build-system"]], "Value Counts": [[92, "value-counts"], [97, "value-counts"]], "Vector and Scalar Arithmetic": [[86, "vector-and-scalar-arithmetic"]], "Where": [[86, "where"]], "Windows (WSL2)": [[79, null]], "Write": [[70, "write"]], "Writing Pull Requests": [[0, "writing-pull-requests"]], "arkouda": [[24, null]], "arkouda.accessor": [[2, null]], "arkouda.alignment": [[3, null]], "arkouda.array_api": [[8, null]], "arkouda.array_api.array_object": [[4, null]], "arkouda.array_api.creation_functions": [[5, null]], "arkouda.array_api.data_type_functions": [[6, null]], "arkouda.array_api.elementwise_functions": [[7, null]], "arkouda.array_api.indexing_functions": [[9, null]], "arkouda.array_api.linalg": [[10, null]], "arkouda.array_api.manipulation_functions": [[11, null]], "arkouda.array_api.searching_functions": [[12, null]], "arkouda.array_api.set_functions": [[13, null]], "arkouda.array_api.sorting_functions": [[14, null]], "arkouda.array_api.statistical_functions": [[15, null]], "arkouda.array_api.utility_functions": [[16, null]], "arkouda.categorical": [[17, null]], "arkouda.client": [[18, null]], "arkouda.client_dtypes": [[19, null]], "arkouda.dataframe": [[20, null]], "arkouda.dtypes": [[21, null]], "arkouda.groupbyclass": [[22, null]], "arkouda.history": [[23, null]], "arkouda.index": [[25, null]], "arkouda.infoclass": [[26, null]], "arkouda.io": [[27, null]], "arkouda.io_util": [[28, null]], "arkouda.join": [[29, null]], "arkouda.logger": [[30, null]], "arkouda.match": [[31, null]], "arkouda.matcher": [[32, null]], "arkouda.numeric": [[33, null]], "arkouda.numpy": [[35, null]], "arkouda.numpy.dtypes": [[34, null]], "arkouda.pdarrayclass": [[36, null]], "arkouda.pdarraycreation": [[37, null]], "arkouda.pdarraymanipulation": [[38, null]], "arkouda.pdarraysetops": [[39, null]], "arkouda.plotting": [[40, null]], "arkouda.random": [[41, null]], "arkouda.row": [[42, null]], "arkouda.scipy": [[43, null]], "arkouda.scipy.special": [[44, null]], "arkouda.scipy.stats": [[45, null]], "arkouda.security": [[46, null]], "arkouda.segarray": [[47, null]], "arkouda.series": [[48, null]], "arkouda.sorting": [[49, null]], "arkouda.sparrayclass": [[50, null]], "arkouda.sparsematrix": [[51, null]], "arkouda.strings": [[52, null]], "arkouda.testing": [[53, null]], "arkouda.timeclass": [[54, null]], "arkouda.util": [[55, null]], "choice": [[95, "choice"]], "exponential": [[95, "exponential"]], "integers": [[95, "integers"]], "logistic": [[95, "logistic"]], "lognormal": [[95, "lognormal"]], "ls Functionality": [[70, "ls-functionality"]], "normal": [[95, "normal"]], "pdarray": [[66, "pdarray"], [67, "pdarray"], [67, "id1"], [69, "pdarray"]], "pdarray Creation": [[65, "pdarray-creation"]], "pdarray Set operations": [[65, "pdarray-set-operations"]], "pdarrays": [[65, "pdarrays"]], "permutation": [[95, "permutation"]], "poisson": [[95, "poisson"]], "random": [[95, "random"]], "shuffle": [[95, "shuffle"]], "standard_exponential": [[95, "standard-exponential"]], "standard_normal": [[95, "standard-normal"]], "uniform": [[95, "uniform"]]}, "docnames": ["CONTRIBUTING_LINK", "ENVIRONMENT", "autoapi/arkouda/accessor/index", "autoapi/arkouda/alignment/index", "autoapi/arkouda/array_api/array_object/index", "autoapi/arkouda/array_api/creation_functions/index", "autoapi/arkouda/array_api/data_type_functions/index", "autoapi/arkouda/array_api/elementwise_functions/index", "autoapi/arkouda/array_api/index", "autoapi/arkouda/array_api/indexing_functions/index", "autoapi/arkouda/array_api/linalg/index", "autoapi/arkouda/array_api/manipulation_functions/index", "autoapi/arkouda/array_api/searching_functions/index", "autoapi/arkouda/array_api/set_functions/index", "autoapi/arkouda/array_api/sorting_functions/index", "autoapi/arkouda/array_api/statistical_functions/index", "autoapi/arkouda/array_api/utility_functions/index", "autoapi/arkouda/categorical/index", "autoapi/arkouda/client/index", "autoapi/arkouda/client_dtypes/index", "autoapi/arkouda/dataframe/index", "autoapi/arkouda/dtypes/index", "autoapi/arkouda/groupbyclass/index", "autoapi/arkouda/history/index", "autoapi/arkouda/index", "autoapi/arkouda/index/index", "autoapi/arkouda/infoclass/index", "autoapi/arkouda/io/index", "autoapi/arkouda/io_util/index", "autoapi/arkouda/join/index", "autoapi/arkouda/logger/index", "autoapi/arkouda/match/index", "autoapi/arkouda/matcher/index", "autoapi/arkouda/numeric/index", "autoapi/arkouda/numpy/dtypes/index", "autoapi/arkouda/numpy/index", "autoapi/arkouda/pdarrayclass/index", "autoapi/arkouda/pdarraycreation/index", "autoapi/arkouda/pdarraymanipulation/index", "autoapi/arkouda/pdarraysetops/index", "autoapi/arkouda/plotting/index", "autoapi/arkouda/random/index", "autoapi/arkouda/row/index", "autoapi/arkouda/scipy/index", "autoapi/arkouda/scipy/special/index", "autoapi/arkouda/scipy/stats/index", "autoapi/arkouda/security/index", "autoapi/arkouda/segarray/index", "autoapi/arkouda/series/index", "autoapi/arkouda/sorting/index", "autoapi/arkouda/sparrayclass/index", "autoapi/arkouda/sparsematrix/index", "autoapi/arkouda/strings/index", "autoapi/arkouda/testing/index", "autoapi/arkouda/timeclass/index", "autoapi/arkouda/util/index", "autoapi/index", "developer/ADDING_FEATURES", "developer/BENCHMARK", "developer/GASNET", "developer/MEMORY", "developer/RELEASE_PROCESS", "developer/TIPS", "developer/USER_BUGS", "developer/dev_menu", "examples", "file_io/CSV", "file_io/HDF5", "file_io/IMPORT_EXPORT", "file_io/PARQUET", "file_io/io_menu", "index", "quickstart", "server/index", "setup/BUILD", "setup/LINUX_INSTALL", "setup/MAC_INSTALL", "setup/MODULAR", "setup/REQUIREMENTS", "setup/WINDOWS_INSTALL", "setup/install_menu", "setup/testing", "usage", "usage/IO", "usage/Index", "usage/argsort", "usage/arithmetic", "usage/arrayview", "usage/categorical", "usage/creation", "usage/dataframe", "usage/groupby", "usage/histogram", "usage/indexing", "usage/pdarray", "usage/random", "usage/segarray", "usage/series", "usage/setops", "usage/startup", "usage/strings"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["CONTRIBUTING_LINK.md", "ENVIRONMENT.md", "autoapi/arkouda/accessor/index.rst", "autoapi/arkouda/alignment/index.rst", "autoapi/arkouda/array_api/array_object/index.rst", "autoapi/arkouda/array_api/creation_functions/index.rst", "autoapi/arkouda/array_api/data_type_functions/index.rst", "autoapi/arkouda/array_api/elementwise_functions/index.rst", "autoapi/arkouda/array_api/index.rst", "autoapi/arkouda/array_api/indexing_functions/index.rst", "autoapi/arkouda/array_api/linalg/index.rst", "autoapi/arkouda/array_api/manipulation_functions/index.rst", "autoapi/arkouda/array_api/searching_functions/index.rst", "autoapi/arkouda/array_api/set_functions/index.rst", "autoapi/arkouda/array_api/sorting_functions/index.rst", "autoapi/arkouda/array_api/statistical_functions/index.rst", "autoapi/arkouda/array_api/utility_functions/index.rst", "autoapi/arkouda/categorical/index.rst", "autoapi/arkouda/client/index.rst", "autoapi/arkouda/client_dtypes/index.rst", "autoapi/arkouda/dataframe/index.rst", "autoapi/arkouda/dtypes/index.rst", "autoapi/arkouda/groupbyclass/index.rst", "autoapi/arkouda/history/index.rst", "autoapi/arkouda/index.rst", "autoapi/arkouda/index/index.rst", "autoapi/arkouda/infoclass/index.rst", "autoapi/arkouda/io/index.rst", "autoapi/arkouda/io_util/index.rst", "autoapi/arkouda/join/index.rst", "autoapi/arkouda/logger/index.rst", "autoapi/arkouda/match/index.rst", "autoapi/arkouda/matcher/index.rst", "autoapi/arkouda/numeric/index.rst", "autoapi/arkouda/numpy/dtypes/index.rst", "autoapi/arkouda/numpy/index.rst", "autoapi/arkouda/pdarrayclass/index.rst", "autoapi/arkouda/pdarraycreation/index.rst", "autoapi/arkouda/pdarraymanipulation/index.rst", "autoapi/arkouda/pdarraysetops/index.rst", "autoapi/arkouda/plotting/index.rst", "autoapi/arkouda/random/index.rst", "autoapi/arkouda/row/index.rst", "autoapi/arkouda/scipy/index.rst", "autoapi/arkouda/scipy/special/index.rst", "autoapi/arkouda/scipy/stats/index.rst", "autoapi/arkouda/security/index.rst", "autoapi/arkouda/segarray/index.rst", "autoapi/arkouda/series/index.rst", "autoapi/arkouda/sorting/index.rst", "autoapi/arkouda/sparrayclass/index.rst", "autoapi/arkouda/sparsematrix/index.rst", "autoapi/arkouda/strings/index.rst", "autoapi/arkouda/testing/index.rst", "autoapi/arkouda/timeclass/index.rst", "autoapi/arkouda/util/index.rst", "autoapi/index.rst", "developer/ADDING_FEATURES.md", "developer/BENCHMARK.md", "developer/GASNET.md", "developer/MEMORY.md", "developer/RELEASE_PROCESS.md", "developer/TIPS.md", "developer/USER_BUGS.md", "developer/dev_menu.rst", "examples.rst", "file_io/CSV.md", "file_io/HDF5.md", "file_io/IMPORT_EXPORT.md", "file_io/PARQUET.md", "file_io/io_menu.rst", "index.rst", "quickstart.rst", "server/index.rst", "setup/BUILD.md", "setup/LINUX_INSTALL.md", "setup/MAC_INSTALL.md", "setup/MODULAR.md", "setup/REQUIREMENTS.md", "setup/WINDOWS_INSTALL.md", "setup/install_menu.rst", "setup/testing.rst", "usage.rst", "usage/IO.rst", "usage/Index.rst", "usage/argsort.rst", "usage/arithmetic.rst", "usage/arrayview.rst", "usage/categorical.rst", "usage/creation.rst", "usage/dataframe.rst", "usage/groupby.rst", "usage/histogram.rst", "usage/indexing.rst", "usage/pdarray.rst", "usage/random.rst", "usage/segarray.rst", "usage/series.rst", "usage/setops.rst", "usage/startup.rst", "usage/strings.rst"], "indexentries": {"a() (arkouda.scipy.stats.chi2 method)": [[45, "arkouda.scipy.stats.chi2.a", false]], "abs() (arkouda.timeclass.timedelta method)": [[54, "arkouda.timeclass.Timedelta.abs", false]], "abs() (arkouda.timedelta method)": [[24, "arkouda.Timedelta.abs", false], [24, "id794", false]], "abs() (in module arkouda)": [[24, "arkouda.abs", false], [86, "arkouda.abs", false]], "abs() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.abs", false]], "abs() (in module arkouda.numeric)": [[33, "arkouda.numeric.abs", false]], "abspath() (arkouda.datasource method)": [[24, "arkouda.DataSource.abspath", false]], "abspath() (arkouda.numpy.datasource method)": [[35, "arkouda.numpy.DataSource.abspath", false]], "acos() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.acos", false]], "acosh() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.acosh", false]], "add() (arkouda.series method)": [[24, "arkouda.Series.add", false]], "add() (arkouda.series.series method)": [[48, "arkouda.series.Series.add", false]], "add() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.add", false]], "add_newdoc() (in module arkouda)": [[24, "arkouda.add_newdoc", false]], "add_newdoc() (in module arkouda.numpy)": [[35, "arkouda.numpy.add_newdoc", false]], "aggregate() (arkouda.groupby method)": [[24, "arkouda.GroupBy.aggregate", false], [24, "id258", false], [24, "id305", false], [24, "id352", false], [24, "id399", false], [24, "id446", false], [91, "arkouda.GroupBy.aggregate", false]], "aggregate() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.aggregate", false]], "aggregate() (arkouda.segarray method)": [[24, "arkouda.SegArray.aggregate", false]], "aggregate() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.aggregate", false]], "akabs() (in module arkouda)": [[24, "arkouda.akabs", false]], "akbool (class in arkouda)": [[24, "arkouda.akbool", false], [24, "id815", false]], "akcast() (in module arkouda)": [[24, "arkouda.akcast", false], [24, "id816", false]], "akfloat64 (class in arkouda)": [[24, "arkouda.akfloat64", false], [24, "id817", false]], "akint64 (class in arkouda)": [[24, "arkouda.akint64", false], [24, "id822", false], [24, "id824", false]], "akuint64 (class in arkouda)": [[24, "arkouda.akuint64", false], [24, "id826", false], [24, "id828", false]], "align() (in module arkouda)": [[24, "arkouda.align", false]], "align() (in module arkouda.alignment)": [[3, "arkouda.alignment.align", false]], "all() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.all", false]], "all() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.all", false], [24, "id124", false]], "all() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.all", false]], "all() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.all", false]], "all() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.all", false]], "all() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.all", false]], "all() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.all", false]], "all() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.all", false]], "all() (arkouda.groupby method)": [[24, "arkouda.GroupBy.all", false], [24, "id259", false], [24, "id306", false], [24, "id353", false], [24, "id400", false], [24, "id447", false], [91, "arkouda.GroupBy.all", false]], "all() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.all", false]], "all() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.all", false]], "all() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.all", false]], "all() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.all", false]], "all() (arkouda.pdarray method)": [[24, "arkouda.pdarray.all", false], [24, "id1067", false], [24, "id1137", false], [24, "id1207", false], [24, "id927", false], [24, "id997", false], [92, "arkouda.pdarray.all", false]], "all() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.all", false]], "all() (arkouda.segarray method)": [[24, "arkouda.SegArray.all", false]], "all() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.all", false]], "all() (arkouda.str_ method)": [[24, "arkouda.str_.all", false], [24, "id1276", false]], "all() (in module arkouda)": [[24, "arkouda.all", false], [86, "arkouda.all", false]], "all() (in module arkouda.array_api.utility_functions)": [[16, "arkouda.array_api.utility_functions.all", false]], "all() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.all", false]], "all_scalars (class in arkouda)": [[24, "arkouda.all_scalars", false]], "all_scalars (class in arkouda.dtypes)": [[21, "arkouda.dtypes.all_scalars", false]], "all_scalars (class in arkouda.numpy)": [[35, "arkouda.numpy.all_scalars", false]], "all_scalars (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.all_scalars", false]], "allsymbols (in module arkouda)": [[24, "arkouda.AllSymbols", false]], "allsymbols (in module arkouda.infoclass)": [[26, "arkouda.infoclass.AllSymbols", false]], "and() (arkouda.groupby method)": [[24, "arkouda.GroupBy.AND", false], [24, "id254", false], [24, "id301", false], [24, "id348", false], [24, "id395", false], [24, "id442", false], [91, "arkouda.GroupBy.AND", false]], "and() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.AND", false]], "and() (arkouda.segarray method)": [[24, "arkouda.SegArray.AND", false]], "and() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.AND", false]], "annotations (class in arkouda.dtypes)": [[21, "arkouda.dtypes.annotations", false]], "annotations (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.annotations", false]], "any() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.any", false]], "any() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.any", false], [24, "id125", false]], "any() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.any", false]], "any() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.any", false]], "any() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.any", false]], "any() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.any", false]], "any() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.any", false]], "any() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.any", false]], "any() (arkouda.groupby method)": [[24, "arkouda.GroupBy.any", false], [24, "id260", false], [24, "id307", false], [24, "id354", false], [24, "id401", false], [24, "id448", false], [91, "arkouda.GroupBy.any", false]], "any() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.any", false]], "any() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.any", false]], "any() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.any", false]], "any() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.any", false]], "any() (arkouda.pdarray method)": [[24, "arkouda.pdarray.any", false], [24, "id1068", false], [24, "id1138", false], [24, "id1208", false], [24, "id928", false], [24, "id998", false], [92, "arkouda.pdarray.any", false]], "any() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.any", false]], "any() (arkouda.segarray method)": [[24, "arkouda.SegArray.any", false]], "any() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.any", false]], "any() (arkouda.str_ method)": [[24, "arkouda.str_.any", false], [24, "id1277", false]], "any() (in module arkouda)": [[24, "arkouda.any", false], [86, "arkouda.any", false]], "any() (in module arkouda.array_api.utility_functions)": [[16, "arkouda.array_api.utility_functions.any", false]], "any() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.any", false]], "append() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.append", false], [24, "id126", false]], "append() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.append", false]], "append() (arkouda.segarray method)": [[24, "arkouda.SegArray.append", false]], "append() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.append", false]], "append() (in module arkouda.segarray)": [[96, "arkouda.SegArray.append", false]], "append_single() (arkouda.segarray method)": [[24, "arkouda.SegArray.append_single", false]], "append_single() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.append_single", false]], "append_single() (in module arkouda.segarray)": [[96, "arkouda.SegArray.append_single", false]], "apply_permutation() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.apply_permutation", false], [24, "id127", false]], "apply_permutation() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.apply_permutation", false]], "apply_permutation() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.apply_permutation", false]], "arange() (in module arkouda)": [[24, "arkouda.arange", false], [24, "id830", false], [24, "id831", false], [24, "id832", false], [24, "id833", false], [24, "id834", false], [89, "arkouda.arange", false]], "arange() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.arange", false]], "arange() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.arange", false]], "arccos() (in module arkouda)": [[24, "arkouda.arccos", false]], "arccos() (in module arkouda.numeric)": [[33, "arkouda.numeric.arccos", false]], "arccosh() (in module arkouda)": [[24, "arkouda.arccosh", false]], "arccosh() (in module arkouda.numeric)": [[33, "arkouda.numeric.arccosh", false]], "arcsin() (in module arkouda)": [[24, "arkouda.arcsin", false]], "arcsin() (in module arkouda.numeric)": [[33, "arkouda.numeric.arcsin", false]], "arcsinh() (in module arkouda)": [[24, "arkouda.arcsinh", false]], "arcsinh() (in module arkouda.numeric)": [[33, "arkouda.numeric.arcsinh", false]], "arctan() (in module arkouda)": [[24, "arkouda.arctan", false]], "arctan() (in module arkouda.numeric)": [[33, "arkouda.numeric.arctan", false]], "arctan2() (in module arkouda)": [[24, "arkouda.arctan2", false]], "arctan2() (in module arkouda.numeric)": [[33, "arkouda.numeric.arctan2", false]], "arctanh() (in module arkouda)": [[24, "arkouda.arctanh", false]], "arctanh() (in module arkouda.numeric)": [[33, "arkouda.numeric.arctanh", false]], "argmax() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.argmax", false]], "argmax() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.argmax", false]], "argmax() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.argmax", false]], "argmax() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.argmax", false]], "argmax() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.argmax", false]], "argmax() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.argmax", false]], "argmax() (arkouda.groupby method)": [[24, "arkouda.GroupBy.argmax", false], [24, "id261", false], [24, "id308", false], [24, "id355", false], [24, "id402", false], [24, "id449", false], [91, "arkouda.GroupBy.argmax", false]], "argmax() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.argmax", false]], "argmax() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.argmax", false]], "argmax() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.argmax", false]], "argmax() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.argmax", false]], "argmax() (arkouda.pdarray method)": [[24, "arkouda.pdarray.argmax", false], [24, "id1069", false], [24, "id1139", false], [24, "id1209", false], [24, "id929", false], [24, "id999", false], [92, "arkouda.pdarray.argmax", false]], "argmax() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.argmax", false]], "argmax() (arkouda.segarray method)": [[24, "arkouda.SegArray.argmax", false]], "argmax() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.argmax", false]], "argmax() (arkouda.series method)": [[24, "arkouda.Series.argmax", false]], "argmax() (arkouda.series.series method)": [[48, "arkouda.series.Series.argmax", false]], "argmax() (arkouda.str_ method)": [[24, "arkouda.str_.argmax", false], [24, "id1278", false]], "argmax() (in module arkouda)": [[24, "arkouda.argmax", false], [86, "arkouda.argmax", false]], "argmax() (in module arkouda.array_api.searching_functions)": [[12, "arkouda.array_api.searching_functions.argmax", false]], "argmax() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.argmax", false]], "argmaxk() (arkouda.pdarray method)": [[24, "arkouda.pdarray.argmaxk", false], [24, "id1000", false], [24, "id1070", false], [24, "id1140", false], [24, "id1210", false], [24, "id930", false], [92, "arkouda.pdarray.argmaxk", false]], "argmaxk() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.argmaxk", false]], "argmaxk() (in module arkouda)": [[24, "arkouda.argmaxk", false], [86, "arkouda.argmaxk", false]], "argmaxk() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.argmaxk", false]], "argmin() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.argmin", false]], "argmin() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.argmin", false]], "argmin() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.argmin", false]], "argmin() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.argmin", false]], "argmin() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.argmin", false]], "argmin() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.argmin", false]], "argmin() (arkouda.groupby method)": [[24, "arkouda.GroupBy.argmin", false], [24, "id262", false], [24, "id309", false], [24, "id356", false], [24, "id403", false], [24, "id450", false], [91, "arkouda.GroupBy.argmin", false]], "argmin() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.argmin", false]], "argmin() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.argmin", false]], "argmin() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.argmin", false]], "argmin() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.argmin", false]], "argmin() (arkouda.pdarray method)": [[24, "arkouda.pdarray.argmin", false], [24, "id1001", false], [24, "id1071", false], [24, "id1141", false], [24, "id1211", false], [24, "id931", false], [92, "arkouda.pdarray.argmin", false]], "argmin() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.argmin", false]], "argmin() (arkouda.segarray method)": [[24, "arkouda.SegArray.argmin", false]], "argmin() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.argmin", false]], "argmin() (arkouda.series method)": [[24, "arkouda.Series.argmin", false]], "argmin() (arkouda.series.series method)": [[48, "arkouda.series.Series.argmin", false]], "argmin() (arkouda.str_ method)": [[24, "arkouda.str_.argmin", false], [24, "id1279", false]], "argmin() (in module arkouda)": [[24, "arkouda.argmin", false], [86, "arkouda.argmin", false]], "argmin() (in module arkouda.array_api.searching_functions)": [[12, "arkouda.array_api.searching_functions.argmin", false]], "argmin() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.argmin", false]], "argmink() (arkouda.pdarray method)": [[24, "arkouda.pdarray.argmink", false], [24, "id1002", false], [24, "id1072", false], [24, "id1142", false], [24, "id1212", false], [24, "id932", false], [92, "arkouda.pdarray.argmink", false]], "argmink() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.argmink", false]], "argmink() (in module arkouda)": [[24, "arkouda.argmink", false], [86, "arkouda.argmink", false]], "argmink() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.argmink", false]], "argsort() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.argsort", false]], "argsort() (arkouda.categorical method)": [[24, "arkouda.Categorical.argsort", false], [24, "id18", false], [24, "id76", false]], "argsort() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.argsort", false]], "argsort() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.argsort", false], [24, "id128", false]], "argsort() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.argsort", false]], "argsort() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.argsort", false]], "argsort() (arkouda.index method)": [[24, "arkouda.Index.argsort", false]], "argsort() (arkouda.index.index method)": [[25, "arkouda.index.Index.argsort", false]], "argsort() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.argsort", false]], "argsort() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.argsort", false]], "argsort() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.argsort", false]], "argsort() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.argsort", false]], "argsort() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.argsort", false]], "argsort() (arkouda.str_ method)": [[24, "arkouda.str_.argsort", false], [24, "id1280", false]], "argsort() (in module arkouda)": [[24, "arkouda.argsort", false], [24, "id835", false], [24, "id836", false], [85, "arkouda.argsort", false]], "argsort() (in module arkouda.array_api.sorting_functions)": [[14, "arkouda.array_api.sorting_functions.argsort", false]], "argsort() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.argsort", false]], "argsort() (in module arkouda.index)": [[84, "arkouda.Index.argsort", false]], "argsort() (in module arkouda.multiindex)": [[84, "arkouda.MultiIndex.argsort", false]], "argsort() (in module arkouda.sorting)": [[49, "arkouda.sorting.argsort", false]], "arkouda": [[24, "module-arkouda", false]], "arkouda.accessor": [[2, "module-arkouda.accessor", false]], "arkouda.alignment": [[3, "module-arkouda.alignment", false]], "arkouda.array_api": [[8, "module-arkouda.array_api", false]], "arkouda.array_api.array_object": [[4, "module-arkouda.array_api.array_object", false]], "arkouda.array_api.creation_functions": [[5, "module-arkouda.array_api.creation_functions", false]], "arkouda.array_api.data_type_functions": [[6, "module-arkouda.array_api.data_type_functions", false]], "arkouda.array_api.elementwise_functions": [[7, "module-arkouda.array_api.elementwise_functions", false]], "arkouda.array_api.indexing_functions": [[9, "module-arkouda.array_api.indexing_functions", false]], "arkouda.array_api.linalg": [[10, "module-arkouda.array_api.linalg", false]], "arkouda.array_api.manipulation_functions": [[11, "module-arkouda.array_api.manipulation_functions", false]], "arkouda.array_api.searching_functions": [[12, "module-arkouda.array_api.searching_functions", false]], "arkouda.array_api.set_functions": [[13, "module-arkouda.array_api.set_functions", false]], "arkouda.array_api.sorting_functions": [[14, "module-arkouda.array_api.sorting_functions", false]], "arkouda.array_api.statistical_functions": [[15, "module-arkouda.array_api.statistical_functions", false]], "arkouda.array_api.utility_functions": [[16, "module-arkouda.array_api.utility_functions", false]], "arkouda.categorical": [[17, "module-arkouda.categorical", false]], "arkouda.client": [[18, "module-arkouda.client", false]], "arkouda.client_dtypes": [[19, "module-arkouda.client_dtypes", false]], "arkouda.dataframe": [[20, "module-arkouda.dataframe", false]], "arkouda.dtypes": [[21, "module-arkouda.dtypes", false]], "arkouda.groupbyclass": [[22, "module-arkouda.groupbyclass", false]], "arkouda.history": [[23, "module-arkouda.history", false]], "arkouda.index": [[25, "module-arkouda.index", false]], "arkouda.infoclass": [[26, "module-arkouda.infoclass", false]], "arkouda.io": [[27, "module-arkouda.io", false]], "arkouda.io_util": [[28, "module-arkouda.io_util", false]], "arkouda.join": [[29, "module-arkouda.join", false]], "arkouda.logger": [[30, "module-arkouda.logger", false]], "arkouda.match": [[31, "module-arkouda.match", false]], "arkouda.matcher": [[32, "module-arkouda.matcher", false]], "arkouda.numeric": [[33, "module-arkouda.numeric", false]], "arkouda.numpy": [[35, "module-arkouda.numpy", false]], "arkouda.numpy.dtypes": [[34, "module-arkouda.numpy.dtypes", false]], "arkouda.pdarrayclass": [[36, "module-arkouda.pdarrayclass", false]], "arkouda.pdarraycreation": [[37, "module-arkouda.pdarraycreation", false]], "arkouda.pdarraymanipulation": [[38, "module-arkouda.pdarraymanipulation", false]], "arkouda.pdarraysetops": [[39, "module-arkouda.pdarraysetops", false]], "arkouda.plotting": [[40, "module-arkouda.plotting", false]], "arkouda.random": [[41, "module-arkouda.random", false]], "arkouda.row": [[42, "module-arkouda.row", false]], "arkouda.scipy": [[43, "module-arkouda.scipy", false]], "arkouda.scipy.special": [[44, "module-arkouda.scipy.special", false]], "arkouda.scipy.stats": [[45, "module-arkouda.scipy.stats", false]], "arkouda.security": [[46, "module-arkouda.security", false]], "arkouda.segarray": [[47, "module-arkouda.segarray", false]], "arkouda.series": [[48, "module-arkouda.series", false]], "arkouda.sorting": [[49, "module-arkouda.sorting", false]], "arkouda.sparrayclass": [[50, "module-arkouda.sparrayclass", false]], "arkouda.sparsematrix": [[51, "module-arkouda.sparsematrix", false]], "arkouda.strings": [[52, "module-arkouda.strings", false]], "arkouda.testing": [[53, "module-arkouda.testing", false]], "arkouda.timeclass": [[54, "module-arkouda.timeclass", false]], "arkouda.util": [[55, "module-arkouda.util", false]], "arkouda_supported_dtypes (class in arkouda)": [[24, "arkouda.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (class in arkouda.dtypes)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (class in arkouda.numpy)": [[35, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_floats (class in arkouda.dtypes)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_FLOATS", false]], "arkouda_supported_floats (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS", false]], "arkouda_supported_ints (class in arkouda.dtypes)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_ints (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_numbers (class in arkouda.dtypes)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_NUMBERS", false]], "arkouda_supported_numbers (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS", false]], "array (class in arkouda.array_api)": [[8, "arkouda.array_api.Array", false]], "array (class in arkouda.array_api.array_object)": [[4, "arkouda.array_api.array_object.Array", false]], "array() (in module arkouda)": [[24, "arkouda.array", false], [24, "id837", false], [24, "id838", false], [24, "id839", false], [83, "arkouda.array", false]], "array() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.array", false]], "array_equal() (in module arkouda)": [[24, "arkouda.array_equal", false]], "array_equal() (in module arkouda.numeric)": [[33, "arkouda.numeric.array_equal", false]], "as_index (arkouda.dataframe.dataframegroupby attribute)": [[20, "arkouda.dataframe.DataFrameGroupBy.as_index", false]], "as_index (arkouda.dataframegroupby attribute)": [[24, "arkouda.DataFrameGroupBy.as_index", false]], "as_integer_ratio() (arkouda.akfloat64 method)": [[24, "arkouda.akfloat64.as_integer_ratio", false], [24, "id818", false]], "as_integer_ratio() (arkouda.double method)": [[24, "arkouda.double.as_integer_ratio", false]], "as_integer_ratio() (arkouda.dtypes.float16 method)": [[21, "arkouda.dtypes.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.dtypes.float32 method)": [[21, "arkouda.dtypes.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.dtypes.float64 method)": [[21, "arkouda.dtypes.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float16 method)": [[24, "arkouda.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float32 method)": [[24, "arkouda.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float64 method)": [[24, "arkouda.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float_ method)": [[24, "arkouda.float_.as_integer_ratio", false]], "as_integer_ratio() (arkouda.half method)": [[24, "arkouda.half.as_integer_ratio", false]], "as_integer_ratio() (arkouda.longdouble method)": [[24, "arkouda.longdouble.as_integer_ratio", false]], "as_integer_ratio() (arkouda.longfloat method)": [[24, "arkouda.longfloat.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.double method)": [[35, "arkouda.numpy.double.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.dtypes.float16 method)": [[34, "arkouda.numpy.dtypes.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.dtypes.float32 method)": [[34, "arkouda.numpy.dtypes.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.dtypes.float64 method)": [[34, "arkouda.numpy.dtypes.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float16 method)": [[35, "arkouda.numpy.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float32 method)": [[35, "arkouda.numpy.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float64 method)": [[35, "arkouda.numpy.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float_ method)": [[35, "arkouda.numpy.float_.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.half method)": [[35, "arkouda.numpy.half.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.longdouble method)": [[35, "arkouda.numpy.longdouble.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.longfloat method)": [[35, "arkouda.numpy.longfloat.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.single method)": [[35, "arkouda.numpy.single.as_integer_ratio", false]], "as_integer_ratio() (arkouda.single method)": [[24, "arkouda.single.as_integer_ratio", false]], "asarray() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.asarray", false]], "asin() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.asin", false]], "asinh() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.asinh", false]], "assert_almost_equal() (in module arkouda)": [[24, "arkouda.assert_almost_equal", false]], "assert_almost_equal() (in module arkouda.testing)": [[53, "arkouda.testing.assert_almost_equal", false]], "assert_almost_equivalent() (in module arkouda)": [[24, "arkouda.assert_almost_equivalent", false]], "assert_almost_equivalent() (in module arkouda.testing)": [[53, "arkouda.testing.assert_almost_equivalent", false]], "assert_arkouda_array_equal() (in module arkouda)": [[24, "arkouda.assert_arkouda_array_equal", false]], "assert_arkouda_array_equal() (in module arkouda.testing)": [[53, "arkouda.testing.assert_arkouda_array_equal", false]], "assert_arkouda_array_equivalent() (in module arkouda)": [[24, "arkouda.assert_arkouda_array_equivalent", false]], "assert_arkouda_array_equivalent() (in module arkouda.testing)": [[53, "arkouda.testing.assert_arkouda_array_equivalent", false]], "assert_arkouda_pdarray_equal() (in module arkouda)": [[24, "arkouda.assert_arkouda_pdarray_equal", false]], "assert_arkouda_pdarray_equal() (in module arkouda.testing)": [[53, "arkouda.testing.assert_arkouda_pdarray_equal", false]], "assert_arkouda_segarray_equal() (in module arkouda)": [[24, "arkouda.assert_arkouda_segarray_equal", false]], "assert_arkouda_segarray_equal() (in module arkouda.testing)": [[53, "arkouda.testing.assert_arkouda_segarray_equal", false]], "assert_arkouda_strings_equal() (in module arkouda)": [[24, "arkouda.assert_arkouda_strings_equal", false]], "assert_arkouda_strings_equal() (in module arkouda.testing)": [[53, "arkouda.testing.assert_arkouda_strings_equal", false]], "assert_attr_equal() (in module arkouda)": [[24, "arkouda.assert_attr_equal", false]], "assert_attr_equal() (in module arkouda.testing)": [[53, "arkouda.testing.assert_attr_equal", false]], "assert_categorical_equal() (in module arkouda)": [[24, "arkouda.assert_categorical_equal", false]], "assert_categorical_equal() (in module arkouda.testing)": [[53, "arkouda.testing.assert_categorical_equal", false]], "assert_class_equal() (in module arkouda)": [[24, "arkouda.assert_class_equal", false]], "assert_class_equal() (in module arkouda.testing)": [[53, "arkouda.testing.assert_class_equal", false]], "assert_contains_all() (in module arkouda)": [[24, "arkouda.assert_contains_all", false]], "assert_contains_all() (in module arkouda.testing)": [[53, "arkouda.testing.assert_contains_all", false]], "assert_copy() (in module arkouda)": [[24, "arkouda.assert_copy", false]], "assert_copy() (in module arkouda.testing)": [[53, "arkouda.testing.assert_copy", false]], "assert_dict_equal() (in module arkouda)": [[24, "arkouda.assert_dict_equal", false]], "assert_dict_equal() (in module arkouda.testing)": [[53, "arkouda.testing.assert_dict_equal", false]], "assert_equal() (in module arkouda)": [[24, "arkouda.assert_equal", false]], "assert_equal() (in module arkouda.testing)": [[53, "arkouda.testing.assert_equal", false]], "assert_equivalent() (in module arkouda)": [[24, "arkouda.assert_equivalent", false]], "assert_equivalent() (in module arkouda.testing)": [[53, "arkouda.testing.assert_equivalent", false]], "assert_frame_equal() (in module arkouda)": [[24, "arkouda.assert_frame_equal", false]], "assert_frame_equal() (in module arkouda.testing)": [[53, "arkouda.testing.assert_frame_equal", false]], "assert_frame_equivalent() (in module arkouda)": [[24, "arkouda.assert_frame_equivalent", false]], "assert_frame_equivalent() (in module arkouda.testing)": [[53, "arkouda.testing.assert_frame_equivalent", false]], "assert_index_equal() (in module arkouda)": [[24, "arkouda.assert_index_equal", false]], "assert_index_equal() (in module arkouda.testing)": [[53, "arkouda.testing.assert_index_equal", false]], "assert_index_equivalent() (in module arkouda)": [[24, "arkouda.assert_index_equivalent", false]], "assert_index_equivalent() (in module arkouda.testing)": [[53, "arkouda.testing.assert_index_equivalent", false]], "assert_is_sorted() (in module arkouda)": [[24, "arkouda.assert_is_sorted", false]], "assert_is_sorted() (in module arkouda.testing)": [[53, "arkouda.testing.assert_is_sorted", false]], "assert_series_equal() (in module arkouda)": [[24, "arkouda.assert_series_equal", false]], "assert_series_equal() (in module arkouda.testing)": [[53, "arkouda.testing.assert_series_equal", false]], "assert_series_equivalent() (in module arkouda)": [[24, "arkouda.assert_series_equivalent", false]], "assert_series_equivalent() (in module arkouda.testing)": [[53, "arkouda.testing.assert_series_equivalent", false]], "assign() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.assign", false], [24, "id129", false]], "assign() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.assign", false]], "astype() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.astype", false]], "astype() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.astype", false]], "astype() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.astype", false]], "astype() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.astype", false]], "astype() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.astype", false]], "astype() (arkouda.pdarray method)": [[24, "arkouda.pdarray.astype", false], [24, "id1003", false], [24, "id1073", false], [24, "id1143", false], [24, "id1213", false], [24, "id933", false]], "astype() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.astype", false]], "astype() (arkouda.str_ method)": [[24, "arkouda.str_.astype", false], [24, "id1281", false]], "astype() (arkouda.strings method)": [[24, "arkouda.Strings.astype", false], [24, "id502", false], [24, "id577", false], [24, "id652", false], [24, "id727", false]], "astype() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.astype", false]], "astype() (in module arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.astype", false]], "at (arkouda.series property)": [[24, "arkouda.Series.at", false]], "at (arkouda.series.series property)": [[48, "arkouda.series.Series.at", false]], "atan() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.atan", false]], "atan2() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.atan2", false]], "atanh() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.atanh", false]], "attach() (arkouda.categorical static method)": [[24, "arkouda.Categorical.attach", false], [24, "id19", false], [24, "id77", false]], "attach() (arkouda.categorical.categorical static method)": [[17, "arkouda.categorical.Categorical.attach", false]], "attach() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.attach", false], [24, "id130", false]], "attach() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.attach", false]], "attach() (arkouda.groupby method)": [[24, "arkouda.GroupBy.attach", false], [24, "id263", false], [24, "id310", false], [24, "id357", false], [24, "id404", false], [24, "id451", false]], "attach() (arkouda.groupby static method)": [[91, "arkouda.GroupBy.attach", false]], "attach() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.attach", false]], "attach() (arkouda.pdarray static method)": [[24, "arkouda.pdarray.attach", false], [24, "id1004", false], [24, "id1074", false], [24, "id1144", false], [24, "id1214", false], [24, "id934", false]], "attach() (arkouda.pdarrayclass.pdarray static method)": [[36, "arkouda.pdarrayclass.pdarray.attach", false]], "attach() (arkouda.segarray class method)": [[24, "arkouda.SegArray.attach", false]], "attach() (arkouda.segarray.segarray class method)": [[47, "arkouda.segarray.SegArray.attach", false]], "attach() (arkouda.series method)": [[24, "arkouda.Series.attach", false]], "attach() (arkouda.series.series method)": [[48, "arkouda.series.Series.attach", false]], "attach() (arkouda.strings static method)": [[24, "arkouda.Strings.attach", false], [24, "id503", false], [24, "id578", false], [24, "id653", false], [24, "id728", false]], "attach() (arkouda.strings.strings static method)": [[52, "arkouda.strings.Strings.attach", false]], "attach() (in module arkouda)": [[24, "arkouda.attach", false]], "attach() (in module arkouda.util)": [[55, "arkouda.util.attach", false]], "attach_all() (in module arkouda)": [[24, "arkouda.attach_all", false]], "attach_all() (in module arkouda.util)": [[55, "arkouda.util.attach_all", false]], "attach_pdarray() (in module arkouda)": [[24, "arkouda.attach_pdarray", false]], "attach_pdarray() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.attach_pdarray", false]], "b() (arkouda.scipy.stats.chi2 method)": [[45, "arkouda.scipy.stats.chi2.b", false]], "badvalue() (arkouda.scipy.stats.chi2 method)": [[45, "arkouda.scipy.stats.chi2.badvalue", false]], "base() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.base", false]], "base() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.base", false]], "base() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.base", false]], "base() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.base", false]], "base() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.base", false]], "base() (arkouda.str_ method)": [[24, "arkouda.str_.base", false], [24, "id1282", false]], "base_repr() (in module arkouda)": [[24, "arkouda.base_repr", false]], "base_repr() (in module arkouda.numpy)": [[35, "arkouda.numpy.base_repr", false]], "bigint (class in arkouda)": [[24, "arkouda.bigint", false], [24, "id840", false]], "bigint (class in arkouda.dtypes)": [[21, "arkouda.dtypes.bigint", false]], "bigint (class in arkouda.numpy)": [[35, "arkouda.numpy.bigint", false]], "bigint (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.bigint", false]], "bigint() (arkouda.dtype method)": [[24, "arkouda.DType.BIGINT", false]], "bigint() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.BIGINT", false]], "bigint() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.BIGINT", false]], "bigint() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.BIGINT", false]], "bigint_from_uint_arrays() (in module arkouda)": [[24, "arkouda.bigint_from_uint_arrays", false]], "bigint_from_uint_arrays() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.bigint_from_uint_arrays", false]], "bigint_to_uint_arrays() (arkouda.pdarray method)": [[24, "arkouda.pdarray.bigint_to_uint_arrays", false], [24, "id1005", false], [24, "id1075", false], [24, "id1145", false], [24, "id1215", false], [24, "id935", false]], "bigint_to_uint_arrays() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.bigint_to_uint_arrays", false]], "binary_repr() (in module arkouda)": [[24, "arkouda.binary_repr", false]], "binary_repr() (in module arkouda.numpy)": [[35, "arkouda.numpy.binary_repr", false]], "binops (arkouda.categorical attribute)": [[24, "arkouda.Categorical.BinOps", false], [24, "id15", false], [24, "id73", false]], "binops (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.BinOps", false]], "binops (arkouda.pdarray attribute)": [[24, "arkouda.pdarray.BinOps", false], [24, "id1065", false], [24, "id1135", false], [24, "id1205", false], [24, "id925", false], [24, "id995", false]], "binops (arkouda.pdarrayclass.pdarray attribute)": [[36, "arkouda.pdarrayclass.pdarray.BinOps", false]], "binops (arkouda.strings attribute)": [[24, "arkouda.Strings.BinOps", false], [24, "id501", false], [24, "id576", false], [24, "id651", false], [24, "id726", false]], "binops (arkouda.strings.strings attribute)": [[52, "arkouda.strings.Strings.BinOps", false]], "bit_count() (arkouda.akint64 method)": [[24, "arkouda.akint64.bit_count", false], [24, "id823", false], [24, "id825", false]], "bit_count() (arkouda.akuint64 method)": [[24, "arkouda.akuint64.bit_count", false], [24, "id827", false], [24, "id829", false]], "bit_count() (arkouda.bittype method)": [[24, "arkouda.bitType.bit_count", false], [24, "id849", false]], "bit_count() (arkouda.byte method)": [[24, "arkouda.byte.bit_count", false]], "bit_count() (arkouda.dtypes.bittype method)": [[21, "arkouda.dtypes.bitType.bit_count", false]], "bit_count() (arkouda.dtypes.int16 method)": [[21, "arkouda.dtypes.int16.bit_count", false]], "bit_count() (arkouda.dtypes.int32 method)": [[21, "arkouda.dtypes.int32.bit_count", false]], "bit_count() (arkouda.dtypes.int64 method)": [[21, "arkouda.dtypes.int64.bit_count", false]], "bit_count() (arkouda.dtypes.int8 method)": [[21, "arkouda.dtypes.int8.bit_count", false]], "bit_count() (arkouda.dtypes.uint16 method)": [[21, "arkouda.dtypes.uint16.bit_count", false]], "bit_count() (arkouda.dtypes.uint32 method)": [[21, "arkouda.dtypes.uint32.bit_count", false]], "bit_count() (arkouda.dtypes.uint64 method)": [[21, "arkouda.dtypes.uint64.bit_count", false]], "bit_count() (arkouda.dtypes.uint8 method)": [[21, "arkouda.dtypes.uint8.bit_count", false]], "bit_count() (arkouda.int16 method)": [[24, "arkouda.int16.bit_count", false]], "bit_count() (arkouda.int32 method)": [[24, "arkouda.int32.bit_count", false]], "bit_count() (arkouda.int64 method)": [[24, "arkouda.int64.bit_count", false], [24, "id881", false]], "bit_count() (arkouda.int8 method)": [[24, "arkouda.int8.bit_count", false]], "bit_count() (arkouda.int_ method)": [[24, "arkouda.int_.bit_count", false]], "bit_count() (arkouda.intc method)": [[24, "arkouda.intc.bit_count", false]], "bit_count() (arkouda.intp method)": [[24, "arkouda.intp.bit_count", false]], "bit_count() (arkouda.longlong method)": [[24, "arkouda.longlong.bit_count", false]], "bit_count() (arkouda.numpy.bittype method)": [[35, "arkouda.numpy.bitType.bit_count", false]], "bit_count() (arkouda.numpy.byte method)": [[35, "arkouda.numpy.byte.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.bittype method)": [[34, "arkouda.numpy.dtypes.bitType.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int16 method)": [[34, "arkouda.numpy.dtypes.int16.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int32 method)": [[34, "arkouda.numpy.dtypes.int32.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int64 method)": [[34, "arkouda.numpy.dtypes.int64.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int8 method)": [[34, "arkouda.numpy.dtypes.int8.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint16 method)": [[34, "arkouda.numpy.dtypes.uint16.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint32 method)": [[34, "arkouda.numpy.dtypes.uint32.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint64 method)": [[34, "arkouda.numpy.dtypes.uint64.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint8 method)": [[34, "arkouda.numpy.dtypes.uint8.bit_count", false]], "bit_count() (arkouda.numpy.int16 method)": [[35, "arkouda.numpy.int16.bit_count", false]], "bit_count() (arkouda.numpy.int32 method)": [[35, "arkouda.numpy.int32.bit_count", false]], "bit_count() (arkouda.numpy.int64 method)": [[35, "arkouda.numpy.int64.bit_count", false]], "bit_count() (arkouda.numpy.int8 method)": [[35, "arkouda.numpy.int8.bit_count", false]], "bit_count() (arkouda.numpy.int_ method)": [[35, "arkouda.numpy.int_.bit_count", false]], "bit_count() (arkouda.numpy.intc method)": [[35, "arkouda.numpy.intc.bit_count", false]], "bit_count() (arkouda.numpy.intp method)": [[35, "arkouda.numpy.intp.bit_count", false]], "bit_count() (arkouda.numpy.longlong method)": [[35, "arkouda.numpy.longlong.bit_count", false]], "bit_count() (arkouda.numpy.short method)": [[35, "arkouda.numpy.short.bit_count", false]], "bit_count() (arkouda.numpy.ubyte method)": [[35, "arkouda.numpy.ubyte.bit_count", false]], "bit_count() (arkouda.numpy.uint method)": [[35, "arkouda.numpy.uint.bit_count", false]], "bit_count() (arkouda.numpy.uint16 method)": [[35, "arkouda.numpy.uint16.bit_count", false]], "bit_count() (arkouda.numpy.uint32 method)": [[35, "arkouda.numpy.uint32.bit_count", false]], "bit_count() (arkouda.numpy.uint64 method)": [[35, "arkouda.numpy.uint64.bit_count", false]], "bit_count() (arkouda.numpy.uint8 method)": [[35, "arkouda.numpy.uint8.bit_count", false]], "bit_count() (arkouda.numpy.uintc method)": [[35, "arkouda.numpy.uintc.bit_count", false]], "bit_count() (arkouda.numpy.uintp method)": [[35, "arkouda.numpy.uintp.bit_count", false]], "bit_count() (arkouda.numpy.ulonglong method)": [[35, "arkouda.numpy.ulonglong.bit_count", false]], "bit_count() (arkouda.numpy.ushort method)": [[35, "arkouda.numpy.ushort.bit_count", false]], "bit_count() (arkouda.short method)": [[24, "arkouda.short.bit_count", false]], "bit_count() (arkouda.ubyte method)": [[24, "arkouda.ubyte.bit_count", false]], "bit_count() (arkouda.uint method)": [[24, "arkouda.uint.bit_count", false]], "bit_count() (arkouda.uint16 method)": [[24, "arkouda.uint16.bit_count", false]], "bit_count() (arkouda.uint32 method)": [[24, "arkouda.uint32.bit_count", false]], "bit_count() (arkouda.uint64 method)": [[24, "arkouda.uint64.bit_count", false]], "bit_count() (arkouda.uint8 method)": [[24, "arkouda.uint8.bit_count", false]], "bit_count() (arkouda.uintc method)": [[24, "arkouda.uintc.bit_count", false]], "bit_count() (arkouda.uintp method)": [[24, "arkouda.uintp.bit_count", false]], "bit_count() (arkouda.ulonglong method)": [[24, "arkouda.ulonglong.bit_count", false]], "bit_count() (arkouda.ushort method)": [[24, "arkouda.ushort.bit_count", false]], "bits (arkouda.array_api.data_type_functions.finfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.finfo_object.bits", false]], "bits (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.iinfo_object.bits", false]], "bits (arkouda.finfo attribute)": [[24, "arkouda.finfo.bits", false]], "bits (arkouda.iinfo attribute)": [[24, "arkouda.iinfo.bits", false]], "bits (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.bits", false]], "bits (arkouda.numpy.iinfo attribute)": [[35, "arkouda.numpy.iinfo.bits", false]], "bittype (class in arkouda)": [[24, "arkouda.bitType", false], [24, "id848", false]], "bittype (class in arkouda.dtypes)": [[21, "arkouda.dtypes.bitType", false]], "bittype (class in arkouda.numpy)": [[35, "arkouda.numpy.bitType", false]], "bittype (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.bitType", false]], "bitvector (class in arkouda)": [[24, "arkouda.BitVector", false]], "bitvector (class in arkouda.client_dtypes)": [[19, "arkouda.client_dtypes.BitVector", false]], "bitvectorizer() (in module arkouda)": [[24, "arkouda.BitVectorizer", false]], "bitvectorizer() (in module arkouda.client_dtypes)": [[19, "arkouda.client_dtypes.BitVectorizer", false]], "bitwise_and() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.bitwise_and", false]], "bitwise_invert() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.bitwise_invert", false]], "bitwise_left_shift() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.bitwise_left_shift", false]], "bitwise_or() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.bitwise_or", false]], "bitwise_right_shift() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.bitwise_right_shift", false]], "bitwise_xor() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.bitwise_xor", false]], "bool() (arkouda.dtype method)": [[24, "arkouda.DType.BOOL", false]], "bool() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.BOOL", false]], "bool() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.BOOL", false]], "bool() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.BOOL", false]], "bool_ (class in arkouda)": [[24, "arkouda.bool_", false]], "bool_ (class in arkouda.dtypes)": [[21, "arkouda.dtypes.bool_", false]], "bool_ (class in arkouda.numpy)": [[35, "arkouda.numpy.bool_", false]], "bool_ (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.bool_", false]], "bool_scalars (class in arkouda)": [[24, "arkouda.bool_scalars", false]], "bool_scalars (class in arkouda.dtypes)": [[21, "arkouda.dtypes.bool_scalars", false]], "bool_scalars (class in arkouda.numpy)": [[35, "arkouda.numpy.bool_scalars", false]], "bool_scalars (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.bool_scalars", false]], "booldtype (class in arkouda)": [[24, "arkouda.BoolDType", false]], "booldtype (class in arkouda.numpy)": [[35, "arkouda.numpy.BoolDType", false]], "broadcast() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.broadcast", false]], "broadcast() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.broadcast", false]], "broadcast() (arkouda.groupby method)": [[24, "arkouda.GroupBy.broadcast", false], [24, "id264", false], [24, "id311", false], [24, "id358", false], [24, "id405", false], [24, "id452", false], [91, "arkouda.GroupBy.broadcast", false]], "broadcast() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.broadcast", false]], "broadcast() (in module arkouda)": [[24, "arkouda.broadcast", false], [24, "id850", false], [24, "id851", false], [24, "id852", false]], "broadcast() (in module arkouda.groupbyclass)": [[22, "arkouda.groupbyclass.broadcast", false]], "broadcast_arrays() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.broadcast_arrays", false]], "broadcast_dims() (in module arkouda)": [[24, "arkouda.broadcast_dims", false]], "broadcast_dims() (in module arkouda.util)": [[55, "arkouda.util.broadcast_dims", false]], "broadcast_to() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.broadcast_to", false]], "broadcast_to_shape() (in module arkouda)": [[24, "arkouda.broadcast_to_shape", false]], "broadcast_to_shape() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.broadcast_to_shape", false]], "build_from_components() (arkouda.groupby method)": [[24, "arkouda.GroupBy.build_from_components", false], [24, "id265", false], [24, "id312", false], [24, "id359", false], [24, "id406", false], [24, "id453", false]], "build_from_components() (arkouda.groupby static method)": [[91, "arkouda.GroupBy.build_from_components", false]], "build_from_components() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.build_from_components", false]], "byte (class in arkouda)": [[24, "arkouda.byte", false]], "byte (class in arkouda.numpy)": [[35, "arkouda.numpy.byte", false]], "bytedtype (class in arkouda)": [[24, "arkouda.ByteDType", false]], "bytedtype (class in arkouda.numpy)": [[35, "arkouda.numpy.ByteDType", false]], "bytes_ (class in arkouda)": [[24, "arkouda.bytes_", false]], "bytes_ (class in arkouda.numpy)": [[35, "arkouda.numpy.bytes_", false]], "bytesdtype (class in arkouda)": [[24, "arkouda.BytesDType", false]], "bytesdtype (class in arkouda.numpy)": [[35, "arkouda.numpy.BytesDType", false]], "byteswap() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.byteswap", false]], "byteswap() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.byteswap", false]], "byteswap() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.byteswap", false]], "byteswap() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.byteswap", false]], "byteswap() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.byteswap", false]], "byteswap() (arkouda.str_ method)": [[24, "arkouda.str_.byteswap", false], [24, "id1283", false]], "cached_regex_patterns() (arkouda.strings method)": [[24, "arkouda.Strings.cached_regex_patterns", false], [24, "id504", false], [24, "id579", false], [24, "id654", false], [24, "id729", false]], "cached_regex_patterns() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.cached_regex_patterns", false]], "cachedaccessor (class in arkouda)": [[24, "arkouda.CachedAccessor", false]], "cachedaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.CachedAccessor", false]], "can_cast() (in module arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.can_cast", false]], "capitalize() (arkouda.strings method)": [[24, "arkouda.Strings.capitalize", false], [24, "id505", false], [24, "id580", false], [24, "id655", false], [24, "id730", false]], "capitalize() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.capitalize", false]], "cast() (in module arkouda)": [[24, "arkouda.cast", false], [24, "id853", false], [94, "arkouda.cast", false]], "cast() (in module arkouda.dtypes)": [[21, "arkouda.dtypes.cast", false]], "cast() (in module arkouda.numeric)": [[33, "arkouda.numeric.cast", false]], "cast() (in module arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.cast", false]], "categorical (class in arkouda)": [[24, "arkouda.Categorical", false], [24, "id6", false], [24, "id64", false], [88, "arkouda.Categorical", false]], "categorical (class in arkouda.categorical)": [[17, "arkouda.categorical.Categorical", false]], "categories (arkouda.categorical attribute)": [[24, "arkouda.Categorical.categories", false], [24, "id65", false], [24, "id7", false], [88, "arkouda.Categorical.categories", false]], "categories (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.categories", false]], "cdouble (class in arkouda)": [[24, "arkouda.cdouble", false]], "cdouble (class in arkouda.numpy)": [[35, "arkouda.numpy.cdouble", false]], "ceil() (in module arkouda)": [[24, "arkouda.ceil", false]], "ceil() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.ceil", false]], "ceil() (in module arkouda.numeric)": [[33, "arkouda.numeric.ceil", false]], "cfloat (class in arkouda)": [[24, "arkouda.cfloat", false]], "cfloat (class in arkouda.numpy)": [[35, "arkouda.numpy.cfloat", false]], "character (class in arkouda)": [[24, "arkouda.character", false]], "character (class in arkouda.numpy)": [[35, "arkouda.numpy.character", false]], "chi2 (class in arkouda.scipy.stats)": [[45, "arkouda.scipy.stats.chi2", false]], "chisquare() (in module arkouda)": [[24, "arkouda.chisquare", false]], "chisquare() (in module arkouda.scipy)": [[43, "arkouda.scipy.chisquare", false]], "choice() (arkouda.generator method)": [[24, "arkouda.Generator.choice", false]], "choice() (arkouda.random.generator method)": [[41, "arkouda.random.Generator.choice", false]], "choice() (in module arkouda.random.generator)": [[95, "arkouda.random.Generator.choice", false]], "choose() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.choose", false]], "choose() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.choose", false]], "choose() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.choose", false]], "choose() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.choose", false]], "choose() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.choose", false]], "choose() (arkouda.str_ method)": [[24, "arkouda.str_.choose", false], [24, "id1284", false]], "chunk_info() (arkouda.array_api.array method)": [[8, "arkouda.array_api.Array.chunk_info", false]], "chunk_info() (arkouda.array_api.array_object.array method)": [[4, "arkouda.array_api.array_object.Array.chunk_info", false]], "clear() (arkouda.dtypes.number_format_strings method)": [[21, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.dtypes.seriesdtypes method)": [[21, "arkouda.dtypes.SeriesDTypes.clear", false]], "clear() (arkouda.number_format_strings method)": [[24, "arkouda.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.numpy.dtypes.number_format_strings method)": [[34, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.numpy.dtypes.seriesdtypes method)": [[34, "arkouda.numpy.dtypes.SeriesDTypes.clear", false]], "clear() (arkouda.numpy.number_format_strings method)": [[35, "arkouda.numpy.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.numpy.sctypedict method)": [[35, "arkouda.numpy.sctypeDict.clear", false]], "clear() (arkouda.numpy.sctypes method)": [[35, "arkouda.numpy.sctypes.clear", false]], "clear() (arkouda.numpy.seriesdtypes method)": [[35, "arkouda.numpy.SeriesDTypes.clear", false]], "clear() (arkouda.sctypedict method)": [[24, "arkouda.sctypeDict.clear", false]], "clear() (arkouda.sctypes method)": [[24, "arkouda.sctypes.clear", false]], "clear() (arkouda.seriesdtypes method)": [[24, "arkouda.SeriesDTypes.clear", false]], "clear() (in module arkouda)": [[24, "arkouda.clear", false]], "clear() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.clear", false]], "clip() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.clip", false]], "clip() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.clip", false]], "clip() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.clip", false]], "clip() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.clip", false]], "clip() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.clip", false]], "clip() (arkouda.str_ method)": [[24, "arkouda.str_.clip", false], [24, "id1285", false]], "clip() (in module arkouda)": [[24, "arkouda.clip", false]], "clip() (in module arkouda.array_api.utility_functions)": [[16, "arkouda.array_api.utility_functions.clip", false]], "clip() (in module arkouda.numeric)": [[33, "arkouda.numeric.clip", false]], "clongdouble (class in arkouda)": [[24, "arkouda.clongdouble", false]], "clongdouble (class in arkouda.numpy)": [[35, "arkouda.numpy.clongdouble", false]], "clongdoubledtype (class in arkouda)": [[24, "arkouda.CLongDoubleDType", false]], "clongdoubledtype (class in arkouda.numpy)": [[35, "arkouda.numpy.CLongDoubleDType", false]], "clongfloat (class in arkouda)": [[24, "arkouda.clongfloat", false]], "clongfloat (class in arkouda.numpy)": [[35, "arkouda.numpy.clongfloat", false]], "clz() (arkouda.pdarray method)": [[24, "arkouda.pdarray.clz", false], [24, "id1006", false], [24, "id1076", false], [24, "id1146", false], [24, "id1216", false], [24, "id936", false]], "clz() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.clz", false]], "clz() (in module arkouda)": [[24, "arkouda.clz", false]], "clz() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.clz", false]], "coargsort() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.coargsort", false], [24, "id131", false]], "coargsort() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.coargsort", false]], "coargsort() (in module arkouda)": [[24, "arkouda.coargsort", false], [24, "id854", false], [24, "id855", false], [85, "arkouda.coargsort", false]], "coargsort() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.coargsort", false]], "coargsort() (in module arkouda.sorting)": [[49, "arkouda.sorting.coargsort", false]], "codes (arkouda.categorical attribute)": [[24, "arkouda.Categorical.codes", false], [24, "id66", false], [24, "id8", false], [88, "arkouda.Categorical.codes", false]], "codes (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.codes", false]], "columns (arkouda.dataframe property)": [[24, "arkouda.DataFrame.columns", false], [24, "id132", false]], "columns (arkouda.dataframe.dataframe property)": [[20, "arkouda.dataframe.DataFrame.columns", false]], "compiler_flag() (arkouda.dtypes.annotations method)": [[21, "arkouda.dtypes.annotations.compiler_flag", false]], "compiler_flag() (arkouda.numpy.dtypes.annotations method)": [[34, "arkouda.numpy.dtypes.annotations.compiler_flag", false]], "complex128 (class in arkouda)": [[24, "arkouda.complex128", false]], "complex128 (class in arkouda.dtypes)": [[21, "arkouda.dtypes.complex128", false]], "complex128 (class in arkouda.numpy)": [[35, "arkouda.numpy.complex128", false]], "complex128 (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.complex128", false]], "complex128() (arkouda.dtype method)": [[24, "arkouda.DType.COMPLEX128", false]], "complex128() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.COMPLEX128", false]], "complex128() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.COMPLEX128", false]], "complex128() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.COMPLEX128", false]], "complex128dtype (class in arkouda)": [[24, "arkouda.Complex128DType", false]], "complex128dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.Complex128DType", false]], "complex64 (class in arkouda)": [[24, "arkouda.complex64", false]], "complex64 (class in arkouda.dtypes)": [[21, "arkouda.dtypes.complex64", false]], "complex64 (class in arkouda.numpy)": [[35, "arkouda.numpy.complex64", false]], "complex64 (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.complex64", false]], "complex64() (arkouda.dtype method)": [[24, "arkouda.DType.COMPLEX64", false]], "complex64() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.COMPLEX64", false]], "complex64() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.COMPLEX64", false]], "complex64() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.COMPLEX64", false]], "complex64dtype (class in arkouda)": [[24, "arkouda.Complex64DType", false]], "complex64dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.Complex64DType", false]], "components (arkouda.timeclass.timedelta property)": [[54, "arkouda.timeclass.Timedelta.components", false]], "components (arkouda.timedelta property)": [[24, "arkouda.Timedelta.components", false], [24, "id795", false]], "compress() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.compress", false]], "compress() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.compress", false]], "compress() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.compress", false]], "compress() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.compress", false]], "compress() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.compress", false]], "compress() (arkouda.str_ method)": [[24, "arkouda.str_.compress", false], [24, "id1286", false]], "compute_join_size() (in module arkouda)": [[24, "arkouda.compute_join_size", false]], "compute_join_size() (in module arkouda.join)": [[29, "arkouda.join.compute_join_size", false]], "concat() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.concat", false], [24, "id133", false]], "concat() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.concat", false]], "concat() (arkouda.index method)": [[24, "arkouda.Index.concat", false]], "concat() (arkouda.index.index method)": [[25, "arkouda.index.Index.concat", false]], "concat() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.concat", false]], "concat() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.concat", false]], "concat() (arkouda.segarray class method)": [[24, "arkouda.SegArray.concat", false]], "concat() (arkouda.segarray.segarray class method)": [[47, "arkouda.segarray.SegArray.concat", false]], "concat() (arkouda.series method)": [[24, "arkouda.Series.concat", false]], "concat() (arkouda.series.series method)": [[48, "arkouda.series.Series.concat", false]], "concat() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.concat", false]], "concat() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.concat", false]], "concat() (in module arkouda.index)": [[84, "arkouda.Index.concat", false]], "concat() (in module arkouda.multiindex)": [[84, "arkouda.MultiIndex.concat", false]], "concatenate() (arkouda.categorical method)": [[24, "arkouda.Categorical.concatenate", false], [24, "id20", false], [24, "id78", false]], "concatenate() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.concatenate", false]], "concatenate() (in module arkouda)": [[24, "arkouda.concatenate", false], [24, "id856", false], [24, "id857", false], [89, "arkouda.concatenate", false]], "concatenate() (in module arkouda.pdarraysetops)": [[39, "arkouda.pdarraysetops.concatenate", false]], "concatenate() (in module arkouda.util)": [[55, "arkouda.util.concatenate", false]], "conj() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.conj", false]], "conj() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.conj", false]], "conj() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.conj", false]], "conj() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.conj", false]], "conj() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.conj", false]], "conj() (arkouda.str_ method)": [[24, "arkouda.str_.conj", false], [24, "id1287", false]], "conj() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.conj", false]], "conjugate() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.conjugate", false]], "conjugate() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.conjugate", false]], "conjugate() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.conjugate", false]], "conjugate() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.conjugate", false]], "conjugate() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.conjugate", false]], "conjugate() (arkouda.str_ method)": [[24, "arkouda.str_.conjugate", false], [24, "id1288", false]], "connect() (in module arkouda)": [[99, "arkouda.connect", false]], "connect() (in module arkouda.client)": [[18, "arkouda.client.connect", false]], "conserves (arkouda.bitvector attribute)": [[24, "arkouda.BitVector.conserves", false]], "conserves (arkouda.client_dtypes.bitvector attribute)": [[19, "arkouda.client_dtypes.BitVector.conserves", false]], "contains() (arkouda.categorical method)": [[24, "arkouda.Categorical.contains", false], [24, "id21", false], [24, "id79", false], [88, "arkouda.Categorical.contains", false]], "contains() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.contains", false]], "contains() (arkouda.strings method)": [[24, "arkouda.Strings.contains", false], [24, "id506", false], [24, "id581", false], [24, "id656", false], [24, "id731", false], [100, "arkouda.Strings.contains", false]], "contains() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.contains", false]], "convert_bytes() (in module arkouda.util)": [[55, "arkouda.util.convert_bytes", false]], "convert_if_categorical() (in module arkouda)": [[24, "arkouda.convert_if_categorical", false]], "convert_if_categorical() (in module arkouda.util)": [[55, "arkouda.util.convert_if_categorical", false]], "copy() (arkouda.arkouda_supported_dtypes method)": [[24, "arkouda.ARKOUDA_SUPPORTED_DTYPES.copy", false]], "copy() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.copy", false]], "copy() (arkouda.dtypeobjects method)": [[24, "arkouda.DTypeObjects.copy", false]], "copy() (arkouda.dtypes method)": [[24, "arkouda.DTypes.copy", false]], "copy() (arkouda.dtypes.arkouda_supported_dtypes method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.copy", false]], "copy() (arkouda.dtypes.dtypeobjects method)": [[21, "arkouda.dtypes.DTypeObjects.copy", false]], "copy() (arkouda.dtypes.dtypes method)": [[21, "arkouda.dtypes.DTypes.copy", false]], "copy() (arkouda.dtypes.inttypes method)": [[21, "arkouda.dtypes.intTypes.copy", false]], "copy() (arkouda.dtypes.number_format_strings method)": [[21, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.dtypes.numericdtypes method)": [[21, "arkouda.dtypes.NumericDTypes.copy", false]], "copy() (arkouda.dtypes.scalardtypes method)": [[21, "arkouda.dtypes.ScalarDTypes.copy", false]], "copy() (arkouda.dtypes.seriesdtypes method)": [[21, "arkouda.dtypes.SeriesDTypes.copy", false]], "copy() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.copy", false]], "copy() (arkouda.groupby_reduction_types method)": [[24, "arkouda.GROUPBY_REDUCTION_TYPES.copy", false]], "copy() (arkouda.groupbyclass.groupby_reduction_types method)": [[22, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.copy", false]], "copy() (arkouda.inttypes method)": [[24, "arkouda.intTypes.copy", false], [24, "id883", false], [24, "id892", false]], "copy() (arkouda.number_format_strings method)": [[24, "arkouda.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.numericdtypes method)": [[24, "arkouda.NumericDTypes.copy", false]], "copy() (arkouda.numpy.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.copy", false]], "copy() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.copy", false]], "copy() (arkouda.numpy.dtypeobjects method)": [[35, "arkouda.numpy.DTypeObjects.copy", false]], "copy() (arkouda.numpy.dtypes method)": [[35, "arkouda.numpy.DTypes.copy", false]], "copy() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.copy", false]], "copy() (arkouda.numpy.dtypes.dtypeobjects method)": [[34, "arkouda.numpy.dtypes.DTypeObjects.copy", false]], "copy() (arkouda.numpy.dtypes.dtypes method)": [[34, "arkouda.numpy.dtypes.DTypes.copy", false]], "copy() (arkouda.numpy.dtypes.inttypes method)": [[34, "arkouda.numpy.dtypes.intTypes.copy", false]], "copy() (arkouda.numpy.dtypes.number_format_strings method)": [[34, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.numpy.dtypes.numericdtypes method)": [[34, "arkouda.numpy.dtypes.NumericDTypes.copy", false]], "copy() (arkouda.numpy.dtypes.scalardtypes method)": [[34, "arkouda.numpy.dtypes.ScalarDTypes.copy", false]], "copy() (arkouda.numpy.dtypes.seriesdtypes method)": [[34, "arkouda.numpy.dtypes.SeriesDTypes.copy", false]], "copy() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.copy", false]], "copy() (arkouda.numpy.inttypes method)": [[35, "arkouda.numpy.intTypes.copy", false]], "copy() (arkouda.numpy.number_format_strings method)": [[35, "arkouda.numpy.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.numpy.numericdtypes method)": [[35, "arkouda.numpy.NumericDTypes.copy", false]], "copy() (arkouda.numpy.scalardtypes method)": [[35, "arkouda.numpy.ScalarDTypes.copy", false]], "copy() (arkouda.numpy.sctypedict method)": [[35, "arkouda.numpy.sctypeDict.copy", false]], "copy() (arkouda.numpy.sctypes method)": [[35, "arkouda.numpy.sctypes.copy", false]], "copy() (arkouda.numpy.seriesdtypes method)": [[35, "arkouda.numpy.SeriesDTypes.copy", false]], "copy() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.copy", false]], "copy() (arkouda.scalardtypes method)": [[24, "arkouda.ScalarDTypes.copy", false]], "copy() (arkouda.sctypedict method)": [[24, "arkouda.sctypeDict.copy", false]], "copy() (arkouda.sctypes method)": [[24, "arkouda.sctypes.copy", false]], "copy() (arkouda.segarray method)": [[24, "arkouda.SegArray.copy", false]], "copy() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.copy", false]], "copy() (arkouda.seriesdtypes method)": [[24, "arkouda.SeriesDTypes.copy", false]], "copy() (arkouda.str_ method)": [[24, "arkouda.str_.copy", false], [24, "id1289", false]], "copy() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.copy", false]], "corr() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.corr", false], [24, "id134", false]], "corr() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.corr", false]], "corr() (arkouda.pdarray method)": [[24, "arkouda.pdarray.corr", false], [24, "id1007", false], [24, "id1077", false], [24, "id1147", false], [24, "id1217", false], [24, "id937", false]], "corr() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.corr", false]], "corr() (in module arkouda)": [[24, "arkouda.corr", false]], "corr() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.corr", false]], "cos() (in module arkouda)": [[24, "arkouda.cos", false], [86, "arkouda.cos", false]], "cos() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.cos", false]], "cos() (in module arkouda.numeric)": [[33, "arkouda.numeric.cos", false]], "cosh() (in module arkouda)": [[24, "arkouda.cosh", false]], "cosh() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.cosh", false]], "cosh() (in module arkouda.numeric)": [[33, "arkouda.numeric.cosh", false]], "count() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.count", false], [24, "id135", false]], "count() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.count", false]], "count() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.count", false]], "count() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.count", false]], "count() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.count", false]], "count() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.count", false]], "count() (arkouda.dtypes.arkouda_supported_floats method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_FLOATS.count", false]], "count() (arkouda.dtypes.arkouda_supported_ints method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_INTS.count", false]], "count() (arkouda.dtypes.arkouda_supported_numbers method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_NUMBERS.count", false]], "count() (arkouda.groupby method)": [[24, "arkouda.GroupBy.count", false], [24, "id266", false], [24, "id313", false], [24, "id360", false], [24, "id407", false], [24, "id454", false], [91, "arkouda.GroupBy.count", false]], "count() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_floats method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_ints method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_numbers method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS.count", false]], "count() (arkouda.numpy.scalartype method)": [[35, "arkouda.numpy.ScalarType.count", false]], "count() (arkouda.scalartype method)": [[24, "arkouda.ScalarType.count", false]], "count_nonzero() (in module arkouda)": [[24, "arkouda.count_nonzero", false]], "count_nonzero() (in module arkouda.numeric)": [[33, "arkouda.numeric.count_nonzero", false]], "counts (arkouda.array_api.set_functions.uniqueallresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueAllResult.counts", false]], "counts (arkouda.array_api.set_functions.uniquecountsresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueCountsResult.counts", false]], "cov() (arkouda.pdarray method)": [[24, "arkouda.pdarray.cov", false], [24, "id1008", false], [24, "id1078", false], [24, "id1148", false], [24, "id1218", false], [24, "id938", false]], "cov() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.cov", false]], "cov() (in module arkouda)": [[24, "arkouda.cov", false]], "cov() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.cov", false]], "create_pdarray() (in module arkouda)": [[24, "arkouda.create_pdarray", false], [24, "id858", false], [24, "id859", false], [24, "id860", false], [24, "id861", false]], "create_sparray() (in module arkouda.sparrayclass)": [[50, "arkouda.sparrayclass.create_sparray", false]], "critical (arkouda.logger.loglevel attribute)": [[30, "arkouda.logger.LogLevel.CRITICAL", false]], "critical (arkouda.loglevel attribute)": [[24, "arkouda.LogLevel.CRITICAL", false]], "csingle (class in arkouda)": [[24, "arkouda.csingle", false]], "csingle (class in arkouda.numpy)": [[35, "arkouda.numpy.csingle", false]], "ctz() (arkouda.pdarray method)": [[24, "arkouda.pdarray.ctz", false], [24, "id1009", false], [24, "id1079", false], [24, "id1149", false], [24, "id1219", false], [24, "id939", false]], "ctz() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.ctz", false]], "ctz() (in module arkouda)": [[24, "arkouda.ctz", false]], "ctz() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.ctz", false]], "cumprod() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.cumprod", false]], "cumprod() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.cumprod", false]], "cumprod() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.cumprod", false]], "cumprod() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.cumprod", false]], "cumprod() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.cumprod", false]], "cumprod() (arkouda.str_ method)": [[24, "arkouda.str_.cumprod", false], [24, "id1290", false]], "cumprod() (in module arkouda)": [[24, "arkouda.cumprod", false], [86, "arkouda.cumprod", false]], "cumprod() (in module arkouda.numeric)": [[33, "arkouda.numeric.cumprod", false]], "cumsum() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.cumsum", false]], "cumsum() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.cumsum", false]], "cumsum() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.cumsum", false]], "cumsum() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.cumsum", false]], "cumsum() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.cumsum", false]], "cumsum() (arkouda.str_ method)": [[24, "arkouda.str_.cumsum", false], [24, "id1291", false]], "cumsum() (in module arkouda)": [[24, "arkouda.cumsum", false], [24, "id862", false], [24, "id863", false], [86, "arkouda.cumsum", false]], "cumsum() (in module arkouda.numeric)": [[33, "arkouda.numeric.cumsum", false]], "cumulative_sum() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.cumulative_sum", false]], "data (arkouda.accessor.datetimeaccessor attribute)": [[2, "arkouda.accessor.DatetimeAccessor.data", false]], "data (arkouda.accessor.stringaccessor attribute)": [[2, "arkouda.accessor.StringAccessor.data", false]], "data (arkouda.datetimeaccessor attribute)": [[24, "arkouda.DatetimeAccessor.data", false]], "data (arkouda.stringaccessor attribute)": [[24, "arkouda.StringAccessor.data", false]], "data() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.data", false]], "data() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.data", false]], "data() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.data", false]], "data() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.data", false]], "data() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.data", false]], "data() (arkouda.str_ method)": [[24, "arkouda.str_.data", false], [24, "id1292", false]], "dataframe (class in arkouda)": [[24, "arkouda.DataFrame", false], [24, "id122", false], [90, "arkouda.DataFrame", false]], "dataframe (class in arkouda.dataframe)": [[20, "arkouda.dataframe.DataFrame", false]], "dataframegroupby (class in arkouda)": [[24, "arkouda.DataFrameGroupBy", false]], "dataframegroupby (class in arkouda.dataframe)": [[20, "arkouda.dataframe.DataFrameGroupBy", false]], "datasource (class in arkouda)": [[24, "arkouda.DataSource", false]], "datasource (class in arkouda.numpy)": [[35, "arkouda.numpy.DataSource", false]], "date (arkouda.datetime property)": [[24, "arkouda.Datetime.date", false], [24, "id179", false], [24, "id212", false]], "date (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.date", false]], "date_operators() (in module arkouda)": [[24, "arkouda.date_operators", false]], "date_operators() (in module arkouda.accessor)": [[2, "arkouda.accessor.date_operators", false]], "date_range() (in module arkouda)": [[24, "arkouda.date_range", false], [24, "id864", false]], "date_range() (in module arkouda.timeclass)": [[54, "arkouda.timeclass.date_range", false]], "datetime (class in arkouda)": [[24, "arkouda.Datetime", false], [24, "id178", false], [24, "id211", false]], "datetime (class in arkouda.timeclass)": [[54, "arkouda.timeclass.Datetime", false]], "datetime64 (class in arkouda)": [[24, "arkouda.datetime64", false]], "datetime64 (class in arkouda.numpy)": [[35, "arkouda.numpy.datetime64", false]], "datetime64dtype (class in arkouda)": [[24, "arkouda.DateTime64DType", false]], "datetime64dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.DateTime64DType", false]], "datetimeaccessor (class in arkouda)": [[24, "arkouda.DatetimeAccessor", false]], "datetimeaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.DatetimeAccessor", false]], "day (arkouda.datetime property)": [[24, "arkouda.Datetime.day", false], [24, "id180", false], [24, "id213", false]], "day (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.day", false]], "day_of_week (arkouda.datetime property)": [[24, "arkouda.Datetime.day_of_week", false], [24, "id181", false], [24, "id214", false]], "day_of_week (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.day_of_week", false]], "day_of_year (arkouda.datetime property)": [[24, "arkouda.Datetime.day_of_year", false], [24, "id182", false], [24, "id215", false]], "day_of_year (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.day_of_year", false]], "dayofweek (arkouda.datetime property)": [[24, "arkouda.Datetime.dayofweek", false], [24, "id183", false], [24, "id216", false]], "dayofweek (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.dayofweek", false]], "dayofyear (arkouda.datetime property)": [[24, "arkouda.Datetime.dayofyear", false], [24, "id184", false], [24, "id217", false]], "dayofyear (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.dayofyear", false]], "days (arkouda.timeclass.timedelta property)": [[54, "arkouda.timeclass.Timedelta.days", false]], "days (arkouda.timedelta property)": [[24, "arkouda.Timedelta.days", false], [24, "id796", false]], "debug (arkouda.logger.loglevel attribute)": [[30, "arkouda.logger.LogLevel.DEBUG", false]], "debug (arkouda.loglevel attribute)": [[24, "arkouda.LogLevel.DEBUG", false]], "decode() (arkouda.strings method)": [[24, "arkouda.Strings.decode", false], [24, "id507", false], [24, "id582", false], [24, "id657", false], [24, "id732", false]], "decode() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.decode", false]], "default_rng() (in module arkouda.random)": [[95, "arkouda.random.default_rng", false]], "deg2rad() (in module arkouda)": [[24, "arkouda.deg2rad", false]], "deg2rad() (in module arkouda.numeric)": [[33, "arkouda.numeric.deg2rad", false]], "delete() (in module arkouda)": [[24, "arkouda.delete", false]], "delete() (in module arkouda.pdarraymanipulation)": [[38, "arkouda.pdarraymanipulation.delete", false]], "delete_directory() (in module arkouda.io_util)": [[28, "arkouda.io_util.delete_directory", false]], "delimited_file_to_dict() (in module arkouda.io_util)": [[28, "arkouda.io_util.delimited_file_to_dict", false]], "denominator() (arkouda.integer method)": [[24, "arkouda.integer.denominator", false]], "denominator() (arkouda.numpy.integer method)": [[35, "arkouda.numpy.integer.denominator", false]], "deprecate() (in module arkouda)": [[24, "arkouda.deprecate", false]], "deprecate() (in module arkouda.numpy)": [[35, "arkouda.numpy.deprecate", false]], "deprecate_with_doc() (in module arkouda)": [[24, "arkouda.deprecate_with_doc", false]], "deprecate_with_doc() (in module arkouda.numpy)": [[35, "arkouda.numpy.deprecate_with_doc", false]], "device (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.device", false]], "device (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.device", false]], "df (arkouda.dataframe.dataframegroupby attribute)": [[20, "arkouda.dataframe.DataFrameGroupBy.df", false]], "df (arkouda.dataframegroupby attribute)": [[24, "arkouda.DataFrameGroupBy.df", false]], "diagonal() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.diagonal", false]], "diagonal() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.diagonal", false]], "diagonal() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.diagonal", false]], "diagonal() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.diagonal", false]], "diagonal() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.diagonal", false]], "diagonal() (arkouda.str_ method)": [[24, "arkouda.str_.diagonal", false], [24, "id1293", false]], "dict_to_delimited_file() (in module arkouda.io_util)": [[28, "arkouda.io_util.dict_to_delimited_file", false]], "diff() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.diff", false]], "diff() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.diff", false]], "diff() (arkouda.series method)": [[24, "arkouda.Series.diff", false]], "diff() (arkouda.series.series method)": [[48, "arkouda.series.Series.diff", false]], "diff() (in module arkouda.array_api.utility_functions)": [[16, "arkouda.array_api.utility_functions.diff", false]], "diffaggregate (class in arkouda)": [[24, "arkouda.DiffAggregate", false]], "diffaggregate (class in arkouda.dataframe)": [[20, "arkouda.dataframe.DiffAggregate", false]], "difference() (arkouda.arkouda_supported_dtypes method)": [[24, "arkouda.ARKOUDA_SUPPORTED_DTYPES.difference", false]], "difference() (arkouda.dtypeobjects method)": [[24, "arkouda.DTypeObjects.difference", false]], "difference() (arkouda.dtypes method)": [[24, "arkouda.DTypes.difference", false]], "difference() (arkouda.dtypes.arkouda_supported_dtypes method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.difference", false]], "difference() (arkouda.dtypes.dtypeobjects method)": [[21, "arkouda.dtypes.DTypeObjects.difference", false]], "difference() (arkouda.dtypes.dtypes method)": [[21, "arkouda.dtypes.DTypes.difference", false]], "difference() (arkouda.dtypes.inttypes method)": [[21, "arkouda.dtypes.intTypes.difference", false]], "difference() (arkouda.dtypes.numericdtypes method)": [[21, "arkouda.dtypes.NumericDTypes.difference", false]], "difference() (arkouda.dtypes.scalardtypes method)": [[21, "arkouda.dtypes.ScalarDTypes.difference", false]], "difference() (arkouda.groupby_reduction_types method)": [[24, "arkouda.GROUPBY_REDUCTION_TYPES.difference", false]], "difference() (arkouda.groupbyclass.groupby_reduction_types method)": [[22, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.difference", false]], "difference() (arkouda.inttypes method)": [[24, "arkouda.intTypes.difference", false], [24, "id884", false], [24, "id893", false]], "difference() (arkouda.numericdtypes method)": [[24, "arkouda.NumericDTypes.difference", false]], "difference() (arkouda.numpy.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.difference", false]], "difference() (arkouda.numpy.dtypeobjects method)": [[35, "arkouda.numpy.DTypeObjects.difference", false]], "difference() (arkouda.numpy.dtypes method)": [[35, "arkouda.numpy.DTypes.difference", false]], "difference() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.difference", false]], "difference() (arkouda.numpy.dtypes.dtypeobjects method)": [[34, "arkouda.numpy.dtypes.DTypeObjects.difference", false]], "difference() (arkouda.numpy.dtypes.dtypes method)": [[34, "arkouda.numpy.dtypes.DTypes.difference", false]], "difference() (arkouda.numpy.dtypes.inttypes method)": [[34, "arkouda.numpy.dtypes.intTypes.difference", false]], "difference() (arkouda.numpy.dtypes.numericdtypes method)": [[34, "arkouda.numpy.dtypes.NumericDTypes.difference", false]], "difference() (arkouda.numpy.dtypes.scalardtypes method)": [[34, "arkouda.numpy.dtypes.ScalarDTypes.difference", false]], "difference() (arkouda.numpy.inttypes method)": [[35, "arkouda.numpy.intTypes.difference", false]], "difference() (arkouda.numpy.numericdtypes method)": [[35, "arkouda.numpy.NumericDTypes.difference", false]], "difference() (arkouda.numpy.scalardtypes method)": [[35, "arkouda.numpy.ScalarDTypes.difference", false]], "difference() (arkouda.scalardtypes method)": [[24, "arkouda.ScalarDTypes.difference", false]], "disableverbose() (in module arkouda)": [[24, "arkouda.disableVerbose", false]], "disableverbose() (in module arkouda.logger)": [[30, "arkouda.logger.disableVerbose", false]], "disconnect() (in module arkouda.client)": [[18, "arkouda.client.disconnect", false]], "disp() (in module arkouda)": [[24, "arkouda.disp", false]], "disp() (in module arkouda.numpy)": [[35, "arkouda.numpy.disp", false]], "divide() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.divide", false]], "divmod() (in module arkouda)": [[24, "arkouda.divmod", false]], "divmod() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.divmod", false]], "dot() (in module arkouda)": [[24, "arkouda.dot", false]], "dot() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.dot", false]], "double (class in arkouda)": [[24, "arkouda.double", false]], "double (class in arkouda.numpy)": [[35, "arkouda.numpy.double", false]], "drop() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.drop", false], [24, "id136", false]], "drop() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.drop", false]], "drop() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.drop", false]], "drop_duplicates() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.drop_duplicates", false], [24, "id137", false]], "drop_duplicates() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.drop_duplicates", false]], "drop_duplicates() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.drop_duplicates", false]], "dropna (arkouda.groupby attribute)": [[24, "arkouda.GroupBy.dropna", false], [24, "id253", false], [24, "id300", false], [24, "id347", false], [24, "id394", false], [24, "id441", false], [91, "arkouda.GroupBy.dropna", false]], "dropna (arkouda.groupbyclass.groupby attribute)": [[22, "arkouda.groupbyclass.GroupBy.dropna", false]], "dropna() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.dropna", false], [24, "id138", false]], "dropna() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.dropna", false]], "dt() (arkouda.series method)": [[24, "arkouda.Series.dt", false]], "dt() (arkouda.series.series method)": [[48, "arkouda.series.Series.dt", false]], "dtype (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.dtype", false]], "dtype (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.dtype", false]], "dtype (arkouda.array_api.data_type_functions.finfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.finfo_object.dtype", false]], "dtype (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.iinfo_object.dtype", false]], "dtype (arkouda.categorical attribute)": [[24, "arkouda.Categorical.dtype", false], [24, "id22", false], [24, "id80", false]], "dtype (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.dtype", false]], "dtype (arkouda.finfo attribute)": [[24, "arkouda.finfo.dtype", false]], "dtype (arkouda.format_parser attribute)": [[24, "arkouda.format_parser.dtype", false]], "dtype (arkouda.iinfo attribute)": [[24, "arkouda.iinfo.dtype", false]], "dtype (arkouda.index.multiindex property)": [[25, "arkouda.index.MultiIndex.dtype", false]], "dtype (arkouda.multiindex property)": [[24, "arkouda.MultiIndex.dtype", false]], "dtype (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.dtype", false]], "dtype (arkouda.numpy.format_parser attribute)": [[35, "arkouda.numpy.format_parser.dtype", false]], "dtype (arkouda.numpy.iinfo attribute)": [[35, "arkouda.numpy.iinfo.dtype", false]], "dtype (arkouda.pdarray attribute)": [[24, "arkouda.pdarray.dtype", false], [24, "id1010", false], [24, "id1060", false], [24, "id1080", false], [24, "id1130", false], [24, "id1150", false], [24, "id1200", false], [24, "id1220", false], [24, "id910", false], [24, "id920", false], [24, "id940", false], [24, "id990", false], [94, "arkouda.pdarray.dtype", false]], "dtype (arkouda.pdarrayclass.pdarray attribute)": [[36, "arkouda.pdarrayclass.pdarray.dtype", false], [36, "id0", false]], "dtype (arkouda.segarray attribute)": [[24, "arkouda.SegArray.dtype", false]], "dtype (arkouda.segarray.segarray attribute)": [[47, "arkouda.segarray.SegArray.dtype", false]], "dtype (arkouda.series property)": [[24, "arkouda.Series.dtype", false]], "dtype (arkouda.series.series property)": [[48, "arkouda.series.Series.dtype", false]], "dtype (arkouda.sparrayclass.sparray attribute)": [[50, "arkouda.sparrayclass.sparray.dtype", false], [50, "id0", false]], "dtype (arkouda.strings attribute)": [[24, "arkouda.Strings.dtype", false], [24, "id490", false], [24, "id499", false], [24, "id508", false], [24, "id574", false], [24, "id583", false], [24, "id649", false], [24, "id658", false], [24, "id724", false], [24, "id733", false]], "dtype (arkouda.strings.strings attribute)": [[52, "arkouda.strings.Strings.dtype", false], [52, "id0", false]], "dtype (class in arkouda)": [[24, "arkouda.DType", false]], "dtype (class in arkouda.dtypes)": [[21, "arkouda.dtypes.DType", false]], "dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.DType", false]], "dtype (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.DType", false]], "dtype() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.dtype", false]], "dtype() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.dtype", false]], "dtype() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.dtype", false]], "dtype() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.dtype", false]], "dtype() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.dtype", false]], "dtype() (arkouda.str_ method)": [[24, "arkouda.str_.dtype", false], [24, "id1294", false]], "dtype() (in module arkouda)": [[24, "arkouda.dtype", false]], "dtype() (in module arkouda.dtypes)": [[21, "arkouda.dtypes.dtype", false]], "dtype() (in module arkouda.numpy)": [[35, "arkouda.numpy.dtype", false]], "dtype() (in module arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.dtype", false]], "dtypeobjects (class in arkouda)": [[24, "arkouda.DTypeObjects", false]], "dtypeobjects (class in arkouda.dtypes)": [[21, "arkouda.dtypes.DTypeObjects", false]], "dtypeobjects (class in arkouda.numpy)": [[35, "arkouda.numpy.DTypeObjects", false]], "dtypeobjects (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.DTypeObjects", false]], "dtypes (arkouda.dataframe property)": [[24, "arkouda.DataFrame.dtypes", false], [24, "id139", false]], "dtypes (arkouda.dataframe.dataframe property)": [[20, "arkouda.dataframe.DataFrame.dtypes", false]], "dtypes (class in arkouda)": [[24, "arkouda.DTypes", false]], "dtypes (class in arkouda.dtypes)": [[21, "arkouda.dtypes.DTypes", false]], "dtypes (class in arkouda.numpy)": [[35, "arkouda.numpy.DTypes", false]], "dtypes (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.DTypes", false]], "dump() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.dump", false]], "dump() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.dump", false]], "dump() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.dump", false]], "dump() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.dump", false]], "dump() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.dump", false]], "dump() (arkouda.str_ method)": [[24, "arkouda.str_.dump", false], [24, "id1295", false]], "dumps() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.dumps", false]], "dumps() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.dumps", false]], "dumps() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.dumps", false]], "dumps() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.dumps", false]], "dumps() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.dumps", false]], "dumps() (arkouda.str_ method)": [[24, "arkouda.str_.dumps", false], [24, "id1296", false]], "e (in module arkouda)": [[24, "arkouda.e", false]], "e (in module arkouda.numpy)": [[35, "arkouda.numpy.e", false]], "empty (arkouda.dataframe property)": [[24, "arkouda.DataFrame.empty", false], [24, "id140", false]], "empty (arkouda.dataframe.dataframe property)": [[20, "arkouda.dataframe.DataFrame.empty", false]], "empty() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.empty", false]], "empty_like() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.empty_like", false]], "enableverbose() (in module arkouda)": [[24, "arkouda.enableVerbose", false]], "enableverbose() (in module arkouda.logger)": [[30, "arkouda.logger.enableVerbose", false]], "encode() (arkouda.strings method)": [[24, "arkouda.Strings.encode", false], [24, "id509", false], [24, "id584", false], [24, "id659", false], [24, "id734", false]], "encode() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.encode", false]], "end() (arkouda.match.match method)": [[31, "arkouda.match.Match.end", false], [100, "arkouda.match.Match.end", false]], "endswith() (arkouda.categorical method)": [[24, "arkouda.Categorical.endswith", false], [24, "id23", false], [24, "id81", false], [88, "arkouda.Categorical.endswith", false]], "endswith() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.endswith", false]], "endswith() (arkouda.strings method)": [[24, "arkouda.Strings.endswith", false], [24, "id510", false], [24, "id585", false], [24, "id660", false], [24, "id735", false], [100, "arkouda.Strings.endswith", false]], "endswith() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.endswith", false]], "enrich_inplace() (in module arkouda.util)": [[55, "arkouda.util.enrich_inplace", false]], "entry (arkouda.strings attribute)": [[24, "arkouda.Strings.entry", false], [24, "id491", false], [24, "id494", false], [24, "id511", false], [24, "id569", false], [24, "id586", false], [24, "id644", false], [24, "id661", false], [24, "id719", false], [24, "id736", false]], "entry (arkouda.strings.strings attribute)": [[52, "arkouda.strings.Strings.entry", false], [52, "id1", false]], "enum (class in arkouda.dtypes)": [[21, "arkouda.dtypes.Enum", false]], "enum (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.Enum", false]], "eps (arkouda.array_api.data_type_functions.finfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.finfo_object.eps", false]], "eps (arkouda.finfo attribute)": [[24, "arkouda.finfo.eps", false]], "eps (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.eps", false]], "epsneg (arkouda.finfo attribute)": [[24, "arkouda.finfo.epsneg", false]], "epsneg (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.epsneg", false]], "equal() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.equal", false]], "equal_levels() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.equal_levels", false]], "equal_levels() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.equal_levels", false]], "equals() (arkouda.categorical method)": [[24, "arkouda.Categorical.equals", false], [24, "id24", false], [24, "id82", false]], "equals() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.equals", false]], "equals() (arkouda.index method)": [[24, "arkouda.Index.equals", false]], "equals() (arkouda.index.index method)": [[25, "arkouda.index.Index.equals", false]], "equals() (arkouda.pdarray method)": [[24, "arkouda.pdarray.equals", false], [24, "id1011", false], [24, "id1081", false], [24, "id1151", false], [24, "id1221", false], [24, "id941", false]], "equals() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.equals", false]], "equals() (arkouda.strings method)": [[24, "arkouda.Strings.equals", false], [24, "id512", false], [24, "id587", false], [24, "id662", false], [24, "id737", false]], "equals() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.equals", false]], "error (arkouda.logger.loglevel attribute)": [[30, "arkouda.logger.LogLevel.ERROR", false]], "error (arkouda.loglevel attribute)": [[24, "arkouda.LogLevel.ERROR", false]], "errormode (class in arkouda)": [[24, "arkouda.ErrorMode", false]], "errormode (class in arkouda.numeric)": [[33, "arkouda.numeric.ErrorMode", false]], "euler_gamma (in module arkouda)": [[24, "arkouda.euler_gamma", false]], "euler_gamma (in module arkouda.numpy)": [[35, "arkouda.numpy.euler_gamma", false]], "exists() (arkouda.datasource method)": [[24, "arkouda.DataSource.exists", false]], "exists() (arkouda.numpy.datasource method)": [[35, "arkouda.numpy.DataSource.exists", false]], "exp() (in module arkouda)": [[24, "arkouda.exp", false], [86, "arkouda.exp", false]], "exp() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.exp", false]], "exp() (in module arkouda.numeric)": [[33, "arkouda.numeric.exp", false]], "expand() (in module arkouda.util)": [[55, "arkouda.util.expand", false]], "expand_dims() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.expand_dims", false]], "expm1() (in module arkouda)": [[24, "arkouda.expm1", false]], "expm1() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.expm1", false]], "expm1() (in module arkouda.numeric)": [[33, "arkouda.numeric.expm1", false]], "exponential() (arkouda.generator method)": [[24, "arkouda.Generator.exponential", false]], "exponential() (arkouda.random.generator method)": [[41, "arkouda.random.Generator.exponential", false]], "exponential() (in module arkouda.random.generator)": [[95, "arkouda.random.Generator.exponential", false]], "export() (in module arkouda)": [[24, "arkouda.export", false], [83, "arkouda.export", false]], "export() (in module arkouda.io)": [[27, "arkouda.io.export", false]], "export_uint() (arkouda.client_dtypes.ipv4 method)": [[19, "arkouda.client_dtypes.IPv4.export_uint", false]], "export_uint() (arkouda.ipv4 method)": [[24, "arkouda.IPv4.export_uint", false]], "eye() (in module arkouda)": [[24, "arkouda.eye", false]], "eye() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.eye", false]], "eye() (in module arkouda.numeric)": [[33, "arkouda.numeric.eye", false]], "factory() (arkouda.index static method)": [[24, "arkouda.Index.factory", false]], "factory() (arkouda.index.index static method)": [[25, "arkouda.index.Index.factory", false]], "false_ (class in arkouda)": [[24, "arkouda.False_", false]], "false_ (class in arkouda.numpy)": [[35, "arkouda.numpy.False_", false]], "fields (class in arkouda)": [[24, "arkouda.Fields", false]], "fields (class in arkouda.client_dtypes)": [[19, "arkouda.client_dtypes.Fields", false]], "fill() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.fill", false]], "fill() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.fill", false]], "fill() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.fill", false]], "fill() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.fill", false]], "fill() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.fill", false]], "fill() (arkouda.pdarray method)": [[24, "arkouda.pdarray.fill", false], [24, "id1012", false], [24, "id1082", false], [24, "id1152", false], [24, "id1222", false], [24, "id942", false]], "fill() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.fill", false]], "fill() (arkouda.str_ method)": [[24, "arkouda.str_.fill", false], [24, "id1297", false]], "fillna() (arkouda.series method)": [[24, "arkouda.Series.fillna", false]], "fillna() (arkouda.series.series method)": [[48, "arkouda.series.Series.fillna", false]], "filter() (arkouda.segarray method)": [[24, "arkouda.SegArray.filter", false]], "filter() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.filter", false]], "filter_by_range() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.filter_by_range", false], [24, "id141", false]], "filter_by_range() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.filter_by_range", false]], "find() (in module arkouda)": [[24, "arkouda.find", false]], "find() (in module arkouda.alignment)": [[3, "arkouda.alignment.find", false]], "find_locations() (arkouda.matcher.matcher method)": [[32, "arkouda.matcher.Matcher.find_locations", false]], "find_locations() (arkouda.strings method)": [[24, "arkouda.Strings.find_locations", false], [24, "id513", false], [24, "id588", false], [24, "id663", false], [24, "id738", false], [100, "arkouda.Strings.find_locations", false]], "find_locations() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.find_locations", false]], "find_matches() (arkouda.match.match method)": [[31, "arkouda.match.Match.find_matches", false], [100, "arkouda.match.Match.find_matches", false]], "findall() (arkouda.matcher.matcher method)": [[32, "arkouda.matcher.Matcher.findall", false]], "findall() (arkouda.strings method)": [[24, "arkouda.Strings.findall", false], [24, "id514", false], [24, "id589", false], [24, "id664", false], [24, "id739", false], [100, "arkouda.Strings.findall", false]], "findall() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.findall", false]], "finfo (class in arkouda)": [[24, "arkouda.finfo", false]], "finfo (class in arkouda.numpy)": [[35, "arkouda.numpy.finfo", false]], "finfo() (in module arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.finfo", false]], "finfo_object (class in arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.finfo_object", false]], "first (arkouda.index.multiindex attribute)": [[25, "arkouda.index.MultiIndex.first", false]], "first (arkouda.multiindex attribute)": [[24, "arkouda.MultiIndex.first", false]], "first() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.first", false]], "first() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.first", false]], "first() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.first", false]], "first() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.first", false]], "first() (arkouda.groupby method)": [[24, "arkouda.GroupBy.first", false], [24, "id267", false], [24, "id314", false], [24, "id361", false], [24, "id408", false], [24, "id455", false], [91, "arkouda.GroupBy.first", false]], "first() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.first", false]], "flags() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.flags", false]], "flags() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.flags", false]], "flags() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.flags", false]], "flags() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.flags", false]], "flags() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.flags", false]], "flags() (arkouda.str_ method)": [[24, "arkouda.str_.flags", false], [24, "id1298", false]], "flat() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.flat", false]], "flat() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.flat", false]], "flat() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.flat", false]], "flat() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.flat", false]], "flat() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.flat", false]], "flat() (arkouda.str_ method)": [[24, "arkouda.str_.flat", false], [24, "id1299", false]], "flatten() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.flatten", false]], "flatten() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.flatten", false]], "flatten() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.flatten", false]], "flatten() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.flatten", false]], "flatten() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.flatten", false]], "flatten() (arkouda.str_ method)": [[24, "arkouda.str_.flatten", false], [24, "id1300", false]], "flatten() (arkouda.strings method)": [[24, "arkouda.Strings.flatten", false], [24, "id515", false], [24, "id590", false], [24, "id665", false], [24, "id740", false], [100, "arkouda.Strings.flatten", false]], "flatten() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.flatten", false]], "flexible (class in arkouda)": [[24, "arkouda.flexible", false]], "flexible (class in arkouda.numpy)": [[35, "arkouda.numpy.flexible", false]], "flip() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.flip", false]], "float() (arkouda.dtype method)": [[24, "arkouda.DType.FLOAT", false]], "float() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.FLOAT", false]], "float() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.FLOAT", false]], "float() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.FLOAT", false]], "float16 (class in arkouda)": [[24, "arkouda.float16", false]], "float16 (class in arkouda.dtypes)": [[21, "arkouda.dtypes.float16", false]], "float16 (class in arkouda.numpy)": [[35, "arkouda.numpy.float16", false]], "float16 (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.float16", false]], "float16dtype (class in arkouda)": [[24, "arkouda.Float16DType", false]], "float16dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.Float16DType", false]], "float32 (class in arkouda)": [[24, "arkouda.float32", false]], "float32 (class in arkouda.dtypes)": [[21, "arkouda.dtypes.float32", false]], "float32 (class in arkouda.numpy)": [[35, "arkouda.numpy.float32", false]], "float32 (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.float32", false]], "float32() (arkouda.dtype method)": [[24, "arkouda.DType.FLOAT32", false]], "float32() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.FLOAT32", false]], "float32() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.FLOAT32", false]], "float32() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.FLOAT32", false]], "float32dtype (class in arkouda)": [[24, "arkouda.Float32DType", false]], "float32dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.Float32DType", false]], "float64 (class in arkouda)": [[24, "arkouda.float64", false]], "float64 (class in arkouda.dtypes)": [[21, "arkouda.dtypes.float64", false]], "float64 (class in arkouda.numpy)": [[35, "arkouda.numpy.float64", false]], "float64 (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.float64", false]], "float64() (arkouda.dtype method)": [[24, "arkouda.DType.FLOAT64", false]], "float64() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.FLOAT64", false]], "float64() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.FLOAT64", false]], "float64() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.FLOAT64", false]], "float64dtype (class in arkouda)": [[24, "arkouda.Float64DType", false]], "float64dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.Float64DType", false]], "float_ (class in arkouda)": [[24, "arkouda.float_", false]], "float_ (class in arkouda.numpy)": [[35, "arkouda.numpy.float_", false]], "float_scalars (class in arkouda)": [[24, "arkouda.float_scalars", false]], "float_scalars (class in arkouda.dtypes)": [[21, "arkouda.dtypes.float_scalars", false]], "float_scalars (class in arkouda.numpy)": [[35, "arkouda.numpy.float_scalars", false]], "float_scalars (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.float_scalars", false]], "floating (class in arkouda)": [[24, "arkouda.floating", false]], "floating (class in arkouda.numpy)": [[35, "arkouda.numpy.floating", false]], "floor() (in module arkouda)": [[24, "arkouda.floor", false], [24, "id871", false]], "floor() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.floor", false]], "floor() (in module arkouda.numeric)": [[33, "arkouda.numeric.floor", false]], "floor() (in module arkouda.numpy)": [[35, "arkouda.numpy.floor", false]], "floor_divide() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.floor_divide", false]], "fmod() (in module arkouda)": [[24, "arkouda.fmod", false]], "fmod() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.fmod", false]], "format() (arkouda.bitvector method)": [[24, "arkouda.BitVector.format", false]], "format() (arkouda.client_dtypes.bitvector method)": [[19, "arkouda.client_dtypes.BitVector.format", false]], "format() (arkouda.client_dtypes.fields method)": [[19, "arkouda.client_dtypes.Fields.format", false]], "format() (arkouda.client_dtypes.ipv4 method)": [[19, "arkouda.client_dtypes.IPv4.format", false]], "format() (arkouda.fields method)": [[24, "arkouda.Fields.format", false]], "format() (arkouda.ipv4 method)": [[24, "arkouda.IPv4.format", false]], "format_float_positional() (in module arkouda)": [[24, "arkouda.format_float_positional", false]], "format_float_positional() (in module arkouda.numpy)": [[35, "arkouda.numpy.format_float_positional", false]], "format_float_scientific() (in module arkouda)": [[24, "arkouda.format_float_scientific", false]], "format_float_scientific() (in module arkouda.numpy)": [[35, "arkouda.numpy.format_float_scientific", false]], "format_other() (arkouda.pdarray method)": [[24, "arkouda.pdarray.format_other", false], [24, "id1013", false], [24, "id1083", false], [24, "id1153", false], [24, "id1223", false], [24, "id943", false]], "format_other() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.format_other", false]], "format_parser (class in arkouda)": [[24, "arkouda.format_parser", false]], "format_parser (class in arkouda.numpy)": [[35, "arkouda.numpy.format_parser", false]], "from_codes() (arkouda.categorical class method)": [[24, "arkouda.Categorical.from_codes", false], [24, "id25", false], [24, "id83", false], [88, "arkouda.Categorical.from_codes", false]], "from_codes() (arkouda.categorical.categorical class method)": [[17, "arkouda.categorical.Categorical.from_codes", false]], "from_dlpack() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.from_dlpack", false]], "from_multi_array() (arkouda.segarray class method)": [[24, "arkouda.SegArray.from_multi_array", false]], "from_multi_array() (arkouda.segarray.segarray class method)": [[47, "arkouda.segarray.SegArray.from_multi_array", false]], "from_pandas() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.from_pandas", false], [24, "id142", false]], "from_pandas() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.from_pandas", false]], "from_parts() (arkouda.segarray class method)": [[24, "arkouda.SegArray.from_parts", false]], "from_parts() (arkouda.segarray.segarray class method)": [[47, "arkouda.segarray.SegArray.from_parts", false]], "from_parts() (arkouda.strings static method)": [[24, "arkouda.Strings.from_parts", false], [24, "id516", false], [24, "id591", false], [24, "id666", false], [24, "id741", false]], "from_parts() (arkouda.strings.strings static method)": [[52, "arkouda.strings.Strings.from_parts", false]], "from_return_msg() (arkouda.bitvector class method)": [[24, "arkouda.BitVector.from_return_msg", false]], "from_return_msg() (arkouda.categorical class method)": [[24, "arkouda.Categorical.from_return_msg", false], [24, "id26", false], [24, "id84", false]], "from_return_msg() (arkouda.categorical.categorical class method)": [[17, "arkouda.categorical.Categorical.from_return_msg", false]], "from_return_msg() (arkouda.client_dtypes.bitvector class method)": [[19, "arkouda.client_dtypes.BitVector.from_return_msg", false]], "from_return_msg() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.from_return_msg", false], [24, "id143", false]], "from_return_msg() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.from_return_msg", false]], "from_return_msg() (arkouda.groupby method)": [[24, "arkouda.GroupBy.from_return_msg", false], [24, "id268", false], [24, "id315", false], [24, "id362", false], [24, "id409", false], [24, "id456", false]], "from_return_msg() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.from_return_msg", false]], "from_return_msg() (arkouda.index class method)": [[24, "arkouda.Index.from_return_msg", false]], "from_return_msg() (arkouda.index.index class method)": [[25, "arkouda.index.Index.from_return_msg", false]], "from_return_msg() (arkouda.segarray class method)": [[24, "arkouda.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.segarray.segarray class method)": [[47, "arkouda.segarray.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.series method)": [[24, "arkouda.Series.from_return_msg", false]], "from_return_msg() (arkouda.series.series method)": [[48, "arkouda.series.Series.from_return_msg", false]], "from_return_msg() (arkouda.strings static method)": [[24, "arkouda.Strings.from_return_msg", false], [24, "id517", false], [24, "id592", false], [24, "id667", false], [24, "id742", false]], "from_return_msg() (arkouda.strings.strings static method)": [[52, "arkouda.strings.Strings.from_return_msg", false]], "from_series() (in module arkouda)": [[24, "arkouda.from_series", false], [24, "id872", false]], "from_series() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.from_series", false]], "fromhex() (arkouda.akfloat64 method)": [[24, "arkouda.akfloat64.fromhex", false], [24, "id819", false]], "fromhex() (arkouda.double method)": [[24, "arkouda.double.fromhex", false]], "fromhex() (arkouda.dtypes.float64 method)": [[21, "arkouda.dtypes.float64.fromhex", false]], "fromhex() (arkouda.float64 method)": [[24, "arkouda.float64.fromhex", false]], "fromhex() (arkouda.float_ method)": [[24, "arkouda.float_.fromhex", false]], "fromhex() (arkouda.numpy.double method)": [[35, "arkouda.numpy.double.fromhex", false]], "fromhex() (arkouda.numpy.dtypes.float64 method)": [[34, "arkouda.numpy.dtypes.float64.fromhex", false]], "fromhex() (arkouda.numpy.float64 method)": [[35, "arkouda.numpy.float64.fromhex", false]], "fromhex() (arkouda.numpy.float_ method)": [[35, "arkouda.numpy.float_.fromhex", false]], "fromkeys() (arkouda.dtypes.number_format_strings method)": [[21, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.dtypes.seriesdtypes method)": [[21, "arkouda.dtypes.SeriesDTypes.fromkeys", false]], "fromkeys() (arkouda.number_format_strings method)": [[24, "arkouda.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.numpy.dtypes.number_format_strings method)": [[34, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.numpy.dtypes.seriesdtypes method)": [[34, "arkouda.numpy.dtypes.SeriesDTypes.fromkeys", false]], "fromkeys() (arkouda.numpy.number_format_strings method)": [[35, "arkouda.numpy.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.numpy.sctypedict method)": [[35, "arkouda.numpy.sctypeDict.fromkeys", false]], "fromkeys() (arkouda.numpy.sctypes method)": [[35, "arkouda.numpy.sctypes.fromkeys", false]], "fromkeys() (arkouda.numpy.seriesdtypes method)": [[35, "arkouda.numpy.SeriesDTypes.fromkeys", false]], "fromkeys() (arkouda.sctypedict method)": [[24, "arkouda.sctypeDict.fromkeys", false]], "fromkeys() (arkouda.sctypes method)": [[24, "arkouda.sctypes.fromkeys", false]], "fromkeys() (arkouda.seriesdtypes method)": [[24, "arkouda.SeriesDTypes.fromkeys", false]], "full() (in module arkouda)": [[24, "arkouda.full", false], [24, "id873", false]], "full() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.full", false]], "full() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.full", false]], "full_like() (in module arkouda)": [[24, "arkouda.full_like", false]], "full_like() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.full_like", false]], "full_like() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.full_like", false]], "full_match_bool (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.full_match_bool", false]], "full_match_ind (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.full_match_ind", false]], "fullmatch() (arkouda.strings method)": [[24, "arkouda.Strings.fullmatch", false], [24, "id518", false], [24, "id593", false], [24, "id668", false], [24, "id743", false], [100, "arkouda.Strings.fullmatch", false]], "fullmatch() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.fullmatch", false]], "gb (arkouda.dataframe.dataframegroupby attribute)": [[20, "arkouda.dataframe.DataFrameGroupBy.gb", false]], "gb (arkouda.dataframe.diffaggregate attribute)": [[20, "arkouda.dataframe.DiffAggregate.gb", false]], "gb (arkouda.dataframegroupby attribute)": [[24, "arkouda.DataFrameGroupBy.gb", false]], "gb (arkouda.diffaggregate attribute)": [[24, "arkouda.DiffAggregate.gb", false]], "gb_key_names (arkouda.dataframe.dataframegroupby attribute)": [[20, "arkouda.dataframe.DataFrameGroupBy.gb_key_names", false]], "gb_key_names (arkouda.dataframegroupby attribute)": [[24, "arkouda.DataFrameGroupBy.gb_key_names", false]], "gen_ranges() (in module arkouda)": [[24, "arkouda.gen_ranges", false], [24, "id874", false]], "gen_ranges() (in module arkouda.join)": [[29, "arkouda.join.gen_ranges", false]], "generate_history() (in module arkouda.client)": [[18, "arkouda.client.generate_history", false]], "generate_token() (in module arkouda.security)": [[46, "arkouda.security.generate_token", false]], "generate_username_token_json() (in module arkouda.security)": [[46, "arkouda.security.generate_username_token_json", false]], "generator (class in arkouda)": [[24, "arkouda.Generator", false]], "generator (class in arkouda.random)": [[41, "arkouda.random.Generator", false], [95, "arkouda.random.Generator", false]], "generic_concat() (in module arkouda)": [[24, "arkouda.generic_concat", false]], "generic_concat() (in module arkouda.util)": [[55, "arkouda.util.generic_concat", false]], "generic_moment() (arkouda.scipy.stats.chi2 method)": [[45, "arkouda.scipy.stats.chi2.generic_moment", false]], "get() (arkouda.dtypes.number_format_strings method)": [[21, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.dtypes.seriesdtypes method)": [[21, "arkouda.dtypes.SeriesDTypes.get", false]], "get() (arkouda.number_format_strings method)": [[24, "arkouda.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.numpy.dtypes.number_format_strings method)": [[34, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.numpy.dtypes.seriesdtypes method)": [[34, "arkouda.numpy.dtypes.SeriesDTypes.get", false]], "get() (arkouda.numpy.number_format_strings method)": [[35, "arkouda.numpy.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.numpy.sctypedict method)": [[35, "arkouda.numpy.sctypeDict.get", false]], "get() (arkouda.numpy.sctypes method)": [[35, "arkouda.numpy.sctypes.get", false]], "get() (arkouda.numpy.seriesdtypes method)": [[35, "arkouda.numpy.SeriesDTypes.get", false]], "get() (arkouda.sctypedict method)": [[24, "arkouda.sctypeDict.get", false]], "get() (arkouda.sctypes method)": [[24, "arkouda.sctypes.get", false]], "get() (arkouda.seriesdtypes method)": [[24, "arkouda.SeriesDTypes.get", false]], "get_arkouda_client_directory() (in module arkouda.security)": [[46, "arkouda.security.get_arkouda_client_directory", false]], "get_byteorder() (in module arkouda)": [[24, "arkouda.get_byteorder", false]], "get_byteorder() (in module arkouda.dtypes)": [[21, "arkouda.dtypes.get_byteorder", false]], "get_byteorder() (in module arkouda.numpy)": [[35, "arkouda.numpy.get_byteorder", false]], "get_byteorder() (in module arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.get_byteorder", false]], "get_bytes() (arkouda.strings method)": [[24, "arkouda.Strings.get_bytes", false], [24, "id519", false], [24, "id594", false], [24, "id669", false], [24, "id744", false]], "get_bytes() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.get_bytes", false]], "get_callback() (in module arkouda)": [[24, "arkouda.get_callback", false]], "get_callback() (in module arkouda.util)": [[55, "arkouda.util.get_callback", false]], "get_columns() (in module arkouda)": [[24, "arkouda.get_columns", false]], "get_columns() (in module arkouda.io)": [[27, "arkouda.io.get_columns", false]], "get_config() (in module arkouda.client)": [[18, "arkouda.client.get_config", false]], "get_datasets() (in module arkouda)": [[24, "arkouda.get_datasets", false], [83, "arkouda.get_datasets", false]], "get_datasets() (in module arkouda.io)": [[27, "arkouda.io.get_datasets", false]], "get_directory() (in module arkouda.io_util)": [[28, "arkouda.io_util.get_directory", false]], "get_filetype() (in module arkouda)": [[24, "arkouda.get_filetype", false]], "get_filetype() (in module arkouda.io)": [[27, "arkouda.io.get_filetype", false]], "get_home_directory() (in module arkouda.security)": [[46, "arkouda.security.get_home_directory", false]], "get_jth() (arkouda.segarray method)": [[24, "arkouda.SegArray.get_jth", false]], "get_jth() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.get_jth", false]], "get_jth() (in module arkouda.segarray)": [[96, "arkouda.SegArray.get_jth", false]], "get_length_n() (arkouda.segarray method)": [[24, "arkouda.SegArray.get_length_n", false]], "get_length_n() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.get_length_n", false]], "get_length_n() (in module arkouda.segarray)": [[96, "arkouda.SegArray.get_length_n", false]], "get_lengths() (arkouda.strings method)": [[24, "arkouda.Strings.get_lengths", false], [24, "id520", false], [24, "id595", false], [24, "id670", false], [24, "id745", false]], "get_lengths() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.get_lengths", false]], "get_level_values() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.get_level_values", false]], "get_level_values() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.get_level_values", false]], "get_match() (arkouda.matcher.matcher method)": [[32, "arkouda.matcher.Matcher.get_match", false]], "get_max_array_rank() (in module arkouda.client)": [[18, "arkouda.client.get_max_array_rank", false]], "get_mem_avail() (in module arkouda.client)": [[18, "arkouda.client.get_mem_avail", false]], "get_mem_status() (in module arkouda.client)": [[18, "arkouda.client.get_mem_status", false]], "get_mem_used() (in module arkouda.client)": [[18, "arkouda.client.get_mem_used", false]], "get_ngrams() (arkouda.segarray method)": [[24, "arkouda.SegArray.get_ngrams", false]], "get_ngrams() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.get_ngrams", false]], "get_ngrams() (in module arkouda.segarray)": [[96, "arkouda.SegArray.get_ngrams", false]], "get_null_indices() (in module arkouda)": [[24, "arkouda.get_null_indices", false]], "get_null_indices() (in module arkouda.io)": [[27, "arkouda.io.get_null_indices", false]], "get_offsets() (arkouda.strings method)": [[24, "arkouda.Strings.get_offsets", false], [24, "id521", false], [24, "id596", false], [24, "id671", false], [24, "id746", false]], "get_offsets() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.get_offsets", false]], "get_prefixes() (arkouda.segarray method)": [[24, "arkouda.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.strings method)": [[24, "arkouda.Strings.get_prefixes", false], [24, "id522", false], [24, "id597", false], [24, "id672", false], [24, "id747", false]], "get_prefixes() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.get_prefixes", false]], "get_prefixes() (in module arkouda.segarray)": [[96, "arkouda.SegArray.get_prefixes", false]], "get_server_byteorder() (in module arkouda)": [[24, "arkouda.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.dtypes)": [[21, "arkouda.dtypes.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.numpy)": [[35, "arkouda.numpy.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.get_server_byteorder", false]], "get_server_commands() (in module arkouda.client)": [[18, "arkouda.client.get_server_commands", false]], "get_suffixes() (arkouda.segarray method)": [[24, "arkouda.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.strings method)": [[24, "arkouda.Strings.get_suffixes", false], [24, "id523", false], [24, "id598", false], [24, "id673", false], [24, "id748", false]], "get_suffixes() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.get_suffixes", false]], "get_suffixes() (in module arkouda.segarray)": [[96, "arkouda.SegArray.get_suffixes", false]], "get_username() (in module arkouda.security)": [[46, "arkouda.security.get_username", false]], "getarkoudalogger() (in module arkouda)": [[24, "arkouda.getArkoudaLogger", false]], "getfield() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.getfield", false]], "getfield() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.getfield", false]], "getfield() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.getfield", false]], "getfield() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.getfield", false]], "getfield() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.getfield", false]], "getfield() (arkouda.str_ method)": [[24, "arkouda.str_.getfield", false], [24, "id1301", false]], "getmandatoryrelease() (arkouda.dtypes.annotations method)": [[21, "arkouda.dtypes.annotations.getMandatoryRelease", false]], "getmandatoryrelease() (arkouda.numpy.dtypes.annotations method)": [[34, "arkouda.numpy.dtypes.annotations.getMandatoryRelease", false]], "getoptionalrelease() (arkouda.dtypes.annotations method)": [[21, "arkouda.dtypes.annotations.getOptionalRelease", false]], "getoptionalrelease() (arkouda.numpy.dtypes.annotations method)": [[34, "arkouda.numpy.dtypes.annotations.getOptionalRelease", false]], "greater() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.greater", false]], "greater_equal() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.greater_equal", false]], "group() (arkouda.categorical method)": [[24, "arkouda.Categorical.group", false], [24, "id27", false], [24, "id85", false]], "group() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.group", false]], "group() (arkouda.match.match method)": [[31, "arkouda.match.Match.group", false], [100, "arkouda.match.Match.group", false]], "group() (arkouda.strings method)": [[24, "arkouda.Strings.group", false], [24, "id524", false], [24, "id599", false], [24, "id674", false], [24, "id749", false]], "group() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.group", false]], "groupby (class in arkouda)": [[24, "arkouda.GroupBy", false], [24, "id245", false], [24, "id292", false], [24, "id339", false], [24, "id386", false], [24, "id433", false], [91, "arkouda.GroupBy", false]], "groupby (class in arkouda.groupbyclass)": [[22, "arkouda.groupbyclass.GroupBy", false]], "groupby() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.GroupBy", false], [24, "id123", false], [24, "arkouda.DataFrame.groupby", false], [24, "id144", false]], "groupby() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.GroupBy", false], [20, "arkouda.dataframe.DataFrame.groupby", false]], "groupby() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.groupby", false]], "groupby_reduction_types (class in arkouda)": [[24, "arkouda.GROUPBY_REDUCTION_TYPES", false]], "groupby_reduction_types (class in arkouda.groupbyclass)": [[22, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES", false]], "grouping (arkouda.segarray property)": [[24, "arkouda.SegArray.grouping", false]], "grouping (arkouda.segarray.segarray property)": [[47, "arkouda.segarray.SegArray.grouping", false]], "half (class in arkouda)": [[24, "arkouda.half", false]], "half (class in arkouda.numpy)": [[35, "arkouda.numpy.half", false]], "handled_functions (in module arkouda.array_api.array_object)": [[4, "arkouda.array_api.array_object.HANDLED_FUNCTIONS", false]], "has_repeat_labels() (arkouda.series method)": [[24, "arkouda.Series.has_repeat_labels", false]], "has_repeat_labels() (arkouda.series.series method)": [[48, "arkouda.series.Series.has_repeat_labels", false]], "hash() (arkouda.categorical method)": [[24, "arkouda.Categorical.hash", false], [24, "id28", false], [24, "id86", false]], "hash() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.hash", false]], "hash() (arkouda.segarray method)": [[24, "arkouda.SegArray.hash", false]], "hash() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.hash", false]], "hash() (arkouda.strings method)": [[24, "arkouda.Strings.hash", false], [24, "id525", false], [24, "id600", false], [24, "id675", false], [24, "id750", false]], "hash() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.hash", false]], "hash() (in module arkouda)": [[24, "arkouda.hash", false]], "hash() (in module arkouda.numeric)": [[33, "arkouda.numeric.hash", false]], "hasnans() (arkouda.series method)": [[24, "arkouda.Series.hasnans", false]], "hasnans() (arkouda.series.series method)": [[48, "arkouda.series.Series.hasnans", false]], "head() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.head", false], [24, "id145", false]], "head() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.head", false]], "head() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.head", false]], "head() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.head", false]], "head() (arkouda.groupby method)": [[24, "arkouda.GroupBy.head", false], [24, "id269", false], [24, "id316", false], [24, "id363", false], [24, "id410", false], [24, "id457", false], [91, "arkouda.GroupBy.head", false]], "head() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.head", false]], "head() (arkouda.series method)": [[24, "arkouda.Series.head", false]], "head() (arkouda.series.series method)": [[48, "arkouda.series.Series.head", false]], "head() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.head", false]], "head() (in module arkouda.series)": [[97, "arkouda.Series.head", false]], "hex() (arkouda.akfloat64 method)": [[24, "arkouda.akfloat64.hex", false], [24, "id820", false]], "hex() (arkouda.double method)": [[24, "arkouda.double.hex", false]], "hex() (arkouda.dtypes.float64 method)": [[21, "arkouda.dtypes.float64.hex", false]], "hex() (arkouda.float64 method)": [[24, "arkouda.float64.hex", false]], "hex() (arkouda.float_ method)": [[24, "arkouda.float_.hex", false]], "hex() (arkouda.numpy.double method)": [[35, "arkouda.numpy.double.hex", false]], "hex() (arkouda.numpy.dtypes.float64 method)": [[34, "arkouda.numpy.dtypes.float64.hex", false]], "hex() (arkouda.numpy.float64 method)": [[35, "arkouda.numpy.float64.hex", false]], "hex() (arkouda.numpy.float_ method)": [[35, "arkouda.numpy.float_.hex", false]], "hist_all() (in module arkouda)": [[24, "arkouda.hist_all", false]], "hist_all() (in module arkouda.plotting)": [[40, "arkouda.plotting.hist_all", false]], "histogram() (in module arkouda)": [[24, "arkouda.histogram", false], [24, "id875", false], [92, "arkouda.histogram", false]], "histogram() (in module arkouda.numeric)": [[33, "arkouda.numeric.histogram", false]], "histogram2d() (in module arkouda)": [[24, "arkouda.histogram2d", false]], "histogram2d() (in module arkouda.numeric)": [[33, "arkouda.numeric.histogram2d", false]], "histogramdd() (in module arkouda)": [[24, "arkouda.histogramdd", false]], "histogramdd() (in module arkouda.numeric)": [[33, "arkouda.numeric.histogramdd", false]], "historyretriever (class in arkouda.history)": [[23, "arkouda.history.HistoryRetriever", false]], "hour (arkouda.datetime property)": [[24, "arkouda.Datetime.hour", false], [24, "id185", false], [24, "id218", false]], "hour (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.hour", false]], "iat (arkouda.series property)": [[24, "arkouda.Series.iat", false]], "iat (arkouda.series.series property)": [[48, "arkouda.series.Series.iat", false]], "identity() (in module arkouda.util)": [[55, "arkouda.util.identity", false]], "iexp (arkouda.finfo attribute)": [[24, "arkouda.finfo.iexp", false]], "iexp (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.iexp", false]], "ignore (arkouda.errormode attribute)": [[24, "arkouda.ErrorMode.ignore", false]], "ignore (arkouda.numeric.errormode attribute)": [[33, "arkouda.numeric.ErrorMode.ignore", false]], "iinfo (class in arkouda)": [[24, "arkouda.iinfo", false]], "iinfo (class in arkouda.numpy)": [[35, "arkouda.numpy.iinfo", false]], "iinfo() (in module arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.iinfo", false]], "iinfo_object (class in arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.iinfo_object", false]], "iloc (arkouda.series property)": [[24, "arkouda.Series.iloc", false]], "iloc (arkouda.series.series property)": [[48, "arkouda.series.Series.iloc", false]], "imag() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.imag", false]], "imag() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.imag", false]], "imag() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.imag", false]], "imag() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.imag", false]], "imag() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.imag", false]], "imag() (arkouda.str_ method)": [[24, "arkouda.str_.imag", false], [24, "id1302", false]], "imag() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.imag", false]], "implements_numpy() (in module arkouda.array_api.array_object)": [[4, "arkouda.array_api.array_object.implements_numpy", false]], "import_data() (in module arkouda)": [[24, "arkouda.import_data", false], [83, "arkouda.import_data", false]], "import_data() (in module arkouda.io)": [[27, "arkouda.io.import_data", false]], "in1d() (arkouda.categorical method)": [[24, "arkouda.Categorical.in1d", false], [24, "id29", false], [24, "id87", false]], "in1d() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.in1d", false]], "in1d() (in module arkouda)": [[24, "arkouda.in1d", false], [24, "id878", false], [24, "id879", false], [98, "arkouda.in1d", false]], "in1d() (in module arkouda.pdarraysetops)": [[39, "arkouda.pdarraysetops.in1d", false]], "in1d_intervals() (in module arkouda)": [[24, "arkouda.in1d_intervals", false]], "in1d_intervals() (in module arkouda.alignment)": [[3, "arkouda.alignment.in1d_intervals", false]], "index (arkouda.dataframe property)": [[24, "arkouda.DataFrame.index", false], [24, "id146", false]], "index (arkouda.dataframe.dataframe property)": [[20, "arkouda.dataframe.DataFrame.index", false]], "index (arkouda.index property)": [[24, "arkouda.Index.index", false]], "index (arkouda.index.index property)": [[25, "arkouda.index.Index.index", false]], "index (arkouda.index.multiindex property)": [[25, "arkouda.index.MultiIndex.index", false]], "index (arkouda.multiindex property)": [[24, "arkouda.MultiIndex.index", false]], "index (class in arkouda)": [[24, "arkouda.Index", false], [84, "arkouda.Index", false]], "index (class in arkouda.index)": [[25, "arkouda.index.Index", false]], "index() (arkouda.dtypes.arkouda_supported_floats method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_FLOATS.index", false]], "index() (arkouda.dtypes.arkouda_supported_ints method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_INTS.index", false]], "index() (arkouda.dtypes.arkouda_supported_numbers method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_NUMBERS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_floats method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_ints method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_numbers method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS.index", false]], "index() (arkouda.numpy.scalartype method)": [[35, "arkouda.numpy.ScalarType.index", false]], "index() (arkouda.scalartype method)": [[24, "arkouda.ScalarType.index", false]], "indexof1d() (in module arkouda)": [[24, "arkouda.indexof1d", false]], "indexof1d() (in module arkouda.pdarraysetops)": [[39, "arkouda.pdarraysetops.indexof1d", false]], "indices (arkouda.array_api.set_functions.uniqueallresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueAllResult.indices", false]], "indices (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.indices", false]], "inexact (class in arkouda)": [[24, "arkouda.inexact", false]], "inexact (class in arkouda.numpy)": [[35, "arkouda.numpy.inexact", false]], "inf (in module arkouda)": [[24, "arkouda.Inf", false], [24, "arkouda.inf", false]], "inf (in module arkouda.numpy)": [[35, "arkouda.numpy.Inf", false], [35, "arkouda.numpy.inf", false]], "inferred_type (arkouda.categorical property)": [[24, "arkouda.Categorical.inferred_type", false], [24, "id30", false], [24, "id88", false]], "inferred_type (arkouda.categorical.categorical property)": [[17, "arkouda.categorical.Categorical.inferred_type", false]], "inferred_type (arkouda.index property)": [[24, "arkouda.Index.inferred_type", false]], "inferred_type (arkouda.index.index property)": [[25, "arkouda.index.Index.inferred_type", false]], "inferred_type (arkouda.index.multiindex property)": [[25, "arkouda.index.MultiIndex.inferred_type", false]], "inferred_type (arkouda.multiindex property)": [[24, "arkouda.MultiIndex.inferred_type", false]], "inferred_type (arkouda.pdarray property)": [[24, "arkouda.pdarray.inferred_type", false], [24, "id1014", false], [24, "id1084", false], [24, "id1154", false], [24, "id1224", false], [24, "id944", false]], "inferred_type (arkouda.pdarrayclass.pdarray property)": [[36, "arkouda.pdarrayclass.pdarray.inferred_type", false]], "inferred_type (arkouda.strings property)": [[24, "arkouda.Strings.inferred_type", false], [24, "id526", false], [24, "id601", false], [24, "id676", false], [24, "id751", false]], "inferred_type (arkouda.strings.strings property)": [[52, "arkouda.strings.Strings.inferred_type", false]], "infinity (in module arkouda)": [[24, "arkouda.Infinity", false]], "infinity (in module arkouda.numpy)": [[35, "arkouda.numpy.Infinity", false]], "info (arkouda.dataframe property)": [[24, "arkouda.DataFrame.info", false], [24, "id147", false]], "info (arkouda.dataframe.dataframe property)": [[20, "arkouda.dataframe.DataFrame.info", false]], "info (arkouda.logger.loglevel attribute)": [[30, "arkouda.logger.LogLevel.INFO", false]], "info (arkouda.loglevel attribute)": [[24, "arkouda.LogLevel.INFO", false]], "info() (arkouda.categorical method)": [[24, "arkouda.Categorical.info", false], [24, "id31", false], [24, "id89", false]], "info() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.info", false]], "info() (arkouda.pdarray method)": [[24, "arkouda.pdarray.info", false], [24, "id1015", false], [24, "id1085", false], [24, "id1155", false], [24, "id1225", false], [24, "id945", false]], "info() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.info", false]], "info() (arkouda.strings method)": [[24, "arkouda.Strings.info", false], [24, "id527", false], [24, "id602", false], [24, "id677", false], [24, "id752", false]], "info() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.info", false]], "information() (in module arkouda)": [[24, "arkouda.information", false]], "information() (in module arkouda.infoclass)": [[26, "arkouda.infoclass.information", false]], "infty (in module arkouda)": [[24, "arkouda.infty", false]], "infty (in module arkouda.numpy)": [[35, "arkouda.numpy.infty", false]], "int() (arkouda.dtype method)": [[24, "arkouda.DType.INT", false]], "int() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.INT", false]], "int() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.INT", false]], "int() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.INT", false]], "int16 (class in arkouda)": [[24, "arkouda.int16", false]], "int16 (class in arkouda.dtypes)": [[21, "arkouda.dtypes.int16", false]], "int16 (class in arkouda.numpy)": [[35, "arkouda.numpy.int16", false]], "int16 (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.int16", false]], "int16() (arkouda.dtype method)": [[24, "arkouda.DType.INT16", false]], "int16() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.INT16", false]], "int16() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.INT16", false]], "int16() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.INT16", false]], "int16dtype (class in arkouda)": [[24, "arkouda.Int16DType", false]], "int16dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.Int16DType", false]], "int32 (class in arkouda)": [[24, "arkouda.int32", false]], "int32 (class in arkouda.dtypes)": [[21, "arkouda.dtypes.int32", false]], "int32 (class in arkouda.numpy)": [[35, "arkouda.numpy.int32", false]], "int32 (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.int32", false]], "int32() (arkouda.dtype method)": [[24, "arkouda.DType.INT32", false]], "int32() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.INT32", false]], "int32() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.INT32", false]], "int32() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.INT32", false]], "int32dtype (class in arkouda)": [[24, "arkouda.Int32DType", false]], "int32dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.Int32DType", false]], "int64 (class in arkouda)": [[24, "arkouda.int64", false], [24, "id880", false]], "int64 (class in arkouda.dtypes)": [[21, "arkouda.dtypes.int64", false]], "int64 (class in arkouda.numpy)": [[35, "arkouda.numpy.int64", false]], "int64 (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.int64", false]], "int64() (arkouda.dtype method)": [[24, "arkouda.DType.INT64", false]], "int64() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.INT64", false]], "int64() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.INT64", false]], "int64() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.INT64", false]], "int64dtype (class in arkouda)": [[24, "arkouda.Int64DType", false]], "int64dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.Int64DType", false]], "int8 (class in arkouda)": [[24, "arkouda.int8", false]], "int8 (class in arkouda.dtypes)": [[21, "arkouda.dtypes.int8", false]], "int8 (class in arkouda.numpy)": [[35, "arkouda.numpy.int8", false]], "int8 (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.int8", false]], "int8() (arkouda.dtype method)": [[24, "arkouda.DType.INT8", false]], "int8() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.INT8", false]], "int8() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.INT8", false]], "int8() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.INT8", false]], "int8dtype (class in arkouda)": [[24, "arkouda.Int8DType", false]], "int8dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.Int8DType", false]], "int_ (class in arkouda)": [[24, "arkouda.int_", false]], "int_ (class in arkouda.numpy)": [[35, "arkouda.numpy.int_", false]], "int_scalars (class in arkouda)": [[24, "arkouda.int_scalars", false], [24, "id900", false], [24, "id901", false]], "int_scalars (class in arkouda.dtypes)": [[21, "arkouda.dtypes.int_scalars", false]], "int_scalars (class in arkouda.numpy)": [[35, "arkouda.numpy.int_scalars", false]], "int_scalars (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.int_scalars", false]], "intc (class in arkouda)": [[24, "arkouda.intc", false]], "intc (class in arkouda.numpy)": [[35, "arkouda.numpy.intc", false]], "intdtype (class in arkouda)": [[24, "arkouda.IntDType", false]], "intdtype (class in arkouda.numpy)": [[35, "arkouda.numpy.IntDType", false]], "integer (class in arkouda)": [[24, "arkouda.integer", false]], "integer (class in arkouda.numpy)": [[35, "arkouda.numpy.integer", false]], "integers() (arkouda.generator method)": [[24, "arkouda.Generator.integers", false]], "integers() (arkouda.random.generator method)": [[41, "arkouda.random.Generator.integers", false]], "integers() (in module arkouda.random.generator)": [[95, "arkouda.random.Generator.integers", false]], "intersect() (arkouda.segarray method)": [[24, "arkouda.SegArray.intersect", false]], "intersect() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.intersect", false]], "intersect() (in module arkouda)": [[24, "arkouda.intersect", false]], "intersect() (in module arkouda.dataframe)": [[20, "arkouda.dataframe.intersect", false]], "intersect() (in module arkouda.segarray)": [[96, "arkouda.SegArray.intersect", false]], "intersect1d() (in module arkouda)": [[24, "arkouda.intersect1d", false], [98, "arkouda.intersect1d", false]], "intersect1d() (in module arkouda.pdarraysetops)": [[39, "arkouda.pdarraysetops.intersect1d", false]], "intersection() (arkouda.arkouda_supported_dtypes method)": [[24, "arkouda.ARKOUDA_SUPPORTED_DTYPES.intersection", false]], "intersection() (arkouda.dtypeobjects method)": [[24, "arkouda.DTypeObjects.intersection", false]], "intersection() (arkouda.dtypes method)": [[24, "arkouda.DTypes.intersection", false]], "intersection() (arkouda.dtypes.arkouda_supported_dtypes method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.intersection", false]], "intersection() (arkouda.dtypes.dtypeobjects method)": [[21, "arkouda.dtypes.DTypeObjects.intersection", false]], "intersection() (arkouda.dtypes.dtypes method)": [[21, "arkouda.dtypes.DTypes.intersection", false]], "intersection() (arkouda.dtypes.inttypes method)": [[21, "arkouda.dtypes.intTypes.intersection", false]], "intersection() (arkouda.dtypes.numericdtypes method)": [[21, "arkouda.dtypes.NumericDTypes.intersection", false]], "intersection() (arkouda.dtypes.scalardtypes method)": [[21, "arkouda.dtypes.ScalarDTypes.intersection", false]], "intersection() (arkouda.groupby_reduction_types method)": [[24, "arkouda.GROUPBY_REDUCTION_TYPES.intersection", false]], "intersection() (arkouda.groupbyclass.groupby_reduction_types method)": [[22, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.intersection", false]], "intersection() (arkouda.inttypes method)": [[24, "arkouda.intTypes.intersection", false], [24, "id885", false], [24, "id894", false]], "intersection() (arkouda.numericdtypes method)": [[24, "arkouda.NumericDTypes.intersection", false]], "intersection() (arkouda.numpy.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.intersection", false]], "intersection() (arkouda.numpy.dtypeobjects method)": [[35, "arkouda.numpy.DTypeObjects.intersection", false]], "intersection() (arkouda.numpy.dtypes method)": [[35, "arkouda.numpy.DTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.intersection", false]], "intersection() (arkouda.numpy.dtypes.dtypeobjects method)": [[34, "arkouda.numpy.dtypes.DTypeObjects.intersection", false]], "intersection() (arkouda.numpy.dtypes.dtypes method)": [[34, "arkouda.numpy.dtypes.DTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.inttypes method)": [[34, "arkouda.numpy.dtypes.intTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.numericdtypes method)": [[34, "arkouda.numpy.dtypes.NumericDTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.scalardtypes method)": [[34, "arkouda.numpy.dtypes.ScalarDTypes.intersection", false]], "intersection() (arkouda.numpy.inttypes method)": [[35, "arkouda.numpy.intTypes.intersection", false]], "intersection() (arkouda.numpy.numericdtypes method)": [[35, "arkouda.numpy.NumericDTypes.intersection", false]], "intersection() (arkouda.numpy.scalardtypes method)": [[35, "arkouda.numpy.ScalarDTypes.intersection", false]], "intersection() (arkouda.scalardtypes method)": [[24, "arkouda.ScalarDTypes.intersection", false]], "interval_lookup() (in module arkouda)": [[24, "arkouda.interval_lookup", false]], "interval_lookup() (in module arkouda.alignment)": [[3, "arkouda.alignment.interval_lookup", false]], "intp (class in arkouda)": [[24, "arkouda.intp", false]], "intp (class in arkouda.numpy)": [[35, "arkouda.numpy.intp", false]], "inttypes (class in arkouda)": [[24, "arkouda.intTypes", false], [24, "id882", false], [24, "id891", false]], "inttypes (class in arkouda.dtypes)": [[21, "arkouda.dtypes.intTypes", false]], "inttypes (class in arkouda.numpy)": [[35, "arkouda.numpy.intTypes", false]], "inttypes (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.intTypes", false]], "intx() (in module arkouda)": [[24, "arkouda.intx", false]], "intx() (in module arkouda.dataframe)": [[20, "arkouda.dataframe.intx", false]], "inverse_indices (arkouda.array_api.set_functions.uniqueallresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueAllResult.inverse_indices", false]], "inverse_indices (arkouda.array_api.set_functions.uniqueinverseresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueInverseResult.inverse_indices", false]], "invert_permutation() (in module arkouda)": [[24, "arkouda.invert_permutation", false]], "invert_permutation() (in module arkouda.dataframe)": [[20, "arkouda.dataframe.invert_permutation", false]], "invert_permutation() (in module arkouda.util)": [[55, "arkouda.util.invert_permutation", false]], "ip_address() (in module arkouda)": [[24, "arkouda.ip_address", false]], "ip_address() (in module arkouda.client_dtypes)": [[19, "arkouda.client_dtypes.ip_address", false]], "ipv4 (class in arkouda)": [[24, "arkouda.IPv4", false]], "ipv4 (class in arkouda.client_dtypes)": [[19, "arkouda.client_dtypes.IPv4", false]], "is_cosorted() (in module arkouda)": [[24, "arkouda.is_cosorted", false]], "is_cosorted() (in module arkouda.alignment)": [[3, "arkouda.alignment.is_cosorted", false]], "is_float() (in module arkouda.util)": [[55, "arkouda.util.is_float", false]], "is_int() (in module arkouda.util)": [[55, "arkouda.util.is_int", false]], "is_integer() (arkouda.akfloat64 method)": [[24, "arkouda.akfloat64.is_integer", false], [24, "id821", false]], "is_integer() (arkouda.double method)": [[24, "arkouda.double.is_integer", false]], "is_integer() (arkouda.dtypes.float16 method)": [[21, "arkouda.dtypes.float16.is_integer", false]], "is_integer() (arkouda.dtypes.float32 method)": [[21, "arkouda.dtypes.float32.is_integer", false]], "is_integer() (arkouda.dtypes.float64 method)": [[21, "arkouda.dtypes.float64.is_integer", false]], "is_integer() (arkouda.float16 method)": [[24, "arkouda.float16.is_integer", false]], "is_integer() (arkouda.float32 method)": [[24, "arkouda.float32.is_integer", false]], "is_integer() (arkouda.float64 method)": [[24, "arkouda.float64.is_integer", false]], "is_integer() (arkouda.float_ method)": [[24, "arkouda.float_.is_integer", false]], "is_integer() (arkouda.half method)": [[24, "arkouda.half.is_integer", false]], "is_integer() (arkouda.integer method)": [[24, "arkouda.integer.is_integer", false]], "is_integer() (arkouda.longdouble method)": [[24, "arkouda.longdouble.is_integer", false]], "is_integer() (arkouda.longfloat method)": [[24, "arkouda.longfloat.is_integer", false]], "is_integer() (arkouda.numpy.double method)": [[35, "arkouda.numpy.double.is_integer", false]], "is_integer() (arkouda.numpy.dtypes.float16 method)": [[34, "arkouda.numpy.dtypes.float16.is_integer", false]], "is_integer() (arkouda.numpy.dtypes.float32 method)": [[34, "arkouda.numpy.dtypes.float32.is_integer", false]], "is_integer() (arkouda.numpy.dtypes.float64 method)": [[34, "arkouda.numpy.dtypes.float64.is_integer", false]], "is_integer() (arkouda.numpy.float16 method)": [[35, "arkouda.numpy.float16.is_integer", false]], "is_integer() (arkouda.numpy.float32 method)": [[35, "arkouda.numpy.float32.is_integer", false]], "is_integer() (arkouda.numpy.float64 method)": [[35, "arkouda.numpy.float64.is_integer", false]], "is_integer() (arkouda.numpy.float_ method)": [[35, "arkouda.numpy.float_.is_integer", false]], "is_integer() (arkouda.numpy.half method)": [[35, "arkouda.numpy.half.is_integer", false]], "is_integer() (arkouda.numpy.integer method)": [[35, "arkouda.numpy.integer.is_integer", false]], "is_integer() (arkouda.numpy.longdouble method)": [[35, "arkouda.numpy.longdouble.is_integer", false]], "is_integer() (arkouda.numpy.longfloat method)": [[35, "arkouda.numpy.longfloat.is_integer", false]], "is_integer() (arkouda.numpy.single method)": [[35, "arkouda.numpy.single.is_integer", false]], "is_integer() (arkouda.single method)": [[24, "arkouda.single.is_integer", false]], "is_ipv4() (in module arkouda)": [[24, "arkouda.is_ipv4", false]], "is_ipv4() (in module arkouda.client_dtypes)": [[19, "arkouda.client_dtypes.is_ipv4", false]], "is_ipv6() (in module arkouda)": [[24, "arkouda.is_ipv6", false]], "is_ipv6() (in module arkouda.client_dtypes)": [[19, "arkouda.client_dtypes.is_ipv6", false]], "is_leap_year (arkouda.datetime property)": [[24, "arkouda.Datetime.is_leap_year", false], [24, "id186", false], [24, "id219", false]], "is_leap_year (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.is_leap_year", false]], "is_numeric() (in module arkouda.util)": [[55, "arkouda.util.is_numeric", false]], "is_registered() (arkouda.categorical method)": [[24, "arkouda.Categorical.is_registered", false], [24, "id32", false], [24, "id90", false]], "is_registered() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.is_registered", false]], "is_registered() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.is_registered", false], [24, "id148", false]], "is_registered() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.is_registered", false]], "is_registered() (arkouda.datetime method)": [[24, "arkouda.Datetime.is_registered", false], [24, "id187", false], [24, "id220", false]], "is_registered() (arkouda.groupby method)": [[24, "arkouda.GroupBy.is_registered", false], [24, "id270", false], [24, "id317", false], [24, "id364", false], [24, "id411", false], [24, "id458", false], [91, "arkouda.GroupBy.is_registered", false]], "is_registered() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.is_registered", false]], "is_registered() (arkouda.index method)": [[24, "arkouda.Index.is_registered", false]], "is_registered() (arkouda.index.index method)": [[25, "arkouda.index.Index.is_registered", false]], "is_registered() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.is_registered", false]], "is_registered() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.is_registered", false]], "is_registered() (arkouda.pdarray method)": [[24, "arkouda.pdarray.is_registered", false], [24, "id1016", false], [24, "id1086", false], [24, "id1156", false], [24, "id1226", false], [24, "id946", false]], "is_registered() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.is_registered", false]], "is_registered() (arkouda.segarray method)": [[24, "arkouda.SegArray.is_registered", false]], "is_registered() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.is_registered", false]], "is_registered() (arkouda.series method)": [[24, "arkouda.Series.is_registered", false]], "is_registered() (arkouda.series.series method)": [[48, "arkouda.series.Series.is_registered", false]], "is_registered() (arkouda.strings method)": [[24, "arkouda.Strings.is_registered", false], [24, "id528", false], [24, "id603", false], [24, "id678", false], [24, "id753", false]], "is_registered() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.is_registered", false]], "is_registered() (arkouda.timeclass.datetime method)": [[54, "arkouda.timeclass.Datetime.is_registered", false]], "is_registered() (arkouda.timeclass.timedelta method)": [[54, "arkouda.timeclass.Timedelta.is_registered", false]], "is_registered() (arkouda.timedelta method)": [[24, "arkouda.Timedelta.is_registered", false], [24, "id797", false]], "is_registered() (in module arkouda)": [[24, "arkouda.is_registered", false]], "is_registered() (in module arkouda.util)": [[55, "arkouda.util.is_registered", false]], "is_sorted() (arkouda.pdarray method)": [[24, "arkouda.pdarray.is_sorted", false], [24, "id1017", false], [24, "id1087", false], [24, "id1157", false], [24, "id1227", false], [24, "id947", false], [92, "arkouda.pdarray.is_sorted", false]], "is_sorted() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.is_sorted", false]], "is_sorted() (in module arkouda)": [[24, "arkouda.is_sorted", false], [24, "id905", false], [86, "arkouda.is_sorted", false]], "is_sorted() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.is_sorted", false]], "isalnum() (arkouda.strings method)": [[24, "arkouda.Strings.isalnum", false], [24, "id529", false], [24, "id604", false], [24, "id679", false], [24, "id754", false]], "isalnum() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.isalnum", false]], "isalpha() (arkouda.strings method)": [[24, "arkouda.Strings.isalpha", false], [24, "id530", false], [24, "id605", false], [24, "id680", false], [24, "id755", false]], "isalpha() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.isalpha", false]], "isdecimal() (arkouda.strings method)": [[24, "arkouda.Strings.isdecimal", false], [24, "id531", false], [24, "id606", false], [24, "id681", false], [24, "id756", false]], "isdecimal() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.isdecimal", false]], "isdigit() (arkouda.strings method)": [[24, "arkouda.Strings.isdigit", false], [24, "id532", false], [24, "id607", false], [24, "id682", false], [24, "id757", false]], "isdigit() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.isdigit", false]], "isdisjoint() (arkouda.arkouda_supported_dtypes method)": [[24, "arkouda.ARKOUDA_SUPPORTED_DTYPES.isdisjoint", false]], "isdisjoint() (arkouda.dtypeobjects method)": [[24, "arkouda.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.dtypes method)": [[24, "arkouda.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.arkouda_supported_dtypes method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.dtypeobjects method)": [[21, "arkouda.dtypes.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.dtypes method)": [[21, "arkouda.dtypes.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.inttypes method)": [[21, "arkouda.dtypes.intTypes.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.numericdtypes method)": [[21, "arkouda.dtypes.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.scalardtypes method)": [[21, "arkouda.dtypes.ScalarDTypes.isdisjoint", false]], "isdisjoint() (arkouda.groupby_reduction_types method)": [[24, "arkouda.GROUPBY_REDUCTION_TYPES.isdisjoint", false]], "isdisjoint() (arkouda.groupbyclass.groupby_reduction_types method)": [[22, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.isdisjoint", false]], "isdisjoint() (arkouda.inttypes method)": [[24, "arkouda.intTypes.isdisjoint", false], [24, "id886", false], [24, "id895", false]], "isdisjoint() (arkouda.numericdtypes method)": [[24, "arkouda.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypeobjects method)": [[35, "arkouda.numpy.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes method)": [[35, "arkouda.numpy.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.dtypeobjects method)": [[34, "arkouda.numpy.dtypes.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.dtypes method)": [[34, "arkouda.numpy.dtypes.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.inttypes method)": [[34, "arkouda.numpy.dtypes.intTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.numericdtypes method)": [[34, "arkouda.numpy.dtypes.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.scalardtypes method)": [[34, "arkouda.numpy.dtypes.ScalarDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.inttypes method)": [[35, "arkouda.numpy.intTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.numericdtypes method)": [[35, "arkouda.numpy.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.scalardtypes method)": [[35, "arkouda.numpy.ScalarDTypes.isdisjoint", false]], "isdisjoint() (arkouda.scalardtypes method)": [[24, "arkouda.ScalarDTypes.isdisjoint", false]], "isdtype() (in module arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.isdtype", false]], "isempty() (arkouda.strings method)": [[24, "arkouda.Strings.isempty", false], [24, "id533", false], [24, "id608", false], [24, "id683", false], [24, "id758", false]], "isempty() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.isempty", false]], "isfinite() (in module arkouda)": [[24, "arkouda.isfinite", false]], "isfinite() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.isfinite", false]], "isfinite() (in module arkouda.numeric)": [[33, "arkouda.numeric.isfinite", false]], "isin() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.isin", false], [24, "id149", false]], "isin() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.isin", false]], "isin() (arkouda.series method)": [[24, "arkouda.Series.isin", false]], "isin() (arkouda.series.series method)": [[48, "arkouda.series.Series.isin", false]], "isinf() (in module arkouda)": [[24, "arkouda.isinf", false]], "isinf() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.isinf", false]], "isinf() (in module arkouda.numeric)": [[33, "arkouda.numeric.isinf", false]], "islower() (arkouda.strings method)": [[24, "arkouda.Strings.islower", false], [24, "id534", false], [24, "id609", false], [24, "id684", false], [24, "id759", false]], "islower() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.islower", false]], "isna() (arkouda.categorical method)": [[24, "arkouda.Categorical.isna", false], [24, "id33", false], [24, "id91", false]], "isna() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.isna", false]], "isna() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.isna", false], [24, "id150", false]], "isna() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.isna", false]], "isna() (arkouda.series method)": [[24, "arkouda.Series.isna", false]], "isna() (arkouda.series.series method)": [[48, "arkouda.series.Series.isna", false]], "isnan() (in module arkouda)": [[24, "arkouda.isnan", false], [24, "id906", false]], "isnan() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.isnan", false]], "isnan() (in module arkouda.numeric)": [[33, "arkouda.numeric.isnan", false]], "isnull() (arkouda.series method)": [[24, "arkouda.Series.isnull", false]], "isnull() (arkouda.series.series method)": [[48, "arkouda.series.Series.isnull", false]], "isocalendar() (arkouda.datetime method)": [[24, "arkouda.Datetime.isocalendar", false], [24, "id188", false], [24, "id221", false]], "isocalendar() (arkouda.timeclass.datetime method)": [[54, "arkouda.timeclass.Datetime.isocalendar", false]], "isscalar() (in module arkouda)": [[24, "arkouda.isscalar", false]], "isscalar() (in module arkouda.numpy)": [[35, "arkouda.numpy.isscalar", false]], "issctype() (in module arkouda)": [[24, "arkouda.issctype", false]], "issctype() (in module arkouda.numpy)": [[35, "arkouda.numpy.issctype", false]], "isspace() (arkouda.strings method)": [[24, "arkouda.Strings.isspace", false], [24, "id535", false], [24, "id610", false], [24, "id685", false], [24, "id760", false]], "isspace() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.isspace", false]], "issubclass_() (in module arkouda)": [[24, "arkouda.issubclass_", false]], "issubclass_() (in module arkouda.numpy)": [[35, "arkouda.numpy.issubclass_", false]], "issubdtype() (in module arkouda)": [[24, "arkouda.issubdtype", false]], "issubdtype() (in module arkouda.numpy)": [[35, "arkouda.numpy.issubdtype", false]], "issubset() (arkouda.arkouda_supported_dtypes method)": [[24, "arkouda.ARKOUDA_SUPPORTED_DTYPES.issubset", false]], "issubset() (arkouda.dtypeobjects method)": [[24, "arkouda.DTypeObjects.issubset", false]], "issubset() (arkouda.dtypes method)": [[24, "arkouda.DTypes.issubset", false]], "issubset() (arkouda.dtypes.arkouda_supported_dtypes method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.issubset", false]], "issubset() (arkouda.dtypes.dtypeobjects method)": [[21, "arkouda.dtypes.DTypeObjects.issubset", false]], "issubset() (arkouda.dtypes.dtypes method)": [[21, "arkouda.dtypes.DTypes.issubset", false]], "issubset() (arkouda.dtypes.inttypes method)": [[21, "arkouda.dtypes.intTypes.issubset", false]], "issubset() (arkouda.dtypes.numericdtypes method)": [[21, "arkouda.dtypes.NumericDTypes.issubset", false]], "issubset() (arkouda.dtypes.scalardtypes method)": [[21, "arkouda.dtypes.ScalarDTypes.issubset", false]], "issubset() (arkouda.groupby_reduction_types method)": [[24, "arkouda.GROUPBY_REDUCTION_TYPES.issubset", false]], "issubset() (arkouda.groupbyclass.groupby_reduction_types method)": [[22, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.issubset", false]], "issubset() (arkouda.inttypes method)": [[24, "arkouda.intTypes.issubset", false], [24, "id887", false], [24, "id896", false]], "issubset() (arkouda.numericdtypes method)": [[24, "arkouda.NumericDTypes.issubset", false]], "issubset() (arkouda.numpy.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.issubset", false]], "issubset() (arkouda.numpy.dtypeobjects method)": [[35, "arkouda.numpy.DTypeObjects.issubset", false]], "issubset() (arkouda.numpy.dtypes method)": [[35, "arkouda.numpy.DTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.issubset", false]], "issubset() (arkouda.numpy.dtypes.dtypeobjects method)": [[34, "arkouda.numpy.dtypes.DTypeObjects.issubset", false]], "issubset() (arkouda.numpy.dtypes.dtypes method)": [[34, "arkouda.numpy.dtypes.DTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.inttypes method)": [[34, "arkouda.numpy.dtypes.intTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.numericdtypes method)": [[34, "arkouda.numpy.dtypes.NumericDTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.scalardtypes method)": [[34, "arkouda.numpy.dtypes.ScalarDTypes.issubset", false]], "issubset() (arkouda.numpy.inttypes method)": [[35, "arkouda.numpy.intTypes.issubset", false]], "issubset() (arkouda.numpy.numericdtypes method)": [[35, "arkouda.numpy.NumericDTypes.issubset", false]], "issubset() (arkouda.numpy.scalardtypes method)": [[35, "arkouda.numpy.ScalarDTypes.issubset", false]], "issubset() (arkouda.scalardtypes method)": [[24, "arkouda.ScalarDTypes.issubset", false]], "issuperset() (arkouda.arkouda_supported_dtypes method)": [[24, "arkouda.ARKOUDA_SUPPORTED_DTYPES.issuperset", false]], "issuperset() (arkouda.dtypeobjects method)": [[24, "arkouda.DTypeObjects.issuperset", false]], "issuperset() (arkouda.dtypes method)": [[24, "arkouda.DTypes.issuperset", false]], "issuperset() (arkouda.dtypes.arkouda_supported_dtypes method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.issuperset", false]], "issuperset() (arkouda.dtypes.dtypeobjects method)": [[21, "arkouda.dtypes.DTypeObjects.issuperset", false]], "issuperset() (arkouda.dtypes.dtypes method)": [[21, "arkouda.dtypes.DTypes.issuperset", false]], "issuperset() (arkouda.dtypes.inttypes method)": [[21, "arkouda.dtypes.intTypes.issuperset", false]], "issuperset() (arkouda.dtypes.numericdtypes method)": [[21, "arkouda.dtypes.NumericDTypes.issuperset", false]], "issuperset() (arkouda.dtypes.scalardtypes method)": [[21, "arkouda.dtypes.ScalarDTypes.issuperset", false]], "issuperset() (arkouda.groupby_reduction_types method)": [[24, "arkouda.GROUPBY_REDUCTION_TYPES.issuperset", false]], "issuperset() (arkouda.groupbyclass.groupby_reduction_types method)": [[22, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.issuperset", false]], "issuperset() (arkouda.inttypes method)": [[24, "arkouda.intTypes.issuperset", false], [24, "id888", false], [24, "id897", false]], "issuperset() (arkouda.numericdtypes method)": [[24, "arkouda.NumericDTypes.issuperset", false]], "issuperset() (arkouda.numpy.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.issuperset", false]], "issuperset() (arkouda.numpy.dtypeobjects method)": [[35, "arkouda.numpy.DTypeObjects.issuperset", false]], "issuperset() (arkouda.numpy.dtypes method)": [[35, "arkouda.numpy.DTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.dtypeobjects method)": [[34, "arkouda.numpy.dtypes.DTypeObjects.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.dtypes method)": [[34, "arkouda.numpy.dtypes.DTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.inttypes method)": [[34, "arkouda.numpy.dtypes.intTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.numericdtypes method)": [[34, "arkouda.numpy.dtypes.NumericDTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.scalardtypes method)": [[34, "arkouda.numpy.dtypes.ScalarDTypes.issuperset", false]], "issuperset() (arkouda.numpy.inttypes method)": [[35, "arkouda.numpy.intTypes.issuperset", false]], "issuperset() (arkouda.numpy.numericdtypes method)": [[35, "arkouda.numpy.NumericDTypes.issuperset", false]], "issuperset() (arkouda.numpy.scalardtypes method)": [[35, "arkouda.numpy.ScalarDTypes.issuperset", false]], "issuperset() (arkouda.scalardtypes method)": [[24, "arkouda.ScalarDTypes.issuperset", false]], "issupportedfloat() (in module arkouda)": [[24, "arkouda.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.dtypes)": [[21, "arkouda.dtypes.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.numpy)": [[35, "arkouda.numpy.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.isSupportedFloat", false]], "issupportedint() (in module arkouda)": [[24, "arkouda.isSupportedInt", false], [24, "id902", false], [24, "id903", false], [24, "id904", false]], "issupportedint() (in module arkouda.dtypes)": [[21, "arkouda.dtypes.isSupportedInt", false]], "issupportedint() (in module arkouda.numpy)": [[35, "arkouda.numpy.isSupportedInt", false]], "issupportedint() (in module arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.isSupportedInt", false]], "issupportednumber() (in module arkouda)": [[24, "arkouda.isSupportedNumber", false]], "issupportednumber() (in module arkouda.dtypes)": [[21, "arkouda.dtypes.isSupportedNumber", false]], "issupportednumber() (in module arkouda.numpy)": [[35, "arkouda.numpy.isSupportedNumber", false]], "issupportednumber() (in module arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.isSupportedNumber", false]], "istitle() (arkouda.strings method)": [[24, "arkouda.Strings.istitle", false], [24, "id536", false], [24, "id611", false], [24, "id686", false], [24, "id761", false]], "istitle() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.istitle", false]], "isupper() (arkouda.strings method)": [[24, "arkouda.Strings.isupper", false], [24, "id537", false], [24, "id612", false], [24, "id687", false], [24, "id762", false]], "isupper() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.isupper", false]], "item() (arkouda.array_api.array method)": [[8, "arkouda.array_api.Array.item", false]], "item() (arkouda.array_api.array_object.array method)": [[4, "arkouda.array_api.array_object.Array.item", false]], "item() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.item", false]], "item() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.item", false]], "item() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.item", false]], "item() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.item", false]], "item() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.item", false]], "item() (arkouda.str_ method)": [[24, "arkouda.str_.item", false], [24, "id1303", false]], "items() (arkouda.dtypes.number_format_strings method)": [[21, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.dtypes.seriesdtypes method)": [[21, "arkouda.dtypes.SeriesDTypes.items", false]], "items() (arkouda.number_format_strings method)": [[24, "arkouda.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.numpy.dtypes.number_format_strings method)": [[34, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.numpy.dtypes.seriesdtypes method)": [[34, "arkouda.numpy.dtypes.SeriesDTypes.items", false]], "items() (arkouda.numpy.number_format_strings method)": [[35, "arkouda.numpy.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.numpy.sctypedict method)": [[35, "arkouda.numpy.sctypeDict.items", false]], "items() (arkouda.numpy.sctypes method)": [[35, "arkouda.numpy.sctypes.items", false]], "items() (arkouda.numpy.seriesdtypes method)": [[35, "arkouda.numpy.SeriesDTypes.items", false]], "items() (arkouda.sctypedict method)": [[24, "arkouda.sctypeDict.items", false]], "items() (arkouda.sctypes method)": [[24, "arkouda.sctypes.items", false]], "items() (arkouda.seriesdtypes method)": [[24, "arkouda.SeriesDTypes.items", false]], "itemset() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.itemset", false]], "itemset() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.itemset", false]], "itemset() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.itemset", false]], "itemset() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.itemset", false]], "itemset() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.itemset", false]], "itemset() (arkouda.str_ method)": [[24, "arkouda.str_.itemset", false], [24, "id1304", false]], "itemsize (arkouda.pdarray attribute)": [[24, "arkouda.pdarray.itemsize", false], [24, "id1018", false], [24, "id1064", false], [24, "id1088", false], [24, "id1134", false], [24, "id1158", false], [24, "id1204", false], [24, "id1228", false], [24, "id911", false], [24, "id924", false], [24, "id948", false], [24, "id994", false], [94, "arkouda.pdarray.itemsize", false]], "itemsize (arkouda.pdarrayclass.pdarray attribute)": [[36, "arkouda.pdarrayclass.pdarray.itemsize", false], [36, "id1", false]], "itemsize (arkouda.sparrayclass.sparray attribute)": [[50, "arkouda.sparrayclass.sparray.itemsize", false], [50, "id1", false]], "itemsize() (arkouda.bigint method)": [[24, "arkouda.bigint.itemsize", false], [24, "id841", false]], "itemsize() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.itemsize", false]], "itemsize() (arkouda.dtypes.bigint method)": [[21, "arkouda.dtypes.bigint.itemsize", false]], "itemsize() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.itemsize", false]], "itemsize() (arkouda.numpy.bigint method)": [[35, "arkouda.numpy.bigint.itemsize", false]], "itemsize() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.itemsize", false]], "itemsize() (arkouda.numpy.dtypes.bigint method)": [[34, "arkouda.numpy.dtypes.bigint.itemsize", false]], "itemsize() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.itemsize", false]], "itemsize() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.itemsize", false]], "itemsize() (arkouda.str_ method)": [[24, "arkouda.str_.itemsize", false], [24, "id1305", false]], "join_on_eq_with_dt() (in module arkouda)": [[24, "arkouda.join_on_eq_with_dt", false]], "join_on_eq_with_dt() (in module arkouda.join)": [[29, "arkouda.join.join_on_eq_with_dt", false]], "keys() (arkouda.dtypes.number_format_strings method)": [[21, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.dtypes.seriesdtypes method)": [[21, "arkouda.dtypes.SeriesDTypes.keys", false]], "keys() (arkouda.number_format_strings method)": [[24, "arkouda.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.numpy.dtypes.number_format_strings method)": [[34, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.numpy.dtypes.seriesdtypes method)": [[34, "arkouda.numpy.dtypes.SeriesDTypes.keys", false]], "keys() (arkouda.numpy.number_format_strings method)": [[35, "arkouda.numpy.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.numpy.sctypedict method)": [[35, "arkouda.numpy.sctypeDict.keys", false]], "keys() (arkouda.numpy.sctypes method)": [[35, "arkouda.numpy.sctypes.keys", false]], "keys() (arkouda.numpy.seriesdtypes method)": [[35, "arkouda.numpy.SeriesDTypes.keys", false]], "keys() (arkouda.sctypedict method)": [[24, "arkouda.sctypeDict.keys", false]], "keys() (arkouda.sctypes method)": [[24, "arkouda.sctypes.keys", false]], "keys() (arkouda.seriesdtypes method)": [[24, "arkouda.SeriesDTypes.keys", false]], "layout (arkouda.sparrayclass.sparray attribute)": [[50, "arkouda.sparrayclass.sparray.layout", false], [50, "id2", false]], "left_align() (in module arkouda)": [[24, "arkouda.left_align", false]], "left_align() (in module arkouda.alignment)": [[3, "arkouda.alignment.left_align", false]], "len_suffix (in module arkouda)": [[24, "arkouda.LEN_SUFFIX", false]], "len_suffix (in module arkouda.segarray)": [[47, "arkouda.segarray.LEN_SUFFIX", false]], "lengths (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.lengths", false]], "less() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.less", false]], "less_equal() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.less_equal", false]], "levels (arkouda.index.multiindex attribute)": [[25, "arkouda.index.MultiIndex.levels", false]], "levels (arkouda.multiindex attribute)": [[24, "arkouda.MultiIndex.levels", false]], "linspace() (in module arkouda)": [[24, "arkouda.linspace", false], [89, "arkouda.linspace", false]], "linspace() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.linspace", false]], "linspace() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.linspace", false]], "list_registry() (in module arkouda)": [[24, "arkouda.list_registry", false]], "list_registry() (in module arkouda.infoclass)": [[26, "arkouda.infoclass.list_registry", false]], "list_symbol_table() (in module arkouda)": [[24, "arkouda.list_symbol_table", false]], "list_symbol_table() (in module arkouda.infoclass)": [[26, "arkouda.infoclass.list_symbol_table", false]], "load() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.load", false], [24, "id151", false]], "load() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.load", false]], "load() (arkouda.segarray class method)": [[24, "arkouda.SegArray.load", false]], "load() (arkouda.segarray.segarray class method)": [[47, "arkouda.segarray.SegArray.load", false]], "load() (in module arkouda)": [[24, "arkouda.load", false]], "load() (in module arkouda.io)": [[27, "arkouda.io.load", false]], "load_all() (in module arkouda)": [[24, "arkouda.load_all", false]], "load_all() (in module arkouda.io)": [[27, "arkouda.io.load_all", false]], "loc (arkouda.series property)": [[24, "arkouda.Series.loc", false]], "loc (arkouda.series.series property)": [[48, "arkouda.series.Series.loc", false]], "locate() (arkouda.series method)": [[24, "arkouda.Series.locate", false]], "locate() (arkouda.series.series method)": [[48, "arkouda.series.Series.locate", false]], "locate() (in module arkouda.series)": [[97, "arkouda.Series.locate", false], [97, "id0", false]], "locationsinfo (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.LocationsInfo", false]], "log() (in module arkouda)": [[24, "arkouda.log", false], [86, "arkouda.log", false]], "log() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.log", false]], "log() (in module arkouda.numeric)": [[33, "arkouda.numeric.log", false]], "log10() (in module arkouda)": [[24, "arkouda.log10", false]], "log10() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.log10", false]], "log10() (in module arkouda.numeric)": [[33, "arkouda.numeric.log10", false]], "log1p() (in module arkouda)": [[24, "arkouda.log1p", false]], "log1p() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.log1p", false]], "log1p() (in module arkouda.numeric)": [[33, "arkouda.numeric.log1p", false]], "log2() (in module arkouda)": [[24, "arkouda.log2", false]], "log2() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.log2", false]], "log2() (in module arkouda.numeric)": [[33, "arkouda.numeric.log2", false]], "logaddexp() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.logaddexp", false]], "logger (arkouda.categorical attribute)": [[24, "arkouda.Categorical.logger", false], [24, "id34", false], [24, "id92", false]], "logger (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.logger", false]], "logger (arkouda.groupby attribute)": [[24, "arkouda.GroupBy.logger", false], [24, "id252", false], [24, "id299", false], [24, "id346", false], [24, "id393", false], [24, "id440", false], [91, "arkouda.GroupBy.logger", false]], "logger (arkouda.groupbyclass.groupby attribute)": [[22, "arkouda.groupbyclass.GroupBy.logger", false]], "logger (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.logger", false]], "logger (arkouda.segarray attribute)": [[24, "arkouda.SegArray.logger", false]], "logger (arkouda.segarray.segarray attribute)": [[47, "arkouda.segarray.SegArray.logger", false]], "logger (arkouda.strings attribute)": [[24, "arkouda.Strings.logger", false], [24, "id492", false], [24, "id500", false], [24, "id538", false], [24, "id575", false], [24, "id613", false], [24, "id650", false], [24, "id688", false], [24, "id725", false], [24, "id763", false]], "logger (arkouda.strings.strings attribute)": [[52, "arkouda.strings.Strings.logger", false], [52, "id2", false]], "logger (in module arkouda.sparrayclass)": [[50, "arkouda.sparrayclass.logger", false]], "logical_and() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.logical_and", false]], "logical_not() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.logical_not", false]], "logical_or() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.logical_or", false]], "logical_xor() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.logical_xor", false]], "logistic() (arkouda.generator method)": [[24, "arkouda.Generator.logistic", false]], "logistic() (arkouda.random.generator method)": [[41, "arkouda.random.Generator.logistic", false]], "logistic() (in module arkouda.random.generator)": [[95, "arkouda.random.Generator.logistic", false]], "loglevel (class in arkouda)": [[24, "arkouda.LogLevel", false]], "loglevel (class in arkouda.logger)": [[30, "arkouda.logger.LogLevel", false]], "lognormal() (arkouda.generator method)": [[24, "arkouda.Generator.lognormal", false]], "lognormal() (arkouda.random.generator method)": [[41, "arkouda.random.Generator.lognormal", false]], "lognormal() (in module arkouda.random.generator)": [[95, "arkouda.random.Generator.lognormal", false]], "longdouble (class in arkouda)": [[24, "arkouda.longdouble", false]], "longdouble (class in arkouda.numpy)": [[35, "arkouda.numpy.longdouble", false]], "longdoubledtype (class in arkouda)": [[24, "arkouda.LongDoubleDType", false]], "longdoubledtype (class in arkouda.numpy)": [[35, "arkouda.numpy.LongDoubleDType", false]], "longdtype (class in arkouda)": [[24, "arkouda.LongDType", false]], "longdtype (class in arkouda.numpy)": [[35, "arkouda.numpy.LongDType", false]], "longfloat (class in arkouda)": [[24, "arkouda.longfloat", false]], "longfloat (class in arkouda.numpy)": [[35, "arkouda.numpy.longfloat", false]], "longlong (class in arkouda)": [[24, "arkouda.longlong", false]], "longlong (class in arkouda.numpy)": [[35, "arkouda.numpy.longlong", false]], "longlongdtype (class in arkouda)": [[24, "arkouda.LongLongDType", false]], "longlongdtype (class in arkouda.numpy)": [[35, "arkouda.numpy.LongLongDType", false]], "lookup() (arkouda.index method)": [[24, "arkouda.Index.lookup", false]], "lookup() (arkouda.index.index method)": [[25, "arkouda.index.Index.lookup", false]], "lookup() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.lookup", false]], "lookup() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.lookup", false]], "lookup() (in module arkouda)": [[24, "arkouda.lookup", false]], "lookup() (in module arkouda.alignment)": [[3, "arkouda.alignment.lookup", false]], "lookup() (in module arkouda.index)": [[84, "arkouda.Index.lookup", false]], "lookup() (in module arkouda.multiindex)": [[84, "arkouda.MultiIndex.lookup", false]], "lower() (arkouda.strings method)": [[24, "arkouda.Strings.lower", false], [24, "id539", false], [24, "id614", false], [24, "id689", false], [24, "id764", false]], "lower() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.lower", false]], "ls() (in module arkouda)": [[24, "arkouda.ls", false]], "ls() (in module arkouda.io)": [[27, "arkouda.io.ls", false]], "ls_csv() (in module arkouda)": [[24, "arkouda.ls_csv", false]], "ls_csv() (in module arkouda.io)": [[27, "arkouda.io.ls_csv", false]], "lstick() (arkouda.strings method)": [[24, "arkouda.Strings.lstick", false], [24, "id540", false], [24, "id615", false], [24, "id690", false], [24, "id765", false], [100, "arkouda.Strings.lstick", false]], "lstick() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.lstick", false]], "machep (arkouda.finfo attribute)": [[24, "arkouda.finfo.machep", false]], "machep (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.machep", false]], "mandatory() (arkouda.dtypes.annotations method)": [[21, "arkouda.dtypes.annotations.mandatory", false]], "mandatory() (arkouda.numpy.dtypes.annotations method)": [[34, "arkouda.numpy.dtypes.annotations.mandatory", false]], "map() (arkouda.index method)": [[24, "arkouda.Index.map", false]], "map() (arkouda.index.index method)": [[25, "arkouda.index.Index.map", false]], "map() (arkouda.series method)": [[24, "arkouda.Series.map", false]], "map() (arkouda.series.series method)": [[48, "arkouda.series.Series.map", false]], "map() (in module arkouda.util)": [[55, "arkouda.util.map", false]], "match (class in arkouda.match)": [[31, "arkouda.match.Match", false]], "match() (arkouda.strings method)": [[24, "arkouda.Strings.match", false], [24, "id541", false], [24, "id616", false], [24, "id691", false], [24, "id766", false], [100, "arkouda.Strings.match", false]], "match() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.match", false]], "match_bool (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.match_bool", false]], "match_ind (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.match_ind", false]], "match_type() (arkouda.match.match method)": [[31, "arkouda.match.Match.match_type", false], [100, "arkouda.match.Match.match_type", false]], "matched() (arkouda.match.match method)": [[31, "arkouda.match.Match.matched", false], [100, "arkouda.match.Match.matched", false]], "matcher (class in arkouda.matcher)": [[32, "arkouda.matcher.Matcher", false]], "matmul() (in module arkouda)": [[24, "arkouda.matmul", false]], "matmul() (in module arkouda.array_api.linalg)": [[10, "arkouda.array_api.linalg.matmul", false]], "matmul() (in module arkouda.numeric)": [[33, "arkouda.numeric.matmul", false]], "matrix_transpose() (in module arkouda.array_api.linalg)": [[10, "arkouda.array_api.linalg.matrix_transpose", false]], "max (arkouda.array_api.data_type_functions.finfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.finfo_object.max", false]], "max (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.iinfo_object.max", false]], "max (arkouda.finfo attribute)": [[24, "arkouda.finfo.max", false]], "max (arkouda.iinfo attribute)": [[24, "arkouda.iinfo.max", false]], "max (arkouda.iinfo property)": [[24, "id876", false]], "max (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.max", false]], "max (arkouda.numpy.iinfo attribute)": [[35, "arkouda.numpy.iinfo.max", false]], "max (arkouda.numpy.iinfo property)": [[35, "id12", false]], "max() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.max", false]], "max() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.max", false]], "max() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.max", false]], "max() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.max", false]], "max() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.max", false]], "max() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.max", false]], "max() (arkouda.groupby method)": [[24, "arkouda.GroupBy.max", false], [24, "id271", false], [24, "id318", false], [24, "id365", false], [24, "id412", false], [24, "id459", false], [91, "arkouda.GroupBy.max", false]], "max() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.max", false]], "max() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.max", false]], "max() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.max", false]], "max() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.max", false]], "max() (arkouda.pdarray method)": [[24, "arkouda.pdarray.max", false], [24, "id1019", false], [24, "id1089", false], [24, "id1159", false], [24, "id1229", false], [24, "id949", false], [92, "arkouda.pdarray.max", false]], "max() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.max", false]], "max() (arkouda.segarray method)": [[24, "arkouda.SegArray.max", false]], "max() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.max", false]], "max() (arkouda.series method)": [[24, "arkouda.Series.max", false]], "max() (arkouda.series.series method)": [[48, "arkouda.series.Series.max", false]], "max() (arkouda.str_ method)": [[24, "arkouda.str_.max", false], [24, "id1306", false]], "max() (in module arkouda)": [[24, "arkouda.max", false], [86, "arkouda.max", false]], "max() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.max", false]], "max() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.max", false]], "max_bits (arkouda.pdarray property)": [[24, "arkouda.pdarray.max_bits", false], [24, "id1020", false], [24, "id1090", false], [24, "id1160", false], [24, "id1230", false], [24, "id950", false]], "max_bits (arkouda.pdarrayclass.pdarray property)": [[36, "arkouda.pdarrayclass.pdarray.max_bits", false]], "max_list_size (arkouda.index attribute)": [[24, "arkouda.Index.max_list_size", false]], "max_list_size (arkouda.index.index attribute)": [[25, "arkouda.index.Index.max_list_size", false]], "maxexp (arkouda.finfo attribute)": [[24, "arkouda.finfo.maxexp", false]], "maxexp (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.maxexp", false]], "maximum_sctype() (in module arkouda)": [[24, "arkouda.maximum_sctype", false]], "maximum_sctype() (in module arkouda.numpy)": [[35, "arkouda.numpy.maximum_sctype", false]], "maxk() (arkouda.pdarray method)": [[24, "arkouda.pdarray.maxk", false], [24, "id1021", false], [24, "id1091", false], [24, "id1161", false], [24, "id1231", false], [24, "id951", false], [92, "arkouda.pdarray.maxk", false]], "maxk() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.maxk", false]], "maxk() (in module arkouda)": [[24, "arkouda.maxk", false], [86, "arkouda.maxk", false]], "maxk() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.maxk", false]], "mean() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.mean", false]], "mean() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.mean", false]], "mean() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.mean", false]], "mean() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.mean", false]], "mean() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.mean", false]], "mean() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.mean", false]], "mean() (arkouda.groupby method)": [[24, "arkouda.GroupBy.mean", false], [24, "id272", false], [24, "id319", false], [24, "id366", false], [24, "id413", false], [24, "id460", false], [91, "arkouda.GroupBy.mean", false]], "mean() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.mean", false]], "mean() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.mean", false]], "mean() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.mean", false]], "mean() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.mean", false]], "mean() (arkouda.pdarray method)": [[24, "arkouda.pdarray.mean", false], [24, "id1022", false], [24, "id1092", false], [24, "id1162", false], [24, "id1232", false], [24, "id952", false], [92, "arkouda.pdarray.mean", false]], "mean() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.mean", false]], "mean() (arkouda.segarray method)": [[24, "arkouda.SegArray.mean", false]], "mean() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.mean", false]], "mean() (arkouda.series method)": [[24, "arkouda.Series.mean", false]], "mean() (arkouda.series.series method)": [[48, "arkouda.series.Series.mean", false]], "mean() (arkouda.str_ method)": [[24, "arkouda.str_.mean", false], [24, "id1307", false]], "mean() (in module arkouda)": [[24, "arkouda.mean", false], [86, "arkouda.mean", false]], "mean() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.mean", false]], "mean() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.mean", false]], "mean_shim() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.mean_shim", false]], "median() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.median", false]], "median() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.median", false]], "median() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.median", false]], "median() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.median", false]], "median() (arkouda.groupby method)": [[24, "arkouda.GroupBy.median", false], [24, "id273", false], [24, "id320", false], [24, "id367", false], [24, "id414", false], [24, "id461", false], [91, "arkouda.GroupBy.median", false]], "median() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.median", false]], "median() (in module arkouda)": [[24, "arkouda.median", false]], "median() (in module arkouda.numeric)": [[33, "arkouda.numeric.median", false]], "memory_usage() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.memory_usage", false], [24, "id152", false]], "memory_usage() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.memory_usage", false]], "memory_usage() (arkouda.index method)": [[24, "arkouda.Index.memory_usage", false]], "memory_usage() (arkouda.index.index method)": [[25, "arkouda.index.Index.memory_usage", false]], "memory_usage() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.memory_usage", false]], "memory_usage() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.memory_usage", false]], "memory_usage() (arkouda.series method)": [[24, "arkouda.Series.memory_usage", false]], "memory_usage() (arkouda.series.series method)": [[48, "arkouda.series.Series.memory_usage", false]], "memory_usage_info() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.memory_usage_info", false], [24, "id153", false]], "memory_usage_info() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.memory_usage_info", false]], "merge() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.merge", false], [24, "id154", false]], "merge() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.merge", false]], "merge() (in module arkouda)": [[24, "arkouda.merge", false]], "merge() (in module arkouda.dataframe)": [[20, "arkouda.dataframe.merge", false]], "meshgrid() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.meshgrid", false]], "microsecond (arkouda.datetime property)": [[24, "arkouda.Datetime.microsecond", false], [24, "id189", false], [24, "id222", false]], "microsecond (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.microsecond", false]], "microseconds (arkouda.timeclass.timedelta property)": [[54, "arkouda.timeclass.Timedelta.microseconds", false]], "microseconds (arkouda.timedelta property)": [[24, "arkouda.Timedelta.microseconds", false], [24, "id798", false]], "millisecond (arkouda.datetime property)": [[24, "arkouda.Datetime.millisecond", false], [24, "id190", false], [24, "id223", false]], "millisecond (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.millisecond", false]], "min (arkouda.array_api.data_type_functions.finfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.finfo_object.min", false]], "min (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.iinfo_object.min", false]], "min (arkouda.finfo attribute)": [[24, "arkouda.finfo.min", false]], "min (arkouda.iinfo attribute)": [[24, "arkouda.iinfo.min", false]], "min (arkouda.iinfo property)": [[24, "id877", false]], "min (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.min", false]], "min (arkouda.numpy.iinfo attribute)": [[35, "arkouda.numpy.iinfo.min", false]], "min (arkouda.numpy.iinfo property)": [[35, "id13", false]], "min() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.min", false]], "min() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.min", false]], "min() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.min", false]], "min() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.min", false]], "min() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.min", false]], "min() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.min", false]], "min() (arkouda.groupby method)": [[24, "arkouda.GroupBy.min", false], [24, "id274", false], [24, "id321", false], [24, "id368", false], [24, "id415", false], [24, "id462", false], [91, "arkouda.GroupBy.min", false]], "min() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.min", false]], "min() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.min", false]], "min() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.min", false]], "min() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.min", false]], "min() (arkouda.pdarray method)": [[24, "arkouda.pdarray.min", false], [24, "id1023", false], [24, "id1093", false], [24, "id1163", false], [24, "id1233", false], [24, "id953", false], [92, "arkouda.pdarray.min", false]], "min() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.min", false]], "min() (arkouda.segarray method)": [[24, "arkouda.SegArray.min", false]], "min() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.min", false]], "min() (arkouda.series method)": [[24, "arkouda.Series.min", false]], "min() (arkouda.series.series method)": [[48, "arkouda.series.Series.min", false]], "min() (arkouda.str_ method)": [[24, "arkouda.str_.min", false], [24, "id1308", false]], "min() (in module arkouda)": [[24, "arkouda.min", false], [86, "arkouda.min", false]], "min() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.min", false]], "min() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.min", false]], "minexp (arkouda.finfo attribute)": [[24, "arkouda.finfo.minexp", false]], "minexp (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.minexp", false]], "mink() (arkouda.pdarray method)": [[24, "arkouda.pdarray.mink", false], [24, "id1024", false], [24, "id1094", false], [24, "id1164", false], [24, "id1234", false], [24, "id954", false], [92, "arkouda.pdarray.mink", false]], "mink() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.mink", false]], "mink() (in module arkouda)": [[24, "arkouda.mink", false], [86, "arkouda.mink", false]], "mink() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.mink", false]], "minute (arkouda.datetime property)": [[24, "arkouda.Datetime.minute", false], [24, "id191", false], [24, "id224", false]], "minute (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.minute", false]], "mod() (in module arkouda)": [[24, "arkouda.mod", false]], "mod() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.mod", false]], "mode() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.mode", false]], "mode() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.mode", false]], "mode() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.mode", false]], "mode() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.mode", false]], "mode() (arkouda.groupby method)": [[24, "arkouda.GroupBy.mode", false], [24, "id275", false], [24, "id322", false], [24, "id369", false], [24, "id416", false], [24, "id463", false], [91, "arkouda.GroupBy.mode", false]], "mode() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.mode", false]], "module": [[2, "module-arkouda.accessor", false], [3, "module-arkouda.alignment", false], [4, "module-arkouda.array_api.array_object", false], [5, "module-arkouda.array_api.creation_functions", false], [6, "module-arkouda.array_api.data_type_functions", false], [7, "module-arkouda.array_api.elementwise_functions", false], [8, "module-arkouda.array_api", false], [9, "module-arkouda.array_api.indexing_functions", false], [10, "module-arkouda.array_api.linalg", false], [11, "module-arkouda.array_api.manipulation_functions", false], [12, "module-arkouda.array_api.searching_functions", false], [13, "module-arkouda.array_api.set_functions", false], [14, "module-arkouda.array_api.sorting_functions", false], [15, "module-arkouda.array_api.statistical_functions", false], [16, "module-arkouda.array_api.utility_functions", false], [17, "module-arkouda.categorical", false], [18, "module-arkouda.client", false], [19, "module-arkouda.client_dtypes", false], [20, "module-arkouda.dataframe", false], [21, "module-arkouda.dtypes", false], [22, "module-arkouda.groupbyclass", false], [23, "module-arkouda.history", false], [24, "module-arkouda", false], [25, "module-arkouda.index", false], [26, "module-arkouda.infoclass", false], [27, "module-arkouda.io", false], [28, "module-arkouda.io_util", false], [29, "module-arkouda.join", false], [30, "module-arkouda.logger", false], [31, "module-arkouda.match", false], [32, "module-arkouda.matcher", false], [33, "module-arkouda.numeric", false], [34, "module-arkouda.numpy.dtypes", false], [35, "module-arkouda.numpy", false], [36, "module-arkouda.pdarrayclass", false], [37, "module-arkouda.pdarraycreation", false], [38, "module-arkouda.pdarraymanipulation", false], [39, "module-arkouda.pdarraysetops", false], [40, "module-arkouda.plotting", false], [41, "module-arkouda.random", false], [42, "module-arkouda.row", false], [43, "module-arkouda.scipy", false], [44, "module-arkouda.scipy.special", false], [45, "module-arkouda.scipy.stats", false], [46, "module-arkouda.security", false], [47, "module-arkouda.segarray", false], [48, "module-arkouda.series", false], [49, "module-arkouda.sorting", false], [50, "module-arkouda.sparrayclass", false], [51, "module-arkouda.sparsematrix", false], [52, "module-arkouda.strings", false], [53, "module-arkouda.testing", false], [54, "module-arkouda.timeclass", false], [55, "module-arkouda.util", false]], "moment_type() (arkouda.scipy.stats.chi2 method)": [[45, "arkouda.scipy.stats.chi2.moment_type", false]], "month (arkouda.datetime property)": [[24, "arkouda.Datetime.month", false], [24, "id192", false], [24, "id225", false]], "month (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.month", false]], "most_common() (arkouda.groupby method)": [[24, "arkouda.GroupBy.most_common", false], [24, "id276", false], [24, "id323", false], [24, "id370", false], [24, "id417", false], [24, "id464", false], [91, "arkouda.GroupBy.most_common", false]], "most_common() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.most_common", false]], "most_common() (in module arkouda.util)": [[55, "arkouda.util.most_common", false]], "moveaxis() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.moveaxis", false]], "msb_left (arkouda.client_dtypes.fields attribute)": [[19, "arkouda.client_dtypes.Fields.MSB_left", false]], "msb_left (arkouda.fields attribute)": [[24, "arkouda.Fields.MSB_left", false]], "mt (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.mT", false]], "mt (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.mT", false]], "multiindex (class in arkouda)": [[24, "arkouda.MultiIndex", false]], "multiindex (class in arkouda.index)": [[25, "arkouda.index.MultiIndex", false]], "multiply() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.multiply", false]], "name (arkouda.client_dtypes.fields attribute)": [[19, "arkouda.client_dtypes.Fields.name", false]], "name (arkouda.fields attribute)": [[24, "arkouda.Fields.name", false]], "name (arkouda.index.multiindex property)": [[25, "arkouda.index.MultiIndex.name", false]], "name (arkouda.multiindex property)": [[24, "arkouda.MultiIndex.name", false]], "name (arkouda.pdarray attribute)": [[24, "arkouda.pdarray.name", false], [24, "id1025", false], [24, "id1059", false], [24, "id1095", false], [24, "id1129", false], [24, "id1165", false], [24, "id1199", false], [24, "id1235", false], [24, "id912", false], [24, "id919", false], [24, "id955", false], [24, "id989", false], [94, "arkouda.pdarray.name", false]], "name (arkouda.pdarrayclass.pdarray attribute)": [[36, "arkouda.pdarrayclass.pdarray.name", false], [36, "id2", false]], "name (arkouda.sparrayclass.sparray attribute)": [[50, "arkouda.sparrayclass.sparray.name", false], [50, "id3", false]], "name() (arkouda.bigint method)": [[24, "arkouda.bigint.name", false], [24, "id842", false]], "name() (arkouda.dtype method)": [[24, "arkouda.DType.name", false]], "name() (arkouda.dtypes.bigint method)": [[21, "arkouda.dtypes.bigint.name", false]], "name() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.name", false]], "name() (arkouda.numpy.bigint method)": [[35, "arkouda.numpy.bigint.name", false]], "name() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.name", false]], "name() (arkouda.numpy.dtypes.bigint method)": [[34, "arkouda.numpy.dtypes.bigint.name", false]], "name() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.name", false]], "name() (arkouda.scipy.stats.chi2 method)": [[45, "arkouda.scipy.stats.chi2.name", false]], "names (arkouda.client_dtypes.fields attribute)": [[19, "arkouda.client_dtypes.Fields.names", false]], "names (arkouda.fields attribute)": [[24, "arkouda.Fields.names", false]], "names (arkouda.index property)": [[24, "arkouda.Index.names", false]], "names (arkouda.index.index property)": [[25, "arkouda.index.Index.names", false]], "names (arkouda.index.multiindex property)": [[25, "arkouda.index.MultiIndex.names", false]], "names (arkouda.multiindex property)": [[24, "arkouda.MultiIndex.names", false]], "namewidth (arkouda.client_dtypes.fields attribute)": [[19, "arkouda.client_dtypes.Fields.namewidth", false]], "namewidth (arkouda.fields attribute)": [[24, "arkouda.Fields.namewidth", false]], "nan (in module arkouda)": [[24, "arkouda.NAN", false], [24, "arkouda.NaN", false], [24, "arkouda.nan", false]], "nan (in module arkouda.numpy)": [[35, "arkouda.numpy.NAN", false], [35, "arkouda.numpy.NaN", false], [35, "arkouda.numpy.nan", false]], "nanosecond (arkouda.datetime property)": [[24, "arkouda.Datetime.nanosecond", false], [24, "id193", false], [24, "id226", false]], "nanosecond (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.nanosecond", false]], "nanoseconds (arkouda.timeclass.timedelta property)": [[54, "arkouda.timeclass.Timedelta.nanoseconds", false]], "nanoseconds (arkouda.timedelta property)": [[24, "arkouda.Timedelta.nanoseconds", false], [24, "id799", false]], "nbytes (arkouda.categorical property)": [[24, "arkouda.Categorical.nbytes", false], [24, "id35", false], [24, "id93", false]], "nbytes (arkouda.categorical.categorical property)": [[17, "arkouda.categorical.Categorical.nbytes", false]], "nbytes (arkouda.pdarray property)": [[24, "arkouda.pdarray.nbytes", false], [24, "id1026", false], [24, "id1096", false], [24, "id1166", false], [24, "id1236", false], [24, "id956", false]], "nbytes (arkouda.pdarrayclass.pdarray property)": [[36, "arkouda.pdarrayclass.pdarray.nbytes", false]], "nbytes (arkouda.segarray property)": [[24, "arkouda.SegArray.nbytes", false]], "nbytes (arkouda.segarray.segarray property)": [[47, "arkouda.segarray.SegArray.nbytes", false]], "nbytes (arkouda.strings attribute)": [[24, "arkouda.Strings.nbytes", false], [24, "id496", false], [24, "id571", false], [24, "id646", false], [24, "id721", false]], "nbytes (arkouda.strings.strings attribute)": [[52, "arkouda.strings.Strings.nbytes", false]], "nbytes() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.nbytes", false]], "nbytes() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.nbytes", false]], "nbytes() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.nbytes", false]], "nbytes() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.nbytes", false]], "nbytes() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.nbytes", false]], "nbytes() (arkouda.str_ method)": [[24, "arkouda.str_.nbytes", false], [24, "id1309", false]], "ndim (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.ndim", false]], "ndim (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.ndim", false]], "ndim (arkouda.categorical attribute)": [[24, "arkouda.Categorical.ndim", false], [24, "id0", false], [24, "id13", false], [24, "id36", false], [24, "id71", false], [24, "id94", false], [88, "arkouda.Categorical.ndim", false]], "ndim (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.ndim", false], [17, "id0", false]], "ndim (arkouda.index property)": [[24, "arkouda.Index.ndim", false]], "ndim (arkouda.index.index property)": [[25, "arkouda.index.Index.ndim", false]], "ndim (arkouda.index.multiindex property)": [[25, "arkouda.index.MultiIndex.ndim", false]], "ndim (arkouda.multiindex property)": [[24, "arkouda.MultiIndex.ndim", false]], "ndim (arkouda.pdarray attribute)": [[24, "arkouda.pdarray.ndim", false], [24, "id1027", false], [24, "id1062", false], [24, "id1097", false], [24, "id1132", false], [24, "id1167", false], [24, "id1202", false], [24, "id1237", false], [24, "id913", false], [24, "id922", false], [24, "id957", false], [24, "id992", false], [94, "arkouda.pdarray.ndim", false]], "ndim (arkouda.pdarrayclass.pdarray attribute)": [[36, "arkouda.pdarrayclass.pdarray.ndim", false], [36, "id3", false]], "ndim (arkouda.series property)": [[24, "arkouda.Series.ndim", false]], "ndim (arkouda.series.series property)": [[48, "arkouda.series.Series.ndim", false]], "ndim (arkouda.sparrayclass.sparray attribute)": [[50, "arkouda.sparrayclass.sparray.ndim", false], [50, "id4", false]], "ndim (arkouda.strings attribute)": [[24, "arkouda.Strings.ndim", false], [24, "id497", false], [24, "id572", false], [24, "id647", false], [24, "id722", false]], "ndim (arkouda.strings.strings attribute)": [[52, "arkouda.strings.Strings.ndim", false]], "ndim() (arkouda.bigint method)": [[24, "arkouda.bigint.ndim", false], [24, "id843", false]], "ndim() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.ndim", false]], "ndim() (arkouda.dtypes.bigint method)": [[21, "arkouda.dtypes.bigint.ndim", false]], "ndim() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.ndim", false]], "ndim() (arkouda.numpy.bigint method)": [[35, "arkouda.numpy.bigint.ndim", false]], "ndim() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.ndim", false]], "ndim() (arkouda.numpy.dtypes.bigint method)": [[34, "arkouda.numpy.dtypes.bigint.ndim", false]], "ndim() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.ndim", false]], "ndim() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.ndim", false]], "ndim() (arkouda.str_ method)": [[24, "arkouda.str_.ndim", false], [24, "id1310", false]], "negative() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.negative", false]], "negep (arkouda.finfo attribute)": [[24, "arkouda.finfo.negep", false]], "negep (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.negep", false]], "newbyteorder() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.newbyteorder", false]], "newbyteorder() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.newbyteorder", false]], "newbyteorder() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.newbyteorder", false]], "newbyteorder() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.newbyteorder", false]], "newbyteorder() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.newbyteorder", false]], "newbyteorder() (arkouda.str_ method)": [[24, "arkouda.str_.newbyteorder", false], [24, "id1311", false]], "nexp (arkouda.finfo attribute)": [[24, "arkouda.finfo.nexp", false]], "nexp (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.nexp", false]], "ngroups (arkouda.groupby attribute)": [[24, "arkouda.GroupBy.ngroups", false], [24, "id250", false], [24, "id297", false], [24, "id344", false], [24, "id391", false], [24, "id438", false], [91, "arkouda.GroupBy.ngroups", false]], "ngroups (arkouda.groupbyclass.groupby attribute)": [[22, "arkouda.groupbyclass.GroupBy.ngroups", false]], "ninf (in module arkouda)": [[24, "arkouda.NINF", false]], "ninf (in module arkouda.numpy)": [[35, "arkouda.numpy.NINF", false]], "nkeys (arkouda.groupby attribute)": [[24, "arkouda.GroupBy.nkeys", false], [24, "id246", false], [24, "id293", false], [24, "id340", false], [24, "id387", false], [24, "id434", false], [91, "arkouda.GroupBy.nkeys", false]], "nkeys (arkouda.groupbyclass.groupby attribute)": [[22, "arkouda.groupbyclass.GroupBy.nkeys", false]], "nlevels (arkouda.categorical attribute)": [[24, "arkouda.Categorical.nlevels", false], [24, "id1", false], [24, "id12", false], [24, "id37", false], [24, "id70", false], [24, "id95", false], [88, "arkouda.Categorical.nlevels", false]], "nlevels (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.nlevels", false], [17, "id1", false]], "nlevels (arkouda.index property)": [[24, "arkouda.Index.nlevels", false]], "nlevels (arkouda.index.index property)": [[25, "arkouda.index.Index.nlevels", false]], "nlevels (arkouda.index.multiindex property)": [[25, "arkouda.index.MultiIndex.nlevels", false]], "nlevels (arkouda.multiindex property)": [[24, "arkouda.MultiIndex.nlevels", false]], "nmant (arkouda.finfo attribute)": [[24, "arkouda.finfo.nmant", false]], "nmant (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.nmant", false]], "nnz (arkouda.sparrayclass.sparray attribute)": [[50, "arkouda.sparrayclass.sparray.nnz", false]], "non_empty (arkouda.segarray property)": [[24, "arkouda.SegArray.non_empty", false]], "non_empty (arkouda.segarray.segarray property)": [[47, "arkouda.segarray.SegArray.non_empty", false]], "nonuniqueerror": [[3, "arkouda.alignment.NonUniqueError", false], [24, "arkouda.NonUniqueError", false]], "nonzero() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.nonzero", false]], "nonzero() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.nonzero", false]], "nonzero() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.nonzero", false]], "nonzero() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.nonzero", false]], "nonzero() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.nonzero", false]], "nonzero() (arkouda.str_ method)": [[24, "arkouda.str_.nonzero", false], [24, "id1312", false]], "nonzero() (in module arkouda.array_api.searching_functions)": [[12, "arkouda.array_api.searching_functions.nonzero", false]], "normal() (arkouda.generator method)": [[24, "arkouda.Generator.normal", false]], "normal() (arkouda.random.generator method)": [[41, "arkouda.random.Generator.normal", false]], "normal() (in module arkouda.random.generator)": [[95, "arkouda.random.Generator.normal", false]], "normalize() (arkouda.client_dtypes.ipv4 method)": [[19, "arkouda.client_dtypes.IPv4.normalize", false]], "normalize() (arkouda.ipv4 method)": [[24, "arkouda.IPv4.normalize", false]], "not_equal() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.not_equal", false]], "notebookhistoryretriever (class in arkouda.history)": [[23, "arkouda.history.NotebookHistoryRetriever", false]], "notna() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.notna", false], [24, "id155", false]], "notna() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.notna", false]], "notna() (arkouda.series method)": [[24, "arkouda.Series.notna", false]], "notna() (arkouda.series.series method)": [[48, "arkouda.series.Series.notna", false]], "notnull() (arkouda.series method)": [[24, "arkouda.Series.notnull", false]], "notnull() (arkouda.series.series method)": [[48, "arkouda.series.Series.notnull", false]], "num_matches (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.num_matches", false]], "numargs() (arkouda.scipy.stats.chi2 method)": [[45, "arkouda.scipy.stats.chi2.numargs", false]], "number (class in arkouda)": [[24, "arkouda.number", false]], "number (class in arkouda.numpy)": [[35, "arkouda.numpy.number", false]], "number_format_strings (class in arkouda)": [[24, "arkouda.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (class in arkouda.dtypes)": [[21, "arkouda.dtypes.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (class in arkouda.numpy)": [[35, "arkouda.numpy.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS", false]], "numerator() (arkouda.integer method)": [[24, "arkouda.integer.numerator", false]], "numerator() (arkouda.numpy.integer method)": [[35, "arkouda.numpy.integer.numerator", false]], "numeric_and_bool_scalars (class in arkouda)": [[24, "arkouda.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (class in arkouda.dtypes)": [[21, "arkouda.dtypes.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (class in arkouda.numpy)": [[35, "arkouda.numpy.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.numeric_and_bool_scalars", false]], "numeric_scalars (class in arkouda)": [[24, "arkouda.numeric_scalars", false]], "numeric_scalars (class in arkouda.dtypes)": [[21, "arkouda.dtypes.numeric_scalars", false]], "numeric_scalars (class in arkouda.numpy)": [[35, "arkouda.numpy.numeric_scalars", false]], "numeric_scalars (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.numeric_scalars", false]], "numericdtypes (class in arkouda)": [[24, "arkouda.NumericDTypes", false]], "numericdtypes (class in arkouda.dtypes)": [[21, "arkouda.dtypes.NumericDTypes", false]], "numericdtypes (class in arkouda.numpy)": [[35, "arkouda.numpy.NumericDTypes", false]], "numericdtypes (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.NumericDTypes", false]], "numpy_scalars (class in arkouda)": [[24, "arkouda.numpy_scalars", false]], "numpy_scalars (class in arkouda.dtypes)": [[21, "arkouda.dtypes.numpy_scalars", false]], "numpy_scalars (class in arkouda.numpy)": [[35, "arkouda.numpy.numpy_scalars", false]], "numpy_scalars (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.numpy_scalars", false]], "nunique() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.nunique", false]], "nunique() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.nunique", false]], "nunique() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.nunique", false]], "nunique() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.nunique", false]], "nunique() (arkouda.groupby method)": [[24, "arkouda.GroupBy.nunique", false], [24, "id277", false], [24, "id324", false], [24, "id371", false], [24, "id418", false], [24, "id465", false], [91, "arkouda.GroupBy.nunique", false]], "nunique() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.nunique", false]], "nunique() (arkouda.segarray method)": [[24, "arkouda.SegArray.nunique", false]], "nunique() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.nunique", false]], "nzero (in module arkouda)": [[24, "arkouda.NZERO", false]], "nzero (in module arkouda.numpy)": [[35, "arkouda.numpy.NZERO", false]], "object_ (class in arkouda)": [[24, "arkouda.object_", false]], "object_ (class in arkouda.numpy)": [[35, "arkouda.numpy.object_", false]], "objectdtype (class in arkouda)": [[24, "arkouda.ObjectDType", false]], "objectdtype (class in arkouda.numpy)": [[35, "arkouda.numpy.ObjectDType", false]], "objtype (arkouda.categorical attribute)": [[24, "arkouda.Categorical.objType", false], [24, "id38", false], [24, "id96", false]], "objtype (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.objType", false]], "objtype (arkouda.index attribute)": [[24, "arkouda.Index.objType", false]], "objtype (arkouda.index.index attribute)": [[25, "arkouda.index.Index.objType", false]], "objtype (arkouda.index.multiindex attribute)": [[25, "arkouda.index.MultiIndex.objType", false]], "objtype (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.objType", false]], "objtype (arkouda.multiindex attribute)": [[24, "arkouda.MultiIndex.objType", false]], "objtype (arkouda.pdarray attribute)": [[24, "arkouda.pdarray.objType", false], [24, "id1028", false], [24, "id1098", false], [24, "id1168", false], [24, "id1238", false], [24, "id958", false]], "objtype (arkouda.pdarrayclass.pdarray attribute)": [[36, "arkouda.pdarrayclass.pdarray.objType", false]], "objtype (arkouda.segarray attribute)": [[24, "arkouda.SegArray.objType", false]], "objtype (arkouda.segarray.segarray attribute)": [[47, "arkouda.segarray.SegArray.objType", false]], "objtype (arkouda.strings attribute)": [[24, "arkouda.Strings.objType", false], [24, "id542", false], [24, "id617", false], [24, "id692", false], [24, "id767", false]], "objtype (arkouda.strings.strings attribute)": [[52, "arkouda.strings.Strings.objType", false]], "objtype() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.objType", false], [24, "id156", false]], "objtype() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.objType", false]], "objtype() (arkouda.groupby method)": [[24, "arkouda.GroupBy.objType", false], [24, "id278", false], [24, "id325", false], [24, "id372", false], [24, "id419", false], [24, "id466", false]], "objtype() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.objType", false]], "objtype() (arkouda.series method)": [[24, "arkouda.Series.objType", false]], "objtype() (arkouda.series.series method)": [[48, "arkouda.series.Series.objType", false]], "ones() (in module arkouda)": [[24, "arkouda.ones", false], [24, "id907", false], [24, "id908", false], [24, "id909", false], [89, "arkouda.ones", false]], "ones() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.ones", false]], "ones() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.ones", false]], "ones_like() (in module arkouda)": [[24, "arkouda.ones_like", false], [89, "arkouda.ones_like", false]], "ones_like() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.ones_like", false]], "ones_like() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.ones_like", false]], "open() (arkouda.datasource method)": [[24, "arkouda.DataSource.open", false]], "open() (arkouda.numpy.datasource method)": [[35, "arkouda.numpy.DataSource.open", false]], "opeq() (arkouda.bitvector method)": [[24, "arkouda.BitVector.opeq", false]], "opeq() (arkouda.client_dtypes.bitvector method)": [[19, "arkouda.client_dtypes.BitVector.opeq", false]], "opeq() (arkouda.client_dtypes.fields method)": [[19, "arkouda.client_dtypes.Fields.opeq", false]], "opeq() (arkouda.client_dtypes.ipv4 method)": [[19, "arkouda.client_dtypes.IPv4.opeq", false]], "opeq() (arkouda.fields method)": [[24, "arkouda.Fields.opeq", false]], "opeq() (arkouda.ipv4 method)": [[24, "arkouda.IPv4.opeq", false]], "opeq() (arkouda.pdarray method)": [[24, "arkouda.pdarray.opeq", false], [24, "id1029", false], [24, "id1099", false], [24, "id1169", false], [24, "id1239", false], [24, "id959", false]], "opeq() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.opeq", false]], "opeqops (arkouda.pdarray attribute)": [[24, "arkouda.pdarray.OpEqOps", false], [24, "id1066", false], [24, "id1136", false], [24, "id1206", false], [24, "id926", false], [24, "id996", false]], "opeqops (arkouda.pdarrayclass.pdarray attribute)": [[36, "arkouda.pdarrayclass.pdarray.OpEqOps", false]], "optional() (arkouda.dtypes.annotations method)": [[21, "arkouda.dtypes.annotations.optional", false]], "optional() (arkouda.numpy.dtypes.annotations method)": [[34, "arkouda.numpy.dtypes.annotations.optional", false]], "or() (arkouda.groupby method)": [[24, "arkouda.GroupBy.OR", false], [24, "id255", false], [24, "id302", false], [24, "id349", false], [24, "id396", false], [24, "id443", false], [91, "arkouda.GroupBy.OR", false]], "or() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.OR", false]], "or() (arkouda.segarray method)": [[24, "arkouda.SegArray.OR", false]], "or() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.OR", false]], "pad (arkouda.client_dtypes.fields attribute)": [[19, "arkouda.client_dtypes.Fields.pad", false]], "pad (arkouda.fields attribute)": [[24, "arkouda.Fields.pad", false]], "pad() (in module arkouda.array_api.utility_functions)": [[16, "arkouda.array_api.utility_functions.pad", false]], "padchar (arkouda.client_dtypes.fields attribute)": [[19, "arkouda.client_dtypes.Fields.padchar", false]], "padchar (arkouda.fields attribute)": [[24, "arkouda.Fields.padchar", false]], "parent_entry_name (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.parent_entry_name", false]], "parity() (arkouda.pdarray method)": [[24, "arkouda.pdarray.parity", false], [24, "id1030", false], [24, "id1100", false], [24, "id1170", false], [24, "id1240", false], [24, "id960", false]], "parity() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.parity", false]], "parity() (in module arkouda)": [[24, "arkouda.parity", false]], "parity() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.parity", false]], "parse_hdf_categoricals() (arkouda.categorical static method)": [[24, "arkouda.Categorical.parse_hdf_categoricals", false], [24, "id39", false], [24, "id97", false]], "parse_hdf_categoricals() (arkouda.categorical.categorical static method)": [[17, "arkouda.categorical.Categorical.parse_hdf_categoricals", false]], "pdarray (class in arkouda)": [[24, "arkouda.pdarray", false], [24, "id1058", false], [24, "id1128", false], [24, "id1198", false], [24, "id918", false], [24, "id988", false], [94, "arkouda.pdarray", false]], "pdarray (class in arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.pdarray", false]], "pdconcat() (arkouda.series method)": [[24, "arkouda.Series.pdconcat", false]], "pdconcat() (arkouda.series.series method)": [[48, "arkouda.series.Series.pdconcat", false]], "pdconcat() (in module arkouda.series)": [[97, "arkouda.Series.pdconcat", false]], "peel() (arkouda.strings method)": [[24, "arkouda.Strings.peel", false], [24, "id543", false], [24, "id618", false], [24, "id693", false], [24, "id768", false], [100, "arkouda.Strings.peel", false]], "peel() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.peel", false]], "permutation (arkouda.categorical attribute)": [[24, "arkouda.Categorical.permutation", false], [24, "id2", false], [24, "id40", false], [24, "id67", false], [24, "id9", false], [24, "id98", false], [88, "arkouda.Categorical.permutation", false]], "permutation (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.permutation", false], [17, "id2", false]], "permutation (arkouda.groupby attribute)": [[24, "arkouda.GroupBy.permutation", false], [24, "id248", false], [24, "id295", false], [24, "id342", false], [24, "id389", false], [24, "id436", false], [91, "arkouda.GroupBy.permutation", false]], "permutation (arkouda.groupbyclass.groupby attribute)": [[22, "arkouda.groupbyclass.GroupBy.permutation", false]], "permutation() (arkouda.generator method)": [[24, "arkouda.Generator.permutation", false]], "permutation() (arkouda.random.generator method)": [[41, "arkouda.random.Generator.permutation", false]], "permutation() (in module arkouda.random.generator)": [[95, "arkouda.random.Generator.permutation", false]], "permute_dims() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.permute_dims", false]], "pi (in module arkouda)": [[24, "arkouda.pi", false]], "pi (in module arkouda.numpy)": [[35, "arkouda.numpy.pi", false]], "pinf (in module arkouda)": [[24, "arkouda.PINF", false]], "pinf (in module arkouda.numpy)": [[35, "arkouda.numpy.PINF", false]], "plot_dist() (in module arkouda)": [[24, "arkouda.plot_dist", false]], "plot_dist() (in module arkouda.plotting)": [[40, "arkouda.plotting.plot_dist", false]], "poisson() (arkouda.generator method)": [[24, "arkouda.Generator.poisson", false]], "poisson() (arkouda.random.generator method)": [[41, "arkouda.random.Generator.poisson", false]], "poisson() (in module arkouda.random.generator)": [[95, "arkouda.random.Generator.poisson", false]], "pop() (arkouda.dtypes.number_format_strings method)": [[21, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.dtypes.seriesdtypes method)": [[21, "arkouda.dtypes.SeriesDTypes.pop", false]], "pop() (arkouda.number_format_strings method)": [[24, "arkouda.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.numpy.dtypes.number_format_strings method)": [[34, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.numpy.dtypes.seriesdtypes method)": [[34, "arkouda.numpy.dtypes.SeriesDTypes.pop", false]], "pop() (arkouda.numpy.number_format_strings method)": [[35, "arkouda.numpy.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.numpy.sctypedict method)": [[35, "arkouda.numpy.sctypeDict.pop", false]], "pop() (arkouda.numpy.sctypes method)": [[35, "arkouda.numpy.sctypes.pop", false]], "pop() (arkouda.numpy.seriesdtypes method)": [[35, "arkouda.numpy.SeriesDTypes.pop", false]], "pop() (arkouda.sctypedict method)": [[24, "arkouda.sctypeDict.pop", false]], "pop() (arkouda.sctypes method)": [[24, "arkouda.sctypes.pop", false]], "pop() (arkouda.seriesdtypes method)": [[24, "arkouda.SeriesDTypes.pop", false]], "popcount() (arkouda.pdarray method)": [[24, "arkouda.pdarray.popcount", false], [24, "id1031", false], [24, "id1101", false], [24, "id1171", false], [24, "id1241", false], [24, "id961", false]], "popcount() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.popcount", false]], "popcount() (in module arkouda)": [[24, "arkouda.popcount", false]], "popcount() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.popcount", false]], "popitem() (arkouda.dtypes.number_format_strings method)": [[21, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.dtypes.seriesdtypes method)": [[21, "arkouda.dtypes.SeriesDTypes.popitem", false]], "popitem() (arkouda.number_format_strings method)": [[24, "arkouda.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.numpy.dtypes.number_format_strings method)": [[34, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.numpy.dtypes.seriesdtypes method)": [[34, "arkouda.numpy.dtypes.SeriesDTypes.popitem", false]], "popitem() (arkouda.numpy.number_format_strings method)": [[35, "arkouda.numpy.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.numpy.sctypedict method)": [[35, "arkouda.numpy.sctypeDict.popitem", false]], "popitem() (arkouda.numpy.sctypes method)": [[35, "arkouda.numpy.sctypes.popitem", false]], "popitem() (arkouda.numpy.seriesdtypes method)": [[35, "arkouda.numpy.SeriesDTypes.popitem", false]], "popitem() (arkouda.sctypedict method)": [[24, "arkouda.sctypeDict.popitem", false]], "popitem() (arkouda.sctypes method)": [[24, "arkouda.sctypes.popitem", false]], "popitem() (arkouda.seriesdtypes method)": [[24, "arkouda.SeriesDTypes.popitem", false]], "populated (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.populated", false]], "positive() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.positive", false]], "pow() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.pow", false]], "power() (in module arkouda)": [[24, "arkouda.power", false]], "power() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.power", false]], "power_divergence() (in module arkouda)": [[24, "arkouda.power_divergence", false]], "power_divergence() (in module arkouda.scipy)": [[43, "arkouda.scipy.power_divergence", false]], "power_divergenceresult (class in arkouda)": [[24, "arkouda.Power_divergenceResult", false]], "power_divergenceresult (class in arkouda.scipy)": [[43, "arkouda.scipy.Power_divergenceResult", false]], "precision (arkouda.finfo attribute)": [[24, "arkouda.finfo.precision", false]], "precision (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.precision", false]], "prepend_single() (arkouda.segarray method)": [[24, "arkouda.SegArray.prepend_single", false]], "prepend_single() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.prepend_single", false]], "prepend_single() (in module arkouda.segarray)": [[96, "arkouda.SegArray.prepend_single", false]], "pretty_print_info() (arkouda.categorical method)": [[24, "arkouda.Categorical.pretty_print_info", false], [24, "id41", false], [24, "id99", false]], "pretty_print_info() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.pretty_print_info", false]], "pretty_print_info() (arkouda.pdarray method)": [[24, "arkouda.pdarray.pretty_print_info", false], [24, "id1032", false], [24, "id1102", false], [24, "id1172", false], [24, "id1242", false], [24, "id962", false]], "pretty_print_info() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.pretty_print_info", false]], "pretty_print_info() (arkouda.strings method)": [[24, "arkouda.Strings.pretty_print_info", false], [24, "id544", false], [24, "id619", false], [24, "id694", false], [24, "id769", false]], "pretty_print_info() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.pretty_print_info", false]], "pretty_print_information() (in module arkouda)": [[24, "arkouda.pretty_print_information", false]], "pretty_print_information() (in module arkouda.infoclass)": [[26, "arkouda.infoclass.pretty_print_information", false]], "print_server_commands() (in module arkouda.client)": [[18, "arkouda.client.print_server_commands", false]], "prod() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.prod", false]], "prod() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.prod", false]], "prod() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.prod", false]], "prod() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.prod", false]], "prod() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.prod", false]], "prod() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.prod", false]], "prod() (arkouda.groupby method)": [[24, "arkouda.GroupBy.prod", false], [24, "id279", false], [24, "id326", false], [24, "id373", false], [24, "id420", false], [24, "id467", false], [91, "arkouda.GroupBy.prod", false]], "prod() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.prod", false]], "prod() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.prod", false]], "prod() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.prod", false]], "prod() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.prod", false]], "prod() (arkouda.pdarray method)": [[24, "arkouda.pdarray.prod", false], [24, "id1033", false], [24, "id1103", false], [24, "id1173", false], [24, "id1243", false], [24, "id963", false], [92, "arkouda.pdarray.prod", false]], "prod() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.prod", false]], "prod() (arkouda.segarray method)": [[24, "arkouda.SegArray.prod", false]], "prod() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.prod", false]], "prod() (arkouda.series method)": [[24, "arkouda.Series.prod", false]], "prod() (arkouda.series.series method)": [[48, "arkouda.series.Series.prod", false]], "prod() (arkouda.str_ method)": [[24, "arkouda.str_.prod", false], [24, "id1313", false]], "prod() (in module arkouda)": [[24, "arkouda.prod", false], [86, "arkouda.prod", false]], "prod() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.prod", false]], "prod() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.prod", false]], "promote_to_common_dtype() (in module arkouda)": [[24, "arkouda.promote_to_common_dtype", false]], "promote_to_common_dtype() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.promote_to_common_dtype", false]], "properties (class in arkouda)": [[24, "arkouda.Properties", false]], "properties (class in arkouda.accessor)": [[2, "arkouda.accessor.Properties", false]], "ptp() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.ptp", false]], "ptp() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.ptp", false]], "ptp() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.ptp", false]], "ptp() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.ptp", false]], "ptp() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.ptp", false]], "ptp() (arkouda.str_ method)": [[24, "arkouda.str_.ptp", false], [24, "id1314", false]], "purge_cached_regex_patterns() (arkouda.strings method)": [[24, "arkouda.Strings.purge_cached_regex_patterns", false], [24, "id545", false], [24, "id620", false], [24, "id695", false], [24, "id770", false]], "purge_cached_regex_patterns() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.purge_cached_regex_patterns", false]], "put() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.put", false]], "put() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.put", false]], "put() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.put", false]], "put() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.put", false]], "put() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.put", false]], "put() (arkouda.str_ method)": [[24, "arkouda.str_.put", false], [24, "id1315", false]], "putmask() (in module arkouda)": [[24, "arkouda.putmask", false]], "putmask() (in module arkouda.numeric)": [[33, "arkouda.numeric.putmask", false]], "pvalue (arkouda.power_divergenceresult attribute)": [[24, "arkouda.Power_divergenceResult.pvalue", false]], "pvalue (arkouda.scipy.power_divergenceresult attribute)": [[43, "arkouda.scipy.Power_divergenceResult.pvalue", false]], "pzero (in module arkouda)": [[24, "arkouda.PZERO", false]], "pzero (in module arkouda.numpy)": [[35, "arkouda.numpy.PZERO", false]], "rad2deg() (in module arkouda)": [[24, "arkouda.rad2deg", false]], "rad2deg() (in module arkouda.numeric)": [[33, "arkouda.numeric.rad2deg", false]], "randint() (in module arkouda)": [[24, "arkouda.randint", false], [24, "id1268", false], [89, "arkouda.randint", false]], "randint() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.randint", false]], "randint() (in module arkouda.random)": [[41, "arkouda.random.randint", false]], "random() (arkouda.generator method)": [[24, "arkouda.Generator.random", false]], "random() (arkouda.random.generator method)": [[41, "arkouda.random.Generator.random", false]], "random() (in module arkouda.random.generator)": [[95, "arkouda.random.Generator.random", false]], "random_sparse_matrix() (in module arkouda)": [[24, "arkouda.random_sparse_matrix", false]], "random_sparse_matrix() (in module arkouda.sparsematrix)": [[51, "arkouda.sparsematrix.random_sparse_matrix", false]], "random_strings_lognormal() (in module arkouda)": [[24, "arkouda.random_strings_lognormal", false]], "random_strings_lognormal() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.random_strings_lognormal", false]], "random_strings_uniform() (in module arkouda)": [[24, "arkouda.random_strings_uniform", false]], "random_strings_uniform() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.random_strings_uniform", false]], "rankwarning (class in arkouda)": [[24, "arkouda.RankWarning", false]], "rankwarning (class in arkouda.numpy)": [[35, "arkouda.numpy.RankWarning", false]], "ravel() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.ravel", false]], "ravel() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.ravel", false]], "ravel() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.ravel", false]], "ravel() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.ravel", false]], "ravel() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.ravel", false]], "ravel() (arkouda.str_ method)": [[24, "arkouda.str_.ravel", false], [24, "id1316", false]], "re (arkouda.match.match attribute)": [[31, "arkouda.match.Match.re", false]], "read() (in module arkouda)": [[24, "arkouda.read", false], [83, "arkouda.read", false]], "read() (in module arkouda.io)": [[27, "arkouda.io.read", false]], "read_csv() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.read_csv", false], [24, "id157", false]], "read_csv() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.read_csv", false]], "read_csv() (in module arkouda)": [[24, "arkouda.read_csv", false]], "read_csv() (in module arkouda.io)": [[27, "arkouda.io.read_csv", false]], "read_hdf() (arkouda.segarray class method)": [[24, "arkouda.SegArray.read_hdf", false]], "read_hdf() (arkouda.segarray.segarray class method)": [[47, "arkouda.segarray.SegArray.read_hdf", false]], "read_hdf() (in module arkouda)": [[24, "arkouda.read_hdf", false]], "read_hdf() (in module arkouda.io)": [[27, "arkouda.io.read_hdf", false]], "read_parquet() (in module arkouda)": [[24, "arkouda.read_parquet", false]], "read_parquet() (in module arkouda.io)": [[27, "arkouda.io.read_parquet", false]], "read_tagged_data() (in module arkouda)": [[24, "arkouda.read_tagged_data", false]], "read_tagged_data() (in module arkouda.io)": [[27, "arkouda.io.read_tagged_data", false]], "read_zarr() (in module arkouda)": [[24, "arkouda.read_zarr", false]], "read_zarr() (in module arkouda.io)": [[27, "arkouda.io.read_zarr", false]], "real() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.real", false]], "real() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.real", false]], "real() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.real", false]], "real() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.real", false]], "real() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.real", false]], "real() (arkouda.str_ method)": [[24, "arkouda.str_.real", false], [24, "id1317", false]], "real() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.real", false]], "receive() (in module arkouda)": [[24, "arkouda.receive", false]], "receive() (in module arkouda.io)": [[27, "arkouda.io.receive", false]], "receive_dataframe() (in module arkouda)": [[24, "arkouda.receive_dataframe", false]], "receive_dataframe() (in module arkouda.io)": [[27, "arkouda.io.receive_dataframe", false]], "reductions() (arkouda.groupby method)": [[24, "arkouda.GroupBy.Reductions", false], [24, "id256", false], [24, "id303", false], [24, "id350", false], [24, "id397", false], [24, "id444", false]], "reductions() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.Reductions", false]], "register() (arkouda.bitvector method)": [[24, "arkouda.BitVector.register", false]], "register() (arkouda.categorical method)": [[24, "arkouda.Categorical.register", false], [24, "id100", false], [24, "id42", false]], "register() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.register", false]], "register() (arkouda.client_dtypes.bitvector method)": [[19, "arkouda.client_dtypes.BitVector.register", false]], "register() (arkouda.client_dtypes.ipv4 method)": [[19, "arkouda.client_dtypes.IPv4.register", false]], "register() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.register", false], [24, "id158", false]], "register() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.register", false]], "register() (arkouda.datetime method)": [[24, "arkouda.Datetime.register", false], [24, "id194", false], [24, "id227", false]], "register() (arkouda.groupby method)": [[24, "arkouda.GroupBy.register", false], [24, "id280", false], [24, "id327", false], [24, "id374", false], [24, "id421", false], [24, "id468", false], [91, "arkouda.GroupBy.register", false]], "register() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.register", false]], "register() (arkouda.index method)": [[24, "arkouda.Index.register", false]], "register() (arkouda.index.index method)": [[25, "arkouda.index.Index.register", false]], "register() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.register", false]], "register() (arkouda.ipv4 method)": [[24, "arkouda.IPv4.register", false]], "register() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.register", false]], "register() (arkouda.pdarray method)": [[24, "arkouda.pdarray.register", false], [24, "id1034", false], [24, "id1104", false], [24, "id1174", false], [24, "id1244", false], [24, "id964", false]], "register() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.register", false]], "register() (arkouda.segarray method)": [[24, "arkouda.SegArray.register", false]], "register() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.register", false]], "register() (arkouda.series method)": [[24, "arkouda.Series.register", false]], "register() (arkouda.series.series method)": [[48, "arkouda.series.Series.register", false]], "register() (arkouda.strings method)": [[24, "arkouda.Strings.register", false], [24, "id546", false], [24, "id621", false], [24, "id696", false], [24, "id771", false]], "register() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.register", false]], "register() (arkouda.timeclass.datetime method)": [[54, "arkouda.timeclass.Datetime.register", false]], "register() (arkouda.timeclass.timedelta method)": [[54, "arkouda.timeclass.Timedelta.register", false]], "register() (arkouda.timedelta method)": [[24, "arkouda.Timedelta.register", false], [24, "id800", false]], "register() (in module arkouda.util)": [[55, "arkouda.util.register", false]], "register_all() (in module arkouda)": [[24, "arkouda.register_all", false]], "register_all() (in module arkouda.util)": [[55, "arkouda.util.register_all", false]], "registerablepieces (arkouda.categorical attribute)": [[24, "arkouda.Categorical.RegisterablePieces", false], [24, "id16", false], [24, "id74", false]], "registerablepieces (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.RegisterablePieces", false]], "registered_name (arkouda.bitvector attribute)": [[24, "arkouda.BitVector.registered_name", false]], "registered_name (arkouda.categorical attribute)": [[24, "arkouda.Categorical.registered_name", false], [24, "id101", false], [24, "id43", false]], "registered_name (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.registered_name", false]], "registered_name (arkouda.client_dtypes.bitvector attribute)": [[19, "arkouda.client_dtypes.BitVector.registered_name", false]], "registered_name (arkouda.index attribute)": [[24, "arkouda.Index.registered_name", false]], "registered_name (arkouda.index.index attribute)": [[25, "arkouda.index.Index.registered_name", false]], "registered_name (arkouda.index.multiindex attribute)": [[25, "arkouda.index.MultiIndex.registered_name", false]], "registered_name (arkouda.multiindex attribute)": [[24, "arkouda.MultiIndex.registered_name", false]], "registered_name (arkouda.pdarray attribute)": [[24, "arkouda.pdarray.registered_name", false], [24, "id1035", false], [24, "id1105", false], [24, "id1175", false], [24, "id1245", false], [24, "id965", false]], "registered_name (arkouda.pdarrayclass.pdarray attribute)": [[36, "arkouda.pdarrayclass.pdarray.registered_name", false]], "registered_name (arkouda.segarray attribute)": [[24, "arkouda.SegArray.registered_name", false]], "registered_name (arkouda.segarray.segarray attribute)": [[47, "arkouda.segarray.SegArray.registered_name", false]], "registered_name (arkouda.strings attribute)": [[24, "arkouda.Strings.registered_name", false], [24, "id547", false], [24, "id622", false], [24, "id697", false], [24, "id772", false]], "registered_name (arkouda.strings.strings attribute)": [[52, "arkouda.strings.Strings.registered_name", false]], "registeredsymbols (in module arkouda)": [[24, "arkouda.RegisteredSymbols", false]], "registeredsymbols (in module arkouda.infoclass)": [[26, "arkouda.infoclass.RegisteredSymbols", false]], "registrationerror": [[24, "arkouda.RegistrationError", false], [24, "id484", false], [24, "id485", false], [24, "id486", false], [24, "id487", false], [36, "arkouda.pdarrayclass.RegistrationError", false]], "remainder() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.remainder", false]], "remove_repeats() (arkouda.segarray method)": [[24, "arkouda.SegArray.remove_repeats", false]], "remove_repeats() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.remove_repeats", false]], "remove_repeats() (in module arkouda.segarray)": [[96, "arkouda.SegArray.remove_repeats", false]], "rename() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.rename", false], [24, "id159", false]], "rename() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.rename", false]], "rename() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.rename", false]], "repeat() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.repeat", false]], "repeat() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.repeat", false]], "repeat() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.repeat", false]], "repeat() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.repeat", false]], "repeat() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.repeat", false]], "repeat() (arkouda.str_ method)": [[24, "arkouda.str_.repeat", false], [24, "id1318", false]], "repeat() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.repeat", false]], "report_mem() (in module arkouda.util)": [[55, "arkouda.util.report_mem", false]], "requiredpieces (arkouda.categorical attribute)": [[24, "arkouda.Categorical.RequiredPieces", false], [24, "id17", false], [24, "id75", false]], "requiredpieces (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.RequiredPieces", false]], "reset_categories() (arkouda.categorical method)": [[24, "arkouda.Categorical.reset_categories", false], [24, "id102", false], [24, "id44", false]], "reset_categories() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.reset_categories", false]], "reset_index() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.reset_index", false], [24, "id160", false]], "reset_index() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.reset_index", false]], "reset_index() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.reset_index", false]], "reshape() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.reshape", false]], "reshape() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.reshape", false]], "reshape() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.reshape", false]], "reshape() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.reshape", false]], "reshape() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.reshape", false]], "reshape() (arkouda.pdarray method)": [[24, "arkouda.pdarray.reshape", false], [24, "id1036", false], [24, "id1106", false], [24, "id1176", false], [24, "id1246", false], [24, "id966", false]], "reshape() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.reshape", false]], "reshape() (arkouda.str_ method)": [[24, "arkouda.str_.reshape", false], [24, "id1319", false]], "reshape() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.reshape", false]], "resize() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.resize", false]], "resize() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.resize", false]], "resize() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.resize", false]], "resize() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.resize", false]], "resize() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.resize", false]], "resize() (arkouda.str_ method)": [[24, "arkouda.str_.resize", false], [24, "id1320", false]], "resolution (arkouda.finfo attribute)": [[24, "arkouda.finfo.resolution", false]], "resolution (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.resolution", false]], "resolve_scalar_dtype() (in module arkouda)": [[24, "arkouda.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.dtypes)": [[21, "arkouda.dtypes.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.numpy)": [[35, "arkouda.numpy.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.resolve_scalar_dtype", false]], "restore() (in module arkouda)": [[24, "arkouda.restore", false]], "restore() (in module arkouda.io)": [[27, "arkouda.io.restore", false]], "result_type() (in module arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.result_type", false]], "retrieve() (arkouda.history.historyretriever method)": [[23, "arkouda.history.HistoryRetriever.retrieve", false]], "retrieve() (arkouda.history.notebookhistoryretriever method)": [[23, "arkouda.history.NotebookHistoryRetriever.retrieve", false]], "retrieve() (arkouda.history.shellhistoryretriever method)": [[23, "arkouda.history.ShellHistoryRetriever.retrieve", false]], "return_validity (arkouda.errormode attribute)": [[24, "arkouda.ErrorMode.return_validity", false]], "return_validity (arkouda.numeric.errormode attribute)": [[33, "arkouda.numeric.ErrorMode.return_validity", false]], "reverse (arkouda.bitvector attribute)": [[24, "arkouda.BitVector.reverse", false]], "reverse (arkouda.client_dtypes.bitvector attribute)": [[19, "arkouda.client_dtypes.BitVector.reverse", false]], "right_align() (in module arkouda)": [[24, "arkouda.right_align", false]], "right_align() (in module arkouda.alignment)": [[3, "arkouda.alignment.right_align", false]], "roll() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.roll", false]], "rotl() (arkouda.pdarray method)": [[24, "arkouda.pdarray.rotl", false], [24, "id1037", false], [24, "id1107", false], [24, "id1177", false], [24, "id1247", false], [24, "id967", false]], "rotl() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.rotl", false]], "rotl() (in module arkouda)": [[24, "arkouda.rotl", false]], "rotl() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.rotl", false]], "rotr() (arkouda.pdarray method)": [[24, "arkouda.pdarray.rotr", false], [24, "id1038", false], [24, "id1108", false], [24, "id1178", false], [24, "id1248", false], [24, "id968", false]], "rotr() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.rotr", false]], "rotr() (in module arkouda)": [[24, "arkouda.rotr", false]], "rotr() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.rotr", false]], "round() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.round", false]], "round() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.round", false]], "round() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.round", false]], "round() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.round", false]], "round() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.round", false]], "round() (arkouda.str_ method)": [[24, "arkouda.str_.round", false], [24, "id1321", false]], "round() (in module arkouda)": [[24, "arkouda.round", false]], "round() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.round", false]], "round() (in module arkouda.numeric)": [[33, "arkouda.numeric.round", false]], "row (class in arkouda)": [[24, "arkouda.Row", false]], "row (class in arkouda.row)": [[42, "arkouda.row.Row", false]], "rpeel() (arkouda.strings method)": [[24, "arkouda.Strings.rpeel", false], [24, "id548", false], [24, "id623", false], [24, "id698", false], [24, "id773", false], [100, "arkouda.Strings.rpeel", false]], "rpeel() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.rpeel", false]], "ruok() (in module arkouda.client)": [[18, "arkouda.client.ruok", false]], "sample() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.sample", false], [24, "id161", false]], "sample() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.sample", false]], "sample() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.sample", false]], "sample() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.sample", false]], "sample() (arkouda.groupby method)": [[24, "arkouda.GroupBy.sample", false], [24, "id281", false], [24, "id328", false], [24, "id375", false], [24, "id422", false], [24, "id469", false], [91, "arkouda.GroupBy.sample", false]], "sample() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.sample", false]], "save() (arkouda.categorical method)": [[24, "arkouda.Categorical.save", false], [24, "id103", false], [24, "id45", false]], "save() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.save", false]], "save() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.save", false], [24, "id162", false]], "save() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.save", false]], "save() (arkouda.index method)": [[24, "arkouda.Index.save", false]], "save() (arkouda.index.index method)": [[25, "arkouda.index.Index.save", false]], "save() (arkouda.pdarray method)": [[24, "arkouda.pdarray.save", false], [24, "id1039", false], [24, "id1109", false], [24, "id1179", false], [24, "id1249", false], [24, "id969", false]], "save() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.save", false]], "save() (arkouda.segarray method)": [[24, "arkouda.SegArray.save", false]], "save() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.save", false]], "save() (arkouda.strings method)": [[24, "arkouda.Strings.save", false], [24, "id549", false], [24, "id624", false], [24, "id699", false], [24, "id774", false]], "save() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.save", false]], "save_all() (in module arkouda)": [[24, "arkouda.save_all", false]], "save_all() (in module arkouda.io)": [[27, "arkouda.io.save_all", false]], "scalar_array() (in module arkouda)": [[24, "arkouda.scalar_array", false]], "scalar_array() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.scalar_array", false]], "scalardtypes (class in arkouda)": [[24, "arkouda.ScalarDTypes", false]], "scalardtypes (class in arkouda.dtypes)": [[21, "arkouda.dtypes.ScalarDTypes", false]], "scalardtypes (class in arkouda.numpy)": [[35, "arkouda.numpy.ScalarDTypes", false]], "scalardtypes (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.ScalarDTypes", false]], "scalartype (class in arkouda)": [[24, "arkouda.ScalarType", false]], "scalartype (class in arkouda.numpy)": [[35, "arkouda.numpy.ScalarType", false]], "sctypedict (class in arkouda)": [[24, "arkouda.sctypeDict", false]], "sctypedict (class in arkouda.numpy)": [[35, "arkouda.numpy.sctypeDict", false]], "sctypes (class in arkouda)": [[24, "arkouda.sctypes", false]], "sctypes (class in arkouda.numpy)": [[35, "arkouda.numpy.sctypes", false]], "search() (arkouda.strings method)": [[24, "arkouda.Strings.search", false], [24, "id550", false], [24, "id625", false], [24, "id700", false], [24, "id775", false], [100, "arkouda.Strings.search", false]], "search() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.search", false]], "search_bool (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.search_bool", false]], "search_ind (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.search_ind", false]], "search_intervals() (in module arkouda)": [[24, "arkouda.search_intervals", false]], "search_intervals() (in module arkouda.alignment)": [[3, "arkouda.alignment.search_intervals", false]], "searchsorted() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.searchsorted", false]], "searchsorted() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.searchsorted", false]], "searchsorted() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.searchsorted", false]], "searchsorted() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.searchsorted", false]], "searchsorted() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.searchsorted", false]], "searchsorted() (arkouda.str_ method)": [[24, "arkouda.str_.searchsorted", false], [24, "id1322", false]], "searchsorted() (in module arkouda.array_api.searching_functions)": [[12, "arkouda.array_api.searching_functions.searchsorted", false]], "second (arkouda.datetime property)": [[24, "arkouda.Datetime.second", false], [24, "id195", false], [24, "id228", false]], "second (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.second", false]], "seconds (arkouda.timeclass.timedelta property)": [[54, "arkouda.timeclass.Timedelta.seconds", false]], "seconds (arkouda.timedelta property)": [[24, "arkouda.Timedelta.seconds", false], [24, "id801", false]], "seg_suffix (in module arkouda)": [[24, "arkouda.SEG_SUFFIX", false]], "seg_suffix (in module arkouda.segarray)": [[47, "arkouda.segarray.SEG_SUFFIX", false]], "segarray (class in arkouda)": [[24, "arkouda.SegArray", false]], "segarray (class in arkouda.segarray)": [[47, "arkouda.segarray.SegArray", false]], "segarray() (in module arkouda)": [[24, "arkouda.segarray", false]], "segarray() (in module arkouda.segarray)": [[47, "arkouda.segarray.segarray", false]], "segments (arkouda.categorical attribute)": [[24, "arkouda.Categorical.segments", false], [24, "id10", false], [24, "id104", false], [24, "id3", false], [24, "id46", false], [24, "id68", false], [88, "arkouda.Categorical.segments", false]], "segments (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.segments", false], [17, "id3", false]], "segments (arkouda.groupby attribute)": [[24, "arkouda.GroupBy.segments", false], [24, "id251", false], [24, "id298", false], [24, "id345", false], [24, "id392", false], [24, "id439", false], [91, "arkouda.GroupBy.segments", false]], "segments (arkouda.groupbyclass.groupby attribute)": [[22, "arkouda.groupbyclass.GroupBy.segments", false]], "segments (arkouda.segarray attribute)": [[24, "arkouda.SegArray.segments", false]], "segments (arkouda.segarray.segarray attribute)": [[47, "arkouda.segarray.SegArray.segments", false]], "separator (arkouda.client_dtypes.fields attribute)": [[19, "arkouda.client_dtypes.Fields.separator", false]], "separator (arkouda.fields attribute)": [[24, "arkouda.Fields.separator", false]], "series (arkouda.accessor.datetimeaccessor attribute)": [[2, "arkouda.accessor.DatetimeAccessor.series", false]], "series (arkouda.accessor.stringaccessor attribute)": [[2, "arkouda.accessor.StringAccessor.series", false]], "series (arkouda.datetimeaccessor attribute)": [[24, "arkouda.DatetimeAccessor.series", false]], "series (arkouda.stringaccessor attribute)": [[24, "arkouda.StringAccessor.series", false]], "series (class in arkouda)": [[24, "arkouda.Series", false], [97, "arkouda.Series", false]], "series (class in arkouda.series)": [[48, "arkouda.series.Series", false]], "seriesdtypes (class in arkouda)": [[24, "arkouda.SeriesDTypes", false]], "seriesdtypes (class in arkouda.dtypes)": [[21, "arkouda.dtypes.SeriesDTypes", false]], "seriesdtypes (class in arkouda.numpy)": [[35, "arkouda.numpy.SeriesDTypes", false]], "seriesdtypes (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.SeriesDTypes", false]], "set_categories() (arkouda.categorical method)": [[24, "arkouda.Categorical.set_categories", false], [24, "id105", false], [24, "id47", false]], "set_categories() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.set_categories", false]], "set_dtype() (arkouda.index method)": [[24, "arkouda.Index.set_dtype", false]], "set_dtype() (arkouda.index.index method)": [[25, "arkouda.index.Index.set_dtype", false]], "set_dtype() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.set_dtype", false]], "set_dtype() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.set_dtype", false]], "set_dtype() (in module arkouda.index)": [[84, "arkouda.Index.set_dtype", false]], "set_dtype() (in module arkouda.multiindex)": [[84, "arkouda.MultiIndex.set_dtype", false]], "set_jth() (arkouda.segarray method)": [[24, "arkouda.SegArray.set_jth", false]], "set_jth() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.set_jth", false]], "set_jth() (in module arkouda.segarray)": [[96, "arkouda.SegArray.set_jth", false]], "setdefault() (arkouda.dtypes.number_format_strings method)": [[21, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.dtypes.seriesdtypes method)": [[21, "arkouda.dtypes.SeriesDTypes.setdefault", false]], "setdefault() (arkouda.number_format_strings method)": [[24, "arkouda.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.numpy.dtypes.number_format_strings method)": [[34, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.numpy.dtypes.seriesdtypes method)": [[34, "arkouda.numpy.dtypes.SeriesDTypes.setdefault", false]], "setdefault() (arkouda.numpy.number_format_strings method)": [[35, "arkouda.numpy.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.numpy.sctypedict method)": [[35, "arkouda.numpy.sctypeDict.setdefault", false]], "setdefault() (arkouda.numpy.sctypes method)": [[35, "arkouda.numpy.sctypes.setdefault", false]], "setdefault() (arkouda.numpy.seriesdtypes method)": [[35, "arkouda.numpy.SeriesDTypes.setdefault", false]], "setdefault() (arkouda.sctypedict method)": [[24, "arkouda.sctypeDict.setdefault", false]], "setdefault() (arkouda.sctypes method)": [[24, "arkouda.sctypes.setdefault", false]], "setdefault() (arkouda.seriesdtypes method)": [[24, "arkouda.SeriesDTypes.setdefault", false]], "setdiff() (arkouda.segarray method)": [[24, "arkouda.SegArray.setdiff", false]], "setdiff() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.setdiff", false]], "setdiff() (in module arkouda.segarray)": [[96, "arkouda.SegArray.setdiff", false]], "setdiff1d() (in module arkouda)": [[24, "arkouda.setdiff1d", false], [98, "arkouda.setdiff1d", false]], "setdiff1d() (in module arkouda.pdarraysetops)": [[39, "arkouda.pdarraysetops.setdiff1d", false]], "setfield() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.setfield", false]], "setfield() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.setfield", false]], "setfield() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.setfield", false]], "setfield() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.setfield", false]], "setfield() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.setfield", false]], "setfield() (arkouda.str_ method)": [[24, "arkouda.str_.setfield", false], [24, "id1323", false]], "setflags() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.setflags", false]], "setflags() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.setflags", false]], "setflags() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.setflags", false]], "setflags() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.setflags", false]], "setflags() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.setflags", false]], "setflags() (arkouda.str_ method)": [[24, "arkouda.str_.setflags", false], [24, "id1324", false]], "setxor() (arkouda.segarray method)": [[24, "arkouda.SegArray.setxor", false]], "setxor() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.setxor", false]], "setxor() (in module arkouda.segarray)": [[96, "arkouda.SegArray.setxor", false]], "setxor1d() (in module arkouda)": [[24, "arkouda.setxor1d", false], [98, "arkouda.setxor1d", false]], "setxor1d() (in module arkouda.pdarraysetops)": [[39, "arkouda.pdarraysetops.setxor1d", false]], "shape (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.shape", false]], "shape (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.shape", false]], "shape (arkouda.categorical attribute)": [[24, "arkouda.Categorical.shape", false], [24, "id106", false], [24, "id14", false], [24, "id4", false], [24, "id48", false], [24, "id72", false], [88, "arkouda.Categorical.shape", false]], "shape (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.shape", false], [17, "id4", false]], "shape (arkouda.dataframe property)": [[24, "arkouda.DataFrame.shape", false], [24, "id163", false]], "shape (arkouda.dataframe.dataframe property)": [[20, "arkouda.dataframe.DataFrame.shape", false]], "shape (arkouda.index property)": [[24, "arkouda.Index.shape", false]], "shape (arkouda.index.index property)": [[25, "arkouda.index.Index.shape", false]], "shape (arkouda.pdarray attribute)": [[24, "arkouda.pdarray.shape", false], [24, "id1040", false], [24, "id1063", false], [24, "id1110", false], [24, "id1133", false], [24, "id1180", false], [24, "id1203", false], [24, "id1250", false], [24, "id914", false], [24, "id923", false], [24, "id970", false], [24, "id993", false], [94, "arkouda.pdarray.shape", false]], "shape (arkouda.pdarrayclass.pdarray attribute)": [[36, "arkouda.pdarrayclass.pdarray.shape", false], [36, "id4", false]], "shape (arkouda.series property)": [[24, "arkouda.Series.shape", false]], "shape (arkouda.series.series property)": [[48, "arkouda.series.Series.shape", false]], "shape (arkouda.sparrayclass.sparray attribute)": [[50, "arkouda.sparrayclass.sparray.shape", false], [50, "id5", false]], "shape (arkouda.strings attribute)": [[24, "arkouda.Strings.shape", false], [24, "id498", false], [24, "id573", false], [24, "id648", false], [24, "id723", false]], "shape (arkouda.strings.strings attribute)": [[52, "arkouda.strings.Strings.shape", false]], "shape() (arkouda.bigint method)": [[24, "arkouda.bigint.shape", false], [24, "id844", false]], "shape() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.shape", false]], "shape() (arkouda.dtypes.bigint method)": [[21, "arkouda.dtypes.bigint.shape", false]], "shape() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.shape", false]], "shape() (arkouda.numpy.bigint method)": [[35, "arkouda.numpy.bigint.shape", false]], "shape() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.shape", false]], "shape() (arkouda.numpy.dtypes.bigint method)": [[34, "arkouda.numpy.dtypes.bigint.shape", false]], "shape() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.shape", false]], "shape() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.shape", false]], "shape() (arkouda.str_ method)": [[24, "arkouda.str_.shape", false], [24, "id1325", false]], "shapes() (arkouda.scipy.stats.chi2 method)": [[45, "arkouda.scipy.stats.chi2.shapes", false]], "shellhistoryretriever (class in arkouda.history)": [[23, "arkouda.history.ShellHistoryRetriever", false]], "short (class in arkouda)": [[24, "arkouda.short", false]], "short (class in arkouda.numpy)": [[35, "arkouda.numpy.short", false]], "shortdtype (class in arkouda)": [[24, "arkouda.ShortDType", false]], "shortdtype (class in arkouda.numpy)": [[35, "arkouda.numpy.ShortDType", false]], "show_int (arkouda.client_dtypes.fields attribute)": [[19, "arkouda.client_dtypes.Fields.show_int", false]], "show_int (arkouda.fields attribute)": [[24, "arkouda.Fields.show_int", false]], "shuffle() (arkouda.generator method)": [[24, "arkouda.Generator.shuffle", false]], "shuffle() (arkouda.random.generator method)": [[41, "arkouda.random.Generator.shuffle", false]], "shuffle() (in module arkouda.random.generator)": [[95, "arkouda.random.Generator.shuffle", false]], "shutdown() (in module arkouda.client)": [[18, "arkouda.client.shutdown", false]], "sign() (in module arkouda)": [[24, "arkouda.sign", false]], "sign() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.sign", false]], "sign() (in module arkouda.numeric)": [[33, "arkouda.numeric.sign", false]], "signedinteger (class in arkouda)": [[24, "arkouda.signedinteger", false]], "signedinteger (class in arkouda.numpy)": [[35, "arkouda.numpy.signedinteger", false]], "sin() (in module arkouda)": [[24, "arkouda.sin", false], [86, "arkouda.sin", false]], "sin() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.sin", false]], "sin() (in module arkouda.numeric)": [[33, "arkouda.numeric.sin", false]], "single (class in arkouda)": [[24, "arkouda.single", false]], "single (class in arkouda.numpy)": [[35, "arkouda.numpy.single", false]], "sinh() (in module arkouda)": [[24, "arkouda.sinh", false]], "sinh() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.sinh", false]], "sinh() (in module arkouda.numeric)": [[33, "arkouda.numeric.sinh", false]], "size (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.size", false]], "size (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.size", false]], "size (arkouda.categorical attribute)": [[24, "arkouda.Categorical.size", false], [24, "id107", false], [24, "id11", false], [24, "id49", false], [24, "id5", false], [24, "id69", false], [88, "arkouda.Categorical.size", false]], "size (arkouda.categorical.categorical attribute)": [[17, "arkouda.categorical.Categorical.size", false], [17, "id5", false]], "size (arkouda.dataframe property)": [[24, "arkouda.DataFrame.size", false], [24, "id164", false]], "size (arkouda.dataframe.dataframe property)": [[20, "arkouda.dataframe.DataFrame.size", false]], "size (arkouda.groupby attribute)": [[24, "arkouda.GroupBy.size", false], [24, "id247", false], [24, "id294", false], [24, "id341", false], [24, "id388", false], [24, "id435", false], [91, "arkouda.GroupBy.size", false]], "size (arkouda.groupbyclass.groupby attribute)": [[22, "arkouda.groupbyclass.GroupBy.size", false]], "size (arkouda.pdarray attribute)": [[24, "arkouda.pdarray.size", false], [24, "id1041", false], [24, "id1061", false], [24, "id1111", false], [24, "id1131", false], [24, "id1181", false], [24, "id1201", false], [24, "id1251", false], [24, "id915", false], [24, "id921", false], [24, "id971", false], [24, "id991", false], [94, "arkouda.pdarray.size", false]], "size (arkouda.pdarrayclass.pdarray attribute)": [[36, "arkouda.pdarrayclass.pdarray.size", false], [36, "id5", false]], "size (arkouda.segarray attribute)": [[24, "arkouda.SegArray.size", false]], "size (arkouda.segarray.segarray attribute)": [[47, "arkouda.segarray.SegArray.size", false]], "size (arkouda.sparrayclass.sparray attribute)": [[50, "arkouda.sparrayclass.sparray.size", false], [50, "id6", false]], "size (arkouda.strings attribute)": [[24, "arkouda.Strings.size", false], [24, "id495", false], [24, "id570", false], [24, "id645", false], [24, "id720", false]], "size (arkouda.strings.strings attribute)": [[52, "arkouda.strings.Strings.size", false]], "size() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.size", false]], "size() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.size", false]], "size() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.size", false]], "size() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.size", false]], "size() (arkouda.groupby method)": [[24, "id244", false], [24, "id282", false], [24, "id329", false], [24, "id376", false], [24, "id423", false], [24, "id470", false], [91, "id0", false]], "size() (arkouda.groupbyclass.groupby method)": [[22, "id0", false]], "size() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.size", false]], "size() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.size", false]], "size() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.size", false]], "size() (arkouda.str_ method)": [[24, "arkouda.str_.size", false], [24, "id1326", false]], "skew() (in module arkouda)": [[24, "arkouda.skew", false]], "slice_bits() (arkouda.pdarray method)": [[24, "arkouda.pdarray.slice_bits", false], [24, "id1042", false], [24, "id1112", false], [24, "id1182", false], [24, "id1252", false], [24, "id972", false]], "slice_bits() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.slice_bits", false]], "smallest_normal (arkouda.array_api.data_type_functions.finfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.finfo_object.smallest_normal", false]], "smallest_normal (arkouda.finfo attribute)": [[24, "arkouda.finfo.smallest_normal", false]], "smallest_normal (arkouda.finfo property)": [[24, "id869", false]], "smallest_normal (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.smallest_normal", false]], "smallest_normal (arkouda.numpy.finfo property)": [[35, "id0", false]], "smallest_subnormal (arkouda.finfo attribute)": [[24, "arkouda.finfo.smallest_subnormal", false]], "smallest_subnormal (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.smallest_subnormal", false]], "snapshot() (in module arkouda)": [[24, "arkouda.snapshot", false]], "snapshot() (in module arkouda.io)": [[27, "arkouda.io.snapshot", false]], "sort() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.sort", false]], "sort() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.sort", false]], "sort() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.sort", false]], "sort() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.sort", false]], "sort() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.sort", false]], "sort() (arkouda.str_ method)": [[24, "arkouda.str_.sort", false], [24, "id1327", false]], "sort() (in module arkouda)": [[24, "arkouda.sort", false]], "sort() (in module arkouda.array_api.sorting_functions)": [[14, "arkouda.array_api.sorting_functions.sort", false]], "sort() (in module arkouda.sorting)": [[49, "arkouda.sorting.sort", false]], "sort_index() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.sort_index", false], [24, "id165", false]], "sort_index() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.sort_index", false]], "sort_index() (arkouda.series method)": [[24, "arkouda.Series.sort_index", false]], "sort_index() (arkouda.series.series method)": [[48, "arkouda.series.Series.sort_index", false]], "sort_index() (in module arkouda.series)": [[97, "arkouda.Series.sort_index", false]], "sort_values() (arkouda.categorical method)": [[24, "arkouda.Categorical.sort_values", false], [24, "id108", false], [24, "id50", false]], "sort_values() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.sort_values", false]], "sort_values() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.sort_values", false], [24, "id166", false]], "sort_values() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.sort_values", false]], "sort_values() (arkouda.series method)": [[24, "arkouda.Series.sort_values", false]], "sort_values() (arkouda.series.series method)": [[48, "arkouda.series.Series.sort_values", false]], "sort_values() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.sort_values", false]], "sort_values() (in module arkouda.series)": [[97, "arkouda.Series.sort_values", false]], "sparray (class in arkouda.sparrayclass)": [[50, "arkouda.sparrayclass.sparray", false]], "sparse_matrix_matrix_mult() (in module arkouda)": [[24, "arkouda.sparse_matrix_matrix_mult", false]], "sparse_matrix_matrix_mult() (in module arkouda.sparsematrix)": [[51, "arkouda.sparsematrix.sparse_matrix_matrix_mult", false]], "sparse_sum_help() (in module arkouda.util)": [[55, "arkouda.util.sparse_sum_help", false]], "special_objtype (arkouda.bitvector attribute)": [[24, "arkouda.BitVector.special_objType", false]], "special_objtype (arkouda.client_dtypes.bitvector attribute)": [[19, "arkouda.client_dtypes.BitVector.special_objType", false]], "special_objtype (arkouda.client_dtypes.ipv4 attribute)": [[19, "arkouda.client_dtypes.IPv4.special_objType", false]], "special_objtype (arkouda.datetime attribute)": [[24, "arkouda.Datetime.special_objType", false], [24, "id196", false], [24, "id229", false]], "special_objtype (arkouda.ipv4 attribute)": [[24, "arkouda.IPv4.special_objType", false]], "special_objtype (arkouda.timeclass.datetime attribute)": [[54, "arkouda.timeclass.Datetime.special_objType", false]], "special_objtype (arkouda.timeclass.timedelta attribute)": [[54, "arkouda.timeclass.Timedelta.special_objType", false]], "special_objtype (arkouda.timedelta attribute)": [[24, "arkouda.Timedelta.special_objType", false], [24, "id802", false]], "split() (arkouda.matcher.matcher method)": [[32, "arkouda.matcher.Matcher.split", false]], "split() (arkouda.strings method)": [[24, "arkouda.Strings.split", false], [24, "id551", false], [24, "id626", false], [24, "id701", false], [24, "id776", false], [100, "arkouda.Strings.split", false]], "split() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.split", false]], "sqrt() (in module arkouda)": [[24, "arkouda.sqrt", false]], "sqrt() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.sqrt", false]], "sqrt() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.sqrt", false]], "square() (in module arkouda)": [[24, "arkouda.square", false]], "square() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.square", false]], "square() (in module arkouda.numeric)": [[33, "arkouda.numeric.square", false]], "squeeze() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.squeeze", false]], "squeeze() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.squeeze", false]], "squeeze() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.squeeze", false]], "squeeze() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.squeeze", false]], "squeeze() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.squeeze", false]], "squeeze() (arkouda.str_ method)": [[24, "arkouda.str_.squeeze", false], [24, "id1328", false]], "squeeze() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.squeeze", false]], "stack() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.stack", false]], "standard_exponential() (arkouda.generator method)": [[24, "arkouda.Generator.standard_exponential", false]], "standard_exponential() (arkouda.random.generator method)": [[41, "arkouda.random.Generator.standard_exponential", false]], "standard_exponential() (in module arkouda.random.generator)": [[95, "arkouda.random.Generator.standard_exponential", false]], "standard_normal() (arkouda.generator method)": [[24, "arkouda.Generator.standard_normal", false]], "standard_normal() (arkouda.random.generator method)": [[41, "arkouda.random.Generator.standard_normal", false]], "standard_normal() (in module arkouda)": [[24, "arkouda.standard_normal", false], [24, "id1273", false]], "standard_normal() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.standard_normal", false]], "standard_normal() (in module arkouda.random)": [[41, "arkouda.random.standard_normal", false]], "standard_normal() (in module arkouda.random.generator)": [[95, "arkouda.random.Generator.standard_normal", false]], "standardize_categories() (arkouda.categorical class method)": [[24, "arkouda.Categorical.standardize_categories", false], [24, "id109", false], [24, "id51", false]], "standardize_categories() (arkouda.categorical.categorical class method)": [[17, "arkouda.categorical.Categorical.standardize_categories", false]], "start() (arkouda.match.match method)": [[31, "arkouda.match.Match.start", false], [100, "arkouda.match.Match.start", false]], "starts (arkouda.matcher.matcher attribute)": [[32, "arkouda.matcher.Matcher.starts", false]], "startswith() (arkouda.categorical method)": [[24, "arkouda.Categorical.startswith", false], [24, "id110", false], [24, "id52", false], [88, "arkouda.Categorical.startswith", false]], "startswith() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.startswith", false]], "startswith() (arkouda.strings method)": [[24, "arkouda.Strings.startswith", false], [24, "id552", false], [24, "id627", false], [24, "id702", false], [24, "id777", false], [100, "arkouda.Strings.startswith", false]], "startswith() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.startswith", false]], "statistic (arkouda.power_divergenceresult attribute)": [[24, "arkouda.Power_divergenceResult.statistic", false]], "statistic (arkouda.scipy.power_divergenceresult attribute)": [[43, "arkouda.scipy.Power_divergenceResult.statistic", false]], "std() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.std", false]], "std() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.std", false]], "std() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.std", false]], "std() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.std", false]], "std() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.std", false]], "std() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.std", false]], "std() (arkouda.groupby method)": [[24, "arkouda.GroupBy.std", false], [24, "id283", false], [24, "id330", false], [24, "id377", false], [24, "id424", false], [24, "id471", false], [91, "arkouda.GroupBy.std", false]], "std() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.std", false]], "std() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.std", false]], "std() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.std", false]], "std() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.std", false]], "std() (arkouda.pdarray method)": [[24, "arkouda.pdarray.std", false], [24, "id1043", false], [24, "id1113", false], [24, "id1183", false], [24, "id1253", false], [24, "id973", false], [92, "arkouda.pdarray.std", false]], "std() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.std", false]], "std() (arkouda.series method)": [[24, "arkouda.Series.std", false]], "std() (arkouda.series.series method)": [[48, "arkouda.series.Series.std", false]], "std() (arkouda.str_ method)": [[24, "arkouda.str_.std", false], [24, "id1329", false]], "std() (arkouda.timeclass.timedelta method)": [[54, "arkouda.timeclass.Timedelta.std", false]], "std() (arkouda.timedelta method)": [[24, "arkouda.Timedelta.std", false], [24, "id803", false]], "std() (in module arkouda)": [[24, "arkouda.std", false], [86, "arkouda.std", false]], "std() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.std", false]], "std() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.std", false]], "stick() (arkouda.strings method)": [[24, "arkouda.Strings.stick", false], [24, "id553", false], [24, "id628", false], [24, "id703", false], [24, "id778", false], [100, "arkouda.Strings.stick", false]], "stick() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.stick", false]], "str() (arkouda.dtype method)": [[24, "arkouda.DType.STR", false]], "str() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.STR", false]], "str() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.STR", false]], "str() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.STR", false]], "str_ (class in arkouda)": [[24, "arkouda.str_", false], [24, "id1274", false]], "str_ (class in arkouda.dtypes)": [[21, "arkouda.dtypes.str_", false]], "str_ (class in arkouda.numpy)": [[35, "arkouda.numpy.str_", false]], "str_ (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.str_", false]], "str_acc() (arkouda.series method)": [[24, "arkouda.Series.str_acc", false]], "str_acc() (arkouda.series.series method)": [[48, "arkouda.series.Series.str_acc", false]], "str_scalars (class in arkouda)": [[24, "arkouda.str_scalars", false]], "str_scalars (class in arkouda.dtypes)": [[21, "arkouda.dtypes.str_scalars", false]], "str_scalars (class in arkouda.numpy)": [[35, "arkouda.numpy.str_scalars", false]], "str_scalars (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.str_scalars", false]], "strdtype (class in arkouda)": [[24, "arkouda.StrDType", false]], "strdtype (class in arkouda.numpy)": [[35, "arkouda.numpy.StrDType", false]], "strict (arkouda.errormode attribute)": [[24, "arkouda.ErrorMode.strict", false]], "strict (arkouda.numeric.errormode attribute)": [[33, "arkouda.numeric.ErrorMode.strict", false]], "strides() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.strides", false]], "strides() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.strides", false]], "strides() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.strides", false]], "strides() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.strides", false]], "strides() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.strides", false]], "strides() (arkouda.str_ method)": [[24, "arkouda.str_.strides", false], [24, "id1330", false]], "string_operators() (in module arkouda)": [[24, "arkouda.string_operators", false]], "string_operators() (in module arkouda.accessor)": [[2, "arkouda.accessor.string_operators", false]], "stringaccessor (class in arkouda)": [[24, "arkouda.StringAccessor", false]], "stringaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.StringAccessor", false]], "strings (class in arkouda)": [[24, "arkouda.Strings", false], [24, "id493", false], [24, "id568", false], [24, "id643", false], [24, "id718", false]], "strings (class in arkouda.strings)": [[52, "arkouda.strings.Strings", false]], "strip() (arkouda.strings method)": [[24, "arkouda.Strings.strip", false], [24, "id554", false], [24, "id629", false], [24, "id704", false], [24, "id779", false]], "strip() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.strip", false]], "sub() (arkouda.matcher.matcher method)": [[32, "arkouda.matcher.Matcher.sub", false]], "sub() (arkouda.strings method)": [[24, "arkouda.Strings.sub", false], [24, "id555", false], [24, "id630", false], [24, "id705", false], [24, "id780", false], [100, "arkouda.Strings.sub", false]], "sub() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.sub", false]], "subn() (arkouda.strings method)": [[24, "arkouda.Strings.subn", false], [24, "id556", false], [24, "id631", false], [24, "id706", false], [24, "id781", false], [100, "arkouda.Strings.subn", false]], "subn() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.subn", false]], "subtract() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.subtract", false]], "sum() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.sum", false]], "sum() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.sum", false]], "sum() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.sum", false]], "sum() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.sum", false]], "sum() (arkouda.datetime method)": [[24, "arkouda.Datetime.sum", false], [24, "id197", false], [24, "id230", false]], "sum() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.sum", false]], "sum() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.sum", false]], "sum() (arkouda.groupby method)": [[24, "arkouda.GroupBy.sum", false], [24, "id284", false], [24, "id331", false], [24, "id378", false], [24, "id425", false], [24, "id472", false], [91, "arkouda.GroupBy.sum", false]], "sum() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.sum", false]], "sum() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.sum", false]], "sum() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.sum", false]], "sum() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.sum", false]], "sum() (arkouda.pdarray method)": [[24, "arkouda.pdarray.sum", false], [24, "id1044", false], [24, "id1114", false], [24, "id1184", false], [24, "id1254", false], [24, "id974", false], [92, "arkouda.pdarray.sum", false]], "sum() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.sum", false]], "sum() (arkouda.segarray method)": [[24, "arkouda.SegArray.sum", false]], "sum() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.sum", false]], "sum() (arkouda.series method)": [[24, "arkouda.Series.sum", false]], "sum() (arkouda.series.series method)": [[48, "arkouda.series.Series.sum", false]], "sum() (arkouda.str_ method)": [[24, "arkouda.str_.sum", false], [24, "id1331", false]], "sum() (arkouda.timeclass.datetime method)": [[54, "arkouda.timeclass.Datetime.sum", false]], "sum() (arkouda.timeclass.timedelta method)": [[54, "arkouda.timeclass.Timedelta.sum", false]], "sum() (arkouda.timedelta method)": [[24, "arkouda.Timedelta.sum", false], [24, "id804", false]], "sum() (in module arkouda)": [[24, "arkouda.sum", false], [86, "arkouda.sum", false]], "sum() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.sum", false]], "sum() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.sum", false]], "supported_opeq (arkouda.datetime attribute)": [[24, "arkouda.Datetime.supported_opeq", false], [24, "id198", false], [24, "id231", false]], "supported_opeq (arkouda.timeclass.datetime attribute)": [[54, "arkouda.timeclass.Datetime.supported_opeq", false]], "supported_opeq (arkouda.timeclass.timedelta attribute)": [[54, "arkouda.timeclass.Timedelta.supported_opeq", false]], "supported_opeq (arkouda.timedelta attribute)": [[24, "arkouda.Timedelta.supported_opeq", false], [24, "id805", false]], "supported_with_datetime (arkouda.datetime attribute)": [[24, "arkouda.Datetime.supported_with_datetime", false], [24, "id199", false], [24, "id232", false]], "supported_with_datetime (arkouda.timeclass.datetime attribute)": [[54, "arkouda.timeclass.Datetime.supported_with_datetime", false]], "supported_with_datetime (arkouda.timeclass.timedelta attribute)": [[54, "arkouda.timeclass.Timedelta.supported_with_datetime", false]], "supported_with_datetime (arkouda.timedelta attribute)": [[24, "arkouda.Timedelta.supported_with_datetime", false], [24, "id806", false]], "supported_with_pdarray (arkouda.datetime attribute)": [[24, "arkouda.Datetime.supported_with_pdarray", false], [24, "id200", false], [24, "id233", false]], "supported_with_pdarray (arkouda.timeclass.datetime attribute)": [[54, "arkouda.timeclass.Datetime.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.timeclass.timedelta attribute)": [[54, "arkouda.timeclass.Timedelta.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.timedelta attribute)": [[24, "arkouda.Timedelta.supported_with_pdarray", false], [24, "id807", false]], "supported_with_r_datetime (arkouda.datetime attribute)": [[24, "arkouda.Datetime.supported_with_r_datetime", false], [24, "id201", false], [24, "id234", false]], "supported_with_r_datetime (arkouda.timeclass.datetime attribute)": [[54, "arkouda.timeclass.Datetime.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.timeclass.timedelta attribute)": [[54, "arkouda.timeclass.Timedelta.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.timedelta attribute)": [[24, "arkouda.Timedelta.supported_with_r_datetime", false], [24, "id808", false]], "supported_with_r_pdarray (arkouda.datetime attribute)": [[24, "arkouda.Datetime.supported_with_r_pdarray", false], [24, "id202", false], [24, "id235", false]], "supported_with_r_pdarray (arkouda.timeclass.datetime attribute)": [[54, "arkouda.timeclass.Datetime.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.timeclass.timedelta attribute)": [[54, "arkouda.timeclass.Timedelta.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.timedelta attribute)": [[24, "arkouda.Timedelta.supported_with_r_pdarray", false], [24, "id809", false]], "supported_with_r_timedelta (arkouda.datetime attribute)": [[24, "arkouda.Datetime.supported_with_r_timedelta", false], [24, "id203", false], [24, "id236", false]], "supported_with_r_timedelta (arkouda.timeclass.datetime attribute)": [[54, "arkouda.timeclass.Datetime.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.timeclass.timedelta attribute)": [[54, "arkouda.timeclass.Timedelta.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.timedelta attribute)": [[24, "arkouda.Timedelta.supported_with_r_timedelta", false], [24, "id810", false]], "supported_with_timedelta (arkouda.datetime attribute)": [[24, "arkouda.Datetime.supported_with_timedelta", false], [24, "id204", false], [24, "id237", false]], "supported_with_timedelta (arkouda.timeclass.datetime attribute)": [[54, "arkouda.timeclass.Datetime.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.timeclass.timedelta attribute)": [[54, "arkouda.timeclass.Timedelta.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.timedelta attribute)": [[24, "arkouda.Timedelta.supported_with_timedelta", false], [24, "id811", false]], "swapaxes() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.swapaxes", false]], "swapaxes() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.swapaxes", false]], "swapaxes() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.swapaxes", false]], "swapaxes() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.swapaxes", false]], "swapaxes() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.swapaxes", false]], "swapaxes() (arkouda.str_ method)": [[24, "arkouda.str_.swapaxes", false], [24, "id1332", false]], "symmetric_difference() (arkouda.arkouda_supported_dtypes method)": [[24, "arkouda.ARKOUDA_SUPPORTED_DTYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypeobjects method)": [[24, "arkouda.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes method)": [[24, "arkouda.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.arkouda_supported_dtypes method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.dtypeobjects method)": [[21, "arkouda.dtypes.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.dtypes method)": [[21, "arkouda.dtypes.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.inttypes method)": [[21, "arkouda.dtypes.intTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.numericdtypes method)": [[21, "arkouda.dtypes.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.scalardtypes method)": [[21, "arkouda.dtypes.ScalarDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.groupby_reduction_types method)": [[24, "arkouda.GROUPBY_REDUCTION_TYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.groupbyclass.groupby_reduction_types method)": [[22, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.inttypes method)": [[24, "arkouda.intTypes.symmetric_difference", false], [24, "id889", false], [24, "id898", false]], "symmetric_difference() (arkouda.numericdtypes method)": [[24, "arkouda.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypeobjects method)": [[35, "arkouda.numpy.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes method)": [[35, "arkouda.numpy.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.dtypeobjects method)": [[34, "arkouda.numpy.dtypes.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.dtypes method)": [[34, "arkouda.numpy.dtypes.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.inttypes method)": [[34, "arkouda.numpy.dtypes.intTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.numericdtypes method)": [[34, "arkouda.numpy.dtypes.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.scalardtypes method)": [[34, "arkouda.numpy.dtypes.ScalarDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.inttypes method)": [[35, "arkouda.numpy.intTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.numericdtypes method)": [[35, "arkouda.numpy.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.scalardtypes method)": [[35, "arkouda.numpy.ScalarDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.scalardtypes method)": [[24, "arkouda.ScalarDTypes.symmetric_difference", false]], "t (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.T", false]], "t (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.T", false]], "t() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.T", false]], "t() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.T", false]], "t() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.T", false]], "t() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.T", false]], "t() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.T", false]], "t() (arkouda.str_ method)": [[24, "arkouda.str_.T", false], [24, "id1275", false]], "tail() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.tail", false], [24, "id167", false]], "tail() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.tail", false]], "tail() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.tail", false]], "tail() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.tail", false]], "tail() (arkouda.groupby method)": [[24, "arkouda.GroupBy.tail", false], [24, "id285", false], [24, "id332", false], [24, "id379", false], [24, "id426", false], [24, "id473", false], [91, "arkouda.GroupBy.tail", false]], "tail() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.tail", false]], "tail() (arkouda.series method)": [[24, "arkouda.Series.tail", false]], "tail() (arkouda.series.series method)": [[48, "arkouda.series.Series.tail", false]], "tail() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.tail", false]], "tail() (in module arkouda.series)": [[97, "arkouda.Series.tail", false]], "take() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.take", false]], "take() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.take", false]], "take() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.take", false]], "take() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.take", false]], "take() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.take", false]], "take() (arkouda.str_ method)": [[24, "arkouda.str_.take", false], [24, "id1333", false]], "take() (in module arkouda.array_api.indexing_functions)": [[9, "arkouda.array_api.indexing_functions.take", false]], "tan() (in module arkouda)": [[24, "arkouda.tan", false]], "tan() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.tan", false]], "tan() (in module arkouda.numeric)": [[33, "arkouda.numeric.tan", false]], "tanh() (in module arkouda)": [[24, "arkouda.tanh", false]], "tanh() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.tanh", false]], "tanh() (in module arkouda.numeric)": [[33, "arkouda.numeric.tanh", false]], "tensordot() (in module arkouda.array_api.linalg)": [[10, "arkouda.array_api.linalg.tensordot", false]], "tile() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.tile", false]], "timedelta (class in arkouda)": [[24, "arkouda.Timedelta", false], [24, "id793", false]], "timedelta (class in arkouda.timeclass)": [[54, "arkouda.timeclass.Timedelta", false]], "timedelta64 (class in arkouda)": [[24, "arkouda.timedelta64", false]], "timedelta64 (class in arkouda.numpy)": [[35, "arkouda.numpy.timedelta64", false]], "timedelta64dtype (class in arkouda)": [[24, "arkouda.TimeDelta64DType", false]], "timedelta64dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.TimeDelta64DType", false]], "timedelta_range() (in module arkouda)": [[24, "arkouda.timedelta_range", false], [24, "id1342", false]], "timedelta_range() (in module arkouda.timeclass)": [[54, "arkouda.timeclass.timedelta_range", false]], "tiny (arkouda.finfo attribute)": [[24, "arkouda.finfo.tiny", false]], "tiny (arkouda.finfo property)": [[24, "id870", false]], "tiny (arkouda.numpy.finfo attribute)": [[35, "arkouda.numpy.finfo.tiny", false]], "tiny (arkouda.numpy.finfo property)": [[35, "id11", false]], "title() (arkouda.strings method)": [[24, "arkouda.Strings.title", false], [24, "id557", false], [24, "id632", false], [24, "id707", false], [24, "id782", false]], "title() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.title", false]], "to_csv() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.to_csv", false], [24, "id168", false]], "to_csv() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.to_csv", false]], "to_csv() (arkouda.index method)": [[24, "arkouda.Index.to_csv", false]], "to_csv() (arkouda.index.index method)": [[25, "arkouda.index.Index.to_csv", false]], "to_csv() (arkouda.pdarray method)": [[24, "arkouda.pdarray.to_csv", false], [24, "id1045", false], [24, "id1115", false], [24, "id1185", false], [24, "id1255", false], [24, "id975", false]], "to_csv() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.to_csv", false]], "to_csv() (arkouda.strings method)": [[24, "arkouda.Strings.to_csv", false], [24, "id558", false], [24, "id633", false], [24, "id708", false], [24, "id783", false]], "to_csv() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.to_csv", false]], "to_csv() (in module arkouda)": [[24, "arkouda.to_csv", false]], "to_csv() (in module arkouda.io)": [[27, "arkouda.io.to_csv", false]], "to_cuda() (arkouda.pdarray method)": [[24, "arkouda.pdarray.to_cuda", false], [24, "id1048", false], [24, "id1118", false], [24, "id1188", false], [24, "id1258", false], [24, "id978", false]], "to_cuda() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.to_cuda", false]], "to_dataframe() (arkouda.series method)": [[24, "arkouda.Series.to_dataframe", false]], "to_dataframe() (arkouda.series.series method)": [[48, "arkouda.series.Series.to_dataframe", false]], "to_device() (arkouda.array_api.array method)": [[8, "arkouda.array_api.Array.to_device", false]], "to_device() (arkouda.array_api.array_object.array method)": [[4, "arkouda.array_api.array_object.Array.to_device", false]], "to_dict() (arkouda.index method)": [[24, "arkouda.Index.to_dict", false]], "to_dict() (arkouda.index.index method)": [[25, "arkouda.index.Index.to_dict", false]], "to_dict() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.to_dict", false]], "to_dict() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.to_dict", false]], "to_hdf() (arkouda.categorical method)": [[24, "arkouda.Categorical.to_hdf", false], [24, "id111", false], [24, "id53", false]], "to_hdf() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.to_hdf", false]], "to_hdf() (arkouda.client_dtypes.ipv4 method)": [[19, "arkouda.client_dtypes.IPv4.to_hdf", false]], "to_hdf() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.to_hdf", false], [24, "id169", false]], "to_hdf() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.to_hdf", false]], "to_hdf() (arkouda.groupby method)": [[24, "arkouda.GroupBy.to_hdf", false], [24, "id286", false], [24, "id333", false], [24, "id380", false], [24, "id427", false], [24, "id474", false], [91, "arkouda.GroupBy.to_hdf", false]], "to_hdf() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.to_hdf", false]], "to_hdf() (arkouda.index method)": [[24, "arkouda.Index.to_hdf", false]], "to_hdf() (arkouda.index.index method)": [[25, "arkouda.index.Index.to_hdf", false]], "to_hdf() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.to_hdf", false]], "to_hdf() (arkouda.ipv4 method)": [[24, "arkouda.IPv4.to_hdf", false]], "to_hdf() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.to_hdf", false]], "to_hdf() (arkouda.pdarray method)": [[24, "arkouda.pdarray.to_hdf", false], [24, "id1049", false], [24, "id1119", false], [24, "id1189", false], [24, "id1259", false], [24, "id979", false]], "to_hdf() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.to_hdf", false]], "to_hdf() (arkouda.segarray method)": [[24, "arkouda.SegArray.to_hdf", false]], "to_hdf() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.to_hdf", false]], "to_hdf() (arkouda.strings method)": [[24, "arkouda.Strings.to_hdf", false], [24, "id559", false], [24, "id634", false], [24, "id709", false], [24, "id784", false]], "to_hdf() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.to_hdf", false]], "to_hdf() (in module arkouda)": [[24, "arkouda.to_hdf", false]], "to_hdf() (in module arkouda.io)": [[27, "arkouda.io.to_hdf", false]], "to_list() (arkouda.bitvector method)": [[24, "arkouda.BitVector.to_list", false]], "to_list() (arkouda.categorical method)": [[24, "arkouda.Categorical.to_list", false], [24, "id112", false], [24, "id54", false]], "to_list() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.to_list", false]], "to_list() (arkouda.client_dtypes.bitvector method)": [[19, "arkouda.client_dtypes.BitVector.to_list", false]], "to_list() (arkouda.client_dtypes.ipv4 method)": [[19, "arkouda.client_dtypes.IPv4.to_list", false]], "to_list() (arkouda.index method)": [[24, "arkouda.Index.to_list", false]], "to_list() (arkouda.index.index method)": [[25, "arkouda.index.Index.to_list", false]], "to_list() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.to_list", false]], "to_list() (arkouda.ipv4 method)": [[24, "arkouda.IPv4.to_list", false]], "to_list() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.to_list", false]], "to_list() (arkouda.pdarray method)": [[24, "arkouda.pdarray.to_list", false], [24, "id1050", false], [24, "id1120", false], [24, "id1190", false], [24, "id1260", false], [24, "id980", false]], "to_list() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.to_list", false]], "to_list() (arkouda.segarray method)": [[24, "arkouda.SegArray.to_list", false]], "to_list() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.to_list", false]], "to_list() (arkouda.series method)": [[24, "arkouda.Series.to_list", false]], "to_list() (arkouda.series.series method)": [[48, "arkouda.series.Series.to_list", false]], "to_list() (arkouda.strings method)": [[24, "arkouda.Strings.to_list", false], [24, "id560", false], [24, "id635", false], [24, "id710", false], [24, "id785", false]], "to_list() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.to_list", false]], "to_markdown() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.to_markdown", false], [24, "id170", false]], "to_markdown() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.to_markdown", false]], "to_markdown() (arkouda.series method)": [[24, "arkouda.Series.to_markdown", false]], "to_markdown() (arkouda.series.series method)": [[48, "arkouda.series.Series.to_markdown", false]], "to_ndarray() (arkouda.array_api.array method)": [[8, "arkouda.array_api.Array.to_ndarray", false]], "to_ndarray() (arkouda.array_api.array_object.array method)": [[4, "arkouda.array_api.array_object.Array.to_ndarray", false]], "to_ndarray() (arkouda.bitvector method)": [[24, "arkouda.BitVector.to_ndarray", false]], "to_ndarray() (arkouda.categorical method)": [[24, "arkouda.Categorical.to_ndarray", false], [24, "id113", false], [24, "id55", false]], "to_ndarray() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.to_ndarray", false]], "to_ndarray() (arkouda.client_dtypes.bitvector method)": [[19, "arkouda.client_dtypes.BitVector.to_ndarray", false]], "to_ndarray() (arkouda.client_dtypes.ipv4 method)": [[19, "arkouda.client_dtypes.IPv4.to_ndarray", false]], "to_ndarray() (arkouda.index method)": [[24, "arkouda.Index.to_ndarray", false]], "to_ndarray() (arkouda.index.index method)": [[25, "arkouda.index.Index.to_ndarray", false]], "to_ndarray() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.to_ndarray", false]], "to_ndarray() (arkouda.ipv4 method)": [[24, "arkouda.IPv4.to_ndarray", false]], "to_ndarray() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.to_ndarray", false]], "to_ndarray() (arkouda.pdarray method)": [[24, "arkouda.pdarray.to_ndarray", false], [24, "id1051", false], [24, "id1121", false], [24, "id1191", false], [24, "id1261", false], [24, "id981", false]], "to_ndarray() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.to_ndarray", false]], "to_ndarray() (arkouda.segarray method)": [[24, "arkouda.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.series method)": [[24, "arkouda.Series.to_ndarray", false]], "to_ndarray() (arkouda.series.series method)": [[48, "arkouda.series.Series.to_ndarray", false]], "to_ndarray() (arkouda.strings method)": [[24, "arkouda.Strings.to_ndarray", false], [24, "id561", false], [24, "id636", false], [24, "id711", false], [24, "id786", false]], "to_ndarray() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.to_ndarray", false]], "to_ndarray() (in module arkouda.categorical)": [[88, "arkouda.Categorical.to_ndarray", false]], "to_ndarray() (in module arkouda.pdarray)": [[83, "arkouda.pdarray.to_ndarray", false], [94, "arkouda.pdarray.to_ndarray", false]], "to_ndarray() (in module arkouda.segarray)": [[96, "arkouda.SegArray.to_ndarray", false]], "to_ndarray() (in module arkouda.strings)": [[83, "arkouda.Strings.to_ndarray", false], [100, "arkouda.Strings.to_ndarray", false]], "to_pandas() (arkouda.categorical method)": [[24, "arkouda.Categorical.to_pandas", false], [24, "id114", false], [24, "id56", false]], "to_pandas() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.to_pandas", false]], "to_pandas() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.to_pandas", false], [24, "id171", false]], "to_pandas() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.to_pandas", false]], "to_pandas() (arkouda.datetime method)": [[24, "arkouda.Datetime.to_pandas", false], [24, "id205", false], [24, "id238", false]], "to_pandas() (arkouda.index method)": [[24, "arkouda.Index.to_pandas", false]], "to_pandas() (arkouda.index.index method)": [[25, "arkouda.index.Index.to_pandas", false]], "to_pandas() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.to_pandas", false]], "to_pandas() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.to_pandas", false]], "to_pandas() (arkouda.series method)": [[24, "arkouda.Series.to_pandas", false]], "to_pandas() (arkouda.series.series method)": [[48, "arkouda.series.Series.to_pandas", false]], "to_pandas() (arkouda.timeclass.datetime method)": [[54, "arkouda.timeclass.Datetime.to_pandas", false]], "to_pandas() (arkouda.timeclass.timedelta method)": [[54, "arkouda.timeclass.Timedelta.to_pandas", false]], "to_pandas() (arkouda.timedelta method)": [[24, "arkouda.Timedelta.to_pandas", false], [24, "id812", false]], "to_pandas() (in module arkouda.dataframe)": [[90, "arkouda.DataFrame.to_pandas", false]], "to_pandas() (in module arkouda.series)": [[97, "arkouda.Series.to_pandas", false]], "to_parquet() (arkouda.categorical method)": [[24, "arkouda.Categorical.to_parquet", false], [24, "id115", false], [24, "id57", false]], "to_parquet() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.to_parquet", false]], "to_parquet() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.to_parquet", false], [24, "id172", false]], "to_parquet() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.to_parquet", false]], "to_parquet() (arkouda.index method)": [[24, "arkouda.Index.to_parquet", false]], "to_parquet() (arkouda.index.index method)": [[25, "arkouda.index.Index.to_parquet", false]], "to_parquet() (arkouda.pdarray method)": [[24, "arkouda.pdarray.to_parquet", false], [24, "id1052", false], [24, "id1122", false], [24, "id1192", false], [24, "id1262", false], [24, "id982", false]], "to_parquet() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.to_parquet", false]], "to_parquet() (arkouda.segarray method)": [[24, "arkouda.SegArray.to_parquet", false]], "to_parquet() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.to_parquet", false]], "to_parquet() (arkouda.strings method)": [[24, "arkouda.Strings.to_parquet", false], [24, "id562", false], [24, "id637", false], [24, "id712", false], [24, "id787", false]], "to_parquet() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.to_parquet", false]], "to_parquet() (in module arkouda)": [[24, "arkouda.to_parquet", false]], "to_parquet() (in module arkouda.io)": [[27, "arkouda.io.to_parquet", false]], "to_strings() (arkouda.categorical method)": [[24, "arkouda.Categorical.to_strings", false], [24, "id116", false], [24, "id58", false]], "to_strings() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.to_strings", false]], "to_zarr() (in module arkouda)": [[24, "arkouda.to_zarr", false]], "to_zarr() (in module arkouda.io)": [[27, "arkouda.io.to_zarr", false]], "tobytes() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.tobytes", false]], "tobytes() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.tobytes", false]], "tobytes() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.tobytes", false]], "tobytes() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.tobytes", false]], "tobytes() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.tobytes", false]], "tobytes() (arkouda.str_ method)": [[24, "arkouda.str_.tobytes", false], [24, "id1334", false]], "tofile() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.tofile", false]], "tofile() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.tofile", false]], "tofile() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.tofile", false]], "tofile() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.tofile", false]], "tofile() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.tofile", false]], "tofile() (arkouda.str_ method)": [[24, "arkouda.str_.tofile", false], [24, "id1335", false]], "tolist() (arkouda.array_api.array method)": [[8, "arkouda.array_api.Array.tolist", false]], "tolist() (arkouda.array_api.array_object.array method)": [[4, "arkouda.array_api.array_object.Array.tolist", false]], "tolist() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.tolist", false]], "tolist() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.tolist", false]], "tolist() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.tolist", false]], "tolist() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.tolist", false]], "tolist() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.tolist", false]], "tolist() (arkouda.str_ method)": [[24, "arkouda.str_.tolist", false], [24, "id1336", false]], "tooharderror (class in arkouda)": [[24, "arkouda.TooHardError", false]], "tooharderror (class in arkouda.numpy)": [[35, "arkouda.numpy.TooHardError", false]], "topn() (arkouda.series method)": [[24, "arkouda.Series.topn", false]], "topn() (arkouda.series.series method)": [[48, "arkouda.series.Series.topn", false]], "topn() (in module arkouda.series)": [[97, "arkouda.Series.topn", false]], "tostring() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.tostring", false]], "tostring() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.tostring", false]], "tostring() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.tostring", false]], "tostring() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.tostring", false]], "tostring() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.tostring", false]], "tostring() (arkouda.str_ method)": [[24, "arkouda.str_.tostring", false], [24, "id1337", false]], "total_seconds() (arkouda.timeclass.timedelta method)": [[54, "arkouda.timeclass.Timedelta.total_seconds", false]], "total_seconds() (arkouda.timedelta method)": [[24, "arkouda.Timedelta.total_seconds", false], [24, "id813", false]], "trace() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.trace", false]], "trace() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.trace", false]], "trace() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.trace", false]], "trace() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.trace", false]], "trace() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.trace", false]], "trace() (arkouda.str_ method)": [[24, "arkouda.str_.trace", false], [24, "id1338", false]], "transfer() (arkouda.categorical method)": [[24, "arkouda.Categorical.transfer", false], [24, "id117", false], [24, "id59", false]], "transfer() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.transfer", false]], "transfer() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.transfer", false], [24, "id173", false]], "transfer() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.transfer", false]], "transfer() (arkouda.pdarray method)": [[24, "arkouda.pdarray.transfer", false], [24, "id1053", false], [24, "id1123", false], [24, "id1193", false], [24, "id1263", false], [24, "id983", false]], "transfer() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.transfer", false]], "transfer() (arkouda.segarray method)": [[24, "arkouda.SegArray.transfer", false]], "transfer() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.transfer", false]], "transfer() (arkouda.strings method)": [[24, "arkouda.Strings.transfer", false], [24, "id563", false], [24, "id638", false], [24, "id713", false], [24, "id788", false]], "transfer() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.transfer", false]], "transpose() (arkouda.array_api.array method)": [[8, "arkouda.array_api.Array.transpose", false]], "transpose() (arkouda.array_api.array_object.array method)": [[4, "arkouda.array_api.array_object.Array.transpose", false]], "transpose() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.transpose", false]], "transpose() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.transpose", false]], "transpose() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.transpose", false]], "transpose() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.transpose", false]], "transpose() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.transpose", false]], "transpose() (arkouda.str_ method)": [[24, "arkouda.str_.transpose", false], [24, "id1339", false]], "transpose() (in module arkouda)": [[24, "arkouda.transpose", false]], "transpose() (in module arkouda.numeric)": [[33, "arkouda.numeric.transpose", false]], "tril() (in module arkouda)": [[24, "arkouda.tril", false]], "tril() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.tril", false]], "tril() (in module arkouda.numeric)": [[33, "arkouda.numeric.tril", false]], "triu() (in module arkouda)": [[24, "arkouda.triu", false]], "triu() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.triu", false]], "triu() (in module arkouda.numeric)": [[33, "arkouda.numeric.triu", false]], "true_ (class in arkouda)": [[24, "arkouda.True_", false]], "true_ (class in arkouda.numpy)": [[35, "arkouda.numpy.True_", false]], "trunc() (in module arkouda)": [[24, "arkouda.trunc", false]], "trunc() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.trunc", false]], "trunc() (in module arkouda.numeric)": [[33, "arkouda.numeric.trunc", false]], "type() (arkouda.bigint method)": [[24, "arkouda.bigint.type", false], [24, "id845", false]], "type() (arkouda.dtypes.bigint method)": [[21, "arkouda.dtypes.bigint.type", false]], "type() (arkouda.numpy.bigint method)": [[35, "arkouda.numpy.bigint.type", false]], "type() (arkouda.numpy.dtypes.bigint method)": [[34, "arkouda.numpy.dtypes.bigint.type", false]], "typename() (in module arkouda)": [[24, "arkouda.typename", false]], "typename() (in module arkouda.numpy)": [[35, "arkouda.numpy.typename", false]], "ubyte (class in arkouda)": [[24, "arkouda.ubyte", false]], "ubyte (class in arkouda.numpy)": [[35, "arkouda.numpy.ubyte", false]], "ubytedtype (class in arkouda)": [[24, "arkouda.UByteDType", false]], "ubytedtype (class in arkouda.numpy)": [[35, "arkouda.numpy.UByteDType", false]], "uint (class in arkouda)": [[24, "arkouda.uint", false]], "uint (class in arkouda.numpy)": [[35, "arkouda.numpy.uint", false]], "uint() (arkouda.dtype method)": [[24, "arkouda.DType.UINT", false]], "uint() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.UINT", false]], "uint() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.UINT", false]], "uint() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.UINT", false]], "uint16 (class in arkouda)": [[24, "arkouda.uint16", false]], "uint16 (class in arkouda.dtypes)": [[21, "arkouda.dtypes.uint16", false]], "uint16 (class in arkouda.numpy)": [[35, "arkouda.numpy.uint16", false]], "uint16 (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.uint16", false]], "uint16() (arkouda.dtype method)": [[24, "arkouda.DType.UINT16", false]], "uint16() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.UINT16", false]], "uint16() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.UINT16", false]], "uint16() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.UINT16", false]], "uint16dtype (class in arkouda)": [[24, "arkouda.UInt16DType", false]], "uint16dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.UInt16DType", false]], "uint32 (class in arkouda)": [[24, "arkouda.uint32", false]], "uint32 (class in arkouda.dtypes)": [[21, "arkouda.dtypes.uint32", false]], "uint32 (class in arkouda.numpy)": [[35, "arkouda.numpy.uint32", false]], "uint32 (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.uint32", false]], "uint32() (arkouda.dtype method)": [[24, "arkouda.DType.UINT32", false]], "uint32() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.UINT32", false]], "uint32() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.UINT32", false]], "uint32() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.UINT32", false]], "uint32dtype (class in arkouda)": [[24, "arkouda.UInt32DType", false]], "uint32dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.UInt32DType", false]], "uint64 (class in arkouda)": [[24, "arkouda.uint64", false]], "uint64 (class in arkouda.dtypes)": [[21, "arkouda.dtypes.uint64", false]], "uint64 (class in arkouda.numpy)": [[35, "arkouda.numpy.uint64", false]], "uint64 (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.uint64", false]], "uint64() (arkouda.dtype method)": [[24, "arkouda.DType.UINT64", false]], "uint64() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.UINT64", false]], "uint64() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.UINT64", false]], "uint64() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.UINT64", false]], "uint64dtype (class in arkouda)": [[24, "arkouda.UInt64DType", false]], "uint64dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.UInt64DType", false]], "uint8 (class in arkouda)": [[24, "arkouda.uint8", false]], "uint8 (class in arkouda.dtypes)": [[21, "arkouda.dtypes.uint8", false]], "uint8 (class in arkouda.numpy)": [[35, "arkouda.numpy.uint8", false]], "uint8 (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.uint8", false]], "uint8() (arkouda.dtype method)": [[24, "arkouda.DType.UINT8", false]], "uint8() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.UINT8", false]], "uint8() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.UINT8", false]], "uint8() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.UINT8", false]], "uint8dtype (class in arkouda)": [[24, "arkouda.UInt8DType", false]], "uint8dtype (class in arkouda.numpy)": [[35, "arkouda.numpy.UInt8DType", false]], "uintc (class in arkouda)": [[24, "arkouda.uintc", false]], "uintc (class in arkouda.numpy)": [[35, "arkouda.numpy.uintc", false]], "uintdtype (class in arkouda)": [[24, "arkouda.UIntDType", false]], "uintdtype (class in arkouda.numpy)": [[35, "arkouda.numpy.UIntDType", false]], "uintp (class in arkouda)": [[24, "arkouda.uintp", false]], "uintp (class in arkouda.numpy)": [[35, "arkouda.numpy.uintp", false]], "ulongdtype (class in arkouda)": [[24, "arkouda.ULongDType", false]], "ulongdtype (class in arkouda.numpy)": [[35, "arkouda.numpy.ULongDType", false]], "ulonglong (class in arkouda)": [[24, "arkouda.ulonglong", false]], "ulonglong (class in arkouda.numpy)": [[35, "arkouda.numpy.ulonglong", false]], "ulonglongdtype (class in arkouda)": [[24, "arkouda.ULongLongDType", false]], "ulonglongdtype (class in arkouda.numpy)": [[35, "arkouda.numpy.ULongLongDType", false]], "uniform() (arkouda.generator method)": [[24, "arkouda.Generator.uniform", false]], "uniform() (arkouda.random.generator method)": [[41, "arkouda.random.Generator.uniform", false]], "uniform() (in module arkouda)": [[24, "arkouda.uniform", false], [24, "id1343", false]], "uniform() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.uniform", false]], "uniform() (in module arkouda.random)": [[41, "arkouda.random.uniform", false]], "uniform() (in module arkouda.random.generator)": [[95, "arkouda.random.Generator.uniform", false]], "union (class in arkouda.dtypes)": [[21, "arkouda.dtypes.Union", false]], "union (class in arkouda.numpy.dtypes)": [[34, "arkouda.numpy.dtypes.Union", false]], "union() (arkouda.arkouda_supported_dtypes method)": [[24, "arkouda.ARKOUDA_SUPPORTED_DTYPES.union", false]], "union() (arkouda.dtypeobjects method)": [[24, "arkouda.DTypeObjects.union", false]], "union() (arkouda.dtypes method)": [[24, "arkouda.DTypes.union", false]], "union() (arkouda.dtypes.arkouda_supported_dtypes method)": [[21, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.union", false]], "union() (arkouda.dtypes.dtypeobjects method)": [[21, "arkouda.dtypes.DTypeObjects.union", false]], "union() (arkouda.dtypes.dtypes method)": [[21, "arkouda.dtypes.DTypes.union", false]], "union() (arkouda.dtypes.inttypes method)": [[21, "arkouda.dtypes.intTypes.union", false]], "union() (arkouda.dtypes.numericdtypes method)": [[21, "arkouda.dtypes.NumericDTypes.union", false]], "union() (arkouda.dtypes.scalardtypes method)": [[21, "arkouda.dtypes.ScalarDTypes.union", false]], "union() (arkouda.groupby_reduction_types method)": [[24, "arkouda.GROUPBY_REDUCTION_TYPES.union", false]], "union() (arkouda.groupbyclass.groupby_reduction_types method)": [[22, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.union", false]], "union() (arkouda.inttypes method)": [[24, "arkouda.intTypes.union", false], [24, "id890", false], [24, "id899", false]], "union() (arkouda.numericdtypes method)": [[24, "arkouda.NumericDTypes.union", false]], "union() (arkouda.numpy.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.union", false]], "union() (arkouda.numpy.dtypeobjects method)": [[35, "arkouda.numpy.DTypeObjects.union", false]], "union() (arkouda.numpy.dtypes method)": [[35, "arkouda.numpy.DTypes.union", false]], "union() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[34, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.union", false]], "union() (arkouda.numpy.dtypes.dtypeobjects method)": [[34, "arkouda.numpy.dtypes.DTypeObjects.union", false]], "union() (arkouda.numpy.dtypes.dtypes method)": [[34, "arkouda.numpy.dtypes.DTypes.union", false]], "union() (arkouda.numpy.dtypes.inttypes method)": [[34, "arkouda.numpy.dtypes.intTypes.union", false]], "union() (arkouda.numpy.dtypes.numericdtypes method)": [[34, "arkouda.numpy.dtypes.NumericDTypes.union", false]], "union() (arkouda.numpy.dtypes.scalardtypes method)": [[34, "arkouda.numpy.dtypes.ScalarDTypes.union", false]], "union() (arkouda.numpy.inttypes method)": [[35, "arkouda.numpy.intTypes.union", false]], "union() (arkouda.numpy.numericdtypes method)": [[35, "arkouda.numpy.NumericDTypes.union", false]], "union() (arkouda.numpy.scalardtypes method)": [[35, "arkouda.numpy.ScalarDTypes.union", false]], "union() (arkouda.scalardtypes method)": [[24, "arkouda.ScalarDTypes.union", false]], "union() (arkouda.segarray method)": [[24, "arkouda.SegArray.union", false]], "union() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.union", false]], "union() (in module arkouda.segarray)": [[96, "arkouda.SegArray.union", false]], "union1d() (in module arkouda)": [[24, "arkouda.union1d", false], [98, "arkouda.union1d", false]], "union1d() (in module arkouda.pdarraysetops)": [[39, "arkouda.pdarraysetops.union1d", false]], "unique() (arkouda.categorical method)": [[24, "arkouda.Categorical.unique", false], [24, "id118", false], [24, "id60", false]], "unique() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.unique", false]], "unique() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.unique", false]], "unique() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.unique", false]], "unique() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.unique", false]], "unique() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.unique", false]], "unique() (arkouda.groupby method)": [[24, "arkouda.GroupBy.unique", false], [24, "id287", false], [24, "id334", false], [24, "id381", false], [24, "id428", false], [24, "id475", false], [91, "arkouda.GroupBy.unique", false]], "unique() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.unique", false]], "unique() (arkouda.segarray method)": [[24, "arkouda.SegArray.unique", false]], "unique() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.unique", false]], "unique() (in module arkouda)": [[24, "arkouda.unique", false], [24, "id1344", false], [24, "id1345", false], [98, "arkouda.unique", false]], "unique() (in module arkouda.groupbyclass)": [[22, "arkouda.groupbyclass.unique", false]], "unique_all() (in module arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.unique_all", false]], "unique_counts() (in module arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.unique_counts", false]], "unique_inverse() (in module arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.unique_inverse", false]], "unique_keys (arkouda.groupby attribute)": [[24, "arkouda.GroupBy.unique_keys", false], [24, "id249", false], [24, "id296", false], [24, "id343", false], [24, "id390", false], [24, "id437", false], [91, "arkouda.GroupBy.unique_keys", false]], "unique_keys (arkouda.groupbyclass.groupby attribute)": [[22, "arkouda.groupbyclass.GroupBy.unique_keys", false]], "unique_values() (in module arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.unique_values", false]], "uniqueallresult (class in arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.UniqueAllResult", false]], "uniquecountsresult (class in arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.UniqueCountsResult", false]], "uniqueinverseresult (class in arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.UniqueInverseResult", false]], "unregister() (arkouda.categorical method)": [[24, "arkouda.Categorical.unregister", false], [24, "id119", false], [24, "id61", false]], "unregister() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.unregister", false]], "unregister() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.unregister", false], [24, "id174", false]], "unregister() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.unregister", false]], "unregister() (arkouda.datetime method)": [[24, "arkouda.Datetime.unregister", false], [24, "id206", false], [24, "id239", false]], "unregister() (arkouda.groupby method)": [[24, "arkouda.GroupBy.unregister", false], [24, "id288", false], [24, "id335", false], [24, "id382", false], [24, "id429", false], [24, "id476", false], [91, "arkouda.GroupBy.unregister", false]], "unregister() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.unregister", false]], "unregister() (arkouda.index method)": [[24, "arkouda.Index.unregister", false]], "unregister() (arkouda.index.index method)": [[25, "arkouda.index.Index.unregister", false]], "unregister() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.unregister", false]], "unregister() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.unregister", false]], "unregister() (arkouda.pdarray method)": [[24, "arkouda.pdarray.unregister", false], [24, "id1054", false], [24, "id1124", false], [24, "id1194", false], [24, "id1264", false], [24, "id984", false]], "unregister() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.unregister", false]], "unregister() (arkouda.segarray method)": [[24, "arkouda.SegArray.unregister", false]], "unregister() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.unregister", false]], "unregister() (arkouda.series method)": [[24, "arkouda.Series.unregister", false]], "unregister() (arkouda.series.series method)": [[48, "arkouda.series.Series.unregister", false]], "unregister() (arkouda.strings method)": [[24, "arkouda.Strings.unregister", false], [24, "id564", false], [24, "id639", false], [24, "id714", false], [24, "id789", false]], "unregister() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.unregister", false]], "unregister() (arkouda.timeclass.datetime method)": [[54, "arkouda.timeclass.Datetime.unregister", false]], "unregister() (arkouda.timeclass.timedelta method)": [[54, "arkouda.timeclass.Timedelta.unregister", false]], "unregister() (arkouda.timedelta method)": [[24, "arkouda.Timedelta.unregister", false], [24, "id814", false]], "unregister() (in module arkouda)": [[24, "arkouda.unregister", false]], "unregister() (in module arkouda.util)": [[55, "arkouda.util.unregister", false]], "unregister_all() (in module arkouda)": [[24, "arkouda.unregister_all", false]], "unregister_all() (in module arkouda.util)": [[55, "arkouda.util.unregister_all", false]], "unregister_categorical_by_name() (arkouda.categorical static method)": [[24, "arkouda.Categorical.unregister_categorical_by_name", false], [24, "id120", false], [24, "id62", false]], "unregister_categorical_by_name() (arkouda.categorical.categorical static method)": [[17, "arkouda.categorical.Categorical.unregister_categorical_by_name", false]], "unregister_dataframe_by_name() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.unregister_dataframe_by_name", false], [24, "id175", false]], "unregister_dataframe_by_name() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.unregister_dataframe_by_name", false]], "unregister_groupby_by_name() (arkouda.groupby method)": [[24, "arkouda.GroupBy.unregister_groupby_by_name", false], [24, "id289", false], [24, "id336", false], [24, "id383", false], [24, "id430", false], [24, "id477", false]], "unregister_groupby_by_name() (arkouda.groupby static method)": [[91, "arkouda.GroupBy.unregister_groupby_by_name", false]], "unregister_groupby_by_name() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.unregister_groupby_by_name", false]], "unregister_pdarray_by_name() (in module arkouda)": [[24, "arkouda.unregister_pdarray_by_name", false]], "unregister_pdarray_by_name() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.unregister_pdarray_by_name", false]], "unregister_segarray_by_name() (arkouda.segarray static method)": [[24, "arkouda.SegArray.unregister_segarray_by_name", false]], "unregister_segarray_by_name() (arkouda.segarray.segarray static method)": [[47, "arkouda.segarray.SegArray.unregister_segarray_by_name", false]], "unregister_strings_by_name() (arkouda.strings static method)": [[24, "arkouda.Strings.unregister_strings_by_name", false], [24, "id565", false], [24, "id640", false], [24, "id715", false], [24, "id790", false]], "unregister_strings_by_name() (arkouda.strings.strings static method)": [[52, "arkouda.strings.Strings.unregister_strings_by_name", false]], "unsignedinteger (class in arkouda)": [[24, "arkouda.unsignedinteger", false]], "unsignedinteger (class in arkouda.numpy)": [[35, "arkouda.numpy.unsignedinteger", false]], "unsqueeze() (in module arkouda)": [[24, "arkouda.unsqueeze", false]], "unsqueeze() (in module arkouda.alignment)": [[3, "arkouda.alignment.unsqueeze", false]], "unstack() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.unstack", false]], "update() (arkouda.dtypes.number_format_strings method)": [[21, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.dtypes.seriesdtypes method)": [[21, "arkouda.dtypes.SeriesDTypes.update", false]], "update() (arkouda.number_format_strings method)": [[24, "arkouda.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.numpy.dtypes.number_format_strings method)": [[34, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.numpy.dtypes.seriesdtypes method)": [[34, "arkouda.numpy.dtypes.SeriesDTypes.update", false]], "update() (arkouda.numpy.number_format_strings method)": [[35, "arkouda.numpy.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.numpy.sctypedict method)": [[35, "arkouda.numpy.sctypeDict.update", false]], "update() (arkouda.numpy.sctypes method)": [[35, "arkouda.numpy.sctypes.update", false]], "update() (arkouda.numpy.seriesdtypes method)": [[35, "arkouda.numpy.SeriesDTypes.update", false]], "update() (arkouda.sctypedict method)": [[24, "arkouda.sctypeDict.update", false]], "update() (arkouda.sctypes method)": [[24, "arkouda.sctypes.update", false]], "update() (arkouda.seriesdtypes method)": [[24, "arkouda.SeriesDTypes.update", false]], "update_hdf() (arkouda.categorical method)": [[24, "arkouda.Categorical.update_hdf", false], [24, "id121", false], [24, "id63", false]], "update_hdf() (arkouda.categorical.categorical method)": [[17, "arkouda.categorical.Categorical.update_hdf", false]], "update_hdf() (arkouda.client_dtypes.ipv4 method)": [[19, "arkouda.client_dtypes.IPv4.update_hdf", false]], "update_hdf() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.update_hdf", false], [24, "id176", false]], "update_hdf() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.update_hdf", false]], "update_hdf() (arkouda.groupby method)": [[24, "arkouda.GroupBy.update_hdf", false], [24, "id290", false], [24, "id337", false], [24, "id384", false], [24, "id431", false], [24, "id478", false]], "update_hdf() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.update_hdf", false]], "update_hdf() (arkouda.index method)": [[24, "arkouda.Index.update_hdf", false]], "update_hdf() (arkouda.index.index method)": [[25, "arkouda.index.Index.update_hdf", false]], "update_hdf() (arkouda.index.multiindex method)": [[25, "arkouda.index.MultiIndex.update_hdf", false]], "update_hdf() (arkouda.ipv4 method)": [[24, "arkouda.IPv4.update_hdf", false]], "update_hdf() (arkouda.multiindex method)": [[24, "arkouda.MultiIndex.update_hdf", false]], "update_hdf() (arkouda.pdarray method)": [[24, "arkouda.pdarray.update_hdf", false], [24, "id1055", false], [24, "id1125", false], [24, "id1195", false], [24, "id1265", false], [24, "id985", false]], "update_hdf() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.update_hdf", false]], "update_hdf() (arkouda.segarray method)": [[24, "arkouda.SegArray.update_hdf", false]], "update_hdf() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.update_hdf", false]], "update_hdf() (arkouda.strings method)": [[24, "arkouda.Strings.update_hdf", false], [24, "id566", false], [24, "id641", false], [24, "id716", false], [24, "id791", false]], "update_hdf() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.update_hdf", false]], "update_hdf() (in module arkouda)": [[24, "arkouda.update_hdf", false]], "update_hdf() (in module arkouda.io)": [[27, "arkouda.io.update_hdf", false]], "update_nrows() (arkouda.dataframe method)": [[24, "arkouda.DataFrame.update_nrows", false], [24, "id177", false]], "update_nrows() (arkouda.dataframe.dataframe method)": [[20, "arkouda.dataframe.DataFrame.update_nrows", false]], "upper() (arkouda.strings method)": [[24, "arkouda.Strings.upper", false], [24, "id567", false], [24, "id642", false], [24, "id717", false], [24, "id792", false]], "upper() (arkouda.strings.strings method)": [[52, "arkouda.strings.Strings.upper", false]], "username_tokenizer (in module arkouda.security)": [[46, "arkouda.security.username_tokenizer", false]], "ushort (class in arkouda)": [[24, "arkouda.ushort", false]], "ushort (class in arkouda.numpy)": [[35, "arkouda.numpy.ushort", false]], "ushortdtype (class in arkouda)": [[24, "arkouda.UShortDType", false]], "ushortdtype (class in arkouda.numpy)": [[35, "arkouda.numpy.UShortDType", false]], "val_suffix (in module arkouda)": [[24, "arkouda.VAL_SUFFIX", false]], "val_suffix (in module arkouda.segarray)": [[47, "arkouda.segarray.VAL_SUFFIX", false]], "validate_key() (arkouda.series method)": [[24, "arkouda.Series.validate_key", false]], "validate_key() (arkouda.series.series method)": [[48, "arkouda.series.Series.validate_key", false]], "validate_val() (arkouda.series method)": [[24, "arkouda.Series.validate_val", false]], "validate_val() (arkouda.series.series method)": [[48, "arkouda.series.Series.validate_val", false]], "valsize (arkouda.segarray attribute)": [[24, "arkouda.SegArray.valsize", false]], "valsize (arkouda.segarray.segarray attribute)": [[47, "arkouda.segarray.SegArray.valsize", false]], "value() (arkouda.dtype method)": [[24, "arkouda.DType.value", false]], "value() (arkouda.dtypes.dtype method)": [[21, "arkouda.dtypes.DType.value", false]], "value() (arkouda.numpy.dtype method)": [[35, "arkouda.numpy.DType.value", false]], "value() (arkouda.numpy.dtypes.dtype method)": [[34, "arkouda.numpy.dtypes.DType.value", false]], "value_counts() (arkouda.pdarray method)": [[24, "arkouda.pdarray.value_counts", false], [24, "id1056", false], [24, "id1126", false], [24, "id1196", false], [24, "id1266", false], [24, "id986", false]], "value_counts() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.value_counts", false]], "value_counts() (arkouda.series method)": [[24, "arkouda.Series.value_counts", false]], "value_counts() (arkouda.series.series method)": [[48, "arkouda.series.Series.value_counts", false]], "value_counts() (in module arkouda)": [[24, "arkouda.value_counts", false], [92, "arkouda.value_counts", false]], "value_counts() (in module arkouda.numeric)": [[33, "arkouda.numeric.value_counts", false]], "value_counts() (in module arkouda.series)": [[97, "arkouda.Series.value_counts", false]], "values (arkouda.array_api.set_functions.uniqueallresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueAllResult.values", false]], "values (arkouda.array_api.set_functions.uniquecountsresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueCountsResult.values", false]], "values (arkouda.array_api.set_functions.uniqueinverseresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueInverseResult.values", false]], "values (arkouda.bitvector attribute)": [[24, "arkouda.BitVector.values", false]], "values (arkouda.client_dtypes.bitvector attribute)": [[19, "arkouda.client_dtypes.BitVector.values", false]], "values (arkouda.client_dtypes.ipv4 attribute)": [[19, "arkouda.client_dtypes.IPv4.values", false]], "values (arkouda.dataframe.diffaggregate attribute)": [[20, "arkouda.dataframe.DiffAggregate.values", false]], "values (arkouda.diffaggregate attribute)": [[24, "arkouda.DiffAggregate.values", false]], "values (arkouda.ipv4 attribute)": [[24, "arkouda.IPv4.values", false]], "values (arkouda.segarray attribute)": [[24, "arkouda.SegArray.values", false]], "values (arkouda.segarray.segarray attribute)": [[47, "arkouda.segarray.SegArray.values", false]], "values() (arkouda.dtypes.number_format_strings method)": [[21, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.dtypes.seriesdtypes method)": [[21, "arkouda.dtypes.SeriesDTypes.values", false]], "values() (arkouda.number_format_strings method)": [[24, "arkouda.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.numpy.dtypes.number_format_strings method)": [[34, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.numpy.dtypes.seriesdtypes method)": [[34, "arkouda.numpy.dtypes.SeriesDTypes.values", false]], "values() (arkouda.numpy.number_format_strings method)": [[35, "arkouda.numpy.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.numpy.sctypedict method)": [[35, "arkouda.numpy.sctypeDict.values", false]], "values() (arkouda.numpy.sctypes method)": [[35, "arkouda.numpy.sctypes.values", false]], "values() (arkouda.numpy.seriesdtypes method)": [[35, "arkouda.numpy.SeriesDTypes.values", false]], "values() (arkouda.sctypedict method)": [[24, "arkouda.sctypeDict.values", false]], "values() (arkouda.sctypes method)": [[24, "arkouda.sctypes.values", false]], "values() (arkouda.seriesdtypes method)": [[24, "arkouda.SeriesDTypes.values", false]], "var() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.var", false]], "var() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.var", false]], "var() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.var", false]], "var() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.var", false]], "var() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.var", false]], "var() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.var", false]], "var() (arkouda.groupby method)": [[24, "arkouda.GroupBy.var", false], [24, "id291", false], [24, "id338", false], [24, "id385", false], [24, "id432", false], [24, "id479", false], [91, "arkouda.GroupBy.var", false]], "var() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.var", false]], "var() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.var", false]], "var() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.var", false]], "var() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.var", false]], "var() (arkouda.pdarray method)": [[24, "arkouda.pdarray.var", false], [24, "id1057", false], [24, "id1127", false], [24, "id1197", false], [24, "id1267", false], [24, "id987", false], [92, "arkouda.pdarray.var", false]], "var() (arkouda.pdarrayclass.pdarray method)": [[36, "arkouda.pdarrayclass.pdarray.var", false]], "var() (arkouda.series method)": [[24, "arkouda.Series.var", false]], "var() (arkouda.series.series method)": [[48, "arkouda.series.Series.var", false]], "var() (arkouda.str_ method)": [[24, "arkouda.str_.var", false], [24, "id1340", false]], "var() (in module arkouda)": [[24, "arkouda.var", false], [86, "arkouda.var", false]], "var() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.var", false]], "var() (in module arkouda.pdarrayclass)": [[36, "arkouda.pdarrayclass.var", false]], "vecdot() (in module arkouda)": [[24, "arkouda.vecdot", false]], "vecdot() (in module arkouda.array_api.linalg)": [[10, "arkouda.array_api.linalg.vecdot", false]], "vecdot() (in module arkouda.numeric)": [[33, "arkouda.numeric.vecdot", false]], "vecentropy() (arkouda.scipy.stats.chi2 method)": [[45, "arkouda.scipy.stats.chi2.vecentropy", false]], "view() (arkouda.bytes_ method)": [[24, "arkouda.bytes_.view", false]], "view() (arkouda.dtypes.str_ method)": [[21, "arkouda.dtypes.str_.view", false]], "view() (arkouda.numpy.bytes_ method)": [[35, "arkouda.numpy.bytes_.view", false]], "view() (arkouda.numpy.dtypes.str_ method)": [[34, "arkouda.numpy.dtypes.str_.view", false]], "view() (arkouda.numpy.str_ method)": [[35, "arkouda.numpy.str_.view", false]], "view() (arkouda.str_ method)": [[24, "arkouda.str_.view", false], [24, "id1341", false]], "void (class in arkouda)": [[24, "arkouda.void", false]], "void (class in arkouda.numpy)": [[35, "arkouda.numpy.void", false]], "voiddtype (class in arkouda)": [[24, "arkouda.VoidDType", false]], "voiddtype (class in arkouda.numpy)": [[35, "arkouda.numpy.VoidDType", false]], "vstack() (in module arkouda)": [[24, "arkouda.vstack", false]], "vstack() (in module arkouda.pdarraymanipulation)": [[38, "arkouda.pdarraymanipulation.vstack", false]], "warn (arkouda.logger.loglevel attribute)": [[30, "arkouda.logger.LogLevel.WARN", false]], "warn (arkouda.loglevel attribute)": [[24, "arkouda.LogLevel.WARN", false]], "week (arkouda.datetime property)": [[24, "arkouda.Datetime.week", false], [24, "id207", false], [24, "id240", false]], "week (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.week", false]], "weekday (arkouda.datetime property)": [[24, "arkouda.Datetime.weekday", false], [24, "id208", false], [24, "id241", false]], "weekday (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.weekday", false]], "weekofyear (arkouda.datetime property)": [[24, "arkouda.Datetime.weekofyear", false], [24, "id209", false], [24, "id242", false]], "weekofyear (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.weekofyear", false]], "where() (in module arkouda)": [[24, "arkouda.where", false], [24, "id1346", false], [24, "id1347", false], [86, "arkouda.where", false]], "where() (in module arkouda.array_api.searching_functions)": [[12, "arkouda.array_api.searching_functions.where", false]], "where() (in module arkouda.numeric)": [[33, "arkouda.numeric.where", false]], "width (arkouda.bitvector attribute)": [[24, "arkouda.BitVector.width", false]], "width (arkouda.client_dtypes.bitvector attribute)": [[19, "arkouda.client_dtypes.BitVector.width", false]], "width (arkouda.client_dtypes.fields attribute)": [[19, "arkouda.client_dtypes.Fields.width", false]], "width (arkouda.fields attribute)": [[24, "arkouda.Fields.width", false]], "write_line_to_file() (in module arkouda.io_util)": [[28, "arkouda.io_util.write_line_to_file", false]], "write_log() (in module arkouda)": [[24, "arkouda.write_log", false]], "write_log() (in module arkouda.logger)": [[30, "arkouda.logger.write_log", false]], "xlogy() (in module arkouda)": [[24, "arkouda.xlogy", false]], "xlogy() (in module arkouda.scipy.special)": [[44, "arkouda.scipy.special.xlogy", false]], "xor() (arkouda.dataframe.dataframegroupby method)": [[20, "arkouda.dataframe.DataFrameGroupBy.xor", false]], "xor() (arkouda.dataframe.diffaggregate method)": [[20, "arkouda.dataframe.DiffAggregate.xor", false]], "xor() (arkouda.dataframegroupby method)": [[24, "arkouda.DataFrameGroupBy.xor", false]], "xor() (arkouda.diffaggregate method)": [[24, "arkouda.DiffAggregate.xor", false]], "xor() (arkouda.groupby method)": [[24, "arkouda.GroupBy.XOR", false], [24, "id257", false], [24, "id304", false], [24, "id351", false], [24, "id398", false], [24, "id445", false], [91, "arkouda.GroupBy.XOR", false]], "xor() (arkouda.groupbyclass.groupby method)": [[22, "arkouda.groupbyclass.GroupBy.XOR", false]], "xor() (arkouda.segarray method)": [[24, "arkouda.SegArray.XOR", false]], "xor() (arkouda.segarray.segarray method)": [[47, "arkouda.segarray.SegArray.XOR", false]], "xtol() (arkouda.scipy.stats.chi2 method)": [[45, "arkouda.scipy.stats.chi2.xtol", false]], "year (arkouda.datetime property)": [[24, "arkouda.Datetime.year", false], [24, "id210", false], [24, "id243", false]], "year (arkouda.timeclass.datetime property)": [[54, "arkouda.timeclass.Datetime.year", false]], "zero_up() (in module arkouda)": [[24, "arkouda.zero_up", false]], "zero_up() (in module arkouda.alignment)": [[3, "arkouda.alignment.zero_up", false]], "zeros() (in module arkouda)": [[24, "arkouda.zeros", false], [24, "id1348", false], [24, "id1349", false], [24, "id1350", false], [89, "arkouda.zeros", false]], "zeros() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.zeros", false]], "zeros() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.zeros", false]], "zeros_like() (in module arkouda)": [[24, "arkouda.zeros_like", false], [89, "arkouda.zeros_like", false]], "zeros_like() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.zeros_like", false]], "zeros_like() (in module arkouda.pdarraycreation)": [[37, "arkouda.pdarraycreation.zeros_like", false]]}, "objects": {"": [[24, 0, 0, "-", "arkouda"]], "arkouda": [[24, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [24, 3, 1, "", "AllSymbols"], [24, 1, 1, "", "BitVector"], [24, 5, 1, "", "BitVectorizer"], [24, 1, 1, "", "BoolDType"], [24, 1, 1, "", "ByteDType"], [24, 1, 1, "", "BytesDType"], [24, 1, 1, "", "CLongDoubleDType"], [24, 1, 1, "", "CachedAccessor"], [88, 1, 1, "", "Categorical"], [24, 1, 1, "", "Complex128DType"], [24, 1, 1, "", "Complex64DType"], [24, 1, 1, "", "DType"], [24, 1, 1, "", "DTypeObjects"], [24, 1, 1, "", "DTypes"], [90, 1, 1, "", "DataFrame"], [24, 1, 1, "", "DataFrameGroupBy"], [24, 1, 1, "", "DataSource"], [24, 1, 1, "", "DateTime64DType"], [24, 1, 1, "id211", "Datetime"], [24, 1, 1, "", "DatetimeAccessor"], [24, 1, 1, "", "DiffAggregate"], [24, 1, 1, "", "ErrorMode"], [24, 1, 1, "", "False_"], [24, 1, 1, "", "Fields"], [24, 1, 1, "", "Float16DType"], [24, 1, 1, "", "Float32DType"], [24, 1, 1, "", "Float64DType"], [24, 1, 1, "", "GROUPBY_REDUCTION_TYPES"], [24, 1, 1, "", "Generator"], [91, 1, 1, "", "GroupBy"], [24, 1, 1, "", "IPv4"], [84, 1, 1, "", "Index"], [24, 3, 1, "", "Inf"], [24, 3, 1, "", "Infinity"], [24, 1, 1, "", "Int16DType"], [24, 1, 1, "", "Int32DType"], [24, 1, 1, "", "Int64DType"], [24, 1, 1, "", "Int8DType"], [24, 1, 1, "", "IntDType"], [24, 3, 1, "", "LEN_SUFFIX"], [24, 1, 1, "", "LogLevel"], [24, 1, 1, "", "LongDType"], [24, 1, 1, "", "LongDoubleDType"], [24, 1, 1, "", "LongLongDType"], [24, 1, 1, "", "MultiIndex"], [24, 3, 1, "", "NAN"], [24, 3, 1, "", "NINF"], [24, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [24, 3, 1, "", "NZERO"], [24, 3, 1, "", "NaN"], [24, 7, 1, "", "NonUniqueError"], [24, 1, 1, "", "NumericDTypes"], [24, 1, 1, "", "ObjectDType"], [24, 3, 1, "", "PINF"], [24, 3, 1, "", "PZERO"], [24, 1, 1, "", "Power_divergenceResult"], [24, 1, 1, "", "Properties"], [24, 1, 1, "", "RankWarning"], [24, 3, 1, "", "RegisteredSymbols"], [24, 7, 1, "id487", "RegistrationError"], [24, 1, 1, "", "Row"], [24, 3, 1, "", "SEG_SUFFIX"], [24, 1, 1, "", "ScalarDTypes"], [24, 1, 1, "", "ScalarType"], [24, 1, 1, "", "SegArray"], [97, 1, 1, "", "Series"], [24, 1, 1, "", "SeriesDTypes"], [24, 1, 1, "", "ShortDType"], [24, 1, 1, "", "StrDType"], [24, 1, 1, "", "StringAccessor"], [24, 1, 1, "id718", "Strings"], [24, 1, 1, "", "TimeDelta64DType"], [24, 1, 1, "id793", "Timedelta"], [24, 1, 1, "", "TooHardError"], [24, 1, 1, "", "True_"], [24, 1, 1, "", "UByteDType"], [24, 1, 1, "", "UInt16DType"], [24, 1, 1, "", "UInt32DType"], [24, 1, 1, "", "UInt64DType"], [24, 1, 1, "", "UInt8DType"], [24, 1, 1, "", "UIntDType"], [24, 1, 1, "", "ULongDType"], [24, 1, 1, "", "ULongLongDType"], [24, 1, 1, "", "UShortDType"], [24, 3, 1, "", "VAL_SUFFIX"], [24, 1, 1, "", "VoidDType"], [86, 5, 1, "", "abs"], [2, 0, 0, "-", "accessor"], [24, 5, 1, "", "add_newdoc"], [24, 5, 1, "", "akabs"], [24, 1, 1, "id815", "akbool"], [24, 5, 1, "id816", "akcast"], [24, 1, 1, "id817", "akfloat64"], [24, 1, 1, "id824", "akint64"], [24, 1, 1, "id828", "akuint64"], [24, 5, 1, "", "align"], [3, 0, 0, "-", "alignment"], [86, 5, 1, "", "all"], [24, 1, 1, "", "all_scalars"], [86, 5, 1, "", "any"], [89, 5, 1, "", "arange"], [24, 5, 1, "", "arccos"], [24, 5, 1, "", "arccosh"], [24, 5, 1, "", "arcsin"], [24, 5, 1, "", "arcsinh"], [24, 5, 1, "", "arctan"], [24, 5, 1, "", "arctan2"], [24, 5, 1, "", "arctanh"], [86, 5, 1, "", "argmax"], [86, 5, 1, "", "argmaxk"], [86, 5, 1, "", "argmin"], [86, 5, 1, "", "argmink"], [85, 5, 1, "", "argsort"], [83, 5, 1, "", "array"], [8, 0, 0, "-", "array_api"], [24, 5, 1, "", "array_equal"], [24, 5, 1, "", "assert_almost_equal"], [24, 5, 1, "", "assert_almost_equivalent"], [24, 5, 1, "", "assert_arkouda_array_equal"], [24, 5, 1, "", "assert_arkouda_array_equivalent"], [24, 5, 1, "", "assert_arkouda_pdarray_equal"], [24, 5, 1, "", "assert_arkouda_segarray_equal"], [24, 5, 1, "", "assert_arkouda_strings_equal"], [24, 5, 1, "", "assert_attr_equal"], [24, 5, 1, "", "assert_categorical_equal"], [24, 5, 1, "", "assert_class_equal"], [24, 5, 1, "", "assert_contains_all"], [24, 5, 1, "", "assert_copy"], [24, 5, 1, "", "assert_dict_equal"], [24, 5, 1, "", "assert_equal"], [24, 5, 1, "", "assert_equivalent"], [24, 5, 1, "", "assert_frame_equal"], [24, 5, 1, "", "assert_frame_equivalent"], [24, 5, 1, "", "assert_index_equal"], [24, 5, 1, "", "assert_index_equivalent"], [24, 5, 1, "", "assert_is_sorted"], [24, 5, 1, "", "assert_series_equal"], [24, 5, 1, "", "assert_series_equivalent"], [24, 5, 1, "", "attach"], [24, 5, 1, "", "attach_all"], [24, 5, 1, "", "attach_pdarray"], [24, 5, 1, "", "base_repr"], [24, 1, 1, "id840", "bigint"], [24, 5, 1, "", "bigint_from_uint_arrays"], [24, 5, 1, "", "binary_repr"], [24, 1, 1, "id848", "bitType"], [24, 1, 1, "", "bool_"], [24, 1, 1, "", "bool_scalars"], [24, 5, 1, "id852", "broadcast"], [24, 5, 1, "", "broadcast_dims"], [24, 5, 1, "", "broadcast_to_shape"], [24, 1, 1, "", "byte"], [24, 1, 1, "", "bytes_"], [94, 5, 1, "", "cast"], [17, 0, 0, "-", "categorical"], [24, 1, 1, "", "cdouble"], [24, 5, 1, "", "ceil"], [24, 1, 1, "", "cfloat"], [24, 1, 1, "", "character"], [24, 5, 1, "", "chisquare"], [24, 5, 1, "", "clear"], [18, 0, 0, "-", "client"], [19, 0, 0, "-", "client_dtypes"], [24, 5, 1, "", "clip"], [24, 1, 1, "", "clongdouble"], [24, 1, 1, "", "clongfloat"], [24, 5, 1, "", "clz"], [85, 5, 1, "", "coargsort"], [24, 1, 1, "", "complex128"], [24, 1, 1, "", "complex64"], [24, 5, 1, "", "compute_join_size"], [89, 5, 1, "", "concatenate"], [99, 5, 1, "", "connect"], [24, 5, 1, "", "convert_if_categorical"], [24, 5, 1, "", "corr"], [86, 5, 1, "", "cos"], [24, 5, 1, "", "cosh"], [24, 5, 1, "", "count_nonzero"], [24, 5, 1, "", "cov"], [24, 5, 1, "id861", "create_pdarray"], [24, 1, 1, "", "csingle"], [24, 5, 1, "", "ctz"], [86, 5, 1, "", "cumprod"], [86, 5, 1, "", "cumsum"], [20, 0, 0, "-", "dataframe"], [24, 5, 1, "", "date_operators"], [24, 5, 1, "id864", "date_range"], [24, 1, 1, "", "datetime64"], [24, 5, 1, "", "deg2rad"], [24, 5, 1, "", "delete"], [24, 5, 1, "", "deprecate"], [24, 5, 1, "", "deprecate_with_doc"], [24, 5, 1, "", "disableVerbose"], [24, 5, 1, "", "disp"], [24, 5, 1, "", "divmod"], [24, 5, 1, "", "dot"], [24, 1, 1, "", "double"], [24, 5, 1, "", "dtype"], [21, 0, 0, "-", "dtypes"], [24, 3, 1, "", "e"], [24, 5, 1, "", "enableVerbose"], [24, 3, 1, "", "euler_gamma"], [86, 5, 1, "", "exp"], [24, 5, 1, "", "expm1"], [83, 5, 1, "", "export"], [24, 5, 1, "", "eye"], [24, 5, 1, "", "find"], [24, 1, 1, "", "finfo"], [24, 1, 1, "", "flexible"], [24, 1, 1, "", "float16"], [24, 1, 1, "", "float32"], [24, 1, 1, "", "float64"], [24, 1, 1, "", "float_"], [24, 1, 1, "", "float_scalars"], [24, 1, 1, "", "floating"], [24, 5, 1, "id871", "floor"], [24, 5, 1, "", "fmod"], [24, 5, 1, "", "format_float_positional"], [24, 5, 1, "", "format_float_scientific"], [24, 1, 1, "", "format_parser"], [24, 5, 1, "id872", "from_series"], [24, 5, 1, "id873", "full"], [24, 5, 1, "", "full_like"], [24, 5, 1, "id874", "gen_ranges"], [24, 5, 1, "", "generic_concat"], [24, 5, 1, "", "getArkoudaLogger"], [24, 5, 1, "", "get_byteorder"], [24, 5, 1, "", "get_callback"], [24, 5, 1, "", "get_columns"], [83, 5, 1, "", "get_datasets"], [24, 5, 1, "", "get_filetype"], [24, 5, 1, "", "get_null_indices"], [24, 5, 1, "", "get_server_byteorder"], [22, 0, 0, "-", "groupbyclass"], [24, 1, 1, "", "half"], [24, 5, 1, "", "hash"], [24, 5, 1, "", "hist_all"], [92, 5, 1, "", "histogram"], [24, 5, 1, "", "histogram2d"], [24, 5, 1, "", "histogramdd"], [23, 0, 0, "-", "history"], [24, 1, 1, "", "iinfo"], [83, 5, 1, "", "import_data"], [98, 5, 1, "", "in1d"], [24, 5, 1, "", "in1d_intervals"], [25, 0, 0, "-", "index"], [24, 5, 1, "", "indexof1d"], [24, 1, 1, "", "inexact"], [24, 3, 1, "", "inf"], [26, 0, 0, "-", "infoclass"], [24, 5, 1, "", "information"], [24, 3, 1, "", "infty"], [24, 1, 1, "", "int16"], [24, 1, 1, "", "int32"], [24, 1, 1, "id880", "int64"], [24, 1, 1, "", "int8"], [24, 1, 1, "id891", "intTypes"], [24, 1, 1, "", "int_"], [24, 1, 1, "id901", "int_scalars"], [24, 1, 1, "", "intc"], [24, 1, 1, "", "integer"], [24, 5, 1, "", "intersect"], [98, 5, 1, "", "intersect1d"], [24, 5, 1, "", "interval_lookup"], [24, 1, 1, "", "intp"], [24, 5, 1, "", "intx"], [24, 5, 1, "", "invert_permutation"], [27, 0, 0, "-", "io"], [28, 0, 0, "-", "io_util"], [24, 5, 1, "", "ip_address"], [24, 5, 1, "", "isSupportedFloat"], [24, 5, 1, "id904", "isSupportedInt"], [24, 5, 1, "", "isSupportedNumber"], [24, 5, 1, "", "is_cosorted"], [24, 5, 1, "", "is_ipv4"], [24, 5, 1, "", "is_ipv6"], [24, 5, 1, "", "is_registered"], [86, 5, 1, "", "is_sorted"], [24, 5, 1, "", "isfinite"], [24, 5, 1, "", "isinf"], [24, 5, 1, "id906", "isnan"], [24, 5, 1, "", "isscalar"], [24, 5, 1, "", "issctype"], [24, 5, 1, "", "issubclass_"], [24, 5, 1, "", "issubdtype"], [29, 0, 0, "-", "join"], [24, 5, 1, "", "join_on_eq_with_dt"], [24, 5, 1, "", "left_align"], [89, 5, 1, "", "linspace"], [24, 5, 1, "", "list_registry"], [24, 5, 1, "", "list_symbol_table"], [24, 5, 1, "", "load"], [24, 5, 1, "", "load_all"], [86, 5, 1, "", "log"], [24, 5, 1, "", "log10"], [24, 5, 1, "", "log1p"], [24, 5, 1, "", "log2"], [30, 0, 0, "-", "logger"], [24, 1, 1, "", "longdouble"], [24, 1, 1, "", "longfloat"], [24, 1, 1, "", "longlong"], [24, 5, 1, "", "lookup"], [24, 5, 1, "", "ls"], [24, 5, 1, "", "ls_csv"], [31, 0, 0, "-", "match"], [32, 0, 0, "-", "matcher"], [24, 5, 1, "", "matmul"], [86, 5, 1, "", "max"], [24, 5, 1, "", "maximum_sctype"], [86, 5, 1, "", "maxk"], [86, 5, 1, "", "mean"], [24, 5, 1, "", "median"], [24, 5, 1, "", "merge"], [86, 5, 1, "", "min"], [86, 5, 1, "", "mink"], [24, 5, 1, "", "mod"], [24, 3, 1, "", "nan"], [24, 1, 1, "", "number"], [33, 0, 0, "-", "numeric"], [24, 1, 1, "", "numeric_and_bool_scalars"], [24, 1, 1, "", "numeric_scalars"], [35, 0, 0, "-", "numpy"], [24, 1, 1, "", "numpy_scalars"], [24, 1, 1, "", "object_"], [89, 5, 1, "", "ones"], [89, 5, 1, "", "ones_like"], [24, 5, 1, "", "parity"], [94, 1, 1, "", "pdarray"], [36, 0, 0, "-", "pdarrayclass"], [37, 0, 0, "-", "pdarraycreation"], [38, 0, 0, "-", "pdarraymanipulation"], [39, 0, 0, "-", "pdarraysetops"], [24, 3, 1, "", "pi"], [24, 5, 1, "", "plot_dist"], [40, 0, 0, "-", "plotting"], [24, 5, 1, "", "popcount"], [24, 5, 1, "", "power"], [24, 5, 1, "", "power_divergence"], [24, 5, 1, "", "pretty_print_information"], [86, 5, 1, "", "prod"], [24, 5, 1, "", "promote_to_common_dtype"], [24, 5, 1, "", "putmask"], [24, 5, 1, "", "rad2deg"], [89, 5, 1, "", "randint"], [41, 0, 0, "-", "random"], [24, 5, 1, "", "random_sparse_matrix"], [24, 5, 1, "", "random_strings_lognormal"], [24, 5, 1, "", "random_strings_uniform"], [83, 5, 1, "", "read"], [24, 5, 1, "", "read_csv"], [24, 5, 1, "", "read_hdf"], [24, 5, 1, "", "read_parquet"], [24, 5, 1, "", "read_tagged_data"], [24, 5, 1, "", "read_zarr"], [24, 5, 1, "", "receive"], [24, 5, 1, "", "receive_dataframe"], [24, 5, 1, "", "register_all"], [24, 5, 1, "", "resolve_scalar_dtype"], [24, 5, 1, "", "restore"], [24, 5, 1, "", "right_align"], [24, 5, 1, "", "rotl"], [24, 5, 1, "", "rotr"], [24, 5, 1, "", "round"], [42, 0, 0, "-", "row"], [24, 5, 1, "", "save_all"], [24, 5, 1, "", "scalar_array"], [43, 0, 0, "-", "scipy"], [24, 1, 1, "", "sctypeDict"], [24, 1, 1, "", "sctypes"], [24, 5, 1, "", "search_intervals"], [46, 0, 0, "-", "security"], [47, 0, 0, "-", "segarray"], [48, 0, 0, "-", "series"], [98, 5, 1, "", "setdiff1d"], [98, 5, 1, "", "setxor1d"], [24, 1, 1, "", "short"], [24, 5, 1, "", "sign"], [24, 1, 1, "", "signedinteger"], [86, 5, 1, "", "sin"], [24, 1, 1, "", "single"], [24, 5, 1, "", "sinh"], [24, 5, 1, "", "skew"], [24, 5, 1, "", "snapshot"], [24, 5, 1, "", "sort"], [49, 0, 0, "-", "sorting"], [50, 0, 0, "-", "sparrayclass"], [24, 5, 1, "", "sparse_matrix_matrix_mult"], [51, 0, 0, "-", "sparsematrix"], [24, 5, 1, "", "sqrt"], [24, 5, 1, "", "square"], [24, 5, 1, "id1273", "standard_normal"], [86, 5, 1, "", "std"], [24, 1, 1, "id1274", "str_"], [24, 1, 1, "", "str_scalars"], [24, 5, 1, "", "string_operators"], [52, 0, 0, "-", "strings"], [86, 5, 1, "", "sum"], [24, 5, 1, "", "tan"], [24, 5, 1, "", "tanh"], [53, 0, 0, "-", "testing"], [54, 0, 0, "-", "timeclass"], [24, 1, 1, "", "timedelta64"], [24, 5, 1, "id1342", "timedelta_range"], [24, 5, 1, "", "to_csv"], [24, 5, 1, "", "to_hdf"], [24, 5, 1, "", "to_parquet"], [24, 5, 1, "", "to_zarr"], [24, 5, 1, "", "transpose"], [24, 5, 1, "", "tril"], [24, 5, 1, "", "triu"], [24, 5, 1, "", "trunc"], [24, 5, 1, "", "typename"], [24, 1, 1, "", "ubyte"], [24, 1, 1, "", "uint"], [24, 1, 1, "", "uint16"], [24, 1, 1, "", "uint32"], [24, 1, 1, "", "uint64"], [24, 1, 1, "", "uint8"], [24, 1, 1, "", "uintc"], [24, 1, 1, "", "uintp"], [24, 1, 1, "", "ulonglong"], [24, 5, 1, "id1343", "uniform"], [98, 5, 1, "", "union1d"], [98, 5, 1, "", "unique"], [24, 5, 1, "", "unregister"], [24, 5, 1, "", "unregister_all"], [24, 5, 1, "", "unregister_pdarray_by_name"], [24, 1, 1, "", "unsignedinteger"], [24, 5, 1, "", "unsqueeze"], [24, 5, 1, "", "update_hdf"], [24, 1, 1, "", "ushort"], [55, 0, 0, "-", "util"], [92, 5, 1, "", "value_counts"], [86, 5, 1, "", "var"], [24, 5, 1, "", "vecdot"], [24, 1, 1, "", "void"], [24, 5, 1, "", "vstack"], [86, 5, 1, "", "where"], [24, 5, 1, "", "write_log"], [24, 5, 1, "", "xlogy"], [24, 5, 1, "", "zero_up"], [89, 5, 1, "", "zeros"], [89, 5, 1, "", "zeros_like"]], "arkouda.ARKOUDA_SUPPORTED_DTYPES": [[24, 2, 1, "", "copy"], [24, 2, 1, "", "difference"], [24, 2, 1, "", "intersection"], [24, 2, 1, "", "isdisjoint"], [24, 2, 1, "", "issubset"], [24, 2, 1, "", "issuperset"], [24, 2, 1, "", "symmetric_difference"], [24, 2, 1, "", "union"]], "arkouda.BitVector": [[24, 4, 1, "", "conserves"], [24, 2, 1, "", "format"], [24, 2, 1, "", "from_return_msg"], [24, 2, 1, "", "opeq"], [24, 2, 1, "", "register"], [24, 4, 1, "", "registered_name"], [24, 4, 1, "", "reverse"], [24, 4, 1, "", "special_objType"], [24, 2, 1, "", "to_list"], [24, 2, 1, "", "to_ndarray"], [24, 4, 1, "", "values"], [24, 4, 1, "", "width"]], "arkouda.Categorical": [[24, 4, 1, "id73", "BinOps"], [24, 4, 1, "id74", "RegisterablePieces"], [24, 4, 1, "id75", "RequiredPieces"], [24, 2, 1, "id76", "argsort"], [24, 2, 1, "id77", "attach"], [88, 4, 1, "", "categories"], [88, 4, 1, "", "codes"], [24, 2, 1, "id78", "concatenate"], [88, 2, 1, "", "contains"], [24, 4, 1, "id80", "dtype"], [88, 2, 1, "", "endswith"], [24, 2, 1, "id82", "equals"], [88, 2, 1, "", "from_codes"], [24, 2, 1, "id84", "from_return_msg"], [24, 2, 1, "id85", "group"], [24, 2, 1, "id86", "hash"], [24, 2, 1, "id87", "in1d"], [24, 6, 1, "id88", "inferred_type"], [24, 2, 1, "id89", "info"], [24, 2, 1, "id90", "is_registered"], [24, 2, 1, "id91", "isna"], [24, 4, 1, "id92", "logger"], [24, 6, 1, "id93", "nbytes"], [88, 4, 1, "", "ndim"], [88, 4, 1, "", "nlevels"], [24, 4, 1, "id96", "objType"], [24, 2, 1, "id97", "parse_hdf_categoricals"], [88, 4, 1, "", "permutation"], [24, 2, 1, "id99", "pretty_print_info"], [24, 2, 1, "id100", "register"], [24, 4, 1, "id101", "registered_name"], [24, 2, 1, "id102", "reset_categories"], [24, 2, 1, "id103", "save"], [88, 4, 1, "", "segments"], [24, 2, 1, "id105", "set_categories"], [88, 4, 1, "", "shape"], [88, 4, 1, "", "size"], [24, 2, 1, "id108", "sort_values"], [24, 2, 1, "id109", "standardize_categories"], [88, 2, 1, "", "startswith"], [24, 2, 1, "id111", "to_hdf"], [24, 2, 1, "id112", "to_list"], [88, 5, 1, "", "to_ndarray"], [24, 2, 1, "id114", "to_pandas"], [24, 2, 1, "id115", "to_parquet"], [24, 2, 1, "id116", "to_strings"], [24, 2, 1, "id117", "transfer"], [24, 2, 1, "id118", "unique"], [24, 2, 1, "id119", "unregister"], [24, 2, 1, "id120", "unregister_categorical_by_name"], [24, 2, 1, "id121", "update_hdf"]], "arkouda.DType": [[24, 2, 1, "", "BIGINT"], [24, 2, 1, "", "BOOL"], [24, 2, 1, "", "COMPLEX128"], [24, 2, 1, "", "COMPLEX64"], [24, 2, 1, "", "FLOAT"], [24, 2, 1, "", "FLOAT32"], [24, 2, 1, "", "FLOAT64"], [24, 2, 1, "", "INT"], [24, 2, 1, "", "INT16"], [24, 2, 1, "", "INT32"], [24, 2, 1, "", "INT64"], [24, 2, 1, "", "INT8"], [24, 2, 1, "", "STR"], [24, 2, 1, "", "UINT"], [24, 2, 1, "", "UINT16"], [24, 2, 1, "", "UINT32"], [24, 2, 1, "", "UINT64"], [24, 2, 1, "", "UINT8"], [24, 2, 1, "", "name"], [24, 2, 1, "", "value"]], "arkouda.DTypeObjects": [[24, 2, 1, "", "copy"], [24, 2, 1, "", "difference"], [24, 2, 1, "", "intersection"], [24, 2, 1, "", "isdisjoint"], [24, 2, 1, "", "issubset"], [24, 2, 1, "", "issuperset"], [24, 2, 1, "", "symmetric_difference"], [24, 2, 1, "", "union"]], "arkouda.DTypes": [[24, 2, 1, "", "copy"], [24, 2, 1, "", "difference"], [24, 2, 1, "", "intersection"], [24, 2, 1, "", "isdisjoint"], [24, 2, 1, "", "issubset"], [24, 2, 1, "", "issuperset"], [24, 2, 1, "", "symmetric_difference"], [24, 2, 1, "", "union"]], "arkouda.DataFrame": [[24, 2, 1, "id123", "GroupBy"], [24, 2, 1, "id124", "all"], [24, 2, 1, "id125", "any"], [24, 2, 1, "id126", "append"], [90, 5, 1, "", "apply_permutation"], [90, 5, 1, "", "argsort"], [24, 2, 1, "id129", "assign"], [24, 2, 1, "id130", "attach"], [90, 5, 1, "", "coargsort"], [24, 6, 1, "id132", "columns"], [90, 5, 1, "", "concat"], [90, 5, 1, "", "copy"], [24, 2, 1, "id134", "corr"], [24, 2, 1, "id135", "count"], [90, 5, 1, "", "drop"], [90, 5, 1, "", "drop_duplicates"], [24, 2, 1, "id138", "dropna"], [24, 6, 1, "id139", "dtypes"], [24, 6, 1, "id140", "empty"], [24, 2, 1, "id141", "filter_by_range"], [24, 2, 1, "id142", "from_pandas"], [24, 2, 1, "id143", "from_return_msg"], [90, 5, 1, "", "groupby"], [90, 5, 1, "", "head"], [24, 6, 1, "id146", "index"], [24, 6, 1, "id147", "info"], [24, 2, 1, "id148", "is_registered"], [24, 2, 1, "id149", "isin"], [24, 2, 1, "id150", "isna"], [24, 2, 1, "id151", "load"], [24, 2, 1, "id152", "memory_usage"], [24, 2, 1, "id153", "memory_usage_info"], [24, 2, 1, "id154", "merge"], [24, 2, 1, "id155", "notna"], [24, 2, 1, "id156", "objType"], [24, 2, 1, "id157", "read_csv"], [24, 2, 1, "id158", "register"], [90, 5, 1, "", "rename"], [90, 5, 1, "", "reset_index"], [24, 2, 1, "id161", "sample"], [24, 2, 1, "id162", "save"], [24, 6, 1, "id163", "shape"], [24, 6, 1, "id164", "size"], [24, 2, 1, "id165", "sort_index"], [90, 5, 1, "", "sort_values"], [90, 5, 1, "", "tail"], [24, 2, 1, "id168", "to_csv"], [24, 2, 1, "id169", "to_hdf"], [24, 2, 1, "id170", "to_markdown"], [90, 5, 1, "", "to_pandas"], [24, 2, 1, "id172", "to_parquet"], [24, 2, 1, "id173", "transfer"], [24, 2, 1, "id174", "unregister"], [24, 2, 1, "id175", "unregister_dataframe_by_name"], [24, 2, 1, "id176", "update_hdf"], [24, 2, 1, "id177", "update_nrows"]], "arkouda.DataFrameGroupBy": [[24, 2, 1, "", "all"], [24, 2, 1, "", "any"], [24, 2, 1, "", "argmax"], [24, 2, 1, "", "argmin"], [24, 4, 1, "", "as_index"], [24, 2, 1, "", "broadcast"], [24, 2, 1, "", "count"], [24, 4, 1, "", "df"], [24, 2, 1, "", "diff"], [24, 2, 1, "", "first"], [24, 4, 1, "", "gb"], [24, 4, 1, "", "gb_key_names"], [24, 2, 1, "", "head"], [24, 2, 1, "", "max"], [24, 2, 1, "", "mean"], [24, 2, 1, "", "median"], [24, 2, 1, "", "min"], [24, 2, 1, "", "mode"], [24, 2, 1, "", "nunique"], [24, 2, 1, "", "prod"], [24, 2, 1, "", "sample"], [24, 2, 1, "", "size"], [24, 2, 1, "", "std"], [24, 2, 1, "", "sum"], [24, 2, 1, "", "tail"], [24, 2, 1, "", "unique"], [24, 2, 1, "", "var"], [24, 2, 1, "", "xor"]], "arkouda.DataSource": [[24, 2, 1, "", "abspath"], [24, 2, 1, "", "exists"], [24, 2, 1, "", "open"]], "arkouda.Datetime": [[24, 6, 1, "id212", "date"], [24, 6, 1, "id213", "day"], [24, 6, 1, "id214", "day_of_week"], [24, 6, 1, "id215", "day_of_year"], [24, 6, 1, "id216", "dayofweek"], [24, 6, 1, "id217", "dayofyear"], [24, 6, 1, "id218", "hour"], [24, 6, 1, "id219", "is_leap_year"], [24, 2, 1, "id220", "is_registered"], [24, 2, 1, "id221", "isocalendar"], [24, 6, 1, "id222", "microsecond"], [24, 6, 1, "id223", "millisecond"], [24, 6, 1, "id224", "minute"], [24, 6, 1, "id225", "month"], [24, 6, 1, "id226", "nanosecond"], [24, 2, 1, "id227", "register"], [24, 6, 1, "id228", "second"], [24, 4, 1, "id229", "special_objType"], [24, 2, 1, "id230", "sum"], [24, 4, 1, "id231", "supported_opeq"], [24, 4, 1, "id232", "supported_with_datetime"], [24, 4, 1, "id233", "supported_with_pdarray"], [24, 4, 1, "id234", "supported_with_r_datetime"], [24, 4, 1, "id235", "supported_with_r_pdarray"], [24, 4, 1, "id236", "supported_with_r_timedelta"], [24, 4, 1, "id237", "supported_with_timedelta"], [24, 2, 1, "id238", "to_pandas"], [24, 2, 1, "id239", "unregister"], [24, 6, 1, "id240", "week"], [24, 6, 1, "id241", "weekday"], [24, 6, 1, "id242", "weekofyear"], [24, 6, 1, "id243", "year"]], "arkouda.DatetimeAccessor": [[24, 4, 1, "", "data"], [24, 4, 1, "", "series"]], "arkouda.DiffAggregate": [[24, 2, 1, "", "all"], [24, 2, 1, "", "any"], [24, 2, 1, "", "argmax"], [24, 2, 1, "", "argmin"], [24, 2, 1, "", "count"], [24, 2, 1, "", "first"], [24, 4, 1, "", "gb"], [24, 2, 1, "", "max"], [24, 2, 1, "", "mean"], [24, 2, 1, "", "median"], [24, 2, 1, "", "min"], [24, 2, 1, "", "mode"], [24, 2, 1, "", "nunique"], [24, 2, 1, "", "prod"], [24, 2, 1, "", "std"], [24, 2, 1, "", "sum"], [24, 2, 1, "", "unique"], [24, 4, 1, "", "values"], [24, 2, 1, "", "var"], [24, 2, 1, "", "xor"]], "arkouda.ErrorMode": [[24, 4, 1, "", "ignore"], [24, 4, 1, "", "return_validity"], [24, 4, 1, "", "strict"]], "arkouda.Fields": [[24, 4, 1, "", "MSB_left"], [24, 2, 1, "", "format"], [24, 4, 1, "", "name"], [24, 4, 1, "", "names"], [24, 4, 1, "", "namewidth"], [24, 2, 1, "", "opeq"], [24, 4, 1, "", "pad"], [24, 4, 1, "", "padchar"], [24, 4, 1, "", "separator"], [24, 4, 1, "", "show_int"], [24, 4, 1, "", "width"]], "arkouda.GROUPBY_REDUCTION_TYPES": [[24, 2, 1, "", "copy"], [24, 2, 1, "", "difference"], [24, 2, 1, "", "intersection"], [24, 2, 1, "", "isdisjoint"], [24, 2, 1, "", "issubset"], [24, 2, 1, "", "issuperset"], [24, 2, 1, "", "symmetric_difference"], [24, 2, 1, "", "union"]], "arkouda.Generator": [[24, 2, 1, "", "choice"], [24, 2, 1, "", "exponential"], [24, 2, 1, "", "integers"], [24, 2, 1, "", "logistic"], [24, 2, 1, "", "lognormal"], [24, 2, 1, "", "normal"], [24, 2, 1, "", "permutation"], [24, 2, 1, "", "poisson"], [24, 2, 1, "", "random"], [24, 2, 1, "", "shuffle"], [24, 2, 1, "", "standard_exponential"], [24, 2, 1, "", "standard_normal"], [24, 2, 1, "", "uniform"]], "arkouda.GroupBy": [[91, 2, 1, "", "AND"], [91, 2, 1, "", "OR"], [24, 2, 1, "id444", "Reductions"], [91, 2, 1, "", "XOR"], [91, 2, 1, "", "aggregate"], [91, 2, 1, "", "all"], [91, 2, 1, "", "any"], [91, 2, 1, "", "argmax"], [91, 2, 1, "", "argmin"], [91, 2, 1, "", "attach"], [91, 2, 1, "", "broadcast"], [91, 2, 1, "", "build_from_components"], [91, 2, 1, "", "count"], [91, 4, 1, "", "dropna"], [91, 2, 1, "", "first"], [24, 2, 1, "id456", "from_return_msg"], [91, 2, 1, "", "head"], [91, 2, 1, "", "is_registered"], [91, 4, 1, "", "logger"], [91, 2, 1, "", "max"], [91, 2, 1, "", "mean"], [91, 2, 1, "", "median"], [91, 2, 1, "", "min"], [91, 2, 1, "", "mode"], [91, 2, 1, "", "most_common"], [91, 4, 1, "", "ngroups"], [91, 4, 1, "", "nkeys"], [91, 2, 1, "", "nunique"], [24, 2, 1, "id466", "objType"], [91, 4, 1, "", "permutation"], [91, 2, 1, "", "prod"], [91, 2, 1, "", "register"], [91, 2, 1, "", "sample"], [91, 4, 1, "", "segments"], [91, 2, 1, "id0", "size"], [91, 2, 1, "", "std"], [91, 2, 1, "", "sum"], [91, 2, 1, "", "tail"], [91, 2, 1, "", "to_hdf"], [91, 2, 1, "", "unique"], [91, 4, 1, "", "unique_keys"], [91, 2, 1, "", "unregister"], [91, 2, 1, "", "unregister_groupby_by_name"], [24, 2, 1, "id478", "update_hdf"], [91, 2, 1, "", "var"]], "arkouda.IPv4": [[24, 2, 1, "", "export_uint"], [24, 2, 1, "", "format"], [24, 2, 1, "", "normalize"], [24, 2, 1, "", "opeq"], [24, 2, 1, "", "register"], [24, 4, 1, "", "special_objType"], [24, 2, 1, "", "to_hdf"], [24, 2, 1, "", "to_list"], [24, 2, 1, "", "to_ndarray"], [24, 2, 1, "", "update_hdf"], [24, 4, 1, "", "values"]], "arkouda.Index": [[84, 5, 1, "", "argsort"], [84, 5, 1, "", "concat"], [24, 2, 1, "", "equals"], [24, 2, 1, "", "factory"], [24, 2, 1, "", "from_return_msg"], [24, 6, 1, "", "index"], [24, 6, 1, "", "inferred_type"], [24, 2, 1, "", "is_registered"], [84, 5, 1, "", "lookup"], [24, 2, 1, "", "map"], [24, 4, 1, "", "max_list_size"], [24, 2, 1, "", "memory_usage"], [24, 6, 1, "", "names"], [24, 6, 1, "", "ndim"], [24, 6, 1, "", "nlevels"], [24, 4, 1, "", "objType"], [24, 2, 1, "", "register"], [24, 4, 1, "", "registered_name"], [24, 2, 1, "", "save"], [84, 5, 1, "", "set_dtype"], [24, 6, 1, "", "shape"], [24, 2, 1, "", "to_csv"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_hdf"], [24, 2, 1, "", "to_list"], [24, 2, 1, "", "to_ndarray"], [24, 2, 1, "", "to_pandas"], [24, 2, 1, "", "to_parquet"], [24, 2, 1, "", "unregister"], [24, 2, 1, "", "update_hdf"]], "arkouda.LogLevel": [[24, 4, 1, "", "CRITICAL"], [24, 4, 1, "", "DEBUG"], [24, 4, 1, "", "ERROR"], [24, 4, 1, "", "INFO"], [24, 4, 1, "", "WARN"]], "arkouda.MultiIndex": [[84, 5, 1, "", "argsort"], [84, 5, 1, "", "concat"], [24, 6, 1, "", "dtype"], [24, 2, 1, "", "equal_levels"], [24, 4, 1, "", "first"], [24, 2, 1, "", "get_level_values"], [24, 6, 1, "", "index"], [24, 6, 1, "", "inferred_type"], [24, 2, 1, "", "is_registered"], [24, 4, 1, "", "levels"], [84, 5, 1, "", "lookup"], [24, 2, 1, "", "memory_usage"], [24, 6, 1, "", "name"], [24, 6, 1, "", "names"], [24, 6, 1, "", "ndim"], [24, 6, 1, "", "nlevels"], [24, 4, 1, "", "objType"], [24, 2, 1, "", "register"], [24, 4, 1, "", "registered_name"], [84, 5, 1, "", "set_dtype"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_hdf"], [24, 2, 1, "", "to_list"], [24, 2, 1, "", "to_ndarray"], [24, 2, 1, "", "to_pandas"], [24, 2, 1, "", "unregister"], [24, 2, 1, "", "update_hdf"]], "arkouda.NUMBER_FORMAT_STRINGS": [[24, 2, 1, "", "clear"], [24, 2, 1, "", "copy"], [24, 2, 1, "", "fromkeys"], [24, 2, 1, "", "get"], [24, 2, 1, "", "items"], [24, 2, 1, "", "keys"], [24, 2, 1, "", "pop"], [24, 2, 1, "", "popitem"], [24, 2, 1, "", "setdefault"], [24, 2, 1, "", "update"], [24, 2, 1, "", "values"]], "arkouda.NumericDTypes": [[24, 2, 1, "", "copy"], [24, 2, 1, "", "difference"], [24, 2, 1, "", "intersection"], [24, 2, 1, "", "isdisjoint"], [24, 2, 1, "", "issubset"], [24, 2, 1, "", "issuperset"], [24, 2, 1, "", "symmetric_difference"], [24, 2, 1, "", "union"]], "arkouda.Power_divergenceResult": [[24, 4, 1, "", "pvalue"], [24, 4, 1, "", "statistic"]], "arkouda.ScalarDTypes": [[24, 2, 1, "", "copy"], [24, 2, 1, "", "difference"], [24, 2, 1, "", "intersection"], [24, 2, 1, "", "isdisjoint"], [24, 2, 1, "", "issubset"], [24, 2, 1, "", "issuperset"], [24, 2, 1, "", "symmetric_difference"], [24, 2, 1, "", "union"]], "arkouda.ScalarType": [[24, 2, 1, "", "count"], [24, 2, 1, "", "index"]], "arkouda.SegArray": [[24, 2, 1, "", "AND"], [24, 2, 1, "", "OR"], [24, 2, 1, "", "XOR"], [24, 2, 1, "", "aggregate"], [24, 2, 1, "", "all"], [24, 2, 1, "", "any"], [96, 5, 1, "", "append"], [96, 5, 1, "", "append_single"], [24, 2, 1, "", "argmax"], [24, 2, 1, "", "argmin"], [24, 2, 1, "", "attach"], [24, 2, 1, "", "concat"], [24, 2, 1, "", "copy"], [24, 4, 1, "", "dtype"], [24, 2, 1, "", "filter"], [24, 2, 1, "", "from_multi_array"], [24, 2, 1, "", "from_parts"], [24, 2, 1, "", "from_return_msg"], [96, 5, 1, "", "get_jth"], [96, 5, 1, "", "get_length_n"], [96, 5, 1, "", "get_ngrams"], [96, 5, 1, "", "get_prefixes"], [96, 5, 1, "", "get_suffixes"], [24, 6, 1, "", "grouping"], [24, 2, 1, "", "hash"], [96, 5, 1, "", "intersect"], [24, 2, 1, "", "is_registered"], [24, 2, 1, "", "load"], [24, 4, 1, "", "logger"], [24, 2, 1, "", "max"], [24, 2, 1, "", "mean"], [24, 2, 1, "", "min"], [24, 6, 1, "", "nbytes"], [24, 6, 1, "", "non_empty"], [24, 2, 1, "", "nunique"], [24, 4, 1, "", "objType"], [96, 5, 1, "", "prepend_single"], [24, 2, 1, "", "prod"], [24, 2, 1, "", "read_hdf"], [24, 2, 1, "", "register"], [24, 4, 1, "", "registered_name"], [96, 5, 1, "", "remove_repeats"], [24, 2, 1, "", "save"], [24, 4, 1, "", "segments"], [96, 5, 1, "", "set_jth"], [96, 5, 1, "", "setdiff"], [96, 5, 1, "", "setxor"], [24, 4, 1, "", "size"], [24, 2, 1, "", "sum"], [24, 2, 1, "", "to_hdf"], [24, 2, 1, "", "to_list"], [96, 5, 1, "", "to_ndarray"], [24, 2, 1, "", "to_parquet"], [24, 2, 1, "", "transfer"], [96, 5, 1, "", "union"], [24, 2, 1, "", "unique"], [24, 2, 1, "", "unregister"], [24, 2, 1, "", "unregister_segarray_by_name"], [24, 2, 1, "", "update_hdf"], [24, 4, 1, "", "valsize"], [24, 4, 1, "", "values"]], "arkouda.Series": [[24, 2, 1, "", "add"], [24, 2, 1, "", "argmax"], [24, 2, 1, "", "argmin"], [24, 6, 1, "", "at"], [24, 2, 1, "", "attach"], [24, 2, 1, "", "concat"], [24, 2, 1, "", "diff"], [24, 2, 1, "", "dt"], [24, 6, 1, "", "dtype"], [24, 2, 1, "", "fillna"], [24, 2, 1, "", "from_return_msg"], [24, 2, 1, "", "has_repeat_labels"], [24, 2, 1, "", "hasnans"], [97, 5, 1, "", "head"], [24, 6, 1, "", "iat"], [24, 6, 1, "", "iloc"], [24, 2, 1, "", "is_registered"], [24, 2, 1, "", "isin"], [24, 2, 1, "", "isna"], [24, 2, 1, "", "isnull"], [24, 6, 1, "", "loc"], [97, 5, 1, "id0", "locate"], [24, 2, 1, "", "map"], [24, 2, 1, "", "max"], [24, 2, 1, "", "mean"], [24, 2, 1, "", "memory_usage"], [24, 2, 1, "", "min"], [24, 6, 1, "", "ndim"], [24, 2, 1, "", "notna"], [24, 2, 1, "", "notnull"], [24, 2, 1, "", "objType"], [97, 5, 1, "", "pdconcat"], [24, 2, 1, "", "prod"], [24, 2, 1, "", "register"], [24, 6, 1, "", "shape"], [97, 5, 1, "", "sort_index"], [97, 5, 1, "", "sort_values"], [24, 2, 1, "", "std"], [24, 2, 1, "", "str_acc"], [24, 2, 1, "", "sum"], [97, 5, 1, "", "tail"], [24, 2, 1, "", "to_dataframe"], [24, 2, 1, "", "to_list"], [24, 2, 1, "", "to_markdown"], [24, 2, 1, "", "to_ndarray"], [97, 5, 1, "", "to_pandas"], [97, 5, 1, "", "topn"], [24, 2, 1, "", "unregister"], [24, 2, 1, "", "validate_key"], [24, 2, 1, "", "validate_val"], [97, 5, 1, "", "value_counts"], [24, 2, 1, "", "var"]], "arkouda.SeriesDTypes": [[24, 2, 1, "", "clear"], [24, 2, 1, "", "copy"], [24, 2, 1, "", "fromkeys"], [24, 2, 1, "", "get"], [24, 2, 1, "", "items"], [24, 2, 1, "", "keys"], [24, 2, 1, "", "pop"], [24, 2, 1, "", "popitem"], [24, 2, 1, "", "setdefault"], [24, 2, 1, "", "update"], [24, 2, 1, "", "values"]], "arkouda.StringAccessor": [[24, 4, 1, "", "data"], [24, 4, 1, "", "series"]], "arkouda.Strings": [[24, 4, 1, "id726", "BinOps"], [24, 2, 1, "id727", "astype"], [24, 2, 1, "id728", "attach"], [24, 2, 1, "id729", "cached_regex_patterns"], [24, 2, 1, "id730", "capitalize"], [100, 2, 1, "", "contains"], [24, 2, 1, "id732", "decode"], [24, 4, 1, "id733", "dtype"], [24, 2, 1, "id734", "encode"], [100, 2, 1, "", "endswith"], [24, 4, 1, "id736", "entry"], [24, 2, 1, "id737", "equals"], [100, 2, 1, "", "find_locations"], [100, 2, 1, "", "findall"], [100, 2, 1, "", "flatten"], [24, 2, 1, "id741", "from_parts"], [24, 2, 1, "id742", "from_return_msg"], [100, 2, 1, "", "fullmatch"], [24, 2, 1, "id744", "get_bytes"], [24, 2, 1, "id745", "get_lengths"], [24, 2, 1, "id746", "get_offsets"], [24, 2, 1, "id747", "get_prefixes"], [24, 2, 1, "id748", "get_suffixes"], [24, 2, 1, "id749", "group"], [24, 2, 1, "id750", "hash"], [24, 6, 1, "id751", "inferred_type"], [24, 2, 1, "id752", "info"], [24, 2, 1, "id753", "is_registered"], [24, 2, 1, "id754", "isalnum"], [24, 2, 1, "id755", "isalpha"], [24, 2, 1, "id756", "isdecimal"], [24, 2, 1, "id757", "isdigit"], [24, 2, 1, "id758", "isempty"], [24, 2, 1, "id759", "islower"], [24, 2, 1, "id760", "isspace"], [24, 2, 1, "id761", "istitle"], [24, 2, 1, "id762", "isupper"], [24, 4, 1, "id763", "logger"], [24, 2, 1, "id764", "lower"], [100, 2, 1, "", "lstick"], [100, 2, 1, "", "match"], [24, 4, 1, "id721", "nbytes"], [24, 4, 1, "id722", "ndim"], [24, 4, 1, "id767", "objType"], [100, 2, 1, "", "peel"], [24, 2, 1, "id769", "pretty_print_info"], [24, 2, 1, "id770", "purge_cached_regex_patterns"], [24, 2, 1, "id771", "register"], [24, 4, 1, "id772", "registered_name"], [100, 2, 1, "", "rpeel"], [24, 2, 1, "id774", "save"], [100, 2, 1, "", "search"], [24, 4, 1, "id723", "shape"], [24, 4, 1, "id720", "size"], [100, 2, 1, "", "split"], [100, 2, 1, "", "startswith"], [100, 2, 1, "", "stick"], [24, 2, 1, "id779", "strip"], [100, 2, 1, "", "sub"], [100, 2, 1, "", "subn"], [24, 2, 1, "id782", "title"], [24, 2, 1, "id783", "to_csv"], [24, 2, 1, "id784", "to_hdf"], [24, 2, 1, "id785", "to_list"], [100, 5, 1, "", "to_ndarray"], [24, 2, 1, "id787", "to_parquet"], [24, 2, 1, "id788", "transfer"], [24, 2, 1, "id789", "unregister"], [24, 2, 1, "id790", "unregister_strings_by_name"], [24, 2, 1, "id791", "update_hdf"], [24, 2, 1, "id792", "upper"]], "arkouda.Timedelta": [[24, 2, 1, "id794", "abs"], [24, 6, 1, "id795", "components"], [24, 6, 1, "id796", "days"], [24, 2, 1, "id797", "is_registered"], [24, 6, 1, "id798", "microseconds"], [24, 6, 1, "id799", "nanoseconds"], [24, 2, 1, "id800", "register"], [24, 6, 1, "id801", "seconds"], [24, 4, 1, "id802", "special_objType"], [24, 2, 1, "id803", "std"], [24, 2, 1, "id804", "sum"], [24, 4, 1, "id805", "supported_opeq"], [24, 4, 1, "id806", "supported_with_datetime"], [24, 4, 1, "id807", "supported_with_pdarray"], [24, 4, 1, "id808", "supported_with_r_datetime"], [24, 4, 1, "id809", "supported_with_r_pdarray"], [24, 4, 1, "id810", "supported_with_r_timedelta"], [24, 4, 1, "id811", "supported_with_timedelta"], [24, 2, 1, "id812", "to_pandas"], [24, 2, 1, "id813", "total_seconds"], [24, 2, 1, "id814", "unregister"]], "arkouda.accessor": [[2, 1, 1, "", "CachedAccessor"], [2, 1, 1, "", "DatetimeAccessor"], [2, 1, 1, "", "Properties"], [2, 1, 1, "", "StringAccessor"], [2, 5, 1, "", "date_operators"], [2, 5, 1, "", "string_operators"]], "arkouda.accessor.DatetimeAccessor": [[2, 4, 1, "", "data"], [2, 4, 1, "", "series"]], "arkouda.accessor.StringAccessor": [[2, 4, 1, "", "data"], [2, 4, 1, "", "series"]], "arkouda.akfloat64": [[24, 2, 1, "id818", "as_integer_ratio"], [24, 2, 1, "id819", "fromhex"], [24, 2, 1, "id820", "hex"], [24, 2, 1, "id821", "is_integer"]], "arkouda.akint64": [[24, 2, 1, "id825", "bit_count"]], "arkouda.akuint64": [[24, 2, 1, "id829", "bit_count"]], "arkouda.alignment": [[3, 7, 1, "", "NonUniqueError"], [3, 5, 1, "", "align"], [3, 5, 1, "", "find"], [3, 5, 1, "", "in1d_intervals"], [3, 5, 1, "", "interval_lookup"], [3, 5, 1, "", "is_cosorted"], [3, 5, 1, "", "left_align"], [3, 5, 1, "", "lookup"], [3, 5, 1, "", "right_align"], [3, 5, 1, "", "search_intervals"], [3, 5, 1, "", "unsqueeze"], [3, 5, 1, "", "zero_up"]], "arkouda.array_api": [[8, 1, 1, "", "Array"], [4, 0, 0, "-", "array_object"], [5, 0, 0, "-", "creation_functions"], [6, 0, 0, "-", "data_type_functions"], [7, 0, 0, "-", "elementwise_functions"], [9, 0, 0, "-", "indexing_functions"], [10, 0, 0, "-", "linalg"], [11, 0, 0, "-", "manipulation_functions"], [12, 0, 0, "-", "searching_functions"], [13, 0, 0, "-", "set_functions"], [14, 0, 0, "-", "sorting_functions"], [15, 0, 0, "-", "statistical_functions"], [16, 0, 0, "-", "utility_functions"]], "arkouda.array_api.Array": [[8, 6, 1, "", "T"], [8, 2, 1, "", "chunk_info"], [8, 6, 1, "", "device"], [8, 6, 1, "", "dtype"], [8, 2, 1, "", "item"], [8, 6, 1, "", "mT"], [8, 6, 1, "", "ndim"], [8, 6, 1, "", "shape"], [8, 6, 1, "", "size"], [8, 2, 1, "", "to_device"], [8, 2, 1, "", "to_ndarray"], [8, 2, 1, "", "tolist"], [8, 2, 1, "", "transpose"]], "arkouda.array_api.array_object": [[4, 1, 1, "", "Array"], [4, 3, 1, "", "HANDLED_FUNCTIONS"], [4, 5, 1, "", "implements_numpy"]], "arkouda.array_api.array_object.Array": [[4, 6, 1, "", "T"], [4, 2, 1, "", "chunk_info"], [4, 6, 1, "", "device"], [4, 6, 1, "", "dtype"], [4, 2, 1, "", "item"], [4, 6, 1, "", "mT"], [4, 6, 1, "", "ndim"], [4, 6, 1, "", "shape"], [4, 6, 1, "", "size"], [4, 2, 1, "", "to_device"], [4, 2, 1, "", "to_ndarray"], [4, 2, 1, "", "tolist"], [4, 2, 1, "", "transpose"]], "arkouda.array_api.creation_functions": [[5, 5, 1, "", "arange"], [5, 5, 1, "", "asarray"], [5, 5, 1, "", "empty"], [5, 5, 1, "", "empty_like"], [5, 5, 1, "", "eye"], [5, 5, 1, "", "from_dlpack"], [5, 5, 1, "", "full"], [5, 5, 1, "", "full_like"], [5, 5, 1, "", "linspace"], [5, 5, 1, "", "meshgrid"], [5, 5, 1, "", "ones"], [5, 5, 1, "", "ones_like"], [5, 5, 1, "", "tril"], [5, 5, 1, "", "triu"], [5, 5, 1, "", "zeros"], [5, 5, 1, "", "zeros_like"]], "arkouda.array_api.data_type_functions": [[6, 5, 1, "", "astype"], [6, 5, 1, "", "can_cast"], [6, 5, 1, "", "finfo"], [6, 1, 1, "", "finfo_object"], [6, 5, 1, "", "iinfo"], [6, 1, 1, "", "iinfo_object"], [6, 5, 1, "", "isdtype"], [6, 5, 1, "", "result_type"]], "arkouda.array_api.data_type_functions.finfo_object": [[6, 4, 1, "", "bits"], [6, 4, 1, "", "dtype"], [6, 4, 1, "", "eps"], [6, 4, 1, "", "max"], [6, 4, 1, "", "min"], [6, 4, 1, "", "smallest_normal"]], "arkouda.array_api.data_type_functions.iinfo_object": [[6, 4, 1, "", "bits"], [6, 4, 1, "", "dtype"], [6, 4, 1, "", "max"], [6, 4, 1, "", "min"]], "arkouda.array_api.elementwise_functions": [[7, 5, 1, "", "abs"], [7, 5, 1, "", "acos"], [7, 5, 1, "", "acosh"], [7, 5, 1, "", "add"], [7, 5, 1, "", "asin"], [7, 5, 1, "", "asinh"], [7, 5, 1, "", "atan"], [7, 5, 1, "", "atan2"], [7, 5, 1, "", "atanh"], [7, 5, 1, "", "bitwise_and"], [7, 5, 1, "", "bitwise_invert"], [7, 5, 1, "", "bitwise_left_shift"], [7, 5, 1, "", "bitwise_or"], [7, 5, 1, "", "bitwise_right_shift"], [7, 5, 1, "", "bitwise_xor"], [7, 5, 1, "", "ceil"], [7, 5, 1, "", "conj"], [7, 5, 1, "", "cos"], [7, 5, 1, "", "cosh"], [7, 5, 1, "", "divide"], [7, 5, 1, "", "equal"], [7, 5, 1, "", "exp"], [7, 5, 1, "", "expm1"], [7, 5, 1, "", "floor"], [7, 5, 1, "", "floor_divide"], [7, 5, 1, "", "greater"], [7, 5, 1, "", "greater_equal"], [7, 5, 1, "", "imag"], [7, 5, 1, "", "isfinite"], [7, 5, 1, "", "isinf"], [7, 5, 1, "", "isnan"], [7, 5, 1, "", "less"], [7, 5, 1, "", "less_equal"], [7, 5, 1, "", "log"], [7, 5, 1, "", "log10"], [7, 5, 1, "", "log1p"], [7, 5, 1, "", "log2"], [7, 5, 1, "", "logaddexp"], [7, 5, 1, "", "logical_and"], [7, 5, 1, "", "logical_not"], [7, 5, 1, "", "logical_or"], [7, 5, 1, "", "logical_xor"], [7, 5, 1, "", "multiply"], [7, 5, 1, "", "negative"], [7, 5, 1, "", "not_equal"], [7, 5, 1, "", "positive"], [7, 5, 1, "", "pow"], [7, 5, 1, "", "real"], [7, 5, 1, "", "remainder"], [7, 5, 1, "", "round"], [7, 5, 1, "", "sign"], [7, 5, 1, "", "sin"], [7, 5, 1, "", "sinh"], [7, 5, 1, "", "sqrt"], [7, 5, 1, "", "square"], [7, 5, 1, "", "subtract"], [7, 5, 1, "", "tan"], [7, 5, 1, "", "tanh"], [7, 5, 1, "", "trunc"]], "arkouda.array_api.indexing_functions": [[9, 5, 1, "", "take"]], "arkouda.array_api.linalg": [[10, 5, 1, "", "matmul"], [10, 5, 1, "", "matrix_transpose"], [10, 5, 1, "", "tensordot"], [10, 5, 1, "", "vecdot"]], "arkouda.array_api.manipulation_functions": [[11, 5, 1, "", "broadcast_arrays"], [11, 5, 1, "", "broadcast_to"], [11, 5, 1, "", "concat"], [11, 5, 1, "", "expand_dims"], [11, 5, 1, "", "flip"], [11, 5, 1, "", "moveaxis"], [11, 5, 1, "", "permute_dims"], [11, 5, 1, "", "repeat"], [11, 5, 1, "", "reshape"], [11, 5, 1, "", "roll"], [11, 5, 1, "", "squeeze"], [11, 5, 1, "", "stack"], [11, 5, 1, "", "tile"], [11, 5, 1, "", "unstack"]], "arkouda.array_api.searching_functions": [[12, 5, 1, "", "argmax"], [12, 5, 1, "", "argmin"], [12, 5, 1, "", "nonzero"], [12, 5, 1, "", "searchsorted"], [12, 5, 1, "", "where"]], "arkouda.array_api.set_functions": [[13, 1, 1, "", "UniqueAllResult"], [13, 1, 1, "", "UniqueCountsResult"], [13, 1, 1, "", "UniqueInverseResult"], [13, 5, 1, "", "unique_all"], [13, 5, 1, "", "unique_counts"], [13, 5, 1, "", "unique_inverse"], [13, 5, 1, "", "unique_values"]], "arkouda.array_api.set_functions.UniqueAllResult": [[13, 4, 1, "", "counts"], [13, 4, 1, "", "indices"], [13, 4, 1, "", "inverse_indices"], [13, 4, 1, "", "values"]], "arkouda.array_api.set_functions.UniqueCountsResult": [[13, 4, 1, "", "counts"], [13, 4, 1, "", "values"]], "arkouda.array_api.set_functions.UniqueInverseResult": [[13, 4, 1, "", "inverse_indices"], [13, 4, 1, "", "values"]], "arkouda.array_api.sorting_functions": [[14, 5, 1, "", "argsort"], [14, 5, 1, "", "sort"]], "arkouda.array_api.statistical_functions": [[15, 5, 1, "", "cumulative_sum"], [15, 5, 1, "", "max"], [15, 5, 1, "", "mean"], [15, 5, 1, "", "mean_shim"], [15, 5, 1, "", "min"], [15, 5, 1, "", "prod"], [15, 5, 1, "", "std"], [15, 5, 1, "", "sum"], [15, 5, 1, "", "var"]], "arkouda.array_api.utility_functions": [[16, 5, 1, "", "all"], [16, 5, 1, "", "any"], [16, 5, 1, "", "clip"], [16, 5, 1, "", "diff"], [16, 5, 1, "", "pad"]], "arkouda.bigint": [[24, 2, 1, "id841", "itemsize"], [24, 2, 1, "id842", "name"], [24, 2, 1, "id843", "ndim"], [24, 2, 1, "id844", "shape"], [24, 2, 1, "id845", "type"]], "arkouda.bitType": [[24, 2, 1, "id849", "bit_count"]], "arkouda.byte": [[24, 2, 1, "", "bit_count"]], "arkouda.bytes_": [[24, 2, 1, "", "T"], [24, 2, 1, "", "all"], [24, 2, 1, "", "any"], [24, 2, 1, "", "argmax"], [24, 2, 1, "", "argmin"], [24, 2, 1, "", "argsort"], [24, 2, 1, "", "astype"], [24, 2, 1, "", "base"], [24, 2, 1, "", "byteswap"], [24, 2, 1, "", "choose"], [24, 2, 1, "", "clip"], [24, 2, 1, "", "compress"], [24, 2, 1, "", "conj"], [24, 2, 1, "", "conjugate"], [24, 2, 1, "", "copy"], [24, 2, 1, "", "cumprod"], [24, 2, 1, "", "cumsum"], [24, 2, 1, "", "data"], [24, 2, 1, "", "diagonal"], [24, 2, 1, "", "dtype"], [24, 2, 1, "", "dump"], [24, 2, 1, "", "dumps"], [24, 2, 1, "", "fill"], [24, 2, 1, "", "flags"], [24, 2, 1, "", "flat"], [24, 2, 1, "", "flatten"], [24, 2, 1, "", "getfield"], [24, 2, 1, "", "imag"], [24, 2, 1, "", "item"], [24, 2, 1, "", "itemset"], [24, 2, 1, "", "itemsize"], [24, 2, 1, "", "max"], [24, 2, 1, "", "mean"], [24, 2, 1, "", "min"], [24, 2, 1, "", "nbytes"], [24, 2, 1, "", "ndim"], [24, 2, 1, "", "newbyteorder"], [24, 2, 1, "", "nonzero"], [24, 2, 1, "", "prod"], [24, 2, 1, "", "ptp"], [24, 2, 1, "", "put"], [24, 2, 1, "", "ravel"], [24, 2, 1, "", "real"], [24, 2, 1, "", "repeat"], [24, 2, 1, "", "reshape"], [24, 2, 1, "", "resize"], [24, 2, 1, "", "round"], [24, 2, 1, "", "searchsorted"], [24, 2, 1, "", "setfield"], [24, 2, 1, "", "setflags"], [24, 2, 1, "", "shape"], [24, 2, 1, "", "size"], [24, 2, 1, "", "sort"], [24, 2, 1, "", "squeeze"], [24, 2, 1, "", "std"], [24, 2, 1, "", "strides"], [24, 2, 1, "", "sum"], [24, 2, 1, "", "swapaxes"], [24, 2, 1, "", "take"], [24, 2, 1, "", "tobytes"], [24, 2, 1, "", "tofile"], [24, 2, 1, "", "tolist"], [24, 2, 1, "", "tostring"], [24, 2, 1, "", "trace"], [24, 2, 1, "", "transpose"], [24, 2, 1, "", "var"], [24, 2, 1, "", "view"]], "arkouda.categorical": [[17, 1, 1, "", "Categorical"]], "arkouda.categorical.Categorical": [[17, 4, 1, "", "BinOps"], [17, 4, 1, "", "RegisterablePieces"], [17, 4, 1, "", "RequiredPieces"], [17, 2, 1, "", "argsort"], [17, 2, 1, "", "attach"], [17, 4, 1, "", "categories"], [17, 4, 1, "", "codes"], [17, 2, 1, "", "concatenate"], [17, 2, 1, "", "contains"], [17, 4, 1, "", "dtype"], [17, 2, 1, "", "endswith"], [17, 2, 1, "", "equals"], [17, 2, 1, "", "from_codes"], [17, 2, 1, "", "from_return_msg"], [17, 2, 1, "", "group"], [17, 2, 1, "", "hash"], [17, 2, 1, "", "in1d"], [17, 6, 1, "", "inferred_type"], [17, 2, 1, "", "info"], [17, 2, 1, "", "is_registered"], [17, 2, 1, "", "isna"], [17, 4, 1, "", "logger"], [17, 6, 1, "", "nbytes"], [17, 4, 1, "id0", "ndim"], [17, 4, 1, "id1", "nlevels"], [17, 4, 1, "", "objType"], [17, 2, 1, "", "parse_hdf_categoricals"], [17, 4, 1, "id2", "permutation"], [17, 2, 1, "", "pretty_print_info"], [17, 2, 1, "", "register"], [17, 4, 1, "", "registered_name"], [17, 2, 1, "", "reset_categories"], [17, 2, 1, "", "save"], [17, 4, 1, "id3", "segments"], [17, 2, 1, "", "set_categories"], [17, 4, 1, "id4", "shape"], [17, 4, 1, "id5", "size"], [17, 2, 1, "", "sort_values"], [17, 2, 1, "", "standardize_categories"], [17, 2, 1, "", "startswith"], [17, 2, 1, "", "to_hdf"], [17, 2, 1, "", "to_list"], [17, 2, 1, "", "to_ndarray"], [17, 2, 1, "", "to_pandas"], [17, 2, 1, "", "to_parquet"], [17, 2, 1, "", "to_strings"], [17, 2, 1, "", "transfer"], [17, 2, 1, "", "unique"], [17, 2, 1, "", "unregister"], [17, 2, 1, "", "unregister_categorical_by_name"], [17, 2, 1, "", "update_hdf"]], "arkouda.client": [[18, 5, 1, "", "connect"], [18, 5, 1, "", "disconnect"], [18, 5, 1, "", "generate_history"], [18, 5, 1, "", "get_config"], [18, 5, 1, "", "get_max_array_rank"], [18, 5, 1, "", "get_mem_avail"], [18, 5, 1, "", "get_mem_status"], [18, 5, 1, "", "get_mem_used"], [18, 5, 1, "", "get_server_commands"], [18, 5, 1, "", "print_server_commands"], [18, 5, 1, "", "ruok"], [18, 5, 1, "", "shutdown"]], "arkouda.client_dtypes": [[19, 1, 1, "", "BitVector"], [19, 5, 1, "", "BitVectorizer"], [19, 1, 1, "", "Fields"], [19, 1, 1, "", "IPv4"], [19, 5, 1, "", "ip_address"], [19, 5, 1, "", "is_ipv4"], [19, 5, 1, "", "is_ipv6"]], "arkouda.client_dtypes.BitVector": [[19, 4, 1, "", "conserves"], [19, 2, 1, "", "format"], [19, 2, 1, "", "from_return_msg"], [19, 2, 1, "", "opeq"], [19, 2, 1, "", "register"], [19, 4, 1, "", "registered_name"], [19, 4, 1, "", "reverse"], [19, 4, 1, "", "special_objType"], [19, 2, 1, "", "to_list"], [19, 2, 1, "", "to_ndarray"], [19, 4, 1, "", "values"], [19, 4, 1, "", "width"]], "arkouda.client_dtypes.Fields": [[19, 4, 1, "", "MSB_left"], [19, 2, 1, "", "format"], [19, 4, 1, "", "name"], [19, 4, 1, "", "names"], [19, 4, 1, "", "namewidth"], [19, 2, 1, "", "opeq"], [19, 4, 1, "", "pad"], [19, 4, 1, "", "padchar"], [19, 4, 1, "", "separator"], [19, 4, 1, "", "show_int"], [19, 4, 1, "", "width"]], "arkouda.client_dtypes.IPv4": [[19, 2, 1, "", "export_uint"], [19, 2, 1, "", "format"], [19, 2, 1, "", "normalize"], [19, 2, 1, "", "opeq"], [19, 2, 1, "", "register"], [19, 4, 1, "", "special_objType"], [19, 2, 1, "", "to_hdf"], [19, 2, 1, "", "to_list"], [19, 2, 1, "", "to_ndarray"], [19, 2, 1, "", "update_hdf"], [19, 4, 1, "", "values"]], "arkouda.dataframe": [[20, 1, 1, "", "DataFrame"], [20, 1, 1, "", "DataFrameGroupBy"], [20, 1, 1, "", "DiffAggregate"], [20, 5, 1, "", "intersect"], [20, 5, 1, "", "intx"], [20, 5, 1, "", "invert_permutation"], [20, 5, 1, "", "merge"]], "arkouda.dataframe.DataFrame": [[20, 2, 1, "", "GroupBy"], [20, 2, 1, "", "all"], [20, 2, 1, "", "any"], [20, 2, 1, "", "append"], [20, 2, 1, "", "apply_permutation"], [20, 2, 1, "", "argsort"], [20, 2, 1, "", "assign"], [20, 2, 1, "", "attach"], [20, 2, 1, "", "coargsort"], [20, 6, 1, "", "columns"], [20, 2, 1, "", "concat"], [20, 2, 1, "", "corr"], [20, 2, 1, "", "count"], [20, 2, 1, "", "drop"], [20, 2, 1, "", "drop_duplicates"], [20, 2, 1, "", "dropna"], [20, 6, 1, "", "dtypes"], [20, 6, 1, "", "empty"], [20, 2, 1, "", "filter_by_range"], [20, 2, 1, "", "from_pandas"], [20, 2, 1, "", "from_return_msg"], [20, 2, 1, "", "groupby"], [20, 2, 1, "", "head"], [20, 6, 1, "", "index"], [20, 6, 1, "", "info"], [20, 2, 1, "", "is_registered"], [20, 2, 1, "", "isin"], [20, 2, 1, "", "isna"], [20, 2, 1, "", "load"], [20, 2, 1, "", "memory_usage"], [20, 2, 1, "", "memory_usage_info"], [20, 2, 1, "", "merge"], [20, 2, 1, "", "notna"], [20, 2, 1, "", "objType"], [20, 2, 1, "", "read_csv"], [20, 2, 1, "", "register"], [20, 2, 1, "", "rename"], [20, 2, 1, "", "reset_index"], [20, 2, 1, "", "sample"], [20, 2, 1, "", "save"], [20, 6, 1, "", "shape"], [20, 6, 1, "", "size"], [20, 2, 1, "", "sort_index"], [20, 2, 1, "", "sort_values"], [20, 2, 1, "", "tail"], [20, 2, 1, "", "to_csv"], [20, 2, 1, "", "to_hdf"], [20, 2, 1, "", "to_markdown"], [20, 2, 1, "", "to_pandas"], [20, 2, 1, "", "to_parquet"], [20, 2, 1, "", "transfer"], [20, 2, 1, "", "unregister"], [20, 2, 1, "", "unregister_dataframe_by_name"], [20, 2, 1, "", "update_hdf"], [20, 2, 1, "", "update_nrows"]], "arkouda.dataframe.DataFrameGroupBy": [[20, 2, 1, "", "all"], [20, 2, 1, "", "any"], [20, 2, 1, "", "argmax"], [20, 2, 1, "", "argmin"], [20, 4, 1, "", "as_index"], [20, 2, 1, "", "broadcast"], [20, 2, 1, "", "count"], [20, 4, 1, "", "df"], [20, 2, 1, "", "diff"], [20, 2, 1, "", "first"], [20, 4, 1, "", "gb"], [20, 4, 1, "", "gb_key_names"], [20, 2, 1, "", "head"], [20, 2, 1, "", "max"], [20, 2, 1, "", "mean"], [20, 2, 1, "", "median"], [20, 2, 1, "", "min"], [20, 2, 1, "", "mode"], [20, 2, 1, "", "nunique"], [20, 2, 1, "", "prod"], [20, 2, 1, "", "sample"], [20, 2, 1, "", "size"], [20, 2, 1, "", "std"], [20, 2, 1, "", "sum"], [20, 2, 1, "", "tail"], [20, 2, 1, "", "unique"], [20, 2, 1, "", "var"], [20, 2, 1, "", "xor"]], "arkouda.dataframe.DiffAggregate": [[20, 2, 1, "", "all"], [20, 2, 1, "", "any"], [20, 2, 1, "", "argmax"], [20, 2, 1, "", "argmin"], [20, 2, 1, "", "count"], [20, 2, 1, "", "first"], [20, 4, 1, "", "gb"], [20, 2, 1, "", "max"], [20, 2, 1, "", "mean"], [20, 2, 1, "", "median"], [20, 2, 1, "", "min"], [20, 2, 1, "", "mode"], [20, 2, 1, "", "nunique"], [20, 2, 1, "", "prod"], [20, 2, 1, "", "std"], [20, 2, 1, "", "sum"], [20, 2, 1, "", "unique"], [20, 4, 1, "", "values"], [20, 2, 1, "", "var"], [20, 2, 1, "", "xor"]], "arkouda.double": [[24, 2, 1, "", "as_integer_ratio"], [24, 2, 1, "", "fromhex"], [24, 2, 1, "", "hex"], [24, 2, 1, "", "is_integer"]], "arkouda.dtypes": [[21, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [21, 1, 1, "", "ARKOUDA_SUPPORTED_FLOATS"], [21, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [21, 1, 1, "", "ARKOUDA_SUPPORTED_NUMBERS"], [21, 1, 1, "", "DType"], [21, 1, 1, "", "DTypeObjects"], [21, 1, 1, "", "DTypes"], [21, 1, 1, "", "Enum"], [21, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [21, 1, 1, "", "NumericDTypes"], [21, 1, 1, "", "ScalarDTypes"], [21, 1, 1, "", "SeriesDTypes"], [21, 1, 1, "", "Union"], [21, 1, 1, "", "all_scalars"], [21, 1, 1, "", "annotations"], [21, 1, 1, "", "bigint"], [21, 1, 1, "", "bitType"], [21, 1, 1, "", "bool_"], [21, 1, 1, "", "bool_scalars"], [21, 5, 1, "", "cast"], [21, 1, 1, "", "complex128"], [21, 1, 1, "", "complex64"], [21, 5, 1, "", "dtype"], [21, 1, 1, "", "float16"], [21, 1, 1, "", "float32"], [21, 1, 1, "", "float64"], [21, 1, 1, "", "float_scalars"], [21, 5, 1, "", "get_byteorder"], [21, 5, 1, "", "get_server_byteorder"], [21, 1, 1, "", "int16"], [21, 1, 1, "", "int32"], [21, 1, 1, "", "int64"], [21, 1, 1, "", "int8"], [21, 1, 1, "", "intTypes"], [21, 1, 1, "", "int_scalars"], [21, 5, 1, "", "isSupportedFloat"], [21, 5, 1, "", "isSupportedInt"], [21, 5, 1, "", "isSupportedNumber"], [21, 1, 1, "", "numeric_and_bool_scalars"], [21, 1, 1, "", "numeric_scalars"], [21, 1, 1, "", "numpy_scalars"], [21, 5, 1, "", "resolve_scalar_dtype"], [21, 1, 1, "", "str_"], [21, 1, 1, "", "str_scalars"], [21, 1, 1, "", "uint16"], [21, 1, 1, "", "uint32"], [21, 1, 1, "", "uint64"], [21, 1, 1, "", "uint8"]], "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES": [[21, 2, 1, "", "copy"], [21, 2, 1, "", "difference"], [21, 2, 1, "", "intersection"], [21, 2, 1, "", "isdisjoint"], [21, 2, 1, "", "issubset"], [21, 2, 1, "", "issuperset"], [21, 2, 1, "", "symmetric_difference"], [21, 2, 1, "", "union"]], "arkouda.dtypes.ARKOUDA_SUPPORTED_FLOATS": [[21, 2, 1, "", "count"], [21, 2, 1, "", "index"]], "arkouda.dtypes.ARKOUDA_SUPPORTED_INTS": [[21, 2, 1, "", "count"], [21, 2, 1, "", "index"]], "arkouda.dtypes.ARKOUDA_SUPPORTED_NUMBERS": [[21, 2, 1, "", "count"], [21, 2, 1, "", "index"]], "arkouda.dtypes.DType": [[21, 2, 1, "", "BIGINT"], [21, 2, 1, "", "BOOL"], [21, 2, 1, "", "COMPLEX128"], [21, 2, 1, "", "COMPLEX64"], [21, 2, 1, "", "FLOAT"], [21, 2, 1, "", "FLOAT32"], [21, 2, 1, "", "FLOAT64"], [21, 2, 1, "", "INT"], [21, 2, 1, "", "INT16"], [21, 2, 1, "", "INT32"], [21, 2, 1, "", "INT64"], [21, 2, 1, "", "INT8"], [21, 2, 1, "", "STR"], [21, 2, 1, "", "UINT"], [21, 2, 1, "", "UINT16"], [21, 2, 1, "", "UINT32"], [21, 2, 1, "", "UINT64"], [21, 2, 1, "", "UINT8"], [21, 2, 1, "", "name"], [21, 2, 1, "", "value"]], "arkouda.dtypes.DTypeObjects": [[21, 2, 1, "", "copy"], [21, 2, 1, "", "difference"], [21, 2, 1, "", "intersection"], [21, 2, 1, "", "isdisjoint"], [21, 2, 1, "", "issubset"], [21, 2, 1, "", "issuperset"], [21, 2, 1, "", "symmetric_difference"], [21, 2, 1, "", "union"]], "arkouda.dtypes.DTypes": [[21, 2, 1, "", "copy"], [21, 2, 1, "", "difference"], [21, 2, 1, "", "intersection"], [21, 2, 1, "", "isdisjoint"], [21, 2, 1, "", "issubset"], [21, 2, 1, "", "issuperset"], [21, 2, 1, "", "symmetric_difference"], [21, 2, 1, "", "union"]], "arkouda.dtypes.NUMBER_FORMAT_STRINGS": [[21, 2, 1, "", "clear"], [21, 2, 1, "", "copy"], [21, 2, 1, "", "fromkeys"], [21, 2, 1, "", "get"], [21, 2, 1, "", "items"], [21, 2, 1, "", "keys"], [21, 2, 1, "", "pop"], [21, 2, 1, "", "popitem"], [21, 2, 1, "", "setdefault"], [21, 2, 1, "", "update"], [21, 2, 1, "", "values"]], "arkouda.dtypes.NumericDTypes": [[21, 2, 1, "", "copy"], [21, 2, 1, "", "difference"], [21, 2, 1, "", "intersection"], [21, 2, 1, "", "isdisjoint"], [21, 2, 1, "", "issubset"], [21, 2, 1, "", "issuperset"], [21, 2, 1, "", "symmetric_difference"], [21, 2, 1, "", "union"]], "arkouda.dtypes.ScalarDTypes": [[21, 2, 1, "", "copy"], [21, 2, 1, "", "difference"], [21, 2, 1, "", "intersection"], [21, 2, 1, "", "isdisjoint"], [21, 2, 1, "", "issubset"], [21, 2, 1, "", "issuperset"], [21, 2, 1, "", "symmetric_difference"], [21, 2, 1, "", "union"]], "arkouda.dtypes.SeriesDTypes": [[21, 2, 1, "", "clear"], [21, 2, 1, "", "copy"], [21, 2, 1, "", "fromkeys"], [21, 2, 1, "", "get"], [21, 2, 1, "", "items"], [21, 2, 1, "", "keys"], [21, 2, 1, "", "pop"], [21, 2, 1, "", "popitem"], [21, 2, 1, "", "setdefault"], [21, 2, 1, "", "update"], [21, 2, 1, "", "values"]], "arkouda.dtypes.annotations": [[21, 2, 1, "", "compiler_flag"], [21, 2, 1, "", "getMandatoryRelease"], [21, 2, 1, "", "getOptionalRelease"], [21, 2, 1, "", "mandatory"], [21, 2, 1, "", "optional"]], "arkouda.dtypes.bigint": [[21, 2, 1, "", "itemsize"], [21, 2, 1, "", "name"], [21, 2, 1, "", "ndim"], [21, 2, 1, "", "shape"], [21, 2, 1, "", "type"]], "arkouda.dtypes.bitType": [[21, 2, 1, "", "bit_count"]], "arkouda.dtypes.float16": [[21, 2, 1, "", "as_integer_ratio"], [21, 2, 1, "", "is_integer"]], "arkouda.dtypes.float32": [[21, 2, 1, "", "as_integer_ratio"], [21, 2, 1, "", "is_integer"]], "arkouda.dtypes.float64": [[21, 2, 1, "", "as_integer_ratio"], [21, 2, 1, "", "fromhex"], [21, 2, 1, "", "hex"], [21, 2, 1, "", "is_integer"]], "arkouda.dtypes.int16": [[21, 2, 1, "", "bit_count"]], "arkouda.dtypes.int32": [[21, 2, 1, "", "bit_count"]], "arkouda.dtypes.int64": [[21, 2, 1, "", "bit_count"]], "arkouda.dtypes.int8": [[21, 2, 1, "", "bit_count"]], "arkouda.dtypes.intTypes": [[21, 2, 1, "", "copy"], [21, 2, 1, "", "difference"], [21, 2, 1, "", "intersection"], [21, 2, 1, "", "isdisjoint"], [21, 2, 1, "", "issubset"], [21, 2, 1, "", "issuperset"], [21, 2, 1, "", "symmetric_difference"], [21, 2, 1, "", "union"]], "arkouda.dtypes.str_": [[21, 2, 1, "", "T"], [21, 2, 1, "", "all"], [21, 2, 1, "", "any"], [21, 2, 1, "", "argmax"], [21, 2, 1, "", "argmin"], [21, 2, 1, "", "argsort"], [21, 2, 1, "", "astype"], [21, 2, 1, "", "base"], [21, 2, 1, "", "byteswap"], [21, 2, 1, "", "choose"], [21, 2, 1, "", "clip"], [21, 2, 1, "", "compress"], [21, 2, 1, "", "conj"], [21, 2, 1, "", "conjugate"], [21, 2, 1, "", "copy"], [21, 2, 1, "", "cumprod"], [21, 2, 1, "", "cumsum"], [21, 2, 1, "", "data"], [21, 2, 1, "", "diagonal"], [21, 2, 1, "", "dtype"], [21, 2, 1, "", "dump"], [21, 2, 1, "", "dumps"], [21, 2, 1, "", "fill"], [21, 2, 1, "", "flags"], [21, 2, 1, "", "flat"], [21, 2, 1, "", "flatten"], [21, 2, 1, "", "getfield"], [21, 2, 1, "", "imag"], [21, 2, 1, "", "item"], [21, 2, 1, "", "itemset"], [21, 2, 1, "", "itemsize"], [21, 2, 1, "", "max"], [21, 2, 1, "", "mean"], [21, 2, 1, "", "min"], [21, 2, 1, "", "nbytes"], [21, 2, 1, "", "ndim"], [21, 2, 1, "", "newbyteorder"], [21, 2, 1, "", "nonzero"], [21, 2, 1, "", "prod"], [21, 2, 1, "", "ptp"], [21, 2, 1, "", "put"], [21, 2, 1, "", "ravel"], [21, 2, 1, "", "real"], [21, 2, 1, "", "repeat"], [21, 2, 1, "", "reshape"], [21, 2, 1, "", "resize"], [21, 2, 1, "", "round"], [21, 2, 1, "", "searchsorted"], [21, 2, 1, "", "setfield"], [21, 2, 1, "", "setflags"], [21, 2, 1, "", "shape"], [21, 2, 1, "", "size"], [21, 2, 1, "", "sort"], [21, 2, 1, "", "squeeze"], [21, 2, 1, "", "std"], [21, 2, 1, "", "strides"], [21, 2, 1, "", "sum"], [21, 2, 1, "", "swapaxes"], [21, 2, 1, "", "take"], [21, 2, 1, "", "tobytes"], [21, 2, 1, "", "tofile"], [21, 2, 1, "", "tolist"], [21, 2, 1, "", "tostring"], [21, 2, 1, "", "trace"], [21, 2, 1, "", "transpose"], [21, 2, 1, "", "var"], [21, 2, 1, "", "view"]], "arkouda.dtypes.uint16": [[21, 2, 1, "", "bit_count"]], "arkouda.dtypes.uint32": [[21, 2, 1, "", "bit_count"]], "arkouda.dtypes.uint64": [[21, 2, 1, "", "bit_count"]], "arkouda.dtypes.uint8": [[21, 2, 1, "", "bit_count"]], "arkouda.finfo": [[24, 4, 1, "", "bits"], [24, 4, 1, "", "dtype"], [24, 4, 1, "", "eps"], [24, 4, 1, "", "epsneg"], [24, 4, 1, "", "iexp"], [24, 4, 1, "", "machep"], [24, 4, 1, "", "max"], [24, 4, 1, "", "maxexp"], [24, 4, 1, "", "min"], [24, 4, 1, "", "minexp"], [24, 4, 1, "", "negep"], [24, 4, 1, "", "nexp"], [24, 4, 1, "", "nmant"], [24, 4, 1, "", "precision"], [24, 4, 1, "", "resolution"], [24, 6, 1, "id869", "smallest_normal"], [24, 4, 1, "", "smallest_subnormal"], [24, 6, 1, "id870", "tiny"]], "arkouda.float16": [[24, 2, 1, "", "as_integer_ratio"], [24, 2, 1, "", "is_integer"]], "arkouda.float32": [[24, 2, 1, "", "as_integer_ratio"], [24, 2, 1, "", "is_integer"]], "arkouda.float64": [[24, 2, 1, "", "as_integer_ratio"], [24, 2, 1, "", "fromhex"], [24, 2, 1, "", "hex"], [24, 2, 1, "", "is_integer"]], "arkouda.float_": [[24, 2, 1, "", "as_integer_ratio"], [24, 2, 1, "", "fromhex"], [24, 2, 1, "", "hex"], [24, 2, 1, "", "is_integer"]], "arkouda.format_parser": [[24, 4, 1, "", "dtype"]], "arkouda.groupbyclass": [[22, 1, 1, "", "GROUPBY_REDUCTION_TYPES"], [22, 1, 1, "", "GroupBy"], [22, 5, 1, "", "broadcast"], [22, 5, 1, "", "unique"]], "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES": [[22, 2, 1, "", "copy"], [22, 2, 1, "", "difference"], [22, 2, 1, "", "intersection"], [22, 2, 1, "", "isdisjoint"], [22, 2, 1, "", "issubset"], [22, 2, 1, "", "issuperset"], [22, 2, 1, "", "symmetric_difference"], [22, 2, 1, "", "union"]], "arkouda.groupbyclass.GroupBy": [[22, 2, 1, "", "AND"], [22, 2, 1, "", "OR"], [22, 2, 1, "", "Reductions"], [22, 2, 1, "", "XOR"], [22, 2, 1, "", "aggregate"], [22, 2, 1, "", "all"], [22, 2, 1, "", "any"], [22, 2, 1, "", "argmax"], [22, 2, 1, "", "argmin"], [22, 2, 1, "", "attach"], [22, 2, 1, "", "broadcast"], [22, 2, 1, "", "build_from_components"], [22, 2, 1, "", "count"], [22, 4, 1, "", "dropna"], [22, 2, 1, "", "first"], [22, 2, 1, "", "from_return_msg"], [22, 2, 1, "", "head"], [22, 2, 1, "", "is_registered"], [22, 4, 1, "", "logger"], [22, 2, 1, "", "max"], [22, 2, 1, "", "mean"], [22, 2, 1, "", "median"], [22, 2, 1, "", "min"], [22, 2, 1, "", "mode"], [22, 2, 1, "", "most_common"], [22, 4, 1, "", "ngroups"], [22, 4, 1, "", "nkeys"], [22, 2, 1, "", "nunique"], [22, 2, 1, "", "objType"], [22, 4, 1, "", "permutation"], [22, 2, 1, "", "prod"], [22, 2, 1, "", "register"], [22, 2, 1, "", "sample"], [22, 4, 1, "", "segments"], [22, 2, 1, "id0", "size"], [22, 2, 1, "", "std"], [22, 2, 1, "", "sum"], [22, 2, 1, "", "tail"], [22, 2, 1, "", "to_hdf"], [22, 2, 1, "", "unique"], [22, 4, 1, "", "unique_keys"], [22, 2, 1, "", "unregister"], [22, 2, 1, "", "unregister_groupby_by_name"], [22, 2, 1, "", "update_hdf"], [22, 2, 1, "", "var"]], "arkouda.half": [[24, 2, 1, "", "as_integer_ratio"], [24, 2, 1, "", "is_integer"]], "arkouda.history": [[23, 1, 1, "", "HistoryRetriever"], [23, 1, 1, "", "NotebookHistoryRetriever"], [23, 1, 1, "", "ShellHistoryRetriever"]], "arkouda.history.HistoryRetriever": [[23, 2, 1, "", "retrieve"]], "arkouda.history.NotebookHistoryRetriever": [[23, 2, 1, "", "retrieve"]], "arkouda.history.ShellHistoryRetriever": [[23, 2, 1, "", "retrieve"]], "arkouda.iinfo": [[24, 4, 1, "", "bits"], [24, 4, 1, "", "dtype"], [24, 6, 1, "id876", "max"], [24, 6, 1, "id877", "min"]], "arkouda.index": [[25, 1, 1, "", "Index"], [25, 1, 1, "", "MultiIndex"]], "arkouda.index.Index": [[25, 2, 1, "", "argsort"], [25, 2, 1, "", "concat"], [25, 2, 1, "", "equals"], [25, 2, 1, "", "factory"], [25, 2, 1, "", "from_return_msg"], [25, 6, 1, "", "index"], [25, 6, 1, "", "inferred_type"], [25, 2, 1, "", "is_registered"], [25, 2, 1, "", "lookup"], [25, 2, 1, "", "map"], [25, 4, 1, "", "max_list_size"], [25, 2, 1, "", "memory_usage"], [25, 6, 1, "", "names"], [25, 6, 1, "", "ndim"], [25, 6, 1, "", "nlevels"], [25, 4, 1, "", "objType"], [25, 2, 1, "", "register"], [25, 4, 1, "", "registered_name"], [25, 2, 1, "", "save"], [25, 2, 1, "", "set_dtype"], [25, 6, 1, "", "shape"], [25, 2, 1, "", "to_csv"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "to_hdf"], [25, 2, 1, "", "to_list"], [25, 2, 1, "", "to_ndarray"], [25, 2, 1, "", "to_pandas"], [25, 2, 1, "", "to_parquet"], [25, 2, 1, "", "unregister"], [25, 2, 1, "", "update_hdf"]], "arkouda.index.MultiIndex": [[25, 2, 1, "", "argsort"], [25, 2, 1, "", "concat"], [25, 6, 1, "", "dtype"], [25, 2, 1, "", "equal_levels"], [25, 4, 1, "", "first"], [25, 2, 1, "", "get_level_values"], [25, 6, 1, "", "index"], [25, 6, 1, "", "inferred_type"], [25, 2, 1, "", "is_registered"], [25, 4, 1, "", "levels"], [25, 2, 1, "", "lookup"], [25, 2, 1, "", "memory_usage"], [25, 6, 1, "", "name"], [25, 6, 1, "", "names"], [25, 6, 1, "", "ndim"], [25, 6, 1, "", "nlevels"], [25, 4, 1, "", "objType"], [25, 2, 1, "", "register"], [25, 4, 1, "", "registered_name"], [25, 2, 1, "", "set_dtype"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "to_hdf"], [25, 2, 1, "", "to_list"], [25, 2, 1, "", "to_ndarray"], [25, 2, 1, "", "to_pandas"], [25, 2, 1, "", "unregister"], [25, 2, 1, "", "update_hdf"]], "arkouda.infoclass": [[26, 3, 1, "", "AllSymbols"], [26, 3, 1, "", "RegisteredSymbols"], [26, 5, 1, "", "information"], [26, 5, 1, "", "list_registry"], [26, 5, 1, "", "list_symbol_table"], [26, 5, 1, "", "pretty_print_information"]], "arkouda.int16": [[24, 2, 1, "", "bit_count"]], "arkouda.int32": [[24, 2, 1, "", "bit_count"]], "arkouda.int64": [[24, 2, 1, "id881", "bit_count"]], "arkouda.int8": [[24, 2, 1, "", "bit_count"]], "arkouda.intTypes": [[24, 2, 1, "id892", "copy"], [24, 2, 1, "id893", "difference"], [24, 2, 1, "id894", "intersection"], [24, 2, 1, "id895", "isdisjoint"], [24, 2, 1, "id896", "issubset"], [24, 2, 1, "id897", "issuperset"], [24, 2, 1, "id898", "symmetric_difference"], [24, 2, 1, "id899", "union"]], "arkouda.int_": [[24, 2, 1, "", "bit_count"]], "arkouda.intc": [[24, 2, 1, "", "bit_count"]], "arkouda.integer": [[24, 2, 1, "", "denominator"], [24, 2, 1, "", "is_integer"], [24, 2, 1, "", "numerator"]], "arkouda.intp": [[24, 2, 1, "", "bit_count"]], "arkouda.io": [[27, 5, 1, "", "export"], [27, 5, 1, "", "get_columns"], [27, 5, 1, "", "get_datasets"], [27, 5, 1, "", "get_filetype"], [27, 5, 1, "", "get_null_indices"], [27, 5, 1, "", "import_data"], [27, 5, 1, "", "load"], [27, 5, 1, "", "load_all"], [27, 5, 1, "", "ls"], [27, 5, 1, "", "ls_csv"], [27, 5, 1, "", "read"], [27, 5, 1, "", "read_csv"], [27, 5, 1, "", "read_hdf"], [27, 5, 1, "", "read_parquet"], [27, 5, 1, "", "read_tagged_data"], [27, 5, 1, "", "read_zarr"], [27, 5, 1, "", "receive"], [27, 5, 1, "", "receive_dataframe"], [27, 5, 1, "", "restore"], [27, 5, 1, "", "save_all"], [27, 5, 1, "", "snapshot"], [27, 5, 1, "", "to_csv"], [27, 5, 1, "", "to_hdf"], [27, 5, 1, "", "to_parquet"], [27, 5, 1, "", "to_zarr"], [27, 5, 1, "", "update_hdf"]], "arkouda.io_util": [[28, 5, 1, "", "delete_directory"], [28, 5, 1, "", "delimited_file_to_dict"], [28, 5, 1, "", "dict_to_delimited_file"], [28, 5, 1, "", "get_directory"], [28, 5, 1, "", "write_line_to_file"]], "arkouda.join": [[29, 5, 1, "", "compute_join_size"], [29, 5, 1, "", "gen_ranges"], [29, 5, 1, "", "join_on_eq_with_dt"]], "arkouda.logger": [[30, 1, 1, "", "LogLevel"], [30, 5, 1, "", "disableVerbose"], [30, 5, 1, "", "enableVerbose"], [30, 5, 1, "", "write_log"]], "arkouda.logger.LogLevel": [[30, 4, 1, "", "CRITICAL"], [30, 4, 1, "", "DEBUG"], [30, 4, 1, "", "ERROR"], [30, 4, 1, "", "INFO"], [30, 4, 1, "", "WARN"]], "arkouda.longdouble": [[24, 2, 1, "", "as_integer_ratio"], [24, 2, 1, "", "is_integer"]], "arkouda.longfloat": [[24, 2, 1, "", "as_integer_ratio"], [24, 2, 1, "", "is_integer"]], "arkouda.longlong": [[24, 2, 1, "", "bit_count"]], "arkouda.match": [[31, 1, 1, "", "Match"]], "arkouda.match.Match": [[100, 2, 1, "", "end"], [100, 2, 1, "", "find_matches"], [100, 2, 1, "", "group"], [100, 2, 1, "", "match_type"], [100, 2, 1, "", "matched"], [31, 4, 1, "", "re"], [100, 2, 1, "", "start"]], "arkouda.matcher": [[32, 1, 1, "", "Matcher"]], "arkouda.matcher.Matcher": [[32, 4, 1, "", "LocationsInfo"], [32, 2, 1, "", "find_locations"], [32, 2, 1, "", "findall"], [32, 4, 1, "", "full_match_bool"], [32, 4, 1, "", "full_match_ind"], [32, 2, 1, "", "get_match"], [32, 4, 1, "", "indices"], [32, 4, 1, "", "lengths"], [32, 4, 1, "", "logger"], [32, 4, 1, "", "match_bool"], [32, 4, 1, "", "match_ind"], [32, 4, 1, "", "num_matches"], [32, 4, 1, "", "objType"], [32, 4, 1, "", "parent_entry_name"], [32, 4, 1, "", "populated"], [32, 4, 1, "", "search_bool"], [32, 4, 1, "", "search_ind"], [32, 2, 1, "", "split"], [32, 4, 1, "", "starts"], [32, 2, 1, "", "sub"]], "arkouda.numeric": [[33, 1, 1, "", "ErrorMode"], [33, 5, 1, "", "abs"], [33, 5, 1, "", "arccos"], [33, 5, 1, "", "arccosh"], [33, 5, 1, "", "arcsin"], [33, 5, 1, "", "arcsinh"], [33, 5, 1, "", "arctan"], [33, 5, 1, "", "arctan2"], [33, 5, 1, "", "arctanh"], [33, 5, 1, "", "array_equal"], [33, 5, 1, "", "cast"], [33, 5, 1, "", "ceil"], [33, 5, 1, "", "clip"], [33, 5, 1, "", "cos"], [33, 5, 1, "", "cosh"], [33, 5, 1, "", "count_nonzero"], [33, 5, 1, "", "cumprod"], [33, 5, 1, "", "cumsum"], [33, 5, 1, "", "deg2rad"], [33, 5, 1, "", "exp"], [33, 5, 1, "", "expm1"], [33, 5, 1, "", "eye"], [33, 5, 1, "", "floor"], [33, 5, 1, "", "hash"], [33, 5, 1, "", "histogram"], [33, 5, 1, "", "histogram2d"], [33, 5, 1, "", "histogramdd"], [33, 5, 1, "", "isfinite"], [33, 5, 1, "", "isinf"], [33, 5, 1, "", "isnan"], [33, 5, 1, "", "log"], [33, 5, 1, "", "log10"], [33, 5, 1, "", "log1p"], [33, 5, 1, "", "log2"], [33, 5, 1, "", "matmul"], [33, 5, 1, "", "median"], [33, 5, 1, "", "putmask"], [33, 5, 1, "", "rad2deg"], [33, 5, 1, "", "round"], [33, 5, 1, "", "sign"], [33, 5, 1, "", "sin"], [33, 5, 1, "", "sinh"], [33, 5, 1, "", "square"], [33, 5, 1, "", "tan"], [33, 5, 1, "", "tanh"], [33, 5, 1, "", "transpose"], [33, 5, 1, "", "tril"], [33, 5, 1, "", "triu"], [33, 5, 1, "", "trunc"], [33, 5, 1, "", "value_counts"], [33, 5, 1, "", "vecdot"], [33, 5, 1, "", "where"]], "arkouda.numeric.ErrorMode": [[33, 4, 1, "", "ignore"], [33, 4, 1, "", "return_validity"], [33, 4, 1, "", "strict"]], "arkouda.numpy": [[35, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [35, 1, 1, "", "BoolDType"], [35, 1, 1, "", "ByteDType"], [35, 1, 1, "", "BytesDType"], [35, 1, 1, "", "CLongDoubleDType"], [35, 1, 1, "", "Complex128DType"], [35, 1, 1, "", "Complex64DType"], [35, 1, 1, "", "DType"], [35, 1, 1, "", "DTypeObjects"], [35, 1, 1, "", "DTypes"], [35, 1, 1, "", "DataSource"], [35, 1, 1, "", "DateTime64DType"], [35, 1, 1, "", "False_"], [35, 1, 1, "", "Float16DType"], [35, 1, 1, "", "Float32DType"], [35, 1, 1, "", "Float64DType"], [35, 3, 1, "", "Inf"], [35, 3, 1, "", "Infinity"], [35, 1, 1, "", "Int16DType"], [35, 1, 1, "", "Int32DType"], [35, 1, 1, "", "Int64DType"], [35, 1, 1, "", "Int8DType"], [35, 1, 1, "", "IntDType"], [35, 1, 1, "", "LongDType"], [35, 1, 1, "", "LongDoubleDType"], [35, 1, 1, "", "LongLongDType"], [35, 3, 1, "", "NAN"], [35, 3, 1, "", "NINF"], [35, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [35, 3, 1, "", "NZERO"], [35, 3, 1, "", "NaN"], [35, 1, 1, "", "NumericDTypes"], [35, 1, 1, "", "ObjectDType"], [35, 3, 1, "", "PINF"], [35, 3, 1, "", "PZERO"], [35, 1, 1, "", "RankWarning"], [35, 1, 1, "", "ScalarDTypes"], [35, 1, 1, "", "ScalarType"], [35, 1, 1, "", "SeriesDTypes"], [35, 1, 1, "", "ShortDType"], [35, 1, 1, "", "StrDType"], [35, 1, 1, "", "TimeDelta64DType"], [35, 1, 1, "", "TooHardError"], [35, 1, 1, "", "True_"], [35, 1, 1, "", "UByteDType"], [35, 1, 1, "", "UInt16DType"], [35, 1, 1, "", "UInt32DType"], [35, 1, 1, "", "UInt64DType"], [35, 1, 1, "", "UInt8DType"], [35, 1, 1, "", "UIntDType"], [35, 1, 1, "", "ULongDType"], [35, 1, 1, "", "ULongLongDType"], [35, 1, 1, "", "UShortDType"], [35, 1, 1, "", "VoidDType"], [35, 5, 1, "", "add_newdoc"], [35, 1, 1, "", "all_scalars"], [35, 5, 1, "", "base_repr"], [35, 1, 1, "", "bigint"], [35, 5, 1, "", "binary_repr"], [35, 1, 1, "", "bitType"], [35, 1, 1, "", "bool_"], [35, 1, 1, "", "bool_scalars"], [35, 1, 1, "", "byte"], [35, 1, 1, "", "bytes_"], [35, 1, 1, "", "cdouble"], [35, 1, 1, "", "cfloat"], [35, 1, 1, "", "character"], [35, 1, 1, "", "clongdouble"], [35, 1, 1, "", "clongfloat"], [35, 1, 1, "", "complex128"], [35, 1, 1, "", "complex64"], [35, 1, 1, "", "csingle"], [35, 1, 1, "", "datetime64"], [35, 5, 1, "", "deprecate"], [35, 5, 1, "", "deprecate_with_doc"], [35, 5, 1, "", "disp"], [35, 1, 1, "", "double"], [35, 5, 1, "", "dtype"], [34, 0, 0, "-", "dtypes"], [35, 3, 1, "", "e"], [35, 3, 1, "", "euler_gamma"], [35, 1, 1, "", "finfo"], [35, 1, 1, "", "flexible"], [35, 1, 1, "", "float16"], [35, 1, 1, "", "float32"], [35, 1, 1, "", "float64"], [35, 1, 1, "", "float_"], [35, 1, 1, "", "float_scalars"], [35, 1, 1, "", "floating"], [35, 5, 1, "", "floor"], [35, 5, 1, "", "format_float_positional"], [35, 5, 1, "", "format_float_scientific"], [35, 1, 1, "", "format_parser"], [35, 5, 1, "", "get_byteorder"], [35, 5, 1, "", "get_server_byteorder"], [35, 1, 1, "", "half"], [35, 1, 1, "", "iinfo"], [35, 1, 1, "", "inexact"], [35, 3, 1, "", "inf"], [35, 3, 1, "", "infty"], [35, 1, 1, "", "int16"], [35, 1, 1, "", "int32"], [35, 1, 1, "", "int64"], [35, 1, 1, "", "int8"], [35, 1, 1, "", "intTypes"], [35, 1, 1, "", "int_"], [35, 1, 1, "", "int_scalars"], [35, 1, 1, "", "intc"], [35, 1, 1, "", "integer"], [35, 1, 1, "", "intp"], [35, 5, 1, "", "isSupportedFloat"], [35, 5, 1, "", "isSupportedInt"], [35, 5, 1, "", "isSupportedNumber"], [35, 5, 1, "", "isscalar"], [35, 5, 1, "", "issctype"], [35, 5, 1, "", "issubclass_"], [35, 5, 1, "", "issubdtype"], [35, 1, 1, "", "longdouble"], [35, 1, 1, "", "longfloat"], [35, 1, 1, "", "longlong"], [35, 5, 1, "", "maximum_sctype"], [35, 3, 1, "", "nan"], [35, 1, 1, "", "number"], [35, 1, 1, "", "numeric_and_bool_scalars"], [35, 1, 1, "", "numeric_scalars"], [35, 1, 1, "", "numpy_scalars"], [35, 1, 1, "", "object_"], [35, 3, 1, "", "pi"], [35, 5, 1, "", "resolve_scalar_dtype"], [35, 1, 1, "", "sctypeDict"], [35, 1, 1, "", "sctypes"], [35, 1, 1, "", "short"], [35, 1, 1, "", "signedinteger"], [35, 1, 1, "", "single"], [35, 1, 1, "", "str_"], [35, 1, 1, "", "str_scalars"], [35, 1, 1, "", "timedelta64"], [35, 5, 1, "", "typename"], [35, 1, 1, "", "ubyte"], [35, 1, 1, "", "uint"], [35, 1, 1, "", "uint16"], [35, 1, 1, "", "uint32"], [35, 1, 1, "", "uint64"], [35, 1, 1, "", "uint8"], [35, 1, 1, "", "uintc"], [35, 1, 1, "", "uintp"], [35, 1, 1, "", "ulonglong"], [35, 1, 1, "", "unsignedinteger"], [35, 1, 1, "", "ushort"], [35, 1, 1, "", "void"]], "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES": [[35, 2, 1, "", "copy"], [35, 2, 1, "", "difference"], [35, 2, 1, "", "intersection"], [35, 2, 1, "", "isdisjoint"], [35, 2, 1, "", "issubset"], [35, 2, 1, "", "issuperset"], [35, 2, 1, "", "symmetric_difference"], [35, 2, 1, "", "union"]], "arkouda.numpy.DType": [[35, 2, 1, "", "BIGINT"], [35, 2, 1, "", "BOOL"], [35, 2, 1, "", "COMPLEX128"], [35, 2, 1, "", "COMPLEX64"], [35, 2, 1, "", "FLOAT"], [35, 2, 1, "", "FLOAT32"], [35, 2, 1, "", "FLOAT64"], [35, 2, 1, "", "INT"], [35, 2, 1, "", "INT16"], [35, 2, 1, "", "INT32"], [35, 2, 1, "", "INT64"], [35, 2, 1, "", "INT8"], [35, 2, 1, "", "STR"], [35, 2, 1, "", "UINT"], [35, 2, 1, "", "UINT16"], [35, 2, 1, "", "UINT32"], [35, 2, 1, "", "UINT64"], [35, 2, 1, "", "UINT8"], [35, 2, 1, "", "name"], [35, 2, 1, "", "value"]], "arkouda.numpy.DTypeObjects": [[35, 2, 1, "", "copy"], [35, 2, 1, "", "difference"], [35, 2, 1, "", "intersection"], [35, 2, 1, "", "isdisjoint"], [35, 2, 1, "", "issubset"], [35, 2, 1, "", "issuperset"], [35, 2, 1, "", "symmetric_difference"], [35, 2, 1, "", "union"]], "arkouda.numpy.DTypes": [[35, 2, 1, "", "copy"], [35, 2, 1, "", "difference"], [35, 2, 1, "", "intersection"], [35, 2, 1, "", "isdisjoint"], [35, 2, 1, "", "issubset"], [35, 2, 1, "", "issuperset"], [35, 2, 1, "", "symmetric_difference"], [35, 2, 1, "", "union"]], "arkouda.numpy.DataSource": [[35, 2, 1, "", "abspath"], [35, 2, 1, "", "exists"], [35, 2, 1, "", "open"]], "arkouda.numpy.NUMBER_FORMAT_STRINGS": [[35, 2, 1, "", "clear"], [35, 2, 1, "", "copy"], [35, 2, 1, "", "fromkeys"], [35, 2, 1, "", "get"], [35, 2, 1, "", "items"], [35, 2, 1, "", "keys"], [35, 2, 1, "", "pop"], [35, 2, 1, "", "popitem"], [35, 2, 1, "", "setdefault"], [35, 2, 1, "", "update"], [35, 2, 1, "", "values"]], "arkouda.numpy.NumericDTypes": [[35, 2, 1, "", "copy"], [35, 2, 1, "", "difference"], [35, 2, 1, "", "intersection"], [35, 2, 1, "", "isdisjoint"], [35, 2, 1, "", "issubset"], [35, 2, 1, "", "issuperset"], [35, 2, 1, "", "symmetric_difference"], [35, 2, 1, "", "union"]], "arkouda.numpy.ScalarDTypes": [[35, 2, 1, "", "copy"], [35, 2, 1, "", "difference"], [35, 2, 1, "", "intersection"], [35, 2, 1, "", "isdisjoint"], [35, 2, 1, "", "issubset"], [35, 2, 1, "", "issuperset"], [35, 2, 1, "", "symmetric_difference"], [35, 2, 1, "", "union"]], "arkouda.numpy.ScalarType": [[35, 2, 1, "", "count"], [35, 2, 1, "", "index"]], "arkouda.numpy.SeriesDTypes": [[35, 2, 1, "", "clear"], [35, 2, 1, "", "copy"], [35, 2, 1, "", "fromkeys"], [35, 2, 1, "", "get"], [35, 2, 1, "", "items"], [35, 2, 1, "", "keys"], [35, 2, 1, "", "pop"], [35, 2, 1, "", "popitem"], [35, 2, 1, "", "setdefault"], [35, 2, 1, "", "update"], [35, 2, 1, "", "values"]], "arkouda.numpy.bigint": [[35, 2, 1, "", "itemsize"], [35, 2, 1, "", "name"], [35, 2, 1, "", "ndim"], [35, 2, 1, "", "shape"], [35, 2, 1, "", "type"]], "arkouda.numpy.bitType": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.byte": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.bytes_": [[35, 2, 1, "", "T"], [35, 2, 1, "", "all"], [35, 2, 1, "", "any"], [35, 2, 1, "", "argmax"], [35, 2, 1, "", "argmin"], [35, 2, 1, "", "argsort"], [35, 2, 1, "", "astype"], [35, 2, 1, "", "base"], [35, 2, 1, "", "byteswap"], [35, 2, 1, "", "choose"], [35, 2, 1, "", "clip"], [35, 2, 1, "", "compress"], [35, 2, 1, "", "conj"], [35, 2, 1, "", "conjugate"], [35, 2, 1, "", "copy"], [35, 2, 1, "", "cumprod"], [35, 2, 1, "", "cumsum"], [35, 2, 1, "", "data"], [35, 2, 1, "", "diagonal"], [35, 2, 1, "", "dtype"], [35, 2, 1, "", "dump"], [35, 2, 1, "", "dumps"], [35, 2, 1, "", "fill"], [35, 2, 1, "", "flags"], [35, 2, 1, "", "flat"], [35, 2, 1, "", "flatten"], [35, 2, 1, "", "getfield"], [35, 2, 1, "", "imag"], [35, 2, 1, "", "item"], [35, 2, 1, "", "itemset"], [35, 2, 1, "", "itemsize"], [35, 2, 1, "", "max"], [35, 2, 1, "", "mean"], [35, 2, 1, "", "min"], [35, 2, 1, "", "nbytes"], [35, 2, 1, "", "ndim"], [35, 2, 1, "", "newbyteorder"], [35, 2, 1, "", "nonzero"], [35, 2, 1, "", "prod"], [35, 2, 1, "", "ptp"], [35, 2, 1, "", "put"], [35, 2, 1, "", "ravel"], [35, 2, 1, "", "real"], [35, 2, 1, "", "repeat"], [35, 2, 1, "", "reshape"], [35, 2, 1, "", "resize"], [35, 2, 1, "", "round"], [35, 2, 1, "", "searchsorted"], [35, 2, 1, "", "setfield"], [35, 2, 1, "", "setflags"], [35, 2, 1, "", "shape"], [35, 2, 1, "", "size"], [35, 2, 1, "", "sort"], [35, 2, 1, "", "squeeze"], [35, 2, 1, "", "std"], [35, 2, 1, "", "strides"], [35, 2, 1, "", "sum"], [35, 2, 1, "", "swapaxes"], [35, 2, 1, "", "take"], [35, 2, 1, "", "tobytes"], [35, 2, 1, "", "tofile"], [35, 2, 1, "", "tolist"], [35, 2, 1, "", "tostring"], [35, 2, 1, "", "trace"], [35, 2, 1, "", "transpose"], [35, 2, 1, "", "var"], [35, 2, 1, "", "view"]], "arkouda.numpy.double": [[35, 2, 1, "", "as_integer_ratio"], [35, 2, 1, "", "fromhex"], [35, 2, 1, "", "hex"], [35, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes": [[34, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [34, 1, 1, "", "ARKOUDA_SUPPORTED_FLOATS"], [34, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [34, 1, 1, "", "ARKOUDA_SUPPORTED_NUMBERS"], [34, 1, 1, "", "DType"], [34, 1, 1, "", "DTypeObjects"], [34, 1, 1, "", "DTypes"], [34, 1, 1, "", "Enum"], [34, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [34, 1, 1, "", "NumericDTypes"], [34, 1, 1, "", "ScalarDTypes"], [34, 1, 1, "", "SeriesDTypes"], [34, 1, 1, "", "Union"], [34, 1, 1, "", "all_scalars"], [34, 1, 1, "", "annotations"], [34, 1, 1, "", "bigint"], [34, 1, 1, "", "bitType"], [34, 1, 1, "", "bool_"], [34, 1, 1, "", "bool_scalars"], [34, 5, 1, "", "cast"], [34, 1, 1, "", "complex128"], [34, 1, 1, "", "complex64"], [34, 5, 1, "", "dtype"], [34, 1, 1, "", "float16"], [34, 1, 1, "", "float32"], [34, 1, 1, "", "float64"], [34, 1, 1, "", "float_scalars"], [34, 5, 1, "", "get_byteorder"], [34, 5, 1, "", "get_server_byteorder"], [34, 1, 1, "", "int16"], [34, 1, 1, "", "int32"], [34, 1, 1, "", "int64"], [34, 1, 1, "", "int8"], [34, 1, 1, "", "intTypes"], [34, 1, 1, "", "int_scalars"], [34, 5, 1, "", "isSupportedFloat"], [34, 5, 1, "", "isSupportedInt"], [34, 5, 1, "", "isSupportedNumber"], [34, 1, 1, "", "numeric_and_bool_scalars"], [34, 1, 1, "", "numeric_scalars"], [34, 1, 1, "", "numpy_scalars"], [34, 5, 1, "", "resolve_scalar_dtype"], [34, 1, 1, "", "str_"], [34, 1, 1, "", "str_scalars"], [34, 1, 1, "", "uint16"], [34, 1, 1, "", "uint32"], [34, 1, 1, "", "uint64"], [34, 1, 1, "", "uint8"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES": [[34, 2, 1, "", "copy"], [34, 2, 1, "", "difference"], [34, 2, 1, "", "intersection"], [34, 2, 1, "", "isdisjoint"], [34, 2, 1, "", "issubset"], [34, 2, 1, "", "issuperset"], [34, 2, 1, "", "symmetric_difference"], [34, 2, 1, "", "union"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS": [[34, 2, 1, "", "count"], [34, 2, 1, "", "index"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS": [[34, 2, 1, "", "count"], [34, 2, 1, "", "index"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS": [[34, 2, 1, "", "count"], [34, 2, 1, "", "index"]], "arkouda.numpy.dtypes.DType": [[34, 2, 1, "", "BIGINT"], [34, 2, 1, "", "BOOL"], [34, 2, 1, "", "COMPLEX128"], [34, 2, 1, "", "COMPLEX64"], [34, 2, 1, "", "FLOAT"], [34, 2, 1, "", "FLOAT32"], [34, 2, 1, "", "FLOAT64"], [34, 2, 1, "", "INT"], [34, 2, 1, "", "INT16"], [34, 2, 1, "", "INT32"], [34, 2, 1, "", "INT64"], [34, 2, 1, "", "INT8"], [34, 2, 1, "", "STR"], [34, 2, 1, "", "UINT"], [34, 2, 1, "", "UINT16"], [34, 2, 1, "", "UINT32"], [34, 2, 1, "", "UINT64"], [34, 2, 1, "", "UINT8"], [34, 2, 1, "", "name"], [34, 2, 1, "", "value"]], "arkouda.numpy.dtypes.DTypeObjects": [[34, 2, 1, "", "copy"], [34, 2, 1, "", "difference"], [34, 2, 1, "", "intersection"], [34, 2, 1, "", "isdisjoint"], [34, 2, 1, "", "issubset"], [34, 2, 1, "", "issuperset"], [34, 2, 1, "", "symmetric_difference"], [34, 2, 1, "", "union"]], "arkouda.numpy.dtypes.DTypes": [[34, 2, 1, "", "copy"], [34, 2, 1, "", "difference"], [34, 2, 1, "", "intersection"], [34, 2, 1, "", "isdisjoint"], [34, 2, 1, "", "issubset"], [34, 2, 1, "", "issuperset"], [34, 2, 1, "", "symmetric_difference"], [34, 2, 1, "", "union"]], "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS": [[34, 2, 1, "", "clear"], [34, 2, 1, "", "copy"], [34, 2, 1, "", "fromkeys"], [34, 2, 1, "", "get"], [34, 2, 1, "", "items"], [34, 2, 1, "", "keys"], [34, 2, 1, "", "pop"], [34, 2, 1, "", "popitem"], [34, 2, 1, "", "setdefault"], [34, 2, 1, "", "update"], [34, 2, 1, "", "values"]], "arkouda.numpy.dtypes.NumericDTypes": [[34, 2, 1, "", "copy"], [34, 2, 1, "", "difference"], [34, 2, 1, "", "intersection"], [34, 2, 1, "", "isdisjoint"], [34, 2, 1, "", "issubset"], [34, 2, 1, "", "issuperset"], [34, 2, 1, "", "symmetric_difference"], [34, 2, 1, "", "union"]], "arkouda.numpy.dtypes.ScalarDTypes": [[34, 2, 1, "", "copy"], [34, 2, 1, "", "difference"], [34, 2, 1, "", "intersection"], [34, 2, 1, "", "isdisjoint"], [34, 2, 1, "", "issubset"], [34, 2, 1, "", "issuperset"], [34, 2, 1, "", "symmetric_difference"], [34, 2, 1, "", "union"]], "arkouda.numpy.dtypes.SeriesDTypes": [[34, 2, 1, "", "clear"], [34, 2, 1, "", "copy"], [34, 2, 1, "", "fromkeys"], [34, 2, 1, "", "get"], [34, 2, 1, "", "items"], [34, 2, 1, "", "keys"], [34, 2, 1, "", "pop"], [34, 2, 1, "", "popitem"], [34, 2, 1, "", "setdefault"], [34, 2, 1, "", "update"], [34, 2, 1, "", "values"]], "arkouda.numpy.dtypes.annotations": [[34, 2, 1, "", "compiler_flag"], [34, 2, 1, "", "getMandatoryRelease"], [34, 2, 1, "", "getOptionalRelease"], [34, 2, 1, "", "mandatory"], [34, 2, 1, "", "optional"]], "arkouda.numpy.dtypes.bigint": [[34, 2, 1, "", "itemsize"], [34, 2, 1, "", "name"], [34, 2, 1, "", "ndim"], [34, 2, 1, "", "shape"], [34, 2, 1, "", "type"]], "arkouda.numpy.dtypes.bitType": [[34, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.float16": [[34, 2, 1, "", "as_integer_ratio"], [34, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes.float32": [[34, 2, 1, "", "as_integer_ratio"], [34, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes.float64": [[34, 2, 1, "", "as_integer_ratio"], [34, 2, 1, "", "fromhex"], [34, 2, 1, "", "hex"], [34, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes.int16": [[34, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.int32": [[34, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.int64": [[34, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.int8": [[34, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.intTypes": [[34, 2, 1, "", "copy"], [34, 2, 1, "", "difference"], [34, 2, 1, "", "intersection"], [34, 2, 1, "", "isdisjoint"], [34, 2, 1, "", "issubset"], [34, 2, 1, "", "issuperset"], [34, 2, 1, "", "symmetric_difference"], [34, 2, 1, "", "union"]], "arkouda.numpy.dtypes.str_": [[34, 2, 1, "", "T"], [34, 2, 1, "", "all"], [34, 2, 1, "", "any"], [34, 2, 1, "", "argmax"], [34, 2, 1, "", "argmin"], [34, 2, 1, "", "argsort"], [34, 2, 1, "", "astype"], [34, 2, 1, "", "base"], [34, 2, 1, "", "byteswap"], [34, 2, 1, "", "choose"], [34, 2, 1, "", "clip"], [34, 2, 1, "", "compress"], [34, 2, 1, "", "conj"], [34, 2, 1, "", "conjugate"], [34, 2, 1, "", "copy"], [34, 2, 1, "", "cumprod"], [34, 2, 1, "", "cumsum"], [34, 2, 1, "", "data"], [34, 2, 1, "", "diagonal"], [34, 2, 1, "", "dtype"], [34, 2, 1, "", "dump"], [34, 2, 1, "", "dumps"], [34, 2, 1, "", "fill"], [34, 2, 1, "", "flags"], [34, 2, 1, "", "flat"], [34, 2, 1, "", "flatten"], [34, 2, 1, "", "getfield"], [34, 2, 1, "", "imag"], [34, 2, 1, "", "item"], [34, 2, 1, "", "itemset"], [34, 2, 1, "", "itemsize"], [34, 2, 1, "", "max"], [34, 2, 1, "", "mean"], [34, 2, 1, "", "min"], [34, 2, 1, "", "nbytes"], [34, 2, 1, "", "ndim"], [34, 2, 1, "", "newbyteorder"], [34, 2, 1, "", "nonzero"], [34, 2, 1, "", "prod"], [34, 2, 1, "", "ptp"], [34, 2, 1, "", "put"], [34, 2, 1, "", "ravel"], [34, 2, 1, "", "real"], [34, 2, 1, "", "repeat"], [34, 2, 1, "", "reshape"], [34, 2, 1, "", "resize"], [34, 2, 1, "", "round"], [34, 2, 1, "", "searchsorted"], [34, 2, 1, "", "setfield"], [34, 2, 1, "", "setflags"], [34, 2, 1, "", "shape"], [34, 2, 1, "", "size"], [34, 2, 1, "", "sort"], [34, 2, 1, "", "squeeze"], [34, 2, 1, "", "std"], [34, 2, 1, "", "strides"], [34, 2, 1, "", "sum"], [34, 2, 1, "", "swapaxes"], [34, 2, 1, "", "take"], [34, 2, 1, "", "tobytes"], [34, 2, 1, "", "tofile"], [34, 2, 1, "", "tolist"], [34, 2, 1, "", "tostring"], [34, 2, 1, "", "trace"], [34, 2, 1, "", "transpose"], [34, 2, 1, "", "var"], [34, 2, 1, "", "view"]], "arkouda.numpy.dtypes.uint16": [[34, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.uint32": [[34, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.uint64": [[34, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.uint8": [[34, 2, 1, "", "bit_count"]], "arkouda.numpy.finfo": [[35, 4, 1, "", "bits"], [35, 4, 1, "", "dtype"], [35, 4, 1, "", "eps"], [35, 4, 1, "", "epsneg"], [35, 4, 1, "", "iexp"], [35, 4, 1, "", "machep"], [35, 4, 1, "", "max"], [35, 4, 1, "", "maxexp"], [35, 4, 1, "", "min"], [35, 4, 1, "", "minexp"], [35, 4, 1, "", "negep"], [35, 4, 1, "", "nexp"], [35, 4, 1, "", "nmant"], [35, 4, 1, "", "precision"], [35, 4, 1, "", "resolution"], [35, 6, 1, "id0", "smallest_normal"], [35, 4, 1, "", "smallest_subnormal"], [35, 6, 1, "id11", "tiny"]], "arkouda.numpy.float16": [[35, 2, 1, "", "as_integer_ratio"], [35, 2, 1, "", "is_integer"]], "arkouda.numpy.float32": [[35, 2, 1, "", "as_integer_ratio"], [35, 2, 1, "", "is_integer"]], "arkouda.numpy.float64": [[35, 2, 1, "", "as_integer_ratio"], [35, 2, 1, "", "fromhex"], [35, 2, 1, "", "hex"], [35, 2, 1, "", "is_integer"]], "arkouda.numpy.float_": [[35, 2, 1, "", "as_integer_ratio"], [35, 2, 1, "", "fromhex"], [35, 2, 1, "", "hex"], [35, 2, 1, "", "is_integer"]], "arkouda.numpy.format_parser": [[35, 4, 1, "", "dtype"]], "arkouda.numpy.half": [[35, 2, 1, "", "as_integer_ratio"], [35, 2, 1, "", "is_integer"]], "arkouda.numpy.iinfo": [[35, 4, 1, "", "bits"], [35, 4, 1, "", "dtype"], [35, 6, 1, "id12", "max"], [35, 6, 1, "id13", "min"]], "arkouda.numpy.int16": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.int32": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.int64": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.int8": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.intTypes": [[35, 2, 1, "", "copy"], [35, 2, 1, "", "difference"], [35, 2, 1, "", "intersection"], [35, 2, 1, "", "isdisjoint"], [35, 2, 1, "", "issubset"], [35, 2, 1, "", "issuperset"], [35, 2, 1, "", "symmetric_difference"], [35, 2, 1, "", "union"]], "arkouda.numpy.int_": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.intc": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.integer": [[35, 2, 1, "", "denominator"], [35, 2, 1, "", "is_integer"], [35, 2, 1, "", "numerator"]], "arkouda.numpy.intp": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.longdouble": [[35, 2, 1, "", "as_integer_ratio"], [35, 2, 1, "", "is_integer"]], "arkouda.numpy.longfloat": [[35, 2, 1, "", "as_integer_ratio"], [35, 2, 1, "", "is_integer"]], "arkouda.numpy.longlong": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.sctypeDict": [[35, 2, 1, "", "clear"], [35, 2, 1, "", "copy"], [35, 2, 1, "", "fromkeys"], [35, 2, 1, "", "get"], [35, 2, 1, "", "items"], [35, 2, 1, "", "keys"], [35, 2, 1, "", "pop"], [35, 2, 1, "", "popitem"], [35, 2, 1, "", "setdefault"], [35, 2, 1, "", "update"], [35, 2, 1, "", "values"]], "arkouda.numpy.sctypes": [[35, 2, 1, "", "clear"], [35, 2, 1, "", "copy"], [35, 2, 1, "", "fromkeys"], [35, 2, 1, "", "get"], [35, 2, 1, "", "items"], [35, 2, 1, "", "keys"], [35, 2, 1, "", "pop"], [35, 2, 1, "", "popitem"], [35, 2, 1, "", "setdefault"], [35, 2, 1, "", "update"], [35, 2, 1, "", "values"]], "arkouda.numpy.short": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.single": [[35, 2, 1, "", "as_integer_ratio"], [35, 2, 1, "", "is_integer"]], "arkouda.numpy.str_": [[35, 2, 1, "", "T"], [35, 2, 1, "", "all"], [35, 2, 1, "", "any"], [35, 2, 1, "", "argmax"], [35, 2, 1, "", "argmin"], [35, 2, 1, "", "argsort"], [35, 2, 1, "", "astype"], [35, 2, 1, "", "base"], [35, 2, 1, "", "byteswap"], [35, 2, 1, "", "choose"], [35, 2, 1, "", "clip"], [35, 2, 1, "", "compress"], [35, 2, 1, "", "conj"], [35, 2, 1, "", "conjugate"], [35, 2, 1, "", "copy"], [35, 2, 1, "", "cumprod"], [35, 2, 1, "", "cumsum"], [35, 2, 1, "", "data"], [35, 2, 1, "", "diagonal"], [35, 2, 1, "", "dtype"], [35, 2, 1, "", "dump"], [35, 2, 1, "", "dumps"], [35, 2, 1, "", "fill"], [35, 2, 1, "", "flags"], [35, 2, 1, "", "flat"], [35, 2, 1, "", "flatten"], [35, 2, 1, "", "getfield"], [35, 2, 1, "", "imag"], [35, 2, 1, "", "item"], [35, 2, 1, "", "itemset"], [35, 2, 1, "", "itemsize"], [35, 2, 1, "", "max"], [35, 2, 1, "", "mean"], [35, 2, 1, "", "min"], [35, 2, 1, "", "nbytes"], [35, 2, 1, "", "ndim"], [35, 2, 1, "", "newbyteorder"], [35, 2, 1, "", "nonzero"], [35, 2, 1, "", "prod"], [35, 2, 1, "", "ptp"], [35, 2, 1, "", "put"], [35, 2, 1, "", "ravel"], [35, 2, 1, "", "real"], [35, 2, 1, "", "repeat"], [35, 2, 1, "", "reshape"], [35, 2, 1, "", "resize"], [35, 2, 1, "", "round"], [35, 2, 1, "", "searchsorted"], [35, 2, 1, "", "setfield"], [35, 2, 1, "", "setflags"], [35, 2, 1, "", "shape"], [35, 2, 1, "", "size"], [35, 2, 1, "", "sort"], [35, 2, 1, "", "squeeze"], [35, 2, 1, "", "std"], [35, 2, 1, "", "strides"], [35, 2, 1, "", "sum"], [35, 2, 1, "", "swapaxes"], [35, 2, 1, "", "take"], [35, 2, 1, "", "tobytes"], [35, 2, 1, "", "tofile"], [35, 2, 1, "", "tolist"], [35, 2, 1, "", "tostring"], [35, 2, 1, "", "trace"], [35, 2, 1, "", "transpose"], [35, 2, 1, "", "var"], [35, 2, 1, "", "view"]], "arkouda.numpy.ubyte": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.uint": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.uint16": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.uint32": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.uint64": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.uint8": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.uintc": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.uintp": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.ulonglong": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.ushort": [[35, 2, 1, "", "bit_count"]], "arkouda.pdarray": [[24, 4, 1, "id1205", "BinOps"], [24, 4, 1, "id1206", "OpEqOps"], [92, 2, 1, "", "all"], [92, 2, 1, "", "any"], [92, 2, 1, "", "argmax"], [92, 2, 1, "", "argmaxk"], [92, 2, 1, "", "argmin"], [92, 2, 1, "", "argmink"], [24, 2, 1, "id1213", "astype"], [24, 2, 1, "id1214", "attach"], [24, 2, 1, "id1215", "bigint_to_uint_arrays"], [24, 2, 1, "id1216", "clz"], [24, 2, 1, "id1217", "corr"], [24, 2, 1, "id1218", "cov"], [24, 2, 1, "id1219", "ctz"], [94, 4, 1, "", "dtype"], [24, 2, 1, "id1221", "equals"], [24, 2, 1, "id1222", "fill"], [24, 2, 1, "id1223", "format_other"], [24, 6, 1, "id1224", "inferred_type"], [24, 2, 1, "id1225", "info"], [24, 2, 1, "id1226", "is_registered"], [92, 2, 1, "", "is_sorted"], [94, 4, 1, "", "itemsize"], [92, 2, 1, "", "max"], [24, 6, 1, "id1230", "max_bits"], [92, 2, 1, "", "maxk"], [92, 2, 1, "", "mean"], [92, 2, 1, "", "min"], [92, 2, 1, "", "mink"], [94, 4, 1, "", "name"], [24, 6, 1, "id1236", "nbytes"], [94, 4, 1, "", "ndim"], [24, 4, 1, "id1238", "objType"], [24, 2, 1, "id1239", "opeq"], [24, 2, 1, "id1240", "parity"], [24, 2, 1, "id1241", "popcount"], [24, 2, 1, "id1242", "pretty_print_info"], [92, 2, 1, "", "prod"], [24, 2, 1, "id1244", "register"], [24, 4, 1, "id1245", "registered_name"], [24, 2, 1, "id1246", "reshape"], [24, 2, 1, "id1247", "rotl"], [24, 2, 1, "id1248", "rotr"], [24, 2, 1, "id1249", "save"], [94, 4, 1, "", "shape"], [94, 4, 1, "", "size"], [24, 2, 1, "id1252", "slice_bits"], [92, 2, 1, "", "std"], [92, 2, 1, "", "sum"], [24, 2, 1, "id1255", "to_csv"], [24, 2, 1, "id1258", "to_cuda"], [24, 2, 1, "id1259", "to_hdf"], [24, 2, 1, "id1260", "to_list"], [94, 5, 1, "", "to_ndarray"], [24, 2, 1, "id1262", "to_parquet"], [24, 2, 1, "id1263", "transfer"], [24, 2, 1, "id1264", "unregister"], [24, 2, 1, "id1265", "update_hdf"], [24, 2, 1, "id1266", "value_counts"], [92, 2, 1, "", "var"]], "arkouda.pdarrayclass": [[36, 7, 1, "", "RegistrationError"], [36, 5, 1, "", "all"], [36, 5, 1, "", "any"], [36, 5, 1, "", "argmax"], [36, 5, 1, "", "argmaxk"], [36, 5, 1, "", "argmin"], [36, 5, 1, "", "argmink"], [36, 5, 1, "", "attach_pdarray"], [36, 5, 1, "", "broadcast_to_shape"], [36, 5, 1, "", "clear"], [36, 5, 1, "", "clz"], [36, 5, 1, "", "corr"], [36, 5, 1, "", "cov"], [36, 5, 1, "", "ctz"], [36, 5, 1, "", "divmod"], [36, 5, 1, "", "dot"], [36, 5, 1, "", "fmod"], [36, 5, 1, "", "is_sorted"], [36, 5, 1, "", "max"], [36, 5, 1, "", "maxk"], [36, 5, 1, "", "mean"], [36, 5, 1, "", "min"], [36, 5, 1, "", "mink"], [36, 5, 1, "", "mod"], [36, 5, 1, "", "parity"], [36, 1, 1, "", "pdarray"], [36, 5, 1, "", "popcount"], [36, 5, 1, "", "power"], [36, 5, 1, "", "prod"], [36, 5, 1, "", "rotl"], [36, 5, 1, "", "rotr"], [36, 5, 1, "", "sqrt"], [36, 5, 1, "", "std"], [36, 5, 1, "", "sum"], [36, 5, 1, "", "unregister_pdarray_by_name"], [36, 5, 1, "", "var"]], "arkouda.pdarrayclass.pdarray": [[36, 4, 1, "", "BinOps"], [36, 4, 1, "", "OpEqOps"], [36, 2, 1, "", "all"], [36, 2, 1, "", "any"], [36, 2, 1, "", "argmax"], [36, 2, 1, "", "argmaxk"], [36, 2, 1, "", "argmin"], [36, 2, 1, "", "argmink"], [36, 2, 1, "", "astype"], [36, 2, 1, "", "attach"], [36, 2, 1, "", "bigint_to_uint_arrays"], [36, 2, 1, "", "clz"], [36, 2, 1, "", "corr"], [36, 2, 1, "", "cov"], [36, 2, 1, "", "ctz"], [36, 4, 1, "id0", "dtype"], [36, 2, 1, "", "equals"], [36, 2, 1, "", "fill"], [36, 2, 1, "", "format_other"], [36, 6, 1, "", "inferred_type"], [36, 2, 1, "", "info"], [36, 2, 1, "", "is_registered"], [36, 2, 1, "", "is_sorted"], [36, 4, 1, "id1", "itemsize"], [36, 2, 1, "", "max"], [36, 6, 1, "", "max_bits"], [36, 2, 1, "", "maxk"], [36, 2, 1, "", "mean"], [36, 2, 1, "", "min"], [36, 2, 1, "", "mink"], [36, 4, 1, "id2", "name"], [36, 6, 1, "", "nbytes"], [36, 4, 1, "id3", "ndim"], [36, 4, 1, "", "objType"], [36, 2, 1, "", "opeq"], [36, 2, 1, "", "parity"], [36, 2, 1, "", "popcount"], [36, 2, 1, "", "pretty_print_info"], [36, 2, 1, "", "prod"], [36, 2, 1, "", "register"], [36, 4, 1, "", "registered_name"], [36, 2, 1, "", "reshape"], [36, 2, 1, "", "rotl"], [36, 2, 1, "", "rotr"], [36, 2, 1, "", "save"], [36, 4, 1, "id4", "shape"], [36, 4, 1, "id5", "size"], [36, 2, 1, "", "slice_bits"], [36, 2, 1, "", "std"], [36, 2, 1, "", "sum"], [36, 2, 1, "", "to_csv"], [36, 2, 1, "", "to_cuda"], [36, 2, 1, "", "to_hdf"], [36, 2, 1, "", "to_list"], [36, 2, 1, "", "to_ndarray"], [36, 2, 1, "", "to_parquet"], [36, 2, 1, "", "transfer"], [36, 2, 1, "", "unregister"], [36, 2, 1, "", "update_hdf"], [36, 2, 1, "", "value_counts"], [36, 2, 1, "", "var"]], "arkouda.pdarraycreation": [[37, 5, 1, "", "arange"], [37, 5, 1, "", "array"], [37, 5, 1, "", "bigint_from_uint_arrays"], [37, 5, 1, "", "from_series"], [37, 5, 1, "", "full"], [37, 5, 1, "", "full_like"], [37, 5, 1, "", "linspace"], [37, 5, 1, "", "ones"], [37, 5, 1, "", "ones_like"], [37, 5, 1, "", "promote_to_common_dtype"], [37, 5, 1, "", "randint"], [37, 5, 1, "", "random_strings_lognormal"], [37, 5, 1, "", "random_strings_uniform"], [37, 5, 1, "", "scalar_array"], [37, 5, 1, "", "standard_normal"], [37, 5, 1, "", "uniform"], [37, 5, 1, "", "zeros"], [37, 5, 1, "", "zeros_like"]], "arkouda.pdarraymanipulation": [[38, 5, 1, "", "delete"], [38, 5, 1, "", "vstack"]], "arkouda.pdarraysetops": [[39, 5, 1, "", "concatenate"], [39, 5, 1, "", "in1d"], [39, 5, 1, "", "indexof1d"], [39, 5, 1, "", "intersect1d"], [39, 5, 1, "", "setdiff1d"], [39, 5, 1, "", "setxor1d"], [39, 5, 1, "", "union1d"]], "arkouda.plotting": [[40, 5, 1, "", "hist_all"], [40, 5, 1, "", "plot_dist"]], "arkouda.random": [[95, 1, 1, "", "Generator"], [95, 5, 1, "", "default_rng"], [41, 5, 1, "", "randint"], [41, 5, 1, "", "standard_normal"], [41, 5, 1, "", "uniform"]], "arkouda.random.Generator": [[95, 5, 1, "", "choice"], [95, 5, 1, "", "exponential"], [95, 5, 1, "", "integers"], [95, 5, 1, "", "logistic"], [95, 5, 1, "", "lognormal"], [95, 5, 1, "", "normal"], [95, 5, 1, "", "permutation"], [95, 5, 1, "", "poisson"], [95, 5, 1, "", "random"], [95, 5, 1, "", "shuffle"], [95, 5, 1, "", "standard_exponential"], [95, 5, 1, "", "standard_normal"], [95, 5, 1, "", "uniform"]], "arkouda.row": [[42, 1, 1, "", "Row"]], "arkouda.scipy": [[43, 1, 1, "", "Power_divergenceResult"], [43, 5, 1, "", "chisquare"], [43, 5, 1, "", "power_divergence"], [44, 0, 0, "-", "special"], [45, 0, 0, "-", "stats"]], "arkouda.scipy.Power_divergenceResult": [[43, 4, 1, "", "pvalue"], [43, 4, 1, "", "statistic"]], "arkouda.scipy.special": [[44, 5, 1, "", "xlogy"]], "arkouda.scipy.stats": [[45, 1, 1, "", "chi2"]], "arkouda.scipy.stats.chi2": [[45, 2, 1, "", "a"], [45, 2, 1, "", "b"], [45, 2, 1, "", "badvalue"], [45, 2, 1, "", "generic_moment"], [45, 2, 1, "", "moment_type"], [45, 2, 1, "", "name"], [45, 2, 1, "", "numargs"], [45, 2, 1, "", "shapes"], [45, 2, 1, "", "vecentropy"], [45, 2, 1, "", "xtol"]], "arkouda.sctypeDict": [[24, 2, 1, "", "clear"], [24, 2, 1, "", "copy"], [24, 2, 1, "", "fromkeys"], [24, 2, 1, "", "get"], [24, 2, 1, "", "items"], [24, 2, 1, "", "keys"], [24, 2, 1, "", "pop"], [24, 2, 1, "", "popitem"], [24, 2, 1, "", "setdefault"], [24, 2, 1, "", "update"], [24, 2, 1, "", "values"]], "arkouda.sctypes": [[24, 2, 1, "", "clear"], [24, 2, 1, "", "copy"], [24, 2, 1, "", "fromkeys"], [24, 2, 1, "", "get"], [24, 2, 1, "", "items"], [24, 2, 1, "", "keys"], [24, 2, 1, "", "pop"], [24, 2, 1, "", "popitem"], [24, 2, 1, "", "setdefault"], [24, 2, 1, "", "update"], [24, 2, 1, "", "values"]], "arkouda.security": [[46, 5, 1, "", "generate_token"], [46, 5, 1, "", "generate_username_token_json"], [46, 5, 1, "", "get_arkouda_client_directory"], [46, 5, 1, "", "get_home_directory"], [46, 5, 1, "", "get_username"], [46, 3, 1, "", "username_tokenizer"]], "arkouda.segarray": [[47, 3, 1, "", "LEN_SUFFIX"], [47, 3, 1, "", "SEG_SUFFIX"], [47, 1, 1, "", "SegArray"], [47, 3, 1, "", "VAL_SUFFIX"], [47, 5, 1, "", "segarray"]], "arkouda.segarray.SegArray": [[47, 2, 1, "", "AND"], [47, 2, 1, "", "OR"], [47, 2, 1, "", "XOR"], [47, 2, 1, "", "aggregate"], [47, 2, 1, "", "all"], [47, 2, 1, "", "any"], [47, 2, 1, "", "append"], [47, 2, 1, "", "append_single"], [47, 2, 1, "", "argmax"], [47, 2, 1, "", "argmin"], [47, 2, 1, "", "attach"], [47, 2, 1, "", "concat"], [47, 2, 1, "", "copy"], [47, 4, 1, "", "dtype"], [47, 2, 1, "", "filter"], [47, 2, 1, "", "from_multi_array"], [47, 2, 1, "", "from_parts"], [47, 2, 1, "", "from_return_msg"], [47, 2, 1, "", "get_jth"], [47, 2, 1, "", "get_length_n"], [47, 2, 1, "", "get_ngrams"], [47, 2, 1, "", "get_prefixes"], [47, 2, 1, "", "get_suffixes"], [47, 6, 1, "", "grouping"], [47, 2, 1, "", "hash"], [47, 2, 1, "", "intersect"], [47, 2, 1, "", "is_registered"], [47, 2, 1, "", "load"], [47, 4, 1, "", "logger"], [47, 2, 1, "", "max"], [47, 2, 1, "", "mean"], [47, 2, 1, "", "min"], [47, 6, 1, "", "nbytes"], [47, 6, 1, "", "non_empty"], [47, 2, 1, "", "nunique"], [47, 4, 1, "", "objType"], [47, 2, 1, "", "prepend_single"], [47, 2, 1, "", "prod"], [47, 2, 1, "", "read_hdf"], [47, 2, 1, "", "register"], [47, 4, 1, "", "registered_name"], [47, 2, 1, "", "remove_repeats"], [47, 2, 1, "", "save"], [47, 4, 1, "", "segments"], [47, 2, 1, "", "set_jth"], [47, 2, 1, "", "setdiff"], [47, 2, 1, "", "setxor"], [47, 4, 1, "", "size"], [47, 2, 1, "", "sum"], [47, 2, 1, "", "to_hdf"], [47, 2, 1, "", "to_list"], [47, 2, 1, "", "to_ndarray"], [47, 2, 1, "", "to_parquet"], [47, 2, 1, "", "transfer"], [47, 2, 1, "", "union"], [47, 2, 1, "", "unique"], [47, 2, 1, "", "unregister"], [47, 2, 1, "", "unregister_segarray_by_name"], [47, 2, 1, "", "update_hdf"], [47, 4, 1, "", "valsize"], [47, 4, 1, "", "values"]], "arkouda.series": [[48, 1, 1, "", "Series"]], "arkouda.series.Series": [[48, 2, 1, "", "add"], [48, 2, 1, "", "argmax"], [48, 2, 1, "", "argmin"], [48, 6, 1, "", "at"], [48, 2, 1, "", "attach"], [48, 2, 1, "", "concat"], [48, 2, 1, "", "diff"], [48, 2, 1, "", "dt"], [48, 6, 1, "", "dtype"], [48, 2, 1, "", "fillna"], [48, 2, 1, "", "from_return_msg"], [48, 2, 1, "", "has_repeat_labels"], [48, 2, 1, "", "hasnans"], [48, 2, 1, "", "head"], [48, 6, 1, "", "iat"], [48, 6, 1, "", "iloc"], [48, 2, 1, "", "is_registered"], [48, 2, 1, "", "isin"], [48, 2, 1, "", "isna"], [48, 2, 1, "", "isnull"], [48, 6, 1, "", "loc"], [48, 2, 1, "", "locate"], [48, 2, 1, "", "map"], [48, 2, 1, "", "max"], [48, 2, 1, "", "mean"], [48, 2, 1, "", "memory_usage"], [48, 2, 1, "", "min"], [48, 6, 1, "", "ndim"], [48, 2, 1, "", "notna"], [48, 2, 1, "", "notnull"], [48, 2, 1, "", "objType"], [48, 2, 1, "", "pdconcat"], [48, 2, 1, "", "prod"], [48, 2, 1, "", "register"], [48, 6, 1, "", "shape"], [48, 2, 1, "", "sort_index"], [48, 2, 1, "", "sort_values"], [48, 2, 1, "", "std"], [48, 2, 1, "", "str_acc"], [48, 2, 1, "", "sum"], [48, 2, 1, "", "tail"], [48, 2, 1, "", "to_dataframe"], [48, 2, 1, "", "to_list"], [48, 2, 1, "", "to_markdown"], [48, 2, 1, "", "to_ndarray"], [48, 2, 1, "", "to_pandas"], [48, 2, 1, "", "topn"], [48, 2, 1, "", "unregister"], [48, 2, 1, "", "validate_key"], [48, 2, 1, "", "validate_val"], [48, 2, 1, "", "value_counts"], [48, 2, 1, "", "var"]], "arkouda.short": [[24, 2, 1, "", "bit_count"]], "arkouda.single": [[24, 2, 1, "", "as_integer_ratio"], [24, 2, 1, "", "is_integer"]], "arkouda.sorting": [[49, 5, 1, "", "argsort"], [49, 5, 1, "", "coargsort"], [49, 5, 1, "", "sort"]], "arkouda.sparrayclass": [[50, 5, 1, "", "create_sparray"], [50, 3, 1, "", "logger"], [50, 1, 1, "", "sparray"]], "arkouda.sparrayclass.sparray": [[50, 4, 1, "id0", "dtype"], [50, 4, 1, "id1", "itemsize"], [50, 4, 1, "id2", "layout"], [50, 4, 1, "id3", "name"], [50, 4, 1, "id4", "ndim"], [50, 4, 1, "", "nnz"], [50, 4, 1, "id5", "shape"], [50, 4, 1, "id6", "size"]], "arkouda.sparsematrix": [[51, 5, 1, "", "random_sparse_matrix"], [51, 5, 1, "", "sparse_matrix_matrix_mult"]], "arkouda.str_": [[24, 2, 1, "id1275", "T"], [24, 2, 1, "id1276", "all"], [24, 2, 1, "id1277", "any"], [24, 2, 1, "id1278", "argmax"], [24, 2, 1, "id1279", "argmin"], [24, 2, 1, "id1280", "argsort"], [24, 2, 1, "id1281", "astype"], [24, 2, 1, "id1282", "base"], [24, 2, 1, "id1283", "byteswap"], [24, 2, 1, "id1284", "choose"], [24, 2, 1, "id1285", "clip"], [24, 2, 1, "id1286", "compress"], [24, 2, 1, "id1287", "conj"], [24, 2, 1, "id1288", "conjugate"], [24, 2, 1, "id1289", "copy"], [24, 2, 1, "id1290", "cumprod"], [24, 2, 1, "id1291", "cumsum"], [24, 2, 1, "id1292", "data"], [24, 2, 1, "id1293", "diagonal"], [24, 2, 1, "id1294", "dtype"], [24, 2, 1, "id1295", "dump"], [24, 2, 1, "id1296", "dumps"], [24, 2, 1, "id1297", "fill"], [24, 2, 1, "id1298", "flags"], [24, 2, 1, "id1299", "flat"], [24, 2, 1, "id1300", "flatten"], [24, 2, 1, "id1301", "getfield"], [24, 2, 1, "id1302", "imag"], [24, 2, 1, "id1303", "item"], [24, 2, 1, "id1304", "itemset"], [24, 2, 1, "id1305", "itemsize"], [24, 2, 1, "id1306", "max"], [24, 2, 1, "id1307", "mean"], [24, 2, 1, "id1308", "min"], [24, 2, 1, "id1309", "nbytes"], [24, 2, 1, "id1310", "ndim"], [24, 2, 1, "id1311", "newbyteorder"], [24, 2, 1, "id1312", "nonzero"], [24, 2, 1, "id1313", "prod"], [24, 2, 1, "id1314", "ptp"], [24, 2, 1, "id1315", "put"], [24, 2, 1, "id1316", "ravel"], [24, 2, 1, "id1317", "real"], [24, 2, 1, "id1318", "repeat"], [24, 2, 1, "id1319", "reshape"], [24, 2, 1, "id1320", "resize"], [24, 2, 1, "id1321", "round"], [24, 2, 1, "id1322", "searchsorted"], [24, 2, 1, "id1323", "setfield"], [24, 2, 1, "id1324", "setflags"], [24, 2, 1, "id1325", "shape"], [24, 2, 1, "id1326", "size"], [24, 2, 1, "id1327", "sort"], [24, 2, 1, "id1328", "squeeze"], [24, 2, 1, "id1329", "std"], [24, 2, 1, "id1330", "strides"], [24, 2, 1, "id1331", "sum"], [24, 2, 1, "id1332", "swapaxes"], [24, 2, 1, "id1333", "take"], [24, 2, 1, "id1334", "tobytes"], [24, 2, 1, "id1335", "tofile"], [24, 2, 1, "id1336", "tolist"], [24, 2, 1, "id1337", "tostring"], [24, 2, 1, "id1338", "trace"], [24, 2, 1, "id1339", "transpose"], [24, 2, 1, "id1340", "var"], [24, 2, 1, "id1341", "view"]], "arkouda.strings": [[52, 1, 1, "", "Strings"]], "arkouda.strings.Strings": [[52, 4, 1, "", "BinOps"], [52, 2, 1, "", "astype"], [52, 2, 1, "", "attach"], [52, 2, 1, "", "cached_regex_patterns"], [52, 2, 1, "", "capitalize"], [52, 2, 1, "", "contains"], [52, 2, 1, "", "decode"], [52, 4, 1, "id0", "dtype"], [52, 2, 1, "", "encode"], [52, 2, 1, "", "endswith"], [52, 4, 1, "id1", "entry"], [52, 2, 1, "", "equals"], [52, 2, 1, "", "find_locations"], [52, 2, 1, "", "findall"], [52, 2, 1, "", "flatten"], [52, 2, 1, "", "from_parts"], [52, 2, 1, "", "from_return_msg"], [52, 2, 1, "", "fullmatch"], [52, 2, 1, "", "get_bytes"], [52, 2, 1, "", "get_lengths"], [52, 2, 1, "", "get_offsets"], [52, 2, 1, "", "get_prefixes"], [52, 2, 1, "", "get_suffixes"], [52, 2, 1, "", "group"], [52, 2, 1, "", "hash"], [52, 6, 1, "", "inferred_type"], [52, 2, 1, "", "info"], [52, 2, 1, "", "is_registered"], [52, 2, 1, "", "isalnum"], [52, 2, 1, "", "isalpha"], [52, 2, 1, "", "isdecimal"], [52, 2, 1, "", "isdigit"], [52, 2, 1, "", "isempty"], [52, 2, 1, "", "islower"], [52, 2, 1, "", "isspace"], [52, 2, 1, "", "istitle"], [52, 2, 1, "", "isupper"], [52, 4, 1, "id2", "logger"], [52, 2, 1, "", "lower"], [52, 2, 1, "", "lstick"], [52, 2, 1, "", "match"], [52, 4, 1, "", "nbytes"], [52, 4, 1, "", "ndim"], [52, 4, 1, "", "objType"], [52, 2, 1, "", "peel"], [52, 2, 1, "", "pretty_print_info"], [52, 2, 1, "", "purge_cached_regex_patterns"], [52, 2, 1, "", "register"], [52, 4, 1, "", "registered_name"], [52, 2, 1, "", "rpeel"], [52, 2, 1, "", "save"], [52, 2, 1, "", "search"], [52, 4, 1, "", "shape"], [52, 4, 1, "", "size"], [52, 2, 1, "", "split"], [52, 2, 1, "", "startswith"], [52, 2, 1, "", "stick"], [52, 2, 1, "", "strip"], [52, 2, 1, "", "sub"], [52, 2, 1, "", "subn"], [52, 2, 1, "", "title"], [52, 2, 1, "", "to_csv"], [52, 2, 1, "", "to_hdf"], [52, 2, 1, "", "to_list"], [52, 2, 1, "", "to_ndarray"], [52, 2, 1, "", "to_parquet"], [52, 2, 1, "", "transfer"], [52, 2, 1, "", "unregister"], [52, 2, 1, "", "unregister_strings_by_name"], [52, 2, 1, "", "update_hdf"], [52, 2, 1, "", "upper"]], "arkouda.testing": [[53, 5, 1, "", "assert_almost_equal"], [53, 5, 1, "", "assert_almost_equivalent"], [53, 5, 1, "", "assert_arkouda_array_equal"], [53, 5, 1, "", "assert_arkouda_array_equivalent"], [53, 5, 1, "", "assert_arkouda_pdarray_equal"], [53, 5, 1, "", "assert_arkouda_segarray_equal"], [53, 5, 1, "", "assert_arkouda_strings_equal"], [53, 5, 1, "", "assert_attr_equal"], [53, 5, 1, "", "assert_categorical_equal"], [53, 5, 1, "", "assert_class_equal"], [53, 5, 1, "", "assert_contains_all"], [53, 5, 1, "", "assert_copy"], [53, 5, 1, "", "assert_dict_equal"], [53, 5, 1, "", "assert_equal"], [53, 5, 1, "", "assert_equivalent"], [53, 5, 1, "", "assert_frame_equal"], [53, 5, 1, "", "assert_frame_equivalent"], [53, 5, 1, "", "assert_index_equal"], [53, 5, 1, "", "assert_index_equivalent"], [53, 5, 1, "", "assert_is_sorted"], [53, 5, 1, "", "assert_series_equal"], [53, 5, 1, "", "assert_series_equivalent"]], "arkouda.timeclass": [[54, 1, 1, "", "Datetime"], [54, 1, 1, "", "Timedelta"], [54, 5, 1, "", "date_range"], [54, 5, 1, "", "timedelta_range"]], "arkouda.timeclass.Datetime": [[54, 6, 1, "", "date"], [54, 6, 1, "", "day"], [54, 6, 1, "", "day_of_week"], [54, 6, 1, "", "day_of_year"], [54, 6, 1, "", "dayofweek"], [54, 6, 1, "", "dayofyear"], [54, 6, 1, "", "hour"], [54, 6, 1, "", "is_leap_year"], [54, 2, 1, "", "is_registered"], [54, 2, 1, "", "isocalendar"], [54, 6, 1, "", "microsecond"], [54, 6, 1, "", "millisecond"], [54, 6, 1, "", "minute"], [54, 6, 1, "", "month"], [54, 6, 1, "", "nanosecond"], [54, 2, 1, "", "register"], [54, 6, 1, "", "second"], [54, 4, 1, "", "special_objType"], [54, 2, 1, "", "sum"], [54, 4, 1, "", "supported_opeq"], [54, 4, 1, "", "supported_with_datetime"], [54, 4, 1, "", "supported_with_pdarray"], [54, 4, 1, "", "supported_with_r_datetime"], [54, 4, 1, "", "supported_with_r_pdarray"], [54, 4, 1, "", "supported_with_r_timedelta"], [54, 4, 1, "", "supported_with_timedelta"], [54, 2, 1, "", "to_pandas"], [54, 2, 1, "", "unregister"], [54, 6, 1, "", "week"], [54, 6, 1, "", "weekday"], [54, 6, 1, "", "weekofyear"], [54, 6, 1, "", "year"]], "arkouda.timeclass.Timedelta": [[54, 2, 1, "", "abs"], [54, 6, 1, "", "components"], [54, 6, 1, "", "days"], [54, 2, 1, "", "is_registered"], [54, 6, 1, "", "microseconds"], [54, 6, 1, "", "nanoseconds"], [54, 2, 1, "", "register"], [54, 6, 1, "", "seconds"], [54, 4, 1, "", "special_objType"], [54, 2, 1, "", "std"], [54, 2, 1, "", "sum"], [54, 4, 1, "", "supported_opeq"], [54, 4, 1, "", "supported_with_datetime"], [54, 4, 1, "", "supported_with_pdarray"], [54, 4, 1, "", "supported_with_r_datetime"], [54, 4, 1, "", "supported_with_r_pdarray"], [54, 4, 1, "", "supported_with_r_timedelta"], [54, 4, 1, "", "supported_with_timedelta"], [54, 2, 1, "", "to_pandas"], [54, 2, 1, "", "total_seconds"], [54, 2, 1, "", "unregister"]], "arkouda.ubyte": [[24, 2, 1, "", "bit_count"]], "arkouda.uint": [[24, 2, 1, "", "bit_count"]], "arkouda.uint16": [[24, 2, 1, "", "bit_count"]], "arkouda.uint32": [[24, 2, 1, "", "bit_count"]], "arkouda.uint64": [[24, 2, 1, "", "bit_count"]], "arkouda.uint8": [[24, 2, 1, "", "bit_count"]], "arkouda.uintc": [[24, 2, 1, "", "bit_count"]], "arkouda.uintp": [[24, 2, 1, "", "bit_count"]], "arkouda.ulonglong": [[24, 2, 1, "", "bit_count"]], "arkouda.ushort": [[24, 2, 1, "", "bit_count"]], "arkouda.util": [[55, 5, 1, "", "attach"], [55, 5, 1, "", "attach_all"], [55, 5, 1, "", "broadcast_dims"], [55, 5, 1, "", "concatenate"], [55, 5, 1, "", "convert_bytes"], [55, 5, 1, "", "convert_if_categorical"], [55, 5, 1, "", "enrich_inplace"], [55, 5, 1, "", "expand"], [55, 5, 1, "", "generic_concat"], [55, 5, 1, "", "get_callback"], [55, 5, 1, "", "identity"], [55, 5, 1, "", "invert_permutation"], [55, 5, 1, "", "is_float"], [55, 5, 1, "", "is_int"], [55, 5, 1, "", "is_numeric"], [55, 5, 1, "", "is_registered"], [55, 5, 1, "", "map"], [55, 5, 1, "", "most_common"], [55, 5, 1, "", "register"], [55, 5, 1, "", "register_all"], [55, 5, 1, "", "report_mem"], [55, 5, 1, "", "sparse_sum_help"], [55, 5, 1, "", "unregister"], [55, 5, 1, "", "unregister_all"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:attribute", "5": "py:function", "6": "py:property", "7": "py:exception"}, "terms": {"": [0, 1, 2, 3, 4, 7, 8, 11, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 33, 34, 35, 36, 41, 45, 46, 47, 48, 50, 52, 53, 54, 55, 57, 60, 61, 65, 74, 75, 76, 79, 80, 81, 83, 86, 88, 90, 91, 92, 94, 95, 96, 97, 99, 100], "0": [0, 3, 4, 5, 8, 11, 15, 17, 18, 20, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 65, 66, 67, 72, 75, 76, 78, 79, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "00": [20, 24, 35, 58], "00000000000000000": [20, 22, 24, 25, 33, 44, 55, 90, 91], "00000000000003": [22, 24, 91], "00012": [24, 35], "00018361238254747651": 58, "0001_0d4865d7c9453adc6af6409568da326845c358b9_20230406_165330": 58, "0002": 58, "0002090000002681336": 58, "0009575499998391024": 58, "001": 45, "0011": [24, 35], "001326192548940973": 58, "0014_31de39be8b19c76d073a8999def6673a305c250d_20230405_145759_uncommit": 58, "0015_31de39be8b19c76d073a8999def6673a305c250d_20230405_145947_uncommit": 58, "0024": [24, 35], "00383609999971668": 58, "0039507749997937935": 58, "0040258999997604406": 58, "004057779999857303": 58, "004066600000442122": 58, "004131924999910552": 58, "004159775000061927": 58, "004246700000294368": 58, "0043372999998609885": 58, "0048064200000226265": 58, "005089474999749655": 58, "007168699999965611": 58, "01": [24, 35, 37, 45, 58, 61, 63], "013": 92, "0197": 58, "01t00": [24, 35], "02": 58, "020288899999286514": 58, "021728052940979934": [24, 41, 95], "024032100000113132": 58, "03": 58, "030785499755523249": [24, 41, 95], "03960235520756414": [24, 43], "04": [58, 79], "04380595350226197": [24, 43], "0441791878997098": [24, 37, 41], "0472855509390593": [24, 33, 86], "04t12": 58, "04t16": 58, "05": [24, 53], "05309592737584": [24, 33, 86], "0532529435624589": [24, 41, 95], "0550596900172": 58, "055256829926011691": [24, 41, 95], "0598322696795694": [24, 41, 95], "05t15": 58, "06": 58, "0625": [20, 24], "07": 58, "07734942223993": 92, "08": [24, 53], "083130710959903542": [24, 37, 41, 89], "08505865366367038": [24, 41, 95], "085536923187668": [24, 33, 86], "0889": 58, "09": [58, 75], "0954451150103321": [22, 24, 91], "097392": 58, "0b10": [24, 36], "0b100": [21, 24, 34, 35, 45], "0b101111111111111111111111111111111111111111111111111111111111111111": [24, 36], "0d": [24, 35], "0x1": [21, 24, 34, 35], "0x1p": [21, 24, 34, 35], "0x7f2cf23e10c0": [20, 24, 90], "0x91d4430": [24, 35], "1": [0, 1, 3, 5, 7, 10, 11, 14, 16, 17, 18, 20, 21, 22, 24, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 65, 66, 67, 70, 72, 75, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], "10": [3, 7, 17, 20, 21, 22, 24, 27, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 47, 48, 49, 52, 55, 57, 58, 65, 76, 78, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97], "100": [20, 24, 33, 36, 40, 45, 48, 55, 58, 65, 86], "1000": [20, 24, 25, 29, 45, 84, 92], "10000": 18, "100000": 65, "100000000": 81, "1000000000000001": [24, 33], "100x40": [4, 8], "101": [24, 35, 52], "1024": [1, 24, 36], "104": [24, 52], "105": [0, 18], "106": [24, 41, 95], "1073741824": [20, 24, 90], "1074": [21, 24, 34, 35], "108": [22, 24, 91], "109302162163285": [24, 43], "11": [3, 20, 21, 24, 33, 34, 35, 39, 47, 55, 58, 63, 65, 66, 86, 87, 90, 92, 93, 96], "110": [24, 52], "110680464442257309696": [3, 24], "110680464442257309708": [3, 24], "1109": [24, 35], "111": [20, 24, 52, 90], "11101": [24, 35], "11111111111111116": [22, 24, 91], "114": [24, 52], "116": [24, 52], "119": [24, 52], "11e": [24, 35], "12": [3, 20, 22, 24, 27, 33, 35, 39, 43, 47, 52, 55, 58, 74, 78, 86, 87, 91, 93, 96], "120": [24, 52], "121": [24, 52], "122": [24, 52], "1234": [17, 20, 24, 27, 36, 47, 52, 61], "1235": [17, 20, 24, 27, 36, 47, 52], "1236": [17, 20, 24, 27, 36, 47, 52], "1237": [17, 20, 24, 27, 36, 47, 52], "127": [21, 24, 34, 35, 59], "128": [17, 21, 24, 33, 34, 35, 47, 52], "13": [3, 24, 33, 39, 41, 55, 58, 75, 78, 86, 87, 92, 93, 95], "1319566682702642": [24, 41, 95], "134": [24, 33, 86], "14": [3, 20, 22, 24, 33, 35, 39, 41, 45, 52, 58, 65, 66, 86, 87, 91, 93, 95], "14159": [21, 24, 33, 34, 35], "1415927": [24, 35], "1415927e": [24, 35], "1436": 58, "15": [3, 17, 20, 24, 33, 35, 39, 41, 52, 87, 93, 95], "1514764800000000000": [24, 37], "15461882265": 72, "158": 58, "1598310770203937": [24, 33, 86], "16": [20, 21, 22, 24, 33, 34, 35, 41, 55, 58, 59, 60, 75, 76, 86, 87, 91, 93, 95], "160": [24, 36], "1622479306453748": [24, 33, 86], "16400145561571539": [24, 41, 95], "166020696663385964564": [3, 24], "166020696663385964574": [3, 24], "1665150633720014": [24, 41, 95], "17": [20, 24, 35, 41, 58, 65, 87, 93, 95], "1723810583573375": [24, 37, 41], "18": [20, 22, 24, 36, 41, 58, 86, 87, 91, 93, 95], "18446744073709551616": [24, 36, 37], "18446744073709551617": [24, 36, 37], "18446744073709551618": [24, 36, 37], "18446744073709551619": [24, 36, 37], "18446744073709551620": [24, 36, 37], "1882": 58, "18_446_744_073_709_551_615": [21, 24, 34, 35], "19": [24, 33, 55, 87, 93], "1923875335537315": [24, 41, 95], "196608": 58, "1970": [24, 35], "1980": [24, 35], "1_2___": [24, 31, 52, 100], "1d": [5, 9, 11, 15, 24, 33, 39, 47, 48, 57, 96, 97, 98], "1e": [24, 45, 53], "1string": [24, 52], "2": [0, 3, 7, 17, 20, 21, 22, 24, 25, 27, 31, 33, 34, 35, 36, 37, 39, 41, 43, 44, 45, 47, 48, 49, 50, 52, 53, 55, 57, 58, 59, 61, 65, 66, 67, 74, 75, 76, 77, 78, 79, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], "20": [1, 3, 4, 8, 20, 24, 33, 35, 39, 41, 43, 61, 65, 78, 79, 86, 87, 93, 95], "2000": 58, "2008": [24, 35], "20159494048757": [24, 41, 95], "2018": [24, 37], "2020": 58, "2022": 76, "2023": [58, 75], "2024": [24, 43], "2047": [21, 24, 34, 35], "2048": [24, 36], "208": 58, "2080": 58, "20ghz": 58, "21": [3, 24, 33, 35, 86, 87], "210": 58, "2147483647": [24, 35], "2147483648": [24, 35], "21589865655358": [24, 33, 86], "22": [3, 21, 24, 34, 35, 86, 87], "2200000000": 58, "2207999000": 58, "222": [20, 24, 90], "2250": 58, "22e": [24, 35], "23": [3, 21, 24, 34, 35, 36, 87], "230000071797338e": [24, 35], "2324_pytest_benchmark_doc": 58, "236": 58, "23e": [24, 35], "23e24": [24, 35], "24": [3, 24, 25, 33, 35, 36, 48, 58, 78, 86, 87], "246": 58, "25": [3, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 37, 48, 55, 87, 89, 91], "255": [21, 24, 34, 35], "256": [24, 36, 58], "2561": 58, "25x": [24, 35], "26": [58, 87], "263": 58, "264": 58, "267": 58, "27": [20, 24, 36, 58, 65, 87], "28": [55, 87], "281": 58, "29": 87, "290": [20, 24], "298": [20, 24], "2_147_483_647": [21, 24, 34, 35], "2_147_483_648": [21, 24, 34, 35], "2d": [4, 5, 8], "2\u00b3x\u2087": [24, 52], "2\u00b3\u2087": [24, 52], "3": [3, 20, 21, 22, 24, 25, 27, 31, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 47, 48, 49, 52, 53, 55, 57, 58, 65, 66, 67, 75, 76, 78, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100], "30": [3, 24, 25, 33, 43, 48, 55, 62, 87], "3000": [24, 48], "3000000000000007": [24, 33], "3000488281": [24, 35], "30013431967121934": [24, 37, 41], "3025850929940459": [24, 33, 86], "31": [61, 79], "3141": [24, 35], "317766166719343": [24, 44], "31de39be8b19c76d073a8999def6673a305c250d": 58, "32": [20, 21, 24, 27, 33, 34, 35, 36, 46, 58, 65, 67], "3219280948873626": [24, 33, 86], "324": [21, 24, 34, 35], "32767": [24, 35], "32768": [24, 35], "32_767": [21, 24, 34, 35], "32_768": [21, 24, 34, 35], "33": [24, 33, 86], "3304": 58, "3306": 58, "333": [20, 24, 90], "333333333333333": [22, 24, 91], "33333333333333326": [22, 24, 91], "33333333333333337": [22, 24, 91], "33333333333333348": [22, 24, 91], "333333333333334": [24, 43], "35": 65, "350": 58, "35000": 65, "353429832157099": [24, 37, 41, 89], "36": [21, 24, 33, 34, 35, 45, 92], "3620": 58, "3673425816523577": [24, 41, 95], "36893488147419103233": [3, 24], "37": 65, "3805": 58, "384": [24, 36], "38552048588998722": [24, 41, 95], "3866978126031091": [24, 41, 95], "3890560989306504": [24, 33, 86], "39": [20, 24, 58], "3dnowprefetch": 58, "3q4kc": [24, 37], "3w": [21, 24, 34, 35], "4": [3, 4, 8, 17, 20, 21, 22, 24, 25, 27, 31, 33, 34, 35, 36, 37, 39, 41, 44, 45, 47, 48, 49, 52, 53, 55, 58, 65, 67, 75, 76, 78, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100], "40000": [20, 24], "4097": 58, "4110385860243131": [24, 33, 86], "4142135623730951": [24, 36], "41619265571741659": [24, 37], "4177": 58, "42": 93, "4231": 58, "4298": 58, "4328": 58, "44017172817806": 58, "4444": 58, "45": [24, 33], "450": [24, 33, 86], "454368507659211": [24, 33, 86], "457": 18, "459": [20, 24], "46": [24, 33, 48, 86], "4608": [24, 36], "4610935": [24, 35], "4621": 58, "4657359027997265": [24, 44], "47108547995356098": [24, 41, 95], "47383036230759112": [24, 37, 41], "478894913238722": [24, 33, 86], "48": [24, 25, 48], "4869": 58, "4875": 58, "49": [24, 33], "4930614433405491": [24, 44], "494295836924771": [24, 33, 86], "4_294_967_295": [21, 24, 34, 35], "4k": [24, 37], "5": [3, 17, 18, 20, 21, 22, 24, 25, 33, 34, 35, 36, 37, 39, 41, 43, 44, 45, 47, 48, 49, 52, 53, 55, 58, 65, 66, 67, 69, 76, 78, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 100], "50": [4, 8, 58, 65], "500": [18, 59, 62], "5000": [20, 24], "512": [24, 36], "52": [21, 24, 34, 35, 65], "5246": 58, "5255": 58, "5275252316519465": [22, 24, 91], "53": [24, 33, 35], "5306": 58, "5392023718621486": [24, 37, 41, 89], "54": [24, 33, 86], "5424399190667666": [24, 41, 95], "55": 45, "5541": 58, "5555": [18, 72, 99], "55555555555555536": [22, 24, 91], "55555555555555558": [22, 24, 91], "5571769623557188": [24, 33, 86], "56": [24, 36, 66], "5622": 58, "5652": 58, "567584107142031": [24, 37, 41], "57": 58, "5728783400481925": [24, 33, 86], "57600036956445599": [24, 37], "58": 58, "5801": 58, "5835189384561099": [24, 44], "5837": 58, "598150033144236": [24, 33, 86], "5____6___7": [24, 52, 100], "5e": [21, 24, 34, 35, 58], "5h": [24, 54], "5oz1": [24, 37], "6": [3, 20, 22, 24, 25, 27, 33, 35, 36, 37, 39, 44, 45, 47, 52, 55, 58, 65, 75, 76, 78, 79, 81, 83, 86, 87, 89, 90, 91, 92, 93, 96, 98, 100], "60": [24, 36], "600000000000001": [24, 33], "6051701859880918": [24, 33, 86], "6094379124341003": [24, 44], "61": [24, 36], "6125": 58, "62": [20, 24, 36, 58], "62511314008006458": [24, 41, 95], "63": [24, 33, 36, 94], "64": [19, 21, 24, 27, 33, 34, 35, 36, 37, 41, 57, 58, 89, 90, 94], "6438561897747253": [24, 33, 86], "6450": 58, "6465": 58, "647": 18, "64bit": 58, "65": [24, 36], "65_535": [21, 24, 34, 35], "6615356693784662": [24, 37], "6666666666666665": [22, 24, 91], "67": [20, 24], "68586185091150265": [24, 37, 41], "6864": 58, "68894208386667544": [24, 37, 41, 89], "7": [3, 20, 21, 22, 24, 25, 33, 34, 35, 36, 37, 39, 41, 44, 47, 48, 49, 55, 65, 75, 76, 78, 83, 85, 86, 87, 89, 90, 91, 93, 95, 96, 98], "70": [24, 35], "7085325853376141": [24, 41, 95], "71": 65, "710615785506533": [24, 33, 86], "7182818284590451": [24, 33, 86], "7208667145173608": [24, 41, 95], "7320508075688772": [24, 36], "7336": 58, "75": [22, 24, 37, 89, 91], "75000": 65, "754": [24, 35], "7544": 58, "7659": 58, "77": [20, 24], "77000": 65, "77777777777777768": [22, 24, 91], "77777777777777779": [22, 24, 91], "7852": 58, "78523998586553": [24, 33, 86], "79": 58, "7912": 58, "7999999999999998": [22, 24, 91], "8": [3, 20, 21, 22, 24, 27, 33, 34, 35, 36, 37, 39, 41, 43, 44, 47, 49, 52, 53, 58, 65, 66, 76, 78, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96], "80": 65, "8075": 58, "81": [24, 33], "8377304471659395": [24, 44], "8380": 58, "84": 65, "84010843172504": [24, 33, 86], "86": [20, 24], "8601": [24, 35], "87": 58, "875": [24, 48], "8750h": 58, "8797352989638163": [24, 41, 95], "88": 58, "8800": 58, "88281": [20, 24], "896": [24, 36], "9": [3, 17, 20, 22, 24, 27, 33, 36, 37, 39, 47, 49, 52, 55, 58, 65, 75, 76, 78, 83, 85, 86, 87, 89, 90, 91, 92, 93, 96, 100], "90": 58, "9012": 58, "9160772326374946": [24, 37, 41, 89], "9177": 58, "92176432277231968": [24, 37, 41, 89], "921f9f01b866ep": [21, 24, 34, 35], "9223372036854775807": [21, 24, 34, 35], "92233720368547758085": [3, 24], "92233720368547758090": [3, 24], "92233720368547758091": [3, 24], "92233720368547758095": [3, 24], "931": 78, "9314718055994531": [24, 44], "934176000000015": 92, "9362": 18, "94": 58, "9437184": 58, "9442193396379163": 24, "945880905466208": [24, 33, 86], "96": [24, 36], "9602": 18, "9683": 18, "984375": [21, 24, 34, 35], "99": [20, 24, 45, 58, 90], "999": 45, "9991": 58, "99999": 0, "9999999999999982": [22, 24, 91], "999999999999ap": [21, 24, 34, 35], "9_223_372_036_854_775_807": [21, 24, 34, 35], "9_223_372_036_854_775_808": [21, 24, 34, 35], "A": [1, 2, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 50, 51, 52, 55, 61, 65, 71, 81, 83, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 100], "AND": [7, 22, 24, 47, 82, 91], "And": [45, 94], "As": [0, 24, 33, 35, 36, 45, 48, 50, 61, 66, 68, 75, 76, 83, 86, 94, 97, 100], "At": [24, 33, 36, 86], "Be": [0, 20, 24, 25, 27, 36, 52, 57], "But": [3, 24], "By": [17, 19, 20, 22, 24, 25, 27, 33, 36, 39, 47, 52, 53, 54, 91, 98, 100], "For": [0, 2, 3, 4, 8, 17, 20, 21, 22, 24, 27, 31, 34, 35, 37, 39, 41, 45, 49, 52, 54, 55, 57, 58, 62, 65, 70, 72, 74, 75, 76, 77, 80, 83, 85, 89, 91, 92, 93, 94, 95, 96, 98, 100], "IN": 65, "If": [0, 1, 3, 5, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 45, 47, 48, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 66, 67, 69, 72, 74, 75, 76, 77, 79, 80, 83, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100], "In": [17, 20, 21, 22, 24, 27, 33, 34, 35, 36, 41, 52, 57, 58, 59, 61, 62, 65, 72, 74, 75, 77, 79, 83, 86, 91, 92, 93, 95, 96, 99, 100], "It": [0, 4, 19, 20, 24, 35, 36, 46, 47, 53, 55, 57, 59, 60, 63, 65, 66, 67, 69, 72, 75, 76, 79, 90, 91, 96], "Its": [24, 41, 95], "NO": 58, "NOT": [7, 20, 24, 25, 27, 33, 36, 52, 74, 83, 94], "No": [24, 36, 74, 79], "Not": [7, 24, 27, 33, 48, 54, 58, 90], "ONE": 67, "OR": [7, 22, 24, 47, 61, 82, 91], "Of": [24, 54], "On": [17, 18, 24, 99], "One": [20, 22, 24, 25, 35, 36, 48, 55, 57, 65, 91, 97], "Ones": [24, 37, 89], "Or": [24, 35, 61], "The": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 65, 66, 67, 68, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100], "Then": [24, 53], "There": [1, 21, 22, 24, 27, 33, 34, 35, 58, 65, 74, 79, 89, 98], "These": [1, 20, 21, 24, 34, 35, 48, 65, 67, 70, 72, 83], "To": [0, 1, 20, 21, 22, 24, 27, 33, 34, 41, 45, 54, 57, 58, 59, 63, 66, 72, 74, 76, 77, 87, 88, 90, 92, 94, 95, 100], "Will": 58, "With": [22, 24, 33, 35, 57, 77, 87, 91, 93], "_": [3, 22, 24, 31, 35, 52, 91, 100], "__": [24, 31, 52, 100], "__4___5____6___7": [24, 31, 52, 100], "___": [24, 52, 100], "____": [24, 31, 52, 100], "__all__": 57, "__allsymbols__": [24, 26], "__array_function__": 4, "__dict__": 77, "__init__": [2, 24], "__int__": [21, 24, 34, 35, 45], "__name__": [24, 35], "__registeredsymbols__": [24, 26], "__str__": [20, 21, 22, 24, 34, 35, 45, 48], "_abstractbasetim": [24, 54], "_base_unit": [24, 54], "_distn_infrastructur": 45, "_equal": [24, 53], "_equival": [24, 53], "_filter_arkouda_command": 23, "_final": [21, 34], "_genericalia": [21, 24, 34, 35], "_get_grouping_kei": [22, 24, 91], "_length": [24, 47], "_local": [17, 20, 24, 25, 27, 36, 47, 52, 67], "_locale0000": [20, 24], "_segment": [24, 47, 67], "_type": [4, 5, 6, 8, 15], "_valu": [24, 47, 67], "_x": [20, 24], "_y": [20, 24], "a1": [24, 29, 33, 86], "a2": [24, 29, 33, 36, 86], "a5": [24, 35], "a_cpi": [24, 36], "a_max": 16, "a_min": 16, "ab": [7, 24, 33, 54, 82, 86], "abc": [21, 24, 25, 34, 35, 66], "abcd": [24, 35], "abil": 96, "abl": [57, 61, 67, 68, 74, 83], "abm": 58, "abocorhfm": [24, 37], "about": [17, 18, 24, 26, 35, 36, 52, 54, 57, 58, 62, 72, 77, 86, 87, 100], "abov": [5, 21, 24, 33, 34, 35, 41, 45, 57, 58, 63, 65, 74, 75, 90, 95, 100], "abs_dt": [24, 29], "absolut": [1, 7, 21, 24, 33, 34, 35, 53, 54, 77, 86], "abspath": [24, 35], "abstract": [23, 24, 35], "acceler": 60, "accept": [24, 48, 54, 58, 97], "access": [1, 2, 18, 24, 27, 35, 46, 48, 52, 57, 65, 70, 76, 82, 83, 95, 99], "access_channel": [18, 99], "access_token": [18, 99], "accessor": [24, 56], "accomod": [19, 24], "accomplish": [77, 83], "accord": [19, 20, 22, 24, 25, 33, 48, 55, 90, 91, 94], "accordingli": [24, 37, 67, 89], "account": 79, "accur": 45, "accuraci": 45, "achiev": [3, 20, 24, 74], "aco": 7, "acosh": 7, "acquir": 57, "across": [4, 8, 20, 24, 27, 67, 83, 95], "act": [24, 36, 41, 95], "action": 61, "activ": [72, 74, 75, 76, 91], "actual": [21, 24, 29, 34, 35, 66], "ad": [17, 19, 20, 21, 24, 25, 27, 30, 34, 35, 36, 47, 52, 62, 64, 65, 69, 74, 83, 99], "add": [0, 1, 7, 17, 20, 22, 24, 27, 35, 41, 47, 48, 57, 61, 72, 74, 75, 76, 77, 79, 90, 91, 95], "add_newdoc": [24, 35], "addit": [1, 11, 20, 22, 24, 33, 35, 40, 41, 53, 59, 67, 69, 75, 94, 95, 98, 99], "addition": [77, 84], "address": [0, 18, 19, 24, 99], "adher": 67, "adjac": [24, 35], "advanc": 87, "adversari": [24, 33], "adx": 58, "ae": 58, "affect": [19, 24, 41, 95], "after": [0, 17, 20, 22, 24, 35, 38, 52, 61, 63, 74, 90, 91, 95, 100], "ag": 65, "again": [0, 63, 65, 66, 74, 75], "against": [17, 24, 47, 52, 58, 65, 83, 96, 100], "aggreg": [1, 20, 22, 24, 47, 55, 65, 82, 83, 91], "aggress": 83, "aid": [65, 67], "aim": 65, "ak": [0, 1, 3, 17, 18, 19, 20, 22, 24, 25, 26, 27, 31, 33, 35, 36, 37, 39, 40, 41, 43, 44, 47, 48, 49, 52, 53, 54, 55, 57, 62, 63, 65, 66, 72, 77, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100], "ak_arr": 65, "ak_data": [24, 27, 83], "ak_df": [20, 24, 40, 90], "ak_in1d": 65, "ak_in1dmult": 65, "ak_in1dmulti": 65, "ak_int": 65, "ak_intmult": 65, "ak_io_benchmark": 58, "aka": 46, "akab": 24, "akbool": 24, "akcast": 24, "akfloat64": 24, "akint64": [24, 33, 37, 41], "akstat": [24, 43], "aku": [3, 24, 25, 42, 84], "akuint64": 24, "algorithm": [14, 24, 33, 35, 49, 55, 72, 85], "alia": [20, 21, 24, 33, 34, 35, 39, 47, 48, 54, 90], "alias": [21, 24, 34, 35, 54], "alic": [20, 24, 90], "align": [24, 25, 35, 56], "all": [0, 3, 4, 5, 8, 11, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 47, 50, 52, 53, 54, 55, 57, 58, 61, 62, 63, 66, 67, 69, 72, 75, 76, 77, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100], "all_occurr": [3, 24, 39], "all_scalar": [21, 24, 34, 35, 37, 89], "allclos": [24, 45, 53], "alloc": 18, "allow": [0, 17, 19, 20, 22, 24, 25, 27, 30, 35, 36, 37, 41, 43, 47, 48, 52, 53, 55, 58, 59, 65, 67, 68, 70, 77, 79, 83, 89, 91, 95, 96], "allow_error": [20, 24, 25, 27, 36, 52, 83], "allow_list": [24, 25, 84], "allsymbol": [24, 26], "almost": [88, 90, 94, 100], "alnum": [24, 52], "alon": [88, 100], "along": [4, 8, 9, 11, 12, 14, 15, 16, 20, 22, 24, 33, 37, 38, 89, 98], "alongsid": [24, 27], "alpha": [24, 45, 52, 58, 81], "alphabet": [24, 52], "alphanumer": [24, 52], "alreadi": [0, 1, 17, 20, 22, 24, 25, 27, 33, 36, 47, 48, 52, 54, 62, 66, 67, 69, 74, 88, 91, 98], "also": [1, 3, 4, 17, 19, 21, 22, 24, 29, 33, 34, 35, 37, 39, 41, 45, 47, 48, 52, 53, 57, 60, 62, 65, 66, 68, 69, 70, 72, 75, 79, 83, 89, 93, 94, 95, 96, 98, 100], "altern": [1, 20, 24, 35, 41, 45, 48, 61, 62, 74, 76, 79, 95], "although": [4, 8], "alwai": [0, 11, 14, 21, 22, 24, 25, 27, 34, 35, 36, 54, 57, 66, 83, 86, 88, 90, 91, 92, 94, 100], "amount": [18, 20, 24, 36, 77, 90, 100], "an": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 72, 75, 79, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "anaconda": [1, 72, 74, 79, 80], "anaconda3": [74, 75, 76], "analog": [21, 22, 24, 34, 35, 54, 91], "analyt": 71, "angl": [24, 33], "ani": [0, 3, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 41, 47, 48, 50, 52, 53, 57, 58, 61, 63, 67, 69, 75, 76, 82, 86, 90, 91, 92, 94, 95, 96, 100], "anim": [24, 48], "animal_1": [20, 24], "animal_2": [20, 24], "annot": [21, 34, 57], "anoth": [0, 5, 6, 12, 20, 21, 22, 24, 27, 33, 34, 35, 36, 52, 57, 67, 72, 76, 79, 83, 90, 91, 93, 94, 96, 100], "anyon": 0, "anyth": [0, 21, 24, 34, 36, 61], "anywai": [0, 89], "api": [1, 4, 5, 7, 8, 11, 20, 21, 22, 24, 34, 35, 48, 55, 57, 71, 91, 94], "api_specif": [11, 24, 55], "apic": 58, "app": 79, "appear": [3, 17, 20, 22, 24, 25, 27, 35, 36, 39, 48, 52, 61, 91, 92], "append": [16, 17, 20, 22, 24, 25, 27, 35, 36, 39, 47, 48, 52, 67, 69, 82, 89, 91, 100], "append_singl": [24, 47, 82, 96], "appli": [3, 7, 11, 15, 20, 22, 24, 33, 35, 53, 57, 58, 86, 90, 91, 100], "applic": [22, 24, 33, 83, 89, 91, 98], "apply_permut": [20, 24, 90], "appreci": 0, "approach": [77, 96], "appropri": [0, 20, 24, 27, 35, 53, 61, 68, 72, 74, 78, 83], "approv": 0, "approxim": [20, 24, 35, 53], "ar": [0, 1, 3, 4, 7, 8, 11, 16, 17, 19, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 37, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 65, 66, 67, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], "arang": [3, 5, 20, 22, 24, 27, 33, 36, 37, 39, 40, 41, 47, 48, 55, 57, 65, 82, 83, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98], "arbitrari": [20, 24, 35, 90], "arbitrarili": [17, 24], "arcco": [24, 33], "arccosh": [24, 33], "arccosin": 7, "arch": 58, "arch_cap": 58, "arch_string_raw": 58, "architectur": 58, "archiv": 75, "arcsin": [7, 24, 33], "arcsinh": [24, 33], "arctan": [24, 33], "arctan2": [24, 33], "arctang": 7, "arctanh": [24, 33], "area": [24, 45, 53, 58], "aren": [75, 76], "arg": [0, 3, 20, 21, 22, 24, 25, 34, 35, 37, 45, 47, 48, 54, 55, 57, 77, 89, 91], "arg1": [24, 35, 57], "arg2": [24, 35], "argmax": [12, 20, 21, 22, 24, 34, 35, 36, 47, 48, 82, 86, 91, 92], "argmaxk": [24, 36, 82, 86, 92], "argmin": [12, 20, 21, 22, 24, 34, 35, 36, 47, 48, 82, 86, 91, 92], "argmink": [24, 36, 82, 86, 92], "argpars": 78, "args1": [3, 24], "args2": [3, 24], "argsort": [14, 17, 18, 20, 21, 22, 24, 25, 34, 35, 36, 49, 82, 85, 86, 88, 90, 91, 100], "argument": [2, 3, 14, 15, 16, 19, 20, 21, 22, 24, 33, 34, 35, 36, 41, 45, 47, 48, 52, 53, 55, 57, 77, 95, 97], "arithmet": [24, 35, 82, 94], "arkodua": [66, 67], "arkouda": [56, 58, 61, 63, 64, 68, 70, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 93, 94, 98], "arkouda_arrow_path": 1, "arkouda_client_directori": [1, 46], "arkouda_client_mod": 1, "arkouda_client_timeout": 1, "arkouda_config_fil": [62, 77], "arkouda_develop": [1, 62], "arkouda_full_stack_test": 1, "arkouda_hdf5_path": 1, "arkouda_hom": 1, "arkouda_iconv_path": 1, "arkouda_idn2_path": 1, "arkouda_key_fil": 1, "arkouda_log_level": [1, 24], "arkouda_mem_alloc": 18, "arkouda_numlocal": 1, "arkouda_password": 1, "arkouda_print_passes_fil": 1, "arkouda_quick_compil": [1, 62, 76], "arkouda_root": 58, "arkouda_serv": [1, 18, 21, 24, 34, 35, 59, 62, 63, 72, 74, 77, 99], "arkouda_server_aggregation_dst_buff_s": 1, "arkouda_server_aggregation_src_buff_s": 1, "arkouda_server_aggregation_yield_frequ": 1, "arkouda_server_connection_info": 1, "arkouda_server_host": 1, "arkouda_server_port": 1, "arkouda_server_user_modul": [1, 77], "arkouda_skip_check_dep": 1, "arkouda_supported_dtyp": [21, 24, 34, 35], "arkouda_supported_float": [21, 34], "arkouda_supported_int": [21, 34], "arkouda_supported_numb": [21, 34], "arkouda_tunnel_serv": 1, "arkouda_typ": [20, 24, 25, 27, 36, 52], "arkouda_verbos": 1, "arkouda_vers": 67, "arkouda_zmq_path": 1, "arkoudalogg": [22, 24, 30, 52, 91], "arkoudavers": 0, "arm64": 76, "around": [0, 4, 8, 19, 21, 24, 34, 35, 45, 61, 63], "arr": [24, 27, 38, 39], "arr1": [3, 24, 39], "arr2": [3, 24, 39], "arrai": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 66, 67, 72, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 100], "array_api": [24, 56], "array_dtyp": 57, "array_equ": [24, 33], "array_nd": 57, "array_object": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 56], "array_of_size_rank": 67, "array_view": 87, "arrays2": [24, 25], "arrays_and_dtyp": 6, "arraysetop": 98, "arraysetopsmsg": 57, "arrayview": [24, 33, 82, 94], "arri": 55, "arrow": [1, 78], "artifact": 46, "as_compon": [24, 55], "as_index": [20, 24, 90], "as_integer_ratio": [21, 24, 34, 35], "as_perc": 18, "as_seri": [20, 24], "asarrai": [4, 5, 8], "ascend": [12, 20, 22, 24, 25, 33, 36, 48, 84, 90, 92, 97], "ascii": 58, "asia": [24, 54], "asin": 7, "asinh": 7, "ask": 0, "assembl": [24, 52], "assert": [24, 53], "assert_": [24, 53], "assert_almost_equ": [24, 53], "assert_almost_equival": [24, 53], "assert_arkouda_array_equ": [24, 53], "assert_arkouda_array_equival": [24, 53], "assert_arkouda_pdarray_equ": [24, 53], "assert_arkouda_segarray_equ": [24, 53], "assert_arkouda_strings_equ": [24, 53], "assert_attr_equ": [24, 53], "assert_categorical_equ": [24, 53], "assert_class_equ": [24, 53], "assert_contains_al": [24, 53], "assert_copi": [24, 53], "assert_dict_equ": [24, 53], "assert_equ": [24, 53], "assert_equival": [24, 53], "assert_frame_equ": [24, 53], "assert_frame_equival": [24, 53], "assert_index_equ": [24, 53], "assert_index_equival": [24, 53], "assert_is_sort": [24, 53], "assert_series_equ": [24, 53], "assert_series_equival": [24, 53], "assertionerror": [24, 53], "asset": 72, "assig": 93, "assign": [0, 17, 20, 22, 24, 35, 48, 66, 67, 82, 88, 91, 96, 100], "assist": [0, 77], "associ": [0, 1, 20, 24, 27, 35, 41, 48, 55, 58, 61, 83, 95, 96, 97], "assum": [2, 12, 20, 22, 24, 27, 33, 35, 37, 39, 41, 48, 50, 61, 66, 67, 68, 75, 76, 80, 83, 90, 91, 95, 97, 98], "assume_sort": [22, 24, 91, 98], "assume_uniqu": [24, 39, 98], "assumpt": [17, 24, 36, 37, 52, 83, 88, 94, 100], "ast": 78, "astyp": [6, 20, 21, 24, 34, 35, 36, 52], "atan": 7, "atan2": 7, "atanh": 7, "atol": [24, 53], "attach": [17, 19, 20, 22, 24, 25, 35, 36, 47, 48, 52, 54, 55, 82, 91], "attach_al": [24, 55], "attach_pdarrai": [24, 36], "attahc": [24, 36], "attempt": [17, 20, 22, 24, 25, 27, 36, 47, 48, 49, 52, 54, 74, 83, 90, 91], "attent": 58, "attr": [24, 53], "attribut": [8, 17, 20, 21, 25, 27, 34, 36, 52, 53, 54, 83, 94], "attributeerror": [24, 35], "attributi": [24, 36, 50, 94], "authent": [18, 46, 72, 99], "author": 0, "author_tim": 58, "auto": [45, 56, 61], "autoapi": [56, 78], "autoclass": 84, "autodoc": 78, "autom": [1, 61], "automat": [1, 3, 17, 24, 27, 48, 67, 83, 88, 97], "autopackagesummari": 78, "autosav": 58, "avail": [1, 18, 24, 27, 35, 36, 45, 58, 63, 67, 79, 83, 92, 95], "avail_mem": 18, "averag": [22, 24, 36, 37, 58, 86, 91], "avoid": [0, 24, 35, 60, 63], "avx": 58, "avx2": 58, "awar": 0, "awk": 79, "ax": [0, 4, 8, 11, 15, 16, 20, 24, 45], "axi": [9, 10, 11, 12, 14, 15, 16, 20, 24, 25, 33, 38, 40, 47, 48, 49, 85, 90, 96, 97], "b": [17, 18, 20, 21, 22, 24, 25, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 51, 52, 53, 55, 65, 81, 85, 86, 90, 91, 92, 93, 94, 95, 96, 98, 100], "back": [19, 20, 22, 24, 55, 60, 63, 83, 91], "backbon": 94, "backend": [20, 24, 48, 60, 74], "backward": [24, 35, 47, 55, 96], "badvalu": 45, "balanc": [17, 24, 52], "bandwidth": [24, 37, 83], "base": [0, 1, 2, 3, 4, 7, 13, 17, 19, 20, 21, 23, 24, 25, 27, 30, 33, 34, 35, 36, 42, 43, 45, 49, 54, 55, 61, 74, 76, 80, 83, 84, 85, 86, 88, 90, 94, 95, 97, 100], "base_repr": [24, 35], "bash": [75, 76], "bashrc": [75, 76, 79], "basic": [18, 24, 25, 36, 46, 61, 79, 87, 94], "bear": [0, 61, 75, 76], "becaus": [17, 20, 24, 25, 27, 33, 35, 37, 41, 47, 52, 53, 62, 65, 66, 67, 68, 72, 83, 88, 89, 90, 96, 100], "becom": [21, 24, 33, 34], "been": [1, 17, 18, 20, 24, 27, 33, 35, 36, 38, 39, 47, 52, 59, 60, 61, 74, 77, 86, 88, 89], "befor": [0, 11, 12, 16, 24, 35, 38, 54, 58, 74, 83], "begin": [0, 4, 8, 16, 24, 52, 93, 100], "behav": 0, "behavior": [0, 4, 20, 24, 35, 36, 37, 41, 57, 86, 87, 89, 90, 95, 100], "being": [20, 24, 25, 27, 33, 35, 36, 48, 53, 57, 65, 67, 68, 69, 77, 83, 90, 93, 97], "believ": 61, "belong": [17, 24, 88], "below": [5, 24, 33, 40, 45, 58, 59, 65, 75, 76, 78, 83, 90], "bench_decod": 58, "bench_encod": 58, "benchmark": [62, 64, 77, 78, 81], "benchmark_v2": 58, "benefici": [58, 69], "berkelei": [20, 24], "besid": [24, 35], "best": [0, 3, 24, 35, 45], "beta": [24, 41, 95], "better": [17, 20, 24, 25, 27, 36, 47, 52], "between": [1, 5, 17, 18, 20, 24, 29, 33, 35, 36, 37, 52, 54, 55, 58, 65, 77, 89, 92, 94, 100], "beyond": [11, 24, 36, 65, 86], "bi": [24, 33], "bi_end": [3, 24], "bi_start": [3, 24], "bi_val": [3, 24], "bia": [24, 35], "big": [21, 24, 34, 35], "biggest": 62, "bigint": [21, 24, 33, 34, 35, 36, 37, 58, 83, 89], "bigint_from_uint_arrai": [3, 24, 36, 37], "bigint_to_uint_arrai": [24, 36, 37], "bin": [24, 33, 35, 36, 40, 45, 74, 75, 76, 79, 92], "binari": [19, 24, 35, 37, 75, 76, 86], "binary_repr": [24, 35], "binomi": [24, 41, 95], "binop": [17, 20, 24, 27, 36, 47, 52], "bit": [0, 6, 17, 19, 21, 24, 27, 33, 34, 35, 36, 37, 47, 52, 58, 62, 83, 87, 89, 90, 94], "bit_count": [21, 24, 34, 35], "bittyp": [21, 24, 34, 35], "bitvector": [19, 24], "bitwis": [7, 22, 24, 91, 94], "bitwise_and": 7, "bitwise_invert": 7, "bitwise_left_shift": 7, "bitwise_or": 7, "bitwise_right_shift": 7, "bitwise_xor": 7, "black": [0, 78], "block": [0, 17, 24, 39, 48, 52, 57, 65, 89], "blosc": [24, 27], "blue": [24, 25], "bmi1": 58, "bmi2": 58, "bob": [20, 24, 90], "bodi": 0, "bool": [3, 5, 6, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 47, 48, 49, 52, 53, 54, 55, 58, 67, 81, 83, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], "bool_": [17, 21, 24, 33, 34, 35, 36, 37, 41, 52, 54, 86, 89, 92, 93, 94], "bool_onli": [20, 24], "bool_scalar": [21, 24, 34, 35], "booldtyp": [24, 35], "boolean": [3, 6, 7, 17, 20, 21, 22, 24, 31, 33, 34, 35, 36, 39, 47, 48, 52, 65, 67, 86, 88, 90, 91, 93, 94, 96, 97, 98, 100], "boost": 74, "borrow": 57, "both": [3, 11, 18, 20, 21, 22, 24, 25, 27, 29, 33, 34, 35, 36, 39, 53, 54, 62, 65, 67, 68, 72, 74, 83, 88, 98, 100], "bottleneck": 60, "bottom": [24, 36, 61], "bound": [24, 36, 37, 41, 47, 54, 89, 96], "boundari": [24, 41, 54, 95], "box": [24, 41, 61, 95], "branch": [0, 58, 61, 74], "brand_raw": 58, "brew": 76, "bring": 61, "broad": 0, "broadcast": [11, 20, 22, 24, 33, 36, 55, 82, 86, 91], "broadcast_arrai": 11, "broadcast_dim": [24, 55], "broadcast_to": 11, "broadcast_to_shap": [24, 36], "brotli": [17, 20, 24, 25, 27, 36, 47, 52, 58, 69], "brown": 65, "browser": 74, "buf": [24, 35], "buffer": [1, 5, 20, 21, 22, 24, 34, 35, 45, 48], "bufferobject": [21, 24, 34, 35], "bug": [61, 64], "build": [1, 21, 22, 24, 34, 35, 57, 58, 61, 64, 72, 75, 79, 91, 99], "build_from_compon": [22, 24, 82, 91], "built": [0, 17, 21, 24, 34, 35, 36, 52, 59, 61, 62, 63, 72, 74, 76, 77, 83, 88, 94, 100], "builtin": [21, 24, 34, 35, 36], "bundl": [75, 76], "button": 61, "bydayofweek": 91, "byte": [17, 20, 21, 24, 25, 27, 29, 34, 35, 36, 37, 45, 47, 48, 50, 52, 55, 67, 72, 83, 87, 88, 90, 94, 100], "bytearrai": [21, 24, 34, 35, 45], "bytedtyp": [24, 35], "byteord": [21, 24, 34, 35], "bytes_": [24, 35], "bytes_attrib": [24, 52], "bytes_or_buff": [20, 21, 22, 24, 34, 35, 45, 48], "bytes_s": [24, 52], "bytesdtyp": [24, 35], "byteswap": [21, 24, 34, 35], "c": [17, 20, 21, 24, 25, 34, 35, 37, 39, 40, 47, 48, 52, 55, 58, 60, 62, 75, 81, 90, 94, 96, 98, 100], "c1": [24, 33, 86], "c2": [17, 24, 33, 86], "c_cpy": [17, 24], "c_string": 67, "cach": [2, 17, 24, 35, 52], "cached_regex_pattern": [24, 52], "cachedaccessor": [2, 24], "calc_string_offset": [24, 27, 83], "calcul": [16, 20, 22, 24, 27, 35, 36, 39, 45, 58, 67, 83, 86, 91, 92, 98], "calculu": [31, 100], "call": [4, 8, 17, 18, 19, 20, 22, 24, 27, 35, 36, 37, 41, 45, 47, 48, 50, 52, 53, 57, 65, 69, 72, 74, 76, 77, 83, 86, 87, 89, 90, 91, 94, 95, 99], "callabl": [4, 19, 20, 24, 90], "callback": [19, 24], "caller": [20, 24, 35, 48, 90], "came": [24, 47, 96], "can": [1, 3, 4, 6, 8, 17, 19, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 37, 39, 41, 45, 46, 47, 48, 52, 54, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 78, 79, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], "can_cast": 6, "cancel": [24, 33], "candid": [24, 35], "cannot": [3, 11, 17, 19, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 37, 47, 48, 52, 53, 54, 69, 79, 83, 88, 91, 94, 100], "canon": [21, 24, 34, 35], "capac": [24, 33, 94], "capit": [24, 52], "capitilz": [24, 52], "captur": [1, 31, 100], "care": 58, "carol": [20, 24, 90], "carri": [24, 54], "cartesian": 87, "case": [17, 18, 21, 22, 24, 25, 27, 33, 34, 35, 36, 41, 45, 48, 52, 54, 58, 60, 65, 66, 67, 69, 74, 75, 77, 79, 86, 95, 97], "cask": 76, "caskroom": [74, 76], "cast": [3, 4, 6, 19, 21, 24, 33, 34, 36, 37, 38, 52, 57, 82, 83, 89, 100], "castabl": [24, 44], "castarrai": 57, "castmsg": 57, "cat": [17, 24, 27, 79], "catch": 0, "categor": [20, 22, 24, 25, 27, 33, 39, 48, 49, 53, 55, 56, 82, 85, 86, 89, 90, 91, 92, 94, 97, 98], "categori": [0, 17, 24, 49, 53, 61, 67, 82, 85, 88], "categorical_arrai": [17, 24], "categorical_test": 0, "categoricaltest": 0, "cattwo": [17, 24], "caus": [17, 20, 24, 25, 27, 35, 36, 47, 52, 72, 74], "caution": [17, 24, 36, 37, 52, 83, 88, 94, 100], "ccflag": 1, "cd": [59, 72, 75, 76, 78], "cdf": [24, 41, 45, 95], "cdot": [24, 41, 95], "cdoubl": [21, 24, 34, 35], "ceil": [7, 24, 33], "cell": [20, 24], "cento": 75, "central": [21, 24, 34, 35, 45], "certain": [24, 36, 59, 77, 86], "cfg": [1, 24, 27, 62, 63, 77], "cfloat": [21, 24, 34, 35], "chang": [1, 19, 20, 21, 24, 25, 27, 34, 35, 36, 58, 61, 63, 72, 75, 76, 78, 83, 86, 90, 95], "channel": [18, 99], "chapel": [18, 24, 33, 57, 60, 62, 67, 71, 72, 74, 77, 78, 79, 80, 94, 95, 99, 100], "chapel_vers": 72, "char": [21, 24, 34, 35, 52], "charact": [17, 18, 19, 21, 23, 24, 34, 35, 37, 48, 52, 77, 100], "check": [0, 1, 3, 16, 17, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 45, 47, 52, 53, 55, 57, 61, 62, 63, 81, 88, 98, 99, 100], "check_categor": [24, 53], "check_category_ord": [24, 53], "check_column_typ": [24, 53], "check_dtyp": [24, 53], "check_exact": [24, 53], "check_frame_typ": [24, 53], "check_index": [24, 53], "check_index_typ": [24, 53], "check_lik": [24, 53], "check_nam": [24, 53], "check_ord": [24, 53], "check_sam": [24, 53], "check_series_typ": [24, 53], "checker": [21, 34], "checkout": 63, "chess": [24, 41, 95], "chi": [24, 43, 45], "chi2": 45, "chipset": 76, "chisquar": [24, 43], "choic": [24, 37, 41, 74, 82], "choos": [21, 24, 33, 34, 35, 61, 76, 79, 86, 99], "chosen": [3, 24, 33, 36, 86, 94, 96], "chpl": [1, 24, 27, 57, 62, 74, 75, 76, 77], "chpl_comm": [59, 75, 76], "chpl_debug_flag": 1, "chpl_develop": [62, 76], "chpl_flag": [1, 60], "chpl_gasnet_cfg_opt": 59, "chpl_gmp": [75, 76], "chpl_home": [59, 75, 76], "chpl_llvm": [75, 76], "chpl_re2": [75, 76], "chpl_rt_oversubscrib": 59, "chpl_target_compil": 60, "chpl_target_cpu": 76, "chpl_test_timeout": 59, "chplconfig": 75, "chpldoc": [74, 75], "chunk": [4, 8, 17, 24, 25, 27, 36, 47, 52], "chunk_info": [4, 8], "chunk_shap": [24, 27], "ci": 0, "circl": [24, 33], "cl": [2, 24, 88], "clang": [60, 75], "class": [0, 37, 53, 57, 58, 82, 83, 84, 88, 89, 90, 91, 95, 96, 97, 100], "classmethod": [17, 19, 24, 25, 47, 88], "claus": [24, 33, 86], "clean": 74, "clear": [21, 24, 34, 35, 36], "clflush": 58, "clflushopt": 58, "click": [61, 74, 80], "client": [4, 8, 17, 20, 24, 36, 37, 52, 53, 54, 56, 68, 74, 75, 76, 77, 78, 79, 82, 87, 88, 90, 94, 96, 100], "client_dtyp": [24, 27, 56], "clientgeneratedlog": [24, 30], "clip": [16, 21, 24, 33, 34, 35], "clone": 80, "clongdoubl": [24, 35], "clongdoubledtyp": [24, 35], "clongfloat": [24, 35], "close": [0, 3, 24, 37, 54, 57, 65, 89], "clz": [24, 36], "cm_version": 75, "cmake": [75, 78], "cmd": [57, 77], "cmd_filter": 18, "cmov": 58, "co": [7, 22, 24, 33, 37, 82, 86, 91], "coargsort": [20, 24, 49, 82, 85, 88, 90, 100], "code": [1, 17, 21, 24, 25, 27, 34, 35, 43, 49, 53, 61, 62, 65, 67, 77, 82, 85, 88], "codepoint": [21, 24, 34, 35], "coeffici": [24, 36], "coercibl": [24, 35], "col": [24, 33, 40], "col1": [20, 24, 35, 90], "col2": [20, 24, 35, 90], "col2_i": [20, 24], "col2_x": [20, 24], "col3": [20, 24, 35, 90], "col_a": [20, 24], "col_b": [20, 24], "col_c": [20, 24], "col_delim": [20, 24, 25, 27, 36, 52], "col_nam": [24, 27], "cola": 66, "colb": 66, "colc": 66, "collect": [17, 20, 21, 22, 24, 25, 27, 34, 35, 36, 42, 45, 47, 52, 75, 91], "collis": [17, 24, 33, 52], "colnam": [20, 24], "colors2": [24, 25], "column": [3, 5, 17, 20, 22, 24, 25, 27, 36, 40, 47, 48, 49, 51, 52, 53, 65, 66, 69, 70, 83, 85, 91, 96, 97], "column_data": 65, "column_delim": [24, 27, 83], "column_nam": 65, "columnar": 83, "com": [0, 24, 35, 43, 75, 76], "combin": [20, 24, 52, 54, 55, 57, 63], "come": [22, 24, 63, 83, 89, 98], "comma": [24, 35, 58, 66, 74], "command": [18, 23, 24, 36, 57, 58, 59, 61, 63, 72, 74, 76, 77, 78, 79, 99], "command_filt": [18, 23], "commandlin": 58, "commandmap": [18, 57, 77], "comment": [0, 62, 77], "commit": [0, 61], "commit_info": 58, "common": [0, 3, 11, 22, 24, 35, 37, 39, 79, 83, 91, 98, 100], "common_typ": [24, 38], "commonli": 65, "commun": [1, 24, 49, 61, 76, 85, 89], "compar": [17, 21, 24, 25, 33, 34, 36, 45, 52, 53, 61, 81, 83, 100], "compare_kei": [24, 53], "comparison": [58, 66, 88, 94, 96, 100], "compat": [7, 17, 20, 21, 24, 34, 35, 36, 47, 54, 55, 90, 91], "compet": 1, "compil": [18, 24, 35, 52, 60, 63, 64, 74, 75, 76, 77, 79], "compiler_flag": [21, 34], "complement": [24, 35], "complementari": [24, 36], "complet": [17, 18, 20, 24, 35, 36, 45, 47, 52, 57, 59, 61, 74, 99, 100], "complex": [3, 7, 21, 24, 34, 35, 72], "complex128": [21, 24, 34, 35], "complex128dtyp": [24, 35], "complex256": [24, 35], "complex64": [21, 24, 34, 35], "complex64dtyp": [24, 35], "complex_": [21, 24, 34, 35], "complexflo": [21, 24, 34, 35], "compliant": [4, 5], "compon": [3, 17, 19, 20, 22, 24, 25, 26, 35, 36, 47, 48, 52, 54, 55, 58, 67, 69, 91], "compos": [21, 24, 34, 35, 37, 52, 72, 83], "composit": [24, 52], "compress": [17, 20, 21, 24, 25, 27, 34, 35, 36, 47, 52, 58, 93, 96], "compris": 100, "comput": [4, 6, 7, 8, 15, 17, 18, 20, 21, 22, 24, 29, 33, 34, 35, 36, 43, 44, 47, 52, 57, 65, 83, 86, 88, 90, 91, 92, 94, 96, 98, 100], "computation": 65, "compute_join_s": [24, 29], "concat": [11, 20, 24, 25, 47, 48, 90, 97], "concaten": [11, 17, 20, 24, 38, 39, 47, 48, 52, 55, 57, 82, 96, 97, 100], "concept": 88, "concis": 61, "concret": [21, 24, 34, 35], "concurr": [0, 83], "cond": [24, 33, 86], "conda": [72, 75, 76, 78], "conda_prefix": [72, 74], "condens": [24, 47, 96], "condit": [3, 12, 20, 24, 33, 36, 45, 86], "conf": 79, "confid": 45, "config": [18, 57, 77], "configur": [0, 1, 24, 57, 58, 65, 76, 79, 84, 90, 97], "confirm": [0, 61], "conflict": 0, "conform": 57, "conj": [7, 21, 24, 34, 35], "conjug": [7, 21, 24, 34, 35], "conjunct": [17, 24, 83, 88, 100], "connect": [17, 18, 20, 24, 25, 33, 36, 37, 43, 44, 46, 48, 52, 55, 57, 62, 79, 82, 83, 90], "connect_url": [18, 72, 99], "connectionerror": [18, 99], "consecut": [24, 37, 48, 89], "consensu": [0, 61], "consequ": 75, "conserv": [19, 24], "consid": [17, 20, 24, 33, 35, 48, 61, 100], "consider": [22, 24, 98, 100], "consist": [0, 20, 24, 33, 35, 65, 86, 90], "consol": 24, "const": 57, "constant": [16, 20, 22, 24, 36, 82, 91], "constant_tsc": 58, "constant_valu": 16, "construct": [4, 5, 8, 17, 24, 35, 37, 47, 52, 57, 65, 82, 91, 93, 95], "constructor": [17, 21, 24, 34, 35, 41, 47, 65, 88, 95], "consum": [24, 25, 48], "conta": [24, 52, 100], "contain": [3, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 39, 40, 41, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 62, 63, 65, 66, 67, 72, 77, 81, 82, 83, 85, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 100], "content": [1, 66, 83], "contigu": [17, 24, 29, 52], "continu": [0, 45, 61], "contribut": [20, 24, 48], "contributor": [0, 24, 43], "control": [1, 19, 24, 33, 35, 38, 57, 94], "conveni": [24, 35, 75, 76, 83], "convent": [17, 24, 35], "convers": [0, 17, 24, 83, 88, 94, 100], "convert": [4, 5, 8, 17, 19, 20, 21, 24, 25, 33, 34, 35, 36, 37, 45, 47, 48, 52, 53, 54, 55, 66, 83, 88, 90, 94, 96, 97, 98, 100], "convert_byt": 55, "convert_categor": [20, 24, 27], "convert_if_categor": [24, 55], "convert_int": [20, 24], "cool": 0, "coordin": [5, 24, 33, 87], "copi": [4, 5, 6, 8, 11, 14, 20, 21, 22, 24, 25, 27, 33, 34, 35, 38, 41, 47, 49, 53, 95, 96], "core": [20, 23, 24, 58, 61, 90], "corr": [20, 24, 36], "correct": [3, 15, 20, 24, 62, 75, 79, 81, 90], "correctli": [20, 24, 79, 90], "correl": [20, 24, 36], "correspond": [3, 4, 8, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 43, 46, 47, 48, 52, 55, 67, 69, 83, 86, 88, 90, 91, 92, 93, 96, 97, 100], "cosh": [7, 24, 33], "cosin": [7, 24, 33, 86], "cosort": [3, 24], "cosorted": [3, 24], "cost": [17, 24, 88], "could": [4, 8, 24, 36, 40, 47, 52, 57, 62, 77, 100], "count": [13, 20, 21, 22, 24, 32, 33, 34, 35, 36, 47, 48, 52, 58, 65, 82, 86, 91, 96, 100], "count_nonzero": [24, 33], "counter_nam": 58, "counterpart": 57, "coupl": 62, "cours": [24, 36], "cov": [24, 36], "covari": [24, 36], "cpp": 74, "cpu": 58, "cpuid": 58, "cpuinfo_vers": 58, "cpuinfo_version_str": 58, "cpython": 58, "crazi": 1, "creat": [0, 5, 11, 17, 19, 20, 21, 22, 24, 25, 27, 28, 32, 34, 35, 36, 37, 40, 45, 47, 48, 50, 51, 52, 54, 56, 57, 58, 61, 63, 67, 69, 72, 74, 75, 76, 77, 78, 79, 82, 83, 87, 88, 90, 91, 92, 94, 95], "create_pdarrai": [24, 57], "create_sparrai": 50, "creation": [4, 8, 17, 24, 35, 61, 82], "creation_funct": [8, 56], "cressi": [24, 43], "critic": [24, 30], "crucial": 62, "cryptograph": [24, 33], "csc": 50, "csingl": [21, 24, 34, 35], "csr": 50, "csv": [20, 24, 25, 27, 36, 52, 70, 83], "csv_output": [20, 24], "ctrl": 62, "ctz": [24, 36], "cuda": [24, 36], "cumprod": [21, 24, 33, 34, 35, 82, 86], "cumsum": [21, 24, 33, 34, 35, 82, 86], "cumul": [15, 24, 33, 40, 45, 81, 86], "cumulative_sum": 15, "curl": 75, "current": [0, 11, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 41, 46, 50, 52, 60, 61, 62, 66, 67, 68, 69, 75, 76, 80, 83, 84, 86, 88, 89, 90, 91, 92, 94, 95, 96, 99, 100], "current_arkouda_vers": 67, "custom": [2, 24, 30, 57, 66, 74, 92], "customiz": 83, "cut": [60, 61, 63], "cutoff": [24, 35], "cwd": [24, 27, 36], "cx16": 58, "cx8": 58, "cycl": [76, 78], "d": [0, 4, 8, 17, 20, 21, 24, 25, 34, 35, 37, 38, 39, 40, 41, 47, 48, 52, 54, 55, 57, 65, 81, 95, 96, 98, 100], "dai": [20, 24, 54, 61, 90, 91], "darwin": [46, 76], "dash": 61, "dask": [4, 8], "data": [2, 4, 5, 6, 8, 11, 17, 19, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 65, 68, 70, 71, 82, 84, 85, 87, 88, 89, 91, 96, 97, 99, 100], "data2": 55, "data_type_funct": [8, 56], "databas": [20, 24], "datafram": [2, 24, 25, 27, 40, 42, 48, 53, 56, 68, 83, 97], "dataframegroupbi": [20, 24, 90], "datalimit": [20, 24, 90], "datapar": 76, "dataset": [17, 19, 20, 22, 24, 25, 27, 36, 47, 52, 66, 67, 69, 70, 91, 100], "dataset_nam": [24, 27, 83], "datasetnam": [24, 27, 83], "datasourc": [24, 35], "datatyp": [24, 37, 44, 50, 67], "date": [24, 35, 54, 61], "date_oper": [2, 24], "date_rang": [24, 54], "datefram": [20, 24, 90], "dateoffset": [24, 54], "datetim": [24, 27, 35, 37, 54, 58], "datetime64": [24, 35, 37, 54], "datetime64dtyp": [24, 35], "datetimeaccessor": [2, 24], "datetimeindex": [24, 54], "dateutil": 78, "datsetnam": [24, 27], "day_of_week": [24, 54], "day_of_year": [24, 54], "dayofweek": [24, 54, 91], "dayofyear": [24, 54], "dd": 61, "ddof": [22, 24, 36, 43, 54, 86, 91, 92], "de": 58, "deactiv": 74, "deal": [19, 24], "debandi99": 0, "debug": [24, 30, 59, 63], "decid": 0, "decim": [24, 35, 52], "decod": [20, 21, 22, 24, 34, 35, 45, 48, 52], "decompos": 11, "decor": [24, 35], "decreas": [24, 36, 37, 62, 86, 89, 92], "dedup": [20, 24, 90], "dedupl": 82, "deep": [24, 47, 90], "def": [57, 66, 77], "default": [1, 3, 5, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 48, 52, 53, 54, 55, 58, 60, 66, 67, 72, 76, 77, 81, 83, 86, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100], "default_log_format": 24, "default_rng": [20, 24, 41, 82, 95], "defaultt": [24, 30], "defici": [24, 35], "defin": [3, 4, 17, 19, 20, 21, 22, 23, 24, 25, 27, 30, 33, 34, 35, 36, 37, 45, 47, 48, 52, 54, 57, 61, 87, 88, 89, 90, 91, 92, 94], "definit": [24, 25], "deg2rad": [24, 33], "degener": 11, "degrad": [24, 36, 86], "degre": [15, 22, 24, 33, 36, 43, 45, 86, 91, 92], "degred": [24, 36, 86], "deleg": [24, 33, 37, 41, 89, 92], "delet": [17, 18, 19, 20, 22, 24, 25, 27, 28, 35, 36, 38, 47, 48, 52, 54, 58, 63, 72, 91], "delete_directori": 28, "delimit": [20, 24, 25, 27, 28, 36, 48, 50, 52, 58, 61, 66, 83, 100], "delimited_file_to_dict": 28, "delta": [22, 24, 29, 36, 43, 86, 91, 92], "demo": 65, "demonstr": [0, 57], "denom": [24, 33], "denomin": [21, 24, 33, 34, 35, 36], "denorm": [24, 35], "denormal_numb": [24, 35], "denot": [20, 24, 25, 27, 36, 45, 52, 54], "dens": [3, 17, 22, 24, 91], "densiti": [24, 41, 45, 51, 95], "dep": [1, 74, 75, 76], "depend": [12, 20, 24, 27, 35, 36, 67, 75, 76, 79, 80, 86, 96], "deprec": [17, 20, 22, 24, 25, 27, 35, 36, 47, 48, 52, 54, 61, 83, 91], "deprecate_with_doc": [24, 35], "deprecationwarn": [24, 35], "dequ": [24, 37, 83], "deriv": [21, 24, 27, 28, 30, 33, 34, 41, 52, 94, 95], "descend": [14, 20, 24, 37, 48, 89, 90, 97], "describ": [24, 41, 57, 61, 95], "descript": [24, 35, 58, 61, 65, 82], "descriptor": [2, 21, 24, 34, 35, 52], "design": [0, 21, 24, 34, 35, 61, 78, 83], "desir": [3, 18, 19, 24, 33, 36, 37, 41, 46, 58, 59, 72, 77, 86, 89, 92, 94, 95, 99, 100], "destin": [11, 24, 35], "destpath": [24, 35], "detail": [0, 11, 21, 24, 26, 34, 35, 36, 45, 58, 61, 74, 75, 76, 78, 92, 99, 100], "detect": [20, 24, 27, 48, 67, 83], "determin": [6, 7, 11, 17, 20, 22, 24, 25, 27, 33, 35, 36, 38, 47, 52, 55, 61, 67, 77, 83, 88, 90, 91], "determinist": [17, 24, 39, 48, 89], "dev": [0, 75, 76, 78], "devel": 75, "develop": [1, 17, 24, 35, 61, 62, 63, 75, 76, 77, 80, 83], "deviat": [15, 22, 24, 36, 37, 41, 45, 54, 86, 91, 92, 95], "devic": [4, 5, 8, 24, 35], "devicend": [24, 36], "devicendarrai": [24, 36], "devtoolset": 75, "df": [2, 20, 24, 45, 65, 90], "df1": [20, 24, 53], "df2": [20, 24, 53], "df_deep": 90, "df_shallow": 90, "diag": [24, 33], "diagon": [5, 21, 24, 33, 34, 35], "dic": [24, 53], "dict": [4, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 34, 35, 41, 42, 48, 53, 55, 90, 91, 95], "dict_to_delimited_fil": 28, "dictionari": [17, 18, 20, 21, 22, 24, 27, 28, 34, 35, 41, 52, 53, 55, 77, 83, 90, 91, 95], "did": [0, 18], "diff": [16, 20, 24, 48], "diffaggreg": [20, 24], "differ": [3, 4, 7, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 33, 34, 35, 36, 37, 39, 46, 47, 48, 52, 53, 54, 55, 58, 63, 65, 66, 67, 69, 75, 76, 82, 83, 87, 89, 90, 91, 92, 98, 99], "differenc": [20, 24], "differenti": 45, "difficult": 77, "digit": [24, 35, 49, 52, 85], "dimens": [3, 4, 8, 11, 12, 15, 16, 17, 20, 21, 24, 25, 27, 33, 34, 35, 36, 50, 52, 65, 67, 88, 94, 96], "dimension": [3, 4, 8, 20, 24, 27, 33, 35, 37, 48, 83, 94, 97], "dir": 28, "direct": [3, 24, 61, 67, 74], "directli": [4, 8, 17, 20, 24, 36, 48, 49, 50, 52, 65, 74, 85, 87, 88, 90, 94, 100], "directori": [17, 20, 22, 24, 25, 27, 28, 35, 36, 46, 47, 52, 58, 59, 62, 63, 72, 74, 75, 76, 77, 78, 79, 80, 81, 91], "dirti": 58, "disabl": [24, 30, 59], "disable_gc": 58, "disableverbos": [24, 30], "disallow": [20, 22, 24, 91], "discard": [3, 17, 24, 88], "discard_empti": [24, 47], "disconnect": [18, 24, 36], "discourag": [87, 88, 90, 94, 96, 100], "discov": 77, "discret": [16, 24, 41, 95], "discrimin": [24, 35], "discuss": 0, "disk": [20, 24, 25, 27, 36, 52, 100], "disp": [24, 35], "dispatch": [24, 53], "displai": [1, 19, 20, 24, 25, 35, 40, 45, 48, 55, 74, 79, 90], "dist": 74, "distanc": [24, 35], "distinct": [17, 20, 24, 88], "distribut": [4, 8, 17, 19, 20, 22, 24, 25, 27, 36, 37, 40, 41, 45, 47, 51, 52, 72, 75, 76, 83, 86, 88, 89, 91, 94, 95, 98, 100], "distro": 75, "div": [24, 36], "diverg": [24, 43], "divid": [7, 24, 36], "dividend": [24, 36], "divis": [7, 24, 36], "divisor": [22, 24, 36, 86, 91], "divmod": [24, 36], "djkba": [24, 37], "dlpack": 5, "do": [1, 3, 17, 18, 20, 22, 24, 25, 27, 33, 35, 36, 41, 47, 48, 52, 53, 58, 62, 63, 74, 75, 77, 78, 80, 86, 87, 90, 91, 95, 97], "doc": [0, 20, 24, 35, 43, 48, 57, 74, 75, 87], "docstr": [4, 7, 8, 24, 35, 57], "docstring1": [24, 35], "docstring2": [24, 35], "document": [0, 1, 24, 35, 45, 56, 57, 58, 62, 63, 65, 70, 76, 77], "doe": [17, 18, 20, 21, 22, 24, 25, 27, 28, 34, 35, 36, 37, 40, 45, 47, 48, 52, 53, 62, 65, 67, 69, 83, 88, 89, 90, 91, 94, 97, 99, 100], "doesn": [0, 20, 24, 57, 61, 74], "dog": [20, 24, 48], "doi": [24, 35], "domain": [3, 24], "don": [0, 3, 4, 8, 20, 21, 24, 27, 34, 39, 52, 62, 63, 79], "done": [0, 20, 24, 63, 74, 77, 90], "dot": [24, 33, 36, 61], "doubl": [21, 24, 34, 35, 57], "doubt": [0, 61], "down": [18, 60, 61, 63, 72, 74, 77], "download": [24, 35, 72, 75, 76, 80], "draft": 61, "dragon4": [24, 35], "draw": [24, 37, 41, 95], "drawn": [24, 37, 41, 89, 95], "drop": [20, 21, 22, 24, 34, 36, 61, 86, 91], "drop_dupl": [20, 24, 90], "dropna": [20, 22, 24, 82, 90, 91], "dt": [21, 24, 29, 33, 34, 35, 48, 94], "dtype": [3, 4, 5, 6, 8, 15, 17, 20, 22, 24, 25, 27, 29, 32, 33, 35, 36, 37, 38, 39, 41, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 95, 98, 100], "dtype_lik": [24, 35], "dtypeobject": [21, 24, 34, 35], "due": [17, 20, 24, 27, 66, 69, 83], "dump": [21, 24, 34, 35], "duplcat": [20, 24, 90], "duplic": [0, 3, 20, 24, 39, 90], "durat": [24, 54], "dure": [0, 1, 24, 27, 55, 63, 65, 67, 68, 77, 78], "dx": [24, 35], "dynam": 24, "e": [0, 1, 2, 3, 7, 17, 19, 20, 21, 22, 24, 27, 33, 34, 35, 36, 37, 41, 47, 48, 52, 54, 61, 62, 63, 72, 74, 75, 76, 78, 83, 86, 88, 89, 91, 95, 96, 99, 100], "each": [3, 11, 13, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 47, 48, 50, 52, 54, 55, 57, 58, 65, 67, 74, 77, 83, 86, 88, 90, 91, 92, 94, 95, 96, 97, 98, 100], "eager": 78, "earli": 0, "earlier": [55, 65], "easi": [0, 24, 30, 58, 61, 65, 74], "easier": [24, 35], "easiest": 62, "easili": 65, "echo": [72, 74], "edg": [16, 24, 33, 40, 92], "edit": [24, 35], "effect": [20, 24, 35, 54, 63, 98], "effici": [17, 20, 24, 25, 36, 52, 96, 100], "egg": [24, 35], "either": [0, 12, 17, 20, 21, 22, 24, 26, 27, 33, 34, 35, 36, 37, 39, 41, 47, 48, 57, 72, 77, 79, 83, 91, 95, 96, 97, 98], "el7": 75, "elect": [67, 68], "element": [4, 5, 7, 8, 9, 11, 12, 15, 16, 17, 20, 21, 22, 24, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 47, 48, 50, 51, 52, 53, 54, 57, 65, 77, 82, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100], "elementwis": [24, 36], "elementwise_funct": [8, 56], "elimin": [17, 24, 69], "elk": [20, 24, 48], "ellips": 61, "ellipsi": [4, 5, 6, 8, 11, 12, 15, 16, 24, 36, 37, 41, 55], "elo": [24, 41, 95], "els": [0, 20, 21, 24, 34, 35, 48, 57, 61], "elsewher": [5, 24, 33, 36, 41, 86, 95], "emit": [24, 35], "emploi": [24, 33], "empti": [3, 5, 19, 20, 21, 22, 24, 27, 33, 34, 35, 36, 39, 47, 48, 52, 74, 86, 89, 90, 92, 97], "empty_lik": 5, "en": [24, 35, 43, 57], "enabl": [3, 18, 24, 30, 36, 46, 62, 74, 75, 77, 83, 99], "enableverbos": [24, 30], "encapsul": [24, 37, 46, 52], "encod": [20, 21, 22, 24, 34, 35, 45, 48, 52, 58, 100], "encoding_benchmark": 58, "encount": [0, 24, 27], "encourag": [75, 76], "end": [3, 5, 16, 17, 20, 24, 29, 31, 33, 36, 37, 47, 52, 54, 60, 82, 88, 89, 93, 96, 100], "endian": [21, 24, 34, 35], "endpoint": [5, 24, 41, 95], "endswith": [17, 24, 52, 82, 88, 100], "enforc": [24, 33], "engin": [24, 33], "enough": [21, 24, 34, 35, 47, 52, 57, 67, 75, 76, 96], "enrich_inplac": 55, "ensur": [0, 3, 20, 24, 27, 33, 39, 53, 61, 67, 74, 76, 90, 94], "enter": [24, 48, 83, 97], "entir": [15, 20, 24, 33, 47, 52, 58, 63, 90, 96], "entiti": [24, 52], "entri": [3, 5, 17, 20, 24, 25, 36, 48, 52, 53, 57, 58, 90], "entropi": 45, "enum": [21, 24, 30, 33, 34, 35, 67], "enumer": [21, 24, 30, 33, 34, 35], "env": [1, 24, 62, 72, 74, 75, 76, 78], "env_nam": 78, "environ": [46, 58, 77, 78], "environmenterror": 46, "ep": [6, 24, 35], "epidemiologi": [24, 41, 95], "epsneg": [24, 35], "eql_kwarg": [24, 53], "equal": [7, 11, 17, 20, 21, 22, 24, 25, 29, 33, 34, 35, 36, 41, 45, 50, 51, 52, 53, 67, 69, 91, 92, 95, 96], "equal_level": [24, 25], "equal_nan": [24, 33], "equiv": [24, 38, 53], "equival": [3, 17, 20, 22, 24, 25, 27, 33, 35, 36, 37, 38, 39, 45, 49, 52, 53, 54, 55, 62, 65, 85, 86, 87, 89, 98], "erm": 58, "err_msg": [24, 53], "error": [17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 45, 47, 48, 50, 52, 54, 67, 69, 79, 83, 86, 87, 88, 90, 91, 92, 94, 99, 100], "errormod": [24, 33, 94], "especi": [0, 17, 20, 24, 63, 76, 88], "essenti": [20, 24, 36, 47, 52, 90, 96], "estim": [20, 22, 24, 36, 45, 86, 90, 91], "etc": [20, 24, 33, 48, 61, 75, 79], "ethan": 0, "euler_gamma": [24, 35], "eval": [72, 74], "evalu": [3, 16, 20, 24, 36, 86, 92], "even": [17, 20, 21, 22, 24, 33, 34, 35, 36, 67, 86, 90, 91, 99], "evenli": [5, 24, 33, 37, 89, 92], "event": [24, 41, 95], "everi": [0, 1, 3, 20, 24, 35, 58, 90, 100], "everyth": [20, 24, 48, 60, 61], "everywher": [24, 33], "evolv": 61, "ewab": [24, 37], "exact": [24, 53, 76], "exactli": [21, 22, 24, 34, 35, 53, 54], "exampl": [0, 3, 4, 8, 17, 18, 20, 21, 22, 24, 25, 27, 31, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 47, 48, 49, 52, 53, 54, 55, 58, 61, 67, 72, 76, 77, 79, 83, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100], "example_featur": 0, "exce": [17, 20, 24, 36, 37, 41, 52, 54, 55, 83, 87, 88, 89, 90, 94, 100], "exceed": [24, 35], "excel": 61, "except": [0, 11, 33, 35, 57, 65, 75, 100], "exchang": 100, "exclud": [3, 22, 24, 39, 77, 91], "exclus": [1, 5, 24, 29, 37, 39, 41, 65, 89, 93, 95, 98], "execut": [1, 18, 23, 24, 27, 36, 52, 57, 59, 60, 62, 63, 66, 74, 75, 77, 88, 99], "exhaust": [65, 67], "exist": [17, 18, 20, 22, 24, 25, 27, 28, 35, 36, 37, 47, 48, 52, 67, 69, 74, 89, 90, 91, 99], "exist_ok": [20, 24], "exit": [72, 79], "exp": [7, 24, 33, 37, 41, 45, 82, 86, 95], "exp1m": [24, 33], "exp_digit": [24, 35], "expand": [11, 17, 20, 24, 25, 27, 36, 47, 52, 55, 83], "expand_dim": 11, "expandus": 46, "expans": 93, "expect": [0, 20, 22, 24, 25, 27, 36, 41, 43, 45, 52, 58, 67, 75, 76, 83, 91, 94, 95], "expens": [17, 24, 35], "experi": [0, 83], "experiment": [24, 52, 100], "explan": [24, 35], "explicit": [67, 94], "explicitli": [1, 20, 24, 39, 77, 98], "explod": 75, "expm1": [7, 24, 33], "expon": [21, 24, 34, 35], "exponenti": [7, 24, 33, 41, 82, 86], "export": [19, 24, 27, 33, 59, 62, 74, 75, 76, 79, 92], "export_uint": [19, 24], "expos": [20, 21, 22, 24, 34, 35, 41, 45, 48, 94, 95], "express": [3, 17, 24, 27, 35, 52, 58, 82, 83, 88, 90, 93, 94], "extend": [24, 35], "extens": [2, 17, 24, 25, 27, 36, 47, 52, 74, 83], "extent": 58, "extra": [20, 24, 48], "extra_info": 58, "extract": 91, "extrem": [24, 41, 65, 67, 69, 95], "ey": [5, 24, 33], "f": [17, 20, 21, 24, 33, 34, 35, 37, 41, 45, 52, 57, 72, 75, 76, 78, 83, 86, 95, 100], "f0": [24, 35], "f1": [24, 35], "f16c": 58, "f2": [24, 35], "f4": [24, 35], "f8": [24, 35], "f_exp": [24, 43], "f_name": 65, "f_ob": [24, 43], "face": [24, 47, 61, 94], "fact": 69, "factori": [24, 25, 52], "fail": [0, 4, 8, 20, 24, 27, 33, 35, 61, 83, 90, 94], "failur": [0, 24, 27, 74, 83], "fall": [0, 11, 55], "fals": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 41, 45, 47, 48, 52, 53, 54, 55, 58, 65, 81, 83, 84, 86, 88, 89, 90, 91, 94, 95, 96, 98, 100], "false_": [24, 35], "famili": 58, "fast": [1, 17, 21, 24, 34, 52], "faster": [3, 17, 24, 35, 39, 62, 88, 98], "featur": [21, 34, 59, 60, 61, 62, 64, 74, 77, 82, 83, 91], "feder": [24, 41, 95], "feed": [24, 35], "feedback": 0, "feel": 0, "fetch": [61, 63], "few": [24, 33, 65], "fewer": [24, 35], "ffffp10": [21, 24, 34, 35], "fide": [24, 41, 95], "field": [19, 21, 24, 34, 35, 37, 52, 61, 83, 100], "fig": 45, "figur": [24, 35, 40, 63], "file": [0, 1, 17, 18, 20, 22, 24, 25, 27, 28, 35, 36, 46, 47, 48, 52, 57, 59, 62, 63, 68, 69, 72, 74, 75, 76, 78, 79, 91, 100], "file_format": [17, 20, 24, 25, 27, 36, 47, 52], "file_typ": [17, 19, 20, 22, 24, 25, 27, 36, 47, 52, 91], "file_vers": 67, "filenam": [17, 20, 22, 24, 25, 27, 36, 47, 52, 58, 83, 91], "filename_cod": [24, 27], "filenotfound": [24, 27], "filetyp": [24, 27, 83], "fill": [5, 20, 21, 22, 24, 34, 35, 36, 37, 41, 48, 58, 81, 89, 91, 95], "fill_valu": [5, 24, 37], "fill_values1": [24, 48], "fill_values2": [24, 48], "fill_values3": [24, 48], "fillna": [24, 48], "fillvalu": [3, 24], "filname_cod": [24, 27], "filter": [0, 20, 23, 24, 47, 83], "filter_by_rang": [20, 24], "filtered_df": [20, 24], "final": [57, 58, 61, 74], "find": [0, 3, 12, 17, 20, 22, 24, 32, 36, 39, 46, 48, 52, 55, 58, 61, 64, 72, 75, 86, 91, 92, 98, 100], "find_loc": [24, 32, 52, 82, 100], "find_match": [31, 82, 100], "findal": [24, 32, 52, 82, 100], "fine": 57, "finfo": [6, 24, 35], "finfo_object": 6, "finit": [7, 16, 21, 24, 33, 34, 35], "firewal": 79, "first": [0, 3, 4, 8, 11, 12, 13, 15, 20, 21, 22, 24, 25, 27, 28, 33, 34, 35, 36, 37, 38, 45, 48, 52, 53, 55, 59, 63, 64, 65, 66, 67, 72, 74, 75, 77, 82, 83, 86, 89, 90, 91, 92, 97, 100], "fit": [0, 21, 24, 34, 35, 45, 58, 61, 83], "five": [3, 24, 35, 39, 52, 89, 100], "fix": [0, 24, 33, 41, 45, 54, 61, 79, 95, 100], "fixed_len": [24, 27, 83], "flag": [19, 21, 24, 27, 34, 35, 40, 58, 63, 77, 83, 99], "flake8": [0, 78], "flat": [21, 24, 34, 35, 52, 100], "flatten": [11, 12, 21, 24, 29, 34, 35, 38, 47, 52, 67, 82, 96], "flexibl": [24, 35, 67], "flip": 11, "float": [3, 5, 6, 7, 15, 18, 20, 21, 22, 24, 27, 33, 34, 35, 36, 37, 41, 45, 51, 53, 55, 83, 86, 89, 90, 91, 92, 94, 95], "float128": [24, 35], "float16": [21, 24, 34, 35], "float16dtyp": [24, 35], "float32": [21, 24, 34, 35, 92], "float32dtyp": [24, 35], "float64": [5, 20, 21, 22, 24, 25, 33, 34, 35, 36, 37, 39, 41, 43, 44, 49, 53, 57, 58, 66, 67, 81, 85, 86, 89, 90, 91, 92, 94, 98], "float64dtyp": [24, 35], "float_": [21, 24, 34, 35], "float_scalar": [21, 24, 34, 35, 36, 37, 41], "floor": [7, 24, 33, 35, 36], "floor_divid": [7, 24, 36], "floordivis": [24, 36], "fluid": [17, 19, 20, 22, 24, 25, 36, 47, 48, 52, 54, 91], "flush": [24, 35], "flush_l1d": 58, "fma": 58, "fmod": [24, 36], "fname": 65, "focus": 62, "folder": 74, "folk": 1, "follow": [0, 1, 3, 18, 21, 24, 33, 34, 35, 43, 57, 58, 59, 61, 72, 74, 75, 76, 77, 78, 79, 80, 86, 88, 91, 94, 96, 98, 99, 100], "foo": [0, 2, 24], "foo_test": 0, "foobar": [24, 35], "foopar": 0, "forc": [21, 24, 34, 35, 87, 88, 90, 94, 100], "forget": [63, 79], "fork": [0, 74, 75, 76, 80], "form": [17, 21, 24, 25, 33, 34, 35, 36, 45, 46, 47, 52, 61, 77, 100], "format": [4, 8, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 34, 35, 36, 46, 47, 48, 52, 57, 65, 67, 68, 69, 77, 90, 96, 99, 100], "format_float_posit": [24, 35], "format_float_scientif": [24, 35], "format_oth": [24, 36], "format_pars": [24, 35], "former": [24, 36, 52, 100], "fortran": 94, "forward": [24, 49, 79, 85, 96], "found": [1, 3, 12, 20, 21, 24, 25, 27, 34, 35, 36, 39, 52, 58, 65, 69, 75, 77, 79], "four": [3, 24, 39, 45, 52, 54, 89, 100], "fp": [24, 37], "fpu": 58, "frac": [20, 22, 24, 41, 45, 91, 95], "fraction": [20, 22, 24, 35, 51, 91], "frame": [20, 24, 48, 90, 97], "frameon": 45, "free": [24, 36, 52], "freedom": [15, 22, 24, 36, 43, 45, 86, 91, 92], "freeman": [24, 43], "freez": 45, "freq": [24, 54], "frequenc": [1, 24, 43, 54], "frequent": [24, 48, 77, 97], "friendli": [20, 24, 48], "from": [0, 3, 4, 5, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 52, 53, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 72, 74, 75, 77, 79, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100], "from_": 6, "from_cod": [17, 24, 82, 88], "from_dlpack": 5, "from_multi_arrai": [24, 47], "from_panda": [20, 24], "from_part": [24, 47, 52], "from_return_msg": [17, 19, 20, 22, 24, 25, 47, 48, 52], "from_seri": [24, 37], "fromencod": [24, 52], "fromhex": [21, 24, 34, 35], "fromkei": [21, 24, 34, 35], "fromright": [24, 52, 100], "front": [24, 35], "frontend": 74, "frozen": 45, "frozenset": [21, 22, 24, 34, 35], "frustrat": 63, "fsgsbase": 58, "fsspec": [20, 24, 48], "ftp": [24, 35], "full": [5, 17, 24, 31, 33, 37, 40, 45, 52, 54, 60, 62, 72, 76, 80, 88, 100], "full_lik": [5, 24, 37], "full_match_bool": 32, "full_match_ind": 32, "fullmatch": [24, 52, 82, 100], "fullnam": 58, "func": [24, 35, 45], "funcion": 77, "functioanl": 96, "function": [0, 1, 8, 17, 45, 48, 52, 58, 61, 62, 65, 66, 68, 69, 72, 77, 82, 83, 84, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 100], "furo": 78, "further": [75, 76, 80], "futur": [1, 19, 24, 27, 52, 83, 92, 95], "fxsr": 58, "g": [2, 17, 19, 20, 21, 22, 24, 27, 33, 34, 35, 36, 47, 48, 52, 54, 55, 62, 63, 65, 83, 86, 88, 89, 91, 96, 99, 100], "gain": [57, 61], "gamma": 45, "gap": [24, 35], "gasnet": [63, 64, 75, 76], "gasnet_masterip": 59, "gasnet_quiet": 59, "gasnet_route_output": 59, "gasnet_spawnfn": 59, "gasnet_workerip": 59, "gasnetsetup": 59, "gather": [58, 82], "gaussian": [24, 41, 95], "gawk": 75, "gb": [18, 20, 24, 25, 48, 55], "gb_key_nam": [20, 24], "gc": [20, 24, 48], "gcc": [58, 75], "gen_rang": [24, 29], "gener": [17, 18, 20, 21, 22, 23, 24, 29, 30, 33, 34, 35, 36, 37, 40, 41, 43, 45, 46, 48, 54, 56, 57, 58, 62, 63, 65, 66, 67, 69, 74, 75, 79, 81, 82, 83, 86, 89, 91, 95, 97], "generate_histori": 18, "generate_token": 46, "generate_username_token_json": 46, "generic_concat": [24, 55], "generic_mo": 45, "generic_msg": [57, 77], "gentyp": [21, 24, 34, 35], "genuineintel": 58, "get": [4, 7, 8, 9, 18, 20, 21, 23, 24, 27, 33, 34, 35, 47, 48, 58, 61, 62, 63, 79, 83, 87, 94, 96], "get_arkouda_client_directori": 46, "get_byt": [24, 52], "get_byteord": [21, 24, 34, 35], "get_callback": [24, 55], "get_column": [24, 27, 66, 70], "get_config": [0, 18], "get_dataset": [24, 27, 66, 70, 83], "get_directori": 28, "get_filetyp": [24, 27], "get_home_directori": 46, "get_jth": [24, 47, 82, 96], "get_length": [24, 52], "get_length_n": [24, 47, 82, 96], "get_level_valu": [24, 25], "get_match": 32, "get_max_array_rank": 18, "get_mem_avail": 18, "get_mem_statu": 18, "get_mem_us": 18, "get_ngram": [24, 47, 82, 96], "get_null_indic": [24, 27], "get_offset": [24, 52], "get_prefix": [24, 47, 52, 82, 96], "get_server_byteord": [21, 24, 34, 35], "get_server_command": 18, "get_suffix": [24, 47, 52, 82, 96], "get_usernam": 46, "getarkoudalogg": 24, "getcwd": [20, 24], "getdefaultencod": [20, 21, 22, 24, 34, 35, 45, 48], "getfield": [21, 24, 34, 35], "getmandatoryreleas": [21, 34], "getmodulenam": 77, "getoptionalreleas": [21, 34], "getter": [24, 52], "getvalu": [24, 35], "gfile": [24, 35], "ghi": 66, "ghpage": 74, "ghz": 58, "gib": 58, "git": [0, 63, 75, 76], "github": [0, 24, 43, 61, 63, 74, 75, 76, 80], "gitk": 61, "give": [24, 33, 35, 36, 48, 66, 78, 97, 99], "given": [3, 5, 12, 15, 16, 17, 20, 21, 22, 24, 27, 33, 34, 35, 36, 37, 39, 41, 45, 48, 52, 54, 55, 58, 78, 83, 88, 89, 90, 91, 95, 100], "glob": [24, 27, 83], "global": [4, 8], "gmp": 76, "gnu": [60, 79], "go": [22, 24, 61, 63, 75, 79, 89], "goal": 4, "good": [0, 61, 63], "googl": [24, 35, 100], "got": 63, "gottfri": [31, 100], "gpu": [24, 36], "grab": [24, 35], "gradient": [24, 35], "gram": [24, 47, 96], "graph": [24, 40, 91], "graphic": 61, "greater": [7, 24, 37, 41, 89, 95], "greater_equ": 7, "greatli": [17, 24, 39, 48, 89], "green": [24, 25, 61], "grep": [74, 79], "grid": [20, 24, 40, 48], "group": [1, 6, 17, 20, 22, 24, 31, 47, 48, 49, 52, 58, 65, 67, 82, 85, 88, 90, 91, 97, 98, 100], "group_ani": [22, 24, 91], "group_argmaxima": [22, 24, 91], "group_argminima": [22, 24, 91], "group_maxima": [22, 24, 91], "group_mean": [22, 24, 91], "group_median": [22, 24, 91], "group_minima": [22, 24, 91], "group_num": [31, 100], "group_nuniqu": [22, 24, 91], "group_product": [22, 24, 91], "group_std": [22, 24, 91], "group_sum": [22, 24, 91], "group_var": [22, 24, 91], "groupabl": [22, 24, 39, 91, 98], "groupable_element_typ": [22, 24, 48, 97], "groupbi": [17, 20, 22, 24, 27, 47, 52, 55, 82, 88, 100], "groupby_reduction_typ": [22, 24], "groupbyclass": [20, 24, 39, 56, 90, 98], "grow": [24, 36, 86], "guarante": [17, 24, 49, 52, 85, 95, 100], "guid": [57, 72, 74, 75, 76], "guidelin": [61, 100], "guido": [24, 35], "gumbel": [24, 41, 95], "gz": [72, 74, 75, 76], "gzip": [17, 20, 24, 25, 27, 36, 47, 52, 58, 69], "h": [21, 24, 33, 34, 35, 40, 54, 81, 92, 99], "h5": [24, 27, 36, 83], "h5l": [24, 27], "h5py": [78, 83], "ha": [0, 4, 8, 17, 19, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 37, 39, 41, 47, 48, 52, 54, 55, 57, 59, 61, 62, 66, 67, 77, 83, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "half": [3, 5, 21, 24, 34, 35, 41, 95], "hand": [3, 24, 51, 61, 93], "handl": [17, 18, 20, 24, 33, 35, 52, 57, 68, 83, 88, 90, 94, 100], "handled_funct": 4, "handler": [20, 21, 22, 24, 34, 35, 45, 48], "happen": [57, 61], "has_non_float_nul": [24, 27, 83], "has_repeat_label": [24, 48], "hash": [17, 24, 33, 47, 49, 52, 85], "hasnan": [24, 48], "have": [0, 1, 3, 4, 8, 11, 17, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 52, 53, 54, 55, 57, 60, 61, 62, 63, 65, 66, 67, 69, 74, 75, 76, 77, 78, 83, 86, 88, 89, 90, 91, 94, 95, 96, 97], "hd15iqr": 58, "hdf5": [1, 17, 20, 22, 24, 25, 27, 36, 47, 52, 66, 68, 69, 70, 74, 78, 83, 91, 100], "hdf5_output": [20, 24], "hdf_output": [20, 24], "head": [20, 22, 24, 48, 61, 82, 91], "header": [20, 24, 25, 27, 36, 52, 83], "healthcheck": 18, "heavi": [24, 37], "hei": 61, "hello": [24, 33, 52, 83, 100], "hello3": 76, "help": [0, 19, 24, 77], "helper": [19, 24, 55], "henc": [24, 33], "here": [1, 24, 35, 52, 55, 58, 59, 62, 63, 64, 65, 67, 69, 74, 75, 76, 77, 78, 79, 80, 99], "heroic": 60, "hex": [21, 24, 34, 35], "hexadecim": [21, 24, 34, 35], "hexidecim": 46, "hf": [24, 37], "hff": [24, 37], "hfmd": [24, 37], "hi": [24, 33], "hide": [24, 35], "hierarch": [3, 24], "hierarchi": [24, 35], "high": [3, 19, 20, 24, 33, 36, 37, 41, 65, 89, 95], "higher": [24, 33], "highest": [20, 24, 35, 36, 37], "highli": 75, "highlight": [1, 61, 65], "hist": [24, 33, 45], "hist_al": [24, 40], "hist_fil": 23, "histogram": [24, 33, 35, 40, 45, 82], "histogram2d": [24, 33, 92], "histogramdd": [24, 33], "histor": [24, 35], "histori": [0, 18, 24, 56, 61], "historyaccessor": 23, "historyretriev": 23, "histtyp": 45, "hit": 62, "hog": 63, "hold": [24, 33, 45, 94], "hole": [24, 48], "home": [24, 35, 46, 74, 77], "homebrew": [62, 74], "homepag": 74, "homogen": [20, 24, 90], "hong_kong": [24, 54], "horizont": [24, 47, 48, 96, 97], "host": [18, 20, 24, 46, 48, 74], "hostnam": [1, 17, 18, 20, 24, 27, 36, 47, 52, 62, 72, 81, 99], "hour": [24, 54], "hous": 79, "how": [0, 4, 8, 17, 19, 20, 24, 25, 27, 33, 35, 36, 47, 52, 57, 58, 61, 66, 78, 87, 91, 94], "howev": [22, 24, 33, 35, 36, 67, 74, 78, 79, 86, 88, 91], "ht": 58, "html": [11, 20, 24, 35, 43, 48, 55, 57, 74, 87], "http": [0, 11, 20, 24, 35, 43, 48, 55, 57, 75, 76, 87], "human": [17, 24, 26, 36, 52], "hundr": 83, "hyperbol": [7, 24, 33], "hyperlink": 61, "hypervisor": 58, "hypothet": [22, 24, 29, 36, 86, 91], "hz_actual": 58, "hz_actual_friendli": 58, "hz_advertis": 58, "hz_advertised_friendli": 58, "i": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "i2": [24, 25, 35], "i4": [24, 35], "i7": 58, "i_cpi": [24, 25], "iat": [24, 48], "ibpb": 58, "ibr": 58, "ibv": 59, "iconv": [1, 74, 78], "id": [18, 58, 79, 91], "idea": [0, 61, 63, 66, 83], "ideal": [0, 61], "ident": [20, 21, 24, 33, 34, 35, 41, 45, 53, 55, 86, 94, 95], "identif": [24, 30], "identifi": [0, 3, 17, 24, 27, 35, 36, 50, 94], "idn2": [1, 74, 78], "idna": 58, "idx": [3, 20, 22, 24, 25, 65, 91], "idx1": 55, "idx2": [22, 24, 55, 91], "ie": [24, 37], "ieee": [24, 35, 90, 94], "ieeestd": [24, 35], "iexp": [24, 35], "iff": [3, 17, 24, 25, 36, 48, 52, 54, 86, 92], "ignor": [11, 14, 20, 21, 22, 24, 27, 33, 34, 35, 53, 54, 83, 90, 94], "ignore_index": [20, 24], "ii16": [24, 35], "ii32": [24, 35], "iinfo": [6, 24, 35], "iinfo_object": 6, "iloc": [24, 48, 53], "imag": [7, 21, 24, 34, 35], "imagin": 91, "imaginari": [7, 21, 24, 34, 35], "imit": [24, 27], "immun": [17, 19, 20, 22, 24, 25, 36, 47, 48, 52, 54, 91], "immut": [21, 22, 24, 34, 35], "imnotok": 18, "imok": 18, "impact": [17, 22, 24, 25, 27, 35, 36, 47, 60, 61, 63, 83, 91], "implement": [0, 4, 5, 7, 10, 17, 18, 19, 20, 21, 23, 24, 33, 34, 35, 36, 39, 45, 46, 47, 48, 52, 57, 66, 72, 86, 89, 95, 99, 100], "implements_numpi": 4, "impli": [3, 24, 53, 93], "implicit": 94, "import": [17, 19, 20, 24, 25, 27, 33, 35, 36, 40, 43, 44, 45, 46, 48, 52, 53, 55, 57, 61, 67, 72, 74, 77, 90, 92, 99], "import_data": [24, 27, 68, 83], "importerror": [24, 36], "impos": [24, 54], "improv": [17, 24, 39, 48, 61, 62, 77, 89], "in1d": [17, 24, 39, 57, 65, 82, 88, 98, 100], "in1d_interv": [3, 24], "inaccess": [17, 20, 24, 25, 27, 36, 47, 52], "inadvert": [19, 24], "inappropri": [3, 24], "includ": [0, 1, 3, 15, 20, 22, 24, 25, 26, 27, 33, 35, 36, 48, 52, 54, 58, 61, 66, 67, 72, 74, 75, 77, 83, 86, 90, 91, 94, 96], "include_initi": 15, "includedelimit": [24, 52, 100], "inclus": [3, 5, 20, 24, 33, 36, 37, 41, 54, 86, 89, 93, 95], "incompat": [24, 33, 75], "incorpor": 94, "increas": [24, 47, 96], "increment": [60, 61], "ind": 93, "independ": [24, 27, 41, 46, 83, 95], "index": [2, 3, 4, 5, 8, 12, 17, 19, 20, 21, 22, 24, 27, 29, 31, 34, 35, 36, 37, 39, 47, 48, 52, 53, 55, 56, 58, 65, 74, 81, 82, 83, 86, 88, 91, 92, 96, 97, 100], "index_label": [24, 48], "index_s": [58, 81], "index_valu": [24, 53], "indexerror": [24, 48], "indexing_funct": [8, 56], "indexof1d": [24, 39], "indic": [0, 3, 4, 6, 8, 9, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 27, 29, 31, 32, 33, 36, 38, 39, 47, 48, 49, 52, 54, 55, 65, 67, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 100], "indici": [31, 100], "individu": [24, 42, 59, 100], "inds2": 55, "ineffiec": 69, "inexact": [24, 35], "inf": [24, 33, 35], "infer": [5, 17, 20, 21, 22, 24, 25, 27, 34, 35, 36, 37, 52, 67, 83], "inferred_typ": [17, 24, 25, 36, 52, 53], "infin": [21, 24, 34, 35], "infinit": [7, 22, 24, 33, 35, 36, 86, 91], "info": [0, 1, 17, 20, 24, 26, 30, 36, 52], "infoclass": [24, 56], "inform": [0, 1, 4, 7, 8, 17, 18, 22, 24, 26, 35, 36, 41, 52, 58, 61, 62, 63, 65, 66, 67, 69, 70, 72, 74, 75, 76, 77, 78, 88, 95, 96, 98, 100], "infrastructur": [1, 57], "infti": [24, 35], "ing": [24, 52, 100], "ingest": [83, 100], "inherit": [22, 24, 45, 91, 94], "ini": [0, 58], "init": [22, 24, 76, 91], "initi": [5, 15, 17, 18, 21, 24, 34, 35, 36, 37, 41, 50, 58, 76, 81, 88, 89, 94, 95, 99], "initialdata": [20, 24, 90], "inner": [4, 8, 16, 20, 24, 29], "inplac": [20, 24, 90], "input": [5, 11, 12, 15, 17, 19, 20, 21, 22, 24, 25, 33, 34, 35, 36, 37, 38, 39, 47, 48, 49, 53, 54, 55, 57, 61, 83, 85, 86, 88, 91, 94, 97, 98], "insensit": [24, 25, 36, 52, 58], "insert": [11, 12, 21, 24, 34, 35, 52, 57, 100], "insid": [24, 35], "inspect": [77, 83], "inst": [21, 24, 34, 35], "instal": [1, 24, 27, 36, 62, 79, 99], "instanc": [17, 19, 20, 21, 22, 24, 34, 35, 36, 37, 45, 48, 50, 52, 58, 69, 74, 77, 83, 86, 90, 91, 92, 94, 100], "instanti": [21, 24, 34, 35, 57], "instantiateandregist": 57, "instead": [17, 19, 20, 22, 24, 27, 35, 36, 41, 52, 58, 81, 83, 86, 88, 91, 95, 100], "instruct": [1, 24, 52, 72, 75, 76, 78, 79, 80, 99], "insuffici": [24, 35], "int": [3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 57, 67, 83, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100], "int16": [21, 24, 34, 35, 92], "int16dtyp": [24, 35], "int32": [21, 24, 34, 35, 92], "int32dtyp": [24, 35], "int64": [3, 17, 19, 20, 21, 22, 24, 25, 27, 29, 31, 33, 34, 35, 36, 37, 39, 41, 47, 49, 52, 53, 54, 57, 58, 65, 66, 67, 81, 83, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 98, 100], "int64dtyp": [24, 35], "int8": [21, 24, 34, 35, 92], "int8dtyp": [24, 35], "int_": [21, 24, 34, 35], "int_scalar": [17, 20, 21, 22, 24, 27, 33, 34, 35, 36, 37, 41, 47, 49, 50, 52, 54, 86, 89, 91, 92, 94], "int_typ": [24, 35], "intc": [21, 24, 34, 35], "intdtyp": [24, 35], "integ": [1, 4, 8, 9, 11, 17, 19, 20, 21, 22, 24, 25, 27, 29, 33, 34, 35, 36, 37, 38, 41, 45, 53, 54, 67, 82, 86, 87, 88, 89, 90, 91, 94, 96, 98, 100], "integr": [0, 21, 22, 24, 27, 34, 35, 36, 37, 41, 61, 83, 89, 91], "intel": 58, "intend": [0, 17, 19, 20, 24, 33, 36, 47, 52, 53, 66, 72, 75, 76, 84, 90, 97], "intens": [24, 49, 65, 85, 89], "intention": [21, 34], "interact": [62, 66, 70, 71, 72, 76, 78], "interest": 65, "interfac": [0, 61], "interleav": [17, 20, 24, 39, 48, 89], "intermedi": [3, 24], "intern": [1, 4, 8, 21, 24, 29, 34, 35, 36, 52, 53, 57, 61], "interoper": 0, "interpret": [18, 20, 21, 24, 27, 34, 35, 45, 58, 83, 99], "intersect": [20, 21, 22, 24, 34, 35, 39, 47, 65, 82, 98], "intersect1d": [17, 24, 39, 47, 57, 65, 82, 96, 98], "intersect_df": [20, 24], "interv": [3, 5, 24, 33, 37, 41, 45, 54, 89, 92, 95], "interval_lookup": [3, 24], "intp": [21, 24, 34, 35], "intptr_t": [21, 24, 34, 35], "introduc": 11, "introduct": 65, "inttyp": [21, 24, 34, 35], "intx": [20, 24], "inv": [24, 41, 95], "invalid": [24, 27, 83], "invari": 1, "invers": [13, 20, 24, 33, 41, 45, 55, 90, 95], "inverse_indic": 13, "invert": [22, 24, 39, 98], "invert_permut": [20, 24, 55], "invok": [24, 37, 41], "involv": [4, 8, 62, 80], "invpcid": 58, "invpcid_singl": 58, "io": [24, 35, 56, 57, 58, 68, 69, 70], "io_compress": 58, "io_files_per_loc": 58, "io_only_delet": 58, "io_only_read": 58, "io_only_writ": 58, "io_path": 58, "io_util": [24, 56], "ior": [24, 52, 100], "ip": [19, 24], "ip2": [19, 24], "ip_address": [19, 24, 25, 84], "ipaddress": [19, 24], "ipv4": [19, 24, 27], "ipv6": [19, 24], "ipython": [18, 23, 72], "iqr": 58, "iqr_outli": 58, "is_cosort": [3, 24], "is_float": 55, "is_int": 55, "is_integ": [21, 24, 34, 35], "is_ipv4": [19, 24], "is_ipv6": [19, 24], "is_leap_year": [24, 54], "is_numer": 55, "is_regist": [17, 19, 20, 22, 24, 25, 36, 47, 48, 52, 54, 55, 82, 91], "is_sort": [24, 36, 82, 86, 92], "isaac": [31, 100], "isalnum": [24, 52], "isalpha": [24, 52], "isbool": 67, "isdecim": [24, 52], "isdigit": [24, 52], "isdisjoint": [21, 22, 24, 34, 35], "isdtyp": 6, "isempti": [24, 52], "isf": 45, "isfinit": [7, 24, 33], "isin": [20, 24, 48], "isinf": [7, 24, 33], "isinst": [17, 24, 35, 37, 57], "islow": [24, 52], "isn": [24, 33, 63], "isna": [17, 20, 24, 48], "isnan": [7, 24, 33], "isnul": [24, 48], "iso": [24, 35], "isocalendar": [24, 54], "isort": [0, 78], "isscalar": [24, 35], "issctyp": [24, 35], "isspac": [24, 52], "issu": [17, 20, 22, 24, 35, 57, 61, 74, 79, 91, 96], "issubclass": [24, 35], "issubclass_": [24, 35], "issubdtyp": [24, 35], "issubsctyp": [24, 35], "issubset": [21, 22, 24, 34, 35], "issuperset": [21, 22, 24, 34, 35], "issupportedfloat": [21, 24, 34, 35], "issupportedint": [21, 24, 34, 35], "issupportednumb": [21, 24, 34, 35], "istitl": [24, 52], "isupp": [24, 52], "item": [3, 4, 8, 17, 20, 21, 22, 24, 34, 35, 36, 37, 39, 48, 53, 55, 88, 90, 91, 97, 98], "items": [21, 24, 34, 35, 36, 37, 50, 52, 82, 83, 94], "itemset": [21, 24, 34, 35], "iter": [20, 21, 22, 24, 27, 34, 35, 37, 49, 53, 58, 82, 83, 85], "iter1": [24, 53], "iter2": [24, 53], "ith": [17, 24, 47, 52], "its": [3, 7, 17, 21, 24, 25, 33, 34, 35, 36, 39, 47, 48, 52, 57, 61, 67, 76, 86, 94, 96, 97, 100], "itself": [24, 35, 36, 41, 53, 61, 95], "j": [24, 47, 59, 60, 75, 76, 96], "j16": 60, "jake": 65, "jane": 65, "john": 65, "join": [20, 24, 47, 52, 56, 82], "join_on_eq_with_dt": [24, 29], "json": [17, 18, 24, 26, 36, 46, 52, 57, 78], "judici": [24, 35], "jupyt": [18, 23, 72, 78], "just": [24, 33, 62, 63, 94, 95], "k": [5, 21, 24, 34, 35, 36, 41, 45, 58, 86, 92, 95], "kb": [18, 20, 24, 25, 48, 55], "keep": [0, 3, 12, 15, 16, 20, 22, 24, 35, 65, 76, 79, 83, 90, 91], "keepdim": [12, 15, 16], "keepparti": [24, 52, 100], "kei": [3, 17, 20, 21, 22, 24, 25, 26, 27, 28, 33, 34, 35, 39, 48, 53, 65, 67, 77, 79, 84, 90, 91, 97, 98], "kept": [20, 22, 24, 35, 47, 90, 91], "kextrememsg": 77, "key_": 67, "keyerror": [21, 24, 34, 35, 48], "keyfil": 1, "keynam": 55, "keys1": [3, 24], "keys2": [3, 24], "keyword": [0, 16, 17, 20, 21, 24, 34, 35, 41, 45, 47, 48, 53, 89, 95, 97], "kind": [6, 21, 24, 34, 35, 38], "kitwar": 75, "know": [4, 8, 62, 72], "known": [0, 24, 27, 33, 83], "kurt": 45, "kurtosi": 45, "kwarg": [16, 17, 20, 21, 22, 24, 34, 35, 37, 42, 45, 48, 53, 54, 55, 88, 89, 91], "kwd": 45, "kwoqnphz": [24, 37], "l": [4, 8, 21, 24, 27, 34, 35, 54, 59, 61, 65, 66, 74, 83], "l1_data_cache_s": 58, "l1_instruction_cache_s": 58, "l2_cache_associ": 58, "l2_cache_line_s": 58, "l2_cache_s": 58, "l3_cache_s": 58, "l_name": 65, "label": [0, 17, 20, 22, 24, 25, 40, 45, 48, 53, 88, 90, 91, 97], "lack": [21, 24, 34, 35], "lahf_lm": 58, "laid": 0, "lam": [24, 41, 95], "lambda": [20, 24, 41, 43, 95], "lambda_": [24, 43], "lang": 75, "larg": [4, 8, 17, 21, 24, 34, 35, 41, 58, 86, 95], "larger": [17, 20, 22, 24, 35, 36, 37, 52, 61, 65, 83, 88, 91, 94, 100], "largest": [24, 35, 36, 41, 48, 86, 95, 97], "last": [11, 12, 16, 20, 21, 22, 24, 34, 35, 36, 37, 48, 49, 52, 53, 61, 77, 85, 90, 91, 97, 99, 100], "later": [20, 24, 35, 36, 52, 78], "latest": [11, 24, 55, 57, 72, 75, 76, 79], "latter": [18, 100], "launch": [57, 79, 82], "layer": 83, "layout": [24, 50, 51], "lb": 45, "ld15iqr": 58, "ld_library_path": 1, "lead": [24, 35, 36, 52], "learn": [24, 54, 57, 72], "least": [0, 19, 20, 21, 22, 24, 34, 35, 36, 47, 49, 52, 85, 91, 96], "leav": [0, 24, 33, 35, 92], "left": [0, 3, 7, 12, 19, 20, 24, 33, 35, 36, 45, 49, 51, 52, 53, 54, 85, 92, 100], "left_align": [3, 24], "left_df": [20, 24], "left_suffix": [20, 24], "legend": 45, "leibniz": [31, 100], "len": [22, 24, 36, 47, 52, 86, 91, 93, 96, 100], "len_suffix": [24, 47], "length": [0, 3, 11, 17, 20, 21, 22, 24, 25, 27, 29, 31, 32, 34, 35, 37, 39, 41, 46, 47, 48, 52, 58, 67, 81, 83, 86, 89, 91, 96, 97, 98, 100], "length_or_data": [24, 35], "less": [7, 17, 20, 22, 24, 25, 35, 36, 41, 47, 52, 91, 95], "less_equ": 7, "lesser": 58, "let": 65, "letter": [24, 52], "level": [1, 24, 25, 30, 35, 39, 48, 53, 57, 58, 62, 66, 67, 74, 75, 76, 77, 80, 83, 97, 98], "levelnam": 24, "leverag": [60, 75], "lexicograph": [24, 49, 61, 85], "lhdf5": 1, "lhdf5_hl": 1, "lib": [1, 74, 79, 98], "libiconv": 78, "libidn2": 78, "librari": [0, 1, 57, 79, 100], "libtic": 79, "libtinfow": 79, "licens": 75, "liconv": 1, "lidn2": 1, "lie": [17, 24, 33, 52], "life": [76, 78], "lifo": [21, 24, 34, 35], "like": [0, 2, 3, 4, 8, 19, 20, 21, 22, 24, 34, 35, 41, 54, 57, 59, 61, 62, 63, 65, 68, 72, 74, 77, 83, 84, 90, 91, 93, 95, 97, 99, 100], "likelihood": [22, 24, 36, 43, 86, 91], "lim": 93, "limit": [0, 4, 16, 17, 24, 29, 33, 35, 36, 37, 41, 52, 54, 66, 69, 72, 83, 87, 88, 90, 94, 95, 100], "linalg": [8, 56], "line": [0, 24, 28, 35, 62, 66, 72, 77, 87, 99], "linear": [24, 33, 100], "linearli": [24, 37, 54, 89], "linefe": [24, 35], "lineno": 24, "link": [0, 1, 24, 27, 54, 61, 74, 75], "linkifi": 78, "linspac": [5, 22, 24, 33, 35, 37, 45, 82, 86, 89, 91, 94], "linter": 0, "linux": [21, 24, 34, 35, 46, 58, 74, 79, 80], "linux64": 75, "list": [0, 3, 4, 5, 8, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 47, 48, 50, 52, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 70, 72, 77, 80, 83, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100], "list_registri": [24, 26, 36], "list_symbol_t": [24, 26], "listen": [72, 99], "liter": [12, 21, 24, 34, 35, 38, 45, 88, 100], "littl": [21, 24, 34, 35], "live": [75, 76], "ll": [62, 63, 74], "llvm": [75, 76, 79], "lm": 58, "ln": [24, 41, 79, 95], "lname": 65, "lo": [24, 33], "load": [17, 20, 24, 25, 27, 36, 47, 52, 66, 67, 69, 70, 79, 83], "load_al": [17, 20, 24, 25, 27, 36, 52, 70], "loc": [24, 41, 45, 48, 95], "local": [0, 1, 4, 8, 17, 18, 20, 22, 24, 25, 27, 35, 36, 47, 48, 52, 54, 55, 58, 59, 67, 72, 74, 75, 76, 83, 89, 91, 97, 99], "locale_hostnam": 18, "locale_id": 18, "localhost": [18, 72, 99], "locat": [1, 12, 22, 24, 25, 33, 35, 36, 41, 45, 46, 48, 52, 58, 61, 63, 74, 79, 86, 91, 95, 97, 100], "locationsinfo": 32, "log": [1, 7, 22, 24, 30, 33, 37, 40, 41, 43, 44, 45, 52, 82, 86, 91, 95], "log10": [7, 24, 33], "log1p": [7, 24, 33], "log2": [7, 24, 33], "log_lvl": [24, 30], "log_msg": [24, 30], "logaddexp": 7, "logarithm": [7, 24, 33, 41, 86, 95], "logcdf": 45, "logformat": 24, "logger": [17, 22, 24, 32, 47, 50, 52, 56, 82, 91], "logic": [3, 7, 17, 24, 33, 37, 41, 47, 52, 82, 89, 92, 96], "logical_and": 7, "logical_not": 7, "logical_or": 7, "logical_xor": 7, "logist": [24, 41, 82], "loglevel": [24, 30], "logmean": [24, 37], "lognorm": [24, 37, 41, 82], "logpdf": 45, "logsf": 45, "logstd": [24, 37], "long": [21, 24, 34, 35, 47, 52, 63, 96], "longcomplex": [24, 35], "longdoubl": [24, 35], "longdoubledtyp": [24, 35], "longdtyp": [24, 35], "longer": [20, 24, 37, 67, 78, 90], "longfloat": [24, 35], "longlong": [24, 35], "longlongdtyp": [24, 35], "longnam": 45, "look": [0, 1, 24, 35, 57, 61, 62, 65, 77, 83, 99], "lookahead": [17, 24, 52, 88, 100], "lookbehind": [17, 24, 52, 88, 100], "lookup": [3, 24, 25, 48], "loop": 1, "loos": 61, "lose": [24, 35], "loss": 96, "lot": 58, "love": 0, "low": [3, 19, 20, 24, 33, 35, 36, 37, 41, 65, 83, 89, 95], "lower": [5, 20, 24, 33, 35, 41, 52, 57, 67, 90, 95], "lower_bounds_inclus": [3, 24], "lowercamelcas": 0, "lowercas": [24, 37, 52], "lowest": [3, 20, 24, 36, 37, 41, 95], "ls_csv": [24, 27, 66, 70], "lst": [24, 48], "lstick": [24, 52, 82, 100], "lt": 79, "ludmmgtb": [24, 37], "lw": 45, "lz": [24, 36], "lz4": [17, 20, 24, 25, 27, 36, 47, 52, 58, 69], "lzmq": 1, "m": [0, 21, 24, 25, 31, 33, 34, 35, 45, 47, 54, 58, 74, 79, 100], "m1": 65, "m2": [24, 25, 65], "m4": 75, "mac": [74, 76], "machep": [24, 35], "machin": [18, 24, 35, 58, 59, 62, 75, 76, 99], "machine_info": 58, "maco": [46, 75, 80], "macosx": 76, "made": [19, 20, 21, 24, 34, 35, 52, 100], "mai": [17, 20, 24, 25, 27, 33, 35, 36, 37, 38, 39, 48, 52, 53, 57, 65, 67, 74, 76, 78, 79, 83, 88, 89, 90, 94, 95, 100], "main": [5, 24, 33, 58, 61, 67], "mainli": 1, "maintain": [12, 24, 25, 27, 47, 68, 83], "major": [61, 66, 84, 90, 97], "make": [0, 1, 11, 17, 19, 20, 24, 27, 33, 35, 41, 45, 48, 54, 57, 58, 59, 60, 61, 63, 72, 74, 75, 76, 77, 79, 88, 90, 95], "makebinari": 60, "makefil": [72, 74], "malform": [24, 37, 83], "manag": [74, 75, 76, 78, 80], "mandatori": [21, 34], "mani": [3, 17, 20, 24, 35, 58, 88, 91], "manipul": 0, "manipulation_funct": [8, 56], "manner": 95, "mantissa": [21, 24, 34, 35], "manual": [24, 35, 57, 76], "map": [3, 17, 18, 19, 20, 21, 24, 25, 27, 28, 34, 35, 41, 48, 52, 55, 90, 95, 100], "mapper": [20, 24, 90], "mark": 67, "markdown": [0, 20, 24, 48], "mask": [20, 24, 33, 47, 48, 52, 96], "mass": [24, 41, 95], "master": [0, 61, 74], "match": [1, 5, 11, 17, 20, 22, 24, 25, 27, 32, 33, 35, 36, 37, 47, 48, 52, 53, 54, 55, 56, 58, 82, 83, 86, 89, 91, 94, 97, 99], "match_bool": 32, "match_ind": 32, "match_typ": [31, 32, 82, 100], "matcher": [24, 56], "matchtyp": [31, 32, 100], "math": [31, 100], "mathemat": 86, "mathjax": 78, "matlab": 93, "matmul": [10, 24, 33], "matplotlib": [24, 33, 35, 40, 45, 78, 92], "matric": [5, 24, 33, 51, 55], "matrix": [10, 20, 22, 24, 33, 35, 51, 55, 91], "matrix_transpos": 10, "matter": 62, "max": [6, 15, 20, 21, 22, 24, 33, 34, 35, 36, 47, 48, 52, 58, 82, 86, 91, 92, 100], "max_bit": [24, 36, 37, 50, 58, 83, 89, 94], "max_list_s": [24, 25, 84], "max_tim": 58, "max_work": [24, 35], "maxbit": 58, "maxexp": [24, 35], "maxima": [22, 24, 91], "maximum": [1, 12, 15, 16, 18, 20, 22, 24, 25, 35, 36, 37, 41, 55, 58, 83, 86, 89, 90, 91, 92], "maximum_sctyp": [24, 35], "maxk": [24, 36, 77, 82, 86, 92], "maxkmsg": 77, "maxlen": [24, 37], "maxmum": [24, 36, 86], "maxsplit": [24, 32, 52, 100], "maxtaskpar": 18, "maxtransferbyt": [4, 8, 17, 20, 24, 36, 37, 52, 53, 54, 83, 87, 88, 90, 94, 100], "mb": [18, 20, 24, 25, 48, 55], "mca": 58, "mce": 58, "md": [74, 75, 76], "mean": [15, 18, 20, 21, 22, 24, 27, 33, 34, 35, 36, 37, 41, 45, 46, 47, 48, 52, 58, 82, 83, 86, 91, 92, 95], "mean_shim": 15, "measur": [58, 81], "median": [20, 22, 24, 33, 41, 45, 58, 82, 91, 95], "meet": 0, "megabyt": [20, 24, 90], "member": [0, 21, 24, 34, 35], "membership": [3, 22, 24, 39, 91, 98], "memori": [17, 18, 20, 24, 25, 27, 36, 47, 48, 52, 53, 63, 64, 67, 72, 83, 88, 94, 100], "memory_usag": [20, 24, 25, 48], "memory_usage_info": [20, 24], "memoryview": [21, 24, 34, 35], "mention": [0, 63], "mere": [24, 52], "merg": [17, 20, 24, 55, 61], "mesg": [24, 35], "meshgrid": 5, "messag": [1, 17, 18, 20, 24, 25, 30, 35, 36, 37, 47, 52, 53, 57, 72, 83], "messagearg": 57, "meta": 57, "metadata": [24, 27], "method": [2, 4, 17, 18, 19, 20, 21, 22, 23, 24, 27, 33, 34, 35, 36, 37, 41, 45, 46, 47, 48, 52, 53, 57, 60, 65, 66, 82, 83, 88, 89, 91, 92, 94, 95], "method1": [24, 35], "method2": [24, 35], "mi": [17, 24, 25, 48, 54], "mib": 58, "microsecond": [24, 54], "microsoft": [58, 79], "middl": [24, 33], "midnight": [24, 54], "might": [24, 48, 74, 76, 77], "milli": [24, 29], "million": [24, 33, 36, 86], "millisecond": [24, 54], "mimic": [24, 41, 95], "min": [6, 15, 20, 21, 22, 24, 33, 34, 35, 36, 47, 48, 58, 82, 86, 91, 92], "min_digit": [24, 35], "min_round": 58, "min_tim": 58, "mind": [0, 65, 79], "mine": 63, "minexp": [24, 35], "miniforg": 74, "minim": [4, 20, 24, 62, 63, 89, 90], "minima": [22, 24, 91], "minimum": [12, 15, 16, 22, 24, 35, 36, 37, 75, 86, 91, 92], "mink": [24, 36, 77, 82, 86, 92], "minkmsg": 77, "minlen": [24, 37], "minor": 61, "mintypecod": [24, 35], "minu": [24, 33, 35], "minut": [24, 54], "mismatch": [20, 22, 24, 74, 91], "miss": [3, 17, 20, 24, 35, 48, 88], "mistak": 61, "mix": [24, 52, 54, 58, 87], "mixtur": [24, 41, 95], "mkdir": [20, 24], "mm": 61, "mmx": 58, "mod": [24, 36, 43], "modal": [22, 24, 91], "mode": [1, 16, 17, 19, 20, 22, 24, 25, 27, 35, 36, 47, 48, 52, 82, 89, 91], "model": [58, 95], "modif": [17, 19, 20, 22, 24, 25, 36, 47, 48, 52, 54, 77, 90, 91], "modifi": [20, 24, 33, 35, 43, 62, 90], "modul": [24, 57, 62, 63, 72, 83, 100], "modular": [24, 36, 63], "modulenotfounderror": [24, 36], "moment": 45, "moment_typ": 45, "momtyp": 45, "monoton": [24, 36, 86, 92], "month": [24, 54, 61], "more": [0, 1, 3, 4, 7, 8, 11, 17, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 45, 48, 52, 54, 57, 58, 59, 61, 62, 63, 65, 67, 69, 70, 72, 74, 75, 76, 78, 83, 87, 88, 90, 91, 94, 96, 100], "most": [0, 1, 19, 22, 24, 32, 35, 48, 52, 53, 58, 60, 61, 65, 67, 72, 74, 76, 79, 83, 89, 91, 94, 97, 100], "most_common": [22, 24, 55, 82, 91], "mostli": [19, 24, 53], "motion": 1, "movb": 58, "move": [11, 24, 49, 55, 63, 65, 85, 89, 96], "moveaxi": 11, "movement": 89, "mpi": 83, "msb_left": [19, 24], "msg": [24, 35], "msgarg": 57, "msgtupl": 57, "msi": 58, "msr": 58, "mt": [4, 8], "mtrr": 58, "mu": [24, 37, 41, 95], "much": [0, 3, 17, 20, 24, 27, 36, 47, 52, 60, 65, 67, 83, 88, 94, 100], "muller": [24, 41, 95], "multi": [3, 19, 22, 24, 27, 39, 48, 65, 84, 89, 91, 94, 97, 98], "multia": [24, 39, 98], "multib": [24, 39, 98], "multidimension": [24, 33], "multiindex": [20, 24, 25, 48, 84, 97], "multipl": [3, 11, 20, 24, 27, 33, 35, 39, 47, 54, 58, 59, 65, 67, 69, 70, 77, 81, 83, 84, 86, 90, 96], "multiplex": 86, "multipli": [7, 22, 24, 41, 51, 57, 91, 95], "must": [1, 3, 9, 11, 17, 18, 19, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 52, 53, 54, 57, 59, 62, 65, 66, 72, 74, 75, 77, 83, 86, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100], "mutual": 1, "mv": [45, 62, 63], "mvsk": 45, "my": [24, 52, 62, 83, 100], "my_data": [20, 24], "my_data_locale0000": [20, 24], "my_dir": [20, 24], "my_path": [20, 24], "my_table_nam": [20, 24], "my_zero": [24, 36], "myarrai": [4, 24, 55], "mydtyp": [24, 36, 50, 94], "mypi": [0, 78], "myst": 78, "n": [4, 8, 11, 16, 17, 20, 22, 24, 27, 33, 35, 36, 37, 38, 39, 41, 47, 48, 52, 54, 66, 76, 78, 81, 86, 87, 88, 89, 90, 91, 95, 96, 97], "n_col": 5, "n_row": 5, "na": [17, 20, 24, 48, 67], "na_cod": 67, "naiv": [24, 54], "name": [0, 1, 2, 3, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 30, 34, 35, 36, 37, 41, 45, 47, 48, 50, 52, 53, 54, 55, 57, 58, 59, 61, 65, 66, 67, 69, 74, 76, 77, 78, 82, 83, 84, 88, 89, 90, 91, 95, 97], "name_dict": [24, 41, 95], "name_prefix": [24, 27, 36, 83], "name_prefix_local": [24, 27, 36], "namedtupl": 13, "nameserv": 79, "namespac": [2, 4, 8, 24, 27], "namewidth": [19, 24], "nan": [7, 20, 21, 22, 24, 33, 34, 35, 48, 55, 90, 91, 94], "nanosecond": [24, 37, 54], "nativ": [21, 22, 24, 34, 35, 68, 69, 76, 83, 91, 96], "natur": [7, 24, 33, 86], "navalu": [17, 24, 88], "navig": [58, 61, 74, 75, 76, 78], "nbin": [24, 33, 92], "nbyte": [17, 20, 21, 24, 25, 34, 35, 36, 37, 47, 48, 52, 55, 83], "ncx2": 45, "nd": [18, 24, 33, 57], "ndarrai": [4, 5, 8, 17, 21, 24, 34, 35, 36, 37, 40, 47, 52, 53, 65, 83, 86, 87, 88, 94, 96, 100], "ndim": [4, 8, 11, 17, 21, 24, 25, 27, 34, 35, 36, 48, 50, 52, 57, 82, 87, 88, 94], "nearest": [24, 33, 35], "necessari": [0, 24, 35, 57, 61, 74, 79], "necessarili": [17, 24, 35, 48, 52], "need": [0, 4, 17, 20, 24, 27, 33, 35, 36, 47, 48, 50, 52, 57, 58, 61, 62, 63, 66, 74, 75, 76, 77, 79, 83, 90, 97], "neg": [5, 7, 20, 22, 24, 35, 37, 41, 47, 60, 89, 91, 93, 95, 96], "negat": 7, "negep": [24, 35], "neglig": [17, 24, 52], "neither": [17, 24, 25, 33, 36, 37, 52, 54, 89, 100], "nest": [4, 8, 24, 27, 67, 83], "nestedsequ": 5, "never": [24, 33, 35, 94], "new": [0, 5, 11, 17, 20, 21, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 40, 45, 47, 48, 50, 52, 55, 57, 61, 62, 63, 78, 90, 91, 94, 95, 96, 97, 100], "new_categori": [17, 24], "new_dtyp": [21, 24, 34, 35], "new_nam": [24, 35], "new_ord": [21, 24, 34, 35], "new_str": [24, 52, 100], "newbyteord": [21, 24, 34, 35], "newer": 75, "newfig": [24, 40], "newli": [20, 24], "newlin": [20, 24, 25, 27, 35, 36, 52, 66], "newton": [31, 100], "nexp": [24, 35], "next": [24, 35, 61, 63, 74, 77, 99], "nextaft": [24, 35], "neyman": [24, 43], "ngram": [24, 47, 82], "ngroup": [22, 24, 82, 91], "nice": 0, "nightli": 1, "ninf": [24, 35], "nkei": [22, 24, 48, 82, 91], "nl": [59, 72, 99], "nlevel": [17, 24, 25, 82, 88], "nmant": [24, 35], "nnz": [22, 24, 50], "node": [4, 8, 17, 20, 24, 27, 36, 47, 52, 58, 67, 81, 83], "node01": [72, 99], "non": [1, 3, 12, 17, 20, 22, 24, 27, 32, 33, 35, 36, 37, 39, 41, 45, 48, 49, 51, 52, 60, 83, 85, 86, 89, 91, 92, 93, 95, 100], "non_empti": [24, 47], "noncentr": 45, "none": [3, 4, 5, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 47, 48, 50, 52, 53, 54, 55, 58, 75, 76, 83, 84, 88, 89, 90, 91, 92, 94, 95, 97, 99], "nonexist": [20, 24, 90], "nonuniqueerror": [3, 24], "nonzero": [12, 21, 22, 24, 32, 33, 34, 35, 52, 100], "nopl": 58, "nor": [17, 24, 25, 36, 37, 52, 89, 100], "norepeat": [24, 47, 96], "normal": [17, 18, 19, 20, 22, 24, 35, 36, 37, 41, 54, 82, 86, 88, 90, 91], "not_alnum": [24, 52], "not_alpha": [24, 52], "not_decim": [24, 52], "not_digit": [24, 52], "not_empti": [24, 52], "not_equ": 7, "not_spac": [24, 52], "notabl": 100, "notat": [24, 35], "note": [0, 1, 2, 3, 4, 8, 14, 17, 18, 19, 20, 22, 24, 25, 27, 28, 33, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 63, 65, 67, 69, 74, 76, 77, 79, 83, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100], "notebook": [18, 23, 72], "notebookhistoryretriev": 23, "notic": [57, 65], "notifi": 67, "notimplementederror": [24, 33, 92], "notion": [4, 8], "notna": [20, 24, 48], "notnul": [24, 48], "nov": 58, "now": [17, 19, 20, 22, 24, 25, 33, 36, 47, 48, 50, 51, 52, 54, 55, 62, 63, 66, 69, 74, 75, 76, 91, 95], "np": [4, 7, 8, 17, 20, 21, 22, 24, 29, 33, 34, 35, 36, 37, 38, 40, 44, 45, 47, 48, 52, 53, 54, 55, 65, 83, 86, 87, 88, 89, 90, 91, 92, 94, 96, 100], "np_arr": 65, "nparrai": [24, 53], "null": [17, 20, 21, 22, 24, 27, 34, 35, 52, 67, 83, 88, 100], "num": [5, 18, 21, 24, 33, 34, 35], "num_command": [18, 23], "num_match": [24, 32, 52, 100], "numarg": 45, "numba": [24, 36], "number": [0, 1, 3, 5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 32, 33, 34, 35, 36, 37, 41, 45, 47, 48, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 65, 67, 75, 77, 79, 81, 83, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100], "number_format_str": [21, 24, 34, 35], "number_of_dimens": 67, "number_of_substit": [24, 52, 100], "numbers2": [24, 25], "numer": [3, 20, 24, 27, 35, 36, 37, 40, 48, 49, 55, 56, 67, 82, 83, 85, 88, 94, 97, 100], "numeric_and_bool_scalar": [21, 24, 34, 35, 36], "numeric_onli": [20, 24], "numeric_scalar": [21, 24, 33, 34, 35, 36, 37, 41, 86, 89, 95], "numericdtyp": [21, 24, 34, 35], "numid": 91, "numlocal": [17, 18, 20, 24, 25, 27, 36, 47, 52, 99], "numpi": [0, 4, 5, 8, 17, 19, 20, 21, 24, 25, 29, 32, 33, 36, 37, 41, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 65, 78, 81, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 100], "numpu": 18, "numpy_funct": 4, "numpy_scalar": [21, 24, 34, 35, 36, 86], "numpydoc": 57, "nuniqu": [20, 22, 24, 47, 82, 91], "nx": [24, 33, 58], "ny": [24, 33], "nzero": [24, 35], "o": [17, 20, 22, 24, 25, 35, 36, 46, 47, 52, 80, 82, 91], "o0": 1, "o1": 1, "obj": [5, 24, 25, 27, 35, 38, 53, 55], "obj2sctyp": [24, 35], "object": [2, 3, 4, 5, 8, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 45, 46, 47, 48, 52, 53, 54, 55, 57, 66, 67, 68, 69, 70, 79, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "object_": [24, 35], "objectdtyp": [24, 35], "objtyp": [17, 20, 22, 24, 25, 32, 36, 47, 48, 52, 67], "observ": [0, 24, 36, 41, 43, 86, 95], "obtain": [24, 32, 35, 52, 100], "occasion": 57, "occupi": [24, 35], "occur": [18, 20, 22, 24, 27, 32, 33, 36, 38, 41, 48, 52, 74, 91, 92, 95, 97, 100], "occurr": [3, 13, 21, 24, 32, 33, 34, 35, 36, 39, 52, 86, 92, 100], "odd": [24, 33, 36], "oerror": 28, "off": [24, 52, 62, 100], "offer": [84, 90, 97, 100], "offset": [17, 22, 24, 27, 35, 37, 52, 67, 83, 88, 98, 100], "offset_alias": [24, 54], "offset_attrib": [24, 52], "often": [17, 24, 88, 92], "ok": 61, "old": [17, 24, 61], "old_func": [24, 35], "old_nam": [24, 35], "older": [24, 25, 36, 67, 75], "olduint": [24, 35], "omit": [24, 35, 52, 54, 58, 67], "onc": [0, 20, 22, 24, 27, 36, 48, 52, 59, 60, 61, 63, 65, 66, 69, 74, 79, 91], "one": [0, 1, 2, 3, 4, 5, 8, 11, 17, 20, 21, 22, 24, 25, 27, 28, 33, 34, 35, 36, 37, 39, 41, 45, 47, 48, 50, 52, 57, 58, 61, 63, 65, 66, 67, 69, 72, 75, 76, 77, 78, 79, 83, 86, 88, 89, 90, 91, 95, 96, 98, 100], "one_two": [24, 52, 100], "onelin": 61, "ones": [1, 5, 11, 18, 20, 21, 24, 33, 34, 35, 37, 48, 58, 62, 81, 82, 86, 89], "ones_lik": [5, 24, 37, 82, 89], "onli": [3, 4, 8, 16, 17, 20, 22, 24, 25, 27, 29, 31, 33, 35, 36, 37, 39, 47, 48, 49, 50, 52, 53, 55, 57, 58, 60, 62, 63, 65, 67, 69, 74, 77, 78, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], "onlin": [61, 79], "onto": [20, 24, 52, 100], "op": [17, 19, 20, 24, 27, 36, 47, 52, 58], "open": [0, 3, 5, 17, 20, 24, 25, 27, 28, 35, 36, 41, 47, 48, 52, 54, 79, 95], "opeq": [19, 24, 36], "opeqop": [24, 36], "oper": [17, 18, 19, 20, 22, 24, 25, 27, 35, 36, 46, 47, 49, 50, 52, 57, 58, 61, 68, 72, 78, 80, 81, 82, 85, 90, 91, 93, 99], "opposit": [21, 24, 34, 35], "opt": [74, 75, 76], "optim": 62, "option": [1, 3, 5, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 47, 48, 52, 53, 54, 57, 58, 61, 67, 74, 75, 78, 81, 83, 89, 90, 91, 95, 97, 98, 99, 100], "order": [0, 4, 8, 11, 12, 14, 16, 17, 19, 20, 21, 22, 24, 27, 33, 34, 35, 36, 37, 39, 43, 45, 47, 48, 49, 52, 53, 55, 59, 67, 69, 85, 88, 89, 90, 91, 92, 93, 96, 97, 100], "ordin": [24, 33], "org": [11, 20, 24, 35, 43, 48, 55, 57, 87], "orient": [69, 88, 90, 94, 100], "orig": [24, 52, 100], "orig_kei": [22, 24, 91], "origin": [11, 17, 19, 20, 21, 22, 24, 25, 27, 31, 33, 34, 35, 36, 39, 47, 48, 52, 54, 86, 88, 89, 90, 91, 96, 100], "origin_indic": [24, 47, 52, 96], "oserror": 28, "osxsav": 58, "other": [3, 5, 17, 19, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 37, 41, 47, 49, 52, 54, 58, 62, 63, 65, 83, 84, 85, 86, 88, 91, 95, 96, 98, 100], "other_df": [20, 24], "otherwis": [0, 3, 5, 12, 15, 17, 20, 21, 22, 24, 25, 27, 31, 34, 35, 36, 37, 39, 41, 45, 47, 48, 52, 55, 80, 83, 88, 90, 91, 94, 95, 96, 98, 100], "our": [0, 24, 36, 57, 58, 60, 61, 65, 67, 72, 74, 79, 80, 83], "out": [0, 15, 18, 20, 21, 24, 33, 34, 35, 47, 62, 63, 66, 67, 69, 74, 77, 92, 93, 96], "outer": [4, 8, 20, 24, 93], "outlier": 58, "outlin": [61, 67], "outperform": [24, 36, 86], "output": [0, 1, 5, 12, 15, 17, 19, 20, 22, 24, 25, 27, 33, 35, 36, 38, 41, 47, 48, 52, 53, 61, 65, 69, 72, 83, 86, 91, 92, 94, 95, 98, 99], "outsid": [0, 24, 33, 66, 77], "outstand": 0, "over": [3, 17, 20, 24, 27, 33, 35, 36, 41, 47, 52, 57, 81, 86, 87, 88, 90, 92, 94, 95, 96, 100], "overflow": [17, 24, 33, 35, 36, 52, 83, 88, 94, 100], "overflowerror": [21, 24, 34, 35], "overlap": [3, 20, 24, 32, 52, 100], "overload": [22, 24, 35, 91], "overnight": 63, "overrid": [17, 19, 24, 36, 37, 52, 62, 83, 88, 94, 100], "overridden": [24, 37, 46], "overview": [24, 35, 58], "overwhelm": [24, 37, 83], "overwrit": [17, 20, 22, 24, 25, 27, 33, 36, 47, 52, 91, 94], "overwritten": [17, 20, 24, 25, 27, 36, 47, 52, 67, 69], "own": [0, 1, 24, 54, 96, 100], "p": [3, 24, 36, 37, 41, 43, 95], "packag": [75, 76, 78, 80], "pad": [16, 19, 24, 35, 61], "pad_left": [24, 35], "pad_right": [24, 35], "pad_width": 16, "padchar": [19, 24], "pae": 58, "page": [56, 61, 74], "pai": 58, "pair": [21, 24, 28, 29, 33, 34, 35, 47, 96], "pairwis": [20, 24, 33], "panda": [0, 17, 20, 24, 25, 27, 37, 48, 53, 54, 57, 68, 70, 78, 83, 84, 88, 90], "parallel": [60, 83, 94, 98], "parallel_start_test": 0, "param": [2, 17, 21, 24, 25, 27, 34, 35, 36, 47, 52, 53, 57, 58], "paramet": [0, 3, 5, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 76, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "parameter": [24, 41, 95], "parameter_class": 18, "parent": [1, 20, 24, 32], "parent_entry_nam": [31, 32], "pariti": [24, 36], "parquet": [17, 20, 22, 24, 25, 27, 36, 47, 52, 58, 66, 68, 70, 83, 91], "parquet_output": [20, 24], "pars": [18, 19, 20, 24, 25, 36, 48, 50, 99], "parse_hdf_categor": [17, 24], "parseabl": [24, 37, 89], "parser": 78, "part": [0, 4, 7, 8, 21, 24, 34, 35, 47, 52, 79, 100], "parti": [24, 35], "particular": [4, 11, 20, 24, 45, 48, 57, 77], "particularli": [75, 77], "partit": [24, 52, 100], "paruqet": 69, "pass": [0, 1, 3, 17, 19, 20, 22, 24, 27, 33, 35, 36, 47, 48, 52, 53, 61, 83, 90, 91, 95, 97], "password": [1, 20, 24, 48, 79], "past": [24, 35, 63], "pat": 58, "path": [20, 24, 25, 27, 28, 35, 36, 46, 58, 63, 72, 74, 75, 76, 77, 79, 83], "path_prefix": [24, 27], "path_to_ark": 76, "path_to_arkouda": 78, "path_to_chpl": 76, "pathlib": [20, 24, 28, 35, 46], "pattern": [24, 31, 32, 52, 61, 65, 91, 100], "pb": 18, "pcg64": 95, "pcid": 58, "pclmulqdq": 58, "pct_avail_mem": 18, "pd": [17, 20, 24, 27, 37, 48, 53, 54, 55, 65, 83, 88, 90], "pd_df": [20, 24, 65, 90], "pda": [22, 24, 33, 35, 36, 37, 49, 54, 55, 57, 85, 86, 89, 92, 94, 98], "pda1": [24, 36, 39, 98], "pda2": [24, 36, 39, 98], "pda_a": [24, 33], "pda_b": [24, 33], "pdaleft": [24, 33], "pdaright": [24, 33], "pdarrai": [3, 5, 17, 18, 19, 20, 22, 24, 25, 27, 29, 31, 32, 33, 35, 36, 37, 38, 39, 41, 43, 44, 47, 48, 49, 50, 52, 53, 54, 55, 57, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 100], "pdarrayclass": [17, 19, 20, 24, 25, 27, 29, 31, 32, 33, 35, 37, 38, 39, 41, 44, 47, 48, 49, 52, 55, 56, 90], "pdarraycr": [24, 36, 56], "pdarraymanipul": [24, 56], "pdarraysetop": [24, 47, 56, 57, 96], "pdconcat": [24, 48, 97], "pdf": 45, "pdpe1gb": 58, "pdrrai": [24, 33, 37, 83], "pearson": [20, 24, 36, 43], "peel": [24, 52, 82, 100], "pep": [24, 35], "pep8": 0, "per": [1, 17, 18, 20, 22, 24, 25, 27, 36, 47, 52, 58, 63, 67, 77, 83, 86, 91], "percent": [18, 45], "percent_transfer_limit": 55, "percentag": [18, 55], "percentil": 45, "perf_count": 58, "perform": [17, 20, 22, 24, 25, 27, 29, 33, 36, 39, 41, 47, 48, 52, 53, 58, 60, 61, 62, 65, 66, 68, 74, 82, 83, 86, 89, 90, 91, 94, 95], "period": [24, 54], "perl": 75, "perm": [20, 24, 49, 55, 85, 90], "perm_arri": [20, 24, 90], "perm_df": [20, 24, 90], "permiss": [17, 24, 25, 36, 47, 52], "permut": [11, 17, 20, 22, 24, 41, 49, 52, 55, 67, 82, 85, 88, 91, 98], "permute_dim": 11, "permute_sampl": [22, 24, 91], "person": 0, "pexpect": 78, "pge": 58, "physic": [18, 31, 100], "physicalmemori": 18, "pi": [24, 33, 35, 41, 95], "piec": 62, "pierce314159": 0, "pig": [20, 24, 48], "pinf": [24, 35], "pip": [75, 76], "pipe": 100, "pipelin": [83, 100], "place": [17, 19, 20, 22, 24, 25, 27, 30, 33, 35, 36, 41, 46, 47, 48, 52, 54, 55, 59, 63, 86, 90, 91, 95], "placement": [24, 33], "plan": [79, 80, 92, 94], "platform": [21, 24, 34, 35, 46], "player": [24, 41, 95], "pleas": [0, 17, 19, 20, 21, 22, 24, 25, 27, 34, 35, 36, 47, 48, 52, 54, 59, 61, 62, 65, 67, 69, 70, 74, 75, 76, 77, 88, 90, 91], "plot": [24, 33, 45, 56, 83, 92], "plot_dist": [24, 40], "plt": [24, 33, 40, 45, 92], "plu": [24, 33], "pni": 58, "point": [7, 20, 21, 24, 25, 29, 33, 34, 35, 36, 37, 41, 45, 48, 50, 79, 89, 90, 94], "pointer": [21, 24, 34, 35], "poisson": [24, 41, 82], "polyfit": [24, 35], "pop": [21, 24, 34, 35], "popcnt": 58, "popcount": [21, 24, 34, 35, 36], "popitem": [21, 24, 34, 35], "popul": [22, 24, 28, 32, 36, 86, 91], "port": [1, 17, 18, 20, 24, 27, 36, 47, 48, 52, 62, 72, 81, 99], "portion": [24, 35, 67], "portland": [20, 24], "pos_dt": [24, 29], "posit": [5, 7, 11, 20, 21, 22, 24, 31, 32, 34, 35, 36, 48, 52, 91, 93, 97, 100], "position": [20, 24], "positon": [24, 52, 100], "possibl": [0, 20, 21, 24, 27, 33, 34, 35, 45, 47, 52, 54, 57, 58, 61, 65, 74, 79, 83, 96, 100], "possibli": 57, "post": [0, 24, 35, 61], "postit": [24, 52, 100], "potenti": [20, 24, 35, 36], "pow": 7, "power": [7, 24, 35, 36, 43, 71, 93], "power_diverg": [24, 43], "power_divergenceresult": [24, 43], "powershel": 79, "pp": [24, 35], "ppf": 45, "pr": [0, 61], "practic": [0, 22, 24, 35, 36, 77, 86, 91], "pre": [17, 24, 55, 88], "preced": [21, 24, 34, 35, 45], "precis": [21, 24, 27, 33, 34, 35, 53, 83, 94], "pred": [24, 29], "predefin": [24, 35], "predic": [24, 29], "prefer": [0, 76, 78, 80, 95], "prefix": [17, 20, 22, 24, 25, 27, 36, 47, 52, 54, 82, 91, 100], "prefix_path": [17, 19, 20, 22, 24, 25, 27, 36, 47, 52, 91], "prepar": [20, 22, 24, 74, 91], "prepend": [11, 16, 24, 47, 52, 82, 100], "prepend_singl": [24, 47, 82, 96], "prerequisit": [74, 75, 76], "present": [0, 3, 17, 19, 20, 21, 24, 25, 27, 33, 34, 35, 36, 39, 47, 48, 52, 65, 67, 83, 92, 98], "preserv": [20, 24, 48, 97, 100], "pretti": 63, "pretty_print_info": [17, 24, 36, 52], "pretty_print_inform": [24, 26], "prev": 61, "prevent": [19, 24, 27, 36, 47, 66, 67, 75, 96], "previou": [61, 63, 76], "previous": [17, 20, 22, 24, 25, 27, 36, 47, 48, 52, 54, 91], "primarili": [24, 35, 83], "print": [0, 1, 17, 18, 20, 24, 26, 35, 36, 42, 48, 52, 79, 99], "print_server_command": 18, "printabl": [24, 37], "printit": 0, "prior": 77, "probabl": [17, 20, 22, 24, 41, 45, 52, 91, 95], "problem": [0, 24, 35, 41, 58, 81, 95], "problem_s": 58, "proc": [0, 57], "proce": [17, 24, 33, 36, 37, 52, 83, 88, 94, 100], "procedur": [0, 57], "proceed": 74, "process": [18, 24, 26, 27, 35, 48, 50, 57, 64, 67, 72, 79, 83, 96, 100], "processor": [18, 58], "prod": [15, 20, 21, 22, 24, 34, 35, 36, 47, 48, 82, 86, 91, 92], "produc": [17, 24, 52, 53, 88, 95, 100], "product": [7, 10, 15, 22, 24, 33, 36, 37, 41, 51, 83, 86, 87, 91, 92, 95], "profil": 23, "program": [0, 17, 19, 20, 22, 24, 25, 36, 47, 48, 52, 54, 72, 91, 99], "progress": 76, "project": [0, 20, 24, 48, 58, 61, 74], "promot": [4, 24, 37, 57], "promote_dtyp": [24, 37], "promote_to_common_dtyp": [24, 37], "proof": [19, 24], "proper": [24, 33, 47, 52, 55, 96], "properli": [0, 62, 67, 75, 76], "properti": [2, 4, 8, 17, 20, 24, 25, 35, 36, 47, 48, 52, 54, 57, 67], "protect": [17, 24, 36, 37, 52, 83, 88, 94, 100], "provid": [0, 6, 17, 20, 21, 22, 24, 25, 27, 34, 35, 36, 38, 41, 47, 48, 52, 53, 55, 57, 58, 60, 65, 66, 67, 69, 70, 74, 75, 76, 78, 83, 86, 90, 91, 95, 96], "prune": [24, 33, 78], "pse": 58, "pse36": 58, "pseudo": 95, "pti": 58, "ptp": [21, 24, 34, 35], "publish": 61, "pull": [24, 27, 37, 57, 61, 67], "pure": [24, 35], "purg": [24, 52], "purge_cached_regex_pattern": [24, 52], "purpos": [24, 35, 58, 61, 84, 90, 97], "push": [61, 74], "put": [20, 21, 22, 24, 34, 35, 63, 91], "putmask": [24, 33], "pvalu": [24, 43], "pwd": [75, 76], "pwr": [24, 36], "py": [0, 1, 57, 58, 62, 74, 77, 78, 81], "py_incref": [24, 35], "pyarrow": [78, 83], "pycharm": 0, "pydata": [20, 24, 48], "pyfiglet": 78, "pypi": [20, 24, 48], "pyplot": [24, 33, 40, 45, 92], "pytabl": 78, "pytest": [0, 64, 78], "python": [3, 4, 8, 17, 18, 19, 21, 23, 24, 34, 35, 36, 37, 39, 46, 48, 52, 58, 71, 74, 79, 80, 82, 83, 86, 87, 88, 89, 90, 93, 94, 100], "python3": [58, 62, 74, 75], "python_build": 58, "python_compil": 58, "python_implement": 58, "python_implementation_vers": 58, "python_vers": 58, "pythonpath": [75, 76], "pytype_readi": [24, 35], "pytypeobject": [24, 35], "pyzmq": 78, "pzero": [24, 35], "q": [24, 35, 45], "q1": 58, "q3": 58, "quadrupl": [24, 35], "qualifi": [20, 24], "queri": [3, 24, 39, 83], "quetzal": [20, 24, 48], "quick": [18, 62], "quickli": [20, 24, 59, 90], "quickstart": [75, 76, 80], "quit": [0, 72], "quotient": [24, 36], "r": [0, 20, 24, 35, 45, 58, 61, 65, 75, 76, 81], "rad2deg": [24, 33], "radian": [24, 33], "radix": [24, 49, 85], "radixsortlsd": [24, 49, 85], "rai": [24, 33], "rais": [3, 4, 8, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 41, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100], "ran": [58, 62], "randint": [3, 18, 22, 24, 33, 37, 39, 41, 49, 65, 82, 85, 86, 89, 91, 92], "randn": [24, 40], "random": [20, 22, 24, 37, 40, 45, 51, 56, 58, 81, 82, 91], "random_sparse_matrix": [24, 51], "random_st": [20, 22, 24, 45, 91], "random_strings_lognorm": [24, 37], "random_strings_uniform": [24, 37], "randomli": [20, 24, 41, 95], "rang": [3, 11, 16, 17, 20, 24, 25, 27, 29, 33, 35, 36, 37, 41, 47, 48, 51, 52, 54, 81, 83, 86, 89, 90, 92, 95, 97, 100], "rank": [17, 18, 24, 33, 35, 36, 37, 41, 50, 52, 57, 67, 82, 83, 88, 89, 93, 95], "rankwarn": [24, 35], "rasi": [17, 24, 52, 88, 100], "rate": [24, 41, 58, 95], "rather": [4, 8, 17, 20, 24, 35, 52], "ratio": [21, 24, 34, 35], "ravel": [21, 24, 34, 35], "raw": [24, 52, 100], "rc": 76, "rdrand": 58, "rdrnd": 58, "rdseed": 58, "rdtscp": 58, "re": [0, 11, 17, 18, 20, 22, 24, 31, 35, 74, 91, 99, 100], "re2": [17, 24, 52, 74, 88, 100], "reach": 0, "reachabl": 99, "reactiv": 76, "read": [4, 8, 17, 20, 24, 25, 27, 28, 35, 36, 43, 48, 52, 66, 67, 68, 69, 100], "read_": [24, 27], "read_all_test": 1, "read_csv": [20, 24, 27, 66, 70], "read_hdf": [24, 27, 47, 70, 83], "read_nest": [24, 27, 83], "read_parquet": [24, 27, 70, 83], "read_path": [24, 27, 83], "read_tagged_data": [24, 27], "read_zarr": [24, 27], "readabl": [17, 24, 26, 27, 36, 52, 67, 83], "readalltest": 1, "readi": [0, 59, 61, 75, 76], "readm": 1, "readthedoc": 57, "real": [0, 7, 21, 24, 34, 35, 37, 41, 57, 61, 67], "realist": [17, 24, 52], "realli": [0, 24, 52], "reason": [24, 35, 61, 63, 76], "rebas": 0, "rebind": [24, 35], "rebuild": [22, 24, 57, 60, 62, 63, 91], "rebuilt": 62, "receiv": [17, 18, 20, 24, 25, 27, 36, 47, 52, 83, 94, 99], "receive_arrai": [17, 20, 24, 36, 47, 52], "receive_datafram": [24, 27], "recent": [24, 53, 61], "recogn": [21, 34], "recommend": [0, 24, 33, 41, 59, 63, 69, 75, 78, 79, 80, 90, 95, 96], "recompil": 63, "recomput": [17, 24, 27], "reconnect": [24, 36], "reconstitut": [17, 24], "reconstruct": [13, 67], "record": [24, 27], "recurs": [24, 37, 83], "red": [24, 25], "reduc": [20, 22, 24, 35, 62, 64, 91], "reduct": [22, 24, 36, 81, 82, 91, 92], "redund": [21, 34], "ref": 57, "refer": [0, 5, 20, 22, 24, 35, 43, 48, 53, 62, 65, 76, 78, 91], "referenc": [20, 24], "reflect": [20, 24, 76, 90, 96], "reformat": [0, 83], "regard": 75, "regardless": [24, 53], "regex": [17, 24, 52, 88, 100], "regex_max_captur": 1, "regist": [1, 4, 17, 19, 20, 22, 24, 25, 26, 36, 47, 48, 52, 54, 55, 57, 82, 91], "register_al": [24, 55], "registerablepiec": [17, 24], "registercommand": 57, "registerd": [24, 48], "registered_nam": [17, 19, 24, 25, 36, 47, 52], "registeredsymbol": [24, 26], "registerfunct": 77, "registr": [18, 24, 36, 52, 57], "registrationerror": [17, 19, 20, 22, 24, 25, 36, 47, 48, 52, 54, 91], "registri": [17, 20, 22, 24, 25, 26, 36, 48, 52, 54, 55, 91], "regular": [17, 24, 52, 82, 88], "rel": [24, 53], "relat": [58, 61, 65], "releas": [17, 20, 21, 24, 25, 27, 34, 35, 36, 47, 52, 58, 63, 64, 72, 75, 76, 95], "release_d": 72, "reli": [17, 24, 25, 36, 47, 52, 91], "remain": [17, 20, 24, 25, 27, 33, 35, 36, 47, 52, 75, 83, 84, 90, 97], "remaind": [7, 24, 36, 52, 100], "remap": [17, 24], "rememb": [63, 65], "remot": [24, 35, 61, 75, 76, 99], "remov": [3, 11, 17, 20, 21, 24, 25, 27, 34, 35, 36, 38, 39, 47, 52, 58, 62, 78, 90, 96, 100], "remove_miss": [3, 24, 39], "remove_repeat": [24, 47, 82, 96], "renam": [20, 24], "reorder": 11, "rep": [24, 35], "rep_good": 58, "rep_msg": [17, 19, 20, 22, 24, 25, 47, 52, 77], "repack": [17, 19, 20, 22, 24, 25, 27, 36, 47, 52], "repeat": [1, 11, 17, 21, 24, 33, 34, 35, 47, 88, 96], "repeatedli": [24, 35], "repetit": 11, "repl": [23, 24, 32, 52, 100], "replac": [3, 20, 21, 22, 24, 27, 32, 33, 34, 36, 41, 47, 52, 59, 61, 67, 76, 77, 78, 91, 95, 96, 100], "repli": 57, "replic": [22, 24, 91], "repmsg": [24, 48, 50, 57], "repo": [24, 35, 75, 76, 80], "repons": [24, 25, 36, 52], "report": [21, 22, 24, 34, 35, 63, 78], "report_mem": 55, "repr": [20, 21, 22, 24, 34, 35, 45, 48], "repres": [17, 19, 21, 22, 24, 34, 35, 45, 47, 48, 52, 54, 58, 67, 88, 91, 100], "represent": [19, 20, 21, 24, 34, 35, 36], "reproduc": [0, 20, 22, 24, 41, 64, 89, 91, 95], "request": [20, 22, 24, 28, 35, 36, 37, 52, 57, 61, 89, 90, 91], "requir": [0, 3, 4, 8, 15, 18, 20, 22, 24, 25, 27, 29, 33, 35, 36, 37, 48, 59, 60, 62, 63, 67, 68, 69, 72, 77, 83, 89, 90, 91], "requiredpiec": [17, 24], "reset_categori": [17, 24], "reset_index": [20, 24, 90], "reshap": [11, 21, 24, 34, 35, 36, 38, 82, 87], "resid": [24, 36, 50, 52, 94], "resili": [24, 49, 85], "resiz": [21, 24, 34, 35], "resolut": [24, 35], "resolv": [0, 60, 79], "resolve_scalar_dtyp": [21, 24, 34, 35], "respect": [20, 24, 33, 35, 36, 37, 39, 45, 53, 54, 61, 83, 89], "respons": [18, 20, 24, 52, 57], "rest": [24, 48], "restor": [24, 27], "restrict": [4, 8], "result": [3, 5, 6, 11, 12, 15, 16, 17, 20, 21, 22, 24, 25, 27, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 47, 48, 50, 52, 53, 54, 57, 58, 65, 66, 67, 68, 76, 83, 86, 89, 90, 91, 94, 95, 96, 97, 100], "result_array_on": [24, 29], "result_limit": [24, 29], "result_typ": 6, "ret": 57, "retain": [24, 33, 36, 55, 86], "retain_index": [20, 24, 90], "retriev": [18, 23, 24, 26, 36, 46, 48, 61], "return": [3, 4, 5, 6, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 66, 68, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100], "return_count": [24, 33, 92], "return_group": [22, 24, 98], "return_group_origin": [31, 100], "return_indic": [22, 24, 91, 98], "return_length": [24, 29], "return_match_origin": [24, 31, 32, 52, 100], "return_multipl": [24, 47, 96], "return_num_sub": 32, "return_obj": [24, 27, 83], "return_origin": [24, 47, 52, 96], "return_seg": [24, 32, 52, 100], "return_valid": [24, 33, 94], "revarg": [3, 24], "revers": [4, 8, 11, 19, 22, 24], "review": 61, "revindic": [3, 24], "revkei": [3, 24], "rf": 74, "rh": 75, "right": [3, 7, 12, 19, 20, 24, 35, 36, 45, 49, 51, 52, 53, 54, 61, 85, 90, 93, 95, 99, 100], "right_align": [3, 24], "right_df": [20, 24], "right_suffix": [20, 24], "risk": [24, 33, 67], "rm": 74, "rng": [24, 41, 54, 95], "role": 1, "roll": 11, "root": [7, 17, 19, 20, 22, 24, 25, 36, 48, 54, 58, 67, 75, 83, 86, 91], "rot": [24, 36], "rotat": [24, 33, 36], "rotl": [24, 36], "rotr": [24, 36], "roughli": [24, 35], "round": [7, 21, 24, 33, 34, 35, 58], "rout": 79, "routin": [24, 35], "row": [3, 5, 20, 22, 24, 25, 27, 33, 36, 38, 39, 47, 48, 49, 51, 52, 53, 56, 65, 66, 83, 85, 90, 91, 96, 98], "row_numb": [22, 24], "row_start": [22, 24], "rpartit": [24, 52, 100], "rpath": 74, "rpeel": [24, 52, 82, 100], "rtol": [24, 53], "rule": [4, 24, 33, 94], "run": [17, 18, 20, 24, 27, 33, 36, 47, 52, 62, 63, 65, 72, 74, 75, 76, 78, 79, 81, 83, 88, 94, 96, 99, 100], "runtim": [18, 21, 24, 27, 34, 60, 83], "runtimeerror": [17, 18, 20, 22, 24, 25, 26, 27, 31, 33, 36, 37, 39, 47, 48, 50, 52, 54, 83, 86, 88, 89, 91, 92, 94, 98, 99, 100], "runtimewarn": [24, 27, 83], "ruok": 18, "rv": 45, "rv_continu": 45, "s1": [24, 33, 35, 86], "s2": [24, 25, 33, 48, 52, 86], "s3": [20, 24, 48], "s5": [24, 35], "s_complement": [24, 35], "s_cpy": [24, 52], "sa": [24, 55], "sacrific": 100, "safe": [24, 33, 38, 61, 94], "sai": 99, "salari": 65, "same": [3, 11, 16, 17, 19, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 37, 39, 41, 46, 47, 48, 49, 50, 52, 53, 54, 57, 61, 65, 66, 67, 69, 75, 76, 77, 81, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100], "same_kind": [24, 38], "sampl": [20, 22, 24, 33, 37, 41, 82, 91, 95], "satisfi": [3, 20, 24, 27], "save": [17, 20, 22, 24, 25, 27, 36, 47, 52, 58, 59, 61, 62, 67, 68, 69, 83, 88, 91, 98], "save_al": [24, 25, 27, 36, 70], "save_offset": [24, 52], "saveusedmodul": [62, 63, 77], "sb": [24, 55], "scalar": [3, 4, 5, 8, 15, 16, 17, 20, 21, 24, 33, 34, 35, 36, 37, 47, 48, 58, 81, 82, 88, 92, 93, 96, 97], "scalar_arrai": [24, 37], "scalardtyp": [21, 24, 34, 35], "scalartyp": [24, 35], "scale": [17, 24, 40, 41, 43, 45, 60, 65, 71, 95], "scaler": [24, 48, 97], "scan": 82, "scatter": [58, 82], "schema": 83, "scheme": [24, 35, 61], "scienc": 91, "scientif": [24, 35], "scipi": [0, 24, 56, 78], "scl": 75, "scope": [0, 77], "script": [57, 62, 76, 77, 81], "scroll": 74, "sctype": [24, 35], "sctype2char": [24, 35], "sctypedict": [24, 35], "se": [22, 24, 36, 86, 91], "search": [3, 12, 17, 24, 31, 39, 52, 82, 88], "search_bool": 32, "search_ind": 32, "search_interv": [3, 24], "searching_funct": [8, 56], "searchsort": [12, 21, 24, 34, 35], "sec": [24, 54, 58], "second": [3, 4, 8, 18, 24, 28, 33, 35, 37, 39, 48, 52, 53, 54, 55, 57, 58, 62, 65, 86, 89, 94, 97, 98, 99, 100], "secret": 46, "section": [1, 24, 33, 58, 60, 61, 62, 63, 65, 67, 72, 74, 78, 86], "secur": [24, 33, 56], "see": [0, 1, 3, 4, 7, 8, 11, 20, 21, 22, 24, 33, 34, 35, 36, 40, 41, 45, 48, 52, 54, 55, 57, 58, 61, 62, 63, 72, 74, 77, 83, 86, 88, 91, 92, 94, 95, 96, 97, 98, 100], "seealso": [24, 25], "seed": [3, 20, 22, 24, 37, 39, 41, 45, 58, 81, 89, 91, 95], "seen": [18, 99], "seg": 55, "seg_a": [24, 47, 96], "seg_b": [24, 47, 96], "seg_suffix": [24, 47], "segarr": [24, 47, 96], "segarrai": [3, 22, 24, 27, 33, 48, 53, 56, 82, 83, 90, 91, 97], "segment": [3, 17, 20, 22, 24, 27, 29, 47, 52, 55, 67, 82, 83, 88, 91, 96, 98, 100], "segment_nam": [24, 47], "segstr": [24, 52], "select": [12, 18, 20, 22, 23, 24, 27, 47, 48, 57, 61, 74, 80, 90, 91, 96], "select_from": [3, 24, 39], "self": [17, 20, 24, 36, 47, 52, 83, 84, 88, 90, 94, 95, 96, 97, 100], "send": [17, 18, 20, 24, 27, 36, 37, 47, 52, 57, 83, 90, 99], "send_arrai": [24, 27], "sens": [20, 24, 48], "sensit": [24, 54], "sent": [24, 27, 68], "sep": 58, "separ": [1, 4, 19, 20, 24, 25, 27, 28, 35, 36, 41, 45, 52, 58, 66, 67, 77, 83, 94, 95, 100], "seq": [24, 53], "sequenc": [3, 5, 17, 19, 20, 21, 24, 25, 33, 34, 35, 36, 37, 38, 39, 41, 47, 49, 50, 53, 55, 85, 89, 91, 92, 94, 95, 96, 98, 100], "sequenti": [24, 27, 83], "seri": [2, 20, 24, 25, 37, 53, 54, 55, 56], "seriesdtyp": [21, 24, 34, 35], "serv": 80, "server": [0, 1, 4, 8, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 41, 46, 47, 48, 50, 52, 54, 60, 62, 63, 75, 76, 79, 81, 82, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 100], "server_util": [0, 1], "serverdaemon": 57, "serverhostnam": 18, "servermodul": [1, 24, 27, 62, 63, 77], "serverport": 18, "session": [62, 72], "set": [1, 3, 17, 19, 20, 21, 22, 24, 25, 27, 30, 33, 34, 35, 36, 37, 39, 46, 47, 48, 52, 54, 57, 58, 59, 61, 66, 67, 74, 75, 76, 77, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 100], "set_categori": [17, 24], "set_dtyp": [24, 25, 84], "set_funct": [8, 56], "set_jth": [24, 47, 82, 96], "set_xlim": 45, "setchplenv": [75, 76], "setdefault": [21, 24, 34, 35], "setdiff": [24, 47, 82, 96], "setdiff1d": [24, 39, 47, 57, 65, 82, 96, 98], "setfield": [21, 24, 34, 35], "setflag": [21, 24, 34, 35], "setop": 82, "setup": [1, 74, 79], "setxor": [24, 47, 82, 96], "setxor1d": [24, 39, 47, 57, 65, 82, 96, 98], "sever": [57, 65, 67, 83, 86, 89], "sf": 45, "sh": [75, 76], "shallow": [21, 22, 24, 34, 35, 90], "shape": [3, 4, 5, 8, 11, 17, 20, 21, 24, 25, 27, 33, 34, 35, 36, 38, 39, 41, 45, 48, 50, 52, 55, 67, 82, 86, 88, 94, 95], "share": [17, 20, 22, 24, 25, 36, 47, 52, 53, 61, 79, 91], "shell": [18, 23, 24, 27, 76, 83], "shellhistoryretriev": 23, "shift": [7, 11, 45], "short": [21, 24, 34, 35], "shortdtyp": [24, 35], "shortest": [24, 35], "shorthand": [21, 24, 34, 36, 52], "should": [0, 1, 4, 8, 17, 20, 21, 22, 24, 27, 33, 34, 35, 36, 37, 48, 50, 52, 53, 55, 57, 61, 62, 63, 65, 66, 67, 68, 72, 74, 75, 76, 78, 83, 90, 91, 94, 99], "shouldn": [62, 63], "show": [20, 24, 27, 35, 40, 45, 53, 74, 83, 87, 91], "show_int": [19, 24], "shown": 99, "shuffl": [24, 41, 82], "shut": [18, 72, 77], "shutdown": [18, 62, 63, 77], "side": [1, 12, 17, 18, 20, 22, 24, 25, 26, 27, 31, 35, 36, 37, 41, 47, 48, 50, 52, 54, 57, 61, 62, 72, 77, 79, 83, 86, 88, 91, 92, 93, 94, 95, 96, 99, 100], "sigma": [24, 37, 41, 95], "sign": [7, 21, 24, 27, 33, 34, 35, 36, 41, 83, 90, 94, 95], "signal": [21, 34], "signatur": [23, 57], "signedinteg": [21, 24, 34, 35], "signific": [19, 24, 33, 35, 36, 49, 61, 77, 85, 86], "significantli": [17, 24, 35, 62, 88], "similar": [0, 24, 27, 35, 52, 58, 65, 83, 94, 96, 100], "similarli": [58, 65], "simpl": [0, 65, 77, 92], "simplest": 58, "simpli": [17, 18, 20, 24, 33, 35, 89], "simplifi": [0, 58], "simul": [75, 76], "sin": [7, 24, 33, 82, 86], "sinc": [1, 4, 24, 33, 35, 63, 88, 90, 94, 95, 100], "sine": [7, 24, 33, 86], "singl": [0, 2, 3, 4, 8, 16, 17, 19, 20, 21, 22, 24, 25, 27, 29, 33, 34, 35, 36, 37, 39, 41, 47, 52, 62, 63, 65, 67, 69, 74, 77, 81, 83, 89, 90, 91, 93, 95, 96, 98], "singlecomplex": [21, 24, 34, 35], "singleton": [11, 12, 15, 16, 24, 36], "sinh": [7, 24, 33], "siphash": [24, 33], "siphash128": [17, 24, 52], "site": 74, "situat": [24, 37], "six": [24, 50, 52, 100], "size": [3, 4, 8, 11, 17, 20, 21, 22, 24, 25, 27, 29, 33, 34, 35, 36, 37, 39, 41, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 65, 67, 68, 69, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 100], "skew": [24, 45], "skip": [1, 21, 22, 24, 27, 34, 52, 75, 83, 91, 98, 100], "skipna": [22, 24, 91], "slice": [17, 20, 24, 36, 38, 65, 82, 87, 88, 90, 96, 100], "slice_bit": [24, 36], "slightli": [20, 24, 27, 90], "slot": [24, 35], "slower": [17, 24, 100], "small": [20, 24, 33, 48, 67, 83], "smaller": [24, 48, 61, 66, 83], "smallest": [20, 22, 24, 35, 36, 48, 86, 91, 97], "smallest_norm": [6, 24, 35], "smallest_subnorm": [24, 35], "smap": 58, "smemtrack": 1, "smep": 58, "smith": 65, "snappi": [17, 20, 24, 25, 27, 36, 47, 52, 58, 69, 74], "snapshot": [24, 27], "so": [0, 1, 14, 17, 19, 20, 22, 24, 27, 33, 35, 36, 41, 47, 48, 52, 58, 60, 61, 62, 63, 72, 77, 78, 79, 83, 86, 87, 90, 91, 95, 97, 98], "socket": [18, 99], "softwar": 75, "solut": [24, 35], "some": [0, 3, 4, 17, 20, 24, 35, 39, 45, 59, 65, 69, 74, 88, 90, 96, 100], "someon": [0, 61], "someth": [61, 62, 99], "sometim": [45, 77, 87, 94], "somewhat": 60, "somewher": 57, "sort": [1, 3, 12, 14, 17, 20, 21, 22, 24, 33, 34, 35, 36, 39, 47, 48, 52, 53, 55, 56, 61, 81, 82, 86, 88, 89, 91, 92, 98, 100], "sort_index": [20, 24, 48, 97], "sort_valu": [17, 20, 24, 48, 90, 97], "sorted_df1": [20, 24, 90], "sorted_df2": [20, 24, 90], "sorter": 12, "sorting_funct": [8, 56], "sortingalgorithm": [24, 49, 85], "sought": [24, 52, 100], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 67, 72, 74, 75, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100], "space": [0, 1, 3, 5, 24, 33, 35, 37, 39, 50, 52, 54, 58, 74, 77, 89, 92, 100], "span": [24, 52, 100], "sparrai": [24, 50, 51], "sparrayclass": [24, 51, 56], "spars": [3, 22, 24, 50, 51, 55, 91, 94], "sparse_matrix_matrix_mult": [24, 51], "sparse_sum_help": 55, "sparsematrix": [24, 56], "special": [19, 21, 24, 34, 35, 43, 45, 48, 52, 56, 94, 97], "special_objtyp": [19, 24, 54], "special_str": [24, 52], "specif": [0, 4, 8, 20, 21, 24, 27, 34, 35, 41, 45, 53, 63, 66, 67, 68, 75, 77, 82, 83, 90, 95], "specifi": [1, 3, 4, 5, 6, 8, 9, 11, 14, 16, 19, 20, 21, 22, 24, 25, 27, 28, 33, 34, 35, 36, 37, 38, 40, 41, 45, 47, 48, 51, 52, 53, 54, 55, 57, 58, 62, 68, 83, 86, 89, 90, 91, 95, 96], "speed": [17, 24, 39, 60, 64, 77, 88, 89, 98], "sphinx": [56, 74, 78], "splash": 1, "split": [24, 32, 52, 61, 82], "spread": 83, "sqrt": [7, 22, 24, 36, 41, 86, 91, 95], "squar": [7, 22, 24, 33, 36, 41, 43, 45, 86, 91, 95], "squared_test": [24, 43], "squash": 0, "squeez": [11, 21, 24, 34, 35], "src": [57, 77], "ss": 58, "ssbd": 58, "sse": 58, "sse2": 58, "sse4_1": 58, "sse4_2": 58, "ssegmentedstr": [24, 52], "ssh": 1, "ssse3": 58, "st": 57, "stabl": [14, 24, 49, 85, 87], "stack": [11, 24, 38, 100], "standard": [0, 4, 15, 17, 22, 24, 35, 36, 37, 41, 45, 54, 57, 58, 59, 86, 91, 92, 95], "standard_exponenti": [24, 41, 82], "standard_norm": [24, 37, 41, 82], "standardize_categori": [17, 24], "start": [0, 3, 4, 5, 8, 17, 20, 21, 22, 24, 25, 29, 31, 32, 33, 34, 35, 36, 37, 47, 48, 49, 52, 54, 67, 82, 85, 88, 89, 91, 93, 96, 100], "startswith": [17, 24, 52, 82, 88, 100], "startup": [1, 72, 82], "stat": [24, 43, 56, 58], "state": [17, 24, 41, 52, 61, 95], "static": [17, 24, 25, 36, 47, 52, 91], "statist": [22, 24, 36, 43, 58, 82, 86, 91], "statistical_funct": [8, 56], "statu": 18, "std": [15, 20, 21, 22, 24, 34, 35, 36, 45, 48, 54, 82, 86, 91, 92], "stddev": 58, "stddev_outli": 58, "stdev": [24, 41, 95], "stdout": [24, 35], "step": [0, 5, 21, 22, 24, 34, 35, 58, 59, 60, 63, 74, 77, 80, 98, 99], "stepfil": 45, "stibp": 58, "stick": [24, 52, 63, 82, 100], "still": [67, 100], "stop": [5, 18, 21, 24, 34, 35, 37, 89, 93], "storag": [20, 24, 48, 58], "storage_opt": [20, 24, 48], "store": [4, 8, 12, 19, 20, 21, 22, 24, 25, 27, 34, 35, 37, 41, 46, 52, 57, 58, 66, 67, 70, 79, 83, 88, 89, 91, 96, 100], "store_path": [24, 27], "str": [2, 4, 5, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 66, 83, 86, 88, 89, 90, 91, 94, 95, 99, 100], "str_": [21, 24, 33, 34, 35, 92], "str_acc": [24, 48], "str_scalar": [17, 21, 24, 32, 34, 35, 52, 88, 100], "straight": 61, "strategi": [24, 35, 78, 79, 83], "strdtype": [24, 35], "stream": [4, 8, 24, 41, 62, 95], "streamhandl": 24, "strict": [20, 21, 22, 24, 33, 34, 35, 45, 48, 53, 94], "strict_typ": [24, 27], "stricter": [24, 35], "stricttyp": [24, 27, 83], "stride": [20, 21, 24, 29, 34, 35, 37, 89, 90, 93], "string": [0, 1, 3, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 61, 77, 82, 83, 85, 86, 88, 89, 90, 91, 92, 94, 96, 97, 98], "string_": [24, 35], "string_oper": [2, 24], "stringa": [24, 52], "stringaccessor": [2, 24], "stringb": [24, 52], "stringc": [24, 52], "stringifi": [20, 24, 90], "stringio": [24, 35], "strings0": [24, 52], "strings1": [24, 52], "strings2": [24, 52], "strings_arrai": [24, 52, 67], "strings_encodedecod": 58, "strings_end": [24, 52, 100], "strings_pdarrai": [24, 52], "strings_start": [24, 52, 100], "strip": [21, 24, 34, 35, 52], "strive": 61, "strongli": [24, 33], "structur": [17, 20, 24, 35, 47, 65, 69, 90, 91, 94, 96, 100], "strucutur": 96, "stub": 78, "style": [0, 17, 19, 20, 22, 24, 25, 35, 36, 47, 48, 52, 54, 90, 91, 94], "sub": [21, 24, 32, 34, 35, 47, 52, 82, 100], "subclass": [4, 21, 24, 34, 35], "subdir": 75, "subdirectori": 57, "subdomain": [4, 8], "subdtyp": [24, 35], "subject": [1, 24, 54], "subn": [24, 52, 82, 100], "subnorm": [24, 35], "subplot": 45, "subsequ": [24, 33, 67], "subset": [4, 17, 18, 20, 23, 24, 47, 77, 86, 90, 96], "substanti": 61, "substitu": [24, 52, 100], "substitut": [24, 32, 52, 72, 74, 100], "substr": [17, 19, 24, 52, 82, 88], "subsystem": 79, "subtract": 7, "subtyp": [24, 35], "succeed": [24, 33, 94], "success": [17, 18, 20, 24, 25, 27, 29, 33, 36, 47, 52, 94, 99], "successfulli": 76, "sudo": 79, "suffici": [24, 35], "suffix": [20, 24, 27, 47, 52, 67, 82, 100], "suggest": [63, 79], "suitabl": 12, "sum": [7, 15, 20, 21, 22, 24, 33, 34, 35, 36, 41, 47, 48, 54, 55, 82, 86, 91, 92, 95], "summar": [82, 83], "summari": [0, 20, 24], "super": 0, "supercomput": 71, "suppli": [22, 24, 27, 33, 37, 47, 67, 69, 70, 89, 90], "support": [0, 3, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 33, 34, 35, 36, 37, 39, 46, 47, 48, 50, 52, 54, 57, 65, 68, 72, 75, 76, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], "supported_opeq": [24, 54], "supported_scalar": [24, 48], "supported_with_datetim": [24, 54], "supported_with_pdarrai": [24, 54], "supported_with_r_datetim": [24, 54], "supported_with_r_pdarrai": [24, 54], "supported_with_r_timedelta": [24, 54], "supported_with_timedelta": [24, 54], "supportsbufferprotocol": 5, "suppress": [20, 24, 35], "sure": [0, 20, 24, 25, 27, 36, 52, 61, 79], "surround": [0, 21, 24, 34, 35, 45], "surviv": [3, 24, 45], "swap": [21, 24, 34, 35], "swapax": [21, 24, 34, 35], "switch": [77, 87], "sy": [20, 21, 22, 24, 34, 35, 45, 48], "symbol": [18, 24, 26, 36, 47, 52, 57, 94], "symentri": 57, "symlink": 79, "symmetr": [3, 21, 22, 24, 34, 35, 39, 47, 65, 82, 98], "symmetric_differ": [21, 22, 24, 34, 35], "symtab": 57, "symtabl": 18, "sync": 76, "synchron": [17, 24], "syntax": 93, "syscal": 58, "system": [1, 17, 24, 35, 36, 41, 46, 52, 57, 58, 76, 77, 78, 79, 80, 83, 86, 88, 94, 95, 99, 100], "t": [0, 3, 4, 8, 20, 21, 24, 27, 33, 34, 35, 39, 52, 54, 57, 61, 62, 63, 74, 75, 76, 79, 81, 100], "t1": [24, 29, 35], "t2": [24, 29, 35], "t3": [24, 35], "tab": [0, 61, 74], "tabl": [3, 18, 20, 24, 26, 36, 47, 48, 52, 57, 58, 94, 96], "tablefmt": [20, 24, 48], "tablul": [20, 24, 48], "tabul": [20, 24, 48, 78], "tag": [0, 24, 27, 30, 61, 63], "tag_data": [24, 27], "tagdata": [24, 27], "taht": 83, "tail": [20, 22, 24, 37, 48, 82, 91], "take": [0, 9, 19, 21, 22, 24, 30, 34, 35, 36, 41, 45, 57, 59, 60, 62, 63, 65, 68, 83, 91, 95], "taken": [61, 77], "talk": 87, "tan": [7, 24, 33], "tangent": [7, 24, 33], "tanh": [7, 24, 33], "tar": [72, 74, 75, 76], "target": [24, 28, 33, 37, 58, 60, 61, 74, 83, 89, 93, 94], "task": [1, 18], "tb": 18, "tblgen": 79, "tcp": [18, 72, 99], "team": 61, "technic": [24, 27], "techniqu": 63, "tell": [24, 27, 57, 58, 83], "temp_c": [20, 24], "temp_f": [20, 24], "temp_k": [20, 24], "temporari": [24, 35], "tend": 60, "tensor": [5, 22, 24, 33, 91], "tensordot": 10, "term": [3, 24, 39], "termin": [24, 27, 67, 72, 79, 99], "test": [3, 17, 20, 24, 27, 35, 39, 43, 56, 59, 61, 62, 63, 65, 72, 77, 90, 98], "test_": 0, "test_command": 77, "test_data_url": 1, "testmsg": 77, "text": [24, 35, 61, 66, 83], "texttt": [24, 41, 95], "th": [4, 5, 8, 11, 16, 24, 33, 47, 86, 96], "than": [3, 4, 8, 11, 17, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 37, 39, 41, 47, 48, 49, 52, 59, 61, 62, 69, 83, 85, 87, 88, 89, 90, 91, 94, 95, 98, 100], "thei": [1, 11, 17, 18, 19, 20, 22, 24, 25, 27, 33, 35, 36, 47, 48, 52, 53, 54, 55, 59, 61, 66, 67, 68, 75, 76, 83, 87, 88, 91, 97], "them": [1, 20, 24, 27, 39, 45, 52, 61, 75, 83, 90, 98], "therefor": 67, "thi": [0, 1, 4, 5, 8, 11, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 27, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 79, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100], "thin": [19, 24], "thing": [0, 4, 8, 65], "third": [24, 35, 37, 61, 89], "thirti": [3, 24], "those": [0, 4, 8, 16, 24, 35, 49, 65, 75, 77, 85, 93], "though": [20, 24, 65], "thousand": 83, "three": [3, 24, 35, 37, 39, 52, 54, 57, 74, 89, 93, 94, 100], "three_____four____f": [24, 52, 100], "thresh": [20, 24], "threshold": 100, "thrift": 74, "through": [1, 24, 33, 53, 57, 59, 61, 72, 76], "throw": [11, 57], "thrown": [17, 20, 24, 25, 26, 27, 31, 36, 37, 47, 48, 50, 52, 83, 86, 88, 92, 94, 100], "thu": [4, 8, 24, 27, 37, 49, 67, 68, 85, 96], "tiebreak": [3, 24], "tile": 11, "time": [1, 17, 18, 20, 22, 24, 25, 27, 29, 33, 35, 36, 41, 47, 48, 52, 54, 58, 60, 62, 63, 66, 67, 69, 77, 81, 83, 88, 91, 92, 95, 96, 98, 100], "timeclass": [24, 27, 56], "timedelta": [24, 27, 35, 37, 54], "timedelta64": [24, 35, 54], "timedelta64dtyp": [24, 35], "timedelta_rang": [24, 54], "timedeltaindex": [24, 54], "timeout": [1, 18, 99], "timer": 58, "times2": 57, "timeseri": [24, 54], "timestamp": [24, 29], "timezon": [24, 54], "tini": [24, 35], "tip": [64, 74], "titl": [0, 24, 35, 52, 61], "titlecas": [24, 52], "tm": [24, 53, 58], "tmp": [24, 35], "to_csv": [20, 24, 25, 27, 36, 52, 66, 70], "to_cuda": [24, 36], "to_datafram": [24, 48], "to_datetim": [24, 37], "to_devic": [4, 8], "to_dict": [24, 25], "to_hdf": [17, 19, 20, 22, 24, 25, 27, 36, 47, 52, 67, 70, 82, 83, 91], "to_list": [3, 17, 19, 24, 25, 36, 47, 48, 52, 65, 83, 94, 96, 100], "to_markdown": [20, 24, 48], "to_ndarrai": [4, 8, 17, 19, 24, 25, 33, 36, 37, 40, 47, 48, 52, 54, 65, 82, 83, 87, 88, 92, 94, 96, 100], "to_panda": [17, 20, 24, 25, 48, 54, 65, 90, 97], "to_parqet": [24, 36], "to_parquet": [17, 20, 24, 25, 27, 36, 47, 52, 69, 70, 83], "to_str": [17, 24], "to_zarr": [24, 27], "tobyt": [21, 24, 34, 35], "toencod": [24, 52], "tofil": [21, 24, 34, 35], "togeth": [17, 20, 22, 24, 52, 55, 90, 91, 98], "token": [1, 18, 46, 72, 99], "token_hex": 46, "token_str": 72, "token_valu": [18, 99], "toleft": [24, 52, 100], "toler": [24, 53], "tolist": [4, 8, 21, 24, 34, 35], "too": [4, 8, 24, 35, 60, 83], "tooharderror": [24, 35], "tool": [0, 76], "toolset": 65, "top": [24, 48, 57, 62, 67, 74, 75, 76, 80, 97], "topn": [24, 48, 97], "tostr": [21, 24, 34, 35], "total": [18, 20, 22, 24, 27, 35, 52, 58, 83, 91], "total_mem": 18, "total_second": [24, 54], "totestmsg": 77, "touch": 93, "toward": [21, 24, 34, 35, 37, 45], "tp_doc": [24, 35], "trace": [21, 24, 34, 35], "traceback": [24, 53], "track": [0, 62, 69], "trail": [21, 24, 34, 35, 36, 52], "trait": 23, "transfer": [17, 20, 24, 27, 36, 47, 52, 58, 83, 87, 88, 90, 94, 96, 100], "transfer_r": 58, "transform": [24, 25, 41, 95], "transit": 65, "transpos": [4, 8, 21, 24, 33, 34, 35, 47, 83], "treat": [3, 19, 20, 21, 24, 34, 35, 49, 58, 65, 85, 90], "trial": [58, 81], "triangl": [24, 33], "tril": [5, 24, 33], "trim": [24, 35], "triu": [5, 24, 33], "trivial": [3, 24], "true": [1, 3, 5, 6, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 45, 47, 48, 52, 53, 54, 55, 58, 65, 76, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], "true_": [24, 35], "true_dt": [24, 29], "trunc": [7, 24, 33], "truncat": [7, 17, 19, 21, 22, 24, 25, 27, 33, 34, 35, 36, 45, 47, 52, 67, 69, 91], "try": [0, 21, 24, 25, 27, 34, 35, 36, 79], "tsc": 58, "tukei": [24, 43], "tune": 1, "tunnel": 1, "tup": [24, 38], "tupl": [3, 4, 5, 6, 8, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 29, 33, 34, 35, 36, 37, 38, 39, 41, 47, 48, 50, 52, 55, 65, 83, 88, 89, 90, 91, 92, 94, 97, 98, 100], "turn": [21, 24, 34, 35, 48, 62, 72, 97], "tutori": 79, "tvkj": [24, 37], "tvkjte": [24, 37], "twenti": [3, 24], "twice": [24, 37, 83], "two": [3, 7, 10, 16, 17, 19, 20, 21, 22, 24, 25, 29, 33, 34, 35, 36, 37, 39, 47, 48, 51, 52, 53, 54, 55, 57, 65, 66, 77, 83, 86, 89, 91, 98, 100], "txt": [1, 24, 35], "typ": [21, 34], "type": [2, 3, 4, 5, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 68, 74, 78, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100], "typechar": [24, 35], "typecheck": 57, "typecod": [24, 35], "typeerror": [3, 17, 19, 20, 22, 24, 25, 27, 29, 30, 33, 35, 36, 37, 39, 41, 47, 48, 49, 52, 54, 55, 57, 83, 85, 86, 88, 89, 91, 92, 97, 98, 100], "typeguard": 78, "typehint": 78, "typenam": [24, 35], "typevar": [92, 94], "typic": [0, 19, 24, 35, 57, 62, 63, 88], "tz": [24, 54], "tzinfo": [24, 54], "u": [0, 19, 21, 24, 34, 35, 37, 54, 61, 75, 76, 83], "u0": [20, 24, 25], "u0009": [24, 52], "u0009nu000bu000cu000d": [24, 52], "u000b": [24, 52], "u000c": [24, 52], "u000d": [24, 52], "u5": [24, 52, 83, 100], "ub": 45, "ubuntu": 79, "ubyt": [21, 24, 34, 35], "ubytedtyp": [24, 35], "ucs4": [21, 24, 34, 35], "ui": 1, "uint": [3, 20, 21, 24, 27, 34, 35, 36, 37, 52, 66], "uint16": [21, 24, 34, 35, 92], "uint16dtyp": [24, 35], "uint32": [21, 24, 27, 34, 35, 83, 92], "uint32dtyp": [24, 35], "uint64": [3, 19, 21, 22, 24, 33, 34, 35, 36, 37, 41, 49, 58, 67, 81, 85, 86, 89, 90, 92, 94], "uint64dtyp": [24, 35], "uint8": [21, 24, 33, 34, 35, 52, 67, 92, 94, 100], "uint8dtyp": [24, 35], "uintc": [21, 24, 34, 35], "uintdtyp": [24, 35], "uintp": [21, 24, 34, 35], "uintptr_t": [21, 24, 34, 35], "ulongdtyp": [24, 35], "ulonglong": [24, 35], "ulonglongdtyp": [24, 35], "unabl": [17, 19, 20, 22, 24, 25, 36, 48, 52, 54, 91], "unaffect": 58, "unalt": 95, "unbias": [22, 24, 35, 36, 86, 91], "unchang": [17, 21, 24, 34], "uncompress": [24, 35], "undefin": [24, 37, 41, 89], "under": [0, 2, 17, 19, 20, 22, 24, 25, 27, 36, 37, 47, 48, 52, 54, 58, 61, 83, 88, 91, 94, 100], "under_flat": [24, 52, 100], "under_map": [24, 52, 100], "underflow": [24, 33, 94], "underli": [17, 19, 20, 22, 24, 25, 33, 41, 47, 48, 53, 54, 91, 95], "underneath": 61, "underscor": [4, 8], "undoubl": 57, "unequ": [24, 33, 86], "unflatten": 67, "unicod": [21, 24, 34, 35], "unicode_": [21, 24, 34, 35], "uniform": [24, 33, 37, 41, 49, 82, 83, 85, 86, 89], "uniformli": [24, 37, 41, 51, 89, 95], "uniniti": [24, 36], "uninterpret": [24, 33, 94], "union": [5, 17, 18, 20, 21, 22, 24, 26, 27, 29, 33, 34, 35, 36, 37, 38, 39, 41, 47, 49, 51, 52, 65, 82, 83, 85, 86, 88, 89, 91, 92, 94, 97, 98, 100], "union1d": [17, 24, 39, 47, 57, 65, 82, 96, 98], "uniqu": [3, 11, 13, 17, 20, 21, 22, 24, 33, 34, 35, 36, 39, 47, 48, 52, 65, 67, 82, 83, 88, 91, 92, 93, 96, 97, 98, 100], "unique_al": 13, "unique_count": 13, "unique_invers": 13, "unique_kei": [22, 24, 82, 91], "unique_key_idx": 67, "unique_valu": [13, 24, 33, 36, 92], "uniqueallresult": 13, "uniquecountsresult": 13, "uniqueinverseresult": 13, "unit": [0, 1, 18, 20, 24, 25, 33, 48, 53, 54, 55], "unknown": [20, 24, 25, 27, 36, 37, 52], "unless": [1, 20, 22, 24, 27, 33, 41, 52, 91, 95, 100], "unlik": [20, 21, 24, 27, 34, 35, 52, 54], "unlimit": [20, 24], "unnecessari": 63, "unord": [21, 22, 24, 34, 35, 47], "unpack": [24, 52, 72, 76, 100], "unregist": [17, 19, 20, 22, 24, 25, 36, 47, 48, 52, 54, 55, 82, 91], "unregister_al": [24, 55], "unregister_categorical_by_nam": [17, 24], "unregister_dataframe_by_nam": [20, 24], "unregister_groupby_by_nam": [22, 24, 82, 91], "unregister_pdarray_by_nam": [24, 36], "unregister_segarray_by_nam": [24, 47], "unregister_strings_by_nam": [24, 52], "unrel": 89, "unsaf": [24, 38], "unset": [62, 76], "unsign": [21, 24, 34, 35, 90], "unsignedinteg": [21, 24, 34, 35], "unsort": [20, 24, 90], "unsqueez": [3, 24], "unstabl": 95, "unstack": 11, "unstructur": [24, 35], "unsupport": [22, 24, 27, 46, 49, 83, 98], "unsupportedoper": 28, "unsupportedopt": 28, "unsur": 0, "until": [17, 19, 20, 22, 24, 25, 35, 36, 47, 48, 52, 54, 63, 91], "unus": [17, 24, 27, 38, 83], "up": [1, 3, 17, 18, 20, 22, 24, 27, 33, 36, 39, 47, 52, 57, 60, 63, 64, 74, 75, 76, 77, 83, 86, 87, 88, 89, 98, 100], "updat": [17, 19, 20, 21, 22, 24, 25, 27, 34, 35, 36, 40, 47, 48, 52, 54, 69, 74, 75, 79, 83, 91], "update_hdf": [17, 19, 20, 22, 24, 25, 27, 36, 47, 52], "update_nrow": [20, 24], "upgrad": [74, 78], "upon": [24, 33, 52, 76, 77, 80, 86], "upper": [5, 24, 33, 41, 52, 61, 95], "upper_bounds_exclus": [3, 24], "upper_bounds_inclus": [3, 24], "uppercamelcas": 0, "uppercas": [24, 37, 52], "upstream": [61, 75, 76], "url": [1, 18, 20, 24, 35, 48, 72, 74, 99], "urlnam": [24, 35], "us": [0, 1, 3, 4, 5, 8, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 75, 76, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "usag": [4, 8, 20, 24, 25, 48, 64, 72, 81, 96, 99], "use_seri": [20, 24, 90], "usedmodul": [62, 63, 77], "usehash": [24, 52], "user": [0, 1, 17, 19, 20, 21, 22, 24, 25, 27, 30, 33, 34, 35, 36, 37, 40, 46, 47, 48, 50, 52, 54, 55, 58, 61, 64, 65, 67, 68, 70, 72, 74, 75, 76, 77, 78, 79, 80, 83, 87, 88, 91, 94, 100], "user_defined_nam": [17, 19, 20, 22, 24, 25, 36, 47, 48, 52, 54, 91], "userdict": [20, 24, 42], "userid": [20, 24, 90, 91], "usernam": [20, 24, 46, 48, 90], "username_token": 46, "userwarn": [24, 35], "ushort": [21, 24, 34, 35], "ushortdtyp": [24, 35], "usual": [0, 20, 22, 24, 91], "utf": [20, 24, 27, 52], "utf8proc": 74, "util": [0, 24, 27, 56, 61, 74, 75, 76], "utility_funct": [8, 56], "v": [0, 21, 22, 24, 34, 35, 45, 47, 61, 75, 81, 91, 96], "v1": [24, 43], "v10": [24, 35], "v2": [22, 24, 91], "v2022": 61, "v2023": 63, "v5": [24, 35], "val": [3, 21, 22, 24, 34, 35, 45, 47, 48, 55, 91, 96], "val1": 55, "val2": 55, "val_suffix": [24, 47], "valid": [3, 17, 21, 24, 27, 33, 34, 35, 37, 45, 48, 50, 52, 83, 88, 94, 100], "validate_kei": [24, 48], "validate_v": [24, 48], "vals1": 55, "vals2": 55, "valsiz": [24, 47], "valu": [3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 33, 34, 35, 36, 37, 39, 41, 43, 45, 47, 48, 50, 52, 53, 54, 55, 57, 58, 65, 67, 69, 76, 81, 82, 83, 84, 86, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100], "valuabl": 77, "value_count": [24, 33, 36, 48, 82, 92, 97], "value_label": [24, 48], "value_nam": [24, 47], "value_s": [58, 81], "valueerror": [3, 4, 8, 11, 17, 18, 20, 21, 22, 24, 25, 27, 28, 29, 33, 34, 35, 36, 37, 39, 41, 47, 48, 49, 50, 51, 52, 83, 85, 86, 88, 89, 91, 92, 96, 97, 99, 100], "values2": [22, 24, 91], "valuetypeerror": [24, 33], "vandermond": [24, 35], "vanish": [21, 34], "var": [0, 1, 15, 20, 21, 22, 24, 34, 35, 36, 45, 48, 57, 82, 86, 91, 92], "vari": [24, 35, 36, 53, 65, 74, 76, 78, 80, 96], "variabl": [0, 22, 24, 27, 29, 36, 41, 45, 46, 47, 52, 57, 58, 59, 75, 76, 77, 86, 91, 95, 96, 100], "varianc": [15, 22, 24, 36, 41, 45, 86, 91, 92, 95], "variat": 45, "varieti": [24, 41, 95], "variou": [1, 66], "vcxsrv": 79, "ve": [63, 74, 75, 76], "vecdot": [10, 24, 33], "vecentropi": 45, "vector": [5, 19, 22, 24, 33, 82, 91], "vendor_id_raw": 58, "venv": 74, "verbos": [1, 24, 26, 30], "veri": [0, 20, 24, 35, 65, 89, 90], "verifi": [0, 1, 20, 24, 68, 83, 90], "versa": [83, 90], "version": [0, 17, 20, 21, 24, 34, 35, 43, 55, 58, 61, 67, 72, 74, 75, 76, 78, 79], "version_info": [21, 34], "versionad": [24, 35], "versu": [24, 27, 83], "vertic": [24, 38, 47, 48, 96], "verticl": [24, 48, 97], "via": [0, 1, 17, 20, 21, 22, 24, 34, 35, 36, 37, 52, 74, 75, 76, 83, 88, 91, 93, 94, 95, 100], "vice": [83, 90], "view": [4, 8, 21, 24, 34, 35, 61, 65, 70, 74, 80, 94], "violat": [24, 35], "virtual": 74, "visibl": [17, 18, 24, 25, 27, 36, 47, 52, 99], "visit": [72, 75, 76], "visual": [24, 40], "vme": 58, "void": [24, 35], "voiddtyp": [24, 35], "vstack": [24, 38], "vsxrrl": [24, 37], "w": [17, 22, 24, 25, 31, 35, 36, 52, 54, 91, 100], "wa": [0, 17, 18, 19, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 47, 48, 52, 54, 62, 67, 68, 74, 76, 83, 91, 94, 96], "wai": [18, 24, 35, 41, 58, 62, 67, 72, 77, 86, 88, 89, 90, 94, 95, 100], "walk": [57, 59, 72], "want": [0, 1, 20, 21, 24, 34, 57, 72, 76, 78, 90], "warmup": 58, "warn": [1, 5, 7, 10, 11, 24, 27, 30, 35, 52, 83, 100], "warn_on_python": [24, 35], "we": [0, 1, 3, 4, 20, 21, 24, 25, 27, 33, 34, 36, 39, 41, 52, 53, 55, 57, 58, 59, 61, 63, 65, 66, 69, 74, 75, 76, 78, 79, 92, 94, 95], "web": [0, 61], "week": [24, 54, 91], "weekdai": [24, 54], "weekofyear": [24, 54], "weight": [20, 22, 24, 41, 91, 95], "welcom": 0, "well": [19, 24, 35, 53, 58, 65, 78], "went": 99, "were": [3, 22, 24, 25, 27, 35, 36, 47, 52, 62, 77, 91, 96, 100], "wget": 75, "what": [0, 21, 24, 34, 35, 38, 47, 57, 61, 62, 63, 77, 95, 99], "wheel": 74, "when": [0, 1, 3, 12, 17, 18, 19, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 39, 47, 48, 50, 52, 53, 54, 55, 57, 58, 61, 62, 63, 65, 67, 69, 74, 76, 77, 78, 79, 83, 86, 88, 90, 91, 94, 96, 98], "whenev": [24, 35, 100], "where": [1, 3, 4, 8, 11, 12, 17, 18, 20, 22, 24, 25, 27, 28, 29, 33, 35, 36, 37, 39, 41, 46, 47, 52, 55, 57, 58, 59, 60, 67, 72, 75, 76, 82, 83, 91, 92, 93, 94, 95, 96, 98, 99, 100], "wherea": [87, 100], "wherev": 63, "whether": [5, 6, 11, 12, 14, 15, 16, 17, 20, 21, 22, 24, 25, 27, 29, 31, 33, 34, 35, 36, 39, 47, 48, 52, 53, 54, 65, 83, 88, 96, 97, 98, 100], "which": [0, 3, 5, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 33, 34, 35, 36, 37, 38, 39, 41, 47, 48, 49, 52, 53, 54, 58, 60, 61, 63, 65, 74, 75, 76, 77, 81, 83, 85, 86, 88, 89, 90, 91, 94, 95, 96, 98, 99, 100], "whichev": 79, "whicn": [18, 99], "while": [3, 24, 27, 49, 57, 63, 67, 69, 74, 79, 83, 85], "whitespac": [21, 24, 27, 34, 35, 45, 52], "whl": 74, "who": [0, 75, 76], "whole": [24, 52, 61, 100], "whose": [5, 11, 20, 21, 24, 34, 35, 47, 48, 52, 97], "why": 57, "wide": [24, 41, 95, 100], "width": [19, 24, 35, 100], "wiki": [0, 24, 35, 43], "wikipedia": [24, 35, 43], "window": [24, 29, 46, 72, 80], "wise": [7, 17, 24, 33, 35, 36, 38, 82, 87], "wish": 77, "within": [5, 11, 17, 18, 20, 22, 23, 24, 25, 27, 35, 36, 37, 41, 47, 52, 58, 67, 69, 89, 90, 91, 95, 96], "without": [5, 17, 24, 27, 35, 36, 41, 63, 74, 83, 90, 95], "won": 63, "word": [3, 24, 41, 95], "work": [0, 17, 20, 24, 27, 36, 39, 42, 52, 62, 65, 67, 69, 75, 76, 77, 83, 88, 90, 93, 98, 100], "workflow": [0, 24, 27, 55, 61, 77, 83], "workhors": 91, "world": [24, 41, 52, 83, 95, 100], "worri": 62, "wors": 62, "would": [12, 24, 35, 55, 59, 63, 68, 83, 86, 91], "wrap": 57, "wraparound": 58, "wrapper": [4, 5, 7, 8, 19, 21, 24, 34, 35, 53, 94], "writ": 69, "write": [1, 4, 8, 17, 20, 24, 25, 27, 28, 30, 35, 36, 47, 48, 52, 57, 58, 61, 66, 83], "write_fil": [24, 27, 83], "write_line_to_fil": 28, "write_log": [24, 30], "writeln": 0, "written": [17, 20, 22, 24, 25, 27, 28, 30, 35, 36, 47, 48, 52, 57, 66, 67, 68, 69, 70, 74, 83, 91, 94], "wrong": [24, 27, 99], "wrote": 0, "wsl": 79, "wsl2": [58, 80], "wt": [20, 24, 48], "www": [24, 35], "x": [0, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 27, 33, 34, 35, 36, 40, 41, 43, 44, 45, 47, 52, 55, 57, 65, 79, 83, 86, 87, 88, 90, 91, 94, 95, 96, 100], "x00": [21, 24, 34, 35], "x00b": [21, 24, 34, 35], "x00c": [21, 24, 34, 35], "x1": [7, 10, 12, 24, 33, 35], "x2": [7, 10, 12, 24, 33, 35], "x410": 79, "x61": [24, 35], "x62": [24, 35], "x63": [24, 35], "x64": [24, 35], "x86": 75, "x86_64": [21, 24, 34, 35, 58, 75, 79], "x_edg": [24, 33], "xgetbv1": 58, "xlabel": [24, 40], "xlogi": [24, 44], "xor": [7, 20, 22, 24, 36, 47, 82, 91], "xore": [24, 33], "xsave": 58, "xsavec": 58, "xsaveopt": 58, "xserver": 79, "xtol": 45, "xtopologi": 58, "xvf": 75, "xy": 5, "xzf": [72, 76], "y": [21, 24, 33, 34, 35, 36, 40, 43, 44, 45, 57, 59, 75], "y_edg": [24, 33], "yaml": 78, "yaml_fil": 78, "ye": 59, "year": [24, 54], "yet": [3, 5, 7, 10, 24, 47, 74, 83, 87], "yield": [1, 17, 20, 24, 25, 27, 35, 36, 47, 52, 90, 93], "yml": [72, 75, 76, 78], "you": [0, 1, 17, 19, 20, 21, 22, 24, 25, 27, 34, 35, 36, 47, 48, 52, 54, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 72, 74, 75, 76, 77, 78, 79, 80, 90, 91, 93], "your": [0, 1, 20, 24, 25, 27, 35, 36, 52, 59, 60, 61, 63, 64, 72, 74, 75, 76, 77, 78, 79, 80, 90, 99, 100], "your_fork": [75, 76], "your_machin": 72, "yum": 75, "yyyi": 61, "z": [24, 33], "zarr": [4, 8, 24, 27], "zarrai": [24, 27], "zarrmsg": [24, 27], "zero": [5, 12, 21, 22, 24, 33, 34, 35, 36, 37, 45, 51, 61, 82, 89, 91, 93, 94], "zero_up": [3, 24], "zerodivisionerror": [24, 36, 37, 89], "zeromq": [74, 78], "zeros_lik": [5, 24, 37, 82, 89], "zig": [24, 41, 95], "ziggurat": [24, 41, 95], "zip": 72, "zmq": [1, 74], "zmqchannel": [18, 99], "zone": [24, 54], "zsh": 76, "zshrc": 76, "zstd": [17, 20, 24, 25, 27, 36, 47, 52, 58, 69], "\u00b2": [24, 52]}, "titles": ["Contributing", "Environment Variables", "arkouda.accessor", "arkouda.alignment", "arkouda.array_api.array_object", "arkouda.array_api.creation_functions", "arkouda.array_api.data_type_functions", "arkouda.array_api.elementwise_functions", "arkouda.array_api", "arkouda.array_api.indexing_functions", "arkouda.array_api.linalg", "arkouda.array_api.manipulation_functions", "arkouda.array_api.searching_functions", "arkouda.array_api.set_functions", "arkouda.array_api.sorting_functions", "arkouda.array_api.statistical_functions", "arkouda.array_api.utility_functions", "arkouda.categorical", "arkouda.client", "arkouda.client_dtypes", "arkouda.dataframe", "arkouda.dtypes", "arkouda.groupbyclass", "arkouda.history", "arkouda", "arkouda.index", "arkouda.infoclass", "arkouda.io", "arkouda.io_util", "arkouda.join", "arkouda.logger", "arkouda.match", "arkouda.matcher", "arkouda.numeric", "arkouda.numpy.dtypes", "arkouda.numpy", "arkouda.pdarrayclass", "arkouda.pdarraycreation", "arkouda.pdarraymanipulation", "arkouda.pdarraysetops", "arkouda.plotting", "arkouda.random", "arkouda.row", "arkouda.scipy", "arkouda.scipy.special", "arkouda.scipy.stats", "arkouda.security", "arkouda.segarray", "arkouda.series", "arkouda.sorting", "arkouda.sparrayclass", "arkouda.sparsematrix", "arkouda.strings", "arkouda.testing", "arkouda.timeclass", "arkouda.util", "API Reference", "Adding Your First Feature", "PyTest Benchmarks", "GASNet Development", "Reducing Memory Usage of Arkouda Builds", "Release Process", "Speeding up Arkouda Compilation", "Tips for Reproducing User Bugs", "Developer Documentation", "Examples", "CSV", "HDF5", "Import/Export", "Parquet", "File I/O", "Arkouda Documentation", "Quickstart", "Chapel API Reference", "Building the Server", "Linux", "MacOS", "Modular Server Builds", "Requirements", "Windows (WSL2)", "Installation", "Performance Testing", "Usage Guide", "Data I/O", "Indexs in Arkouda", "Sorting", "Arithmetic and Numeric Operations", "ArrayView in Arkouda", "Categoricals", "Creating Arrays", "DataFrames in Arkouda", "GroupBy", "Summarizing Data", "Indexing and Assignment", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">pdarray</span></code> class", "Random in Arkouda", "SegArrays in Arkouda", "Series in Arkouda", "Array Set Operations", "Startup", "Strings in Arkouda"], "titleterms": {"3": [72, 99], "The": [58, 94], "access": 96, "accessor": 2, "ad": [0, 1, 57, 77], "align": 3, "all": 74, "alwai": 62, "an": 77, "anaconda": [75, 76, 78], "api": [56, 66, 67, 68, 69, 70, 73], "append": [90, 96], "argsort": [81, 84], "argument": [58, 81], "arithmet": 86, "arkouda": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 62, 65, 66, 67, 69, 71, 72, 74, 75, 76, 77, 84, 87, 90, 95, 96, 97, 99, 100], "arrai": [65, 89, 96, 98], "array_api": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "array_object": 4, "arrayview": [67, 87], "arrow": 74, "assign": 93, "attribut": [4, 24, 26, 35, 46, 47, 50, 67], "basic": 65, "benchmark": 58, "between": 83, "bug": [0, 63], "build": [59, 60, 62, 63, 74, 76, 77], "cast": 94, "categor": [17, 67, 69, 88], "chang": 84, "chapel": [0, 1, 59, 73, 75, 76], "choic": 95, "class": [2, 4, 6, 8, 13, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 45, 47, 48, 50, 52, 54, 94], "client": [1, 18, 57, 72, 83, 99], "client_dtyp": 19, "clone": [75, 76], "code": 0, "column": 90, "compil": [1, 62], "compress": 69, "concat": 84, "concaten": [89, 90], "conda": 74, "configur": [59, 67, 74, 77], "connect": [72, 99], "constant": 89, "construct": 88, "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "contribut": 0, "convent": 0, "copi": 90, "core": 0, "count": [92, 97], "creat": [65, 89], "creation": [65, 87, 95], "creation_funct": 5, "csv": 66, "custom": 77, "data": [66, 67, 69, 83, 90, 92, 94], "data_type_funct": 6, "datafram": [20, 65, 66, 67, 69, 90], "dataset": 83, "dedupl": [90, 96], "depend": [1, 72, 74, 78], "descript": 92, "develop": [0, 59, 64, 78], "diff": 61, "differ": 96, "directori": 1, "disconnect": 72, "disk": 83, "distribut": [67, 74], "document": [64, 71, 74], "drop": 90, "dtype": [21, 34, 84], "effici": 63, "element": [86, 96], "elementwise_funct": 7, "environ": [1, 59, 62, 74, 75, 76], "exampl": [57, 65, 66], "except": [3, 24, 36], "exponenti": 95, "export": [65, 68, 70, 83], "express": 100, "featur": [0, 57, 84, 90, 95, 97], "file": [58, 66, 67, 70, 77, 83], "filter": 90, "first": 57, "flag": 1, "flatten": 100, "format": [66, 70, 83], "from": [1, 76, 83], "full": [58, 63], "function": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 49, 50, 51, 53, 54, 55, 57, 70, 86], "gasnet": 59, "gather": [81, 93], "gener": [61, 70], "get": 74, "git": 61, "groupbi": [65, 67, 90, 91], "groupbyclass": 22, "guid": [80, 82], "hdf5": 67, "head": [90, 97], "header": 66, "histogram": 92, "histori": 23, "homebrew": 76, "i": [70, 83, 100], "import": [65, 68, 70, 83], "index": [25, 66, 67, 69, 84, 87, 90, 93], "indexing_funct": 9, "individu": 74, "infoclass": 26, "instal": [72, 74, 75, 76, 78, 80], "instruct": 61, "integ": [93, 95], "integr": 97, "interact": 65, "interfac": 57, "intersect": 96, "io": 27, "io_util": 28, "issu": 0, "iter": [87, 88, 90, 94, 96, 100], "join": [29, 100], "json": 58, "l": 70, "larg": 83, "launch": [72, 99], "legaci": 67, "linalg": 10, "lint": 0, "linux": 75, "list": 78, "log": 61, "logger": 30, "logic": 93, "logist": 95, "lognorm": 95, "lookup": [84, 97], "maco": 76, "makefil": 1, "manipulation_funct": 11, "manual": 74, "map": 65, "match": [31, 100], "matcher": 32, "memori": 60, "merg": 0, "metadata": 67, "method": [96, 100], "mode": [67, 69], "modul": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 77], "modular": [62, 74, 77], "name": [81, 94], "new": 77, "next": [75, 76], "ngram": 96, "normal": 95, "note": 61, "numer": [33, 86], "numpi": [34, 35], "o": [70, 83, 100], "object": [65, 100], "onli": 0, "oper": [65, 86, 88, 94, 96, 98, 100], "output": 58, "outsid": 1, "overview": 80, "packag": [8, 21, 24, 41, 53, 74], "panda": [65, 97], "parquet": 69, "path": 1, "pdarrai": [65, 66, 67, 69, 93, 94], "pdarrayclass": 36, "pdarraycr": 37, "pdarraymanipul": 38, "pdarraysetop": 39, "perform": [81, 96, 100], "permut": [90, 95], "pip": [74, 78], "plot": 40, "poisson": 95, "posit": 81, "prefix": 96, "prepend": 96, "preprocess": 83, "process": [0, 61, 77], "pull": 0, "pytest": 58, "python": [0, 1, 57, 65, 72, 75, 76, 78, 99], "python3": 0, "quickstart": 72, "random": [41, 89, 95], "rank": 94, "read": [58, 70, 83], "recommend": [74, 76], "reduc": [60, 81], "reduct": 86, "refer": [56, 66, 67, 68, 69, 73], "regular": [89, 100], "releas": [0, 61], "renam": 90, "report": 0, "repositori": [75, 76], "reproduc": 63, "request": 0, "requir": [78, 80], "reset": 90, "reshap": 94, "review": 0, "rhel": 75, "row": 42, "run": [0, 1, 58, 59, 77], "save": [63, 77], "scalar": 86, "scan": [81, 86], "scatter": [81, 93], "schema": 67, "scipi": [43, 44, 45], "search": 100, "searching_funct": 12, "secur": 46, "segarrai": [47, 67, 69, 96], "seri": [48, 97], "server": [57, 72, 74, 77, 83, 99], "set": [62, 65, 96, 98], "set_funct": 13, "setop": 96, "shuffl": 95, "shutdown": 72, "singl": 58, "size": 96, "slice": 93, "sort": [49, 85, 90, 97], "sorting_funct": 14, "sourc": 76, "sparrayclass": 50, "sparsematrix": 51, "special": 44, "specif": [78, 96, 100], "specifi": 77, "speed": 62, "split": 100, "src": 1, "standard_exponenti": 95, "standard_norm": 95, "start": 74, "startup": 99, "stat": 45, "statist": 92, "statistical_funct": 15, "step": [61, 75, 76], "stream": 81, "string": [52, 66, 67, 69, 100], "sub": 96, "submodul": [8, 24, 35, 43], "subpackag": 24, "substr": 100, "suffix": 96, "suit": 58, "summar": 92, "support": [66, 67, 69, 70, 83], "symmetr": 96, "system": 62, "tail": [90, 97], "team": 0, "test": [0, 1, 53, 58, 81], "timeclass": 54, "tip": 63, "troubleshoot": 74, "type": [66, 67, 69, 90, 94], "ubuntu": 75, "uniform": 95, "union": 96, "up": 62, "updat": [76, 78], "us": [62, 65, 72, 74, 77, 78], "usag": [60, 82], "user": 63, "util": 55, "utility_funct": 16, "valu": [92, 97], "variabl": [1, 62], "vector": 86, "where": 86, "window": 79, "wise": 86, "without": 66, "write": [0, 67, 69, 70], "wsl2": 79, "your": 57}})