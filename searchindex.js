Search.setIndex({"alltitles": {"API Reference": [[63, "api-reference"], [73, "api-reference"], [74, "api-reference"], [75, "api-reference"], [76, "api-reference"]], "Access/Set Specific Elements in Sub-Array": [[103, "access-set-specific-elements-in-sub-array"]], "Adding Functionality to the Arkouda Server": [[64, "adding-functionality-to-the-arkouda-server"]], "Adding Issues": [[0, "adding-issues"]], "Adding Python Functionality (Client Interface)": [[64, "adding-python-functionality-client-interface"]], "Adding Your First Feature": [[64, "adding-your-first-feature"]], "Adding a Module from Outside the Arkouda src Directory": [[1, "adding-a-module-from-outside-the-arkouda-src-directory"]], "Adding new modules into the build process": [[84, "adding-new-modules-into-the-build-process"]], "All Dependencies": [[81, "all-dependencies"]], "Anaconda": [[83, "anaconda"]], "Append": [[97, "append"]], "Append & Prepend": [[103, "append-prepend"]], "ArgSort": [[91, "argsort"]], "Argsort": [[88, "argsort"]], "Arithmetic and Numeric Operations": [[93, "arithmetic-and-numeric-operations"]], "Arkouda Arrays": [[72, "arkouda-arrays"]], "Arkouda DataFrames": [[72, "arkouda-dataframes"]], "Arkouda Documentation": [[78, "arkouda-documentation"]], "Arkouda Formatted File": [[73, "arkouda-formatted-file"]], "Array Set Operations": [[105, "array-set-operations"]], "ArrayView": [[74, "arrayview"]], "ArrayView in Arkouda": [[94, "arrayview-in-arkouda"]], "Arrow Install Troubleshooting": [[81, "arrow-install-troubleshooting"]], "Attributes": [[4, "attributes"], [16, "attributes"], [25, "attributes"], [26, "attributes"], [28, "attributes"], [30, "attributes"], [39, "attributes"], [56, "attributes"], [57, "attributes"]], "Basic Interaction": [[72, "basic-interaction"]], "Benchmark Arguments": [[65, "benchmark-arguments"]], "Between client and server": [[90, "between-client-and-server"]], "Bug Reports": [[0, "bug-reports"]], "Build Arkouda": [[66, "build-arkouda"]], "Build Chapel with GASNet": [[66, "build-chapel-with-gasnet"]], "Build from Source (Recommended)": [[83, "build-from-source-recommended"]], "Build the Server": [[81, "build-the-server"]], "Building the Arkouda Documentation": [[81, "building-the-arkouda-documentation"]], "Building the Server": [[81, "building-the-server"]], "CSV": [[73, "csv"]], "Categorical": [[74, "categorical"], [74, "id3"], [76, "categorical"]], "Categoricals": [[95, "categoricals"]], "Change Dtype": [[91, "change-dtype"]], "Chapel": [[0, "chapel"]], "Chapel API Reference": [[80, "chapel-api-reference"]], "Chapel Compiler Flags": [[1, "chapel-compiler-flags"]], "Chapel Installation": [[82, "chapel-installation"]], "Classes": [[2, "classes"], [4, "classes"], [7, "classes"], [13, "classes"], [16, "classes"], [20, "classes"], [21, "classes"], [23, "classes"], [24, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [39, "classes"], [41, "classes"], [45, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [51, "classes"], [54, "classes"], [57, "classes"], [58, "classes"], [60, "classes"], [61, "classes"]], "Clone Arkouda Repository": [[82, "clone-arkouda-repository"], [83, "clone-arkouda-repository"]], "Coding Conventions and Linting": [[0, "coding-conventions-and-linting"]], "Compilation / Makefile": [[1, "compilation-makefile"]], "Compression": [[76, "compression"]], "Concat": [[91, "concat"]], "Concatenate": [[97, "concatenate"]], "Concatenation": [[96, "concatenation"]], "Connect a Python 3 client": [[106, "connect-a-python-3-client"]], "Connect the Python 3 Client": [[79, "connect-the-python-3-client"]], "Constant": [[96, "constant"]], "Construction": [[95, "construction"]], "Contributing": [[0, "contributing"]], "Copy": [[97, "copy"]], "Core Development Team Only": [[0, "core-development-team-only"]], "Creating & Using a DataFrame": [[72, "creating-using-a-dataframe"]], "Creating Arrays": [[96, "creating-arrays"]], "Creation": [[94, "creation"], [102, "creation"]], "Data Distribution": [[74, "data-distribution"]], "Data Formatting": [[73, "data-formatting"]], "Data I/O": [[90, "data-i-o"]], "Data Preprocessing": [[90, "data-preprocessing"]], "Data Schema": [[74, "data-schema"]], "Data Type": [[101, "data-type"]], "Data Types": [[97, "data-types"]], "DataFrame": [[73, "dataframe"], [74, "dataframe"], [76, "dataframe"]], "DataFrames": [[72, "dataframes"]], "DataFrames in Arkouda": [[97, "dataframes-in-arkouda"]], "Deduplication": [[97, "deduplication"], [103, "deduplication"]], "Dependencies": [[81, "dependencies"]], "Dependency Configuration": [[81, "dependency-configuration"]], "Dependency List": [[85, "dependency-list"]], "Dependency Paths": [[1, "dependency-paths"]], "Descriptive Statistics": [[99, "descriptive-statistics"]], "Developer Documentation": [[71, "developer-documentation"]], "Developer Specific": [[85, "developer-specific"]], "Developing Arkouda": [[0, "developing-arkouda"]], "Diff the git logs": [[68, "diff-the-git-logs"]], "Distributable Package": [[81, "distributable-package"]], "Drop": [[97, "drop"]], "Element-wise Functions": [[93, "element-wise-functions"]], "Environment Configuration": [[66, "environment-configuration"]], "Environment Variables": [[1, "environment-variables"], [81, "environment-variables"]], "Environment Variables to Always Set": [[69, "environment-variables-to-always-set"]], "Example": [[64, "example"], [64, "id1"]], "Example Files": [[73, "example-files"]], "Examples": [[72, "examples"]], "Export": [[75, "export"]], "Exporting pdarray Objects": [[72, "exporting-pdarray-objects"]], "Exporting to Pandas": [[72, "exporting-to-pandas"]], "Feature Requests": [[0, "feature-requests"]], "Features": [[91, "features"], [97, "features"], [102, "features"], [104, "features"]], "File Configuration": [[74, "file-configuration"]], "File Formatting": [[73, "file-formatting"]], "File I/O": [[77, "file-i-o"]], "File Without Header": [[73, "file-without-header"]], "Filter": [[97, "filter"]], "Flattening": [[107, "flattening"]], "Functions": [[2, "functions"], [3, "functions"], [4, "functions"], [6, "functions"], [7, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [17, "functions"], [19, "functions"], [22, "functions"], [23, "functions"], [24, "functions"], [25, "functions"], [26, "functions"], [28, "functions"], [30, "functions"], [31, "functions"], [32, "functions"], [33, "functions"], [34, "functions"], [37, "functions"], [41, "functions"], [42, "functions"], [43, "functions"], [44, "functions"], [45, "functions"], [46, "functions"], [47, "functions"], [49, "functions"], [51, "functions"], [52, "functions"], [53, "functions"], [56, "functions"], [57, "functions"], [59, "functions"], [61, "functions"], [62, "functions"]], "GASNet Development": [[66, "gasnet-development"]], "Gather": [[88, "gather"]], "Gather/Scatter (pdarray)": [[100, "gather-scatter-pdarray"]], "General I/O API": [[77, "general-i-o-api"]], "Generating release notes": [[68, "generating-release-notes"]], "Getting Started": [[81, "getting-started"]], "GroupBy": [[72, "groupby"], [74, "groupby"], [74, "id5"], [97, "groupby"], [98, "groupby"]], "HDF5": [[74, "hdf5"]], "Head/Tail": [[104, "head-tail"]], "Histogram": [[99, "histogram"]], "Homebrew": [[83, "homebrew"]], "I/O": [[107, "i-o"]], "Import": [[75, "import"]], "Import/Export": [[75, "import-export"], [90, "import-export"]], "Import/Export Support": [[77, "import-export-support"]], "Importing Pandas DataFrame": [[72, "importing-pandas-dataframe"]], "Index": [[73, "index"], [74, "index"], [76, "index"]], "Indexing": [[94, "indexing"]], "Indexing and Assignment": [[100, "indexing-and-assignment"]], "Indexs in Arkouda": [[91, "indexs-in-arkouda"]], "Individual Installs": [[81, "individual-installs"]], "Input": [[28, "input"], [58, "input"]], "Install Arkouda": [[79, "install-arkouda"]], "Install Chapel": [[83, "install-chapel"]], "Install Chapel (RHEL)": [[82, "install-chapel-rhel"]], "Install Chapel (Ubuntu)": [[82, "install-chapel-ubuntu"]], "Install Dependencies": [[79, "install-dependencies"]], "Install Guides": [[87, "install-guides"]], "Installation": [[87, "installation"]], "Installing Dependencies Manually": [[81, "installing-dependencies-manually"]], "Installing/Updating Python Dependencies": [[85, "installing-updating-python-dependencies"]], "Integer": [[100, "integer"]], "Integer pdarray index": [[100, "integer-pdarray-index"]], "Intersect": [[103, "intersect"]], "Iteration": [[94, "iteration"], [95, "iteration"], [97, "iteration"], [101, "iteration"], [103, "iteration"], [107, "iteration"]], "Large Datasets": [[90, "large-datasets"]], "Launch arkouda server": [[106, "launch-arkouda-server"]], "Launching the Server": [[79, "launching-the-server"]], "Legacy File Support": [[74, "legacy-file-support"]], "Linux": [[82, "linux"]], "Logical indexing": [[100, "logical-indexing"]], "Lookup": [[91, "lookup"], [104, "lookup"], [104, "id1"]], "MacOS": [[83, "macos"]], "Match Object": [[107, "match-object"]], "Merging Pull Requests": [[0, "merging-pull-requests"]], "MetaData Attributes": [[74, "metadata-attributes"]], "Modular Building": [[81, "modular-building"]], "Modular Server Builds": [[84, "modular-server-builds"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [39, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [48, "module-contents"], [49, "module-contents"], [52, "module-contents"], [54, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"]], "NGrams": [[103, "ngrams"]], "Name": [[101, "name"]], "Named Arguments": [[88, "named-arguments"], [88, "named-arguments"], [88, "named-arguments"], [88, "named-arguments"], [88, "named-arguments"], [88, "named-arguments"]], "Next Steps": [[82, "next-steps"], [83, "next-steps"]], "Operation": [[103, "operation"]], "Operations": [[95, "operations"], [107, "operations"]], "Operators": [[101, "operators"]], "Overview": [[87, "overview"]], "Package Contents": [[18, "package-contents"], [28, "package-contents"], [47, "package-contents"], [51, "package-contents"], [53, "package-contents"]], "Pandas Integration": [[104, "pandas-integration"]], "Parquet": [[76, "parquet"]], "Performance": [[103, "performance"], [107, "performance"]], "Performance Testing": [[88, "performance-testing"]], "Permutations": [[97, "permutations"]], "Positional Arguments": [[88, "positional-arguments"], [88, "positional-arguments"], [88, "positional-arguments"], [88, "positional-arguments"], [88, "positional-arguments"], [88, "positional-arguments"]], "Prefix & Suffix": [[103, "prefix-suffix"]], "PyTest Benchmarks": [[65, "pytest-benchmarks"]], "Python Client": [[1, "python-client"]], "Python Dependencies": [[85, "python-dependencies"]], "Python Environment - Anaconda": [[83, "python-environment-anaconda"]], "Python Environment - Anaconda (Linux)": [[82, "python-environment-anaconda-linux"]], "Python Mapping": [[72, "python-mapping"]], "Python3": [[0, "python3"]], "Quickstart": [[79, "quickstart"]], "Random": [[96, "random"]], "Random in Arkouda": [[102, "random-in-arkouda"]], "Rank": [[101, "rank"]], "Read": [[77, "read"]], "Reading data from disk": [[90, "reading-data-from-disk"]], "Reading the JSON Output": [[65, "reading-the-json-output"]], "Reduce": [[88, "reduce"]], "Reducing Memory Usage of Arkouda Builds": [[67, "reducing-memory-usage-of-arkouda-builds"]], "Reductions": [[93, "reductions"]], "Regular": [[96, "regular"]], "Regular Expressions": [[107, "regular-expressions"]], "Release Process": [[0, "release-process"], [68, "release-process"]], "Rename Columns": [[97, "rename-columns"]], "Reproducing User Bugs Efficiently": [[70, "reproducing-user-bugs-efficiently"]], "Requirements": [[85, "requirements"], [87, "requirements"]], "Reset Indexes": [[97, "reset-indexes"]], "Reshape": [[101, "reshape"]], "Reviewing Pull Requests": [[0, "reviewing-pull-requests"]], "Run Arkouda": [[66, "run-arkouda"]], "Running": [[1, "running"]], "Running Single Files or Tests": [[65, "running-single-files-or-tests"]], "Running The Full Suite": [[65, "running-the-full-suite"]], "Running chapel tests": [[0, "running-chapel-tests"]], "Running python tests": [[0, "running-python-tests"]], "Saving Full Builds": [[70, "saving-full-builds"]], "Saving modules used in an Arkouda server run": [[84, "saving-modules-used-in-an-arkouda-server-run"]], "Scan": [[88, "scan"]], "Scans": [[93, "scans"]], "Scatter": [[88, "scatter"]], "SegArray": [[74, "segarray"], [74, "id4"], [76, "segarray"]], "SegArray SetOps": [[103, "segarray-setops"]], "SegArray Specific Methods": [[103, "segarray-specific-methods"]], "SegArrays in Arkouda": [[103, "segarrays-in-arkouda"]], "Series in Arkouda": [[104, "series-in-arkouda"]], "Set Difference": [[103, "set-difference"]], "Shutdown/Disconnect": [[79, "shutdown-disconnect"]], "Slice": [[100, "slice"]], "Sorting": [[92, "sorting"], [97, "sorting"], [104, "sorting"]], "Specifying a custom configuration file": [[84, "specifying-a-custom-configuration-file"]], "Speeding up Arkouda Compilation": [[69, "speeding-up-arkouda-compilation"]], "Splitting and joining": [[107, "splitting-and-joining"]], "Startup": [[106, "startup"]], "Step-by-step instructions": [[68, "step-by-step-instructions"]], "Stream": [[88, "stream"]], "String-Specific Methods": [[107, "string-specific-methods"]], "Strings": [[73, "strings"], [74, "strings"], [74, "id2"], [76, "strings"]], "Strings in Arkouda": [[107, "strings-in-arkouda"]], "Sub-array of Size": [[103, "sub-array-of-size"]], "Submodules": [[18, "submodules"], [28, "submodules"], [40, "submodules"], [51, "submodules"], [55, "submodules"]], "Subpackages": [[28, "subpackages"], [40, "subpackages"], [51, "subpackages"]], "Substring search": [[107, "substring-search"]], "Summarizing Data": [[99, "summarizing-data"]], "Support Arkouda Data Types": [[73, "support-arkouda-data-types"]], "Supported Arkouda Data Types": [[74, "supported-arkouda-data-types"], [76, "supported-arkouda-data-types"]], "Supported File Formats": [[90, "supported-file-formats"]], "Supported File Formats:": [[77, null]], "Supported Write Modes": [[74, "supported-write-modes"], [76, "supported-write-modes"]], "Symmetric Difference": [[103, "symmetric-difference"]], "Tail/Head of Data": [[97, "tail-head-of-data"]], "Testing": [[0, "testing"], [1, "testing"]], "The pdarray class": [[101, "the-pdarray-class"]], "Tips for Reproducing User Bugs": [[70, "tips-for-reproducing-user-bugs"]], "Type Casting": [[101, "type-casting"]], "Union": [[103, "union"]], "Update Kernel": [[82, "update-kernel"]], "Updating Environment": [[83, "updating-environment"]], "Usage Guide": [[89, "usage-guide"]], "Using Anaconda": [[85, "using-anaconda"]], "Using Arkouda": [[79, "using-arkouda"]], "Using Environment Installed Dependencies (Recommended)": [[81, "using-environment-installed-dependencies-recommended"]], "Using Pip": [[85, "using-pip"]], "Using the Modular Build System": [[69, "using-the-modular-build-system"]], "Value Counts": [[99, "value-counts"], [104, "value-counts"]], "Vector and Scalar Arithmetic": [[93, "vector-and-scalar-arithmetic"]], "Where": [[93, "where"]], "Windows (WSL2)": [[86, "windows-wsl2"]], "Write": [[77, "write"]], "Writing Pull Requests": [[0, "writing-pull-requests"]], "arkouda": [[28, "module-arkouda"]], "arkouda.accessor": [[2, "module-arkouda.accessor"]], "arkouda.alignment": [[3, "module-arkouda.alignment"]], "arkouda.array_api": [[18, "module-arkouda.array_api"]], "arkouda.array_api._array_object": [[4, "module-arkouda.array_api._array_object"]], "arkouda.array_api._constants": [[5, "module-arkouda.array_api._constants"]], "arkouda.array_api._creation_functions": [[6, "module-arkouda.array_api._creation_functions"]], "arkouda.array_api._data_type_functions": [[7, "module-arkouda.array_api._data_type_functions"]], "arkouda.array_api._dtypes": [[8, "module-arkouda.array_api._dtypes"]], "arkouda.array_api._elementwise_functions": [[9, "module-arkouda.array_api._elementwise_functions"]], "arkouda.array_api._indexing_functions": [[10, "module-arkouda.array_api._indexing_functions"]], "arkouda.array_api._manipulation_functions": [[11, "module-arkouda.array_api._manipulation_functions"]], "arkouda.array_api._searching_functions": [[12, "module-arkouda.array_api._searching_functions"]], "arkouda.array_api._set_functions": [[13, "module-arkouda.array_api._set_functions"]], "arkouda.array_api._sorting_functions": [[14, "module-arkouda.array_api._sorting_functions"]], "arkouda.array_api._statistical_functions": [[15, "module-arkouda.array_api._statistical_functions"]], "arkouda.array_api._typing": [[16, "module-arkouda.array_api._typing"]], "arkouda.array_api._utility_functions": [[17, "module-arkouda.array_api._utility_functions"]], "arkouda.array_api.linalg": [[19, "module-arkouda.array_api.linalg"]], "arkouda.array_view": [[20, "module-arkouda.array_view"]], "arkouda.categorical": [[21, "module-arkouda.categorical"]], "arkouda.client": [[22, "module-arkouda.client"]], "arkouda.client_dtypes": [[23, "module-arkouda.client_dtypes"]], "arkouda.dataframe": [[24, "module-arkouda.dataframe"]], "arkouda.dtypes": [[25, "module-arkouda.dtypes"]], "arkouda.groupbyclass": [[26, "module-arkouda.groupbyclass"]], "arkouda.history": [[27, "module-arkouda.history"]], "arkouda.index": [[29, "module-arkouda.index"]], "arkouda.infoclass": [[30, "module-arkouda.infoclass"]], "arkouda.io": [[31, "module-arkouda.io"]], "arkouda.io_util": [[32, "module-arkouda.io_util"]], "arkouda.join": [[33, "module-arkouda.join"]], "arkouda.logger": [[34, "module-arkouda.logger"]], "arkouda.match": [[35, "module-arkouda.match"]], "arkouda.matcher": [[36, "module-arkouda.matcher"]], "arkouda.numeric": [[37, "module-arkouda.numeric"]], "arkouda.numpy": [[40, "module-arkouda.numpy"]], "arkouda.numpy.char": [[38, "module-arkouda.numpy.char"]], "arkouda.numpy.imports": [[39, "module-arkouda.numpy.imports"]], "arkouda.pdarrayclass": [[41, "module-arkouda.pdarrayclass"]], "arkouda.pdarraycreation": [[42, "module-arkouda.pdarraycreation"]], "arkouda.pdarraysetops": [[43, "module-arkouda.pdarraysetops"]], "arkouda.plotting": [[44, "module-arkouda.plotting"]], "arkouda.random": [[47, "module-arkouda.random"]], "arkouda.random._generator": [[45, "module-arkouda.random._generator"]], "arkouda.random._legacy": [[46, "module-arkouda.random._legacy"]], "arkouda.row": [[48, "module-arkouda.row"]], "arkouda.scipy": [[51, "module-arkouda.scipy"]], "arkouda.scipy._stats_py": [[49, "module-arkouda.scipy._stats_py"]], "arkouda.scipy.imports": [[50, "module-arkouda.scipy.imports"]], "arkouda.scipy.special": [[53, "module-arkouda.scipy.special"]], "arkouda.scipy.special._math": [[52, "module-arkouda.scipy.special._math"]], "arkouda.scipy.stats": [[55, "module-arkouda.scipy.stats"]], "arkouda.scipy.stats.imports": [[54, "module-arkouda.scipy.stats.imports"]], "arkouda.security": [[56, "module-arkouda.security"]], "arkouda.segarray": [[57, "module-arkouda.segarray"]], "arkouda.series": [[58, "module-arkouda.series"]], "arkouda.sorting": [[59, "module-arkouda.sorting"]], "arkouda.strings": [[60, "module-arkouda.strings"]], "arkouda.timeclass": [[61, "module-arkouda.timeclass"]], "arkouda.util": [[62, "module-arkouda.util"]], "integers": [[102, "integers"]], "ls Functionality": [[77, "ls-functionality"]], "pdarray": [[73, "pdarray"], [74, "pdarray"], [74, "id1"], [76, "pdarray"]], "pdarray Creation": [[72, "pdarray-creation"]], "pdarray Set operations": [[72, "pdarray-set-operations"]], "pdarrays": [[72, "pdarrays"]], "random": [[102, "random"]], "standard_normal": [[102, "standard-normal"]], "uniform": [[102, "uniform"]]}, "docnames": ["CONTRIBUTING_LINK", "ENVIRONMENT", "autoapi/arkouda/accessor/index", "autoapi/arkouda/alignment/index", "autoapi/arkouda/array_api/_array_object/index", "autoapi/arkouda/array_api/_constants/index", "autoapi/arkouda/array_api/_creation_functions/index", "autoapi/arkouda/array_api/_data_type_functions/index", "autoapi/arkouda/array_api/_dtypes/index", "autoapi/arkouda/array_api/_elementwise_functions/index", "autoapi/arkouda/array_api/_indexing_functions/index", "autoapi/arkouda/array_api/_manipulation_functions/index", "autoapi/arkouda/array_api/_searching_functions/index", "autoapi/arkouda/array_api/_set_functions/index", "autoapi/arkouda/array_api/_sorting_functions/index", "autoapi/arkouda/array_api/_statistical_functions/index", "autoapi/arkouda/array_api/_typing/index", "autoapi/arkouda/array_api/_utility_functions/index", "autoapi/arkouda/array_api/index", "autoapi/arkouda/array_api/linalg/index", "autoapi/arkouda/array_view/index", "autoapi/arkouda/categorical/index", "autoapi/arkouda/client/index", "autoapi/arkouda/client_dtypes/index", "autoapi/arkouda/dataframe/index", "autoapi/arkouda/dtypes/index", "autoapi/arkouda/groupbyclass/index", "autoapi/arkouda/history/index", "autoapi/arkouda/index", "autoapi/arkouda/index/index", "autoapi/arkouda/infoclass/index", "autoapi/arkouda/io/index", "autoapi/arkouda/io_util/index", "autoapi/arkouda/join/index", "autoapi/arkouda/logger/index", "autoapi/arkouda/match/index", "autoapi/arkouda/matcher/index", "autoapi/arkouda/numeric/index", "autoapi/arkouda/numpy/char/index", "autoapi/arkouda/numpy/imports/index", "autoapi/arkouda/numpy/index", "autoapi/arkouda/pdarrayclass/index", "autoapi/arkouda/pdarraycreation/index", "autoapi/arkouda/pdarraysetops/index", "autoapi/arkouda/plotting/index", "autoapi/arkouda/random/_generator/index", "autoapi/arkouda/random/_legacy/index", "autoapi/arkouda/random/index", "autoapi/arkouda/row/index", "autoapi/arkouda/scipy/_stats_py/index", "autoapi/arkouda/scipy/imports/index", "autoapi/arkouda/scipy/index", "autoapi/arkouda/scipy/special/_math/index", "autoapi/arkouda/scipy/special/index", "autoapi/arkouda/scipy/stats/imports/index", "autoapi/arkouda/scipy/stats/index", "autoapi/arkouda/security/index", "autoapi/arkouda/segarray/index", "autoapi/arkouda/series/index", "autoapi/arkouda/sorting/index", "autoapi/arkouda/strings/index", "autoapi/arkouda/timeclass/index", "autoapi/arkouda/util/index", "autoapi/index", "developer/ADDING_FEATURES", "developer/BENCHMARK", "developer/GASNET", "developer/MEMORY", "developer/RELEASE_PROCESS", "developer/TIPS", "developer/USER_BUGS", "developer/dev_menu", "examples", "file_io/CSV", "file_io/HDF5", "file_io/IMPORT_EXPORT", "file_io/PARQUET", "file_io/io_menu", "index", "quickstart", "server/index", "setup/BUILD", "setup/LINUX_INSTALL", "setup/MAC_INSTALL", "setup/MODULAR", "setup/REQUIREMENTS", "setup/WINDOWS_INSTALL", "setup/install_menu", "setup/testing", "usage", "usage/IO", "usage/Index", "usage/argsort", "usage/arithmetic", "usage/arrayview", "usage/categorical", "usage/creation", "usage/dataframe", "usage/groupby", "usage/histogram", "usage/indexing", "usage/pdarray", "usage/random", "usage/segarray", "usage/series", "usage/setops", "usage/startup", "usage/strings"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["CONTRIBUTING_LINK.md", "ENVIRONMENT.md", "autoapi/arkouda/accessor/index.rst", "autoapi/arkouda/alignment/index.rst", "autoapi/arkouda/array_api/_array_object/index.rst", "autoapi/arkouda/array_api/_constants/index.rst", "autoapi/arkouda/array_api/_creation_functions/index.rst", "autoapi/arkouda/array_api/_data_type_functions/index.rst", "autoapi/arkouda/array_api/_dtypes/index.rst", "autoapi/arkouda/array_api/_elementwise_functions/index.rst", "autoapi/arkouda/array_api/_indexing_functions/index.rst", "autoapi/arkouda/array_api/_manipulation_functions/index.rst", "autoapi/arkouda/array_api/_searching_functions/index.rst", "autoapi/arkouda/array_api/_set_functions/index.rst", "autoapi/arkouda/array_api/_sorting_functions/index.rst", "autoapi/arkouda/array_api/_statistical_functions/index.rst", "autoapi/arkouda/array_api/_typing/index.rst", "autoapi/arkouda/array_api/_utility_functions/index.rst", "autoapi/arkouda/array_api/index.rst", "autoapi/arkouda/array_api/linalg/index.rst", "autoapi/arkouda/array_view/index.rst", "autoapi/arkouda/categorical/index.rst", "autoapi/arkouda/client/index.rst", "autoapi/arkouda/client_dtypes/index.rst", "autoapi/arkouda/dataframe/index.rst", "autoapi/arkouda/dtypes/index.rst", "autoapi/arkouda/groupbyclass/index.rst", "autoapi/arkouda/history/index.rst", "autoapi/arkouda/index.rst", "autoapi/arkouda/index/index.rst", "autoapi/arkouda/infoclass/index.rst", "autoapi/arkouda/io/index.rst", "autoapi/arkouda/io_util/index.rst", "autoapi/arkouda/join/index.rst", "autoapi/arkouda/logger/index.rst", "autoapi/arkouda/match/index.rst", "autoapi/arkouda/matcher/index.rst", "autoapi/arkouda/numeric/index.rst", "autoapi/arkouda/numpy/char/index.rst", "autoapi/arkouda/numpy/imports/index.rst", "autoapi/arkouda/numpy/index.rst", "autoapi/arkouda/pdarrayclass/index.rst", "autoapi/arkouda/pdarraycreation/index.rst", "autoapi/arkouda/pdarraysetops/index.rst", "autoapi/arkouda/plotting/index.rst", "autoapi/arkouda/random/_generator/index.rst", "autoapi/arkouda/random/_legacy/index.rst", "autoapi/arkouda/random/index.rst", "autoapi/arkouda/row/index.rst", "autoapi/arkouda/scipy/_stats_py/index.rst", "autoapi/arkouda/scipy/imports/index.rst", "autoapi/arkouda/scipy/index.rst", "autoapi/arkouda/scipy/special/_math/index.rst", "autoapi/arkouda/scipy/special/index.rst", "autoapi/arkouda/scipy/stats/imports/index.rst", "autoapi/arkouda/scipy/stats/index.rst", "autoapi/arkouda/security/index.rst", "autoapi/arkouda/segarray/index.rst", "autoapi/arkouda/series/index.rst", "autoapi/arkouda/sorting/index.rst", "autoapi/arkouda/strings/index.rst", "autoapi/arkouda/timeclass/index.rst", "autoapi/arkouda/util/index.rst", "autoapi/index.rst", "developer/ADDING_FEATURES.md", "developer/BENCHMARK.md", "developer/GASNET.md", "developer/MEMORY.md", "developer/RELEASE_PROCESS.md", "developer/TIPS.md", "developer/USER_BUGS.md", "developer/dev_menu.rst", "examples.rst", "file_io/CSV.md", "file_io/HDF5.md", "file_io/IMPORT_EXPORT.md", "file_io/PARQUET.md", "file_io/io_menu.rst", "index.rst", "quickstart.rst", "server/index.rst", "setup/BUILD.md", "setup/LINUX_INSTALL.md", "setup/MAC_INSTALL.md", "setup/MODULAR.md", "setup/REQUIREMENTS.md", "setup/WINDOWS_INSTALL.md", "setup/install_menu.rst", "setup/testing.rst", "usage.rst", "usage/IO.rst", "usage/Index.rst", "usage/argsort.rst", "usage/arithmetic.rst", "usage/arrayview.rst", "usage/categorical.rst", "usage/creation.rst", "usage/dataframe.rst", "usage/groupby.rst", "usage/histogram.rst", "usage/indexing.rst", "usage/pdarray.rst", "usage/random.rst", "usage/segarray.rst", "usage/series.rst", "usage/setops.rst", "usage/startup.rst", "usage/strings.rst"], "indexentries": {"a() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.a", false]], "abs() (arkouda.timeclass.timedelta method)": [[61, "arkouda.timeclass.Timedelta.abs", false]], "abs() (arkouda.timedelta method)": [[28, "arkouda.Timedelta.abs", false], [28, "id463", false]], "abs() (in module arkouda)": [[28, "arkouda.abs", false], [93, "arkouda.abs", false]], "abs() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.abs", false]], "abs() (in module arkouda.numeric)": [[37, "arkouda.numeric.abs", false]], "acos() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.acos", false]], "acosh() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.acosh", false]], "add() (arkouda.series method)": [[28, "arkouda.Series.add", false]], "add() (arkouda.series.series method)": [[58, "arkouda.series.Series.add", false]], "add() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.add", false]], "aggregate() (arkouda.groupby method)": [[28, "arkouda.GroupBy.aggregate", false], [28, "id237", false], [28, "id281", false], [28, "id325", false], [28, "id369", false], [28, "id413", false], [98, "arkouda.GroupBy.aggregate", false]], "aggregate() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.aggregate", false]], "aggregate() (arkouda.segarray method)": [[28, "arkouda.SegArray.aggregate", false]], "aggregate() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.aggregate", false]], "akabs() (in module arkouda)": [[28, "arkouda.akabs", false]], "akbool (in module arkouda)": [[28, "arkouda.akbool", false], [28, "id471", false]], "akcast() (in module arkouda)": [[28, "arkouda.akcast", false], [28, "id472", false]], "akfloat64 (in module arkouda)": [[28, "arkouda.akfloat64", false], [28, "id473", false]], "akint64 (in module arkouda)": [[28, "arkouda.akint64", false], [28, "id474", false], [28, "id475", false]], "akuint64 (in module arkouda)": [[28, "arkouda.akuint64", false], [28, "id476", false], [28, "id477", false]], "align() (in module arkouda)": [[28, "arkouda.align", false]], "align() (in module arkouda.alignment)": [[3, "arkouda.alignment.align", false]], "all() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.all", false], [28, "id110", false]], "all() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.all", false]], "all() (arkouda.groupby method)": [[28, "arkouda.GroupBy.all", false], [28, "id238", false], [28, "id282", false], [28, "id326", false], [28, "id370", false], [28, "id414", false], [98, "arkouda.GroupBy.all", false]], "all() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.all", false]], "all() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.all", false]], "all() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.all", false]], "all() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.all", false]], "all() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.all", false]], "all() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.all", false]], "all() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.all", false]], "all() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.all", false]], "all() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.all", false]], "all() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.all", false]], "all() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.all", false]], "all() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.all", false]], "all() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.all", false]], "all() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.all", false]], "all() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.all", false]], "all() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.all", false]], "all() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.all", false]], "all() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.all", false]], "all() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.all", false]], "all() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.all", false]], "all() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.all", false]], "all() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.all", false]], "all() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.all", false]], "all() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.all", false]], "all() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.all", false]], "all() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.all", false]], "all() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.all", false]], "all() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.all", false]], "all() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.all", false]], "all() (arkouda.pdarray method)": [[28, "arkouda.pdarray.all", false], [28, "id535", false], [28, "id596", false], [28, "id657", false], [28, "id718", false], [28, "id779", false], [99, "arkouda.pdarray.all", false]], "all() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.all", false]], "all() (arkouda.segarray method)": [[28, "arkouda.SegArray.all", false]], "all() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.all", false]], "all() (in module arkouda)": [[28, "arkouda.all", false], [93, "arkouda.all", false]], "all() (in module arkouda.array_api._utility_functions)": [[17, "arkouda.array_api._utility_functions.all", false]], "all() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.all", false]], "all_scalars (in module arkouda)": [[28, "arkouda.all_scalars", false]], "all_scalars (in module arkouda.dtypes)": [[25, "arkouda.dtypes.all_scalars", false]], "allsymbols (in module arkouda)": [[28, "arkouda.AllSymbols", false]], "allsymbols (in module arkouda.infoclass)": [[30, "arkouda.infoclass.AllSymbols", false]], "and() (arkouda.groupby method)": [[28, "arkouda.GroupBy.AND", false], [28, "id234", false], [28, "id278", false], [28, "id322", false], [28, "id366", false], [28, "id410", false], [98, "arkouda.GroupBy.AND", false]], "and() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.AND", false]], "and() (arkouda.segarray method)": [[28, "arkouda.SegArray.AND", false]], "and() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.AND", false]], "any() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.any", false], [28, "id111", false]], "any() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.any", false]], "any() (arkouda.groupby method)": [[28, "arkouda.GroupBy.any", false], [28, "id239", false], [28, "id283", false], [28, "id327", false], [28, "id371", false], [28, "id415", false], [98, "arkouda.GroupBy.any", false]], "any() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.any", false]], "any() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.any", false]], "any() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.any", false]], "any() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.any", false]], "any() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.any", false]], "any() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.any", false]], "any() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.any", false]], "any() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.any", false]], "any() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.any", false]], "any() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.any", false]], "any() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.any", false]], "any() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.any", false]], "any() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.any", false]], "any() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.any", false]], "any() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.any", false]], "any() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.any", false]], "any() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.any", false]], "any() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.any", false]], "any() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.any", false]], "any() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.any", false]], "any() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.any", false]], "any() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.any", false]], "any() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.any", false]], "any() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.any", false]], "any() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.any", false]], "any() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.any", false]], "any() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.any", false]], "any() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.any", false]], "any() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.any", false]], "any() (arkouda.pdarray method)": [[28, "arkouda.pdarray.any", false], [28, "id536", false], [28, "id597", false], [28, "id658", false], [28, "id719", false], [28, "id780", false], [99, "arkouda.pdarray.any", false]], "any() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.any", false]], "any() (arkouda.segarray method)": [[28, "arkouda.SegArray.any", false]], "any() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.any", false]], "any() (in module arkouda)": [[28, "arkouda.any", false], [93, "arkouda.any", false]], "any() (in module arkouda.array_api._utility_functions)": [[17, "arkouda.array_api._utility_functions.any", false]], "any() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.any", false]], "append() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.append", false], [28, "id112", false]], "append() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.append", false]], "append() (arkouda.segarray method)": [[28, "arkouda.SegArray.append", false]], "append() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.append", false]], "append() (in module arkouda.segarray)": [[103, "arkouda.SegArray.append", false]], "append_single() (arkouda.segarray method)": [[28, "arkouda.SegArray.append_single", false]], "append_single() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.append_single", false]], "append_single() (in module arkouda.segarray)": [[103, "arkouda.SegArray.append_single", false]], "apply_permutation() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.apply_permutation", false], [28, "id113", false]], "apply_permutation() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.apply_permutation", false]], "apply_permutation() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.apply_permutation", false]], "arange() (in module arkouda)": [[28, "arkouda.arange", false], [28, "id478", false], [28, "id479", false], [28, "id480", false], [28, "id481", false], [28, "id482", false], [96, "arkouda.arange", false]], "arange() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.arange", false]], "arange() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.arange", false]], "arccos() (in module arkouda)": [[28, "arkouda.arccos", false]], "arccos() (in module arkouda.numeric)": [[37, "arkouda.numeric.arccos", false]], "arccosh() (in module arkouda)": [[28, "arkouda.arccosh", false]], "arccosh() (in module arkouda.numeric)": [[37, "arkouda.numeric.arccosh", false]], "arcsin() (in module arkouda)": [[28, "arkouda.arcsin", false]], "arcsin() (in module arkouda.numeric)": [[37, "arkouda.numeric.arcsin", false]], "arcsinh() (in module arkouda)": [[28, "arkouda.arcsinh", false]], "arcsinh() (in module arkouda.numeric)": [[37, "arkouda.numeric.arcsinh", false]], "arctan() (in module arkouda)": [[28, "arkouda.arctan", false]], "arctan() (in module arkouda.numeric)": [[37, "arkouda.numeric.arctan", false]], "arctan2() (in module arkouda)": [[28, "arkouda.arctan2", false]], "arctan2() (in module arkouda.numeric)": [[37, "arkouda.numeric.arctan2", false]], "arctanh() (in module arkouda)": [[28, "arkouda.arctanh", false]], "arctanh() (in module arkouda.numeric)": [[37, "arkouda.numeric.arctanh", false]], "argmax() (arkouda.groupby method)": [[28, "arkouda.GroupBy.argmax", false], [28, "id240", false], [28, "id284", false], [28, "id328", false], [28, "id372", false], [28, "id416", false], [98, "arkouda.GroupBy.argmax", false]], "argmax() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.argmax", false]], "argmax() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.argmax", false]], "argmax() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.argmax", false]], "argmax() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.argmax", false]], "argmax() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.argmax", false]], "argmax() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.argmax", false]], "argmax() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.argmax", false]], "argmax() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.argmax", false]], "argmax() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.argmax", false]], "argmax() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.argmax", false]], "argmax() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.argmax", false]], "argmax() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.argmax", false]], "argmax() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.argmax", false]], "argmax() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.argmax", false]], "argmax() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.argmax", false]], "argmax() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.argmax", false]], "argmax() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.argmax", false]], "argmax() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.argmax", false]], "argmax() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.argmax", false]], "argmax() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.argmax", false]], "argmax() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.argmax", false]], "argmax() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.argmax", false]], "argmax() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.argmax", false]], "argmax() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.argmax", false]], "argmax() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.argmax", false]], "argmax() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.argmax", false]], "argmax() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.argmax", false]], "argmax() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.argmax", false]], "argmax() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.argmax", false]], "argmax() (arkouda.pdarray method)": [[28, "arkouda.pdarray.argmax", false], [28, "id537", false], [28, "id598", false], [28, "id659", false], [28, "id720", false], [28, "id781", false], [99, "arkouda.pdarray.argmax", false]], "argmax() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.argmax", false]], "argmax() (arkouda.segarray method)": [[28, "arkouda.SegArray.argmax", false]], "argmax() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.argmax", false]], "argmax() (in module arkouda)": [[28, "arkouda.argmax", false], [93, "arkouda.argmax", false]], "argmax() (in module arkouda.array_api._searching_functions)": [[12, "arkouda.array_api._searching_functions.argmax", false]], "argmax() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.argmax", false]], "argmaxk() (arkouda.pdarray method)": [[28, "arkouda.pdarray.argmaxk", false], [28, "id538", false], [28, "id599", false], [28, "id660", false], [28, "id721", false], [28, "id782", false], [99, "arkouda.pdarray.argmaxk", false]], "argmaxk() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.argmaxk", false]], "argmaxk() (in module arkouda)": [[28, "arkouda.argmaxk", false], [93, "arkouda.argmaxk", false]], "argmaxk() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.argmaxk", false]], "argmin() (arkouda.groupby method)": [[28, "arkouda.GroupBy.argmin", false], [28, "id241", false], [28, "id285", false], [28, "id329", false], [28, "id373", false], [28, "id417", false], [98, "arkouda.GroupBy.argmin", false]], "argmin() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.argmin", false]], "argmin() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.argmin", false]], "argmin() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.argmin", false]], "argmin() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.argmin", false]], "argmin() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.argmin", false]], "argmin() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.argmin", false]], "argmin() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.argmin", false]], "argmin() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.argmin", false]], "argmin() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.argmin", false]], "argmin() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.argmin", false]], "argmin() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.argmin", false]], "argmin() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.argmin", false]], "argmin() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.argmin", false]], "argmin() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.argmin", false]], "argmin() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.argmin", false]], "argmin() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.argmin", false]], "argmin() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.argmin", false]], "argmin() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.argmin", false]], "argmin() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.argmin", false]], "argmin() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.argmin", false]], "argmin() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.argmin", false]], "argmin() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.argmin", false]], "argmin() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.argmin", false]], "argmin() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.argmin", false]], "argmin() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.argmin", false]], "argmin() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.argmin", false]], "argmin() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.argmin", false]], "argmin() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.argmin", false]], "argmin() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.argmin", false]], "argmin() (arkouda.pdarray method)": [[28, "arkouda.pdarray.argmin", false], [28, "id539", false], [28, "id600", false], [28, "id661", false], [28, "id722", false], [28, "id783", false], [99, "arkouda.pdarray.argmin", false]], "argmin() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.argmin", false]], "argmin() (arkouda.segarray method)": [[28, "arkouda.SegArray.argmin", false]], "argmin() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.argmin", false]], "argmin() (in module arkouda)": [[28, "arkouda.argmin", false], [93, "arkouda.argmin", false]], "argmin() (in module arkouda.array_api._searching_functions)": [[12, "arkouda.array_api._searching_functions.argmin", false]], "argmin() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.argmin", false]], "argmink() (arkouda.pdarray method)": [[28, "arkouda.pdarray.argmink", false], [28, "id540", false], [28, "id601", false], [28, "id662", false], [28, "id723", false], [28, "id784", false], [99, "arkouda.pdarray.argmink", false]], "argmink() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.argmink", false]], "argmink() (in module arkouda)": [[28, "arkouda.argmink", false], [93, "arkouda.argmink", false]], "argmink() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.argmink", false]], "argsort() (arkouda.categorical method)": [[28, "arkouda.Categorical.argsort", false], [28, "id19", false], [28, "id68", false]], "argsort() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.argsort", false]], "argsort() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.argsort", false], [28, "id114", false]], "argsort() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.argsort", false]], "argsort() (arkouda.index method)": [[28, "arkouda.Index.argsort", false]], "argsort() (arkouda.index.index method)": [[29, "arkouda.index.Index.argsort", false]], "argsort() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.argsort", false]], "argsort() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.argsort", false]], "argsort() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.argsort", false]], "argsort() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.argsort", false]], "argsort() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.argsort", false]], "argsort() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.argsort", false]], "argsort() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.argsort", false]], "argsort() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.argsort", false]], "argsort() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.argsort", false]], "argsort() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.argsort", false]], "argsort() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.argsort", false]], "argsort() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.argsort", false]], "argsort() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.argsort", false]], "argsort() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.argsort", false]], "argsort() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.argsort", false]], "argsort() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.argsort", false]], "argsort() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.argsort", false]], "argsort() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.argsort", false]], "argsort() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.argsort", false]], "argsort() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.argsort", false]], "argsort() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.argsort", false]], "argsort() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.argsort", false]], "argsort() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.argsort", false]], "argsort() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.argsort", false]], "argsort() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.argsort", false]], "argsort() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.argsort", false]], "argsort() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.argsort", false]], "argsort() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.argsort", false]], "argsort() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.argsort", false]], "argsort() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.argsort", false]], "argsort() (in module arkouda)": [[28, "arkouda.argsort", false], [28, "id483", false], [28, "id484", false], [92, "arkouda.argsort", false]], "argsort() (in module arkouda.array_api._sorting_functions)": [[14, "arkouda.array_api._sorting_functions.argsort", false]], "argsort() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.argsort", false]], "argsort() (in module arkouda.index)": [[91, "arkouda.Index.argsort", false]], "argsort() (in module arkouda.multiindex)": [[91, "arkouda.MultiIndex.argsort", false]], "argsort() (in module arkouda.sorting)": [[59, "arkouda.sorting.argsort", false]], "arkouda": [[28, "module-arkouda", false]], "arkouda.accessor": [[2, "module-arkouda.accessor", false]], "arkouda.alignment": [[3, "module-arkouda.alignment", false]], "arkouda.array_api": [[18, "module-arkouda.array_api", false]], "arkouda.array_api._array_object": [[4, "module-arkouda.array_api._array_object", false]], "arkouda.array_api._constants": [[5, "module-arkouda.array_api._constants", false]], "arkouda.array_api._creation_functions": [[6, "module-arkouda.array_api._creation_functions", false]], "arkouda.array_api._data_type_functions": [[7, "module-arkouda.array_api._data_type_functions", false]], "arkouda.array_api._dtypes": [[8, "module-arkouda.array_api._dtypes", false]], "arkouda.array_api._elementwise_functions": [[9, "module-arkouda.array_api._elementwise_functions", false]], "arkouda.array_api._indexing_functions": [[10, "module-arkouda.array_api._indexing_functions", false]], "arkouda.array_api._manipulation_functions": [[11, "module-arkouda.array_api._manipulation_functions", false]], "arkouda.array_api._searching_functions": [[12, "module-arkouda.array_api._searching_functions", false]], "arkouda.array_api._set_functions": [[13, "module-arkouda.array_api._set_functions", false]], "arkouda.array_api._sorting_functions": [[14, "module-arkouda.array_api._sorting_functions", false]], "arkouda.array_api._statistical_functions": [[15, "module-arkouda.array_api._statistical_functions", false]], "arkouda.array_api._typing": [[16, "module-arkouda.array_api._typing", false]], "arkouda.array_api._utility_functions": [[17, "module-arkouda.array_api._utility_functions", false]], "arkouda.array_api.linalg": [[19, "module-arkouda.array_api.linalg", false]], "arkouda.array_view": [[20, "module-arkouda.array_view", false]], "arkouda.categorical": [[21, "module-arkouda.categorical", false]], "arkouda.client": [[22, "module-arkouda.client", false]], "arkouda.client_dtypes": [[23, "module-arkouda.client_dtypes", false]], "arkouda.dataframe": [[24, "module-arkouda.dataframe", false]], "arkouda.dtypes": [[25, "module-arkouda.dtypes", false]], "arkouda.groupbyclass": [[26, "module-arkouda.groupbyclass", false]], "arkouda.history": [[27, "module-arkouda.history", false]], "arkouda.index": [[29, "module-arkouda.index", false]], "arkouda.infoclass": [[30, "module-arkouda.infoclass", false]], "arkouda.io": [[31, "module-arkouda.io", false]], "arkouda.io_util": [[32, "module-arkouda.io_util", false]], "arkouda.join": [[33, "module-arkouda.join", false]], "arkouda.logger": [[34, "module-arkouda.logger", false]], "arkouda.match": [[35, "module-arkouda.match", false]], "arkouda.matcher": [[36, "module-arkouda.matcher", false]], "arkouda.numeric": [[37, "module-arkouda.numeric", false]], "arkouda.numpy": [[40, "module-arkouda.numpy", false]], "arkouda.numpy.char": [[38, "module-arkouda.numpy.char", false]], "arkouda.numpy.imports": [[39, "module-arkouda.numpy.imports", false]], "arkouda.pdarrayclass": [[41, "module-arkouda.pdarrayclass", false]], "arkouda.pdarraycreation": [[42, "module-arkouda.pdarraycreation", false]], "arkouda.pdarraysetops": [[43, "module-arkouda.pdarraysetops", false]], "arkouda.plotting": [[44, "module-arkouda.plotting", false]], "arkouda.random": [[47, "module-arkouda.random", false]], "arkouda.random._generator": [[45, "module-arkouda.random._generator", false]], "arkouda.random._legacy": [[46, "module-arkouda.random._legacy", false]], "arkouda.row": [[48, "module-arkouda.row", false]], "arkouda.scipy": [[51, "module-arkouda.scipy", false]], "arkouda.scipy._stats_py": [[49, "module-arkouda.scipy._stats_py", false]], "arkouda.scipy.imports": [[50, "module-arkouda.scipy.imports", false]], "arkouda.scipy.special": [[53, "module-arkouda.scipy.special", false]], "arkouda.scipy.special._math": [[52, "module-arkouda.scipy.special._math", false]], "arkouda.scipy.stats": [[55, "module-arkouda.scipy.stats", false]], "arkouda.scipy.stats.imports": [[54, "module-arkouda.scipy.stats.imports", false]], "arkouda.security": [[56, "module-arkouda.security", false]], "arkouda.segarray": [[57, "module-arkouda.segarray", false]], "arkouda.series": [[58, "module-arkouda.series", false]], "arkouda.sorting": [[59, "module-arkouda.sorting", false]], "arkouda.strings": [[60, "module-arkouda.strings", false]], "arkouda.timeclass": [[61, "module-arkouda.timeclass", false]], "arkouda.util": [[62, "module-arkouda.util", false]], "arkouda_supported_dtypes (in module arkouda)": [[28, "arkouda.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (in module arkouda.dtypes)": [[25, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES", false]], "array (class in arkouda.array_api._array_object)": [[4, "arkouda.array_api._array_object.Array", false]], "array (class in arkouda.array_api._typing)": [[16, "arkouda.array_api._typing.Array", false]], "array() (in module arkouda)": [[28, "arkouda.array", false], [28, "id485", false], [28, "id486", false], [28, "id487", false], [90, "arkouda.array", false]], "array() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.array", false]], "arrayview (class in arkouda)": [[28, "arkouda.ArrayView", false], [94, "arkouda.ArrayView", false]], "arrayview (class in arkouda.array_view)": [[20, "arkouda.array_view.ArrayView", false]], "as_integer_ratio() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.as_integer_ratio", false]], "asarray() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.asarray", false]], "asin() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.asin", false]], "asinh() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.asinh", false]], "astype() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.astype", false]], "astype() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.astype", false]], "astype() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.astype", false]], "astype() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.astype", false]], "astype() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.astype", false]], "astype() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.astype", false]], "astype() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.astype", false]], "astype() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.astype", false]], "astype() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.astype", false]], "astype() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.astype", false]], "astype() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.astype", false]], "astype() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.astype", false]], "astype() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.astype", false]], "astype() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.astype", false]], "astype() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.astype", false]], "astype() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.astype", false]], "astype() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.astype", false]], "astype() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.astype", false]], "astype() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.astype", false]], "astype() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.astype", false]], "astype() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.astype", false]], "astype() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.astype", false]], "astype() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.astype", false]], "astype() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.astype", false]], "astype() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.astype", false]], "astype() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.astype", false]], "astype() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.astype", false]], "astype() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.astype", false]], "astype() (arkouda.pdarray method)": [[28, "arkouda.pdarray.astype", false], [28, "id541", false], [28, "id602", false], [28, "id663", false], [28, "id724", false], [28, "id785", false]], "astype() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.astype", false]], "astype() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.astype", false]], "astype() (in module arkouda.array_api._data_type_functions)": [[7, "arkouda.array_api._data_type_functions.astype", false]], "at (arkouda.series property)": [[28, "arkouda.Series.at", false]], "at (arkouda.series.series property)": [[58, "arkouda.series.Series.at", false]], "atan() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.atan", false]], "atan2() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.atan2", false]], "atanh() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.atanh", false]], "attach() (arkouda.categorical static method)": [[28, "arkouda.Categorical.attach", false], [28, "id20", false], [28, "id69", false]], "attach() (arkouda.categorical.categorical static method)": [[21, "arkouda.categorical.Categorical.attach", false]], "attach() (arkouda.dataframe static method)": [[28, "arkouda.DataFrame.attach", false], [28, "id115", false]], "attach() (arkouda.dataframe.dataframe static method)": [[24, "arkouda.dataframe.DataFrame.attach", false]], "attach() (arkouda.groupby static method)": [[28, "arkouda.GroupBy.attach", false], [28, "id242", false], [28, "id286", false], [28, "id330", false], [28, "id374", false], [28, "id418", false], [98, "arkouda.GroupBy.attach", false]], "attach() (arkouda.groupbyclass.groupby static method)": [[26, "arkouda.groupbyclass.GroupBy.attach", false]], "attach() (arkouda.pdarray static method)": [[28, "arkouda.pdarray.attach", false], [28, "id542", false], [28, "id603", false], [28, "id664", false], [28, "id725", false], [28, "id786", false]], "attach() (arkouda.pdarrayclass.pdarray static method)": [[41, "arkouda.pdarrayclass.pdarray.attach", false]], "attach() (arkouda.segarray class method)": [[28, "arkouda.SegArray.attach", false]], "attach() (arkouda.segarray.segarray class method)": [[57, "arkouda.segarray.SegArray.attach", false]], "attach() (arkouda.series static method)": [[28, "arkouda.Series.attach", false]], "attach() (arkouda.series.series static method)": [[58, "arkouda.series.Series.attach", false]], "attach() (arkouda.strings.strings static method)": [[60, "arkouda.strings.Strings.attach", false]], "attach() (in module arkouda)": [[28, "arkouda.attach", false]], "attach() (in module arkouda.util)": [[62, "arkouda.util.attach", false]], "attach_all() (in module arkouda)": [[28, "arkouda.attach_all", false]], "attach_all() (in module arkouda.util)": [[62, "arkouda.util.attach_all", false]], "attach_pdarray() (in module arkouda)": [[28, "arkouda.attach_pdarray", false]], "attach_pdarray() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.attach_pdarray", false]], "b() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.b", false]], "badvalue() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.badvalue", false]], "base (arkouda.array_view.arrayview attribute)": [[20, "arkouda.array_view.ArrayView.base", false]], "base (arkouda.arrayview attribute)": [[28, "arkouda.ArrayView.base", false], [94, "arkouda.ArrayView.base", false]], "base() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.base", false]], "base() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.base", false]], "base() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.base", false]], "base() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.base", false]], "base() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.base", false]], "base() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.base", false]], "base() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.base", false]], "base() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.base", false]], "base() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.base", false]], "base() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.base", false]], "base() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.base", false]], "base() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.base", false]], "base() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.base", false]], "base() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.base", false]], "base() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.base", false]], "base() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.base", false]], "base() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.base", false]], "base() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.base", false]], "base() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.base", false]], "base() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.base", false]], "base() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.base", false]], "base() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.base", false]], "base() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.base", false]], "base() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.base", false]], "base() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.base", false]], "base() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.base", false]], "base() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.base", false]], "base() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.base", false]], "bigint (in module arkouda)": [[28, "arkouda.bigint", false], [28, "id488", false]], "bigint (in module arkouda.dtypes)": [[25, "arkouda.dtypes.bigint", false]], "bigint_from_uint_arrays() (in module arkouda)": [[28, "arkouda.bigint_from_uint_arrays", false]], "bigint_from_uint_arrays() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.bigint_from_uint_arrays", false]], "bigint_to_uint_arrays() (arkouda.pdarray method)": [[28, "arkouda.pdarray.bigint_to_uint_arrays", false], [28, "id543", false], [28, "id604", false], [28, "id665", false], [28, "id726", false], [28, "id787", false]], "bigint_to_uint_arrays() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.bigint_to_uint_arrays", false]], "binops (arkouda.categorical attribute)": [[28, "arkouda.Categorical.BinOps", false], [28, "id12", false], [28, "id61", false]], "binops (arkouda.categorical.categorical attribute)": [[21, "arkouda.categorical.Categorical.BinOps", false]], "binops (arkouda.pdarray attribute)": [[28, "arkouda.pdarray.BinOps", false], [28, "id532", false], [28, "id593", false], [28, "id654", false], [28, "id715", false], [28, "id776", false]], "binops (arkouda.pdarrayclass.pdarray attribute)": [[41, "arkouda.pdarrayclass.pdarray.BinOps", false]], "binops (arkouda.strings.strings attribute)": [[60, "arkouda.strings.Strings.BinOps", false]], "bit_count() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.bit_count", false]], "bit_count() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.bit_count", false]], "bit_count() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.bit_count", false]], "bit_count() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.bit_count", false]], "bit_count() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.bit_count", false]], "bit_count() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.bit_count", false]], "bit_count() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.bit_count", false]], "bit_count() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.bit_count", false]], "bit_count() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.bit_count", false]], "bit_count() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.bit_count", false]], "bit_count() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.bit_count", false]], "bit_count() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.bit_count", false]], "bit_count() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.bit_count", false]], "bit_count() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.bit_count", false]], "bit_count() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.bit_count", false]], "bit_count() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.bit_count", false]], "bit_count() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.bit_count", false]], "bit_count() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.bit_count", false]], "bits (arkouda.array_api._data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api._data_type_functions.finfo_object.bits", false]], "bits (arkouda.array_api._data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api._data_type_functions.iinfo_object.bits", false]], "bittype (in module arkouda)": [[28, "arkouda.bitType", false], [28, "id489", false]], "bittype (in module arkouda.dtypes)": [[25, "arkouda.dtypes.bitType", false]], "bitvector (class in arkouda)": [[28, "arkouda.BitVector", false]], "bitvector (class in arkouda.client_dtypes)": [[23, "arkouda.client_dtypes.BitVector", false]], "bitvectorizer() (in module arkouda)": [[28, "arkouda.BitVectorizer", false]], "bitvectorizer() (in module arkouda.client_dtypes)": [[23, "arkouda.client_dtypes.BitVectorizer", false]], "bitwise_and() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.bitwise_and", false]], "bitwise_invert() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.bitwise_invert", false]], "bitwise_left_shift() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.bitwise_left_shift", false]], "bitwise_or() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.bitwise_or", false]], "bitwise_right_shift() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.bitwise_right_shift", false]], "bitwise_xor() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.bitwise_xor", false]], "bool (in module arkouda)": [[28, "arkouda.bool", false]], "bool (in module arkouda.array_api._dtypes)": [[8, "arkouda.array_api._dtypes.bool", false]], "bool (in module arkouda.dtypes)": [[25, "arkouda.dtypes.bool", false]], "bool_ (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.bool_", false]], "bool_scalars (in module arkouda)": [[28, "arkouda.bool_scalars", false]], "bool_scalars (in module arkouda.dtypes)": [[25, "arkouda.dtypes.bool_scalars", false]], "broadcast() (arkouda.groupby method)": [[28, "arkouda.GroupBy.broadcast", false], [28, "id243", false], [28, "id287", false], [28, "id331", false], [28, "id375", false], [28, "id419", false], [98, "arkouda.GroupBy.broadcast", false]], "broadcast() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.broadcast", false]], "broadcast() (in module arkouda)": [[28, "arkouda.broadcast", false], [28, "id490", false], [28, "id491", false], [28, "id492", false]], "broadcast() (in module arkouda.groupbyclass)": [[26, "arkouda.groupbyclass.broadcast", false]], "broadcast_arrays() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.broadcast_arrays", false]], "broadcast_dims() (in module arkouda)": [[28, "arkouda.broadcast_dims", false]], "broadcast_dims() (in module arkouda.util)": [[62, "arkouda.util.broadcast_dims", false]], "broadcast_to() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.broadcast_to", false]], "broadcast_to_shape() (in module arkouda)": [[28, "arkouda.broadcast_to_shape", false]], "broadcast_to_shape() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.broadcast_to_shape", false]], "build_from_components() (arkouda.groupby static method)": [[28, "arkouda.GroupBy.build_from_components", false], [28, "id244", false], [28, "id288", false], [28, "id332", false], [28, "id376", false], [28, "id420", false], [98, "arkouda.GroupBy.build_from_components", false]], "build_from_components() (arkouda.groupbyclass.groupby static method)": [[26, "arkouda.groupbyclass.GroupBy.build_from_components", false]], "byte (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.byte", false]], "byteswap() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.byteswap", false]], "byteswap() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.byteswap", false]], "byteswap() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.byteswap", false]], "byteswap() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.byteswap", false]], "byteswap() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.byteswap", false]], "byteswap() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.byteswap", false]], "byteswap() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.byteswap", false]], "byteswap() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.byteswap", false]], "byteswap() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.byteswap", false]], "byteswap() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.byteswap", false]], "byteswap() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.byteswap", false]], "byteswap() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.byteswap", false]], "byteswap() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.byteswap", false]], "byteswap() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.byteswap", false]], "byteswap() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.byteswap", false]], "byteswap() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.byteswap", false]], "byteswap() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.byteswap", false]], "byteswap() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.byteswap", false]], "byteswap() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.byteswap", false]], "byteswap() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.byteswap", false]], "byteswap() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.byteswap", false]], "byteswap() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.byteswap", false]], "byteswap() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.byteswap", false]], "byteswap() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.byteswap", false]], "byteswap() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.byteswap", false]], "byteswap() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.byteswap", false]], "byteswap() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.byteswap", false]], "byteswap() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.byteswap", false]], "cached_regex_patterns() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.cached_regex_patterns", false]], "cachedaccessor (class in arkouda)": [[28, "arkouda.CachedAccessor", false]], "cachedaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.CachedAccessor", false]], "can_cast() (in module arkouda.array_api._data_type_functions)": [[7, "arkouda.array_api._data_type_functions.can_cast", false]], "capitalize() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.capitalize", false]], "cast() (in module arkouda)": [[28, "arkouda.cast", false], [28, "id493", false], [101, "arkouda.cast", false]], "cast() (in module arkouda.numeric)": [[37, "arkouda.numeric.cast", false]], "categorical (class in arkouda)": [[28, "arkouda.Categorical", false], [28, "id2", false], [28, "id51", false], [95, "arkouda.Categorical", false]], "categorical (class in arkouda.categorical)": [[21, "arkouda.categorical.Categorical", false]], "categories (arkouda.categorical attribute)": [[28, "arkouda.Categorical.categories", false], [28, "id3", false], [28, "id52", false], [95, "arkouda.Categorical.categories", false]], "categories (arkouda.categorical.categorical attribute)": [[21, "arkouda.categorical.Categorical.categories", false]], "cdf() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.cdf", false], [54, "id104", false], [54, "id123", false], [54, "id142", false], [54, "id161", false], [54, "id181", false], [54, "id201", false], [54, "id221", false], [54, "id24", false], [54, "id241", false], [54, "id261", false], [54, "id281", false], [54, "id301", false], [54, "id321", false], [54, "id340", false], [54, "id359", false], [54, "id378", false], [54, "id397", false], [54, "id40", false], [54, "id417", false], [54, "id437", false], [54, "id44", false], [54, "id456", false], [54, "id476", false], [54, "id496", false], [54, "id5", false], [54, "id515", false], [54, "id535", false], [54, "id555", false], [54, "id574", false], [54, "id594", false], [54, "id613", false], [54, "id632", false], [54, "id64", false], [54, "id84", false]], "cdouble (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.cdouble", false]], "ceil() (in module arkouda)": [[28, "arkouda.ceil", false]], "ceil() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.ceil", false]], "ceil() (in module arkouda.numeric)": [[37, "arkouda.numeric.ceil", false]], "check_np_dtype() (in module arkouda)": [[28, "arkouda.check_np_dtype", false]], "check_np_dtype() (in module arkouda.dtypes)": [[25, "arkouda.dtypes.check_np_dtype", false]], "chi2 (class in arkouda.scipy.stats.imports)": [[54, "arkouda.scipy.stats.imports.chi2", false]], "chisquare() (in module arkouda)": [[28, "arkouda.chisquare", false]], "chisquare() (in module arkouda.scipy)": [[51, "arkouda.scipy.chisquare", false]], "chisquare() (in module arkouda.scipy._stats_py)": [[49, "arkouda.scipy._stats_py.chisquare", false]], "choice() (arkouda.generator method)": [[28, "arkouda.Generator.choice", false]], "choice() (arkouda.random._generator.generator method)": [[45, "arkouda.random._generator.Generator.choice", false]], "choice() (arkouda.random.generator method)": [[47, "arkouda.random.Generator.choice", false]], "choose() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.choose", false]], "choose() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.choose", false]], "choose() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.choose", false]], "choose() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.choose", false]], "choose() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.choose", false]], "choose() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.choose", false]], "choose() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.choose", false]], "choose() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.choose", false]], "choose() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.choose", false]], "choose() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.choose", false]], "choose() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.choose", false]], "choose() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.choose", false]], "choose() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.choose", false]], "choose() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.choose", false]], "choose() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.choose", false]], "choose() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.choose", false]], "choose() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.choose", false]], "choose() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.choose", false]], "choose() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.choose", false]], "choose() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.choose", false]], "choose() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.choose", false]], "choose() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.choose", false]], "choose() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.choose", false]], "choose() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.choose", false]], "choose() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.choose", false]], "choose() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.choose", false]], "choose() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.choose", false]], "choose() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.choose", false]], "clear() (in module arkouda)": [[28, "arkouda.clear", false]], "clear() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.clear", false]], "clip() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.clip", false]], "clip() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.clip", false]], "clip() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.clip", false]], "clip() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.clip", false]], "clip() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.clip", false]], "clip() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.clip", false]], "clip() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.clip", false]], "clip() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.clip", false]], "clip() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.clip", false]], "clip() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.clip", false]], "clip() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.clip", false]], "clip() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.clip", false]], "clip() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.clip", false]], "clip() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.clip", false]], "clip() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.clip", false]], "clip() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.clip", false]], "clip() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.clip", false]], "clip() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.clip", false]], "clip() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.clip", false]], "clip() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.clip", false]], "clip() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.clip", false]], "clip() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.clip", false]], "clip() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.clip", false]], "clip() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.clip", false]], "clip() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.clip", false]], "clip() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.clip", false]], "clip() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.clip", false]], "clip() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.clip", false]], "clip() (in module arkouda)": [[28, "arkouda.clip", false]], "clip() (in module arkouda.numeric)": [[37, "arkouda.numeric.clip", false]], "clongdouble (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.clongdouble", false]], "clz() (arkouda.pdarray method)": [[28, "arkouda.pdarray.clz", false], [28, "id544", false], [28, "id605", false], [28, "id666", false], [28, "id727", false], [28, "id788", false]], "clz() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.clz", false]], "clz() (in module arkouda)": [[28, "arkouda.clz", false]], "clz() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.clz", false]], "coargsort() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.coargsort", false], [28, "id116", false]], "coargsort() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.coargsort", false]], "coargsort() (in module arkouda)": [[28, "arkouda.coargsort", false], [28, "id494", false], [28, "id495", false], [92, "arkouda.coargsort", false]], "coargsort() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.coargsort", false]], "coargsort() (in module arkouda.sorting)": [[59, "arkouda.sorting.coargsort", false]], "codes (arkouda.categorical attribute)": [[28, "arkouda.Categorical.codes", false], [28, "id4", false], [28, "id53", false], [95, "arkouda.Categorical.codes", false]], "codes (arkouda.categorical.categorical attribute)": [[21, "arkouda.categorical.Categorical.codes", false]], "columns (arkouda.dataframe property)": [[28, "arkouda.DataFrame.columns", false], [28, "id101", false]], "columns (arkouda.dataframe.dataframe property)": [[24, "arkouda.dataframe.DataFrame.columns", false]], "complex128 (in module arkouda)": [[28, "arkouda.complex128", false]], "complex128 (in module arkouda.array_api._dtypes)": [[8, "arkouda.array_api._dtypes.complex128", false]], "complex128 (in module arkouda.dtypes)": [[25, "arkouda.dtypes.complex128", false]], "complex64 (in module arkouda)": [[28, "arkouda.complex64", false]], "complex64 (in module arkouda.array_api._dtypes)": [[8, "arkouda.array_api._dtypes.complex64", false]], "complex64 (in module arkouda.dtypes)": [[25, "arkouda.dtypes.complex64", false]], "components (arkouda.timeclass.timedelta property)": [[61, "arkouda.timeclass.Timedelta.components", false]], "components (arkouda.timedelta property)": [[28, "arkouda.Timedelta.components", false], [28, "id450", false]], "compress() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.compress", false]], "compress() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.compress", false]], "compress() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.compress", false]], "compress() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.compress", false]], "compress() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.compress", false]], "compress() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.compress", false]], "compress() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.compress", false]], "compress() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.compress", false]], "compress() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.compress", false]], "compress() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.compress", false]], "compress() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.compress", false]], "compress() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.compress", false]], "compress() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.compress", false]], "compress() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.compress", false]], "compress() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.compress", false]], "compress() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.compress", false]], "compress() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.compress", false]], "compress() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.compress", false]], "compress() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.compress", false]], "compress() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.compress", false]], "compress() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.compress", false]], "compress() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.compress", false]], "compress() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.compress", false]], "compress() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.compress", false]], "compress() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.compress", false]], "compress() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.compress", false]], "compress() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.compress", false]], "compress() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.compress", false]], "compute_join_size() (in module arkouda)": [[28, "arkouda.compute_join_size", false]], "compute_join_size() (in module arkouda.join)": [[33, "arkouda.join.compute_join_size", false]], "concat() (arkouda.dataframe class method)": [[28, "arkouda.DataFrame.concat", false], [28, "id117", false]], "concat() (arkouda.dataframe.dataframe class method)": [[24, "arkouda.dataframe.DataFrame.concat", false]], "concat() (arkouda.index method)": [[28, "arkouda.Index.concat", false]], "concat() (arkouda.index.index method)": [[29, "arkouda.index.Index.concat", false]], "concat() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.concat", false]], "concat() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.concat", false]], "concat() (arkouda.segarray class method)": [[28, "arkouda.SegArray.concat", false]], "concat() (arkouda.segarray.segarray class method)": [[57, "arkouda.segarray.SegArray.concat", false]], "concat() (arkouda.series static method)": [[28, "arkouda.Series.concat", false]], "concat() (arkouda.series.series static method)": [[58, "arkouda.series.Series.concat", false]], "concat() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.concat", false]], "concat() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.concat", false]], "concat() (in module arkouda.index)": [[91, "arkouda.Index.concat", false]], "concat() (in module arkouda.multiindex)": [[91, "arkouda.MultiIndex.concat", false]], "concatenate() (arkouda.categorical method)": [[28, "arkouda.Categorical.concatenate", false], [28, "id21", false], [28, "id70", false]], "concatenate() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.concatenate", false]], "concatenate() (in module arkouda)": [[28, "arkouda.concatenate", false], [28, "id496", false], [28, "id497", false], [96, "arkouda.concatenate", false]], "concatenate() (in module arkouda.pdarraysetops)": [[43, "arkouda.pdarraysetops.concatenate", false]], "concatenate() (in module arkouda.util)": [[62, "arkouda.util.concatenate", false]], "conj() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.conj", false]], "conj() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.conj", false]], "conj() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.conj", false]], "conj() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.conj", false]], "conj() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.conj", false]], "conj() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.conj", false]], "conj() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.conj", false]], "conj() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.conj", false]], "conj() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.conj", false]], "conj() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.conj", false]], "conj() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.conj", false]], "conj() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.conj", false]], "conj() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.conj", false]], "conj() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.conj", false]], "conj() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.conj", false]], "conj() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.conj", false]], "conj() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.conj", false]], "conj() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.conj", false]], "conj() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.conj", false]], "conj() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.conj", false]], "conj() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.conj", false]], "conj() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.conj", false]], "conj() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.conj", false]], "conj() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.conj", false]], "conj() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.conj", false]], "conj() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.conj", false]], "conj() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.conj", false]], "conj() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.conj", false]], "conj() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.conj", false]], "conjugate() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.conjugate", false]], "conjugate() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.conjugate", false]], "conjugate() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.conjugate", false]], "conjugate() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.conjugate", false]], "conjugate() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.conjugate", false]], "conjugate() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.conjugate", false]], "conjugate() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.conjugate", false]], "conjugate() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.conjugate", false]], "conjugate() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.conjugate", false]], "conjugate() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.conjugate", false]], "conjugate() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.conjugate", false]], "conjugate() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.conjugate", false]], "conjugate() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.conjugate", false]], "conjugate() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.conjugate", false]], "conjugate() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.conjugate", false]], "conjugate() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.conjugate", false]], "conjugate() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.conjugate", false]], "conjugate() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.conjugate", false]], "conjugate() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.conjugate", false]], "conjugate() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.conjugate", false]], "conjugate() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.conjugate", false]], "conjugate() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.conjugate", false]], "conjugate() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.conjugate", false]], "conjugate() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.conjugate", false]], "conjugate() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.conjugate", false]], "conjugate() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.conjugate", false]], "conjugate() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.conjugate", false]], "conjugate() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.conjugate", false]], "connect() (in module arkouda)": [[106, "arkouda.connect", false]], "connect() (in module arkouda.client)": [[22, "arkouda.client.connect", false]], "conserves (arkouda.bitvector attribute)": [[28, "arkouda.BitVector.conserves", false]], "conserves (arkouda.client_dtypes.bitvector attribute)": [[23, "arkouda.client_dtypes.BitVector.conserves", false]], "contains() (arkouda.categorical method)": [[28, "arkouda.Categorical.contains", false], [28, "id22", false], [28, "id71", false], [95, "arkouda.Categorical.contains", false]], "contains() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.contains", false]], "contains() (arkouda.strings method)": [[107, "arkouda.Strings.contains", false]], "contains() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.contains", false]], "convert_bytes() (in module arkouda.util)": [[62, "arkouda.util.convert_bytes", false]], "convert_if_categorical() (in module arkouda)": [[28, "arkouda.convert_if_categorical", false]], "convert_if_categorical() (in module arkouda.util)": [[62, "arkouda.util.convert_if_categorical", false]], "copy() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.copy", false], [28, "id118", false]], "copy() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.copy", false]], "copy() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.copy", false]], "copy() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.copy", false]], "copy() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.copy", false]], "copy() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.copy", false]], "copy() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.copy", false]], "copy() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.copy", false]], "copy() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.copy", false]], "copy() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.copy", false]], "copy() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.copy", false]], "copy() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.copy", false]], "copy() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.copy", false]], "copy() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.copy", false]], "copy() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.copy", false]], "copy() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.copy", false]], "copy() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.copy", false]], "copy() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.copy", false]], "copy() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.copy", false]], "copy() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.copy", false]], "copy() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.copy", false]], "copy() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.copy", false]], "copy() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.copy", false]], "copy() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.copy", false]], "copy() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.copy", false]], "copy() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.copy", false]], "copy() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.copy", false]], "copy() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.copy", false]], "copy() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.copy", false]], "copy() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.copy", false]], "copy() (arkouda.segarray method)": [[28, "arkouda.SegArray.copy", false]], "copy() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.copy", false]], "copy() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.copy", false]], "corr() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.corr", false], [28, "id119", false]], "corr() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.corr", false]], "corr() (arkouda.pdarray method)": [[28, "arkouda.pdarray.corr", false], [28, "id545", false], [28, "id606", false], [28, "id667", false], [28, "id728", false], [28, "id789", false]], "corr() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.corr", false]], "corr() (in module arkouda)": [[28, "arkouda.corr", false]], "corr() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.corr", false]], "cos() (in module arkouda)": [[28, "arkouda.cos", false], [93, "arkouda.cos", false]], "cos() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.cos", false]], "cos() (in module arkouda.numeric)": [[37, "arkouda.numeric.cos", false]], "cosh() (in module arkouda)": [[28, "arkouda.cosh", false]], "cosh() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.cosh", false]], "cosh() (in module arkouda.numeric)": [[37, "arkouda.numeric.cosh", false]], "count() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.count", false], [28, "id120", false]], "count() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.count", false]], "count() (arkouda.groupby method)": [[28, "arkouda.GroupBy.count", false], [28, "id245", false], [28, "id289", false], [28, "id333", false], [28, "id377", false], [28, "id421", false], [98, "arkouda.GroupBy.count", false]], "count() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.count", false]], "counts (arkouda.array_api._set_functions.uniqueallresult attribute)": [[13, "arkouda.array_api._set_functions.UniqueAllResult.counts", false]], "counts (arkouda.array_api._set_functions.uniquecountsresult attribute)": [[13, "arkouda.array_api._set_functions.UniqueCountsResult.counts", false]], "cov() (arkouda.pdarray method)": [[28, "arkouda.pdarray.cov", false], [28, "id546", false], [28, "id607", false], [28, "id668", false], [28, "id729", false], [28, "id790", false]], "cov() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.cov", false]], "cov() (in module arkouda)": [[28, "arkouda.cov", false]], "cov() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.cov", false]], "create_pdarray() (in module arkouda)": [[28, "arkouda.create_pdarray", false], [28, "id498", false], [28, "id499", false], [28, "id500", false]], "critical (arkouda.logger.loglevel attribute)": [[34, "arkouda.logger.LogLevel.CRITICAL", false]], "critical (arkouda.loglevel attribute)": [[28, "arkouda.LogLevel.CRITICAL", false]], "csingle (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.csingle", false]], "ctz() (arkouda.pdarray method)": [[28, "arkouda.pdarray.ctz", false], [28, "id547", false], [28, "id608", false], [28, "id669", false], [28, "id730", false], [28, "id791", false]], "ctz() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.ctz", false]], "ctz() (in module arkouda)": [[28, "arkouda.ctz", false]], "ctz() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.ctz", false]], "cumprod() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.cumprod", false]], "cumprod() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.cumprod", false]], "cumprod() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.cumprod", false]], "cumprod() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.cumprod", false]], "cumprod() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.cumprod", false]], "cumprod() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.cumprod", false]], "cumprod() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.cumprod", false]], "cumprod() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.cumprod", false]], "cumprod() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.cumprod", false]], "cumprod() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.cumprod", false]], "cumprod() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.cumprod", false]], "cumprod() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.cumprod", false]], "cumprod() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.cumprod", false]], "cumprod() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.cumprod", false]], "cumprod() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.cumprod", false]], "cumprod() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.cumprod", false]], "cumprod() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.cumprod", false]], "cumprod() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.cumprod", false]], "cumprod() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.cumprod", false]], "cumprod() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.cumprod", false]], "cumprod() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.cumprod", false]], "cumprod() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.cumprod", false]], "cumprod() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.cumprod", false]], "cumprod() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.cumprod", false]], "cumprod() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.cumprod", false]], "cumprod() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.cumprod", false]], "cumprod() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.cumprod", false]], "cumprod() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.cumprod", false]], "cumprod() (in module arkouda)": [[28, "arkouda.cumprod", false], [93, "arkouda.cumprod", false]], "cumprod() (in module arkouda.numeric)": [[37, "arkouda.numeric.cumprod", false]], "cumsum() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.cumsum", false]], "cumsum() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.cumsum", false]], "cumsum() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.cumsum", false]], "cumsum() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.cumsum", false]], "cumsum() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.cumsum", false]], "cumsum() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.cumsum", false]], "cumsum() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.cumsum", false]], "cumsum() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.cumsum", false]], "cumsum() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.cumsum", false]], "cumsum() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.cumsum", false]], "cumsum() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.cumsum", false]], "cumsum() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.cumsum", false]], "cumsum() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.cumsum", false]], "cumsum() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.cumsum", false]], "cumsum() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.cumsum", false]], "cumsum() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.cumsum", false]], "cumsum() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.cumsum", false]], "cumsum() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.cumsum", false]], "cumsum() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.cumsum", false]], "cumsum() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.cumsum", false]], "cumsum() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.cumsum", false]], "cumsum() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.cumsum", false]], "cumsum() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.cumsum", false]], "cumsum() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.cumsum", false]], "cumsum() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.cumsum", false]], "cumsum() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.cumsum", false]], "cumsum() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.cumsum", false]], "cumsum() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.cumsum", false]], "cumsum() (in module arkouda)": [[28, "arkouda.cumsum", false], [28, "id501", false], [93, "arkouda.cumsum", false]], "cumsum() (in module arkouda.numeric)": [[37, "arkouda.numeric.cumsum", false]], "data() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.data", false]], "data() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.data", false]], "data() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.data", false]], "data() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.data", false]], "data() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.data", false]], "data() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.data", false]], "data() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.data", false]], "data() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.data", false]], "data() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.data", false]], "data() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.data", false]], "data() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.data", false]], "data() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.data", false]], "data() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.data", false]], "data() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.data", false]], "data() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.data", false]], "data() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.data", false]], "data() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.data", false]], "data() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.data", false]], "data() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.data", false]], "data() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.data", false]], "data() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.data", false]], "data() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.data", false]], "data() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.data", false]], "data() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.data", false]], "data() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.data", false]], "data() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.data", false]], "data() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.data", false]], "data() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.data", false]], "dataframe (class in arkouda)": [[28, "arkouda.DataFrame", false], [28, "id100", false], [97, "arkouda.DataFrame", false]], "dataframe (class in arkouda.dataframe)": [[24, "arkouda.dataframe.DataFrame", false]], "date (arkouda.datetime property)": [[28, "arkouda.Datetime.date", false], [28, "id157", false], [28, "id190", false]], "date (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.date", false]], "date_operators() (in module arkouda)": [[28, "arkouda.date_operators", false]], "date_operators() (in module arkouda.accessor)": [[2, "arkouda.accessor.date_operators", false]], "date_range() (in module arkouda)": [[28, "arkouda.date_range", false], [28, "id502", false]], "date_range() (in module arkouda.timeclass)": [[61, "arkouda.timeclass.date_range", false]], "datetime (class in arkouda)": [[28, "arkouda.Datetime", false], [28, "id156", false], [28, "id189", false]], "datetime (class in arkouda.timeclass)": [[61, "arkouda.timeclass.Datetime", false]], "datetimeaccessor (class in arkouda)": [[28, "arkouda.DatetimeAccessor", false]], "datetimeaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.DatetimeAccessor", false]], "day (arkouda.datetime property)": [[28, "arkouda.Datetime.day", false], [28, "id158", false], [28, "id191", false]], "day (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.day", false]], "day_of_week (arkouda.datetime property)": [[28, "arkouda.Datetime.day_of_week", false], [28, "id159", false], [28, "id192", false]], "day_of_week (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.day_of_week", false]], "day_of_year (arkouda.datetime property)": [[28, "arkouda.Datetime.day_of_year", false], [28, "id160", false], [28, "id193", false]], "day_of_year (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.day_of_year", false]], "dayofweek (arkouda.datetime property)": [[28, "arkouda.Datetime.dayofweek", false], [28, "id161", false], [28, "id194", false]], "dayofweek (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.dayofweek", false]], "dayofyear (arkouda.datetime property)": [[28, "arkouda.Datetime.dayofyear", false], [28, "id162", false], [28, "id195", false]], "dayofyear (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.dayofyear", false]], "days (arkouda.timeclass.timedelta property)": [[61, "arkouda.timeclass.Timedelta.days", false]], "days (arkouda.timedelta property)": [[28, "arkouda.Timedelta.days", false], [28, "id451", false]], "debug (arkouda.logger.loglevel attribute)": [[34, "arkouda.logger.LogLevel.DEBUG", false]], "debug (arkouda.loglevel attribute)": [[28, "arkouda.LogLevel.DEBUG", false]], "decode() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.decode", false]], "default_rng() (in module arkouda.random)": [[102, "arkouda.random.default_rng", false]], "default_rng() (in module arkouda.random._generator)": [[45, "arkouda.random._generator.default_rng", false]], "deg2rad() (in module arkouda)": [[28, "arkouda.deg2rad", false]], "deg2rad() (in module arkouda.numeric)": [[37, "arkouda.numeric.deg2rad", false]], "delimited_file_to_dict() (in module arkouda.io_util)": [[32, "arkouda.io_util.delimited_file_to_dict", false]], "denominator() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.denominator", false]], "denominator() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.denominator", false]], "denominator() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.denominator", false]], "denominator() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.denominator", false]], "denominator() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.denominator", false]], "denominator() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.denominator", false]], "denominator() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.denominator", false]], "denominator() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.denominator", false]], "denominator() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.denominator", false]], "denominator() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.denominator", false]], "denominator() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.denominator", false]], "denominator() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.denominator", false]], "denominator() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.denominator", false]], "denominator() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.denominator", false]], "denominator() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.denominator", false]], "denominator() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.denominator", false]], "denominator() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.denominator", false]], "denominator() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.denominator", false]], "device (arkouda.array_api._array_object.array property)": [[4, "arkouda.array_api._array_object.Array.device", false]], "device (arkouda.array_api._typing.array property)": [[16, "arkouda.array_api._typing.Array.device", false]], "device (in module arkouda.array_api._typing)": [[16, "arkouda.array_api._typing.Device", false]], "diagonal() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.diagonal", false]], "diagonal() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.diagonal", false]], "diagonal() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.diagonal", false]], "diagonal() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.diagonal", false]], "diagonal() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.diagonal", false]], "diagonal() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.diagonal", false]], "diagonal() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.diagonal", false]], "diagonal() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.diagonal", false]], "diagonal() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.diagonal", false]], "diagonal() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.diagonal", false]], "diagonal() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.diagonal", false]], "diagonal() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.diagonal", false]], "diagonal() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.diagonal", false]], "diagonal() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.diagonal", false]], "diagonal() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.diagonal", false]], "diagonal() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.diagonal", false]], "diagonal() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.diagonal", false]], "diagonal() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.diagonal", false]], "diagonal() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.diagonal", false]], "diagonal() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.diagonal", false]], "diagonal() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.diagonal", false]], "diagonal() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.diagonal", false]], "diagonal() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.diagonal", false]], "diagonal() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.diagonal", false]], "diagonal() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.diagonal", false]], "diagonal() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.diagonal", false]], "diagonal() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.diagonal", false]], "diagonal() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.diagonal", false]], "dict_to_delimited_file() (in module arkouda.io_util)": [[32, "arkouda.io_util.dict_to_delimited_file", false]], "diff() (arkouda.series method)": [[28, "arkouda.Series.diff", false]], "diff() (arkouda.series.series method)": [[58, "arkouda.series.Series.diff", false]], "diffaggregate (class in arkouda)": [[28, "arkouda.DiffAggregate", false]], "diffaggregate (class in arkouda.dataframe)": [[24, "arkouda.dataframe.DiffAggregate", false]], "disableverbose() (in module arkouda)": [[28, "arkouda.disableVerbose", false]], "disableverbose() (in module arkouda.logger)": [[34, "arkouda.logger.disableVerbose", false]], "disconnect() (in module arkouda.client)": [[22, "arkouda.client.disconnect", false]], "divide() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.divide", false]], "divmod() (in module arkouda)": [[28, "arkouda.divmod", false]], "divmod() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.divmod", false]], "dot() (in module arkouda)": [[28, "arkouda.dot", false]], "dot() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.dot", false]], "double (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.double", false]], "drop() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.drop", false], [28, "id121", false]], "drop() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.drop", false]], "drop() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.drop", false]], "drop_duplicates() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.drop_duplicates", false], [28, "id122", false]], "drop_duplicates() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.drop_duplicates", false]], "drop_duplicates() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.drop_duplicates", false]], "dropna (arkouda.groupby attribute)": [[28, "arkouda.GroupBy.dropna", false], [28, "id231", false], [28, "id275", false], [28, "id319", false], [28, "id363", false], [28, "id407", false], [98, "arkouda.GroupBy.dropna", false]], "dropna (arkouda.groupbyclass.groupby attribute)": [[26, "arkouda.groupbyclass.GroupBy.dropna", false]], "dropna() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.dropna", false], [28, "id123", false]], "dropna() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.dropna", false]], "dt (arkouda.series attribute)": [[28, "arkouda.Series.dt", false]], "dt (arkouda.series.series attribute)": [[58, "arkouda.series.Series.dt", false]], "dtype (arkouda.array_api._array_object.array property)": [[4, "arkouda.array_api._array_object.Array.dtype", false]], "dtype (arkouda.array_api._data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api._data_type_functions.finfo_object.dtype", false]], "dtype (arkouda.array_api._data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api._data_type_functions.iinfo_object.dtype", false]], "dtype (arkouda.array_api._typing.array property)": [[16, "arkouda.array_api._typing.Array.dtype", false]], "dtype (arkouda.array_view.arrayview attribute)": [[20, "arkouda.array_view.ArrayView.dtype", false]], "dtype (arkouda.arrayview attribute)": [[28, "arkouda.ArrayView.dtype", false], [94, "arkouda.ArrayView.dtype", false]], "dtype (arkouda.categorical attribute)": [[28, "arkouda.Categorical.dtype", false], [28, "id15", false], [28, "id64", false]], "dtype (arkouda.categorical.categorical attribute)": [[21, "arkouda.categorical.Categorical.dtype", false]], "dtype (arkouda.pdarray attribute)": [[28, "arkouda.pdarray.dtype", false], [28, "id525", false], [28, "id586", false], [28, "id647", false], [28, "id708", false], [28, "id769", false], [101, "arkouda.pdarray.dtype", false]], "dtype (arkouda.pdarrayclass.pdarray attribute)": [[41, "arkouda.pdarrayclass.pdarray.dtype", false]], "dtype (arkouda.strings.strings attribute)": [[60, "arkouda.strings.Strings.dtype", false]], "dtype (in module arkouda.array_api._typing)": [[16, "arkouda.array_api._typing.Dtype", false]], "dtype() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.dtype", false]], "dtype() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.dtype", false]], "dtype() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.dtype", false]], "dtype() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.dtype", false]], "dtype() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.dtype", false]], "dtype() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.dtype", false]], "dtype() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.dtype", false]], "dtype() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.dtype", false]], "dtype() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.dtype", false]], "dtype() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.dtype", false]], "dtype() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.dtype", false]], "dtype() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.dtype", false]], "dtype() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.dtype", false]], "dtype() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.dtype", false]], "dtype() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.dtype", false]], "dtype() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.dtype", false]], "dtype() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.dtype", false]], "dtype() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.dtype", false]], "dtype() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.dtype", false]], "dtype() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.dtype", false]], "dtype() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.dtype", false]], "dtype() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.dtype", false]], "dtype() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.dtype", false]], "dtype() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.dtype", false]], "dtype() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.dtype", false]], "dtype() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.dtype", false]], "dtype() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.dtype", false]], "dtype() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.dtype", false]], "dtype() (in module arkouda)": [[28, "arkouda.dtype", false]], "dtype() (in module arkouda.dtypes)": [[25, "arkouda.dtypes.dtype", false]], "dtypeobjects (in module arkouda)": [[28, "arkouda.DTypeObjects", false]], "dtypeobjects (in module arkouda.dtypes)": [[25, "arkouda.dtypes.DTypeObjects", false]], "dtypes (arkouda.dataframe property)": [[28, "arkouda.DataFrame.dtypes", false], [28, "id102", false]], "dtypes (arkouda.dataframe.dataframe property)": [[24, "arkouda.dataframe.DataFrame.dtypes", false]], "dtypes (in module arkouda)": [[28, "arkouda.DTypes", false]], "dtypes (in module arkouda.dtypes)": [[25, "arkouda.dtypes.DTypes", false]], "dump() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.dump", false]], "dump() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.dump", false]], "dump() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.dump", false]], "dump() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.dump", false]], "dump() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.dump", false]], "dump() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.dump", false]], "dump() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.dump", false]], "dump() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.dump", false]], "dump() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.dump", false]], "dump() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.dump", false]], "dump() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.dump", false]], "dump() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.dump", false]], "dump() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.dump", false]], "dump() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.dump", false]], "dump() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.dump", false]], "dump() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.dump", false]], "dump() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.dump", false]], "dump() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.dump", false]], "dump() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.dump", false]], "dump() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.dump", false]], "dump() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.dump", false]], "dump() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.dump", false]], "dump() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.dump", false]], "dump() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.dump", false]], "dump() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.dump", false]], "dump() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.dump", false]], "dump() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.dump", false]], "dump() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.dump", false]], "dumps() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.dumps", false]], "dumps() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.dumps", false]], "dumps() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.dumps", false]], "dumps() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.dumps", false]], "dumps() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.dumps", false]], "dumps() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.dumps", false]], "dumps() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.dumps", false]], "dumps() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.dumps", false]], "dumps() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.dumps", false]], "dumps() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.dumps", false]], "dumps() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.dumps", false]], "dumps() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.dumps", false]], "dumps() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.dumps", false]], "dumps() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.dumps", false]], "dumps() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.dumps", false]], "dumps() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.dumps", false]], "dumps() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.dumps", false]], "dumps() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.dumps", false]], "dumps() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.dumps", false]], "dumps() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.dumps", false]], "dumps() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.dumps", false]], "dumps() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.dumps", false]], "dumps() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.dumps", false]], "dumps() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.dumps", false]], "dumps() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.dumps", false]], "dumps() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.dumps", false]], "dumps() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.dumps", false]], "dumps() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.dumps", false]], "e (in module arkouda.array_api._constants)": [[5, "arkouda.array_api._constants.e", false]], "e (in module arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.e", false]], "empty (arkouda.dataframe property)": [[28, "arkouda.DataFrame.empty", false], [28, "id103", false]], "empty (arkouda.dataframe.dataframe property)": [[24, "arkouda.dataframe.DataFrame.empty", false]], "empty() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.empty", false]], "empty_like() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.empty_like", false]], "enableverbose() (in module arkouda)": [[28, "arkouda.enableVerbose", false]], "enableverbose() (in module arkouda.logger)": [[34, "arkouda.logger.enableVerbose", false]], "encode() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.encode", false]], "end() (arkouda.match.match method)": [[35, "arkouda.match.Match.end", false], [107, "arkouda.match.Match.end", false]], "endswith() (arkouda.categorical method)": [[28, "arkouda.Categorical.endswith", false], [28, "id23", false], [28, "id72", false], [95, "arkouda.Categorical.endswith", false]], "endswith() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.endswith", false]], "endswith() (arkouda.strings method)": [[107, "arkouda.Strings.endswith", false]], "endswith() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.endswith", false]], "enrich_inplace() (in module arkouda.util)": [[62, "arkouda.util.enrich_inplace", false]], "entropy() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.entropy", false], [54, "id112", false], [54, "id13", false], [54, "id131", false], [54, "id150", false], [54, "id169", false], [54, "id189", false], [54, "id209", false], [54, "id229", false], [54, "id249", false], [54, "id269", false], [54, "id289", false], [54, "id309", false], [54, "id32", false], [54, "id329", false], [54, "id348", false], [54, "id367", false], [54, "id386", false], [54, "id405", false], [54, "id425", false], [54, "id445", false], [54, "id464", false], [54, "id484", false], [54, "id504", false], [54, "id52", false], [54, "id523", false], [54, "id543", false], [54, "id563", false], [54, "id582", false], [54, "id60", false], [54, "id602", false], [54, "id621", false], [54, "id640", false], [54, "id72", false], [54, "id92", false]], "entry (arkouda.strings.strings attribute)": [[60, "arkouda.strings.Strings.entry", false]], "eps (arkouda.array_api._data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api._data_type_functions.finfo_object.eps", false]], "equal() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.equal", false]], "error (arkouda.logger.loglevel attribute)": [[34, "arkouda.logger.LogLevel.ERROR", false]], "error (arkouda.loglevel attribute)": [[28, "arkouda.LogLevel.ERROR", false]], "errormode (class in arkouda)": [[28, "arkouda.ErrorMode", false]], "errormode (class in arkouda.numeric)": [[37, "arkouda.numeric.ErrorMode", false]], "euler_gamma (in module arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.euler_gamma", false]], "exp() (in module arkouda)": [[28, "arkouda.exp", false], [93, "arkouda.exp", false]], "exp() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.exp", false]], "exp() (in module arkouda.numeric)": [[37, "arkouda.numeric.exp", false]], "expand() (in module arkouda.util)": [[62, "arkouda.util.expand", false]], "expand_dims() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.expand_dims", false]], "expect() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.expect", false], [54, "id114", false], [54, "id133", false], [54, "id15", false], [54, "id152", false], [54, "id171", false], [54, "id191", false], [54, "id211", false], [54, "id231", false], [54, "id251", false], [54, "id271", false], [54, "id291", false], [54, "id311", false], [54, "id331", false], [54, "id34", false], [54, "id350", false], [54, "id369", false], [54, "id388", false], [54, "id407", false], [54, "id427", false], [54, "id447", false], [54, "id466", false], [54, "id486", false], [54, "id506", false], [54, "id525", false], [54, "id54", false], [54, "id545", false], [54, "id565", false], [54, "id584", false], [54, "id604", false], [54, "id623", false], [54, "id642", false], [54, "id74", false], [54, "id80", false], [54, "id94", false]], "expm1() (in module arkouda)": [[28, "arkouda.expm1", false]], "expm1() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.expm1", false]], "expm1() (in module arkouda.numeric)": [[37, "arkouda.numeric.expm1", false]], "export() (in module arkouda)": [[28, "arkouda.export", false], [90, "arkouda.export", false]], "export() (in module arkouda.io)": [[31, "arkouda.io.export", false]], "export_uint() (arkouda.client_dtypes.ipv4 method)": [[23, "arkouda.client_dtypes.IPv4.export_uint", false]], "export_uint() (arkouda.ipv4 method)": [[28, "arkouda.IPv4.export_uint", false]], "eye() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.eye", false]], "factory() (arkouda.index static method)": [[28, "arkouda.Index.factory", false]], "factory() (arkouda.index.index static method)": [[29, "arkouda.index.Index.factory", false]], "fields (class in arkouda)": [[28, "arkouda.Fields", false]], "fields (class in arkouda.client_dtypes)": [[23, "arkouda.client_dtypes.Fields", false]], "fill() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.fill", false]], "fill() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.fill", false]], "fill() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.fill", false]], "fill() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.fill", false]], "fill() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.fill", false]], "fill() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.fill", false]], "fill() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.fill", false]], "fill() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.fill", false]], "fill() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.fill", false]], "fill() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.fill", false]], "fill() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.fill", false]], "fill() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.fill", false]], "fill() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.fill", false]], "fill() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.fill", false]], "fill() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.fill", false]], "fill() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.fill", false]], "fill() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.fill", false]], "fill() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.fill", false]], "fill() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.fill", false]], "fill() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.fill", false]], "fill() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.fill", false]], "fill() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.fill", false]], "fill() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.fill", false]], "fill() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.fill", false]], "fill() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.fill", false]], "fill() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.fill", false]], "fill() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.fill", false]], "fill() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.fill", false]], "fill() (arkouda.pdarray method)": [[28, "arkouda.pdarray.fill", false], [28, "id548", false], [28, "id609", false], [28, "id670", false], [28, "id731", false], [28, "id792", false]], "fill() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.fill", false]], "fillna() (arkouda.series method)": [[28, "arkouda.Series.fillna", false]], "fillna() (arkouda.series.series method)": [[58, "arkouda.series.Series.fillna", false]], "filter() (arkouda.segarray method)": [[28, "arkouda.SegArray.filter", false]], "filter() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.filter", false]], "filter_by_range() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.filter_by_range", false], [28, "id124", false]], "filter_by_range() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.filter_by_range", false]], "find() (in module arkouda)": [[28, "arkouda.find", false]], "find() (in module arkouda.alignment)": [[3, "arkouda.alignment.find", false]], "find_locations() (arkouda.matcher.matcher method)": [[36, "arkouda.matcher.Matcher.find_locations", false]], "find_locations() (arkouda.strings method)": [[107, "arkouda.Strings.find_locations", false]], "find_locations() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.find_locations", false]], "find_matches() (arkouda.match.match method)": [[35, "arkouda.match.Match.find_matches", false], [107, "arkouda.match.Match.find_matches", false]], "findall() (arkouda.matcher.matcher method)": [[36, "arkouda.matcher.Matcher.findall", false]], "findall() (arkouda.strings method)": [[107, "arkouda.Strings.findall", false]], "findall() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.findall", false]], "finfo_object (class in arkouda.array_api._data_type_functions)": [[7, "arkouda.array_api._data_type_functions.finfo_object", false]], "first() (arkouda.groupby method)": [[28, "arkouda.GroupBy.first", false], [28, "id246", false], [28, "id290", false], [28, "id334", false], [28, "id378", false], [28, "id422", false], [98, "arkouda.GroupBy.first", false]], "first() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.first", false]], "fit() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.fit", false], [54, "id100", false], [54, "id113", false], [54, "id132", false], [54, "id14", false], [54, "id151", false], [54, "id170", false], [54, "id190", false], [54, "id210", false], [54, "id230", false], [54, "id250", false], [54, "id270", false], [54, "id290", false], [54, "id310", false], [54, "id33", false], [54, "id330", false], [54, "id349", false], [54, "id368", false], [54, "id387", false], [54, "id406", false], [54, "id426", false], [54, "id446", false], [54, "id465", false], [54, "id485", false], [54, "id505", false], [54, "id524", false], [54, "id53", false], [54, "id544", false], [54, "id564", false], [54, "id583", false], [54, "id603", false], [54, "id622", false], [54, "id641", false], [54, "id73", false], [54, "id93", false]], "fit_loc_scale() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.fit_loc_scale", false]], "flags() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.flags", false]], "flags() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.flags", false]], "flags() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.flags", false]], "flags() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.flags", false]], "flags() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.flags", false]], "flags() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.flags", false]], "flags() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.flags", false]], "flags() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.flags", false]], "flags() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.flags", false]], "flags() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.flags", false]], "flags() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.flags", false]], "flags() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.flags", false]], "flags() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.flags", false]], "flags() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.flags", false]], "flags() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.flags", false]], "flags() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.flags", false]], "flags() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.flags", false]], "flags() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.flags", false]], "flags() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.flags", false]], "flags() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.flags", false]], "flags() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.flags", false]], "flags() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.flags", false]], "flags() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.flags", false]], "flags() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.flags", false]], "flags() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.flags", false]], "flags() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.flags", false]], "flags() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.flags", false]], "flags() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.flags", false]], "flat() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.flat", false]], "flat() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.flat", false]], "flat() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.flat", false]], "flat() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.flat", false]], "flat() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.flat", false]], "flat() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.flat", false]], "flat() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.flat", false]], "flat() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.flat", false]], "flat() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.flat", false]], "flat() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.flat", false]], "flat() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.flat", false]], "flat() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.flat", false]], "flat() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.flat", false]], "flat() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.flat", false]], "flat() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.flat", false]], "flat() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.flat", false]], "flat() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.flat", false]], "flat() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.flat", false]], "flat() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.flat", false]], "flat() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.flat", false]], "flat() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.flat", false]], "flat() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.flat", false]], "flat() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.flat", false]], "flat() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.flat", false]], "flat() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.flat", false]], "flat() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.flat", false]], "flat() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.flat", false]], "flat() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.flat", false]], "flatten() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.flatten", false]], "flatten() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.flatten", false]], "flatten() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.flatten", false]], "flatten() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.flatten", false]], "flatten() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.flatten", false]], "flatten() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.flatten", false]], "flatten() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.flatten", false]], "flatten() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.flatten", false]], "flatten() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.flatten", false]], "flatten() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.flatten", false]], "flatten() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.flatten", false]], "flatten() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.flatten", false]], "flatten() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.flatten", false]], "flatten() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.flatten", false]], "flatten() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.flatten", false]], "flatten() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.flatten", false]], "flatten() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.flatten", false]], "flatten() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.flatten", false]], "flatten() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.flatten", false]], "flatten() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.flatten", false]], "flatten() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.flatten", false]], "flatten() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.flatten", false]], "flatten() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.flatten", false]], "flatten() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.flatten", false]], "flatten() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.flatten", false]], "flatten() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.flatten", false]], "flatten() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.flatten", false]], "flatten() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.flatten", false]], "flatten() (arkouda.strings method)": [[107, "arkouda.Strings.flatten", false]], "flatten() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.flatten", false]], "flip() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.flip", false]], "float32 (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.float32", false]], "float32 (in module arkouda)": [[28, "arkouda.float32", false]], "float32 (in module arkouda.array_api._dtypes)": [[8, "arkouda.array_api._dtypes.float32", false]], "float32 (in module arkouda.dtypes)": [[25, "arkouda.dtypes.float32", false]], "float64 (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.float64", false]], "float64 (in module arkouda)": [[28, "arkouda.float64", false]], "float64 (in module arkouda.array_api._dtypes)": [[8, "arkouda.array_api._dtypes.float64", false]], "float64 (in module arkouda.dtypes)": [[25, "arkouda.dtypes.float64", false]], "float_scalars (in module arkouda)": [[28, "arkouda.float_scalars", false]], "float_scalars (in module arkouda.dtypes)": [[25, "arkouda.dtypes.float_scalars", false]], "floor() (in module arkouda)": [[28, "arkouda.floor", false]], "floor() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.floor", false]], "floor() (in module arkouda.numeric)": [[37, "arkouda.numeric.floor", false]], "floor_divide() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.floor_divide", false]], "fmod() (in module arkouda)": [[28, "arkouda.fmod", false]], "fmod() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.fmod", false]], "format() (arkouda.bitvector method)": [[28, "arkouda.BitVector.format", false]], "format() (arkouda.client_dtypes.bitvector method)": [[23, "arkouda.client_dtypes.BitVector.format", false]], "format() (arkouda.client_dtypes.fields method)": [[23, "arkouda.client_dtypes.Fields.format", false]], "format() (arkouda.client_dtypes.ipv4 method)": [[23, "arkouda.client_dtypes.IPv4.format", false]], "format() (arkouda.fields method)": [[28, "arkouda.Fields.format", false]], "format() (arkouda.ipv4 method)": [[28, "arkouda.IPv4.format", false]], "format_other() (arkouda.pdarray method)": [[28, "arkouda.pdarray.format_other", false], [28, "id549", false], [28, "id610", false], [28, "id671", false], [28, "id732", false], [28, "id793", false]], "format_other() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.format_other", false]], "freeze() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.freeze", false]], "from_codes() (arkouda.categorical class method)": [[28, "arkouda.Categorical.from_codes", false], [28, "id24", false], [28, "id73", false], [95, "arkouda.Categorical.from_codes", false]], "from_codes() (arkouda.categorical.categorical class method)": [[21, "arkouda.categorical.Categorical.from_codes", false]], "from_dlpack() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.from_dlpack", false]], "from_multi_array() (arkouda.segarray class method)": [[28, "arkouda.SegArray.from_multi_array", false]], "from_multi_array() (arkouda.segarray.segarray class method)": [[57, "arkouda.segarray.SegArray.from_multi_array", false]], "from_pandas() (arkouda.dataframe class method)": [[28, "arkouda.DataFrame.from_pandas", false], [28, "id125", false]], "from_pandas() (arkouda.dataframe.dataframe class method)": [[24, "arkouda.dataframe.DataFrame.from_pandas", false]], "from_parts() (arkouda.segarray class method)": [[28, "arkouda.SegArray.from_parts", false]], "from_parts() (arkouda.segarray.segarray class method)": [[57, "arkouda.segarray.SegArray.from_parts", false]], "from_parts() (arkouda.strings.strings static method)": [[60, "arkouda.strings.Strings.from_parts", false]], "from_return_msg() (arkouda.bitvector class method)": [[28, "arkouda.BitVector.from_return_msg", false]], "from_return_msg() (arkouda.categorical class method)": [[28, "arkouda.Categorical.from_return_msg", false], [28, "id25", false], [28, "id74", false]], "from_return_msg() (arkouda.categorical.categorical class method)": [[21, "arkouda.categorical.Categorical.from_return_msg", false]], "from_return_msg() (arkouda.client_dtypes.bitvector class method)": [[23, "arkouda.client_dtypes.BitVector.from_return_msg", false]], "from_return_msg() (arkouda.dataframe class method)": [[28, "arkouda.DataFrame.from_return_msg", false], [28, "id126", false]], "from_return_msg() (arkouda.dataframe.dataframe class method)": [[24, "arkouda.dataframe.DataFrame.from_return_msg", false]], "from_return_msg() (arkouda.groupby static method)": [[28, "arkouda.GroupBy.from_return_msg", false], [28, "id247", false], [28, "id291", false], [28, "id335", false], [28, "id379", false], [28, "id423", false]], "from_return_msg() (arkouda.groupbyclass.groupby static method)": [[26, "arkouda.groupbyclass.GroupBy.from_return_msg", false]], "from_return_msg() (arkouda.index class method)": [[28, "arkouda.Index.from_return_msg", false]], "from_return_msg() (arkouda.index.index class method)": [[29, "arkouda.index.Index.from_return_msg", false]], "from_return_msg() (arkouda.segarray class method)": [[28, "arkouda.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.segarray.segarray class method)": [[57, "arkouda.segarray.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.series class method)": [[28, "arkouda.Series.from_return_msg", false]], "from_return_msg() (arkouda.series.series class method)": [[58, "arkouda.series.Series.from_return_msg", false]], "from_return_msg() (arkouda.strings.strings static method)": [[60, "arkouda.strings.Strings.from_return_msg", false]], "from_series() (in module arkouda)": [[28, "arkouda.from_series", false], [28, "id503", false]], "from_series() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.from_series", false]], "fromhex() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.fromhex", false]], "fromhex() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.fromhex", false]], "full() (in module arkouda)": [[28, "arkouda.full", false], [28, "id504", false]], "full() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.full", false]], "full() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.full", false]], "full_like() (in module arkouda)": [[28, "arkouda.full_like", false]], "full_like() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.full_like", false]], "full_like() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.full_like", false]], "fullmatch() (arkouda.strings method)": [[107, "arkouda.Strings.fullmatch", false]], "fullmatch() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.fullmatch", false]], "gb (arkouda.dataframe.diffaggregate attribute)": [[24, "arkouda.dataframe.DiffAggregate.gb", false]], "gb (arkouda.diffaggregate attribute)": [[28, "arkouda.DiffAggregate.gb", false]], "gen_ranges() (in module arkouda)": [[28, "arkouda.gen_ranges", false], [28, "id505", false]], "gen_ranges() (in module arkouda.join)": [[33, "arkouda.join.gen_ranges", false]], "generate_history() (in module arkouda.client)": [[22, "arkouda.client.generate_history", false]], "generate_token() (in module arkouda.security)": [[56, "arkouda.security.generate_token", false]], "generate_username_token_json() (in module arkouda.security)": [[56, "arkouda.security.generate_username_token_json", false]], "generator (class in arkouda)": [[28, "arkouda.Generator", false]], "generator (class in arkouda.random)": [[47, "arkouda.random.Generator", false], [102, "arkouda.random.Generator", false]], "generator (class in arkouda.random._generator)": [[45, "arkouda.random._generator.Generator", false]], "generic_concat() (in module arkouda)": [[28, "arkouda.generic_concat", false]], "generic_concat() (in module arkouda.util)": [[62, "arkouda.util.generic_concat", false]], "generic_moment() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.generic_moment", false]], "get_arkouda_client_directory() (in module arkouda.security)": [[56, "arkouda.security.get_arkouda_client_directory", false]], "get_byteorder() (in module arkouda)": [[28, "arkouda.get_byteorder", false]], "get_byteorder() (in module arkouda.dtypes)": [[25, "arkouda.dtypes.get_byteorder", false]], "get_bytes() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.get_bytes", false]], "get_callback() (in module arkouda)": [[28, "arkouda.get_callback", false]], "get_callback() (in module arkouda.util)": [[62, "arkouda.util.get_callback", false]], "get_columns() (in module arkouda)": [[28, "arkouda.get_columns", false]], "get_columns() (in module arkouda.io)": [[31, "arkouda.io.get_columns", false]], "get_config() (in module arkouda.client)": [[22, "arkouda.client.get_config", false]], "get_datasets() (in module arkouda)": [[28, "arkouda.get_datasets", false], [90, "arkouda.get_datasets", false]], "get_datasets() (in module arkouda.io)": [[31, "arkouda.io.get_datasets", false]], "get_directory() (in module arkouda.io_util)": [[32, "arkouda.io_util.get_directory", false]], "get_filetype() (in module arkouda)": [[28, "arkouda.get_filetype", false]], "get_filetype() (in module arkouda.io)": [[31, "arkouda.io.get_filetype", false]], "get_home_directory() (in module arkouda.security)": [[56, "arkouda.security.get_home_directory", false]], "get_jth() (arkouda.segarray method)": [[28, "arkouda.SegArray.get_jth", false]], "get_jth() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.get_jth", false]], "get_jth() (in module arkouda.segarray)": [[103, "arkouda.SegArray.get_jth", false]], "get_length_n() (arkouda.segarray method)": [[28, "arkouda.SegArray.get_length_n", false]], "get_length_n() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.get_length_n", false]], "get_length_n() (in module arkouda.segarray)": [[103, "arkouda.SegArray.get_length_n", false]], "get_lengths() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.get_lengths", false]], "get_match() (arkouda.matcher.matcher method)": [[36, "arkouda.matcher.Matcher.get_match", false]], "get_mem_avail() (in module arkouda.client)": [[22, "arkouda.client.get_mem_avail", false]], "get_mem_status() (in module arkouda.client)": [[22, "arkouda.client.get_mem_status", false]], "get_mem_used() (in module arkouda.client)": [[22, "arkouda.client.get_mem_used", false]], "get_ngrams() (arkouda.segarray method)": [[28, "arkouda.SegArray.get_ngrams", false]], "get_ngrams() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.get_ngrams", false]], "get_ngrams() (in module arkouda.segarray)": [[103, "arkouda.SegArray.get_ngrams", false]], "get_null_indices() (in module arkouda)": [[28, "arkouda.get_null_indices", false]], "get_null_indices() (in module arkouda.io)": [[31, "arkouda.io.get_null_indices", false]], "get_offsets() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.get_offsets", false]], "get_prefixes() (arkouda.segarray method)": [[28, "arkouda.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.get_prefixes", false]], "get_prefixes() (in module arkouda.segarray)": [[103, "arkouda.SegArray.get_prefixes", false]], "get_server_byteorder() (in module arkouda)": [[28, "arkouda.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.dtypes)": [[25, "arkouda.dtypes.get_server_byteorder", false]], "get_server_commands() (in module arkouda.client)": [[22, "arkouda.client.get_server_commands", false]], "get_suffixes() (arkouda.segarray method)": [[28, "arkouda.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.get_suffixes", false]], "get_suffixes() (in module arkouda.segarray)": [[103, "arkouda.SegArray.get_suffixes", false]], "get_username() (in module arkouda.security)": [[56, "arkouda.security.get_username", false]], "getarkoudalogger() (in module arkouda)": [[28, "arkouda.getArkoudaLogger", false]], "getfield() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.getfield", false]], "getfield() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.getfield", false]], "getfield() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.getfield", false]], "getfield() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.getfield", false]], "getfield() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.getfield", false]], "getfield() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.getfield", false]], "getfield() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.getfield", false]], "getfield() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.getfield", false]], "getfield() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.getfield", false]], "getfield() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.getfield", false]], "getfield() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.getfield", false]], "getfield() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.getfield", false]], "getfield() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.getfield", false]], "getfield() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.getfield", false]], "getfield() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.getfield", false]], "getfield() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.getfield", false]], "getfield() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.getfield", false]], "getfield() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.getfield", false]], "getfield() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.getfield", false]], "getfield() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.getfield", false]], "getfield() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.getfield", false]], "getfield() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.getfield", false]], "getfield() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.getfield", false]], "getfield() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.getfield", false]], "getfield() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.getfield", false]], "getfield() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.getfield", false]], "getfield() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.getfield", false]], "getfield() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.getfield", false]], "greater() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.greater", false]], "greater_equal() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.greater_equal", false]], "group() (arkouda.categorical method)": [[28, "arkouda.Categorical.group", false], [28, "id26", false], [28, "id75", false]], "group() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.group", false]], "group() (arkouda.match.match method)": [[35, "arkouda.match.Match.group", false], [107, "arkouda.match.Match.group", false]], "group() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.group", false]], "groupby (class in arkouda)": [[28, "arkouda.GroupBy", false], [28, "id223", false], [28, "id267", false], [28, "id311", false], [28, "id355", false], [28, "id399", false], [98, "arkouda.GroupBy", false]], "groupby (class in arkouda.groupbyclass)": [[26, "arkouda.groupbyclass.GroupBy", false]], "groupby() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.GroupBy", false], [28, "id109", false], [28, "arkouda.DataFrame.groupby", false], [28, "id127", false]], "groupby() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.GroupBy", false], [24, "arkouda.dataframe.DataFrame.groupby", false]], "groupby() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.groupby", false]], "groupby_reduction_types (in module arkouda)": [[28, "arkouda.GROUPBY_REDUCTION_TYPES", false]], "groupby_reduction_types (in module arkouda.groupbyclass)": [[26, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES", false]], "grouping (arkouda.segarray property)": [[28, "arkouda.SegArray.grouping", false]], "grouping (arkouda.segarray.segarray property)": [[57, "arkouda.segarray.SegArray.grouping", false]], "half (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.half", false]], "handled_functions (in module arkouda.array_api._array_object)": [[4, "arkouda.array_api._array_object.HANDLED_FUNCTIONS", false]], "has_repeat_labels() (arkouda.series method)": [[28, "arkouda.Series.has_repeat_labels", false]], "has_repeat_labels() (arkouda.series.series method)": [[58, "arkouda.series.Series.has_repeat_labels", false]], "hash() (arkouda.categorical method)": [[28, "arkouda.Categorical.hash", false], [28, "id27", false], [28, "id76", false]], "hash() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.hash", false]], "hash() (arkouda.segarray method)": [[28, "arkouda.SegArray.hash", false]], "hash() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.hash", false]], "hash() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.hash", false]], "hash() (in module arkouda)": [[28, "arkouda.hash", false]], "hash() (in module arkouda.numeric)": [[37, "arkouda.numeric.hash", false]], "hasnans() (arkouda.series method)": [[28, "arkouda.Series.hasnans", false]], "hasnans() (arkouda.series.series method)": [[58, "arkouda.series.Series.hasnans", false]], "head() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.head", false], [28, "id128", false]], "head() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.head", false]], "head() (arkouda.series method)": [[28, "arkouda.Series.head", false]], "head() (arkouda.series.series method)": [[58, "arkouda.series.Series.head", false]], "head() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.head", false]], "head() (in module arkouda.series)": [[104, "arkouda.Series.head", false]], "hex() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.hex", false]], "hex() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.hex", false]], "hist_all() (in module arkouda)": [[28, "arkouda.hist_all", false]], "hist_all() (in module arkouda.plotting)": [[44, "arkouda.plotting.hist_all", false]], "histogram() (in module arkouda)": [[28, "arkouda.histogram", false], [28, "id506", false], [99, "arkouda.histogram", false]], "histogram() (in module arkouda.numeric)": [[37, "arkouda.numeric.histogram", false]], "histogram2d() (in module arkouda)": [[28, "arkouda.histogram2d", false]], "histogram2d() (in module arkouda.numeric)": [[37, "arkouda.numeric.histogram2d", false]], "histogramdd() (in module arkouda)": [[28, "arkouda.histogramdd", false]], "histogramdd() (in module arkouda.numeric)": [[37, "arkouda.numeric.histogramdd", false]], "historyretriever (class in arkouda.history)": [[27, "arkouda.history.HistoryRetriever", false]], "hour (arkouda.datetime property)": [[28, "arkouda.Datetime.hour", false], [28, "id163", false], [28, "id196", false]], "hour (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.hour", false]], "iat (arkouda.series property)": [[28, "arkouda.Series.iat", false]], "iat (arkouda.series.series property)": [[58, "arkouda.series.Series.iat", false]], "identity() (in module arkouda.util)": [[62, "arkouda.util.identity", false]], "ignore (arkouda.errormode attribute)": [[28, "arkouda.ErrorMode.ignore", false]], "ignore (arkouda.numeric.errormode attribute)": [[37, "arkouda.numeric.ErrorMode.ignore", false]], "iinfo_object (class in arkouda.array_api._data_type_functions)": [[7, "arkouda.array_api._data_type_functions.iinfo_object", false]], "iloc (arkouda.series property)": [[28, "arkouda.Series.iloc", false]], "iloc (arkouda.series.series property)": [[58, "arkouda.series.Series.iloc", false]], "imag() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.imag", false]], "imag() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.imag", false]], "imag() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.imag", false]], "imag() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.imag", false]], "imag() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.imag", false]], "imag() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.imag", false]], "imag() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.imag", false]], "imag() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.imag", false]], "imag() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.imag", false]], "imag() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.imag", false]], "imag() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.imag", false]], "imag() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.imag", false]], "imag() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.imag", false]], "imag() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.imag", false]], "imag() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.imag", false]], "imag() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.imag", false]], "imag() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.imag", false]], "imag() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.imag", false]], "imag() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.imag", false]], "imag() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.imag", false]], "imag() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.imag", false]], "imag() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.imag", false]], "imag() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.imag", false]], "imag() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.imag", false]], "imag() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.imag", false]], "imag() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.imag", false]], "imag() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.imag", false]], "imag() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.imag", false]], "imag() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.imag", false]], "implements_numpy() (in module arkouda.array_api._array_object)": [[4, "arkouda.array_api._array_object.implements_numpy", false]], "import_data() (in module arkouda)": [[28, "arkouda.import_data", false], [90, "arkouda.import_data", false]], "import_data() (in module arkouda.io)": [[31, "arkouda.io.import_data", false]], "in1d() (arkouda.categorical method)": [[28, "arkouda.Categorical.in1d", false], [28, "id28", false], [28, "id77", false]], "in1d() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.in1d", false]], "in1d() (in module arkouda)": [[28, "arkouda.in1d", false], [28, "id507", false], [28, "id508", false], [105, "arkouda.in1d", false]], "in1d() (in module arkouda.pdarraysetops)": [[43, "arkouda.pdarraysetops.in1d", false]], "in1d_intervals() (in module arkouda)": [[28, "arkouda.in1d_intervals", false]], "in1d_intervals() (in module arkouda.alignment)": [[3, "arkouda.alignment.in1d_intervals", false]], "index (arkouda.dataframe property)": [[28, "arkouda.DataFrame.index", false], [28, "id104", false]], "index (arkouda.dataframe.dataframe property)": [[24, "arkouda.dataframe.DataFrame.index", false]], "index (arkouda.index property)": [[28, "arkouda.Index.index", false]], "index (arkouda.index.index property)": [[29, "arkouda.index.Index.index", false]], "index (arkouda.index.multiindex property)": [[29, "arkouda.index.MultiIndex.index", false]], "index (arkouda.multiindex property)": [[28, "arkouda.MultiIndex.index", false]], "index (class in arkouda)": [[28, "arkouda.Index", false], [91, "arkouda.Index", false]], "index (class in arkouda.index)": [[29, "arkouda.index.Index", false]], "indexof1d() (in module arkouda)": [[28, "arkouda.indexof1d", false]], "indexof1d() (in module arkouda.pdarraysetops)": [[43, "arkouda.pdarraysetops.indexof1d", false]], "indices (arkouda.array_api._set_functions.uniqueallresult attribute)": [[13, "arkouda.array_api._set_functions.UniqueAllResult.indices", false]], "inf (in module arkouda.array_api._constants)": [[5, "arkouda.array_api._constants.inf", false]], "inf (in module arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.Inf", false], [39, "arkouda.numpy.imports.inf", false]], "infinity (in module arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.Infinity", false]], "info (arkouda.dataframe property)": [[28, "arkouda.DataFrame.info", false], [28, "id105", false]], "info (arkouda.dataframe.dataframe property)": [[24, "arkouda.dataframe.DataFrame.info", false]], "info (arkouda.logger.loglevel attribute)": [[34, "arkouda.logger.LogLevel.INFO", false]], "info (arkouda.loglevel attribute)": [[28, "arkouda.LogLevel.INFO", false]], "info() (arkouda.categorical method)": [[28, "arkouda.Categorical.info", false], [28, "id29", false], [28, "id78", false]], "info() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.info", false]], "info() (arkouda.pdarray method)": [[28, "arkouda.pdarray.info", false], [28, "id550", false], [28, "id611", false], [28, "id672", false], [28, "id733", false], [28, "id794", false]], "info() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.info", false]], "info() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.info", false]], "information() (in module arkouda)": [[28, "arkouda.information", false]], "information() (in module arkouda.infoclass)": [[30, "arkouda.infoclass.information", false]], "infty (in module arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.infty", false]], "int16 (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.int16", false]], "int16 (in module arkouda)": [[28, "arkouda.int16", false]], "int16 (in module arkouda.array_api._dtypes)": [[8, "arkouda.array_api._dtypes.int16", false]], "int16 (in module arkouda.dtypes)": [[25, "arkouda.dtypes.int16", false]], "int32 (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.int32", false]], "int32 (in module arkouda)": [[28, "arkouda.int32", false]], "int32 (in module arkouda.array_api._dtypes)": [[8, "arkouda.array_api._dtypes.int32", false]], "int32 (in module arkouda.dtypes)": [[25, "arkouda.dtypes.int32", false]], "int64 (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.int64", false]], "int64 (in module arkouda)": [[28, "arkouda.int64", false], [28, "id509", false]], "int64 (in module arkouda.array_api._dtypes)": [[8, "arkouda.array_api._dtypes.int64", false]], "int64 (in module arkouda.dtypes)": [[25, "arkouda.dtypes.int64", false]], "int8 (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.int8", false]], "int8 (in module arkouda)": [[28, "arkouda.int8", false]], "int8 (in module arkouda.array_api._dtypes)": [[8, "arkouda.array_api._dtypes.int8", false]], "int8 (in module arkouda.dtypes)": [[25, "arkouda.dtypes.int8", false]], "int_ (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.int_", false]], "int_scalars (in module arkouda)": [[28, "arkouda.int_scalars", false], [28, "id512", false], [28, "id513", false]], "int_scalars (in module arkouda.dtypes)": [[25, "arkouda.dtypes.int_scalars", false]], "intc (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.intc", false]], "integers() (arkouda.generator method)": [[28, "arkouda.Generator.integers", false]], "integers() (arkouda.random._generator.generator method)": [[45, "arkouda.random._generator.Generator.integers", false]], "integers() (arkouda.random.generator method)": [[47, "arkouda.random.Generator.integers", false]], "integers() (in module arkouda.random.generator)": [[102, "arkouda.random.Generator.integers", false]], "intersect() (arkouda.segarray method)": [[28, "arkouda.SegArray.intersect", false]], "intersect() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.intersect", false]], "intersect() (in module arkouda)": [[28, "arkouda.intersect", false]], "intersect() (in module arkouda.dataframe)": [[24, "arkouda.dataframe.intersect", false]], "intersect() (in module arkouda.segarray)": [[103, "arkouda.SegArray.intersect", false]], "intersect1d() (in module arkouda)": [[28, "arkouda.intersect1d", false], [105, "arkouda.intersect1d", false]], "intersect1d() (in module arkouda.pdarraysetops)": [[43, "arkouda.pdarraysetops.intersect1d", false]], "interval() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.interval", false], [54, "id119", false], [54, "id138", false], [54, "id157", false], [54, "id176", false], [54, "id177", false], [54, "id196", false], [54, "id20", false], [54, "id216", false], [54, "id236", false], [54, "id256", false], [54, "id276", false], [54, "id296", false], [54, "id316", false], [54, "id336", false], [54, "id355", false], [54, "id374", false], [54, "id39", false], [54, "id393", false], [54, "id412", false], [54, "id432", false], [54, "id452", false], [54, "id471", false], [54, "id491", false], [54, "id511", false], [54, "id530", false], [54, "id550", false], [54, "id570", false], [54, "id589", false], [54, "id59", false], [54, "id609", false], [54, "id628", false], [54, "id647", false], [54, "id79", false], [54, "id99", false]], "interval_lookup() (in module arkouda)": [[28, "arkouda.interval_lookup", false]], "interval_lookup() (in module arkouda.alignment)": [[3, "arkouda.alignment.interval_lookup", false]], "inttypes (in module arkouda)": [[28, "arkouda.intTypes", false], [28, "id510", false], [28, "id511", false]], "inttypes (in module arkouda.dtypes)": [[25, "arkouda.dtypes.intTypes", false]], "intx() (in module arkouda)": [[28, "arkouda.intx", false]], "intx() (in module arkouda.dataframe)": [[24, "arkouda.dataframe.intx", false]], "inverse_indices (arkouda.array_api._set_functions.uniqueallresult attribute)": [[13, "arkouda.array_api._set_functions.UniqueAllResult.inverse_indices", false]], "inverse_indices (arkouda.array_api._set_functions.uniqueinverseresult attribute)": [[13, "arkouda.array_api._set_functions.UniqueInverseResult.inverse_indices", false]], "invert_permutation() (in module arkouda)": [[28, "arkouda.invert_permutation", false]], "invert_permutation() (in module arkouda.dataframe)": [[24, "arkouda.dataframe.invert_permutation", false]], "invert_permutation() (in module arkouda.util)": [[62, "arkouda.util.invert_permutation", false]], "ip_address() (in module arkouda)": [[28, "arkouda.ip_address", false]], "ip_address() (in module arkouda.client_dtypes)": [[23, "arkouda.client_dtypes.ip_address", false]], "ipv4 (class in arkouda)": [[28, "arkouda.IPv4", false]], "ipv4 (class in arkouda.client_dtypes)": [[23, "arkouda.client_dtypes.IPv4", false]], "is_cosorted() (in module arkouda)": [[28, "arkouda.is_cosorted", false]], "is_cosorted() (in module arkouda.alignment)": [[3, "arkouda.alignment.is_cosorted", false]], "is_float() (in module arkouda.util)": [[62, "arkouda.util.is_float", false]], "is_int() (in module arkouda.util)": [[62, "arkouda.util.is_int", false]], "is_integer() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.is_integer", false]], "is_integer() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.is_integer", false]], "is_integer() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.is_integer", false]], "is_integer() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.is_integer", false]], "is_integer() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.is_integer", false]], "is_integer() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.is_integer", false]], "is_integer() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.is_integer", false]], "is_integer() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.is_integer", false]], "is_integer() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.is_integer", false]], "is_integer() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.is_integer", false]], "is_integer() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.is_integer", false]], "is_integer() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.is_integer", false]], "is_integer() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.is_integer", false]], "is_integer() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.is_integer", false]], "is_integer() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.is_integer", false]], "is_integer() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.is_integer", false]], "is_integer() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.is_integer", false]], "is_integer() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.is_integer", false]], "is_integer() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.is_integer", false]], "is_integer() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.is_integer", false]], "is_integer() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.is_integer", false]], "is_integer() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.is_integer", false]], "is_integer() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.is_integer", false]], "is_integer() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.is_integer", false]], "is_ipv4() (in module arkouda)": [[28, "arkouda.is_ipv4", false]], "is_ipv4() (in module arkouda.client_dtypes)": [[23, "arkouda.client_dtypes.is_ipv4", false]], "is_ipv6() (in module arkouda)": [[28, "arkouda.is_ipv6", false]], "is_ipv6() (in module arkouda.client_dtypes)": [[23, "arkouda.client_dtypes.is_ipv6", false]], "is_leap_year (arkouda.datetime property)": [[28, "arkouda.Datetime.is_leap_year", false], [28, "id164", false], [28, "id197", false]], "is_leap_year (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.is_leap_year", false]], "is_numeric() (in module arkouda.util)": [[62, "arkouda.util.is_numeric", false]], "is_registered() (arkouda.categorical method)": [[28, "arkouda.Categorical.is_registered", false], [28, "id30", false], [28, "id79", false]], "is_registered() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.is_registered", false]], "is_registered() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.is_registered", false], [28, "id129", false]], "is_registered() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.is_registered", false]], "is_registered() (arkouda.datetime method)": [[28, "arkouda.Datetime.is_registered", false], [28, "id183", false], [28, "id216", false]], "is_registered() (arkouda.groupby method)": [[28, "arkouda.GroupBy.is_registered", false], [28, "id248", false], [28, "id292", false], [28, "id336", false], [28, "id380", false], [28, "id424", false], [98, "arkouda.GroupBy.is_registered", false]], "is_registered() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.is_registered", false]], "is_registered() (arkouda.index method)": [[28, "arkouda.Index.is_registered", false]], "is_registered() (arkouda.index.index method)": [[29, "arkouda.index.Index.is_registered", false]], "is_registered() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.is_registered", false]], "is_registered() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.is_registered", false]], "is_registered() (arkouda.pdarray method)": [[28, "arkouda.pdarray.is_registered", false], [28, "id551", false], [28, "id612", false], [28, "id673", false], [28, "id734", false], [28, "id795", false]], "is_registered() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.is_registered", false]], "is_registered() (arkouda.segarray method)": [[28, "arkouda.SegArray.is_registered", false]], "is_registered() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.is_registered", false]], "is_registered() (arkouda.series method)": [[28, "arkouda.Series.is_registered", false]], "is_registered() (arkouda.series.series method)": [[58, "arkouda.series.Series.is_registered", false]], "is_registered() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.is_registered", false]], "is_registered() (arkouda.timeclass.datetime method)": [[61, "arkouda.timeclass.Datetime.is_registered", false]], "is_registered() (arkouda.timeclass.timedelta method)": [[61, "arkouda.timeclass.Timedelta.is_registered", false]], "is_registered() (arkouda.timedelta method)": [[28, "arkouda.Timedelta.is_registered", false], [28, "id464", false]], "is_registered() (in module arkouda)": [[28, "arkouda.is_registered", false]], "is_registered() (in module arkouda.util)": [[62, "arkouda.util.is_registered", false]], "is_sorted() (arkouda.pdarray method)": [[28, "arkouda.pdarray.is_sorted", false], [28, "id552", false], [28, "id613", false], [28, "id674", false], [28, "id735", false], [28, "id796", false], [99, "arkouda.pdarray.is_sorted", false]], "is_sorted() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.is_sorted", false]], "is_sorted() (in module arkouda)": [[28, "arkouda.is_sorted", false], [28, "id516", false], [93, "arkouda.is_sorted", false]], "is_sorted() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.is_sorted", false]], "is_unique (arkouda.index property)": [[28, "arkouda.Index.is_unique", false]], "is_unique (arkouda.index.index property)": [[29, "arkouda.index.Index.is_unique", false]], "isalnum() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.isalnum", false]], "isalpha() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.isalpha", false]], "isdecimal() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.isdecimal", false]], "isdigit() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.isdigit", false]], "isdtype() (in module arkouda.array_api._data_type_functions)": [[7, "arkouda.array_api._data_type_functions.isdtype", false]], "isempty() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.isempty", false]], "isf() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.isf", false], [54, "id10", false], [54, "id109", false], [54, "id128", false], [54, "id147", false], [54, "id166", false], [54, "id186", false], [54, "id197", false], [54, "id206", false], [54, "id226", false], [54, "id246", false], [54, "id266", false], [54, "id286", false], [54, "id29", false], [54, "id306", false], [54, "id326", false], [54, "id345", false], [54, "id364", false], [54, "id383", false], [54, "id402", false], [54, "id422", false], [54, "id442", false], [54, "id461", false], [54, "id481", false], [54, "id49", false], [54, "id501", false], [54, "id520", false], [54, "id540", false], [54, "id560", false], [54, "id579", false], [54, "id599", false], [54, "id618", false], [54, "id637", false], [54, "id69", false], [54, "id89", false]], "isfinite() (in module arkouda)": [[28, "arkouda.isfinite", false]], "isfinite() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.isfinite", false]], "isfinite() (in module arkouda.numeric)": [[37, "arkouda.numeric.isfinite", false]], "isin() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.isin", false], [28, "id130", false]], "isin() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.isin", false]], "isin() (arkouda.series method)": [[28, "arkouda.Series.isin", false]], "isin() (arkouda.series.series method)": [[58, "arkouda.series.Series.isin", false]], "isinf() (in module arkouda)": [[28, "arkouda.isinf", false]], "isinf() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.isinf", false]], "isinf() (in module arkouda.numeric)": [[37, "arkouda.numeric.isinf", false]], "islower() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.islower", false]], "isna() (arkouda.categorical method)": [[28, "arkouda.Categorical.isna", false], [28, "id31", false], [28, "id80", false]], "isna() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.isna", false]], "isna() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.isna", false], [28, "id131", false]], "isna() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.isna", false]], "isna() (arkouda.series method)": [[28, "arkouda.Series.isna", false]], "isna() (arkouda.series.series method)": [[58, "arkouda.series.Series.isna", false]], "isnan() (in module arkouda)": [[28, "arkouda.isnan", false], [28, "id517", false]], "isnan() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.isnan", false]], "isnan() (in module arkouda.numeric)": [[37, "arkouda.numeric.isnan", false]], "isnull() (arkouda.series method)": [[28, "arkouda.Series.isnull", false]], "isnull() (arkouda.series.series method)": [[58, "arkouda.series.Series.isnull", false]], "isocalendar() (arkouda.datetime method)": [[28, "arkouda.Datetime.isocalendar", false], [28, "id184", false], [28, "id217", false]], "isocalendar() (arkouda.timeclass.datetime method)": [[61, "arkouda.timeclass.Datetime.isocalendar", false]], "isspace() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.isspace", false]], "issupportedint() (in module arkouda)": [[28, "arkouda.isSupportedInt", false], [28, "id514", false], [28, "id515", false]], "issupportednumber() (in module arkouda)": [[28, "arkouda.isSupportedNumber", false]], "issupportednumber() (in module arkouda.dtypes)": [[25, "arkouda.dtypes.isSupportedNumber", false]], "istitle() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.istitle", false]], "isupper() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.isupper", false]], "item() (arkouda.array_api._array_object.array method)": [[4, "arkouda.array_api._array_object.Array.item", false]], "item() (arkouda.array_api._typing.array method)": [[16, "arkouda.array_api._typing.Array.item", false]], "item() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.item", false]], "item() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.item", false]], "item() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.item", false]], "item() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.item", false]], "item() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.item", false]], "item() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.item", false]], "item() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.item", false]], "item() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.item", false]], "item() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.item", false]], "item() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.item", false]], "item() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.item", false]], "item() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.item", false]], "item() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.item", false]], "item() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.item", false]], "item() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.item", false]], "item() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.item", false]], "item() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.item", false]], "item() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.item", false]], "item() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.item", false]], "item() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.item", false]], "item() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.item", false]], "item() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.item", false]], "item() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.item", false]], "item() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.item", false]], "item() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.item", false]], "item() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.item", false]], "item() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.item", false]], "item() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.item", false]], "itemset() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.itemset", false]], "itemset() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.itemset", false]], "itemset() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.itemset", false]], "itemset() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.itemset", false]], "itemset() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.itemset", false]], "itemset() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.itemset", false]], "itemset() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.itemset", false]], "itemset() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.itemset", false]], "itemset() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.itemset", false]], "itemset() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.itemset", false]], "itemset() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.itemset", false]], "itemset() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.itemset", false]], "itemset() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.itemset", false]], "itemset() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.itemset", false]], "itemset() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.itemset", false]], "itemset() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.itemset", false]], "itemset() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.itemset", false]], "itemset() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.itemset", false]], "itemset() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.itemset", false]], "itemset() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.itemset", false]], "itemset() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.itemset", false]], "itemset() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.itemset", false]], "itemset() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.itemset", false]], "itemset() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.itemset", false]], "itemset() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.itemset", false]], "itemset() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.itemset", false]], "itemset() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.itemset", false]], "itemset() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.itemset", false]], "itemsize (arkouda.array_view.arrayview attribute)": [[20, "arkouda.array_view.ArrayView.itemsize", false]], "itemsize (arkouda.arrayview attribute)": [[28, "arkouda.ArrayView.itemsize", false], [94, "arkouda.ArrayView.itemsize", false]], "itemsize (arkouda.pdarray attribute)": [[28, "arkouda.pdarray.itemsize", false], [28, "id529", false], [28, "id590", false], [28, "id651", false], [28, "id712", false], [28, "id773", false], [101, "arkouda.pdarray.itemsize", false]], "itemsize (arkouda.pdarrayclass.pdarray attribute)": [[41, "arkouda.pdarrayclass.pdarray.itemsize", false]], "itemsize() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.itemsize", false]], "itemsize() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.itemsize", false]], "itemsize() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.itemsize", false]], "itemsize() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.itemsize", false]], "itemsize() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.itemsize", false]], "itemsize() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.itemsize", false]], "itemsize() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.itemsize", false]], "itemsize() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.itemsize", false]], "itemsize() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.itemsize", false]], "itemsize() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.itemsize", false]], "itemsize() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.itemsize", false]], "itemsize() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.itemsize", false]], "itemsize() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.itemsize", false]], "itemsize() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.itemsize", false]], "itemsize() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.itemsize", false]], "itemsize() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.itemsize", false]], "itemsize() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.itemsize", false]], "itemsize() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.itemsize", false]], "itemsize() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.itemsize", false]], "itemsize() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.itemsize", false]], "itemsize() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.itemsize", false]], "itemsize() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.itemsize", false]], "itemsize() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.itemsize", false]], "itemsize() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.itemsize", false]], "itemsize() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.itemsize", false]], "itemsize() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.itemsize", false]], "itemsize() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.itemsize", false]], "itemsize() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.itemsize", false]], "join_on_eq_with_dt() (in module arkouda)": [[28, "arkouda.join_on_eq_with_dt", false]], "join_on_eq_with_dt() (in module arkouda.join)": [[33, "arkouda.join.join_on_eq_with_dt", false]], "left_align() (in module arkouda)": [[28, "arkouda.left_align", false]], "left_align() (in module arkouda.alignment)": [[3, "arkouda.alignment.left_align", false]], "len_suffix (in module arkouda)": [[28, "arkouda.LEN_SUFFIX", false]], "len_suffix (in module arkouda.segarray)": [[57, "arkouda.segarray.LEN_SUFFIX", false]], "less() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.less", false]], "less_equal() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.less_equal", false]], "linspace() (in module arkouda)": [[28, "arkouda.linspace", false], [96, "arkouda.linspace", false]], "linspace() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.linspace", false]], "linspace() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.linspace", false]], "list_registry() (in module arkouda)": [[28, "arkouda.list_registry", false]], "list_registry() (in module arkouda.infoclass)": [[30, "arkouda.infoclass.list_registry", false]], "list_symbol_table() (in module arkouda)": [[28, "arkouda.list_symbol_table", false]], "list_symbol_table() (in module arkouda.infoclass)": [[30, "arkouda.infoclass.list_symbol_table", false]], "load() (arkouda.dataframe class method)": [[28, "arkouda.DataFrame.load", false], [28, "id132", false]], "load() (arkouda.dataframe.dataframe class method)": [[24, "arkouda.dataframe.DataFrame.load", false]], "load() (arkouda.segarray class method)": [[28, "arkouda.SegArray.load", false]], "load() (arkouda.segarray.segarray class method)": [[57, "arkouda.segarray.SegArray.load", false]], "load() (in module arkouda)": [[28, "arkouda.load", false]], "load() (in module arkouda.io)": [[31, "arkouda.io.load", false]], "load_all() (in module arkouda)": [[28, "arkouda.load_all", false]], "load_all() (in module arkouda.io)": [[31, "arkouda.io.load_all", false]], "loc (arkouda.series property)": [[28, "arkouda.Series.loc", false]], "loc (arkouda.series.series property)": [[58, "arkouda.series.Series.loc", false]], "locate() (arkouda.series method)": [[28, "arkouda.Series.locate", false]], "locate() (arkouda.series.series method)": [[58, "arkouda.series.Series.locate", false]], "locate() (in module arkouda.series)": [[104, "arkouda.Series.locate", false], [104, "id0", false]], "locationsinfo (arkouda.matcher.matcher attribute)": [[36, "arkouda.matcher.Matcher.LocationsInfo", false]], "log() (in module arkouda)": [[28, "arkouda.log", false], [93, "arkouda.log", false]], "log() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.log", false]], "log() (in module arkouda.numeric)": [[37, "arkouda.numeric.log", false]], "log10() (in module arkouda)": [[28, "arkouda.log10", false]], "log10() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.log10", false]], "log10() (in module arkouda.numeric)": [[37, "arkouda.numeric.log10", false]], "log1p() (in module arkouda)": [[28, "arkouda.log1p", false]], "log1p() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.log1p", false]], "log1p() (in module arkouda.numeric)": [[37, "arkouda.numeric.log1p", false]], "log2() (in module arkouda)": [[28, "arkouda.log2", false]], "log2() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.log2", false]], "log2() (in module arkouda.numeric)": [[37, "arkouda.numeric.log2", false]], "logaddexp() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.logaddexp", false]], "logcdf() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.logcdf", false], [54, "id105", false], [54, "id124", false], [54, "id143", false], [54, "id162", false], [54, "id182", false], [54, "id202", false], [54, "id217", false], [54, "id222", false], [54, "id242", false], [54, "id25", false], [54, "id262", false], [54, "id282", false], [54, "id302", false], [54, "id322", false], [54, "id341", false], [54, "id360", false], [54, "id379", false], [54, "id398", false], [54, "id418", false], [54, "id438", false], [54, "id45", false], [54, "id457", false], [54, "id477", false], [54, "id497", false], [54, "id516", false], [54, "id536", false], [54, "id556", false], [54, "id575", false], [54, "id595", false], [54, "id6", false], [54, "id614", false], [54, "id633", false], [54, "id65", false], [54, "id85", false]], "logger (arkouda.groupby attribute)": [[28, "arkouda.GroupBy.logger", false], [28, "id230", false], [28, "id274", false], [28, "id318", false], [28, "id362", false], [28, "id406", false], [98, "arkouda.GroupBy.logger", false]], "logger (arkouda.groupbyclass.groupby attribute)": [[26, "arkouda.groupbyclass.GroupBy.logger", false]], "logger (arkouda.strings.strings attribute)": [[60, "arkouda.strings.Strings.logger", false]], "logical_and() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.logical_and", false]], "logical_not() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.logical_not", false]], "logical_or() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.logical_or", false]], "logical_xor() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.logical_xor", false]], "loglevel (class in arkouda)": [[28, "arkouda.LogLevel", false]], "loglevel (class in arkouda.logger)": [[34, "arkouda.logger.LogLevel", false]], "logpdf() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.logpdf", false], [54, "id103", false], [54, "id122", false], [54, "id141", false], [54, "id160", false], [54, "id180", false], [54, "id200", false], [54, "id220", false], [54, "id23", false], [54, "id237", false], [54, "id240", false], [54, "id260", false], [54, "id280", false], [54, "id300", false], [54, "id320", false], [54, "id339", false], [54, "id358", false], [54, "id377", false], [54, "id396", false], [54, "id4", false], [54, "id416", false], [54, "id43", false], [54, "id436", false], [54, "id455", false], [54, "id475", false], [54, "id495", false], [54, "id514", false], [54, "id534", false], [54, "id554", false], [54, "id573", false], [54, "id593", false], [54, "id612", false], [54, "id63", false], [54, "id631", false], [54, "id83", false]], "logsf() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.logsf", false], [54, "id107", false], [54, "id126", false], [54, "id145", false], [54, "id164", false], [54, "id184", false], [54, "id204", false], [54, "id224", false], [54, "id244", false], [54, "id257", false], [54, "id264", false], [54, "id27", false], [54, "id284", false], [54, "id304", false], [54, "id324", false], [54, "id343", false], [54, "id362", false], [54, "id381", false], [54, "id400", false], [54, "id420", false], [54, "id440", false], [54, "id459", false], [54, "id47", false], [54, "id479", false], [54, "id499", false], [54, "id518", false], [54, "id538", false], [54, "id558", false], [54, "id577", false], [54, "id597", false], [54, "id616", false], [54, "id635", false], [54, "id67", false], [54, "id8", false], [54, "id87", false]], "longdouble (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.longdouble", false]], "longlong (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.longlong", false]], "lookup() (arkouda.index method)": [[28, "arkouda.Index.lookup", false]], "lookup() (arkouda.index.index method)": [[29, "arkouda.index.Index.lookup", false]], "lookup() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.lookup", false]], "lookup() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.lookup", false]], "lookup() (in module arkouda)": [[28, "arkouda.lookup", false]], "lookup() (in module arkouda.alignment)": [[3, "arkouda.alignment.lookup", false]], "lookup() (in module arkouda.index)": [[91, "arkouda.Index.lookup", false]], "lookup() (in module arkouda.multiindex)": [[91, "arkouda.MultiIndex.lookup", false]], "lower() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.lower", false]], "ls() (in module arkouda)": [[28, "arkouda.ls", false]], "ls() (in module arkouda.io)": [[31, "arkouda.io.ls", false]], "ls_csv() (in module arkouda)": [[28, "arkouda.ls_csv", false]], "ls_csv() (in module arkouda.io)": [[31, "arkouda.io.ls_csv", false]], "lstick() (arkouda.strings method)": [[107, "arkouda.Strings.lstick", false]], "lstick() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.lstick", false]], "map() (arkouda.index method)": [[28, "arkouda.Index.map", false]], "map() (arkouda.index.index method)": [[29, "arkouda.index.Index.map", false]], "map() (arkouda.series method)": [[28, "arkouda.Series.map", false]], "map() (arkouda.series.series method)": [[58, "arkouda.series.Series.map", false]], "map() (in module arkouda.util)": [[62, "arkouda.util.map", false]], "match (class in arkouda.match)": [[35, "arkouda.match.Match", false]], "match() (arkouda.strings method)": [[107, "arkouda.Strings.match", false]], "match() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.match", false]], "match_type() (arkouda.match.match method)": [[35, "arkouda.match.Match.match_type", false], [107, "arkouda.match.Match.match_type", false]], "matched() (arkouda.match.match method)": [[35, "arkouda.match.Match.matched", false], [107, "arkouda.match.Match.matched", false]], "matcher (class in arkouda.matcher)": [[36, "arkouda.matcher.Matcher", false]], "matmul() (in module arkouda.array_api.linalg)": [[19, "arkouda.array_api.linalg.matmul", false]], "matrix_transpose() (in module arkouda.array_api.linalg)": [[19, "arkouda.array_api.linalg.matrix_transpose", false]], "max (arkouda.array_api._data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api._data_type_functions.finfo_object.max", false]], "max (arkouda.array_api._data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api._data_type_functions.iinfo_object.max", false]], "max() (arkouda.groupby method)": [[28, "arkouda.GroupBy.max", false], [28, "id249", false], [28, "id293", false], [28, "id337", false], [28, "id381", false], [28, "id425", false], [98, "arkouda.GroupBy.max", false]], "max() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.max", false]], "max() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.max", false]], "max() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.max", false]], "max() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.max", false]], "max() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.max", false]], "max() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.max", false]], "max() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.max", false]], "max() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.max", false]], "max() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.max", false]], "max() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.max", false]], "max() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.max", false]], "max() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.max", false]], "max() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.max", false]], "max() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.max", false]], "max() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.max", false]], "max() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.max", false]], "max() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.max", false]], "max() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.max", false]], "max() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.max", false]], "max() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.max", false]], "max() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.max", false]], "max() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.max", false]], "max() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.max", false]], "max() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.max", false]], "max() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.max", false]], "max() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.max", false]], "max() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.max", false]], "max() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.max", false]], "max() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.max", false]], "max() (arkouda.pdarray method)": [[28, "arkouda.pdarray.max", false], [28, "id553", false], [28, "id614", false], [28, "id675", false], [28, "id736", false], [28, "id797", false], [99, "arkouda.pdarray.max", false]], "max() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.max", false]], "max() (arkouda.segarray method)": [[28, "arkouda.SegArray.max", false]], "max() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.max", false]], "max() (in module arkouda)": [[28, "arkouda.max", false], [93, "arkouda.max", false]], "max() (in module arkouda.array_api._statistical_functions)": [[15, "arkouda.array_api._statistical_functions.max", false]], "max() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.max", false]], "max_bits (arkouda.pdarray property)": [[28, "arkouda.pdarray.max_bits", false], [28, "id530", false], [28, "id591", false], [28, "id652", false], [28, "id713", false], [28, "id774", false]], "max_bits (arkouda.pdarrayclass.pdarray property)": [[41, "arkouda.pdarrayclass.pdarray.max_bits", false]], "maxk() (arkouda.pdarray method)": [[28, "arkouda.pdarray.maxk", false], [28, "id554", false], [28, "id615", false], [28, "id676", false], [28, "id737", false], [28, "id798", false], [99, "arkouda.pdarray.maxk", false]], "maxk() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.maxk", false]], "maxk() (in module arkouda)": [[28, "arkouda.maxk", false], [93, "arkouda.maxk", false]], "maxk() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.maxk", false]], "mean() (arkouda.groupby method)": [[28, "arkouda.GroupBy.mean", false], [28, "id250", false], [28, "id294", false], [28, "id338", false], [28, "id382", false], [28, "id426", false], [98, "arkouda.GroupBy.mean", false]], "mean() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.mean", false]], "mean() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.mean", false]], "mean() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.mean", false]], "mean() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.mean", false]], "mean() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.mean", false]], "mean() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.mean", false]], "mean() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.mean", false]], "mean() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.mean", false]], "mean() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.mean", false]], "mean() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.mean", false]], "mean() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.mean", false]], "mean() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.mean", false]], "mean() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.mean", false]], "mean() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.mean", false]], "mean() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.mean", false]], "mean() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.mean", false]], "mean() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.mean", false]], "mean() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.mean", false]], "mean() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.mean", false]], "mean() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.mean", false]], "mean() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.mean", false]], "mean() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.mean", false]], "mean() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.mean", false]], "mean() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.mean", false]], "mean() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.mean", false]], "mean() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.mean", false]], "mean() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.mean", false]], "mean() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.mean", false]], "mean() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.mean", false]], "mean() (arkouda.pdarray method)": [[28, "arkouda.pdarray.mean", false], [28, "id555", false], [28, "id616", false], [28, "id677", false], [28, "id738", false], [28, "id799", false], [99, "arkouda.pdarray.mean", false]], "mean() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.mean", false]], "mean() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.mean", false], [54, "id116", false], [54, "id135", false], [54, "id154", false], [54, "id17", false], [54, "id173", false], [54, "id193", false], [54, "id213", false], [54, "id233", false], [54, "id253", false], [54, "id273", false], [54, "id277", false], [54, "id293", false], [54, "id313", false], [54, "id333", false], [54, "id352", false], [54, "id36", false], [54, "id371", false], [54, "id390", false], [54, "id409", false], [54, "id429", false], [54, "id449", false], [54, "id468", false], [54, "id488", false], [54, "id508", false], [54, "id527", false], [54, "id547", false], [54, "id56", false], [54, "id567", false], [54, "id586", false], [54, "id606", false], [54, "id625", false], [54, "id644", false], [54, "id76", false], [54, "id96", false]], "mean() (arkouda.segarray method)": [[28, "arkouda.SegArray.mean", false]], "mean() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.mean", false]], "mean() (in module arkouda)": [[28, "arkouda.mean", false], [93, "arkouda.mean", false]], "mean() (in module arkouda.array_api._statistical_functions)": [[15, "arkouda.array_api._statistical_functions.mean", false]], "mean() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.mean", false]], "mean_shim() (in module arkouda.array_api._statistical_functions)": [[15, "arkouda.array_api._statistical_functions.mean_shim", false]], "median() (arkouda.groupby method)": [[28, "arkouda.GroupBy.median", false], [28, "id251", false], [28, "id295", false], [28, "id339", false], [28, "id383", false], [28, "id427", false], [98, "arkouda.GroupBy.median", false]], "median() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.median", false]], "median() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.median", false], [54, "id115", false], [54, "id134", false], [54, "id153", false], [54, "id16", false], [54, "id172", false], [54, "id192", false], [54, "id212", false], [54, "id232", false], [54, "id252", false], [54, "id272", false], [54, "id292", false], [54, "id297", false], [54, "id312", false], [54, "id332", false], [54, "id35", false], [54, "id351", false], [54, "id370", false], [54, "id389", false], [54, "id408", false], [54, "id428", false], [54, "id448", false], [54, "id467", false], [54, "id487", false], [54, "id507", false], [54, "id526", false], [54, "id546", false], [54, "id55", false], [54, "id566", false], [54, "id585", false], [54, "id605", false], [54, "id624", false], [54, "id643", false], [54, "id75", false], [54, "id95", false]], "memory_usage() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.memory_usage", false], [28, "id133", false]], "memory_usage() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.memory_usage", false]], "memory_usage() (arkouda.index method)": [[28, "arkouda.Index.memory_usage", false]], "memory_usage() (arkouda.index.index method)": [[29, "arkouda.index.Index.memory_usage", false]], "memory_usage() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.memory_usage", false]], "memory_usage() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.memory_usage", false]], "memory_usage() (arkouda.series method)": [[28, "arkouda.Series.memory_usage", false]], "memory_usage() (arkouda.series.series method)": [[58, "arkouda.series.Series.memory_usage", false]], "memory_usage_info() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.memory_usage_info", false], [28, "id134", false]], "memory_usage_info() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.memory_usage_info", false]], "merge() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.merge", false], [28, "id135", false]], "merge() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.merge", false]], "merge() (in module arkouda)": [[28, "arkouda.merge", false]], "merge() (in module arkouda.dataframe)": [[24, "arkouda.dataframe.merge", false]], "meshgrid() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.meshgrid", false]], "microsecond (arkouda.datetime property)": [[28, "arkouda.Datetime.microsecond", false], [28, "id165", false], [28, "id198", false]], "microsecond (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.microsecond", false]], "microseconds (arkouda.timeclass.timedelta property)": [[61, "arkouda.timeclass.Timedelta.microseconds", false]], "microseconds (arkouda.timedelta property)": [[28, "arkouda.Timedelta.microseconds", false], [28, "id452", false]], "millisecond (arkouda.datetime property)": [[28, "arkouda.Datetime.millisecond", false], [28, "id166", false], [28, "id199", false]], "millisecond (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.millisecond", false]], "min (arkouda.array_api._data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api._data_type_functions.finfo_object.min", false]], "min (arkouda.array_api._data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api._data_type_functions.iinfo_object.min", false]], "min() (arkouda.groupby method)": [[28, "arkouda.GroupBy.min", false], [28, "id252", false], [28, "id296", false], [28, "id340", false], [28, "id384", false], [28, "id428", false], [98, "arkouda.GroupBy.min", false]], "min() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.min", false]], "min() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.min", false]], "min() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.min", false]], "min() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.min", false]], "min() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.min", false]], "min() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.min", false]], "min() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.min", false]], "min() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.min", false]], "min() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.min", false]], "min() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.min", false]], "min() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.min", false]], "min() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.min", false]], "min() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.min", false]], "min() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.min", false]], "min() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.min", false]], "min() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.min", false]], "min() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.min", false]], "min() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.min", false]], "min() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.min", false]], "min() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.min", false]], "min() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.min", false]], "min() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.min", false]], "min() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.min", false]], "min() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.min", false]], "min() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.min", false]], "min() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.min", false]], "min() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.min", false]], "min() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.min", false]], "min() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.min", false]], "min() (arkouda.pdarray method)": [[28, "arkouda.pdarray.min", false], [28, "id556", false], [28, "id617", false], [28, "id678", false], [28, "id739", false], [28, "id800", false], [99, "arkouda.pdarray.min", false]], "min() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.min", false]], "min() (arkouda.segarray method)": [[28, "arkouda.SegArray.min", false]], "min() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.min", false]], "min() (in module arkouda)": [[28, "arkouda.min", false], [93, "arkouda.min", false]], "min() (in module arkouda.array_api._statistical_functions)": [[15, "arkouda.array_api._statistical_functions.min", false]], "min() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.min", false]], "mink() (arkouda.pdarray method)": [[28, "arkouda.pdarray.mink", false], [28, "id557", false], [28, "id618", false], [28, "id679", false], [28, "id740", false], [28, "id801", false], [99, "arkouda.pdarray.mink", false]], "mink() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.mink", false]], "mink() (in module arkouda)": [[28, "arkouda.mink", false], [93, "arkouda.mink", false]], "mink() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.mink", false]], "minute (arkouda.datetime property)": [[28, "arkouda.Datetime.minute", false], [28, "id167", false], [28, "id200", false]], "minute (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.minute", false]], "mod() (in module arkouda)": [[28, "arkouda.mod", false]], "mod() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.mod", false]], "mode() (arkouda.groupby method)": [[28, "arkouda.GroupBy.mode", false], [28, "id253", false], [28, "id297", false], [28, "id341", false], [28, "id385", false], [28, "id429", false], [98, "arkouda.GroupBy.mode", false]], "mode() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.mode", false]], "module": [[2, "module-arkouda.accessor", false], [3, "module-arkouda.alignment", false], [4, "module-arkouda.array_api._array_object", false], [5, "module-arkouda.array_api._constants", false], [6, "module-arkouda.array_api._creation_functions", false], [7, "module-arkouda.array_api._data_type_functions", false], [8, "module-arkouda.array_api._dtypes", false], [9, "module-arkouda.array_api._elementwise_functions", false], [10, "module-arkouda.array_api._indexing_functions", false], [11, "module-arkouda.array_api._manipulation_functions", false], [12, "module-arkouda.array_api._searching_functions", false], [13, "module-arkouda.array_api._set_functions", false], [14, "module-arkouda.array_api._sorting_functions", false], [15, "module-arkouda.array_api._statistical_functions", false], [16, "module-arkouda.array_api._typing", false], [17, "module-arkouda.array_api._utility_functions", false], [18, "module-arkouda.array_api", false], [19, "module-arkouda.array_api.linalg", false], [20, "module-arkouda.array_view", false], [21, "module-arkouda.categorical", false], [22, "module-arkouda.client", false], [23, "module-arkouda.client_dtypes", false], [24, "module-arkouda.dataframe", false], [25, "module-arkouda.dtypes", false], [26, "module-arkouda.groupbyclass", false], [27, "module-arkouda.history", false], [28, "module-arkouda", false], [29, "module-arkouda.index", false], [30, "module-arkouda.infoclass", false], [31, "module-arkouda.io", false], [32, "module-arkouda.io_util", false], [33, "module-arkouda.join", false], [34, "module-arkouda.logger", false], [35, "module-arkouda.match", false], [36, "module-arkouda.matcher", false], [37, "module-arkouda.numeric", false], [38, "module-arkouda.numpy.char", false], [39, "module-arkouda.numpy.imports", false], [40, "module-arkouda.numpy", false], [41, "module-arkouda.pdarrayclass", false], [42, "module-arkouda.pdarraycreation", false], [43, "module-arkouda.pdarraysetops", false], [44, "module-arkouda.plotting", false], [45, "module-arkouda.random._generator", false], [46, "module-arkouda.random._legacy", false], [47, "module-arkouda.random", false], [48, "module-arkouda.row", false], [49, "module-arkouda.scipy._stats_py", false], [50, "module-arkouda.scipy.imports", false], [51, "module-arkouda.scipy", false], [52, "module-arkouda.scipy.special._math", false], [53, "module-arkouda.scipy.special", false], [54, "module-arkouda.scipy.stats.imports", false], [55, "module-arkouda.scipy.stats", false], [56, "module-arkouda.security", false], [57, "module-arkouda.segarray", false], [58, "module-arkouda.series", false], [59, "module-arkouda.sorting", false], [60, "module-arkouda.strings", false], [61, "module-arkouda.timeclass", false], [62, "module-arkouda.util", false]], "moment() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.moment", false], [54, "id11", false], [54, "id110", false], [54, "id129", false], [54, "id148", false], [54, "id167", false], [54, "id187", false], [54, "id207", false], [54, "id227", false], [54, "id247", false], [54, "id267", false], [54, "id287", false], [54, "id30", false], [54, "id307", false], [54, "id317", false], [54, "id327", false], [54, "id346", false], [54, "id365", false], [54, "id384", false], [54, "id403", false], [54, "id423", false], [54, "id443", false], [54, "id462", false], [54, "id482", false], [54, "id50", false], [54, "id502", false], [54, "id521", false], [54, "id541", false], [54, "id561", false], [54, "id580", false], [54, "id600", false], [54, "id619", false], [54, "id638", false], [54, "id70", false], [54, "id90", false]], "moment_type() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.moment_type", false]], "month (arkouda.datetime property)": [[28, "arkouda.Datetime.month", false], [28, "id168", false], [28, "id201", false]], "month (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.month", false]], "most_common() (arkouda.groupby method)": [[28, "arkouda.GroupBy.most_common", false], [28, "id254", false], [28, "id298", false], [28, "id342", false], [28, "id386", false], [28, "id430", false], [98, "arkouda.GroupBy.most_common", false]], "most_common() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.most_common", false]], "most_common() (in module arkouda.util)": [[62, "arkouda.util.most_common", false]], "moveaxis() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.moveaxis", false]], "mt (arkouda.array_api._array_object.array property)": [[4, "arkouda.array_api._array_object.Array.mT", false]], "mt (arkouda.array_api._typing.array property)": [[16, "arkouda.array_api._typing.Array.mT", false]], "multiindex (class in arkouda)": [[28, "arkouda.MultiIndex", false]], "multiindex (class in arkouda.index)": [[29, "arkouda.index.MultiIndex", false]], "multiply() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.multiply", false]], "name (arkouda.pdarray attribute)": [[28, "arkouda.pdarray.name", false], [28, "id524", false], [28, "id585", false], [28, "id646", false], [28, "id707", false], [28, "id768", false], [101, "arkouda.pdarray.name", false]], "name (arkouda.pdarrayclass.pdarray attribute)": [[41, "arkouda.pdarrayclass.pdarray.name", false]], "name() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.name", false]], "nan (in module arkouda.array_api._constants)": [[5, "arkouda.array_api._constants.nan", false]], "nan (in module arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.NAN", false], [39, "arkouda.numpy.imports.NaN", false], [39, "arkouda.numpy.imports.nan", false]], "nanosecond (arkouda.datetime property)": [[28, "arkouda.Datetime.nanosecond", false], [28, "id169", false], [28, "id202", false]], "nanosecond (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.nanosecond", false]], "nanoseconds (arkouda.timeclass.timedelta property)": [[61, "arkouda.timeclass.Timedelta.nanoseconds", false]], "nanoseconds (arkouda.timedelta property)": [[28, "arkouda.Timedelta.nanoseconds", false], [28, "id453", false]], "nbytes (arkouda.categorical property)": [[28, "arkouda.Categorical.nbytes", false], [28, "id11", false], [28, "id60", false]], "nbytes (arkouda.categorical.categorical property)": [[21, "arkouda.categorical.Categorical.nbytes", false]], "nbytes (arkouda.pdarray property)": [[28, "arkouda.pdarray.nbytes", false], [28, "id531", false], [28, "id592", false], [28, "id653", false], [28, "id714", false], [28, "id775", false]], "nbytes (arkouda.pdarrayclass.pdarray property)": [[41, "arkouda.pdarrayclass.pdarray.nbytes", false]], "nbytes (arkouda.strings.strings attribute)": [[60, "arkouda.strings.Strings.nbytes", false]], "nbytes() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.nbytes", false]], "nbytes() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.nbytes", false]], "nbytes() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.nbytes", false]], "nbytes() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.nbytes", false]], "nbytes() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.nbytes", false]], "nbytes() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.nbytes", false]], "nbytes() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.nbytes", false]], "nbytes() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.nbytes", false]], "nbytes() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.nbytes", false]], "nbytes() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.nbytes", false]], "nbytes() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.nbytes", false]], "nbytes() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.nbytes", false]], "nbytes() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.nbytes", false]], "nbytes() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.nbytes", false]], "nbytes() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.nbytes", false]], "nbytes() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.nbytes", false]], "nbytes() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.nbytes", false]], "nbytes() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.nbytes", false]], "nbytes() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.nbytes", false]], "nbytes() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.nbytes", false]], "nbytes() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.nbytes", false]], "nbytes() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.nbytes", false]], "nbytes() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.nbytes", false]], "nbytes() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.nbytes", false]], "nbytes() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.nbytes", false]], "nbytes() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.nbytes", false]], "nbytes() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.nbytes", false]], "nbytes() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.nbytes", false]], "ndim (arkouda.array_api._array_object.array property)": [[4, "arkouda.array_api._array_object.Array.ndim", false]], "ndim (arkouda.array_api._typing.array property)": [[16, "arkouda.array_api._typing.Array.ndim", false]], "ndim (arkouda.array_view.arrayview attribute)": [[20, "arkouda.array_view.ArrayView.ndim", false]], "ndim (arkouda.arrayview attribute)": [[28, "arkouda.ArrayView.ndim", false], [94, "arkouda.ArrayView.ndim", false]], "ndim (arkouda.categorical attribute)": [[28, "arkouda.Categorical.ndim", false], [28, "id58", false], [28, "id9", false], [95, "arkouda.Categorical.ndim", false]], "ndim (arkouda.categorical.categorical attribute)": [[21, "arkouda.categorical.Categorical.ndim", false]], "ndim (arkouda.pdarray attribute)": [[28, "arkouda.pdarray.ndim", false], [28, "id527", false], [28, "id588", false], [28, "id649", false], [28, "id710", false], [28, "id771", false], [101, "arkouda.pdarray.ndim", false]], "ndim (arkouda.pdarrayclass.pdarray attribute)": [[41, "arkouda.pdarrayclass.pdarray.ndim", false]], "ndim (arkouda.strings.strings attribute)": [[60, "arkouda.strings.Strings.ndim", false]], "ndim() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.ndim", false]], "ndim() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.ndim", false]], "ndim() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.ndim", false]], "ndim() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.ndim", false]], "ndim() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.ndim", false]], "ndim() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.ndim", false]], "ndim() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.ndim", false]], "ndim() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.ndim", false]], "ndim() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.ndim", false]], "ndim() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.ndim", false]], "ndim() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.ndim", false]], "ndim() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.ndim", false]], "ndim() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.ndim", false]], "ndim() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.ndim", false]], "ndim() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.ndim", false]], "ndim() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.ndim", false]], "ndim() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.ndim", false]], "ndim() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.ndim", false]], "ndim() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.ndim", false]], "ndim() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.ndim", false]], "ndim() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.ndim", false]], "ndim() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.ndim", false]], "ndim() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.ndim", false]], "ndim() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.ndim", false]], "ndim() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.ndim", false]], "ndim() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.ndim", false]], "ndim() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.ndim", false]], "ndim() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.ndim", false]], "negative() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.negative", false]], "newaxis (in module arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.newaxis", false]], "newbyteorder() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.newbyteorder", false]], "newbyteorder() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.newbyteorder", false]], "ngroups (arkouda.groupby attribute)": [[28, "arkouda.GroupBy.ngroups", false], [28, "id228", false], [28, "id272", false], [28, "id316", false], [28, "id360", false], [28, "id404", false], [98, "arkouda.GroupBy.ngroups", false]], "ngroups (arkouda.groupbyclass.groupby attribute)": [[26, "arkouda.groupbyclass.GroupBy.ngroups", false]], "ninf (in module arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.NINF", false]], "nkeys (arkouda.groupby attribute)": [[28, "arkouda.GroupBy.nkeys", false], [28, "id224", false], [28, "id268", false], [28, "id312", false], [28, "id356", false], [28, "id400", false], [98, "arkouda.GroupBy.nkeys", false]], "nkeys (arkouda.groupbyclass.groupby attribute)": [[26, "arkouda.groupbyclass.GroupBy.nkeys", false]], "nlevels (arkouda.categorical attribute)": [[28, "arkouda.Categorical.nlevels", false], [28, "id57", false], [28, "id8", false], [95, "arkouda.Categorical.nlevels", false]], "nlevels (arkouda.categorical.categorical attribute)": [[21, "arkouda.categorical.Categorical.nlevels", false]], "nnlf() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.nnlf", false]], "non_empty (arkouda.segarray property)": [[28, "arkouda.SegArray.non_empty", false]], "non_empty (arkouda.segarray.segarray property)": [[57, "arkouda.segarray.SegArray.non_empty", false]], "nonuniqueerror": [[3, "arkouda.alignment.NonUniqueError", false], [28, "arkouda.NonUniqueError", false]], "nonzero() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.nonzero", false]], "nonzero() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.nonzero", false]], "nonzero() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.nonzero", false]], "nonzero() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.nonzero", false]], "nonzero() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.nonzero", false]], "nonzero() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.nonzero", false]], "nonzero() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.nonzero", false]], "nonzero() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.nonzero", false]], "nonzero() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.nonzero", false]], "nonzero() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.nonzero", false]], "nonzero() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.nonzero", false]], "nonzero() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.nonzero", false]], "nonzero() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.nonzero", false]], "nonzero() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.nonzero", false]], "nonzero() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.nonzero", false]], "nonzero() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.nonzero", false]], "nonzero() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.nonzero", false]], "nonzero() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.nonzero", false]], "nonzero() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.nonzero", false]], "nonzero() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.nonzero", false]], "nonzero() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.nonzero", false]], "nonzero() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.nonzero", false]], "nonzero() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.nonzero", false]], "nonzero() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.nonzero", false]], "nonzero() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.nonzero", false]], "nonzero() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.nonzero", false]], "nonzero() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.nonzero", false]], "nonzero() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.nonzero", false]], "nonzero() (in module arkouda.array_api._searching_functions)": [[12, "arkouda.array_api._searching_functions.nonzero", false]], "normalize() (arkouda.client_dtypes.ipv4 method)": [[23, "arkouda.client_dtypes.IPv4.normalize", false]], "normalize() (arkouda.ipv4 method)": [[28, "arkouda.IPv4.normalize", false]], "not_equal() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.not_equal", false]], "notebookhistoryretriever (class in arkouda.history)": [[27, "arkouda.history.NotebookHistoryRetriever", false]], "notna() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.notna", false], [28, "id136", false]], "notna() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.notna", false]], "notna() (arkouda.series method)": [[28, "arkouda.Series.notna", false]], "notna() (arkouda.series.series method)": [[58, "arkouda.series.Series.notna", false]], "notnull() (arkouda.series method)": [[28, "arkouda.Series.notnull", false]], "notnull() (arkouda.series.series method)": [[58, "arkouda.series.Series.notnull", false]], "numargs() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.numargs", false]], "numerator() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.numerator", false]], "numerator() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.numerator", false]], "numerator() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.numerator", false]], "numerator() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.numerator", false]], "numerator() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.numerator", false]], "numerator() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.numerator", false]], "numerator() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.numerator", false]], "numerator() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.numerator", false]], "numerator() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.numerator", false]], "numerator() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.numerator", false]], "numerator() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.numerator", false]], "numerator() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.numerator", false]], "numerator() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.numerator", false]], "numerator() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.numerator", false]], "numerator() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.numerator", false]], "numerator() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.numerator", false]], "numerator() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.numerator", false]], "numerator() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.numerator", false]], "numeric_scalars (in module arkouda)": [[28, "arkouda.numeric_scalars", false]], "numeric_scalars (in module arkouda.dtypes)": [[25, "arkouda.dtypes.numeric_scalars", false]], "numpy_scalars (in module arkouda)": [[28, "arkouda.numpy_scalars", false]], "numpy_scalars (in module arkouda.dtypes)": [[25, "arkouda.dtypes.numpy_scalars", false]], "nunique() (arkouda.groupby method)": [[28, "arkouda.GroupBy.nunique", false], [28, "id255", false], [28, "id299", false], [28, "id343", false], [28, "id387", false], [28, "id431", false], [98, "arkouda.GroupBy.nunique", false]], "nunique() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.nunique", false]], "nunique() (arkouda.segarray method)": [[28, "arkouda.SegArray.nunique", false]], "nunique() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.nunique", false]], "nzero (in module arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.NZERO", false]], "objtype (arkouda.array_view.arrayview attribute)": [[20, "arkouda.array_view.ArrayView.objType", false]], "objtype (arkouda.arrayview attribute)": [[28, "arkouda.ArrayView.objType", false]], "objtype (arkouda.categorical attribute)": [[28, "arkouda.Categorical.objType", false], [28, "id16", false], [28, "id65", false]], "objtype (arkouda.categorical.categorical attribute)": [[21, "arkouda.categorical.Categorical.objType", false]], "objtype (arkouda.dataframe attribute)": [[28, "arkouda.DataFrame.objType", false], [28, "id108", false]], "objtype (arkouda.dataframe.dataframe attribute)": [[24, "arkouda.dataframe.DataFrame.objType", false]], "objtype (arkouda.groupby attribute)": [[28, "arkouda.GroupBy.objType", false], [28, "id233", false], [28, "id277", false], [28, "id321", false], [28, "id365", false], [28, "id409", false]], "objtype (arkouda.groupbyclass.groupby attribute)": [[26, "arkouda.groupbyclass.GroupBy.objType", false]], "objtype (arkouda.index attribute)": [[28, "arkouda.Index.objType", false]], "objtype (arkouda.index.index attribute)": [[29, "arkouda.index.Index.objType", false]], "objtype (arkouda.index.multiindex attribute)": [[29, "arkouda.index.MultiIndex.objType", false]], "objtype (arkouda.multiindex attribute)": [[28, "arkouda.MultiIndex.objType", false]], "objtype (arkouda.pdarray attribute)": [[28, "arkouda.pdarray.objType", false], [28, "id534", false], [28, "id595", false], [28, "id656", false], [28, "id717", false], [28, "id778", false]], "objtype (arkouda.pdarrayclass.pdarray attribute)": [[41, "arkouda.pdarrayclass.pdarray.objType", false]], "objtype (arkouda.segarray attribute)": [[28, "arkouda.SegArray.objType", false]], "objtype (arkouda.segarray.segarray attribute)": [[57, "arkouda.segarray.SegArray.objType", false]], "objtype (arkouda.series attribute)": [[28, "arkouda.Series.objType", false]], "objtype (arkouda.series.series attribute)": [[58, "arkouda.series.Series.objType", false]], "objtype (arkouda.strings.strings attribute)": [[60, "arkouda.strings.Strings.objType", false]], "ones() (in module arkouda)": [[28, "arkouda.ones", false], [28, "id518", false], [28, "id519", false], [28, "id520", false], [96, "arkouda.ones", false]], "ones() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.ones", false]], "ones() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.ones", false]], "ones_like() (in module arkouda)": [[28, "arkouda.ones_like", false], [96, "arkouda.ones_like", false]], "ones_like() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.ones_like", false]], "ones_like() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.ones_like", false]], "opeq() (arkouda.bitvector method)": [[28, "arkouda.BitVector.opeq", false]], "opeq() (arkouda.client_dtypes.bitvector method)": [[23, "arkouda.client_dtypes.BitVector.opeq", false]], "opeq() (arkouda.client_dtypes.fields method)": [[23, "arkouda.client_dtypes.Fields.opeq", false]], "opeq() (arkouda.client_dtypes.ipv4 method)": [[23, "arkouda.client_dtypes.IPv4.opeq", false]], "opeq() (arkouda.fields method)": [[28, "arkouda.Fields.opeq", false]], "opeq() (arkouda.ipv4 method)": [[28, "arkouda.IPv4.opeq", false]], "opeq() (arkouda.pdarray method)": [[28, "arkouda.pdarray.opeq", false], [28, "id558", false], [28, "id619", false], [28, "id680", false], [28, "id741", false], [28, "id802", false]], "opeq() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.opeq", false]], "opeqops (arkouda.pdarray attribute)": [[28, "arkouda.pdarray.OpEqOps", false], [28, "id533", false], [28, "id594", false], [28, "id655", false], [28, "id716", false], [28, "id777", false]], "opeqops (arkouda.pdarrayclass.pdarray attribute)": [[41, "arkouda.pdarrayclass.pdarray.OpEqOps", false]], "or() (arkouda.groupby method)": [[28, "arkouda.GroupBy.OR", false], [28, "id235", false], [28, "id279", false], [28, "id323", false], [28, "id367", false], [28, "id411", false], [98, "arkouda.GroupBy.OR", false]], "or() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.OR", false]], "or() (arkouda.segarray method)": [[28, "arkouda.SegArray.OR", false]], "or() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.OR", false]], "order (arkouda.array_view.arrayview attribute)": [[20, "arkouda.array_view.ArrayView.order", false]], "order (arkouda.arrayview attribute)": [[28, "arkouda.ArrayView.order", false], [94, "arkouda.ArrayView.order", false]], "parity() (arkouda.pdarray method)": [[28, "arkouda.pdarray.parity", false], [28, "id559", false], [28, "id620", false], [28, "id681", false], [28, "id742", false], [28, "id803", false]], "parity() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.parity", false]], "parity() (in module arkouda)": [[28, "arkouda.parity", false]], "parity() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.parity", false]], "parse_hdf_categoricals() (arkouda.categorical static method)": [[28, "arkouda.Categorical.parse_hdf_categoricals", false], [28, "id32", false], [28, "id81", false]], "parse_hdf_categoricals() (arkouda.categorical.categorical static method)": [[21, "arkouda.categorical.Categorical.parse_hdf_categoricals", false]], "pdarray (class in arkouda)": [[28, "arkouda.pdarray", false], [28, "id523", false], [28, "id584", false], [28, "id645", false], [28, "id706", false], [28, "id767", false], [101, "arkouda.pdarray", false]], "pdarray (class in arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.pdarray", false]], "pdconcat() (arkouda.series static method)": [[28, "arkouda.Series.pdconcat", false]], "pdconcat() (arkouda.series.series static method)": [[58, "arkouda.series.Series.pdconcat", false]], "pdconcat() (in module arkouda.series)": [[104, "arkouda.Series.pdconcat", false]], "pdf() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.pdf", false], [54, "id102", false], [54, "id121", false], [54, "id140", false], [54, "id159", false], [54, "id179", false], [54, "id199", false], [54, "id219", false], [54, "id22", false], [54, "id239", false], [54, "id259", false], [54, "id279", false], [54, "id299", false], [54, "id3", false], [54, "id319", false], [54, "id338", false], [54, "id357", false], [54, "id376", false], [54, "id395", false], [54, "id413", false], [54, "id415", false], [54, "id42", false], [54, "id435", false], [54, "id454", false], [54, "id474", false], [54, "id494", false], [54, "id513", false], [54, "id533", false], [54, "id553", false], [54, "id572", false], [54, "id592", false], [54, "id611", false], [54, "id62", false], [54, "id630", false], [54, "id82", false]], "peel() (arkouda.strings method)": [[107, "arkouda.Strings.peel", false]], "peel() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.peel", false]], "permutation (arkouda.categorical attribute)": [[28, "arkouda.Categorical.permutation", false], [28, "id0", false], [28, "id17", false], [28, "id5", false], [28, "id54", false], [28, "id66", false], [95, "arkouda.Categorical.permutation", false]], "permutation (arkouda.categorical.categorical attribute)": [[21, "arkouda.categorical.Categorical.permutation", false], [21, "id0", false]], "permutation (arkouda.groupby attribute)": [[28, "arkouda.GroupBy.permutation", false], [28, "id226", false], [28, "id270", false], [28, "id314", false], [28, "id358", false], [28, "id402", false], [98, "arkouda.GroupBy.permutation", false]], "permutation (arkouda.groupbyclass.groupby attribute)": [[26, "arkouda.groupbyclass.GroupBy.permutation", false]], "permutation() (arkouda.generator method)": [[28, "arkouda.Generator.permutation", false]], "permutation() (arkouda.random._generator.generator method)": [[45, "arkouda.random._generator.Generator.permutation", false]], "permutation() (arkouda.random.generator method)": [[47, "arkouda.random.Generator.permutation", false]], "permute_dims() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.permute_dims", false]], "pi (in module arkouda.array_api._constants)": [[5, "arkouda.array_api._constants.pi", false]], "pi (in module arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.pi", false]], "pinf (in module arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.PINF", false]], "plot_dist() (in module arkouda)": [[28, "arkouda.plot_dist", false]], "plot_dist() (in module arkouda.plotting)": [[44, "arkouda.plotting.plot_dist", false]], "popcount() (arkouda.pdarray method)": [[28, "arkouda.pdarray.popcount", false], [28, "id560", false], [28, "id621", false], [28, "id682", false], [28, "id743", false], [28, "id804", false]], "popcount() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.popcount", false]], "popcount() (in module arkouda)": [[28, "arkouda.popcount", false]], "popcount() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.popcount", false]], "positive() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.positive", false]], "pow() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.pow", false]], "power() (in module arkouda)": [[28, "arkouda.power", false]], "power() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.power", false]], "power_divergence() (in module arkouda)": [[28, "arkouda.power_divergence", false]], "power_divergence() (in module arkouda.scipy)": [[51, "arkouda.scipy.power_divergence", false]], "power_divergence() (in module arkouda.scipy._stats_py)": [[49, "arkouda.scipy._stats_py.power_divergence", false]], "power_divergenceresult (class in arkouda)": [[28, "arkouda.Power_divergenceResult", false]], "power_divergenceresult (class in arkouda.scipy)": [[51, "arkouda.scipy.Power_divergenceResult", false]], "power_divergenceresult (class in arkouda.scipy._stats_py)": [[49, "arkouda.scipy._stats_py.Power_divergenceResult", false]], "ppf() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.ppf", false], [54, "id108", false], [54, "id127", false], [54, "id146", false], [54, "id165", false], [54, "id185", false], [54, "id205", false], [54, "id225", false], [54, "id245", false], [54, "id265", false], [54, "id28", false], [54, "id285", false], [54, "id305", false], [54, "id325", false], [54, "id344", false], [54, "id363", false], [54, "id382", false], [54, "id401", false], [54, "id421", false], [54, "id433", false], [54, "id441", false], [54, "id460", false], [54, "id48", false], [54, "id480", false], [54, "id500", false], [54, "id519", false], [54, "id539", false], [54, "id559", false], [54, "id578", false], [54, "id598", false], [54, "id617", false], [54, "id636", false], [54, "id68", false], [54, "id88", false], [54, "id9", false]], "prepend_single() (arkouda.segarray method)": [[28, "arkouda.SegArray.prepend_single", false]], "prepend_single() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.prepend_single", false]], "prepend_single() (in module arkouda.segarray)": [[103, "arkouda.SegArray.prepend_single", false]], "pretty_print_info() (arkouda.categorical method)": [[28, "arkouda.Categorical.pretty_print_info", false], [28, "id33", false], [28, "id82", false]], "pretty_print_info() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.pretty_print_info", false]], "pretty_print_info() (arkouda.pdarray method)": [[28, "arkouda.pdarray.pretty_print_info", false], [28, "id561", false], [28, "id622", false], [28, "id683", false], [28, "id744", false], [28, "id805", false]], "pretty_print_info() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.pretty_print_info", false]], "pretty_print_info() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.pretty_print_info", false]], "pretty_print_information() (in module arkouda)": [[28, "arkouda.pretty_print_information", false]], "pretty_print_information() (in module arkouda.infoclass)": [[30, "arkouda.infoclass.pretty_print_information", false]], "print_server_commands() (in module arkouda.client)": [[22, "arkouda.client.print_server_commands", false]], "prod() (arkouda.groupby method)": [[28, "arkouda.GroupBy.prod", false], [28, "id256", false], [28, "id300", false], [28, "id344", false], [28, "id388", false], [28, "id432", false], [98, "arkouda.GroupBy.prod", false]], "prod() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.prod", false]], "prod() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.prod", false]], "prod() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.prod", false]], "prod() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.prod", false]], "prod() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.prod", false]], "prod() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.prod", false]], "prod() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.prod", false]], "prod() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.prod", false]], "prod() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.prod", false]], "prod() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.prod", false]], "prod() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.prod", false]], "prod() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.prod", false]], "prod() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.prod", false]], "prod() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.prod", false]], "prod() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.prod", false]], "prod() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.prod", false]], "prod() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.prod", false]], "prod() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.prod", false]], "prod() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.prod", false]], "prod() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.prod", false]], "prod() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.prod", false]], "prod() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.prod", false]], "prod() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.prod", false]], "prod() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.prod", false]], "prod() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.prod", false]], "prod() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.prod", false]], "prod() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.prod", false]], "prod() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.prod", false]], "prod() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.prod", false]], "prod() (arkouda.pdarray method)": [[28, "arkouda.pdarray.prod", false], [28, "id562", false], [28, "id623", false], [28, "id684", false], [28, "id745", false], [28, "id806", false], [99, "arkouda.pdarray.prod", false]], "prod() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.prod", false]], "prod() (arkouda.segarray method)": [[28, "arkouda.SegArray.prod", false]], "prod() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.prod", false]], "prod() (in module arkouda)": [[28, "arkouda.prod", false], [93, "arkouda.prod", false]], "prod() (in module arkouda.array_api._statistical_functions)": [[15, "arkouda.array_api._statistical_functions.prod", false]], "prod() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.prod", false]], "prod_sum_dtype() (in module arkouda.array_api._statistical_functions)": [[15, "arkouda.array_api._statistical_functions.prod_sum_dtype", false]], "properties (class in arkouda)": [[28, "arkouda.Properties", false]], "properties (class in arkouda.accessor)": [[2, "arkouda.accessor.Properties", false]], "ptp() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.ptp", false]], "ptp() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.ptp", false]], "ptp() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.ptp", false]], "ptp() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.ptp", false]], "ptp() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.ptp", false]], "ptp() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.ptp", false]], "ptp() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.ptp", false]], "ptp() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.ptp", false]], "ptp() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.ptp", false]], "ptp() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.ptp", false]], "ptp() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.ptp", false]], "ptp() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.ptp", false]], "ptp() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.ptp", false]], "ptp() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.ptp", false]], "ptp() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.ptp", false]], "ptp() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.ptp", false]], "ptp() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.ptp", false]], "ptp() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.ptp", false]], "ptp() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.ptp", false]], "ptp() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.ptp", false]], "ptp() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.ptp", false]], "ptp() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.ptp", false]], "ptp() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.ptp", false]], "ptp() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.ptp", false]], "ptp() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.ptp", false]], "ptp() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.ptp", false]], "ptp() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.ptp", false]], "ptp() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.ptp", false]], "purge_cached_regex_patterns() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.purge_cached_regex_patterns", false]], "put() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.put", false]], "put() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.put", false]], "put() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.put", false]], "put() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.put", false]], "put() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.put", false]], "put() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.put", false]], "put() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.put", false]], "put() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.put", false]], "put() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.put", false]], "put() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.put", false]], "put() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.put", false]], "put() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.put", false]], "put() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.put", false]], "put() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.put", false]], "put() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.put", false]], "put() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.put", false]], "put() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.put", false]], "put() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.put", false]], "put() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.put", false]], "put() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.put", false]], "put() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.put", false]], "put() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.put", false]], "put() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.put", false]], "put() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.put", false]], "put() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.put", false]], "put() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.put", false]], "put() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.put", false]], "put() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.put", false]], "pvalue (arkouda.power_divergenceresult attribute)": [[28, "arkouda.Power_divergenceResult.pvalue", false]], "pvalue (arkouda.scipy._stats_py.power_divergenceresult attribute)": [[49, "arkouda.scipy._stats_py.Power_divergenceResult.pvalue", false]], "pvalue (arkouda.scipy.power_divergenceresult attribute)": [[51, "arkouda.scipy.Power_divergenceResult.pvalue", false]], "pycapsule (in module arkouda.array_api._typing)": [[16, "arkouda.array_api._typing.PyCapsule", false]], "pzero (in module arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.PZERO", false]], "rad2deg() (in module arkouda)": [[28, "arkouda.rad2deg", false]], "rad2deg() (in module arkouda.numeric)": [[37, "arkouda.numeric.rad2deg", false]], "randint() (in module arkouda)": [[28, "arkouda.randint", false], [28, "id828", false], [96, "arkouda.randint", false]], "randint() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.randint", false]], "randint() (in module arkouda.random)": [[47, "arkouda.random.randint", false]], "randint() (in module arkouda.random._legacy)": [[46, "arkouda.random._legacy.randint", false]], "random() (arkouda.generator method)": [[28, "arkouda.Generator.random", false]], "random() (arkouda.random._generator.generator method)": [[45, "arkouda.random._generator.Generator.random", false]], "random() (arkouda.random.generator method)": [[47, "arkouda.random.Generator.random", false]], "random() (in module arkouda.random.generator)": [[102, "arkouda.random.Generator.random", false]], "random_state() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.random_state", false]], "random_strings_lognormal() (in module arkouda)": [[28, "arkouda.random_strings_lognormal", false]], "random_strings_lognormal() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.random_strings_lognormal", false]], "random_strings_uniform() (in module arkouda)": [[28, "arkouda.random_strings_uniform", false]], "random_strings_uniform() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.random_strings_uniform", false]], "ravel() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.ravel", false]], "ravel() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.ravel", false]], "ravel() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.ravel", false]], "ravel() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.ravel", false]], "ravel() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.ravel", false]], "ravel() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.ravel", false]], "ravel() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.ravel", false]], "ravel() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.ravel", false]], "ravel() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.ravel", false]], "ravel() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.ravel", false]], "ravel() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.ravel", false]], "ravel() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.ravel", false]], "ravel() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.ravel", false]], "ravel() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.ravel", false]], "ravel() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.ravel", false]], "ravel() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.ravel", false]], "ravel() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.ravel", false]], "ravel() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.ravel", false]], "ravel() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.ravel", false]], "ravel() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.ravel", false]], "ravel() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.ravel", false]], "ravel() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.ravel", false]], "ravel() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.ravel", false]], "ravel() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.ravel", false]], "ravel() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.ravel", false]], "ravel() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.ravel", false]], "ravel() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.ravel", false]], "ravel() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.ravel", false]], "read() (in module arkouda)": [[28, "arkouda.read", false], [90, "arkouda.read", false]], "read() (in module arkouda.io)": [[31, "arkouda.io.read", false]], "read_csv() (arkouda.dataframe class method)": [[28, "arkouda.DataFrame.read_csv", false], [28, "id137", false]], "read_csv() (arkouda.dataframe.dataframe class method)": [[24, "arkouda.dataframe.DataFrame.read_csv", false]], "read_csv() (in module arkouda)": [[28, "arkouda.read_csv", false]], "read_csv() (in module arkouda.io)": [[31, "arkouda.io.read_csv", false]], "read_hdf() (arkouda.segarray class method)": [[28, "arkouda.SegArray.read_hdf", false]], "read_hdf() (arkouda.segarray.segarray class method)": [[57, "arkouda.segarray.SegArray.read_hdf", false]], "read_hdf() (in module arkouda)": [[28, "arkouda.read_hdf", false]], "read_hdf() (in module arkouda.io)": [[31, "arkouda.io.read_hdf", false]], "read_parquet() (in module arkouda)": [[28, "arkouda.read_parquet", false]], "read_parquet() (in module arkouda.io)": [[31, "arkouda.io.read_parquet", false]], "read_tagged_data() (in module arkouda)": [[28, "arkouda.read_tagged_data", false]], "read_tagged_data() (in module arkouda.io)": [[31, "arkouda.io.read_tagged_data", false]], "real() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.real", false]], "real() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.real", false]], "real() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.real", false]], "real() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.real", false]], "real() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.real", false]], "real() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.real", false]], "real() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.real", false]], "real() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.real", false]], "real() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.real", false]], "real() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.real", false]], "real() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.real", false]], "real() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.real", false]], "real() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.real", false]], "real() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.real", false]], "real() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.real", false]], "real() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.real", false]], "real() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.real", false]], "real() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.real", false]], "real() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.real", false]], "real() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.real", false]], "real() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.real", false]], "real() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.real", false]], "real() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.real", false]], "real() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.real", false]], "real() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.real", false]], "real() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.real", false]], "real() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.real", false]], "real() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.real", false]], "real() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.real", false]], "receive() (in module arkouda)": [[28, "arkouda.receive", false]], "receive() (in module arkouda.io)": [[31, "arkouda.io.receive", false]], "receive_dataframe() (in module arkouda)": [[28, "arkouda.receive_dataframe", false]], "receive_dataframe() (in module arkouda.io)": [[31, "arkouda.io.receive_dataframe", false]], "reductions (arkouda.groupby attribute)": [[28, "arkouda.GroupBy.Reductions", false], [28, "id232", false], [28, "id276", false], [28, "id320", false], [28, "id364", false], [28, "id408", false]], "reductions (arkouda.groupbyclass.groupby attribute)": [[26, "arkouda.groupbyclass.GroupBy.Reductions", false]], "register() (arkouda.bitvector method)": [[28, "arkouda.BitVector.register", false]], "register() (arkouda.categorical method)": [[28, "arkouda.Categorical.register", false], [28, "id34", false], [28, "id83", false]], "register() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.register", false]], "register() (arkouda.client_dtypes.bitvector method)": [[23, "arkouda.client_dtypes.BitVector.register", false]], "register() (arkouda.client_dtypes.ipv4 method)": [[23, "arkouda.client_dtypes.IPv4.register", false]], "register() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.register", false], [28, "id138", false]], "register() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.register", false]], "register() (arkouda.datetime method)": [[28, "arkouda.Datetime.register", false], [28, "id185", false], [28, "id218", false]], "register() (arkouda.groupby method)": [[28, "arkouda.GroupBy.register", false], [28, "id257", false], [28, "id301", false], [28, "id345", false], [28, "id389", false], [28, "id433", false], [98, "arkouda.GroupBy.register", false]], "register() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.register", false]], "register() (arkouda.index method)": [[28, "arkouda.Index.register", false]], "register() (arkouda.index.index method)": [[29, "arkouda.index.Index.register", false]], "register() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.register", false]], "register() (arkouda.ipv4 method)": [[28, "arkouda.IPv4.register", false]], "register() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.register", false]], "register() (arkouda.pdarray method)": [[28, "arkouda.pdarray.register", false], [28, "id563", false], [28, "id624", false], [28, "id685", false], [28, "id746", false], [28, "id807", false]], "register() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.register", false]], "register() (arkouda.segarray method)": [[28, "arkouda.SegArray.register", false]], "register() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.register", false]], "register() (arkouda.series method)": [[28, "arkouda.Series.register", false]], "register() (arkouda.series.series method)": [[58, "arkouda.series.Series.register", false]], "register() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.register", false]], "register() (arkouda.timeclass.datetime method)": [[61, "arkouda.timeclass.Datetime.register", false]], "register() (arkouda.timeclass.timedelta method)": [[61, "arkouda.timeclass.Timedelta.register", false]], "register() (arkouda.timedelta method)": [[28, "arkouda.Timedelta.register", false], [28, "id465", false]], "register() (in module arkouda.util)": [[62, "arkouda.util.register", false]], "register_all() (in module arkouda)": [[28, "arkouda.register_all", false]], "register_all() (in module arkouda.util)": [[62, "arkouda.util.register_all", false]], "registerablepieces (arkouda.categorical attribute)": [[28, "arkouda.Categorical.RegisterablePieces", false], [28, "id13", false], [28, "id62", false]], "registerablepieces (arkouda.categorical.categorical attribute)": [[21, "arkouda.categorical.Categorical.RegisterablePieces", false]], "registeredsymbols (in module arkouda)": [[28, "arkouda.RegisteredSymbols", false]], "registeredsymbols (in module arkouda.infoclass)": [[30, "arkouda.infoclass.RegisteredSymbols", false]], "registrationerror": [[28, "arkouda.RegistrationError", false], [28, "id445", false], [28, "id446", false], [28, "id447", false], [28, "id448", false], [41, "arkouda.pdarrayclass.RegistrationError", false]], "remainder() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.remainder", false]], "remove_repeats() (arkouda.segarray method)": [[28, "arkouda.SegArray.remove_repeats", false]], "remove_repeats() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.remove_repeats", false]], "remove_repeats() (in module arkouda.segarray)": [[103, "arkouda.SegArray.remove_repeats", false]], "rename() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.rename", false], [28, "id139", false]], "rename() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.rename", false]], "rename() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.rename", false]], "repeat() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.repeat", false]], "repeat() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.repeat", false]], "repeat() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.repeat", false]], "repeat() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.repeat", false]], "repeat() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.repeat", false]], "repeat() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.repeat", false]], "repeat() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.repeat", false]], "repeat() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.repeat", false]], "repeat() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.repeat", false]], "repeat() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.repeat", false]], "repeat() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.repeat", false]], "repeat() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.repeat", false]], "repeat() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.repeat", false]], "repeat() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.repeat", false]], "repeat() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.repeat", false]], "repeat() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.repeat", false]], "repeat() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.repeat", false]], "repeat() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.repeat", false]], "repeat() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.repeat", false]], "repeat() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.repeat", false]], "repeat() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.repeat", false]], "repeat() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.repeat", false]], "repeat() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.repeat", false]], "repeat() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.repeat", false]], "repeat() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.repeat", false]], "repeat() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.repeat", false]], "repeat() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.repeat", false]], "repeat() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.repeat", false]], "repeat() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.repeat", false]], "report_mem() (in module arkouda.util)": [[62, "arkouda.util.report_mem", false]], "requiredpieces (arkouda.categorical attribute)": [[28, "arkouda.Categorical.RequiredPieces", false], [28, "id14", false], [28, "id63", false]], "requiredpieces (arkouda.categorical.categorical attribute)": [[21, "arkouda.categorical.Categorical.RequiredPieces", false]], "reset_categories() (arkouda.categorical method)": [[28, "arkouda.Categorical.reset_categories", false], [28, "id35", false], [28, "id84", false]], "reset_categories() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.reset_categories", false]], "reset_index() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.reset_index", false], [28, "id140", false]], "reset_index() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.reset_index", false]], "reset_index() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.reset_index", false]], "reshape() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.reshape", false]], "reshape() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.reshape", false]], "reshape() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.reshape", false]], "reshape() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.reshape", false]], "reshape() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.reshape", false]], "reshape() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.reshape", false]], "reshape() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.reshape", false]], "reshape() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.reshape", false]], "reshape() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.reshape", false]], "reshape() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.reshape", false]], "reshape() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.reshape", false]], "reshape() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.reshape", false]], "reshape() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.reshape", false]], "reshape() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.reshape", false]], "reshape() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.reshape", false]], "reshape() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.reshape", false]], "reshape() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.reshape", false]], "reshape() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.reshape", false]], "reshape() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.reshape", false]], "reshape() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.reshape", false]], "reshape() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.reshape", false]], "reshape() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.reshape", false]], "reshape() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.reshape", false]], "reshape() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.reshape", false]], "reshape() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.reshape", false]], "reshape() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.reshape", false]], "reshape() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.reshape", false]], "reshape() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.reshape", false]], "reshape() (arkouda.pdarray method)": [[28, "arkouda.pdarray.reshape", false], [28, "id564", false], [28, "id625", false], [28, "id686", false], [28, "id747", false], [28, "id808", false]], "reshape() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.reshape", false]], "reshape() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.reshape", false]], "resize() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.resize", false]], "resize() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.resize", false]], "resize() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.resize", false]], "resize() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.resize", false]], "resize() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.resize", false]], "resize() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.resize", false]], "resize() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.resize", false]], "resize() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.resize", false]], "resize() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.resize", false]], "resize() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.resize", false]], "resize() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.resize", false]], "resize() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.resize", false]], "resize() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.resize", false]], "resize() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.resize", false]], "resize() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.resize", false]], "resize() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.resize", false]], "resize() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.resize", false]], "resize() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.resize", false]], "resize() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.resize", false]], "resize() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.resize", false]], "resize() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.resize", false]], "resize() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.resize", false]], "resize() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.resize", false]], "resize() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.resize", false]], "resize() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.resize", false]], "resize() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.resize", false]], "resize() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.resize", false]], "resize() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.resize", false]], "resolve_scalar_dtype() (in module arkouda)": [[28, "arkouda.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.dtypes)": [[25, "arkouda.dtypes.resolve_scalar_dtype", false]], "restore() (in module arkouda)": [[28, "arkouda.restore", false]], "restore() (in module arkouda.io)": [[31, "arkouda.io.restore", false]], "result_type() (in module arkouda.array_api._data_type_functions)": [[7, "arkouda.array_api._data_type_functions.result_type", false]], "retrieve() (arkouda.history.historyretriever method)": [[27, "arkouda.history.HistoryRetriever.retrieve", false]], "retrieve() (arkouda.history.notebookhistoryretriever method)": [[27, "arkouda.history.NotebookHistoryRetriever.retrieve", false]], "retrieve() (arkouda.history.shellhistoryretriever method)": [[27, "arkouda.history.ShellHistoryRetriever.retrieve", false]], "return_validity (arkouda.errormode attribute)": [[28, "arkouda.ErrorMode.return_validity", false]], "return_validity (arkouda.numeric.errormode attribute)": [[37, "arkouda.numeric.ErrorMode.return_validity", false]], "right_align() (in module arkouda)": [[28, "arkouda.right_align", false]], "right_align() (in module arkouda.alignment)": [[3, "arkouda.alignment.right_align", false]], "roll() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.roll", false]], "rotl() (arkouda.pdarray method)": [[28, "arkouda.pdarray.rotl", false], [28, "id565", false], [28, "id626", false], [28, "id687", false], [28, "id748", false], [28, "id809", false]], "rotl() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.rotl", false]], "rotl() (in module arkouda)": [[28, "arkouda.rotl", false]], "rotl() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.rotl", false]], "rotr() (arkouda.pdarray method)": [[28, "arkouda.pdarray.rotr", false], [28, "id566", false], [28, "id627", false], [28, "id688", false], [28, "id749", false], [28, "id810", false]], "rotr() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.rotr", false]], "rotr() (in module arkouda)": [[28, "arkouda.rotr", false]], "rotr() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.rotr", false]], "round() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.round", false]], "round() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.round", false]], "round() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.round", false]], "round() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.round", false]], "round() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.round", false]], "round() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.round", false]], "round() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.round", false]], "round() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.round", false]], "round() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.round", false]], "round() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.round", false]], "round() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.round", false]], "round() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.round", false]], "round() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.round", false]], "round() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.round", false]], "round() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.round", false]], "round() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.round", false]], "round() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.round", false]], "round() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.round", false]], "round() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.round", false]], "round() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.round", false]], "round() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.round", false]], "round() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.round", false]], "round() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.round", false]], "round() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.round", false]], "round() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.round", false]], "round() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.round", false]], "round() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.round", false]], "round() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.round", false]], "round() (in module arkouda)": [[28, "arkouda.round", false]], "round() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.round", false]], "round() (in module arkouda.numeric)": [[37, "arkouda.numeric.round", false]], "row (class in arkouda)": [[28, "arkouda.Row", false]], "row (class in arkouda.row)": [[48, "arkouda.row.Row", false]], "rpeel() (arkouda.strings method)": [[107, "arkouda.Strings.rpeel", false]], "rpeel() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.rpeel", false]], "ruok() (in module arkouda.client)": [[22, "arkouda.client.ruok", false]], "rvs() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.rvs", false], [54, "id0", false], [54, "id101", false], [54, "id120", false], [54, "id139", false], [54, "id158", false], [54, "id178", false], [54, "id198", false], [54, "id21", false], [54, "id218", false], [54, "id238", false], [54, "id258", false], [54, "id278", false], [54, "id298", false], [54, "id318", false], [54, "id337", false], [54, "id356", false], [54, "id375", false], [54, "id394", false], [54, "id41", false], [54, "id414", false], [54, "id434", false], [54, "id453", false], [54, "id472", false], [54, "id473", false], [54, "id493", false], [54, "id512", false], [54, "id532", false], [54, "id552", false], [54, "id571", false], [54, "id591", false], [54, "id61", false], [54, "id610", false], [54, "id629", false], [54, "id81", false]], "sample() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.sample", false], [28, "id141", false]], "sample() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.sample", false]], "save() (arkouda.categorical method)": [[28, "arkouda.Categorical.save", false], [28, "id36", false], [28, "id85", false]], "save() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.save", false]], "save() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.save", false], [28, "id142", false]], "save() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.save", false]], "save() (arkouda.index method)": [[28, "arkouda.Index.save", false]], "save() (arkouda.index.index method)": [[29, "arkouda.index.Index.save", false]], "save() (arkouda.pdarray method)": [[28, "arkouda.pdarray.save", false], [28, "id567", false], [28, "id628", false], [28, "id689", false], [28, "id750", false], [28, "id811", false]], "save() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.save", false]], "save() (arkouda.segarray method)": [[28, "arkouda.SegArray.save", false]], "save() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.save", false]], "save() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.save", false]], "save_all() (in module arkouda)": [[28, "arkouda.save_all", false]], "save_all() (in module arkouda.io)": [[31, "arkouda.io.save_all", false]], "scalardtypes (in module arkouda)": [[28, "arkouda.ScalarDTypes", false]], "scalardtypes (in module arkouda.dtypes)": [[25, "arkouda.dtypes.ScalarDTypes", false]], "search() (arkouda.strings method)": [[107, "arkouda.Strings.search", false]], "search() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.search", false]], "search_intervals() (in module arkouda)": [[28, "arkouda.search_intervals", false]], "search_intervals() (in module arkouda.alignment)": [[3, "arkouda.alignment.search_intervals", false]], "searchsorted() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.searchsorted", false]], "searchsorted() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.searchsorted", false]], "searchsorted() (in module arkouda.array_api._searching_functions)": [[12, "arkouda.array_api._searching_functions.searchsorted", false]], "second (arkouda.datetime property)": [[28, "arkouda.Datetime.second", false], [28, "id170", false], [28, "id203", false]], "second (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.second", false]], "seconds (arkouda.timeclass.timedelta property)": [[61, "arkouda.timeclass.Timedelta.seconds", false]], "seconds (arkouda.timedelta property)": [[28, "arkouda.Timedelta.seconds", false], [28, "id454", false]], "seg_suffix (in module arkouda)": [[28, "arkouda.SEG_SUFFIX", false]], "seg_suffix (in module arkouda.segarray)": [[57, "arkouda.segarray.SEG_SUFFIX", false]], "segarray (class in arkouda)": [[28, "arkouda.SegArray", false]], "segarray (class in arkouda.segarray)": [[57, "arkouda.segarray.SegArray", false]], "segarray() (in module arkouda)": [[28, "arkouda.segarray", false]], "segarray() (in module arkouda.segarray)": [[57, "arkouda.segarray.segarray", false]], "segments (arkouda.categorical attribute)": [[28, "arkouda.Categorical.segments", false], [28, "id1", false], [28, "id18", false], [28, "id55", false], [28, "id6", false], [28, "id67", false], [95, "arkouda.Categorical.segments", false]], "segments (arkouda.categorical.categorical attribute)": [[21, "arkouda.categorical.Categorical.segments", false], [21, "id1", false]], "segments (arkouda.groupby attribute)": [[28, "arkouda.GroupBy.segments", false], [28, "id229", false], [28, "id273", false], [28, "id317", false], [28, "id361", false], [28, "id405", false], [98, "arkouda.GroupBy.segments", false]], "segments (arkouda.groupbyclass.groupby attribute)": [[26, "arkouda.groupbyclass.GroupBy.segments", false]], "series (class in arkouda)": [[28, "arkouda.Series", false], [104, "arkouda.Series", false]], "series (class in arkouda.series)": [[58, "arkouda.series.Series", false]], "set_categories() (arkouda.categorical method)": [[28, "arkouda.Categorical.set_categories", false], [28, "id37", false], [28, "id86", false]], "set_categories() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.set_categories", false]], "set_dtype() (arkouda.index method)": [[28, "arkouda.Index.set_dtype", false]], "set_dtype() (arkouda.index.index method)": [[29, "arkouda.index.Index.set_dtype", false]], "set_dtype() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.set_dtype", false]], "set_dtype() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.set_dtype", false]], "set_dtype() (in module arkouda.index)": [[91, "arkouda.Index.set_dtype", false]], "set_dtype() (in module arkouda.multiindex)": [[91, "arkouda.MultiIndex.set_dtype", false]], "set_jth() (arkouda.segarray method)": [[28, "arkouda.SegArray.set_jth", false]], "set_jth() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.set_jth", false]], "set_jth() (in module arkouda.segarray)": [[103, "arkouda.SegArray.set_jth", false]], "setdiff() (arkouda.segarray method)": [[28, "arkouda.SegArray.setdiff", false]], "setdiff() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.setdiff", false]], "setdiff() (in module arkouda.segarray)": [[103, "arkouda.SegArray.setdiff", false]], "setdiff1d() (in module arkouda)": [[28, "arkouda.setdiff1d", false], [105, "arkouda.setdiff1d", false]], "setdiff1d() (in module arkouda.pdarraysetops)": [[43, "arkouda.pdarraysetops.setdiff1d", false]], "setfield() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.setfield", false]], "setfield() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.setfield", false]], "setfield() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.setfield", false]], "setfield() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.setfield", false]], "setfield() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.setfield", false]], "setfield() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.setfield", false]], "setfield() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.setfield", false]], "setfield() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.setfield", false]], "setfield() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.setfield", false]], "setfield() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.setfield", false]], "setfield() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.setfield", false]], "setfield() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.setfield", false]], "setfield() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.setfield", false]], "setfield() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.setfield", false]], "setfield() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.setfield", false]], "setfield() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.setfield", false]], "setfield() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.setfield", false]], "setfield() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.setfield", false]], "setfield() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.setfield", false]], "setfield() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.setfield", false]], "setfield() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.setfield", false]], "setfield() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.setfield", false]], "setfield() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.setfield", false]], "setfield() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.setfield", false]], "setfield() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.setfield", false]], "setfield() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.setfield", false]], "setfield() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.setfield", false]], "setfield() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.setfield", false]], "setflags() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.setflags", false]], "setflags() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.setflags", false]], "setflags() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.setflags", false]], "setflags() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.setflags", false]], "setflags() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.setflags", false]], "setflags() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.setflags", false]], "setflags() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.setflags", false]], "setflags() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.setflags", false]], "setflags() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.setflags", false]], "setflags() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.setflags", false]], "setflags() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.setflags", false]], "setflags() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.setflags", false]], "setflags() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.setflags", false]], "setflags() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.setflags", false]], "setflags() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.setflags", false]], "setflags() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.setflags", false]], "setflags() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.setflags", false]], "setflags() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.setflags", false]], "setflags() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.setflags", false]], "setflags() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.setflags", false]], "setflags() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.setflags", false]], "setflags() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.setflags", false]], "setflags() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.setflags", false]], "setflags() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.setflags", false]], "setflags() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.setflags", false]], "setflags() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.setflags", false]], "setflags() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.setflags", false]], "setflags() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.setflags", false]], "setxor() (arkouda.segarray method)": [[28, "arkouda.SegArray.setxor", false]], "setxor() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.setxor", false]], "setxor() (in module arkouda.segarray)": [[103, "arkouda.SegArray.setxor", false]], "setxor1d() (in module arkouda)": [[28, "arkouda.setxor1d", false], [105, "arkouda.setxor1d", false]], "setxor1d() (in module arkouda.pdarraysetops)": [[43, "arkouda.pdarraysetops.setxor1d", false]], "sf() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.sf", false], [54, "id106", false], [54, "id125", false], [54, "id144", false], [54, "id163", false], [54, "id183", false], [54, "id203", false], [54, "id223", false], [54, "id243", false], [54, "id26", false], [54, "id263", false], [54, "id283", false], [54, "id303", false], [54, "id323", false], [54, "id342", false], [54, "id361", false], [54, "id380", false], [54, "id399", false], [54, "id419", false], [54, "id439", false], [54, "id458", false], [54, "id46", false], [54, "id478", false], [54, "id492", false], [54, "id498", false], [54, "id517", false], [54, "id537", false], [54, "id557", false], [54, "id576", false], [54, "id596", false], [54, "id615", false], [54, "id634", false], [54, "id66", false], [54, "id7", false], [54, "id86", false]], "shape (arkouda.array_api._array_object.array property)": [[4, "arkouda.array_api._array_object.Array.shape", false]], "shape (arkouda.array_api._typing.array property)": [[16, "arkouda.array_api._typing.Array.shape", false]], "shape (arkouda.array_view.arrayview attribute)": [[20, "arkouda.array_view.ArrayView.shape", false]], "shape (arkouda.arrayview attribute)": [[28, "arkouda.ArrayView.shape", false], [94, "arkouda.ArrayView.shape", false]], "shape (arkouda.categorical attribute)": [[28, "arkouda.Categorical.shape", false], [28, "id10", false], [28, "id59", false], [95, "arkouda.Categorical.shape", false]], "shape (arkouda.categorical.categorical attribute)": [[21, "arkouda.categorical.Categorical.shape", false]], "shape (arkouda.dataframe property)": [[28, "arkouda.DataFrame.shape", false], [28, "id106", false]], "shape (arkouda.dataframe.dataframe property)": [[24, "arkouda.dataframe.DataFrame.shape", false]], "shape (arkouda.index property)": [[28, "arkouda.Index.shape", false]], "shape (arkouda.index.index property)": [[29, "arkouda.index.Index.shape", false]], "shape (arkouda.pdarray attribute)": [[28, "arkouda.pdarray.shape", false], [28, "id528", false], [28, "id589", false], [28, "id650", false], [28, "id711", false], [28, "id772", false], [101, "arkouda.pdarray.shape", false]], "shape (arkouda.pdarrayclass.pdarray attribute)": [[41, "arkouda.pdarrayclass.pdarray.shape", false]], "shape (arkouda.series property)": [[28, "arkouda.Series.shape", false]], "shape (arkouda.series.series property)": [[58, "arkouda.series.Series.shape", false]], "shape (arkouda.strings.strings attribute)": [[60, "arkouda.strings.Strings.shape", false]], "shape() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.shape", false]], "shape() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.shape", false]], "shape() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.shape", false]], "shape() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.shape", false]], "shape() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.shape", false]], "shape() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.shape", false]], "shape() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.shape", false]], "shape() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.shape", false]], "shape() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.shape", false]], "shape() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.shape", false]], "shape() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.shape", false]], "shape() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.shape", false]], "shape() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.shape", false]], "shape() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.shape", false]], "shape() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.shape", false]], "shape() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.shape", false]], "shape() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.shape", false]], "shape() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.shape", false]], "shape() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.shape", false]], "shape() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.shape", false]], "shape() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.shape", false]], "shape() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.shape", false]], "shape() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.shape", false]], "shape() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.shape", false]], "shape() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.shape", false]], "shape() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.shape", false]], "shape() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.shape", false]], "shape() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.shape", false]], "shapes() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.shapes", false]], "shellhistoryretriever (class in arkouda.history)": [[27, "arkouda.history.ShellHistoryRetriever", false]], "short (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.short", false]], "shuffle() (arkouda.generator method)": [[28, "arkouda.Generator.shuffle", false]], "shuffle() (arkouda.random._generator.generator method)": [[45, "arkouda.random._generator.Generator.shuffle", false]], "shuffle() (arkouda.random.generator method)": [[47, "arkouda.random.Generator.shuffle", false]], "shutdown() (in module arkouda.client)": [[22, "arkouda.client.shutdown", false]], "sign() (in module arkouda)": [[28, "arkouda.sign", false]], "sign() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.sign", false]], "sign() (in module arkouda.numeric)": [[37, "arkouda.numeric.sign", false]], "sin() (in module arkouda)": [[28, "arkouda.sin", false], [93, "arkouda.sin", false]], "sin() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.sin", false]], "sin() (in module arkouda.numeric)": [[37, "arkouda.numeric.sin", false]], "single (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.single", false]], "sinh() (in module arkouda)": [[28, "arkouda.sinh", false]], "sinh() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.sinh", false]], "sinh() (in module arkouda.numeric)": [[37, "arkouda.numeric.sinh", false]], "size (arkouda.array_api._array_object.array property)": [[4, "arkouda.array_api._array_object.Array.size", false]], "size (arkouda.array_api._typing.array property)": [[16, "arkouda.array_api._typing.Array.size", false]], "size (arkouda.array_view.arrayview attribute)": [[20, "arkouda.array_view.ArrayView.size", false]], "size (arkouda.arrayview attribute)": [[28, "arkouda.ArrayView.size", false], [94, "arkouda.ArrayView.size", false]], "size (arkouda.categorical attribute)": [[28, "arkouda.Categorical.size", false], [28, "id56", false], [28, "id7", false], [95, "arkouda.Categorical.size", false]], "size (arkouda.categorical.categorical attribute)": [[21, "arkouda.categorical.Categorical.size", false]], "size (arkouda.dataframe property)": [[28, "arkouda.DataFrame.size", false], [28, "id107", false]], "size (arkouda.dataframe.dataframe property)": [[24, "arkouda.dataframe.DataFrame.size", false]], "size (arkouda.groupby attribute)": [[28, "arkouda.GroupBy.size", false], [28, "id225", false], [28, "id269", false], [28, "id313", false], [28, "id357", false], [28, "id401", false], [98, "arkouda.GroupBy.size", false]], "size (arkouda.groupbyclass.groupby attribute)": [[26, "arkouda.groupbyclass.GroupBy.size", false]], "size (arkouda.pdarray attribute)": [[28, "arkouda.pdarray.size", false], [28, "id526", false], [28, "id587", false], [28, "id648", false], [28, "id709", false], [28, "id770", false], [101, "arkouda.pdarray.size", false]], "size (arkouda.pdarrayclass.pdarray attribute)": [[41, "arkouda.pdarrayclass.pdarray.size", false]], "size (arkouda.strings.strings attribute)": [[60, "arkouda.strings.Strings.size", false]], "size() (arkouda.groupby method)": [[28, "id222", false], [28, "id258", false], [28, "id302", false], [28, "id346", false], [28, "id390", false], [28, "id434", false], [98, "id0", false]], "size() (arkouda.groupbyclass.groupby method)": [[26, "id0", false]], "size() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.size", false]], "size() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.size", false]], "size() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.size", false]], "size() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.size", false]], "size() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.size", false]], "size() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.size", false]], "size() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.size", false]], "size() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.size", false]], "size() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.size", false]], "size() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.size", false]], "size() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.size", false]], "size() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.size", false]], "size() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.size", false]], "size() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.size", false]], "size() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.size", false]], "size() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.size", false]], "size() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.size", false]], "size() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.size", false]], "size() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.size", false]], "size() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.size", false]], "size() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.size", false]], "size() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.size", false]], "size() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.size", false]], "size() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.size", false]], "size() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.size", false]], "size() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.size", false]], "size() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.size", false]], "size() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.size", false]], "skew() (in module arkouda)": [[28, "arkouda.skew", false]], "slice_bits() (arkouda.pdarray method)": [[28, "arkouda.pdarray.slice_bits", false], [28, "id568", false], [28, "id629", false], [28, "id690", false], [28, "id751", false], [28, "id812", false]], "slice_bits() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.slice_bits", false]], "smallest_normal (arkouda.array_api._data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api._data_type_functions.finfo_object.smallest_normal", false]], "snapshot() (in module arkouda)": [[28, "arkouda.snapshot", false]], "snapshot() (in module arkouda.io)": [[31, "arkouda.io.snapshot", false]], "sort() (arkouda.categorical method)": [[28, "arkouda.Categorical.sort", false], [28, "id38", false], [28, "id87", false]], "sort() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.sort", false]], "sort() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.sort", false]], "sort() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.sort", false]], "sort() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.sort", false]], "sort() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.sort", false]], "sort() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.sort", false]], "sort() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.sort", false]], "sort() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.sort", false]], "sort() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.sort", false]], "sort() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.sort", false]], "sort() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.sort", false]], "sort() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.sort", false]], "sort() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.sort", false]], "sort() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.sort", false]], "sort() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.sort", false]], "sort() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.sort", false]], "sort() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.sort", false]], "sort() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.sort", false]], "sort() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.sort", false]], "sort() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.sort", false]], "sort() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.sort", false]], "sort() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.sort", false]], "sort() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.sort", false]], "sort() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.sort", false]], "sort() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.sort", false]], "sort() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.sort", false]], "sort() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.sort", false]], "sort() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.sort", false]], "sort() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.sort", false]], "sort() (in module arkouda)": [[28, "arkouda.sort", false]], "sort() (in module arkouda.array_api._sorting_functions)": [[14, "arkouda.array_api._sorting_functions.sort", false]], "sort() (in module arkouda.sorting)": [[59, "arkouda.sorting.sort", false]], "sort_index() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.sort_index", false], [28, "id143", false]], "sort_index() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.sort_index", false]], "sort_index() (arkouda.series method)": [[28, "arkouda.Series.sort_index", false]], "sort_index() (arkouda.series.series method)": [[58, "arkouda.series.Series.sort_index", false]], "sort_index() (in module arkouda.series)": [[104, "arkouda.Series.sort_index", false]], "sort_values() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.sort_values", false], [28, "id144", false]], "sort_values() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.sort_values", false]], "sort_values() (arkouda.series method)": [[28, "arkouda.Series.sort_values", false]], "sort_values() (arkouda.series.series method)": [[58, "arkouda.series.Series.sort_values", false]], "sort_values() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.sort_values", false]], "sort_values() (in module arkouda.series)": [[104, "arkouda.Series.sort_values", false]], "sparse_sum_help() (in module arkouda.util)": [[62, "arkouda.util.sparse_sum_help", false]], "special_objtype (arkouda.bitvector attribute)": [[28, "arkouda.BitVector.special_objType", false]], "special_objtype (arkouda.client_dtypes.bitvector attribute)": [[23, "arkouda.client_dtypes.BitVector.special_objType", false]], "special_objtype (arkouda.client_dtypes.ipv4 attribute)": [[23, "arkouda.client_dtypes.IPv4.special_objType", false]], "special_objtype (arkouda.datetime attribute)": [[28, "arkouda.Datetime.special_objType", false], [28, "id175", false], [28, "id208", false]], "special_objtype (arkouda.ipv4 attribute)": [[28, "arkouda.IPv4.special_objType", false]], "special_objtype (arkouda.timeclass.datetime attribute)": [[61, "arkouda.timeclass.Datetime.special_objType", false]], "special_objtype (arkouda.timeclass.timedelta attribute)": [[61, "arkouda.timeclass.Timedelta.special_objType", false]], "special_objtype (arkouda.timedelta attribute)": [[28, "arkouda.Timedelta.special_objType", false], [28, "id455", false]], "split() (arkouda.matcher.matcher method)": [[36, "arkouda.matcher.Matcher.split", false]], "split() (arkouda.strings method)": [[107, "arkouda.Strings.split", false]], "split() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.split", false]], "sqrt() (in module arkouda)": [[28, "arkouda.sqrt", false]], "sqrt() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.sqrt", false]], "sqrt() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.sqrt", false]], "square() (in module arkouda)": [[28, "arkouda.square", false]], "square() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.square", false]], "square() (in module arkouda.numeric)": [[37, "arkouda.numeric.square", false]], "squeeze() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.squeeze", false]], "squeeze() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.squeeze", false]], "squeeze() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.squeeze", false]], "squeeze() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.squeeze", false]], "squeeze() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.squeeze", false]], "squeeze() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.squeeze", false]], "squeeze() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.squeeze", false]], "squeeze() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.squeeze", false]], "squeeze() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.squeeze", false]], "squeeze() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.squeeze", false]], "squeeze() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.squeeze", false]], "squeeze() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.squeeze", false]], "squeeze() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.squeeze", false]], "squeeze() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.squeeze", false]], "squeeze() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.squeeze", false]], "squeeze() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.squeeze", false]], "squeeze() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.squeeze", false]], "squeeze() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.squeeze", false]], "squeeze() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.squeeze", false]], "squeeze() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.squeeze", false]], "squeeze() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.squeeze", false]], "squeeze() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.squeeze", false]], "squeeze() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.squeeze", false]], "squeeze() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.squeeze", false]], "squeeze() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.squeeze", false]], "squeeze() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.squeeze", false]], "squeeze() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.squeeze", false]], "squeeze() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.squeeze", false]], "squeeze() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.squeeze", false]], "stack() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.stack", false]], "standard_normal() (arkouda.generator method)": [[28, "arkouda.Generator.standard_normal", false]], "standard_normal() (arkouda.random._generator.generator method)": [[45, "arkouda.random._generator.Generator.standard_normal", false]], "standard_normal() (arkouda.random.generator method)": [[47, "arkouda.random.Generator.standard_normal", false]], "standard_normal() (in module arkouda)": [[28, "arkouda.standard_normal", false], [28, "id829", false]], "standard_normal() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.standard_normal", false]], "standard_normal() (in module arkouda.random)": [[47, "arkouda.random.standard_normal", false]], "standard_normal() (in module arkouda.random._legacy)": [[46, "arkouda.random._legacy.standard_normal", false]], "standard_normal() (in module arkouda.random.generator)": [[102, "arkouda.random.Generator.standard_normal", false]], "standardize_categories() (arkouda.categorical class method)": [[28, "arkouda.Categorical.standardize_categories", false], [28, "id39", false], [28, "id88", false]], "standardize_categories() (arkouda.categorical.categorical class method)": [[21, "arkouda.categorical.Categorical.standardize_categories", false]], "start() (arkouda.match.match method)": [[35, "arkouda.match.Match.start", false], [107, "arkouda.match.Match.start", false]], "startswith() (arkouda.categorical method)": [[28, "arkouda.Categorical.startswith", false], [28, "id40", false], [28, "id89", false], [95, "arkouda.Categorical.startswith", false]], "startswith() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.startswith", false]], "startswith() (arkouda.strings method)": [[107, "arkouda.Strings.startswith", false]], "startswith() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.startswith", false]], "statistic (arkouda.power_divergenceresult attribute)": [[28, "arkouda.Power_divergenceResult.statistic", false]], "statistic (arkouda.scipy._stats_py.power_divergenceresult attribute)": [[49, "arkouda.scipy._stats_py.Power_divergenceResult.statistic", false]], "statistic (arkouda.scipy.power_divergenceresult attribute)": [[51, "arkouda.scipy.Power_divergenceResult.statistic", false]], "stats() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.stats", false], [54, "id111", false], [54, "id12", false], [54, "id130", false], [54, "id149", false], [54, "id168", false], [54, "id188", false], [54, "id208", false], [54, "id228", false], [54, "id248", false], [54, "id268", false], [54, "id288", false], [54, "id308", false], [54, "id31", false], [54, "id328", false], [54, "id347", false], [54, "id366", false], [54, "id385", false], [54, "id404", false], [54, "id424", false], [54, "id444", false], [54, "id463", false], [54, "id483", false], [54, "id503", false], [54, "id51", false], [54, "id522", false], [54, "id531", false], [54, "id542", false], [54, "id562", false], [54, "id581", false], [54, "id601", false], [54, "id620", false], [54, "id639", false], [54, "id71", false], [54, "id91", false]], "std() (arkouda.groupby method)": [[28, "arkouda.GroupBy.std", false], [28, "id259", false], [28, "id303", false], [28, "id347", false], [28, "id391", false], [28, "id435", false], [98, "arkouda.GroupBy.std", false]], "std() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.std", false]], "std() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.std", false]], "std() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.std", false]], "std() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.std", false]], "std() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.std", false]], "std() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.std", false]], "std() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.std", false]], "std() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.std", false]], "std() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.std", false]], "std() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.std", false]], "std() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.std", false]], "std() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.std", false]], "std() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.std", false]], "std() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.std", false]], "std() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.std", false]], "std() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.std", false]], "std() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.std", false]], "std() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.std", false]], "std() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.std", false]], "std() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.std", false]], "std() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.std", false]], "std() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.std", false]], "std() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.std", false]], "std() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.std", false]], "std() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.std", false]], "std() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.std", false]], "std() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.std", false]], "std() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.std", false]], "std() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.std", false]], "std() (arkouda.pdarray method)": [[28, "arkouda.pdarray.std", false], [28, "id569", false], [28, "id630", false], [28, "id691", false], [28, "id752", false], [28, "id813", false], [99, "arkouda.pdarray.std", false]], "std() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.std", false]], "std() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.std", false], [54, "id118", false], [54, "id137", false], [54, "id156", false], [54, "id175", false], [54, "id19", false], [54, "id195", false], [54, "id215", false], [54, "id235", false], [54, "id255", false], [54, "id275", false], [54, "id295", false], [54, "id315", false], [54, "id335", false], [54, "id354", false], [54, "id373", false], [54, "id38", false], [54, "id392", false], [54, "id411", false], [54, "id431", false], [54, "id451", false], [54, "id470", false], [54, "id490", false], [54, "id510", false], [54, "id529", false], [54, "id549", false], [54, "id551", false], [54, "id569", false], [54, "id58", false], [54, "id588", false], [54, "id608", false], [54, "id627", false], [54, "id646", false], [54, "id78", false], [54, "id98", false]], "std() (arkouda.timeclass.timedelta method)": [[61, "arkouda.timeclass.Timedelta.std", false]], "std() (arkouda.timedelta method)": [[28, "arkouda.Timedelta.std", false], [28, "id466", false]], "std() (in module arkouda)": [[28, "arkouda.std", false], [93, "arkouda.std", false]], "std() (in module arkouda.array_api._statistical_functions)": [[15, "arkouda.array_api._statistical_functions.std", false]], "std() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.std", false]], "stick() (arkouda.strings method)": [[107, "arkouda.Strings.stick", false]], "stick() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.stick", false]], "str_ (in module arkouda)": [[28, "arkouda.str_", false], [28, "id830", false]], "str_ (in module arkouda.dtypes)": [[25, "arkouda.dtypes.str_", false]], "str_acc (arkouda.series attribute)": [[28, "arkouda.Series.str_acc", false]], "str_acc (arkouda.series.series attribute)": [[58, "arkouda.series.Series.str_acc", false]], "str_scalars (in module arkouda)": [[28, "arkouda.str_scalars", false]], "str_scalars (in module arkouda.dtypes)": [[25, "arkouda.dtypes.str_scalars", false]], "strict (arkouda.errormode attribute)": [[28, "arkouda.ErrorMode.strict", false]], "strict (arkouda.numeric.errormode attribute)": [[37, "arkouda.numeric.ErrorMode.strict", false]], "strides() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.strides", false]], "strides() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.strides", false]], "strides() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.strides", false]], "strides() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.strides", false]], "strides() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.strides", false]], "strides() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.strides", false]], "strides() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.strides", false]], "strides() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.strides", false]], "strides() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.strides", false]], "strides() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.strides", false]], "strides() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.strides", false]], "strides() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.strides", false]], "strides() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.strides", false]], "strides() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.strides", false]], "strides() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.strides", false]], "strides() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.strides", false]], "strides() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.strides", false]], "strides() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.strides", false]], "strides() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.strides", false]], "strides() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.strides", false]], "strides() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.strides", false]], "strides() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.strides", false]], "strides() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.strides", false]], "strides() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.strides", false]], "strides() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.strides", false]], "strides() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.strides", false]], "strides() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.strides", false]], "strides() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.strides", false]], "string_operators() (in module arkouda)": [[28, "arkouda.string_operators", false]], "string_operators() (in module arkouda.accessor)": [[2, "arkouda.accessor.string_operators", false]], "stringaccessor (class in arkouda)": [[28, "arkouda.StringAccessor", false]], "stringaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.StringAccessor", false]], "strings (class in arkouda.strings)": [[60, "arkouda.strings.Strings", false]], "strip() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.strip", false]], "sub() (arkouda.matcher.matcher method)": [[36, "arkouda.matcher.Matcher.sub", false]], "sub() (arkouda.strings method)": [[107, "arkouda.Strings.sub", false]], "sub() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.sub", false]], "subn() (arkouda.strings method)": [[107, "arkouda.Strings.subn", false]], "subn() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.subn", false]], "subtract() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.subtract", false]], "sum() (arkouda.datetime method)": [[28, "arkouda.Datetime.sum", false], [28, "id186", false], [28, "id219", false]], "sum() (arkouda.groupby method)": [[28, "arkouda.GroupBy.sum", false], [28, "id260", false], [28, "id304", false], [28, "id348", false], [28, "id392", false], [28, "id436", false], [98, "arkouda.GroupBy.sum", false]], "sum() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.sum", false]], "sum() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.sum", false]], "sum() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.sum", false]], "sum() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.sum", false]], "sum() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.sum", false]], "sum() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.sum", false]], "sum() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.sum", false]], "sum() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.sum", false]], "sum() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.sum", false]], "sum() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.sum", false]], "sum() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.sum", false]], "sum() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.sum", false]], "sum() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.sum", false]], "sum() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.sum", false]], "sum() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.sum", false]], "sum() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.sum", false]], "sum() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.sum", false]], "sum() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.sum", false]], "sum() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.sum", false]], "sum() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.sum", false]], "sum() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.sum", false]], "sum() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.sum", false]], "sum() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.sum", false]], "sum() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.sum", false]], "sum() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.sum", false]], "sum() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.sum", false]], "sum() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.sum", false]], "sum() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.sum", false]], "sum() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.sum", false]], "sum() (arkouda.pdarray method)": [[28, "arkouda.pdarray.sum", false], [28, "id570", false], [28, "id631", false], [28, "id692", false], [28, "id753", false], [28, "id814", false], [99, "arkouda.pdarray.sum", false]], "sum() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.sum", false]], "sum() (arkouda.segarray method)": [[28, "arkouda.SegArray.sum", false]], "sum() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.sum", false]], "sum() (arkouda.timeclass.datetime method)": [[61, "arkouda.timeclass.Datetime.sum", false]], "sum() (arkouda.timeclass.timedelta method)": [[61, "arkouda.timeclass.Timedelta.sum", false]], "sum() (arkouda.timedelta method)": [[28, "arkouda.Timedelta.sum", false], [28, "id467", false]], "sum() (in module arkouda)": [[28, "arkouda.sum", false], [93, "arkouda.sum", false]], "sum() (in module arkouda.array_api._statistical_functions)": [[15, "arkouda.array_api._statistical_functions.sum", false]], "sum() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.sum", false]], "support() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.support", false]], "supported_opeq (arkouda.datetime attribute)": [[28, "arkouda.Datetime.supported_opeq", false], [28, "id176", false], [28, "id209", false]], "supported_opeq (arkouda.timeclass.datetime attribute)": [[61, "arkouda.timeclass.Datetime.supported_opeq", false]], "supported_opeq (arkouda.timeclass.timedelta attribute)": [[61, "arkouda.timeclass.Timedelta.supported_opeq", false]], "supported_opeq (arkouda.timedelta attribute)": [[28, "arkouda.Timedelta.supported_opeq", false], [28, "id456", false]], "supported_with_datetime (arkouda.datetime attribute)": [[28, "arkouda.Datetime.supported_with_datetime", false], [28, "id177", false], [28, "id210", false]], "supported_with_datetime (arkouda.timeclass.datetime attribute)": [[61, "arkouda.timeclass.Datetime.supported_with_datetime", false]], "supported_with_datetime (arkouda.timeclass.timedelta attribute)": [[61, "arkouda.timeclass.Timedelta.supported_with_datetime", false]], "supported_with_datetime (arkouda.timedelta attribute)": [[28, "arkouda.Timedelta.supported_with_datetime", false], [28, "id457", false]], "supported_with_pdarray (arkouda.datetime attribute)": [[28, "arkouda.Datetime.supported_with_pdarray", false], [28, "id178", false], [28, "id211", false]], "supported_with_pdarray (arkouda.timeclass.datetime attribute)": [[61, "arkouda.timeclass.Datetime.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.timeclass.timedelta attribute)": [[61, "arkouda.timeclass.Timedelta.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.timedelta attribute)": [[28, "arkouda.Timedelta.supported_with_pdarray", false], [28, "id458", false]], "supported_with_r_datetime (arkouda.datetime attribute)": [[28, "arkouda.Datetime.supported_with_r_datetime", false], [28, "id179", false], [28, "id212", false]], "supported_with_r_datetime (arkouda.timeclass.datetime attribute)": [[61, "arkouda.timeclass.Datetime.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.timeclass.timedelta attribute)": [[61, "arkouda.timeclass.Timedelta.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.timedelta attribute)": [[28, "arkouda.Timedelta.supported_with_r_datetime", false], [28, "id459", false]], "supported_with_r_pdarray (arkouda.datetime attribute)": [[28, "arkouda.Datetime.supported_with_r_pdarray", false], [28, "id180", false], [28, "id213", false]], "supported_with_r_pdarray (arkouda.timeclass.datetime attribute)": [[61, "arkouda.timeclass.Datetime.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.timeclass.timedelta attribute)": [[61, "arkouda.timeclass.Timedelta.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.timedelta attribute)": [[28, "arkouda.Timedelta.supported_with_r_pdarray", false], [28, "id460", false]], "supported_with_r_timedelta (arkouda.datetime attribute)": [[28, "arkouda.Datetime.supported_with_r_timedelta", false], [28, "id181", false], [28, "id214", false]], "supported_with_r_timedelta (arkouda.timeclass.datetime attribute)": [[61, "arkouda.timeclass.Datetime.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.timeclass.timedelta attribute)": [[61, "arkouda.timeclass.Timedelta.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.timedelta attribute)": [[28, "arkouda.Timedelta.supported_with_r_timedelta", false], [28, "id461", false]], "supported_with_timedelta (arkouda.datetime attribute)": [[28, "arkouda.Datetime.supported_with_timedelta", false], [28, "id182", false], [28, "id215", false]], "supported_with_timedelta (arkouda.timeclass.datetime attribute)": [[61, "arkouda.timeclass.Datetime.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.timeclass.timedelta attribute)": [[61, "arkouda.timeclass.Timedelta.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.timedelta attribute)": [[28, "arkouda.Timedelta.supported_with_timedelta", false], [28, "id462", false]], "supportsbufferprotocol (in module arkouda.array_api._typing)": [[16, "arkouda.array_api._typing.SupportsBufferProtocol", false]], "supportsdlpack (class in arkouda.array_api._typing)": [[16, "arkouda.array_api._typing.SupportsDLPack", false]], "swapaxes() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.swapaxes", false]], "swapaxes() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.swapaxes", false]], "t (arkouda.array_api._array_object.array property)": [[4, "arkouda.array_api._array_object.Array.T", false]], "t (arkouda.array_api._typing.array property)": [[16, "arkouda.array_api._typing.Array.T", false]], "t() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.T", false]], "t() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.T", false]], "t() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.T", false]], "t() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.T", false]], "t() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.T", false]], "t() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.T", false]], "t() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.T", false]], "t() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.T", false]], "t() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.T", false]], "t() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.T", false]], "t() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.T", false]], "t() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.T", false]], "t() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.T", false]], "t() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.T", false]], "t() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.T", false]], "t() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.T", false]], "t() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.T", false]], "t() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.T", false]], "t() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.T", false]], "t() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.T", false]], "t() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.T", false]], "t() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.T", false]], "t() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.T", false]], "t() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.T", false]], "t() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.T", false]], "t() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.T", false]], "t() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.T", false]], "t() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.T", false]], "tail() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.tail", false], [28, "id145", false]], "tail() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.tail", false]], "tail() (arkouda.series method)": [[28, "arkouda.Series.tail", false]], "tail() (arkouda.series.series method)": [[58, "arkouda.series.Series.tail", false]], "tail() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.tail", false]], "tail() (in module arkouda.series)": [[104, "arkouda.Series.tail", false]], "take() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.take", false]], "take() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.take", false]], "take() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.take", false]], "take() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.take", false]], "take() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.take", false]], "take() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.take", false]], "take() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.take", false]], "take() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.take", false]], "take() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.take", false]], "take() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.take", false]], "take() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.take", false]], "take() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.take", false]], "take() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.take", false]], "take() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.take", false]], "take() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.take", false]], "take() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.take", false]], "take() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.take", false]], "take() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.take", false]], "take() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.take", false]], "take() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.take", false]], "take() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.take", false]], "take() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.take", false]], "take() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.take", false]], "take() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.take", false]], "take() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.take", false]], "take() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.take", false]], "take() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.take", false]], "take() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.take", false]], "take() (in module arkouda.array_api._indexing_functions)": [[10, "arkouda.array_api._indexing_functions.take", false]], "tan() (in module arkouda)": [[28, "arkouda.tan", false]], "tan() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.tan", false]], "tan() (in module arkouda.numeric)": [[37, "arkouda.numeric.tan", false]], "tanh() (in module arkouda)": [[28, "arkouda.tanh", false]], "tanh() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.tanh", false]], "tanh() (in module arkouda.numeric)": [[37, "arkouda.numeric.tanh", false]], "tensordot() (in module arkouda.array_api.linalg)": [[19, "arkouda.array_api.linalg.tensordot", false]], "tile() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.tile", false]], "timedelta (class in arkouda)": [[28, "arkouda.Timedelta", false], [28, "id449", false]], "timedelta (class in arkouda.timeclass)": [[61, "arkouda.timeclass.Timedelta", false]], "timedelta_range() (in module arkouda)": [[28, "arkouda.timedelta_range", false], [28, "id831", false]], "timedelta_range() (in module arkouda.timeclass)": [[61, "arkouda.timeclass.timedelta_range", false]], "title() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.title", false]], "to_csv() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.to_csv", false], [28, "id146", false]], "to_csv() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.to_csv", false]], "to_csv() (arkouda.index method)": [[28, "arkouda.Index.to_csv", false]], "to_csv() (arkouda.index.index method)": [[29, "arkouda.index.Index.to_csv", false]], "to_csv() (arkouda.pdarray method)": [[28, "arkouda.pdarray.to_csv", false], [28, "id571", false], [28, "id632", false], [28, "id693", false], [28, "id754", false], [28, "id815", false]], "to_csv() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.to_csv", false]], "to_csv() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.to_csv", false]], "to_csv() (in module arkouda)": [[28, "arkouda.to_csv", false]], "to_csv() (in module arkouda.io)": [[31, "arkouda.io.to_csv", false]], "to_cuda() (arkouda.pdarray method)": [[28, "arkouda.pdarray.to_cuda", false], [28, "id574", false], [28, "id635", false], [28, "id696", false], [28, "id757", false], [28, "id818", false]], "to_cuda() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.to_cuda", false]], "to_dataframe() (arkouda.series method)": [[28, "arkouda.Series.to_dataframe", false]], "to_dataframe() (arkouda.series.series method)": [[58, "arkouda.series.Series.to_dataframe", false]], "to_device() (arkouda.array_api._array_object.array method)": [[4, "arkouda.array_api._array_object.Array.to_device", false]], "to_device() (arkouda.array_api._typing.array method)": [[16, "arkouda.array_api._typing.Array.to_device", false]], "to_dict() (arkouda.index method)": [[28, "arkouda.Index.to_dict", false]], "to_dict() (arkouda.index.index method)": [[29, "arkouda.index.Index.to_dict", false]], "to_dict() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.to_dict", false]], "to_dict() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.to_dict", false]], "to_hdf() (arkouda.array_view.arrayview method)": [[20, "arkouda.array_view.ArrayView.to_hdf", false]], "to_hdf() (arkouda.arrayview method)": [[28, "arkouda.ArrayView.to_hdf", false]], "to_hdf() (arkouda.categorical method)": [[28, "arkouda.Categorical.to_hdf", false], [28, "id41", false], [28, "id90", false]], "to_hdf() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.to_hdf", false]], "to_hdf() (arkouda.client_dtypes.ipv4 method)": [[23, "arkouda.client_dtypes.IPv4.to_hdf", false]], "to_hdf() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.to_hdf", false], [28, "id147", false]], "to_hdf() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.to_hdf", false]], "to_hdf() (arkouda.groupby method)": [[28, "arkouda.GroupBy.to_hdf", false], [28, "id261", false], [28, "id305", false], [28, "id349", false], [28, "id393", false], [28, "id437", false], [98, "arkouda.GroupBy.to_hdf", false]], "to_hdf() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.to_hdf", false]], "to_hdf() (arkouda.index method)": [[28, "arkouda.Index.to_hdf", false]], "to_hdf() (arkouda.index.index method)": [[29, "arkouda.index.Index.to_hdf", false]], "to_hdf() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.to_hdf", false]], "to_hdf() (arkouda.ipv4 method)": [[28, "arkouda.IPv4.to_hdf", false]], "to_hdf() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.to_hdf", false]], "to_hdf() (arkouda.pdarray method)": [[28, "arkouda.pdarray.to_hdf", false], [28, "id575", false], [28, "id636", false], [28, "id697", false], [28, "id758", false], [28, "id819", false]], "to_hdf() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.to_hdf", false]], "to_hdf() (arkouda.segarray method)": [[28, "arkouda.SegArray.to_hdf", false]], "to_hdf() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.to_hdf", false]], "to_hdf() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.to_hdf", false]], "to_hdf() (in module arkouda)": [[28, "arkouda.to_hdf", false]], "to_hdf() (in module arkouda.io)": [[31, "arkouda.io.to_hdf", false]], "to_list() (arkouda.array_view.arrayview method)": [[20, "arkouda.array_view.ArrayView.to_list", false]], "to_list() (arkouda.arrayview method)": [[28, "arkouda.ArrayView.to_list", false]], "to_list() (arkouda.bitvector method)": [[28, "arkouda.BitVector.to_list", false]], "to_list() (arkouda.categorical method)": [[28, "arkouda.Categorical.to_list", false], [28, "id42", false], [28, "id91", false]], "to_list() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.to_list", false]], "to_list() (arkouda.client_dtypes.bitvector method)": [[23, "arkouda.client_dtypes.BitVector.to_list", false]], "to_list() (arkouda.client_dtypes.ipv4 method)": [[23, "arkouda.client_dtypes.IPv4.to_list", false]], "to_list() (arkouda.index method)": [[28, "arkouda.Index.to_list", false]], "to_list() (arkouda.index.index method)": [[29, "arkouda.index.Index.to_list", false]], "to_list() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.to_list", false]], "to_list() (arkouda.ipv4 method)": [[28, "arkouda.IPv4.to_list", false]], "to_list() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.to_list", false]], "to_list() (arkouda.pdarray method)": [[28, "arkouda.pdarray.to_list", false], [28, "id576", false], [28, "id637", false], [28, "id698", false], [28, "id759", false], [28, "id820", false]], "to_list() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.to_list", false]], "to_list() (arkouda.segarray method)": [[28, "arkouda.SegArray.to_list", false]], "to_list() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.to_list", false]], "to_list() (arkouda.series method)": [[28, "arkouda.Series.to_list", false]], "to_list() (arkouda.series.series method)": [[58, "arkouda.series.Series.to_list", false]], "to_list() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.to_list", false]], "to_markdown() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.to_markdown", false], [28, "id148", false]], "to_markdown() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.to_markdown", false]], "to_markdown() (arkouda.series method)": [[28, "arkouda.Series.to_markdown", false]], "to_markdown() (arkouda.series.series method)": [[58, "arkouda.series.Series.to_markdown", false]], "to_ndarray() (arkouda.array_api._array_object.array method)": [[4, "arkouda.array_api._array_object.Array.to_ndarray", false]], "to_ndarray() (arkouda.array_api._typing.array method)": [[16, "arkouda.array_api._typing.Array.to_ndarray", false]], "to_ndarray() (arkouda.array_view.arrayview method)": [[20, "arkouda.array_view.ArrayView.to_ndarray", false]], "to_ndarray() (arkouda.arrayview method)": [[28, "arkouda.ArrayView.to_ndarray", false]], "to_ndarray() (arkouda.bitvector method)": [[28, "arkouda.BitVector.to_ndarray", false]], "to_ndarray() (arkouda.categorical method)": [[28, "arkouda.Categorical.to_ndarray", false], [28, "id43", false], [28, "id92", false]], "to_ndarray() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.to_ndarray", false]], "to_ndarray() (arkouda.client_dtypes.bitvector method)": [[23, "arkouda.client_dtypes.BitVector.to_ndarray", false]], "to_ndarray() (arkouda.client_dtypes.ipv4 method)": [[23, "arkouda.client_dtypes.IPv4.to_ndarray", false]], "to_ndarray() (arkouda.index method)": [[28, "arkouda.Index.to_ndarray", false]], "to_ndarray() (arkouda.index.index method)": [[29, "arkouda.index.Index.to_ndarray", false]], "to_ndarray() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.to_ndarray", false]], "to_ndarray() (arkouda.ipv4 method)": [[28, "arkouda.IPv4.to_ndarray", false]], "to_ndarray() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.to_ndarray", false]], "to_ndarray() (arkouda.pdarray method)": [[28, "arkouda.pdarray.to_ndarray", false], [28, "id577", false], [28, "id638", false], [28, "id699", false], [28, "id760", false], [28, "id821", false]], "to_ndarray() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.to_ndarray", false]], "to_ndarray() (arkouda.segarray method)": [[28, "arkouda.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.to_ndarray", false]], "to_ndarray() (in module arkouda.arrayview)": [[94, "arkouda.ArrayView.to_ndarray", false]], "to_ndarray() (in module arkouda.categorical)": [[95, "arkouda.Categorical.to_ndarray", false]], "to_ndarray() (in module arkouda.pdarray)": [[90, "arkouda.pdarray.to_ndarray", false], [101, "arkouda.pdarray.to_ndarray", false]], "to_ndarray() (in module arkouda.segarray)": [[103, "arkouda.SegArray.to_ndarray", false]], "to_ndarray() (in module arkouda.strings)": [[90, "arkouda.Strings.to_ndarray", false], [107, "arkouda.Strings.to_ndarray", false]], "to_pandas() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.to_pandas", false], [28, "id149", false]], "to_pandas() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.to_pandas", false]], "to_pandas() (arkouda.datetime method)": [[28, "arkouda.Datetime.to_pandas", false], [28, "id187", false], [28, "id220", false]], "to_pandas() (arkouda.index method)": [[28, "arkouda.Index.to_pandas", false]], "to_pandas() (arkouda.index.index method)": [[29, "arkouda.index.Index.to_pandas", false]], "to_pandas() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.to_pandas", false]], "to_pandas() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.to_pandas", false]], "to_pandas() (arkouda.series method)": [[28, "arkouda.Series.to_pandas", false]], "to_pandas() (arkouda.series.series method)": [[58, "arkouda.series.Series.to_pandas", false]], "to_pandas() (arkouda.timeclass.datetime method)": [[61, "arkouda.timeclass.Datetime.to_pandas", false]], "to_pandas() (arkouda.timeclass.timedelta method)": [[61, "arkouda.timeclass.Timedelta.to_pandas", false]], "to_pandas() (arkouda.timedelta method)": [[28, "arkouda.Timedelta.to_pandas", false], [28, "id468", false]], "to_pandas() (in module arkouda.dataframe)": [[97, "arkouda.DataFrame.to_pandas", false]], "to_pandas() (in module arkouda.series)": [[104, "arkouda.Series.to_pandas", false]], "to_parquet() (arkouda.categorical method)": [[28, "arkouda.Categorical.to_parquet", false], [28, "id44", false], [28, "id93", false]], "to_parquet() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.to_parquet", false]], "to_parquet() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.to_parquet", false], [28, "id150", false]], "to_parquet() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.to_parquet", false]], "to_parquet() (arkouda.index method)": [[28, "arkouda.Index.to_parquet", false]], "to_parquet() (arkouda.index.index method)": [[29, "arkouda.index.Index.to_parquet", false]], "to_parquet() (arkouda.pdarray method)": [[28, "arkouda.pdarray.to_parquet", false], [28, "id578", false], [28, "id639", false], [28, "id700", false], [28, "id761", false], [28, "id822", false]], "to_parquet() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.to_parquet", false]], "to_parquet() (arkouda.segarray method)": [[28, "arkouda.SegArray.to_parquet", false]], "to_parquet() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.to_parquet", false]], "to_parquet() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.to_parquet", false]], "to_parquet() (in module arkouda)": [[28, "arkouda.to_parquet", false]], "to_parquet() (in module arkouda.io)": [[31, "arkouda.io.to_parquet", false]], "to_strings() (arkouda.categorical method)": [[28, "arkouda.Categorical.to_strings", false], [28, "id45", false], [28, "id94", false]], "to_strings() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.to_strings", false]], "tobytes() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.tobytes", false]], "tobytes() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.tobytes", false]], "tobytes() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.tobytes", false]], "tobytes() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.tobytes", false]], "tobytes() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.tobytes", false]], "tobytes() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.tobytes", false]], "tobytes() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.tobytes", false]], "tobytes() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.tobytes", false]], "tobytes() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.tobytes", false]], "tobytes() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.tobytes", false]], "tobytes() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.tobytes", false]], "tobytes() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.tobytes", false]], "tobytes() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.tobytes", false]], "tobytes() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.tobytes", false]], "tobytes() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.tobytes", false]], "tobytes() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.tobytes", false]], "tobytes() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.tobytes", false]], "tobytes() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.tobytes", false]], "tobytes() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.tobytes", false]], "tobytes() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.tobytes", false]], "tobytes() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.tobytes", false]], "tobytes() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.tobytes", false]], "tobytes() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.tobytes", false]], "tobytes() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.tobytes", false]], "tobytes() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.tobytes", false]], "tobytes() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.tobytes", false]], "tobytes() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.tobytes", false]], "tobytes() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.tobytes", false]], "tofile() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.tofile", false]], "tofile() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.tofile", false]], "tofile() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.tofile", false]], "tofile() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.tofile", false]], "tofile() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.tofile", false]], "tofile() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.tofile", false]], "tofile() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.tofile", false]], "tofile() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.tofile", false]], "tofile() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.tofile", false]], "tofile() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.tofile", false]], "tofile() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.tofile", false]], "tofile() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.tofile", false]], "tofile() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.tofile", false]], "tofile() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.tofile", false]], "tofile() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.tofile", false]], "tofile() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.tofile", false]], "tofile() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.tofile", false]], "tofile() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.tofile", false]], "tofile() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.tofile", false]], "tofile() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.tofile", false]], "tofile() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.tofile", false]], "tofile() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.tofile", false]], "tofile() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.tofile", false]], "tofile() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.tofile", false]], "tofile() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.tofile", false]], "tofile() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.tofile", false]], "tofile() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.tofile", false]], "tofile() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.tofile", false]], "tolist() (arkouda.array_api._array_object.array method)": [[4, "arkouda.array_api._array_object.Array.tolist", false]], "tolist() (arkouda.array_api._typing.array method)": [[16, "arkouda.array_api._typing.Array.tolist", false]], "tolist() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.tolist", false]], "tolist() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.tolist", false]], "tolist() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.tolist", false]], "tolist() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.tolist", false]], "tolist() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.tolist", false]], "tolist() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.tolist", false]], "tolist() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.tolist", false]], "tolist() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.tolist", false]], "tolist() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.tolist", false]], "tolist() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.tolist", false]], "tolist() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.tolist", false]], "tolist() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.tolist", false]], "tolist() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.tolist", false]], "tolist() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.tolist", false]], "tolist() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.tolist", false]], "tolist() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.tolist", false]], "tolist() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.tolist", false]], "tolist() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.tolist", false]], "tolist() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.tolist", false]], "tolist() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.tolist", false]], "tolist() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.tolist", false]], "tolist() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.tolist", false]], "tolist() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.tolist", false]], "tolist() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.tolist", false]], "tolist() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.tolist", false]], "tolist() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.tolist", false]], "tolist() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.tolist", false]], "tolist() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.tolist", false]], "topn() (arkouda.series method)": [[28, "arkouda.Series.topn", false]], "topn() (arkouda.series.series method)": [[58, "arkouda.series.Series.topn", false]], "topn() (in module arkouda.series)": [[104, "arkouda.Series.topn", false]], "tostring() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.tostring", false]], "tostring() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.tostring", false]], "tostring() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.tostring", false]], "tostring() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.tostring", false]], "tostring() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.tostring", false]], "tostring() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.tostring", false]], "tostring() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.tostring", false]], "tostring() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.tostring", false]], "tostring() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.tostring", false]], "tostring() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.tostring", false]], "tostring() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.tostring", false]], "tostring() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.tostring", false]], "tostring() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.tostring", false]], "tostring() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.tostring", false]], "tostring() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.tostring", false]], "tostring() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.tostring", false]], "tostring() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.tostring", false]], "tostring() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.tostring", false]], "tostring() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.tostring", false]], "tostring() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.tostring", false]], "tostring() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.tostring", false]], "tostring() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.tostring", false]], "tostring() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.tostring", false]], "tostring() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.tostring", false]], "tostring() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.tostring", false]], "tostring() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.tostring", false]], "tostring() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.tostring", false]], "tostring() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.tostring", false]], "total_seconds() (arkouda.timeclass.timedelta method)": [[61, "arkouda.timeclass.Timedelta.total_seconds", false]], "total_seconds() (arkouda.timedelta method)": [[28, "arkouda.Timedelta.total_seconds", false], [28, "id469", false]], "trace() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.trace", false]], "trace() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.trace", false]], "trace() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.trace", false]], "trace() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.trace", false]], "trace() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.trace", false]], "trace() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.trace", false]], "trace() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.trace", false]], "trace() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.trace", false]], "trace() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.trace", false]], "trace() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.trace", false]], "trace() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.trace", false]], "trace() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.trace", false]], "trace() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.trace", false]], "trace() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.trace", false]], "trace() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.trace", false]], "trace() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.trace", false]], "trace() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.trace", false]], "trace() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.trace", false]], "trace() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.trace", false]], "trace() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.trace", false]], "trace() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.trace", false]], "trace() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.trace", false]], "trace() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.trace", false]], "trace() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.trace", false]], "trace() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.trace", false]], "trace() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.trace", false]], "trace() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.trace", false]], "trace() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.trace", false]], "transfer() (arkouda.categorical method)": [[28, "arkouda.Categorical.transfer", false], [28, "id46", false], [28, "id95", false]], "transfer() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.transfer", false]], "transfer() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.transfer", false], [28, "id151", false]], "transfer() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.transfer", false]], "transfer() (arkouda.pdarray method)": [[28, "arkouda.pdarray.transfer", false], [28, "id579", false], [28, "id640", false], [28, "id701", false], [28, "id762", false], [28, "id823", false]], "transfer() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.transfer", false]], "transfer() (arkouda.segarray method)": [[28, "arkouda.SegArray.transfer", false]], "transfer() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.transfer", false]], "transfer() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.transfer", false]], "translate_np_dtype() (in module arkouda)": [[28, "arkouda.translate_np_dtype", false]], "translate_np_dtype() (in module arkouda.dtypes)": [[25, "arkouda.dtypes.translate_np_dtype", false]], "transpose() (arkouda.array_api._array_object.array method)": [[4, "arkouda.array_api._array_object.Array.transpose", false]], "transpose() (arkouda.array_api._typing.array method)": [[16, "arkouda.array_api._typing.Array.transpose", false]], "transpose() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.transpose", false]], "transpose() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.transpose", false]], "transpose() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.transpose", false]], "transpose() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.transpose", false]], "transpose() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.transpose", false]], "transpose() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.transpose", false]], "transpose() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.transpose", false]], "transpose() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.transpose", false]], "transpose() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.transpose", false]], "transpose() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.transpose", false]], "transpose() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.transpose", false]], "transpose() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.transpose", false]], "transpose() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.transpose", false]], "transpose() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.transpose", false]], "transpose() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.transpose", false]], "transpose() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.transpose", false]], "transpose() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.transpose", false]], "transpose() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.transpose", false]], "transpose() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.transpose", false]], "transpose() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.transpose", false]], "transpose() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.transpose", false]], "transpose() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.transpose", false]], "transpose() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.transpose", false]], "transpose() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.transpose", false]], "transpose() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.transpose", false]], "transpose() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.transpose", false]], "transpose() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.transpose", false]], "transpose() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.transpose", false]], "tril() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.tril", false]], "triu() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.triu", false]], "trunc() (in module arkouda)": [[28, "arkouda.trunc", false]], "trunc() (in module arkouda.array_api._elementwise_functions)": [[9, "arkouda.array_api._elementwise_functions.trunc", false]], "trunc() (in module arkouda.numeric)": [[37, "arkouda.numeric.trunc", false]], "ubyte (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.ubyte", false]], "uint (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.uint", false]], "uint16 (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.uint16", false]], "uint16 (in module arkouda)": [[28, "arkouda.uint16", false]], "uint16 (in module arkouda.array_api._dtypes)": [[8, "arkouda.array_api._dtypes.uint16", false]], "uint16 (in module arkouda.dtypes)": [[25, "arkouda.dtypes.uint16", false]], "uint32 (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.uint32", false]], "uint32 (in module arkouda)": [[28, "arkouda.uint32", false]], "uint32 (in module arkouda.array_api._dtypes)": [[8, "arkouda.array_api._dtypes.uint32", false]], "uint32 (in module arkouda.dtypes)": [[25, "arkouda.dtypes.uint32", false]], "uint64 (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.uint64", false]], "uint64 (in module arkouda)": [[28, "arkouda.uint64", false]], "uint64 (in module arkouda.array_api._dtypes)": [[8, "arkouda.array_api._dtypes.uint64", false]], "uint64 (in module arkouda.dtypes)": [[25, "arkouda.dtypes.uint64", false]], "uint8 (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.uint8", false]], "uint8 (in module arkouda)": [[28, "arkouda.uint8", false]], "uint8 (in module arkouda.array_api._dtypes)": [[8, "arkouda.array_api._dtypes.uint8", false]], "uint8 (in module arkouda.dtypes)": [[25, "arkouda.dtypes.uint8", false]], "uintc (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.uintc", false]], "ulonglong (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.ulonglong", false]], "uniform() (arkouda.generator method)": [[28, "arkouda.Generator.uniform", false]], "uniform() (arkouda.random._generator.generator method)": [[45, "arkouda.random._generator.Generator.uniform", false]], "uniform() (arkouda.random.generator method)": [[47, "arkouda.random.Generator.uniform", false]], "uniform() (in module arkouda)": [[28, "arkouda.uniform", false], [28, "id832", false]], "uniform() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.uniform", false]], "uniform() (in module arkouda.random)": [[47, "arkouda.random.uniform", false]], "uniform() (in module arkouda.random._legacy)": [[46, "arkouda.random._legacy.uniform", false]], "uniform() (in module arkouda.random.generator)": [[102, "arkouda.random.Generator.uniform", false]], "union() (arkouda.segarray method)": [[28, "arkouda.SegArray.union", false]], "union() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.union", false]], "union() (in module arkouda.segarray)": [[103, "arkouda.SegArray.union", false]], "union1d() (in module arkouda)": [[28, "arkouda.union1d", false], [105, "arkouda.union1d", false]], "union1d() (in module arkouda.pdarraysetops)": [[43, "arkouda.pdarraysetops.union1d", false]], "unique() (arkouda.categorical method)": [[28, "arkouda.Categorical.unique", false], [28, "id47", false], [28, "id96", false]], "unique() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.unique", false]], "unique() (arkouda.groupby method)": [[28, "arkouda.GroupBy.unique", false], [28, "id262", false], [28, "id306", false], [28, "id350", false], [28, "id394", false], [28, "id438", false], [98, "arkouda.GroupBy.unique", false]], "unique() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.unique", false]], "unique() (arkouda.segarray method)": [[28, "arkouda.SegArray.unique", false]], "unique() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.unique", false]], "unique() (in module arkouda)": [[28, "arkouda.unique", false], [28, "id833", false], [28, "id834", false], [105, "arkouda.unique", false]], "unique() (in module arkouda.groupbyclass)": [[26, "arkouda.groupbyclass.unique", false]], "unique_all() (in module arkouda.array_api._set_functions)": [[13, "arkouda.array_api._set_functions.unique_all", false]], "unique_counts() (in module arkouda.array_api._set_functions)": [[13, "arkouda.array_api._set_functions.unique_counts", false]], "unique_inverse() (in module arkouda.array_api._set_functions)": [[13, "arkouda.array_api._set_functions.unique_inverse", false]], "unique_keys (arkouda.groupby attribute)": [[28, "arkouda.GroupBy.unique_keys", false], [28, "id227", false], [28, "id271", false], [28, "id315", false], [28, "id359", false], [28, "id403", false], [98, "arkouda.GroupBy.unique_keys", false]], "unique_keys (arkouda.groupbyclass.groupby attribute)": [[26, "arkouda.groupbyclass.GroupBy.unique_keys", false]], "unique_values() (in module arkouda.array_api._set_functions)": [[13, "arkouda.array_api._set_functions.unique_values", false]], "uniqueallresult (class in arkouda.array_api._set_functions)": [[13, "arkouda.array_api._set_functions.UniqueAllResult", false]], "uniquecountsresult (class in arkouda.array_api._set_functions)": [[13, "arkouda.array_api._set_functions.UniqueCountsResult", false]], "uniqueinverseresult (class in arkouda.array_api._set_functions)": [[13, "arkouda.array_api._set_functions.UniqueInverseResult", false]], "unregister() (arkouda.categorical method)": [[28, "arkouda.Categorical.unregister", false], [28, "id48", false], [28, "id97", false]], "unregister() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.unregister", false]], "unregister() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.unregister", false], [28, "id152", false]], "unregister() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.unregister", false]], "unregister() (arkouda.datetime method)": [[28, "arkouda.Datetime.unregister", false], [28, "id188", false], [28, "id221", false]], "unregister() (arkouda.groupby method)": [[28, "arkouda.GroupBy.unregister", false], [28, "id263", false], [28, "id307", false], [28, "id351", false], [28, "id395", false], [28, "id439", false], [98, "arkouda.GroupBy.unregister", false]], "unregister() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.unregister", false]], "unregister() (arkouda.index method)": [[28, "arkouda.Index.unregister", false]], "unregister() (arkouda.index.index method)": [[29, "arkouda.index.Index.unregister", false]], "unregister() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.unregister", false]], "unregister() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.unregister", false]], "unregister() (arkouda.pdarray method)": [[28, "arkouda.pdarray.unregister", false], [28, "id580", false], [28, "id641", false], [28, "id702", false], [28, "id763", false], [28, "id824", false]], "unregister() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.unregister", false]], "unregister() (arkouda.segarray method)": [[28, "arkouda.SegArray.unregister", false]], "unregister() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.unregister", false]], "unregister() (arkouda.series method)": [[28, "arkouda.Series.unregister", false]], "unregister() (arkouda.series.series method)": [[58, "arkouda.series.Series.unregister", false]], "unregister() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.unregister", false]], "unregister() (arkouda.timeclass.datetime method)": [[61, "arkouda.timeclass.Datetime.unregister", false]], "unregister() (arkouda.timeclass.timedelta method)": [[61, "arkouda.timeclass.Timedelta.unregister", false]], "unregister() (arkouda.timedelta method)": [[28, "arkouda.Timedelta.unregister", false], [28, "id470", false]], "unregister() (in module arkouda)": [[28, "arkouda.unregister", false]], "unregister() (in module arkouda.util)": [[62, "arkouda.util.unregister", false]], "unregister_all() (in module arkouda)": [[28, "arkouda.unregister_all", false]], "unregister_all() (in module arkouda.util)": [[62, "arkouda.util.unregister_all", false]], "unregister_categorical_by_name() (arkouda.categorical static method)": [[28, "arkouda.Categorical.unregister_categorical_by_name", false], [28, "id49", false], [28, "id98", false]], "unregister_categorical_by_name() (arkouda.categorical.categorical static method)": [[21, "arkouda.categorical.Categorical.unregister_categorical_by_name", false]], "unregister_dataframe_by_name() (arkouda.dataframe static method)": [[28, "arkouda.DataFrame.unregister_dataframe_by_name", false], [28, "id153", false]], "unregister_dataframe_by_name() (arkouda.dataframe.dataframe static method)": [[24, "arkouda.dataframe.DataFrame.unregister_dataframe_by_name", false]], "unregister_groupby_by_name() (arkouda.groupby static method)": [[28, "arkouda.GroupBy.unregister_groupby_by_name", false], [28, "id264", false], [28, "id308", false], [28, "id352", false], [28, "id396", false], [28, "id440", false], [98, "arkouda.GroupBy.unregister_groupby_by_name", false]], "unregister_groupby_by_name() (arkouda.groupbyclass.groupby static method)": [[26, "arkouda.groupbyclass.GroupBy.unregister_groupby_by_name", false]], "unregister_pdarray_by_name() (in module arkouda)": [[28, "arkouda.unregister_pdarray_by_name", false]], "unregister_pdarray_by_name() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.unregister_pdarray_by_name", false]], "unregister_segarray_by_name() (arkouda.segarray static method)": [[28, "arkouda.SegArray.unregister_segarray_by_name", false]], "unregister_segarray_by_name() (arkouda.segarray.segarray static method)": [[57, "arkouda.segarray.SegArray.unregister_segarray_by_name", false]], "unregister_strings_by_name() (arkouda.strings.strings static method)": [[60, "arkouda.strings.Strings.unregister_strings_by_name", false]], "unsqueeze() (in module arkouda)": [[28, "arkouda.unsqueeze", false]], "unsqueeze() (in module arkouda.alignment)": [[3, "arkouda.alignment.unsqueeze", false]], "unstack() (in module arkouda.array_api._manipulation_functions)": [[11, "arkouda.array_api._manipulation_functions.unstack", false]], "update_hdf() (arkouda.array_view.arrayview method)": [[20, "arkouda.array_view.ArrayView.update_hdf", false]], "update_hdf() (arkouda.arrayview method)": [[28, "arkouda.ArrayView.update_hdf", false]], "update_hdf() (arkouda.categorical method)": [[28, "arkouda.Categorical.update_hdf", false], [28, "id50", false], [28, "id99", false]], "update_hdf() (arkouda.categorical.categorical method)": [[21, "arkouda.categorical.Categorical.update_hdf", false]], "update_hdf() (arkouda.client_dtypes.ipv4 method)": [[23, "arkouda.client_dtypes.IPv4.update_hdf", false]], "update_hdf() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.update_hdf", false], [28, "id154", false]], "update_hdf() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.update_hdf", false]], "update_hdf() (arkouda.groupby method)": [[28, "arkouda.GroupBy.update_hdf", false], [28, "id265", false], [28, "id309", false], [28, "id353", false], [28, "id397", false], [28, "id441", false]], "update_hdf() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.update_hdf", false]], "update_hdf() (arkouda.index method)": [[28, "arkouda.Index.update_hdf", false]], "update_hdf() (arkouda.index.index method)": [[29, "arkouda.index.Index.update_hdf", false]], "update_hdf() (arkouda.index.multiindex method)": [[29, "arkouda.index.MultiIndex.update_hdf", false]], "update_hdf() (arkouda.ipv4 method)": [[28, "arkouda.IPv4.update_hdf", false]], "update_hdf() (arkouda.multiindex method)": [[28, "arkouda.MultiIndex.update_hdf", false]], "update_hdf() (arkouda.pdarray method)": [[28, "arkouda.pdarray.update_hdf", false], [28, "id581", false], [28, "id642", false], [28, "id703", false], [28, "id764", false], [28, "id825", false]], "update_hdf() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.update_hdf", false]], "update_hdf() (arkouda.segarray method)": [[28, "arkouda.SegArray.update_hdf", false]], "update_hdf() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.update_hdf", false]], "update_hdf() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.update_hdf", false]], "update_hdf() (in module arkouda)": [[28, "arkouda.update_hdf", false]], "update_hdf() (in module arkouda.io)": [[31, "arkouda.io.update_hdf", false]], "update_nrows() (arkouda.dataframe method)": [[28, "arkouda.DataFrame.update_nrows", false], [28, "id155", false]], "update_nrows() (arkouda.dataframe.dataframe method)": [[24, "arkouda.dataframe.DataFrame.update_nrows", false]], "upper() (arkouda.strings.strings method)": [[60, "arkouda.strings.Strings.upper", false]], "username_tokenizer (in module arkouda.security)": [[56, "arkouda.security.username_tokenizer", false]], "ushort (class in arkouda.numpy.imports)": [[39, "arkouda.numpy.imports.ushort", false]], "val_suffix (in module arkouda)": [[28, "arkouda.VAL_SUFFIX", false]], "val_suffix (in module arkouda.segarray)": [[57, "arkouda.segarray.VAL_SUFFIX", false]], "validate_key() (arkouda.series method)": [[28, "arkouda.Series.validate_key", false]], "validate_key() (arkouda.series.series method)": [[58, "arkouda.series.Series.validate_key", false]], "validate_val() (arkouda.series method)": [[28, "arkouda.Series.validate_val", false]], "validate_val() (arkouda.series.series method)": [[58, "arkouda.series.Series.validate_val", false]], "value_counts() (arkouda.pdarray method)": [[28, "arkouda.pdarray.value_counts", false], [28, "id582", false], [28, "id643", false], [28, "id704", false], [28, "id765", false], [28, "id826", false]], "value_counts() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.value_counts", false]], "value_counts() (arkouda.series method)": [[28, "arkouda.Series.value_counts", false]], "value_counts() (arkouda.series.series method)": [[58, "arkouda.series.Series.value_counts", false]], "value_counts() (in module arkouda)": [[28, "arkouda.value_counts", false], [99, "arkouda.value_counts", false]], "value_counts() (in module arkouda.numeric)": [[37, "arkouda.numeric.value_counts", false]], "value_counts() (in module arkouda.series)": [[104, "arkouda.Series.value_counts", false]], "values (arkouda.array_api._set_functions.uniqueallresult attribute)": [[13, "arkouda.array_api._set_functions.UniqueAllResult.values", false]], "values (arkouda.array_api._set_functions.uniquecountsresult attribute)": [[13, "arkouda.array_api._set_functions.UniqueCountsResult.values", false]], "values (arkouda.array_api._set_functions.uniqueinverseresult attribute)": [[13, "arkouda.array_api._set_functions.UniqueInverseResult.values", false]], "values (arkouda.dataframe.diffaggregate attribute)": [[24, "arkouda.dataframe.DiffAggregate.values", false]], "values (arkouda.diffaggregate attribute)": [[28, "arkouda.DiffAggregate.values", false]], "var() (arkouda.groupby method)": [[28, "arkouda.GroupBy.var", false], [28, "id266", false], [28, "id310", false], [28, "id354", false], [28, "id398", false], [28, "id442", false], [98, "arkouda.GroupBy.var", false]], "var() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.var", false]], "var() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.var", false]], "var() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.var", false]], "var() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.var", false]], "var() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.var", false]], "var() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.var", false]], "var() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.var", false]], "var() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.var", false]], "var() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.var", false]], "var() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.var", false]], "var() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.var", false]], "var() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.var", false]], "var() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.var", false]], "var() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.var", false]], "var() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.var", false]], "var() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.var", false]], "var() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.var", false]], "var() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.var", false]], "var() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.var", false]], "var() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.var", false]], "var() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.var", false]], "var() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.var", false]], "var() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.var", false]], "var() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.var", false]], "var() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.var", false]], "var() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.var", false]], "var() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.var", false]], "var() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.var", false]], "var() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.var", false]], "var() (arkouda.pdarray method)": [[28, "arkouda.pdarray.var", false], [28, "id583", false], [28, "id644", false], [28, "id705", false], [28, "id766", false], [28, "id827", false], [99, "arkouda.pdarray.var", false]], "var() (arkouda.pdarrayclass.pdarray method)": [[41, "arkouda.pdarrayclass.pdarray.var", false]], "var() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.var", false], [54, "id117", false], [54, "id136", false], [54, "id155", false], [54, "id174", false], [54, "id18", false], [54, "id194", false], [54, "id214", false], [54, "id234", false], [54, "id254", false], [54, "id274", false], [54, "id294", false], [54, "id314", false], [54, "id334", false], [54, "id353", false], [54, "id37", false], [54, "id372", false], [54, "id391", false], [54, "id410", false], [54, "id430", false], [54, "id450", false], [54, "id469", false], [54, "id489", false], [54, "id509", false], [54, "id528", false], [54, "id548", false], [54, "id568", false], [54, "id57", false], [54, "id587", false], [54, "id590", false], [54, "id607", false], [54, "id626", false], [54, "id645", false], [54, "id77", false], [54, "id97", false]], "var() (in module arkouda)": [[28, "arkouda.var", false], [93, "arkouda.var", false]], "var() (in module arkouda.array_api._statistical_functions)": [[15, "arkouda.array_api._statistical_functions.var", false]], "var() (in module arkouda.pdarrayclass)": [[41, "arkouda.pdarrayclass.var", false]], "vecdot() (in module arkouda.array_api.linalg)": [[19, "arkouda.array_api.linalg.vecdot", false]], "vecentropy() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.vecentropy", false]], "view() (arkouda.numpy.imports.bool_ method)": [[39, "arkouda.numpy.imports.bool_.view", false]], "view() (arkouda.numpy.imports.byte method)": [[39, "arkouda.numpy.imports.byte.view", false]], "view() (arkouda.numpy.imports.cdouble method)": [[39, "arkouda.numpy.imports.cdouble.view", false]], "view() (arkouda.numpy.imports.clongdouble method)": [[39, "arkouda.numpy.imports.clongdouble.view", false]], "view() (arkouda.numpy.imports.csingle method)": [[39, "arkouda.numpy.imports.csingle.view", false]], "view() (arkouda.numpy.imports.double method)": [[39, "arkouda.numpy.imports.double.view", false]], "view() (arkouda.numpy.imports.float32 method)": [[39, "arkouda.numpy.imports.float32.view", false]], "view() (arkouda.numpy.imports.float64 method)": [[39, "arkouda.numpy.imports.float64.view", false]], "view() (arkouda.numpy.imports.half method)": [[39, "arkouda.numpy.imports.half.view", false]], "view() (arkouda.numpy.imports.int16 method)": [[39, "arkouda.numpy.imports.int16.view", false]], "view() (arkouda.numpy.imports.int32 method)": [[39, "arkouda.numpy.imports.int32.view", false]], "view() (arkouda.numpy.imports.int64 method)": [[39, "arkouda.numpy.imports.int64.view", false]], "view() (arkouda.numpy.imports.int8 method)": [[39, "arkouda.numpy.imports.int8.view", false]], "view() (arkouda.numpy.imports.int_ method)": [[39, "arkouda.numpy.imports.int_.view", false]], "view() (arkouda.numpy.imports.intc method)": [[39, "arkouda.numpy.imports.intc.view", false]], "view() (arkouda.numpy.imports.longdouble method)": [[39, "arkouda.numpy.imports.longdouble.view", false]], "view() (arkouda.numpy.imports.longlong method)": [[39, "arkouda.numpy.imports.longlong.view", false]], "view() (arkouda.numpy.imports.short method)": [[39, "arkouda.numpy.imports.short.view", false]], "view() (arkouda.numpy.imports.single method)": [[39, "arkouda.numpy.imports.single.view", false]], "view() (arkouda.numpy.imports.ubyte method)": [[39, "arkouda.numpy.imports.ubyte.view", false]], "view() (arkouda.numpy.imports.uint method)": [[39, "arkouda.numpy.imports.uint.view", false]], "view() (arkouda.numpy.imports.uint16 method)": [[39, "arkouda.numpy.imports.uint16.view", false]], "view() (arkouda.numpy.imports.uint32 method)": [[39, "arkouda.numpy.imports.uint32.view", false]], "view() (arkouda.numpy.imports.uint64 method)": [[39, "arkouda.numpy.imports.uint64.view", false]], "view() (arkouda.numpy.imports.uint8 method)": [[39, "arkouda.numpy.imports.uint8.view", false]], "view() (arkouda.numpy.imports.uintc method)": [[39, "arkouda.numpy.imports.uintc.view", false]], "view() (arkouda.numpy.imports.ulonglong method)": [[39, "arkouda.numpy.imports.ulonglong.view", false]], "view() (arkouda.numpy.imports.ushort method)": [[39, "arkouda.numpy.imports.ushort.view", false]], "warn (arkouda.logger.loglevel attribute)": [[34, "arkouda.logger.LogLevel.WARN", false]], "warn (arkouda.loglevel attribute)": [[28, "arkouda.LogLevel.WARN", false]], "week (arkouda.datetime property)": [[28, "arkouda.Datetime.week", false], [28, "id171", false], [28, "id204", false]], "week (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.week", false]], "weekday (arkouda.datetime property)": [[28, "arkouda.Datetime.weekday", false], [28, "id172", false], [28, "id205", false]], "weekday (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.weekday", false]], "weekofyear (arkouda.datetime property)": [[28, "arkouda.Datetime.weekofyear", false], [28, "id173", false], [28, "id206", false]], "weekofyear (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.weekofyear", false]], "where() (in module arkouda)": [[28, "arkouda.where", false], [28, "id835", false], [28, "id836", false], [93, "arkouda.where", false]], "where() (in module arkouda.array_api._searching_functions)": [[12, "arkouda.array_api._searching_functions.where", false]], "where() (in module arkouda.numeric)": [[37, "arkouda.numeric.where", false]], "write_line_to_file() (in module arkouda.io_util)": [[32, "arkouda.io_util.write_line_to_file", false]], "write_log() (in module arkouda)": [[28, "arkouda.write_log", false]], "write_log() (in module arkouda.logger)": [[34, "arkouda.logger.write_log", false]], "xlogy() (in module arkouda)": [[28, "arkouda.xlogy", false]], "xlogy() (in module arkouda.scipy.special)": [[53, "arkouda.scipy.special.xlogy", false]], "xlogy() (in module arkouda.scipy.special._math)": [[52, "arkouda.scipy.special._math.xlogy", false]], "xor() (arkouda.groupby method)": [[28, "arkouda.GroupBy.XOR", false], [28, "id236", false], [28, "id280", false], [28, "id324", false], [28, "id368", false], [28, "id412", false], [98, "arkouda.GroupBy.XOR", false]], "xor() (arkouda.groupbyclass.groupby method)": [[26, "arkouda.groupbyclass.GroupBy.XOR", false]], "xor() (arkouda.segarray method)": [[28, "arkouda.SegArray.XOR", false]], "xor() (arkouda.segarray.segarray method)": [[57, "arkouda.segarray.SegArray.XOR", false]], "xtol() (arkouda.scipy.stats.imports.chi2 method)": [[54, "arkouda.scipy.stats.imports.chi2.xtol", false]], "year (arkouda.datetime property)": [[28, "arkouda.Datetime.year", false], [28, "id174", false], [28, "id207", false]], "year (arkouda.timeclass.datetime property)": [[61, "arkouda.timeclass.Datetime.year", false]], "zero_up() (in module arkouda)": [[28, "arkouda.zero_up", false]], "zero_up() (in module arkouda.alignment)": [[3, "arkouda.alignment.zero_up", false]], "zeros() (in module arkouda)": [[28, "arkouda.zeros", false], [28, "id837", false], [28, "id838", false], [28, "id839", false], [96, "arkouda.zeros", false]], "zeros() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.zeros", false]], "zeros() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.zeros", false]], "zeros_like() (in module arkouda)": [[28, "arkouda.zeros_like", false], [96, "arkouda.zeros_like", false]], "zeros_like() (in module arkouda.array_api._creation_functions)": [[6, "arkouda.array_api._creation_functions.zeros_like", false]], "zeros_like() (in module arkouda.pdarraycreation)": [[42, "arkouda.pdarraycreation.zeros_like", false]]}, "objects": {"": [[28, 0, 0, "-", "arkouda"]], "arkouda": [[28, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [28, 1, 1, "", "AllSymbols"], [94, 2, 1, "", "ArrayView"], [28, 2, 1, "", "BitVector"], [28, 5, 1, "", "BitVectorizer"], [28, 2, 1, "", "CachedAccessor"], [95, 2, 1, "", "Categorical"], [28, 1, 1, "", "DTypeObjects"], [28, 1, 1, "", "DTypes"], [97, 2, 1, "", "DataFrame"], [28, 2, 1, "id189", "Datetime"], [28, 2, 1, "", "DatetimeAccessor"], [28, 2, 1, "", "DiffAggregate"], [28, 2, 1, "", "ErrorMode"], [28, 2, 1, "", "Fields"], [28, 1, 1, "", "GROUPBY_REDUCTION_TYPES"], [28, 2, 1, "", "Generator"], [98, 2, 1, "", "GroupBy"], [28, 2, 1, "", "IPv4"], [91, 2, 1, "", "Index"], [28, 1, 1, "", "LEN_SUFFIX"], [28, 2, 1, "", "LogLevel"], [28, 2, 1, "", "MultiIndex"], [28, 7, 1, "", "NonUniqueError"], [28, 2, 1, "", "Power_divergenceResult"], [28, 2, 1, "", "Properties"], [28, 1, 1, "", "RegisteredSymbols"], [28, 7, 1, "id448", "RegistrationError"], [28, 2, 1, "", "Row"], [28, 1, 1, "", "SEG_SUFFIX"], [28, 1, 1, "", "ScalarDTypes"], [28, 2, 1, "", "SegArray"], [104, 2, 1, "", "Series"], [28, 2, 1, "", "StringAccessor"], [28, 2, 1, "id449", "Timedelta"], [28, 1, 1, "", "VAL_SUFFIX"], [93, 5, 1, "", "abs"], [2, 0, 0, "-", "accessor"], [28, 5, 1, "", "akabs"], [28, 1, 1, "id471", "akbool"], [28, 5, 1, "id472", "akcast"], [28, 1, 1, "id473", "akfloat64"], [28, 1, 1, "id475", "akint64"], [28, 1, 1, "id477", "akuint64"], [28, 5, 1, "", "align"], [3, 0, 0, "-", "alignment"], [93, 5, 1, "", "all"], [28, 1, 1, "", "all_scalars"], [93, 5, 1, "", "any"], [96, 5, 1, "", "arange"], [28, 5, 1, "", "arccos"], [28, 5, 1, "", "arccosh"], [28, 5, 1, "", "arcsin"], [28, 5, 1, "", "arcsinh"], [28, 5, 1, "", "arctan"], [28, 5, 1, "", "arctan2"], [28, 5, 1, "", "arctanh"], [93, 5, 1, "", "argmax"], [93, 5, 1, "", "argmaxk"], [93, 5, 1, "", "argmin"], [93, 5, 1, "", "argmink"], [92, 5, 1, "", "argsort"], [90, 5, 1, "", "array"], [18, 0, 0, "-", "array_api"], [20, 0, 0, "-", "array_view"], [28, 5, 1, "", "attach"], [28, 5, 1, "", "attach_all"], [28, 5, 1, "", "attach_pdarray"], [28, 1, 1, "id488", "bigint"], [28, 5, 1, "", "bigint_from_uint_arrays"], [28, 1, 1, "id489", "bitType"], [28, 1, 1, "", "bool"], [28, 1, 1, "", "bool_scalars"], [28, 5, 1, "id492", "broadcast"], [28, 5, 1, "", "broadcast_dims"], [28, 5, 1, "", "broadcast_to_shape"], [101, 5, 1, "", "cast"], [21, 0, 0, "-", "categorical"], [28, 5, 1, "", "ceil"], [28, 5, 1, "", "check_np_dtype"], [28, 5, 1, "", "chisquare"], [28, 5, 1, "", "clear"], [22, 0, 0, "-", "client"], [23, 0, 0, "-", "client_dtypes"], [28, 5, 1, "", "clip"], [28, 5, 1, "", "clz"], [92, 5, 1, "", "coargsort"], [28, 1, 1, "", "complex128"], [28, 1, 1, "", "complex64"], [28, 5, 1, "", "compute_join_size"], [96, 5, 1, "", "concatenate"], [106, 5, 1, "", "connect"], [28, 5, 1, "", "convert_if_categorical"], [28, 5, 1, "", "corr"], [93, 5, 1, "", "cos"], [28, 5, 1, "", "cosh"], [28, 5, 1, "", "cov"], [28, 5, 1, "id500", "create_pdarray"], [28, 5, 1, "", "ctz"], [93, 5, 1, "", "cumprod"], [93, 5, 1, "", "cumsum"], [24, 0, 0, "-", "dataframe"], [28, 5, 1, "", "date_operators"], [28, 5, 1, "id502", "date_range"], [28, 5, 1, "", "deg2rad"], [28, 5, 1, "", "disableVerbose"], [28, 5, 1, "", "divmod"], [28, 5, 1, "", "dot"], [28, 5, 1, "", "dtype"], [25, 0, 0, "-", "dtypes"], [28, 5, 1, "", "enableVerbose"], [93, 5, 1, "", "exp"], [28, 5, 1, "", "expm1"], [90, 5, 1, "", "export"], [28, 5, 1, "", "find"], [28, 1, 1, "", "float32"], [28, 1, 1, "", "float64"], [28, 1, 1, "", "float_scalars"], [28, 5, 1, "", "floor"], [28, 5, 1, "", "fmod"], [28, 5, 1, "id503", "from_series"], [28, 5, 1, "id504", "full"], [28, 5, 1, "", "full_like"], [28, 5, 1, "id505", "gen_ranges"], [28, 5, 1, "", "generic_concat"], [28, 5, 1, "", "getArkoudaLogger"], [28, 5, 1, "", "get_byteorder"], [28, 5, 1, "", "get_callback"], [28, 5, 1, "", "get_columns"], [90, 5, 1, "", "get_datasets"], [28, 5, 1, "", "get_filetype"], [28, 5, 1, "", "get_null_indices"], [28, 5, 1, "", "get_server_byteorder"], [26, 0, 0, "-", "groupbyclass"], [28, 5, 1, "", "hash"], [28, 5, 1, "", "hist_all"], [99, 5, 1, "", "histogram"], [28, 5, 1, "", "histogram2d"], [28, 5, 1, "", "histogramdd"], [27, 0, 0, "-", "history"], [90, 5, 1, "", "import_data"], [105, 5, 1, "", "in1d"], [28, 5, 1, "", "in1d_intervals"], [29, 0, 0, "-", "index"], [28, 5, 1, "", "indexof1d"], [30, 0, 0, "-", "infoclass"], [28, 5, 1, "", "information"], [28, 1, 1, "", "int16"], [28, 1, 1, "", "int32"], [28, 1, 1, "id509", "int64"], [28, 1, 1, "", "int8"], [28, 1, 1, "id511", "intTypes"], [28, 1, 1, "id513", "int_scalars"], [28, 5, 1, "", "intersect"], [105, 5, 1, "", "intersect1d"], [28, 5, 1, "", "interval_lookup"], [28, 5, 1, "", "intx"], [28, 5, 1, "", "invert_permutation"], [31, 0, 0, "-", "io"], [32, 0, 0, "-", "io_util"], [28, 5, 1, "", "ip_address"], [28, 5, 1, "id515", "isSupportedInt"], [28, 5, 1, "", "isSupportedNumber"], [28, 5, 1, "", "is_cosorted"], [28, 5, 1, "", "is_ipv4"], [28, 5, 1, "", "is_ipv6"], [28, 5, 1, "", "is_registered"], [93, 5, 1, "", "is_sorted"], [28, 5, 1, "", "isfinite"], [28, 5, 1, "", "isinf"], [28, 5, 1, "id517", "isnan"], [33, 0, 0, "-", "join"], [28, 5, 1, "", "join_on_eq_with_dt"], [28, 5, 1, "", "left_align"], [96, 5, 1, "", "linspace"], [28, 5, 1, "", "list_registry"], [28, 5, 1, "", "list_symbol_table"], [28, 5, 1, "", "load"], [28, 5, 1, "", "load_all"], [93, 5, 1, "", "log"], [28, 5, 1, "", "log10"], [28, 5, 1, "", "log1p"], [28, 5, 1, "", "log2"], [34, 0, 0, "-", "logger"], [28, 5, 1, "", "lookup"], [28, 5, 1, "", "ls"], [28, 5, 1, "", "ls_csv"], [35, 0, 0, "-", "match"], [36, 0, 0, "-", "matcher"], [93, 5, 1, "", "max"], [93, 5, 1, "", "maxk"], [93, 5, 1, "", "mean"], [28, 5, 1, "", "merge"], [93, 5, 1, "", "min"], [93, 5, 1, "", "mink"], [28, 5, 1, "", "mod"], [37, 0, 0, "-", "numeric"], [28, 1, 1, "", "numeric_scalars"], [40, 0, 0, "-", "numpy"], [28, 1, 1, "", "numpy_scalars"], [96, 5, 1, "", "ones"], [96, 5, 1, "", "ones_like"], [28, 5, 1, "", "parity"], [101, 2, 1, "", "pdarray"], [41, 0, 0, "-", "pdarrayclass"], [42, 0, 0, "-", "pdarraycreation"], [43, 0, 0, "-", "pdarraysetops"], [28, 5, 1, "", "plot_dist"], [44, 0, 0, "-", "plotting"], [28, 5, 1, "", "popcount"], [28, 5, 1, "", "power"], [28, 5, 1, "", "power_divergence"], [28, 5, 1, "", "pretty_print_information"], [93, 5, 1, "", "prod"], [28, 5, 1, "", "rad2deg"], [96, 5, 1, "", "randint"], [47, 0, 0, "-", "random"], [28, 5, 1, "", "random_strings_lognormal"], [28, 5, 1, "", "random_strings_uniform"], [90, 5, 1, "", "read"], [28, 5, 1, "", "read_csv"], [28, 5, 1, "", "read_hdf"], [28, 5, 1, "", "read_parquet"], [28, 5, 1, "", "read_tagged_data"], [28, 5, 1, "", "receive"], [28, 5, 1, "", "receive_dataframe"], [28, 5, 1, "", "register_all"], [28, 5, 1, "", "resolve_scalar_dtype"], [28, 5, 1, "", "restore"], [28, 5, 1, "", "right_align"], [28, 5, 1, "", "rotl"], [28, 5, 1, "", "rotr"], [28, 5, 1, "", "round"], [48, 0, 0, "-", "row"], [28, 5, 1, "", "save_all"], [51, 0, 0, "-", "scipy"], [28, 5, 1, "", "search_intervals"], [56, 0, 0, "-", "security"], [57, 0, 0, "-", "segarray"], [58, 0, 0, "-", "series"], [105, 5, 1, "", "setdiff1d"], [105, 5, 1, "", "setxor1d"], [28, 5, 1, "", "sign"], [93, 5, 1, "", "sin"], [28, 5, 1, "", "sinh"], [28, 5, 1, "", "skew"], [28, 5, 1, "", "snapshot"], [28, 5, 1, "", "sort"], [59, 0, 0, "-", "sorting"], [28, 5, 1, "", "sqrt"], [28, 5, 1, "", "square"], [28, 5, 1, "id829", "standard_normal"], [93, 5, 1, "", "std"], [28, 1, 1, "id830", "str_"], [28, 1, 1, "", "str_scalars"], [28, 5, 1, "", "string_operators"], [60, 0, 0, "-", "strings"], [93, 5, 1, "", "sum"], [28, 5, 1, "", "tan"], [28, 5, 1, "", "tanh"], [61, 0, 0, "-", "timeclass"], [28, 5, 1, "id831", "timedelta_range"], [28, 5, 1, "", "to_csv"], [28, 5, 1, "", "to_hdf"], [28, 5, 1, "", "to_parquet"], [28, 5, 1, "", "translate_np_dtype"], [28, 5, 1, "", "trunc"], [28, 1, 1, "", "uint16"], [28, 1, 1, "", "uint32"], [28, 1, 1, "", "uint64"], [28, 1, 1, "", "uint8"], [28, 5, 1, "id832", "uniform"], [105, 5, 1, "", "union1d"], [105, 5, 1, "", "unique"], [28, 5, 1, "", "unregister"], [28, 5, 1, "", "unregister_all"], [28, 5, 1, "", "unregister_pdarray_by_name"], [28, 5, 1, "", "unsqueeze"], [28, 5, 1, "", "update_hdf"], [62, 0, 0, "-", "util"], [99, 5, 1, "", "value_counts"], [93, 5, 1, "", "var"], [93, 5, 1, "", "where"], [28, 5, 1, "", "write_log"], [28, 5, 1, "", "xlogy"], [28, 5, 1, "", "zero_up"], [96, 5, 1, "", "zeros"], [96, 5, 1, "", "zeros_like"]], "arkouda.ArrayView": [[94, 3, 1, "", "base"], [94, 3, 1, "", "dtype"], [94, 3, 1, "", "itemsize"], [94, 3, 1, "", "ndim"], [28, 3, 1, "", "objType"], [94, 3, 1, "", "order"], [94, 3, 1, "", "shape"], [94, 3, 1, "", "size"], [28, 4, 1, "", "to_hdf"], [28, 4, 1, "", "to_list"], [94, 5, 1, "", "to_ndarray"], [28, 4, 1, "", "update_hdf"]], "arkouda.BitVector": [[28, 3, 1, "", "conserves"], [28, 4, 1, "", "format"], [28, 4, 1, "", "from_return_msg"], [28, 4, 1, "", "opeq"], [28, 4, 1, "", "register"], [28, 3, 1, "", "special_objType"], [28, 4, 1, "", "to_list"], [28, 4, 1, "", "to_ndarray"]], "arkouda.Categorical": [[28, 3, 1, "id61", "BinOps"], [28, 3, 1, "id62", "RegisterablePieces"], [28, 3, 1, "id63", "RequiredPieces"], [28, 4, 1, "id68", "argsort"], [28, 4, 1, "id69", "attach"], [95, 3, 1, "", "categories"], [95, 3, 1, "", "codes"], [28, 4, 1, "id70", "concatenate"], [95, 4, 1, "", "contains"], [28, 3, 1, "id64", "dtype"], [95, 4, 1, "", "endswith"], [95, 4, 1, "", "from_codes"], [28, 4, 1, "id74", "from_return_msg"], [28, 4, 1, "id75", "group"], [28, 4, 1, "id76", "hash"], [28, 4, 1, "id77", "in1d"], [28, 4, 1, "id78", "info"], [28, 4, 1, "id79", "is_registered"], [28, 4, 1, "id80", "isna"], [28, 6, 1, "id60", "nbytes"], [95, 3, 1, "", "ndim"], [95, 3, 1, "", "nlevels"], [28, 3, 1, "id65", "objType"], [28, 4, 1, "id81", "parse_hdf_categoricals"], [95, 3, 1, "", "permutation"], [28, 4, 1, "id82", "pretty_print_info"], [28, 4, 1, "id83", "register"], [28, 4, 1, "id84", "reset_categories"], [28, 4, 1, "id85", "save"], [95, 3, 1, "", "segments"], [28, 4, 1, "id86", "set_categories"], [95, 3, 1, "", "shape"], [95, 3, 1, "", "size"], [28, 4, 1, "id87", "sort"], [28, 4, 1, "id88", "standardize_categories"], [95, 4, 1, "", "startswith"], [28, 4, 1, "id90", "to_hdf"], [28, 4, 1, "id91", "to_list"], [95, 5, 1, "", "to_ndarray"], [28, 4, 1, "id93", "to_parquet"], [28, 4, 1, "id94", "to_strings"], [28, 4, 1, "id95", "transfer"], [28, 4, 1, "id96", "unique"], [28, 4, 1, "id97", "unregister"], [28, 4, 1, "id98", "unregister_categorical_by_name"], [28, 4, 1, "id99", "update_hdf"]], "arkouda.DataFrame": [[28, 4, 1, "id109", "GroupBy"], [28, 4, 1, "id110", "all"], [28, 4, 1, "id111", "any"], [28, 4, 1, "id112", "append"], [97, 5, 1, "", "apply_permutation"], [97, 5, 1, "", "argsort"], [28, 4, 1, "id115", "attach"], [97, 5, 1, "", "coargsort"], [28, 6, 1, "id101", "columns"], [97, 5, 1, "", "concat"], [97, 5, 1, "", "copy"], [28, 4, 1, "id119", "corr"], [28, 4, 1, "id120", "count"], [97, 5, 1, "", "drop"], [97, 5, 1, "", "drop_duplicates"], [28, 4, 1, "id123", "dropna"], [28, 6, 1, "id102", "dtypes"], [28, 6, 1, "id103", "empty"], [28, 4, 1, "id124", "filter_by_range"], [28, 4, 1, "id125", "from_pandas"], [28, 4, 1, "id126", "from_return_msg"], [97, 5, 1, "", "groupby"], [97, 5, 1, "", "head"], [28, 6, 1, "id104", "index"], [28, 6, 1, "id105", "info"], [28, 4, 1, "id129", "is_registered"], [28, 4, 1, "id130", "isin"], [28, 4, 1, "id131", "isna"], [28, 4, 1, "id132", "load"], [28, 4, 1, "id133", "memory_usage"], [28, 4, 1, "id134", "memory_usage_info"], [28, 4, 1, "id135", "merge"], [28, 4, 1, "id136", "notna"], [28, 3, 1, "id108", "objType"], [28, 4, 1, "id137", "read_csv"], [28, 4, 1, "id138", "register"], [97, 5, 1, "", "rename"], [97, 5, 1, "", "reset_index"], [28, 4, 1, "id141", "sample"], [28, 4, 1, "id142", "save"], [28, 6, 1, "id106", "shape"], [28, 6, 1, "id107", "size"], [28, 4, 1, "id143", "sort_index"], [97, 5, 1, "", "sort_values"], [97, 5, 1, "", "tail"], [28, 4, 1, "id146", "to_csv"], [28, 4, 1, "id147", "to_hdf"], [28, 4, 1, "id148", "to_markdown"], [97, 5, 1, "", "to_pandas"], [28, 4, 1, "id150", "to_parquet"], [28, 4, 1, "id151", "transfer"], [28, 4, 1, "id152", "unregister"], [28, 4, 1, "id153", "unregister_dataframe_by_name"], [28, 4, 1, "id154", "update_hdf"], [28, 4, 1, "id155", "update_nrows"]], "arkouda.Datetime": [[28, 6, 1, "id190", "date"], [28, 6, 1, "id191", "day"], [28, 6, 1, "id192", "day_of_week"], [28, 6, 1, "id193", "day_of_year"], [28, 6, 1, "id194", "dayofweek"], [28, 6, 1, "id195", "dayofyear"], [28, 6, 1, "id196", "hour"], [28, 6, 1, "id197", "is_leap_year"], [28, 4, 1, "id216", "is_registered"], [28, 4, 1, "id217", "isocalendar"], [28, 6, 1, "id198", "microsecond"], [28, 6, 1, "id199", "millisecond"], [28, 6, 1, "id200", "minute"], [28, 6, 1, "id201", "month"], [28, 6, 1, "id202", "nanosecond"], [28, 4, 1, "id218", "register"], [28, 6, 1, "id203", "second"], [28, 3, 1, "id208", "special_objType"], [28, 4, 1, "id219", "sum"], [28, 3, 1, "id209", "supported_opeq"], [28, 3, 1, "id210", "supported_with_datetime"], [28, 3, 1, "id211", "supported_with_pdarray"], [28, 3, 1, "id212", "supported_with_r_datetime"], [28, 3, 1, "id213", "supported_with_r_pdarray"], [28, 3, 1, "id214", "supported_with_r_timedelta"], [28, 3, 1, "id215", "supported_with_timedelta"], [28, 4, 1, "id220", "to_pandas"], [28, 4, 1, "id221", "unregister"], [28, 6, 1, "id204", "week"], [28, 6, 1, "id205", "weekday"], [28, 6, 1, "id206", "weekofyear"], [28, 6, 1, "id207", "year"]], "arkouda.DiffAggregate": [[28, 3, 1, "", "gb"], [28, 3, 1, "", "values"]], "arkouda.ErrorMode": [[28, 3, 1, "", "ignore"], [28, 3, 1, "", "return_validity"], [28, 3, 1, "", "strict"]], "arkouda.Fields": [[28, 4, 1, "", "format"], [28, 4, 1, "", "opeq"]], "arkouda.Generator": [[28, 4, 1, "", "choice"], [28, 4, 1, "", "integers"], [28, 4, 1, "", "permutation"], [28, 4, 1, "", "random"], [28, 4, 1, "", "shuffle"], [28, 4, 1, "", "standard_normal"], [28, 4, 1, "", "uniform"]], "arkouda.GroupBy": [[98, 4, 1, "", "AND"], [98, 4, 1, "", "OR"], [28, 3, 1, "id408", "Reductions"], [98, 4, 1, "", "XOR"], [98, 4, 1, "", "aggregate"], [98, 4, 1, "", "all"], [98, 4, 1, "", "any"], [98, 4, 1, "", "argmax"], [98, 4, 1, "", "argmin"], [98, 4, 1, "", "attach"], [98, 4, 1, "", "broadcast"], [98, 4, 1, "", "build_from_components"], [98, 4, 1, "", "count"], [98, 3, 1, "", "dropna"], [98, 4, 1, "", "first"], [28, 4, 1, "id423", "from_return_msg"], [98, 4, 1, "", "is_registered"], [98, 3, 1, "", "logger"], [98, 4, 1, "", "max"], [98, 4, 1, "", "mean"], [98, 4, 1, "", "median"], [98, 4, 1, "", "min"], [98, 4, 1, "", "mode"], [98, 4, 1, "", "most_common"], [98, 3, 1, "", "ngroups"], [98, 3, 1, "", "nkeys"], [98, 4, 1, "", "nunique"], [28, 3, 1, "id409", "objType"], [98, 3, 1, "", "permutation"], [98, 4, 1, "", "prod"], [98, 4, 1, "", "register"], [98, 3, 1, "", "segments"], [98, 4, 1, "id0", "size"], [98, 4, 1, "", "std"], [98, 4, 1, "", "sum"], [98, 4, 1, "", "to_hdf"], [98, 4, 1, "", "unique"], [98, 3, 1, "", "unique_keys"], [98, 4, 1, "", "unregister"], [98, 4, 1, "", "unregister_groupby_by_name"], [28, 4, 1, "id441", "update_hdf"], [98, 4, 1, "", "var"]], "arkouda.IPv4": [[28, 4, 1, "", "export_uint"], [28, 4, 1, "", "format"], [28, 4, 1, "", "normalize"], [28, 4, 1, "", "opeq"], [28, 4, 1, "", "register"], [28, 3, 1, "", "special_objType"], [28, 4, 1, "", "to_hdf"], [28, 4, 1, "", "to_list"], [28, 4, 1, "", "to_ndarray"], [28, 4, 1, "", "update_hdf"]], "arkouda.Index": [[91, 5, 1, "", "argsort"], [91, 5, 1, "", "concat"], [28, 4, 1, "", "factory"], [28, 4, 1, "", "from_return_msg"], [28, 6, 1, "", "index"], [28, 4, 1, "", "is_registered"], [28, 6, 1, "", "is_unique"], [91, 5, 1, "", "lookup"], [28, 4, 1, "", "map"], [28, 4, 1, "", "memory_usage"], [28, 3, 1, "", "objType"], [28, 4, 1, "", "register"], [28, 4, 1, "", "save"], [91, 5, 1, "", "set_dtype"], [28, 6, 1, "", "shape"], [28, 4, 1, "", "to_csv"], [28, 4, 1, "", "to_dict"], [28, 4, 1, "", "to_hdf"], [28, 4, 1, "", "to_list"], [28, 4, 1, "", "to_ndarray"], [28, 4, 1, "", "to_pandas"], [28, 4, 1, "", "to_parquet"], [28, 4, 1, "", "unregister"], [28, 4, 1, "", "update_hdf"]], "arkouda.LogLevel": [[28, 3, 1, "", "CRITICAL"], [28, 3, 1, "", "DEBUG"], [28, 3, 1, "", "ERROR"], [28, 3, 1, "", "INFO"], [28, 3, 1, "", "WARN"]], "arkouda.MultiIndex": [[91, 5, 1, "", "argsort"], [91, 5, 1, "", "concat"], [28, 6, 1, "", "index"], [28, 4, 1, "", "is_registered"], [91, 5, 1, "", "lookup"], [28, 4, 1, "", "memory_usage"], [28, 3, 1, "", "objType"], [28, 4, 1, "", "register"], [91, 5, 1, "", "set_dtype"], [28, 4, 1, "", "to_dict"], [28, 4, 1, "", "to_hdf"], [28, 4, 1, "", "to_list"], [28, 4, 1, "", "to_ndarray"], [28, 4, 1, "", "to_pandas"], [28, 4, 1, "", "unregister"], [28, 4, 1, "", "update_hdf"]], "arkouda.Power_divergenceResult": [[28, 3, 1, "", "pvalue"], [28, 3, 1, "", "statistic"]], "arkouda.SegArray": [[28, 4, 1, "", "AND"], [28, 4, 1, "", "OR"], [28, 4, 1, "", "XOR"], [28, 4, 1, "", "aggregate"], [28, 4, 1, "", "all"], [28, 4, 1, "", "any"], [103, 5, 1, "", "append"], [103, 5, 1, "", "append_single"], [28, 4, 1, "", "argmax"], [28, 4, 1, "", "argmin"], [28, 4, 1, "", "attach"], [28, 4, 1, "", "concat"], [28, 4, 1, "", "copy"], [28, 4, 1, "", "filter"], [28, 4, 1, "", "from_multi_array"], [28, 4, 1, "", "from_parts"], [28, 4, 1, "", "from_return_msg"], [103, 5, 1, "", "get_jth"], [103, 5, 1, "", "get_length_n"], [103, 5, 1, "", "get_ngrams"], [103, 5, 1, "", "get_prefixes"], [103, 5, 1, "", "get_suffixes"], [28, 6, 1, "", "grouping"], [28, 4, 1, "", "hash"], [103, 5, 1, "", "intersect"], [28, 4, 1, "", "is_registered"], [28, 4, 1, "", "load"], [28, 4, 1, "", "max"], [28, 4, 1, "", "mean"], [28, 4, 1, "", "min"], [28, 6, 1, "", "non_empty"], [28, 4, 1, "", "nunique"], [28, 3, 1, "", "objType"], [103, 5, 1, "", "prepend_single"], [28, 4, 1, "", "prod"], [28, 4, 1, "", "read_hdf"], [28, 4, 1, "", "register"], [103, 5, 1, "", "remove_repeats"], [28, 4, 1, "", "save"], [103, 5, 1, "", "set_jth"], [103, 5, 1, "", "setdiff"], [103, 5, 1, "", "setxor"], [28, 4, 1, "", "sum"], [28, 4, 1, "", "to_hdf"], [28, 4, 1, "", "to_list"], [103, 5, 1, "", "to_ndarray"], [28, 4, 1, "", "to_parquet"], [28, 4, 1, "", "transfer"], [103, 5, 1, "", "union"], [28, 4, 1, "", "unique"], [28, 4, 1, "", "unregister"], [28, 4, 1, "", "unregister_segarray_by_name"], [28, 4, 1, "", "update_hdf"]], "arkouda.Series": [[28, 4, 1, "", "add"], [28, 6, 1, "", "at"], [28, 4, 1, "", "attach"], [28, 4, 1, "", "concat"], [28, 4, 1, "", "diff"], [28, 3, 1, "", "dt"], [28, 4, 1, "", "fillna"], [28, 4, 1, "", "from_return_msg"], [28, 4, 1, "", "has_repeat_labels"], [28, 4, 1, "", "hasnans"], [104, 5, 1, "", "head"], [28, 6, 1, "", "iat"], [28, 6, 1, "", "iloc"], [28, 4, 1, "", "is_registered"], [28, 4, 1, "", "isin"], [28, 4, 1, "", "isna"], [28, 4, 1, "", "isnull"], [28, 6, 1, "", "loc"], [104, 5, 1, "id0", "locate"], [28, 4, 1, "", "map"], [28, 4, 1, "", "memory_usage"], [28, 4, 1, "", "notna"], [28, 4, 1, "", "notnull"], [28, 3, 1, "", "objType"], [104, 5, 1, "", "pdconcat"], [28, 4, 1, "", "register"], [28, 6, 1, "", "shape"], [104, 5, 1, "", "sort_index"], [104, 5, 1, "", "sort_values"], [28, 3, 1, "", "str_acc"], [104, 5, 1, "", "tail"], [28, 4, 1, "", "to_dataframe"], [28, 4, 1, "", "to_list"], [28, 4, 1, "", "to_markdown"], [104, 5, 1, "", "to_pandas"], [104, 5, 1, "", "topn"], [28, 4, 1, "", "unregister"], [28, 4, 1, "", "validate_key"], [28, 4, 1, "", "validate_val"], [104, 5, 1, "", "value_counts"]], "arkouda.Strings": [[107, 4, 1, "", "contains"], [107, 4, 1, "", "endswith"], [107, 4, 1, "", "find_locations"], [107, 4, 1, "", "findall"], [107, 4, 1, "", "flatten"], [107, 4, 1, "", "fullmatch"], [107, 4, 1, "", "lstick"], [107, 4, 1, "", "match"], [107, 4, 1, "", "peel"], [107, 4, 1, "", "rpeel"], [107, 4, 1, "", "search"], [107, 4, 1, "", "split"], [107, 4, 1, "", "startswith"], [107, 4, 1, "", "stick"], [107, 4, 1, "", "sub"], [107, 4, 1, "", "subn"], [107, 5, 1, "", "to_ndarray"]], "arkouda.Timedelta": [[28, 4, 1, "id463", "abs"], [28, 6, 1, "id450", "components"], [28, 6, 1, "id451", "days"], [28, 4, 1, "id464", "is_registered"], [28, 6, 1, "id452", "microseconds"], [28, 6, 1, "id453", "nanoseconds"], [28, 4, 1, "id465", "register"], [28, 6, 1, "id454", "seconds"], [28, 3, 1, "id455", "special_objType"], [28, 4, 1, "id466", "std"], [28, 4, 1, "id467", "sum"], [28, 3, 1, "id456", "supported_opeq"], [28, 3, 1, "id457", "supported_with_datetime"], [28, 3, 1, "id458", "supported_with_pdarray"], [28, 3, 1, "id459", "supported_with_r_datetime"], [28, 3, 1, "id460", "supported_with_r_pdarray"], [28, 3, 1, "id461", "supported_with_r_timedelta"], [28, 3, 1, "id462", "supported_with_timedelta"], [28, 4, 1, "id468", "to_pandas"], [28, 4, 1, "id469", "total_seconds"], [28, 4, 1, "id470", "unregister"]], "arkouda.accessor": [[2, 2, 1, "", "CachedAccessor"], [2, 2, 1, "", "DatetimeAccessor"], [2, 2, 1, "", "Properties"], [2, 2, 1, "", "StringAccessor"], [2, 5, 1, "", "date_operators"], [2, 5, 1, "", "string_operators"]], "arkouda.alignment": [[3, 7, 1, "", "NonUniqueError"], [3, 5, 1, "", "align"], [3, 5, 1, "", "find"], [3, 5, 1, "", "in1d_intervals"], [3, 5, 1, "", "interval_lookup"], [3, 5, 1, "", "is_cosorted"], [3, 5, 1, "", "left_align"], [3, 5, 1, "", "lookup"], [3, 5, 1, "", "right_align"], [3, 5, 1, "", "search_intervals"], [3, 5, 1, "", "unsqueeze"], [3, 5, 1, "", "zero_up"]], "arkouda.array_api": [[4, 0, 0, "-", "_array_object"], [5, 0, 0, "-", "_constants"], [6, 0, 0, "-", "_creation_functions"], [7, 0, 0, "-", "_data_type_functions"], [8, 0, 0, "-", "_dtypes"], [9, 0, 0, "-", "_elementwise_functions"], [10, 0, 0, "-", "_indexing_functions"], [11, 0, 0, "-", "_manipulation_functions"], [12, 0, 0, "-", "_searching_functions"], [13, 0, 0, "-", "_set_functions"], [14, 0, 0, "-", "_sorting_functions"], [15, 0, 0, "-", "_statistical_functions"], [16, 0, 0, "-", "_typing"], [17, 0, 0, "-", "_utility_functions"], [19, 0, 0, "-", "linalg"]], "arkouda.array_api._array_object": [[4, 2, 1, "", "Array"], [4, 1, 1, "", "HANDLED_FUNCTIONS"], [4, 5, 1, "", "implements_numpy"]], "arkouda.array_api._array_object.Array": [[4, 6, 1, "", "T"], [4, 6, 1, "", "device"], [4, 6, 1, "", "dtype"], [4, 4, 1, "", "item"], [4, 6, 1, "", "mT"], [4, 6, 1, "", "ndim"], [4, 6, 1, "", "shape"], [4, 6, 1, "", "size"], [4, 4, 1, "", "to_device"], [4, 4, 1, "", "to_ndarray"], [4, 4, 1, "", "tolist"], [4, 4, 1, "", "transpose"]], "arkouda.array_api._constants": [[5, 1, 1, "", "e"], [5, 1, 1, "", "inf"], [5, 1, 1, "", "nan"], [5, 1, 1, "", "pi"]], "arkouda.array_api._creation_functions": [[6, 5, 1, "", "arange"], [6, 5, 1, "", "asarray"], [6, 5, 1, "", "empty"], [6, 5, 1, "", "empty_like"], [6, 5, 1, "", "eye"], [6, 5, 1, "", "from_dlpack"], [6, 5, 1, "", "full"], [6, 5, 1, "", "full_like"], [6, 5, 1, "", "linspace"], [6, 5, 1, "", "meshgrid"], [6, 5, 1, "", "ones"], [6, 5, 1, "", "ones_like"], [6, 5, 1, "", "tril"], [6, 5, 1, "", "triu"], [6, 5, 1, "", "zeros"], [6, 5, 1, "", "zeros_like"]], "arkouda.array_api._data_type_functions": [[7, 5, 1, "", "astype"], [7, 5, 1, "", "can_cast"], [7, 2, 1, "", "finfo_object"], [7, 2, 1, "", "iinfo_object"], [7, 5, 1, "", "isdtype"], [7, 5, 1, "", "result_type"]], "arkouda.array_api._data_type_functions.finfo_object": [[7, 3, 1, "", "bits"], [7, 3, 1, "", "dtype"], [7, 3, 1, "", "eps"], [7, 3, 1, "", "max"], [7, 3, 1, "", "min"], [7, 3, 1, "", "smallest_normal"]], "arkouda.array_api._data_type_functions.iinfo_object": [[7, 3, 1, "", "bits"], [7, 3, 1, "", "dtype"], [7, 3, 1, "", "max"], [7, 3, 1, "", "min"]], "arkouda.array_api._dtypes": [[8, 1, 1, "", "bool"], [8, 1, 1, "", "complex128"], [8, 1, 1, "", "complex64"], [8, 1, 1, "", "float32"], [8, 1, 1, "", "float64"], [8, 1, 1, "", "int16"], [8, 1, 1, "", "int32"], [8, 1, 1, "", "int64"], [8, 1, 1, "", "int8"], [8, 1, 1, "", "uint16"], [8, 1, 1, "", "uint32"], [8, 1, 1, "", "uint64"], [8, 1, 1, "", "uint8"]], "arkouda.array_api._elementwise_functions": [[9, 5, 1, "", "abs"], [9, 5, 1, "", "acos"], [9, 5, 1, "", "acosh"], [9, 5, 1, "", "add"], [9, 5, 1, "", "asin"], [9, 5, 1, "", "asinh"], [9, 5, 1, "", "atan"], [9, 5, 1, "", "atan2"], [9, 5, 1, "", "atanh"], [9, 5, 1, "", "bitwise_and"], [9, 5, 1, "", "bitwise_invert"], [9, 5, 1, "", "bitwise_left_shift"], [9, 5, 1, "", "bitwise_or"], [9, 5, 1, "", "bitwise_right_shift"], [9, 5, 1, "", "bitwise_xor"], [9, 5, 1, "", "ceil"], [9, 5, 1, "", "conj"], [9, 5, 1, "", "cos"], [9, 5, 1, "", "cosh"], [9, 5, 1, "", "divide"], [9, 5, 1, "", "equal"], [9, 5, 1, "", "exp"], [9, 5, 1, "", "expm1"], [9, 5, 1, "", "floor"], [9, 5, 1, "", "floor_divide"], [9, 5, 1, "", "greater"], [9, 5, 1, "", "greater_equal"], [9, 5, 1, "", "imag"], [9, 5, 1, "", "isfinite"], [9, 5, 1, "", "isinf"], [9, 5, 1, "", "isnan"], [9, 5, 1, "", "less"], [9, 5, 1, "", "less_equal"], [9, 5, 1, "", "log"], [9, 5, 1, "", "log10"], [9, 5, 1, "", "log1p"], [9, 5, 1, "", "log2"], [9, 5, 1, "", "logaddexp"], [9, 5, 1, "", "logical_and"], [9, 5, 1, "", "logical_not"], [9, 5, 1, "", "logical_or"], [9, 5, 1, "", "logical_xor"], [9, 5, 1, "", "multiply"], [9, 5, 1, "", "negative"], [9, 5, 1, "", "not_equal"], [9, 5, 1, "", "positive"], [9, 5, 1, "", "pow"], [9, 5, 1, "", "real"], [9, 5, 1, "", "remainder"], [9, 5, 1, "", "round"], [9, 5, 1, "", "sign"], [9, 5, 1, "", "sin"], [9, 5, 1, "", "sinh"], [9, 5, 1, "", "sqrt"], [9, 5, 1, "", "square"], [9, 5, 1, "", "subtract"], [9, 5, 1, "", "tan"], [9, 5, 1, "", "tanh"], [9, 5, 1, "", "trunc"]], "arkouda.array_api._indexing_functions": [[10, 5, 1, "", "take"]], "arkouda.array_api._manipulation_functions": [[11, 5, 1, "", "broadcast_arrays"], [11, 5, 1, "", "broadcast_to"], [11, 5, 1, "", "concat"], [11, 5, 1, "", "expand_dims"], [11, 5, 1, "", "flip"], [11, 5, 1, "", "moveaxis"], [11, 5, 1, "", "permute_dims"], [11, 5, 1, "", "repeat"], [11, 5, 1, "", "reshape"], [11, 5, 1, "", "roll"], [11, 5, 1, "", "squeeze"], [11, 5, 1, "", "stack"], [11, 5, 1, "", "tile"], [11, 5, 1, "", "unstack"]], "arkouda.array_api._searching_functions": [[12, 5, 1, "", "argmax"], [12, 5, 1, "", "argmin"], [12, 5, 1, "", "nonzero"], [12, 5, 1, "", "searchsorted"], [12, 5, 1, "", "where"]], "arkouda.array_api._set_functions": [[13, 2, 1, "", "UniqueAllResult"], [13, 2, 1, "", "UniqueCountsResult"], [13, 2, 1, "", "UniqueInverseResult"], [13, 5, 1, "", "unique_all"], [13, 5, 1, "", "unique_counts"], [13, 5, 1, "", "unique_inverse"], [13, 5, 1, "", "unique_values"]], "arkouda.array_api._set_functions.UniqueAllResult": [[13, 3, 1, "", "counts"], [13, 3, 1, "", "indices"], [13, 3, 1, "", "inverse_indices"], [13, 3, 1, "", "values"]], "arkouda.array_api._set_functions.UniqueCountsResult": [[13, 3, 1, "", "counts"], [13, 3, 1, "", "values"]], "arkouda.array_api._set_functions.UniqueInverseResult": [[13, 3, 1, "", "inverse_indices"], [13, 3, 1, "", "values"]], "arkouda.array_api._sorting_functions": [[14, 5, 1, "", "argsort"], [14, 5, 1, "", "sort"]], "arkouda.array_api._statistical_functions": [[15, 5, 1, "", "max"], [15, 5, 1, "", "mean"], [15, 5, 1, "", "mean_shim"], [15, 5, 1, "", "min"], [15, 5, 1, "", "prod"], [15, 5, 1, "", "prod_sum_dtype"], [15, 5, 1, "", "std"], [15, 5, 1, "", "sum"], [15, 5, 1, "", "var"]], "arkouda.array_api._typing": [[16, 2, 1, "", "Array"], [16, 1, 1, "", "Device"], [16, 1, 1, "", "Dtype"], [16, 1, 1, "", "PyCapsule"], [16, 1, 1, "", "SupportsBufferProtocol"], [16, 2, 1, "", "SupportsDLPack"]], "arkouda.array_api._typing.Array": [[16, 6, 1, "", "T"], [16, 6, 1, "", "device"], [16, 6, 1, "", "dtype"], [16, 4, 1, "", "item"], [16, 6, 1, "", "mT"], [16, 6, 1, "", "ndim"], [16, 6, 1, "", "shape"], [16, 6, 1, "", "size"], [16, 4, 1, "", "to_device"], [16, 4, 1, "", "to_ndarray"], [16, 4, 1, "", "tolist"], [16, 4, 1, "", "transpose"]], "arkouda.array_api._utility_functions": [[17, 5, 1, "", "all"], [17, 5, 1, "", "any"]], "arkouda.array_api.linalg": [[19, 5, 1, "", "matmul"], [19, 5, 1, "", "matrix_transpose"], [19, 5, 1, "", "tensordot"], [19, 5, 1, "", "vecdot"]], "arkouda.array_view": [[20, 2, 1, "", "ArrayView"]], "arkouda.array_view.ArrayView": [[20, 3, 1, "", "base"], [20, 3, 1, "", "dtype"], [20, 3, 1, "", "itemsize"], [20, 3, 1, "", "ndim"], [20, 3, 1, "", "objType"], [20, 3, 1, "", "order"], [20, 3, 1, "", "shape"], [20, 3, 1, "", "size"], [20, 4, 1, "", "to_hdf"], [20, 4, 1, "", "to_list"], [20, 4, 1, "", "to_ndarray"], [20, 4, 1, "", "update_hdf"]], "arkouda.categorical": [[21, 2, 1, "", "Categorical"]], "arkouda.categorical.Categorical": [[21, 3, 1, "", "BinOps"], [21, 3, 1, "", "RegisterablePieces"], [21, 3, 1, "", "RequiredPieces"], [21, 4, 1, "", "argsort"], [21, 4, 1, "", "attach"], [21, 3, 1, "", "categories"], [21, 3, 1, "", "codes"], [21, 4, 1, "", "concatenate"], [21, 4, 1, "", "contains"], [21, 3, 1, "", "dtype"], [21, 4, 1, "", "endswith"], [21, 4, 1, "", "from_codes"], [21, 4, 1, "", "from_return_msg"], [21, 4, 1, "", "group"], [21, 4, 1, "", "hash"], [21, 4, 1, "", "in1d"], [21, 4, 1, "", "info"], [21, 4, 1, "", "is_registered"], [21, 4, 1, "", "isna"], [21, 6, 1, "", "nbytes"], [21, 3, 1, "", "ndim"], [21, 3, 1, "", "nlevels"], [21, 3, 1, "", "objType"], [21, 4, 1, "", "parse_hdf_categoricals"], [21, 3, 1, "id0", "permutation"], [21, 4, 1, "", "pretty_print_info"], [21, 4, 1, "", "register"], [21, 4, 1, "", "reset_categories"], [21, 4, 1, "", "save"], [21, 3, 1, "id1", "segments"], [21, 4, 1, "", "set_categories"], [21, 3, 1, "", "shape"], [21, 3, 1, "", "size"], [21, 4, 1, "", "sort"], [21, 4, 1, "", "standardize_categories"], [21, 4, 1, "", "startswith"], [21, 4, 1, "", "to_hdf"], [21, 4, 1, "", "to_list"], [21, 4, 1, "", "to_ndarray"], [21, 4, 1, "", "to_parquet"], [21, 4, 1, "", "to_strings"], [21, 4, 1, "", "transfer"], [21, 4, 1, "", "unique"], [21, 4, 1, "", "unregister"], [21, 4, 1, "", "unregister_categorical_by_name"], [21, 4, 1, "", "update_hdf"]], "arkouda.client": [[22, 5, 1, "", "connect"], [22, 5, 1, "", "disconnect"], [22, 5, 1, "", "generate_history"], [22, 5, 1, "", "get_config"], [22, 5, 1, "", "get_mem_avail"], [22, 5, 1, "", "get_mem_status"], [22, 5, 1, "", "get_mem_used"], [22, 5, 1, "", "get_server_commands"], [22, 5, 1, "", "print_server_commands"], [22, 5, 1, "", "ruok"], [22, 5, 1, "", "shutdown"]], "arkouda.client_dtypes": [[23, 2, 1, "", "BitVector"], [23, 5, 1, "", "BitVectorizer"], [23, 2, 1, "", "Fields"], [23, 2, 1, "", "IPv4"], [23, 5, 1, "", "ip_address"], [23, 5, 1, "", "is_ipv4"], [23, 5, 1, "", "is_ipv6"]], "arkouda.client_dtypes.BitVector": [[23, 3, 1, "", "conserves"], [23, 4, 1, "", "format"], [23, 4, 1, "", "from_return_msg"], [23, 4, 1, "", "opeq"], [23, 4, 1, "", "register"], [23, 3, 1, "", "special_objType"], [23, 4, 1, "", "to_list"], [23, 4, 1, "", "to_ndarray"]], "arkouda.client_dtypes.Fields": [[23, 4, 1, "", "format"], [23, 4, 1, "", "opeq"]], "arkouda.client_dtypes.IPv4": [[23, 4, 1, "", "export_uint"], [23, 4, 1, "", "format"], [23, 4, 1, "", "normalize"], [23, 4, 1, "", "opeq"], [23, 4, 1, "", "register"], [23, 3, 1, "", "special_objType"], [23, 4, 1, "", "to_hdf"], [23, 4, 1, "", "to_list"], [23, 4, 1, "", "to_ndarray"], [23, 4, 1, "", "update_hdf"]], "arkouda.dataframe": [[24, 2, 1, "", "DataFrame"], [24, 2, 1, "", "DiffAggregate"], [24, 5, 1, "", "intersect"], [24, 5, 1, "", "intx"], [24, 5, 1, "", "invert_permutation"], [24, 5, 1, "", "merge"]], "arkouda.dataframe.DataFrame": [[24, 4, 1, "", "GroupBy"], [24, 4, 1, "", "all"], [24, 4, 1, "", "any"], [24, 4, 1, "", "append"], [24, 4, 1, "", "apply_permutation"], [24, 4, 1, "", "argsort"], [24, 4, 1, "", "attach"], [24, 4, 1, "", "coargsort"], [24, 6, 1, "", "columns"], [24, 4, 1, "", "concat"], [24, 4, 1, "", "copy"], [24, 4, 1, "", "corr"], [24, 4, 1, "", "count"], [24, 4, 1, "", "drop"], [24, 4, 1, "", "drop_duplicates"], [24, 4, 1, "", "dropna"], [24, 6, 1, "", "dtypes"], [24, 6, 1, "", "empty"], [24, 4, 1, "", "filter_by_range"], [24, 4, 1, "", "from_pandas"], [24, 4, 1, "", "from_return_msg"], [24, 4, 1, "", "groupby"], [24, 4, 1, "", "head"], [24, 6, 1, "", "index"], [24, 6, 1, "", "info"], [24, 4, 1, "", "is_registered"], [24, 4, 1, "", "isin"], [24, 4, 1, "", "isna"], [24, 4, 1, "", "load"], [24, 4, 1, "", "memory_usage"], [24, 4, 1, "", "memory_usage_info"], [24, 4, 1, "", "merge"], [24, 4, 1, "", "notna"], [24, 3, 1, "", "objType"], [24, 4, 1, "", "read_csv"], [24, 4, 1, "", "register"], [24, 4, 1, "", "rename"], [24, 4, 1, "", "reset_index"], [24, 4, 1, "", "sample"], [24, 4, 1, "", "save"], [24, 6, 1, "", "shape"], [24, 6, 1, "", "size"], [24, 4, 1, "", "sort_index"], [24, 4, 1, "", "sort_values"], [24, 4, 1, "", "tail"], [24, 4, 1, "", "to_csv"], [24, 4, 1, "", "to_hdf"], [24, 4, 1, "", "to_markdown"], [24, 4, 1, "", "to_pandas"], [24, 4, 1, "", "to_parquet"], [24, 4, 1, "", "transfer"], [24, 4, 1, "", "unregister"], [24, 4, 1, "", "unregister_dataframe_by_name"], [24, 4, 1, "", "update_hdf"], [24, 4, 1, "", "update_nrows"]], "arkouda.dataframe.DiffAggregate": [[24, 3, 1, "", "gb"], [24, 3, 1, "", "values"]], "arkouda.dtypes": [[25, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [25, 1, 1, "", "DTypeObjects"], [25, 1, 1, "", "DTypes"], [25, 1, 1, "", "ScalarDTypes"], [25, 1, 1, "", "all_scalars"], [25, 1, 1, "", "bigint"], [25, 1, 1, "", "bitType"], [25, 1, 1, "", "bool"], [25, 1, 1, "", "bool_scalars"], [25, 5, 1, "", "check_np_dtype"], [25, 1, 1, "", "complex128"], [25, 1, 1, "", "complex64"], [25, 5, 1, "", "dtype"], [25, 1, 1, "", "float32"], [25, 1, 1, "", "float64"], [25, 1, 1, "", "float_scalars"], [25, 5, 1, "", "get_byteorder"], [25, 5, 1, "", "get_server_byteorder"], [25, 1, 1, "", "int16"], [25, 1, 1, "", "int32"], [25, 1, 1, "", "int64"], [25, 1, 1, "", "int8"], [25, 1, 1, "", "intTypes"], [25, 1, 1, "", "int_scalars"], [25, 5, 1, "", "isSupportedNumber"], [25, 1, 1, "", "numeric_scalars"], [25, 1, 1, "", "numpy_scalars"], [25, 5, 1, "", "resolve_scalar_dtype"], [25, 1, 1, "", "str_"], [25, 1, 1, "", "str_scalars"], [25, 5, 1, "", "translate_np_dtype"], [25, 1, 1, "", "uint16"], [25, 1, 1, "", "uint32"], [25, 1, 1, "", "uint64"], [25, 1, 1, "", "uint8"]], "arkouda.groupbyclass": [[26, 1, 1, "", "GROUPBY_REDUCTION_TYPES"], [26, 2, 1, "", "GroupBy"], [26, 5, 1, "", "broadcast"], [26, 5, 1, "", "unique"]], "arkouda.groupbyclass.GroupBy": [[26, 4, 1, "", "AND"], [26, 4, 1, "", "OR"], [26, 3, 1, "", "Reductions"], [26, 4, 1, "", "XOR"], [26, 4, 1, "", "aggregate"], [26, 4, 1, "", "all"], [26, 4, 1, "", "any"], [26, 4, 1, "", "argmax"], [26, 4, 1, "", "argmin"], [26, 4, 1, "", "attach"], [26, 4, 1, "", "broadcast"], [26, 4, 1, "", "build_from_components"], [26, 4, 1, "", "count"], [26, 3, 1, "", "dropna"], [26, 4, 1, "", "first"], [26, 4, 1, "", "from_return_msg"], [26, 4, 1, "", "is_registered"], [26, 3, 1, "", "logger"], [26, 4, 1, "", "max"], [26, 4, 1, "", "mean"], [26, 4, 1, "", "median"], [26, 4, 1, "", "min"], [26, 4, 1, "", "mode"], [26, 4, 1, "", "most_common"], [26, 3, 1, "", "ngroups"], [26, 3, 1, "", "nkeys"], [26, 4, 1, "", "nunique"], [26, 3, 1, "", "objType"], [26, 3, 1, "", "permutation"], [26, 4, 1, "", "prod"], [26, 4, 1, "", "register"], [26, 3, 1, "", "segments"], [26, 4, 1, "id0", "size"], [26, 4, 1, "", "std"], [26, 4, 1, "", "sum"], [26, 4, 1, "", "to_hdf"], [26, 4, 1, "", "unique"], [26, 3, 1, "", "unique_keys"], [26, 4, 1, "", "unregister"], [26, 4, 1, "", "unregister_groupby_by_name"], [26, 4, 1, "", "update_hdf"], [26, 4, 1, "", "var"]], "arkouda.history": [[27, 2, 1, "", "HistoryRetriever"], [27, 2, 1, "", "NotebookHistoryRetriever"], [27, 2, 1, "", "ShellHistoryRetriever"]], "arkouda.history.HistoryRetriever": [[27, 4, 1, "", "retrieve"]], "arkouda.history.NotebookHistoryRetriever": [[27, 4, 1, "", "retrieve"]], "arkouda.history.ShellHistoryRetriever": [[27, 4, 1, "", "retrieve"]], "arkouda.index": [[29, 2, 1, "", "Index"], [29, 2, 1, "", "MultiIndex"]], "arkouda.index.Index": [[29, 4, 1, "", "argsort"], [29, 4, 1, "", "concat"], [29, 4, 1, "", "factory"], [29, 4, 1, "", "from_return_msg"], [29, 6, 1, "", "index"], [29, 4, 1, "", "is_registered"], [29, 6, 1, "", "is_unique"], [29, 4, 1, "", "lookup"], [29, 4, 1, "", "map"], [29, 4, 1, "", "memory_usage"], [29, 3, 1, "", "objType"], [29, 4, 1, "", "register"], [29, 4, 1, "", "save"], [29, 4, 1, "", "set_dtype"], [29, 6, 1, "", "shape"], [29, 4, 1, "", "to_csv"], [29, 4, 1, "", "to_dict"], [29, 4, 1, "", "to_hdf"], [29, 4, 1, "", "to_list"], [29, 4, 1, "", "to_ndarray"], [29, 4, 1, "", "to_pandas"], [29, 4, 1, "", "to_parquet"], [29, 4, 1, "", "unregister"], [29, 4, 1, "", "update_hdf"]], "arkouda.index.MultiIndex": [[29, 4, 1, "", "argsort"], [29, 4, 1, "", "concat"], [29, 6, 1, "", "index"], [29, 4, 1, "", "is_registered"], [29, 4, 1, "", "lookup"], [29, 4, 1, "", "memory_usage"], [29, 3, 1, "", "objType"], [29, 4, 1, "", "register"], [29, 4, 1, "", "set_dtype"], [29, 4, 1, "", "to_dict"], [29, 4, 1, "", "to_hdf"], [29, 4, 1, "", "to_list"], [29, 4, 1, "", "to_ndarray"], [29, 4, 1, "", "to_pandas"], [29, 4, 1, "", "unregister"], [29, 4, 1, "", "update_hdf"]], "arkouda.infoclass": [[30, 1, 1, "", "AllSymbols"], [30, 1, 1, "", "RegisteredSymbols"], [30, 5, 1, "", "information"], [30, 5, 1, "", "list_registry"], [30, 5, 1, "", "list_symbol_table"], [30, 5, 1, "", "pretty_print_information"]], "arkouda.io": [[31, 5, 1, "", "export"], [31, 5, 1, "", "get_columns"], [31, 5, 1, "", "get_datasets"], [31, 5, 1, "", "get_filetype"], [31, 5, 1, "", "get_null_indices"], [31, 5, 1, "", "import_data"], [31, 5, 1, "", "load"], [31, 5, 1, "", "load_all"], [31, 5, 1, "", "ls"], [31, 5, 1, "", "ls_csv"], [31, 5, 1, "", "read"], [31, 5, 1, "", "read_csv"], [31, 5, 1, "", "read_hdf"], [31, 5, 1, "", "read_parquet"], [31, 5, 1, "", "read_tagged_data"], [31, 5, 1, "", "receive"], [31, 5, 1, "", "receive_dataframe"], [31, 5, 1, "", "restore"], [31, 5, 1, "", "save_all"], [31, 5, 1, "", "snapshot"], [31, 5, 1, "", "to_csv"], [31, 5, 1, "", "to_hdf"], [31, 5, 1, "", "to_parquet"], [31, 5, 1, "", "update_hdf"]], "arkouda.io_util": [[32, 5, 1, "", "delimited_file_to_dict"], [32, 5, 1, "", "dict_to_delimited_file"], [32, 5, 1, "", "get_directory"], [32, 5, 1, "", "write_line_to_file"]], "arkouda.join": [[33, 5, 1, "", "compute_join_size"], [33, 5, 1, "", "gen_ranges"], [33, 5, 1, "", "join_on_eq_with_dt"]], "arkouda.logger": [[34, 2, 1, "", "LogLevel"], [34, 5, 1, "", "disableVerbose"], [34, 5, 1, "", "enableVerbose"], [34, 5, 1, "", "write_log"]], "arkouda.logger.LogLevel": [[34, 3, 1, "", "CRITICAL"], [34, 3, 1, "", "DEBUG"], [34, 3, 1, "", "ERROR"], [34, 3, 1, "", "INFO"], [34, 3, 1, "", "WARN"]], "arkouda.match": [[35, 2, 1, "", "Match"]], "arkouda.match.Match": [[107, 4, 1, "", "end"], [107, 4, 1, "", "find_matches"], [107, 4, 1, "", "group"], [107, 4, 1, "", "match_type"], [107, 4, 1, "", "matched"], [107, 4, 1, "", "start"]], "arkouda.matcher": [[36, 2, 1, "", "Matcher"]], "arkouda.matcher.Matcher": [[36, 3, 1, "", "LocationsInfo"], [36, 4, 1, "", "find_locations"], [36, 4, 1, "", "findall"], [36, 4, 1, "", "get_match"], [36, 4, 1, "", "split"], [36, 4, 1, "", "sub"]], "arkouda.numeric": [[37, 2, 1, "", "ErrorMode"], [37, 5, 1, "", "abs"], [37, 5, 1, "", "arccos"], [37, 5, 1, "", "arccosh"], [37, 5, 1, "", "arcsin"], [37, 5, 1, "", "arcsinh"], [37, 5, 1, "", "arctan"], [37, 5, 1, "", "arctan2"], [37, 5, 1, "", "arctanh"], [37, 5, 1, "", "cast"], [37, 5, 1, "", "ceil"], [37, 5, 1, "", "clip"], [37, 5, 1, "", "cos"], [37, 5, 1, "", "cosh"], [37, 5, 1, "", "cumprod"], [37, 5, 1, "", "cumsum"], [37, 5, 1, "", "deg2rad"], [37, 5, 1, "", "exp"], [37, 5, 1, "", "expm1"], [37, 5, 1, "", "floor"], [37, 5, 1, "", "hash"], [37, 5, 1, "", "histogram"], [37, 5, 1, "", "histogram2d"], [37, 5, 1, "", "histogramdd"], [37, 5, 1, "", "isfinite"], [37, 5, 1, "", "isinf"], [37, 5, 1, "", "isnan"], [37, 5, 1, "", "log"], [37, 5, 1, "", "log10"], [37, 5, 1, "", "log1p"], [37, 5, 1, "", "log2"], [37, 5, 1, "", "rad2deg"], [37, 5, 1, "", "round"], [37, 5, 1, "", "sign"], [37, 5, 1, "", "sin"], [37, 5, 1, "", "sinh"], [37, 5, 1, "", "square"], [37, 5, 1, "", "tan"], [37, 5, 1, "", "tanh"], [37, 5, 1, "", "trunc"], [37, 5, 1, "", "value_counts"], [37, 5, 1, "", "where"]], "arkouda.numeric.ErrorMode": [[37, 3, 1, "", "ignore"], [37, 3, 1, "", "return_validity"], [37, 3, 1, "", "strict"]], "arkouda.numpy": [[38, 0, 0, "-", "char"], [39, 0, 0, "-", "imports"]], "arkouda.numpy.imports": [[39, 1, 1, "", "Inf"], [39, 1, 1, "", "Infinity"], [39, 1, 1, "", "NAN"], [39, 1, 1, "", "NINF"], [39, 1, 1, "", "NZERO"], [39, 1, 1, "", "NaN"], [39, 1, 1, "", "PINF"], [39, 1, 1, "", "PZERO"], [39, 2, 1, "", "bool_"], [39, 2, 1, "", "byte"], [39, 2, 1, "", "cdouble"], [39, 2, 1, "", "clongdouble"], [39, 2, 1, "", "csingle"], [39, 2, 1, "", "double"], [39, 1, 1, "", "e"], [39, 1, 1, "", "euler_gamma"], [39, 2, 1, "", "float32"], [39, 2, 1, "", "float64"], [39, 2, 1, "", "half"], [39, 1, 1, "", "inf"], [39, 1, 1, "", "infty"], [39, 2, 1, "", "int16"], [39, 2, 1, "", "int32"], [39, 2, 1, "", "int64"], [39, 2, 1, "", "int8"], [39, 2, 1, "", "int_"], [39, 2, 1, "", "intc"], [39, 2, 1, "", "longdouble"], [39, 2, 1, "", "longlong"], [39, 1, 1, "", "nan"], [39, 1, 1, "", "newaxis"], [39, 1, 1, "", "pi"], [39, 2, 1, "", "short"], [39, 2, 1, "", "single"], [39, 2, 1, "", "ubyte"], [39, 2, 1, "", "uint"], [39, 2, 1, "", "uint16"], [39, 2, 1, "", "uint32"], [39, 2, 1, "", "uint64"], [39, 2, 1, "", "uint8"], [39, 2, 1, "", "uintc"], [39, 2, 1, "", "ulonglong"], [39, 2, 1, "", "ushort"]], "arkouda.numpy.imports.bool_": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.byte": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.cdouble": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.clongdouble": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.csingle": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.double": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "as_integer_ratio"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "fromhex"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "hex"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.float32": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "as_integer_ratio"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.float64": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "as_integer_ratio"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "fromhex"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "hex"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.half": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "as_integer_ratio"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.int16": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.int32": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.int64": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.int8": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.int_": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.intc": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.longdouble": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "as_integer_ratio"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.longlong": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.short": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.single": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "as_integer_ratio"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.ubyte": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.uint": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.uint16": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.uint32": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.uint64": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.uint8": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.uintc": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.ulonglong": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.numpy.imports.ushort": [[39, 4, 1, "", "T"], [39, 4, 1, "", "all"], [39, 4, 1, "", "any"], [39, 4, 1, "", "argmax"], [39, 4, 1, "", "argmin"], [39, 4, 1, "", "argsort"], [39, 4, 1, "", "astype"], [39, 4, 1, "", "base"], [39, 4, 1, "", "bit_count"], [39, 4, 1, "", "byteswap"], [39, 4, 1, "", "choose"], [39, 4, 1, "", "clip"], [39, 4, 1, "", "compress"], [39, 4, 1, "", "conj"], [39, 4, 1, "", "conjugate"], [39, 4, 1, "", "copy"], [39, 4, 1, "", "cumprod"], [39, 4, 1, "", "cumsum"], [39, 4, 1, "", "data"], [39, 4, 1, "", "denominator"], [39, 4, 1, "", "diagonal"], [39, 4, 1, "", "dtype"], [39, 4, 1, "", "dump"], [39, 4, 1, "", "dumps"], [39, 4, 1, "", "fill"], [39, 4, 1, "", "flags"], [39, 4, 1, "", "flat"], [39, 4, 1, "", "flatten"], [39, 4, 1, "", "getfield"], [39, 4, 1, "", "imag"], [39, 4, 1, "", "is_integer"], [39, 4, 1, "", "item"], [39, 4, 1, "", "itemset"], [39, 4, 1, "", "itemsize"], [39, 4, 1, "", "max"], [39, 4, 1, "", "mean"], [39, 4, 1, "", "min"], [39, 4, 1, "", "nbytes"], [39, 4, 1, "", "ndim"], [39, 4, 1, "", "newbyteorder"], [39, 4, 1, "", "nonzero"], [39, 4, 1, "", "numerator"], [39, 4, 1, "", "prod"], [39, 4, 1, "", "ptp"], [39, 4, 1, "", "put"], [39, 4, 1, "", "ravel"], [39, 4, 1, "", "real"], [39, 4, 1, "", "repeat"], [39, 4, 1, "", "reshape"], [39, 4, 1, "", "resize"], [39, 4, 1, "", "round"], [39, 4, 1, "", "searchsorted"], [39, 4, 1, "", "setfield"], [39, 4, 1, "", "setflags"], [39, 4, 1, "", "shape"], [39, 4, 1, "", "size"], [39, 4, 1, "", "sort"], [39, 4, 1, "", "squeeze"], [39, 4, 1, "", "std"], [39, 4, 1, "", "strides"], [39, 4, 1, "", "sum"], [39, 4, 1, "", "swapaxes"], [39, 4, 1, "", "take"], [39, 4, 1, "", "tobytes"], [39, 4, 1, "", "tofile"], [39, 4, 1, "", "tolist"], [39, 4, 1, "", "tostring"], [39, 4, 1, "", "trace"], [39, 4, 1, "", "transpose"], [39, 4, 1, "", "var"], [39, 4, 1, "", "view"]], "arkouda.pdarray": [[28, 3, 1, "id776", "BinOps"], [28, 3, 1, "id777", "OpEqOps"], [99, 4, 1, "", "all"], [99, 4, 1, "", "any"], [99, 4, 1, "", "argmax"], [99, 4, 1, "", "argmaxk"], [99, 4, 1, "", "argmin"], [99, 4, 1, "", "argmink"], [28, 4, 1, "id785", "astype"], [28, 4, 1, "id786", "attach"], [28, 4, 1, "id787", "bigint_to_uint_arrays"], [28, 4, 1, "id788", "clz"], [28, 4, 1, "id789", "corr"], [28, 4, 1, "id790", "cov"], [28, 4, 1, "id791", "ctz"], [101, 3, 1, "", "dtype"], [28, 4, 1, "id792", "fill"], [28, 4, 1, "id793", "format_other"], [28, 4, 1, "id794", "info"], [28, 4, 1, "id795", "is_registered"], [99, 4, 1, "", "is_sorted"], [101, 3, 1, "", "itemsize"], [99, 4, 1, "", "max"], [28, 6, 1, "id774", "max_bits"], [99, 4, 1, "", "maxk"], [99, 4, 1, "", "mean"], [99, 4, 1, "", "min"], [99, 4, 1, "", "mink"], [101, 3, 1, "", "name"], [28, 6, 1, "id775", "nbytes"], [101, 3, 1, "", "ndim"], [28, 3, 1, "id778", "objType"], [28, 4, 1, "id802", "opeq"], [28, 4, 1, "id803", "parity"], [28, 4, 1, "id804", "popcount"], [28, 4, 1, "id805", "pretty_print_info"], [99, 4, 1, "", "prod"], [28, 4, 1, "id807", "register"], [28, 4, 1, "id808", "reshape"], [28, 4, 1, "id809", "rotl"], [28, 4, 1, "id810", "rotr"], [28, 4, 1, "id811", "save"], [101, 3, 1, "", "shape"], [101, 3, 1, "", "size"], [28, 4, 1, "id812", "slice_bits"], [99, 4, 1, "", "std"], [99, 4, 1, "", "sum"], [28, 4, 1, "id815", "to_csv"], [28, 4, 1, "id818", "to_cuda"], [28, 4, 1, "id819", "to_hdf"], [28, 4, 1, "id820", "to_list"], [101, 5, 1, "", "to_ndarray"], [28, 4, 1, "id822", "to_parquet"], [28, 4, 1, "id823", "transfer"], [28, 4, 1, "id824", "unregister"], [28, 4, 1, "id825", "update_hdf"], [28, 4, 1, "id826", "value_counts"], [99, 4, 1, "", "var"]], "arkouda.pdarrayclass": [[41, 7, 1, "", "RegistrationError"], [41, 5, 1, "", "all"], [41, 5, 1, "", "any"], [41, 5, 1, "", "argmax"], [41, 5, 1, "", "argmaxk"], [41, 5, 1, "", "argmin"], [41, 5, 1, "", "argmink"], [41, 5, 1, "", "attach_pdarray"], [41, 5, 1, "", "broadcast_to_shape"], [41, 5, 1, "", "clear"], [41, 5, 1, "", "clz"], [41, 5, 1, "", "corr"], [41, 5, 1, "", "cov"], [41, 5, 1, "", "ctz"], [41, 5, 1, "", "divmod"], [41, 5, 1, "", "dot"], [41, 5, 1, "", "fmod"], [41, 5, 1, "", "is_sorted"], [41, 5, 1, "", "max"], [41, 5, 1, "", "maxk"], [41, 5, 1, "", "mean"], [41, 5, 1, "", "min"], [41, 5, 1, "", "mink"], [41, 5, 1, "", "mod"], [41, 5, 1, "", "parity"], [41, 2, 1, "", "pdarray"], [41, 5, 1, "", "popcount"], [41, 5, 1, "", "power"], [41, 5, 1, "", "prod"], [41, 5, 1, "", "rotl"], [41, 5, 1, "", "rotr"], [41, 5, 1, "", "sqrt"], [41, 5, 1, "", "std"], [41, 5, 1, "", "sum"], [41, 5, 1, "", "unregister_pdarray_by_name"], [41, 5, 1, "", "var"]], "arkouda.pdarrayclass.pdarray": [[41, 3, 1, "", "BinOps"], [41, 3, 1, "", "OpEqOps"], [41, 4, 1, "", "all"], [41, 4, 1, "", "any"], [41, 4, 1, "", "argmax"], [41, 4, 1, "", "argmaxk"], [41, 4, 1, "", "argmin"], [41, 4, 1, "", "argmink"], [41, 4, 1, "", "astype"], [41, 4, 1, "", "attach"], [41, 4, 1, "", "bigint_to_uint_arrays"], [41, 4, 1, "", "clz"], [41, 4, 1, "", "corr"], [41, 4, 1, "", "cov"], [41, 4, 1, "", "ctz"], [41, 3, 1, "", "dtype"], [41, 4, 1, "", "fill"], [41, 4, 1, "", "format_other"], [41, 4, 1, "", "info"], [41, 4, 1, "", "is_registered"], [41, 4, 1, "", "is_sorted"], [41, 3, 1, "", "itemsize"], [41, 4, 1, "", "max"], [41, 6, 1, "", "max_bits"], [41, 4, 1, "", "maxk"], [41, 4, 1, "", "mean"], [41, 4, 1, "", "min"], [41, 4, 1, "", "mink"], [41, 3, 1, "", "name"], [41, 6, 1, "", "nbytes"], [41, 3, 1, "", "ndim"], [41, 3, 1, "", "objType"], [41, 4, 1, "", "opeq"], [41, 4, 1, "", "parity"], [41, 4, 1, "", "popcount"], [41, 4, 1, "", "pretty_print_info"], [41, 4, 1, "", "prod"], [41, 4, 1, "", "register"], [41, 4, 1, "", "reshape"], [41, 4, 1, "", "rotl"], [41, 4, 1, "", "rotr"], [41, 4, 1, "", "save"], [41, 3, 1, "", "shape"], [41, 3, 1, "", "size"], [41, 4, 1, "", "slice_bits"], [41, 4, 1, "", "std"], [41, 4, 1, "", "sum"], [41, 4, 1, "", "to_csv"], [41, 4, 1, "", "to_cuda"], [41, 4, 1, "", "to_hdf"], [41, 4, 1, "", "to_list"], [41, 4, 1, "", "to_ndarray"], [41, 4, 1, "", "to_parquet"], [41, 4, 1, "", "transfer"], [41, 4, 1, "", "unregister"], [41, 4, 1, "", "update_hdf"], [41, 4, 1, "", "value_counts"], [41, 4, 1, "", "var"]], "arkouda.pdarraycreation": [[42, 5, 1, "", "arange"], [42, 5, 1, "", "array"], [42, 5, 1, "", "bigint_from_uint_arrays"], [42, 5, 1, "", "from_series"], [42, 5, 1, "", "full"], [42, 5, 1, "", "full_like"], [42, 5, 1, "", "linspace"], [42, 5, 1, "", "ones"], [42, 5, 1, "", "ones_like"], [42, 5, 1, "", "randint"], [42, 5, 1, "", "random_strings_lognormal"], [42, 5, 1, "", "random_strings_uniform"], [42, 5, 1, "", "standard_normal"], [42, 5, 1, "", "uniform"], [42, 5, 1, "", "zeros"], [42, 5, 1, "", "zeros_like"]], "arkouda.pdarraysetops": [[43, 5, 1, "", "concatenate"], [43, 5, 1, "", "in1d"], [43, 5, 1, "", "indexof1d"], [43, 5, 1, "", "intersect1d"], [43, 5, 1, "", "setdiff1d"], [43, 5, 1, "", "setxor1d"], [43, 5, 1, "", "union1d"]], "arkouda.plotting": [[44, 5, 1, "", "hist_all"], [44, 5, 1, "", "plot_dist"]], "arkouda.random": [[102, 2, 1, "", "Generator"], [45, 0, 0, "-", "_generator"], [46, 0, 0, "-", "_legacy"], [102, 5, 1, "", "default_rng"], [47, 5, 1, "", "randint"], [47, 5, 1, "", "standard_normal"], [47, 5, 1, "", "uniform"]], "arkouda.random.Generator": [[47, 4, 1, "", "choice"], [102, 5, 1, "", "integers"], [47, 4, 1, "", "permutation"], [102, 5, 1, "", "random"], [47, 4, 1, "", "shuffle"], [102, 5, 1, "", "standard_normal"], [102, 5, 1, "", "uniform"]], "arkouda.random._generator": [[45, 2, 1, "", "Generator"], [45, 5, 1, "", "default_rng"]], "arkouda.random._generator.Generator": [[45, 4, 1, "", "choice"], [45, 4, 1, "", "integers"], [45, 4, 1, "", "permutation"], [45, 4, 1, "", "random"], [45, 4, 1, "", "shuffle"], [45, 4, 1, "", "standard_normal"], [45, 4, 1, "", "uniform"]], "arkouda.random._legacy": [[46, 5, 1, "", "randint"], [46, 5, 1, "", "standard_normal"], [46, 5, 1, "", "uniform"]], "arkouda.row": [[48, 2, 1, "", "Row"]], "arkouda.scipy": [[51, 2, 1, "", "Power_divergenceResult"], [49, 0, 0, "-", "_stats_py"], [51, 5, 1, "", "chisquare"], [50, 0, 0, "-", "imports"], [51, 5, 1, "", "power_divergence"], [53, 0, 0, "-", "special"], [55, 0, 0, "-", "stats"]], "arkouda.scipy.Power_divergenceResult": [[51, 3, 1, "", "pvalue"], [51, 3, 1, "", "statistic"]], "arkouda.scipy._stats_py": [[49, 2, 1, "", "Power_divergenceResult"], [49, 5, 1, "", "chisquare"], [49, 5, 1, "", "power_divergence"]], "arkouda.scipy._stats_py.Power_divergenceResult": [[49, 3, 1, "", "pvalue"], [49, 3, 1, "", "statistic"]], "arkouda.scipy.special": [[52, 0, 0, "-", "_math"], [53, 5, 1, "", "xlogy"]], "arkouda.scipy.special._math": [[52, 5, 1, "", "xlogy"]], "arkouda.scipy.stats": [[54, 0, 0, "-", "imports"]], "arkouda.scipy.stats.imports": [[54, 2, 1, "", "chi2"]], "arkouda.scipy.stats.imports.chi2": [[54, 4, 1, "", "a"], [54, 4, 1, "", "b"], [54, 4, 1, "", "badvalue"], [54, 4, 1, "id632", "cdf"], [54, 4, 1, "id640", "entropy"], [54, 4, 1, "id642", "expect"], [54, 4, 1, "id641", "fit"], [54, 4, 1, "", "fit_loc_scale"], [54, 4, 1, "", "freeze"], [54, 4, 1, "", "generic_moment"], [54, 4, 1, "id647", "interval"], [54, 4, 1, "id637", "isf"], [54, 4, 1, "id633", "logcdf"], [54, 4, 1, "id631", "logpdf"], [54, 4, 1, "id635", "logsf"], [54, 4, 1, "id644", "mean"], [54, 4, 1, "id643", "median"], [54, 4, 1, "id638", "moment"], [54, 4, 1, "", "moment_type"], [54, 4, 1, "", "name"], [54, 4, 1, "", "nnlf"], [54, 4, 1, "", "numargs"], [54, 4, 1, "id630", "pdf"], [54, 4, 1, "id636", "ppf"], [54, 4, 1, "", "random_state"], [54, 4, 1, "id629", "rvs"], [54, 4, 1, "id634", "sf"], [54, 4, 1, "", "shapes"], [54, 4, 1, "id639", "stats"], [54, 4, 1, "id646", "std"], [54, 4, 1, "", "support"], [54, 4, 1, "id645", "var"], [54, 4, 1, "", "vecentropy"], [54, 4, 1, "", "xtol"]], "arkouda.security": [[56, 5, 1, "", "generate_token"], [56, 5, 1, "", "generate_username_token_json"], [56, 5, 1, "", "get_arkouda_client_directory"], [56, 5, 1, "", "get_home_directory"], [56, 5, 1, "", "get_username"], [56, 1, 1, "", "username_tokenizer"]], "arkouda.segarray": [[57, 1, 1, "", "LEN_SUFFIX"], [57, 1, 1, "", "SEG_SUFFIX"], [57, 2, 1, "", "SegArray"], [57, 1, 1, "", "VAL_SUFFIX"], [57, 5, 1, "", "segarray"]], "arkouda.segarray.SegArray": [[57, 4, 1, "", "AND"], [57, 4, 1, "", "OR"], [57, 4, 1, "", "XOR"], [57, 4, 1, "", "aggregate"], [57, 4, 1, "", "all"], [57, 4, 1, "", "any"], [57, 4, 1, "", "append"], [57, 4, 1, "", "append_single"], [57, 4, 1, "", "argmax"], [57, 4, 1, "", "argmin"], [57, 4, 1, "", "attach"], [57, 4, 1, "", "concat"], [57, 4, 1, "", "copy"], [57, 4, 1, "", "filter"], [57, 4, 1, "", "from_multi_array"], [57, 4, 1, "", "from_parts"], [57, 4, 1, "", "from_return_msg"], [57, 4, 1, "", "get_jth"], [57, 4, 1, "", "get_length_n"], [57, 4, 1, "", "get_ngrams"], [57, 4, 1, "", "get_prefixes"], [57, 4, 1, "", "get_suffixes"], [57, 6, 1, "", "grouping"], [57, 4, 1, "", "hash"], [57, 4, 1, "", "intersect"], [57, 4, 1, "", "is_registered"], [57, 4, 1, "", "load"], [57, 4, 1, "", "max"], [57, 4, 1, "", "mean"], [57, 4, 1, "", "min"], [57, 6, 1, "", "non_empty"], [57, 4, 1, "", "nunique"], [57, 3, 1, "", "objType"], [57, 4, 1, "", "prepend_single"], [57, 4, 1, "", "prod"], [57, 4, 1, "", "read_hdf"], [57, 4, 1, "", "register"], [57, 4, 1, "", "remove_repeats"], [57, 4, 1, "", "save"], [57, 4, 1, "", "set_jth"], [57, 4, 1, "", "setdiff"], [57, 4, 1, "", "setxor"], [57, 4, 1, "", "sum"], [57, 4, 1, "", "to_hdf"], [57, 4, 1, "", "to_list"], [57, 4, 1, "", "to_ndarray"], [57, 4, 1, "", "to_parquet"], [57, 4, 1, "", "transfer"], [57, 4, 1, "", "union"], [57, 4, 1, "", "unique"], [57, 4, 1, "", "unregister"], [57, 4, 1, "", "unregister_segarray_by_name"], [57, 4, 1, "", "update_hdf"]], "arkouda.series": [[58, 2, 1, "", "Series"]], "arkouda.series.Series": [[58, 4, 1, "", "add"], [58, 6, 1, "", "at"], [58, 4, 1, "", "attach"], [58, 4, 1, "", "concat"], [58, 4, 1, "", "diff"], [58, 3, 1, "", "dt"], [58, 4, 1, "", "fillna"], [58, 4, 1, "", "from_return_msg"], [58, 4, 1, "", "has_repeat_labels"], [58, 4, 1, "", "hasnans"], [58, 4, 1, "", "head"], [58, 6, 1, "", "iat"], [58, 6, 1, "", "iloc"], [58, 4, 1, "", "is_registered"], [58, 4, 1, "", "isin"], [58, 4, 1, "", "isna"], [58, 4, 1, "", "isnull"], [58, 6, 1, "", "loc"], [58, 4, 1, "", "locate"], [58, 4, 1, "", "map"], [58, 4, 1, "", "memory_usage"], [58, 4, 1, "", "notna"], [58, 4, 1, "", "notnull"], [58, 3, 1, "", "objType"], [58, 4, 1, "", "pdconcat"], [58, 4, 1, "", "register"], [58, 6, 1, "", "shape"], [58, 4, 1, "", "sort_index"], [58, 4, 1, "", "sort_values"], [58, 3, 1, "", "str_acc"], [58, 4, 1, "", "tail"], [58, 4, 1, "", "to_dataframe"], [58, 4, 1, "", "to_list"], [58, 4, 1, "", "to_markdown"], [58, 4, 1, "", "to_pandas"], [58, 4, 1, "", "topn"], [58, 4, 1, "", "unregister"], [58, 4, 1, "", "validate_key"], [58, 4, 1, "", "validate_val"], [58, 4, 1, "", "value_counts"]], "arkouda.sorting": [[59, 5, 1, "", "argsort"], [59, 5, 1, "", "coargsort"], [59, 5, 1, "", "sort"]], "arkouda.strings": [[60, 2, 1, "", "Strings"]], "arkouda.strings.Strings": [[60, 3, 1, "", "BinOps"], [60, 4, 1, "", "astype"], [60, 4, 1, "", "attach"], [60, 4, 1, "", "cached_regex_patterns"], [60, 4, 1, "", "capitalize"], [60, 4, 1, "", "contains"], [60, 4, 1, "", "decode"], [60, 3, 1, "", "dtype"], [60, 4, 1, "", "encode"], [60, 4, 1, "", "endswith"], [60, 3, 1, "", "entry"], [60, 4, 1, "", "find_locations"], [60, 4, 1, "", "findall"], [60, 4, 1, "", "flatten"], [60, 4, 1, "", "from_parts"], [60, 4, 1, "", "from_return_msg"], [60, 4, 1, "", "fullmatch"], [60, 4, 1, "", "get_bytes"], [60, 4, 1, "", "get_lengths"], [60, 4, 1, "", "get_offsets"], [60, 4, 1, "", "get_prefixes"], [60, 4, 1, "", "get_suffixes"], [60, 4, 1, "", "group"], [60, 4, 1, "", "hash"], [60, 4, 1, "", "info"], [60, 4, 1, "", "is_registered"], [60, 4, 1, "", "isalnum"], [60, 4, 1, "", "isalpha"], [60, 4, 1, "", "isdecimal"], [60, 4, 1, "", "isdigit"], [60, 4, 1, "", "isempty"], [60, 4, 1, "", "islower"], [60, 4, 1, "", "isspace"], [60, 4, 1, "", "istitle"], [60, 4, 1, "", "isupper"], [60, 3, 1, "", "logger"], [60, 4, 1, "", "lower"], [60, 4, 1, "", "lstick"], [60, 4, 1, "", "match"], [60, 3, 1, "", "nbytes"], [60, 3, 1, "", "ndim"], [60, 3, 1, "", "objType"], [60, 4, 1, "", "peel"], [60, 4, 1, "", "pretty_print_info"], [60, 4, 1, "", "purge_cached_regex_patterns"], [60, 4, 1, "", "register"], [60, 4, 1, "", "rpeel"], [60, 4, 1, "", "save"], [60, 4, 1, "", "search"], [60, 3, 1, "", "shape"], [60, 3, 1, "", "size"], [60, 4, 1, "", "split"], [60, 4, 1, "", "startswith"], [60, 4, 1, "", "stick"], [60, 4, 1, "", "strip"], [60, 4, 1, "", "sub"], [60, 4, 1, "", "subn"], [60, 4, 1, "", "title"], [60, 4, 1, "", "to_csv"], [60, 4, 1, "", "to_hdf"], [60, 4, 1, "", "to_list"], [60, 4, 1, "", "to_ndarray"], [60, 4, 1, "", "to_parquet"], [60, 4, 1, "", "transfer"], [60, 4, 1, "", "unregister"], [60, 4, 1, "", "unregister_strings_by_name"], [60, 4, 1, "", "update_hdf"], [60, 4, 1, "", "upper"]], "arkouda.timeclass": [[61, 2, 1, "", "Datetime"], [61, 2, 1, "", "Timedelta"], [61, 5, 1, "", "date_range"], [61, 5, 1, "", "timedelta_range"]], "arkouda.timeclass.Datetime": [[61, 6, 1, "", "date"], [61, 6, 1, "", "day"], [61, 6, 1, "", "day_of_week"], [61, 6, 1, "", "day_of_year"], [61, 6, 1, "", "dayofweek"], [61, 6, 1, "", "dayofyear"], [61, 6, 1, "", "hour"], [61, 6, 1, "", "is_leap_year"], [61, 4, 1, "", "is_registered"], [61, 4, 1, "", "isocalendar"], [61, 6, 1, "", "microsecond"], [61, 6, 1, "", "millisecond"], [61, 6, 1, "", "minute"], [61, 6, 1, "", "month"], [61, 6, 1, "", "nanosecond"], [61, 4, 1, "", "register"], [61, 6, 1, "", "second"], [61, 3, 1, "", "special_objType"], [61, 4, 1, "", "sum"], [61, 3, 1, "", "supported_opeq"], [61, 3, 1, "", "supported_with_datetime"], [61, 3, 1, "", "supported_with_pdarray"], [61, 3, 1, "", "supported_with_r_datetime"], [61, 3, 1, "", "supported_with_r_pdarray"], [61, 3, 1, "", "supported_with_r_timedelta"], [61, 3, 1, "", "supported_with_timedelta"], [61, 4, 1, "", "to_pandas"], [61, 4, 1, "", "unregister"], [61, 6, 1, "", "week"], [61, 6, 1, "", "weekday"], [61, 6, 1, "", "weekofyear"], [61, 6, 1, "", "year"]], "arkouda.timeclass.Timedelta": [[61, 4, 1, "", "abs"], [61, 6, 1, "", "components"], [61, 6, 1, "", "days"], [61, 4, 1, "", "is_registered"], [61, 6, 1, "", "microseconds"], [61, 6, 1, "", "nanoseconds"], [61, 4, 1, "", "register"], [61, 6, 1, "", "seconds"], [61, 3, 1, "", "special_objType"], [61, 4, 1, "", "std"], [61, 4, 1, "", "sum"], [61, 3, 1, "", "supported_opeq"], [61, 3, 1, "", "supported_with_datetime"], [61, 3, 1, "", "supported_with_pdarray"], [61, 3, 1, "", "supported_with_r_datetime"], [61, 3, 1, "", "supported_with_r_pdarray"], [61, 3, 1, "", "supported_with_r_timedelta"], [61, 3, 1, "", "supported_with_timedelta"], [61, 4, 1, "", "to_pandas"], [61, 4, 1, "", "total_seconds"], [61, 4, 1, "", "unregister"]], "arkouda.util": [[62, 5, 1, "", "attach"], [62, 5, 1, "", "attach_all"], [62, 5, 1, "", "broadcast_dims"], [62, 5, 1, "", "concatenate"], [62, 5, 1, "", "convert_bytes"], [62, 5, 1, "", "convert_if_categorical"], [62, 5, 1, "", "enrich_inplace"], [62, 5, 1, "", "expand"], [62, 5, 1, "", "generic_concat"], [62, 5, 1, "", "get_callback"], [62, 5, 1, "", "identity"], [62, 5, 1, "", "invert_permutation"], [62, 5, 1, "", "is_float"], [62, 5, 1, "", "is_int"], [62, 5, 1, "", "is_numeric"], [62, 5, 1, "", "is_registered"], [62, 5, 1, "", "map"], [62, 5, 1, "", "most_common"], [62, 5, 1, "", "register"], [62, 5, 1, "", "register_all"], [62, 5, 1, "", "report_mem"], [62, 5, 1, "", "sparse_sum_help"], [62, 5, 1, "", "unregister"], [62, 5, 1, "", "unregister_all"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:function", "6": "py:property", "7": "py:exception"}, "terms": {"": [0, 1, 2, 3, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 37, 39, 41, 54, 56, 57, 58, 60, 61, 62, 64, 67, 68, 72, 81, 82, 83, 86, 87, 88, 90, 93, 94, 95, 97, 98, 99, 101, 103, 104, 106, 107], "0": [0, 3, 6, 11, 15, 16, 20, 21, 22, 24, 26, 28, 29, 31, 33, 35, 36, 37, 39, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 64, 65, 66, 72, 73, 74, 79, 82, 83, 85, 86, 88, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "00": [24, 28, 65], "00000000000000000": [24, 28, 29, 37, 52, 53, 62, 97], "00000000000003": [26, 28, 98], "00018361238254747651": 65, "0001_0d4865d7c9453adc6af6409568da326845c358b9_20230406_165330": 65, "0002": 65, "0002090000002681336": 65, "0009575499998391024": 65, "001": 54, "001326192548940973": 65, "0014_31de39be8b19c76d073a8999def6673a305c250d_20230405_145759_uncommit": 65, "0015_31de39be8b19c76d073a8999def6673a305c250d_20230405_145947_uncommit": 65, "00383609999971668": 65, "0039507749997937935": 65, "0040258999997604406": 65, "004057779999857303": 65, "004066600000442122": 65, "004131924999910552": 65, "004159775000061927": 65, "004246700000294368": 65, "0043372999998609885": 65, "0048064200000226265": 65, "005089474999749655": 65, "007168699999965611": 65, "01": [28, 42, 54, 65, 68, 70], "013": 99, "0197": 65, "02": 65, "020288899999286514": 65, "021728052940979934": [28, 45, 47, 102], "024032100000113132": 65, "03": 65, "030785499755523249": [28, 45, 47, 102], "03960235520756414": [28, 49, 51], "04": [65, 86], "04380595350226197": [28, 49, 51], "0441791878997098": [28, 42, 46, 47], "0472855509390593": [28, 37, 93], "04t12": 65, "04t16": 65, "05": 79, "05309592737584": [28, 37, 93], "0550596900172": 65, "055256829926011691": [28, 45, 47, 102], "05t15": 65, "06": 65, "0625": [24, 28], "07": 65, "07734942223993": 99, "083130710959903542": [28, 42, 46, 47, 96], "08505865366367038": [28, 45, 47, 102], "085536923187668": [28, 37, 93], "0889": 65, "09": [65, 82], "0954451150103321": [26, 28, 98], "097392": 65, "0b10": [28, 41], "0b101111111111111111111111111111111111111111111111111111111111111111": [28, 41], "0x7f2cf23e10c0": [24, 28, 97], "1": [0, 1, 3, 6, 14, 19, 20, 21, 22, 24, 26, 28, 29, 31, 33, 35, 37, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 72, 73, 74, 77, 79, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107], "10": [3, 21, 24, 26, 28, 31, 37, 39, 41, 42, 44, 45, 46, 47, 49, 51, 57, 58, 59, 60, 62, 64, 65, 72, 81, 83, 85, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104], "100": [28, 37, 41, 44, 54, 58, 62, 65, 72, 93], "1000": [24, 28, 29, 33, 54, 91, 99], "10000": 22, "100000": 72, "100000000": 88, "101": 60, "1024": [1, 28, 41], "104": 60, "105": [0, 22], "1073741824": 97, "108": [26, 28, 98], "109302162163285": [28, 49, 51], "11": [3, 24, 28, 37, 39, 57, 62, 65, 70, 72, 73, 93, 94, 97, 99, 100, 103], "110": 60, "110680464442257309696": [3, 28], "110680464442257309708": [3, 28], "111": [24, 28, 60, 97], "11111111111111116": [26, 28, 98], "114": 60, "116": 60, "119": 60, "12": [3, 24, 26, 28, 31, 37, 49, 51, 57, 60, 62, 65, 85, 93, 94, 98, 100, 103], "120": 60, "121": 60, "122": 60, "1234": [21, 24, 28, 31, 41, 57, 60, 68], "1235": [21, 24, 28, 31, 41, 57, 60], "1236": [21, 24, 28, 31, 41, 57, 60], "1237": [21, 24, 28, 31, 41, 57, 60], "127": [39, 66], "128": [21, 28, 37, 39, 57, 60], "13": [28, 37, 45, 47, 62, 65, 82, 85, 93, 94, 99, 100, 102], "134": [28, 37, 93], "14": [24, 26, 28, 45, 47, 54, 60, 65, 72, 73, 82, 93, 94, 98, 100, 102], "14159": [28, 37], "1436": 65, "15": [3, 21, 24, 28, 45, 47, 60, 83, 94, 100, 102], "1514764800000000000": [28, 42], "15461882265": 79, "158": 65, "1598310770203937": [28, 37, 93], "16": [24, 28, 37, 39, 45, 47, 62, 65, 66, 67, 82, 83, 93, 94, 100, 102], "160": [28, 41], "1622479306453748": [28, 37, 93], "16400145561571539": [28, 45, 47, 102], "166020696663385964564": [3, 28], "166020696663385964574": [3, 28], "17": [65, 72, 94, 100], "1723810583573375": [28, 42, 46, 47], "18": [24, 28, 41, 45, 47, 65, 93, 94, 100, 102], "18446744073709551616": [28, 41, 42], "18446744073709551617": [28, 41, 42], "18446744073709551618": [28, 41, 42], "18446744073709551619": [28, 41, 42], "18446744073709551620": [28, 41, 42], "1882": 65, "18_446_744_073_709_551_615": 39, "19": [28, 37, 62, 94, 100], "1923875335537315": [28, 45, 47, 102], "196608": 65, "1_2___": [35, 60, 107], "1d": [28, 43, 57, 58, 103, 104, 105], "1e": 54, "1string": 60, "2": [0, 3, 20, 21, 24, 26, 28, 29, 31, 35, 37, 39, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 64, 65, 66, 68, 72, 73, 74, 81, 82, 83, 84, 85, 86, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107], "20": [1, 3, 24, 28, 37, 45, 47, 49, 51, 68, 72, 85, 86, 93, 94, 100, 102], "2000": 65, "2018": [28, 42], "2020": 65, "2022": 83, "2023": [65, 79, 82], "2024": [28, 49, 51], "2048": [28, 41], "208": 65, "2080": 65, "20ghz": 65, "21": [3, 28, 37, 93, 94], "210": 65, "21589865655358": [28, 37, 93], "22": [3, 28, 93, 94], "2200000000": 65, "2207999000": 65, "222": [24, 28, 97], "2250": 65, "23": [3, 28, 39, 41, 94], "2324_pytest_benchmark_doc": 65, "236": 65, "24": [3, 28, 29, 37, 41, 58, 65, 85, 93, 94], "246": 65, "25": [3, 26, 28, 29, 31, 41, 42, 58, 62, 94, 96, 98], "255": 39, "256": [28, 41, 65], "2561": 65, "26": [65, 94], "263": 65, "264": 65, "267": 65, "27": [28, 41, 65, 72, 94], "28": [62, 94], "281": 65, "29": 94, "2_147_483_647": 39, "2_147_483_648": 39, "2\u00b3x\u2087": 60, "2\u00b3\u2087": 60, "3": [20, 24, 26, 28, 29, 31, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 57, 58, 59, 60, 62, 64, 65, 72, 73, 74, 82, 83, 85, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107], "30": [3, 28, 29, 49, 51, 58, 62, 69, 85, 94], "3000": [28, 58], "30013431967121934": [28, 42, 46, 47], "3025850929940459": [28, 37, 93], "31": [68, 86], "317766166719343": [28, 52, 53], "31de39be8b19c76d073a8999def6673a305c250d": 65, "32": [28, 37, 39, 41, 56, 65, 72, 74, 82, 83], "3219280948873626": [28, 37, 93], "32_767": 39, "32_768": 39, "33": [28, 37, 93], "3304": 65, "3306": 65, "333": [24, 28, 97], "333333333333333": [26, 28, 98], "33333333333333326": [26, 28, 98], "33333333333333337": [26, 28, 98], "33333333333333348": [26, 28, 98], "333333333333334": [28, 49, 51], "35": 72, "350": 65, "35000": 72, "353429832157099": [28, 42, 46, 47, 96], "36": 99, "3620": 65, "36893488147419103233": [3, 28], "37": 72, "3805": 65, "384": [28, 41], "38552048588998722": [28, 45, 47, 102], "3890560989306504": [28, 37, 93], "39": [24, 28, 65], "3dnowprefetch": 65, "3q4kc": [28, 42], "4": [20, 21, 24, 26, 28, 29, 31, 35, 37, 41, 42, 43, 45, 46, 47, 52, 53, 57, 58, 59, 60, 62, 65, 72, 74, 82, 83, 85, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107], "40000": [24, 28], "4097": 65, "4110385860243131": [28, 37, 93], "4142135623730951": [28, 41], "41619265571741659": [28, 42], "4177": 65, "42": 100, "4231": 65, "4298": 65, "4328": 65, "44017172817806": 65, "4444": 65, "45": [28, 37], "450": [28, 37, 93], "454368507659211": [28, 37, 93], "457": 22, "46": [28, 37, 58, 93], "4608": [28, 41], "4621": 65, "4657359027997265": [28, 52, 53], "47108547995356098": [28, 45, 47, 102], "47383036230759112": [28, 42, 46, 47], "478894913238722": [28, 37, 93], "48": [28, 29, 58], "4869": 65, "4875": 65, "4930614433405491": [28, 52, 53], "494295836924771": [28, 37, 93], "4_294_967_295": 39, "4k": [28, 42], "5": [3, 20, 21, 22, 24, 26, 28, 29, 37, 39, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 57, 58, 59, 60, 62, 65, 72, 73, 74, 76, 83, 85, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 105, 107], "50": [65, 72], "500": [22, 66, 69], "5000": [24, 28], "512": [28, 41], "52": [39, 72], "5246": 65, "5255": 65, "5275252316519465": [26, 28, 98], "53": [28, 37], "5306": 65, "5392023718621486": [28, 42, 46, 47, 96], "54": [28, 37, 93], "544": 16, "55": 54, "5541": 65, "5555": [22, 79, 106], "55555555555555536": [26, 28, 98], "55555555555555558": [26, 28, 98], "5571769623557188": [28, 37, 93], "56": [28, 41, 73], "5622": 65, "5652": 65, "567584107142031": [28, 42, 46, 47], "57": 65, "5728783400481925": [28, 37, 93], "57600036956445599": [28, 42], "58": 65, "5801": 65, "5835189384561099": [28, 52, 53], "5837": 65, "598150033144236": [28, 37, 93], "5____6___7": [60, 107], "5e": 65, "5h": [28, 61], "5oz1": [28, 42], "6": [3, 20, 24, 26, 28, 29, 31, 37, 41, 42, 43, 52, 53, 54, 57, 60, 62, 65, 72, 82, 83, 85, 86, 88, 90, 93, 94, 96, 97, 98, 99, 100, 103, 105, 107], "60": [28, 41], "6051701859880918": [28, 37, 93], "6094379124341003": [28, 52, 53], "61": [28, 41], "6125": 65, "62": [28, 41, 65], "62511314008006458": [28, 45, 47, 102], "63": [28, 37, 41, 101], "64": [23, 28, 37, 39, 41, 42, 46, 47, 65, 96, 97, 101], "6438561897747253": [28, 37, 93], "6450": 65, "6465": 65, "647": 22, "64bit": 65, "65": [28, 41], "65_535": 39, "6615356693784662": [28, 42], "6666666666666665": [26, 28, 98], "68586185091150265": [28, 42, 46, 47], "6864": 65, "68894208386667544": [28, 42, 46, 47, 96], "7": [24, 26, 28, 29, 37, 41, 42, 43, 45, 46, 47, 52, 53, 57, 58, 59, 62, 72, 82, 83, 85, 90, 92, 93, 94, 96, 97, 98, 100, 102, 103, 105], "7085325853376141": [28, 45, 47, 102], "71": 72, "710615785506533": [28, 37, 93], "7182818284590451": [28, 37, 93], "7320508075688772": [28, 41], "7336": 65, "75": [26, 28, 42, 96, 98], "75000": 72, "754": 39, "7544": 65, "7659": 65, "77000": 72, "77777777777777768": [26, 28, 98], "77777777777777779": [26, 28, 98], "7852": 65, "78523998586553": [28, 37, 93], "79": 65, "7912": 65, "7999999999999998": [26, 28, 98], "8": [24, 26, 28, 31, 37, 39, 41, 42, 45, 46, 47, 49, 51, 52, 53, 57, 59, 60, 65, 72, 73, 83, 85, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103], "80": 72, "8075": 65, "8377304471659395": [28, 52, 53], "8380": 65, "84": 72, "84010843172504": [28, 37, 93], "87": 65, "875": [28, 58], "8750h": 65, "8797352989638163": [28, 45, 47, 102], "88": 65, "8800": 65, "88281": [24, 28], "896": [28, 41], "9": [3, 21, 24, 26, 28, 31, 37, 41, 42, 57, 59, 60, 62, 65, 72, 82, 83, 90, 92, 93, 94, 96, 97, 98, 99, 100, 103, 107], "90": 65, "9012": 65, "9160772326374946": [28, 42, 46, 47, 96], "9177": 65, "92176432277231968": [28, 42, 46, 47, 96], "92233720368547758085": [3, 28], "92233720368547758090": [3, 28], "92233720368547758091": [3, 28], "92233720368547758095": [3, 28], "931": 85, "9314718055994531": [28, 52, 53], "934176000000015": 99, "9362": 22, "94": 65, "9437184": 65, "9442193396379163": 28, "945880905466208": [28, 37, 93], "96": [28, 41], "9602": 22, "9683": 22, "99": [24, 28, 54, 65, 97], "990": 85, "999": 54, "9991": 65, "99999": 0, "9999999999999982": [26, 28, 98], "9_223_372_036_854_775_807": 39, "9_223_372_036_854_775_808": 39, "A": [1, 2, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 37, 41, 42, 44, 45, 47, 54, 56, 57, 58, 60, 62, 68, 72, 78, 88, 90, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 107], "AND": [26, 28, 57, 89, 98], "And": [54, 101], "As": [0, 28, 37, 41, 54, 58, 68, 73, 75, 82, 83, 90, 93, 101, 104, 107], "At": [28, 37, 41, 93], "Be": [0, 24, 28, 29, 31, 41, 60, 64], "But": [3, 28], "By": [20, 21, 23, 24, 26, 28, 29, 31, 37, 41, 43, 57, 60, 61, 94, 98, 105, 107], "For": [0, 2, 3, 4, 16, 21, 24, 26, 28, 31, 35, 42, 45, 46, 47, 54, 59, 60, 61, 62, 64, 65, 69, 72, 77, 79, 81, 82, 83, 84, 87, 90, 92, 96, 98, 99, 100, 101, 102, 103, 105, 107], "IN": 72, "If": [0, 1, 3, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 35, 36, 37, 41, 42, 43, 45, 47, 57, 58, 60, 61, 62, 64, 66, 67, 68, 69, 73, 74, 76, 79, 81, 82, 83, 84, 86, 87, 90, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107], "In": [21, 24, 26, 28, 31, 37, 41, 45, 47, 60, 64, 65, 66, 68, 69, 72, 79, 81, 82, 84, 86, 90, 93, 98, 99, 100, 102, 103, 106, 107], "It": [0, 4, 23, 24, 28, 41, 56, 57, 62, 66, 67, 70, 72, 73, 74, 76, 79, 81, 82, 83, 86, 97, 98, 103], "NO": 65, "NOT": [24, 28, 29, 31, 37, 41, 60, 81, 90, 101], "No": [28, 41, 81, 86], "Not": [28, 31, 37, 58, 61, 65, 97], "ONE": 74, "OR": [26, 28, 57, 68, 89, 98], "Of": [28, 61], "On": [21, 22, 28, 106], "One": [24, 26, 28, 29, 41, 58, 62, 72, 98, 104], "Ones": [28, 42, 96], "Or": 68, "Such": 16, "The": [0, 1, 2, 3, 4, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 39, 41, 42, 43, 45, 46, 47, 49, 51, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 68, 72, 73, 74, 75, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107], "There": [1, 26, 28, 31, 37, 65, 72, 81, 86, 96, 105], "These": [1, 16, 24, 28, 58, 72, 74, 77, 79, 90], "To": [0, 1, 24, 26, 28, 37, 45, 47, 54, 61, 64, 65, 66, 70, 73, 79, 81, 83, 84, 94, 95, 97, 99, 101, 102, 107], "Will": 65, "With": [26, 28, 84, 94, 98, 100], "_": [3, 28, 35, 60, 107], "__": [35, 60, 107], "__4___5____6___7": [35, 60, 107], "___": [60, 107], "____": [35, 60, 107], "__all__": 64, "__allsymbols__": [28, 30], "__array_function__": 4, "__dict__": 84, "__init__": [2, 28], "__registeredsymbols__": [28, 30], "_abstractbasetim": [28, 61], "_array_object": [6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19], "_base_unit": [28, 61], "_distn_infrastructur": 54, "_filter_arkouda_command": 27, "_get_grouping_kei": [26, 28, 98], "_ilocindex": [28, 58], "_length": [28, 57], "_local": [20, 21, 24, 28, 29, 31, 41, 57, 60, 74], "_locale0000": [24, 28], "_locindex": [28, 58], "_segment": [28, 57, 74], "_type": [4, 6, 7, 15], "_valu": [28, 57, 74], "_x": [24, 28], "_y": [24, 28], "a1": [28, 33, 37, 93], "a2": [28, 33, 37, 93], "ab": [9, 28, 37, 61, 89, 93], "abc": [28, 29, 73], "abil": 103, "abl": [64, 68, 74, 75, 81, 90], "abm": 65, "abocorhfm": [28, 42], "about": [21, 22, 28, 30, 41, 60, 61, 64, 65, 69, 79, 84, 93, 94, 107], "abov": [28, 45, 47, 54, 65, 70, 72, 79, 81, 82, 97, 102, 107], "abs_dt": [28, 33], "absolut": [1, 28, 37, 61, 84, 93], "abstract": 27, "acceler": 67, "accept": [28, 58, 61, 65, 104], "access": [1, 2, 22, 28, 31, 56, 58, 60, 72, 77, 83, 89, 90, 102, 106], "access_channel": [22, 106], "access_token": [22, 106], "accessor": [28, 63], "accomod": [23, 28], "accomplish": [84, 90], "accord": [23, 24, 28, 29, 37, 58, 62, 97, 101], "accordingli": [28, 42, 74, 96], "account": 86, "accur": 54, "accuraci": 54, "achiev": [3, 28, 81], "aco": 9, "acosh": 9, "across": [24, 28, 31, 74, 90, 102], "act": [16, 28, 41, 64], "action": 68, "activ": [81, 82, 83, 98], "actual": [28, 33, 64, 73], "ad": [20, 21, 23, 24, 28, 29, 31, 34, 41, 57, 60, 69, 71, 72, 76, 81, 90, 106], "add": [0, 1, 9, 20, 21, 24, 26, 28, 31, 45, 47, 57, 58, 64, 68, 81, 82, 83, 84, 86, 97, 98, 102], "addentri": 64, "addit": [1, 26, 28, 37, 44, 45, 47, 64, 66, 74, 76, 82, 101, 102, 105, 106], "addition": [84, 91], "address": [0, 22, 23, 28, 106], "adher": 74, "advanc": 94, "adversari": [28, 37], "adx": 65, "ae": 65, "affect": [23, 28, 45, 47, 102], "after": [0, 21, 24, 28, 60, 68, 70, 81, 97, 102, 107], "ag": 72, "again": [0, 70, 72, 73, 81, 82], "against": [21, 28, 57, 60, 65, 72, 90, 103, 107], "aggreg": [1, 24, 26, 28, 57, 62, 72, 89, 90, 98], "aggress": 90, "aid": [72, 74], "aim": 72, "ak": [0, 1, 3, 9, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 57, 58, 59, 60, 61, 62, 64, 69, 70, 72, 73, 79, 81, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107], "ak_arr": 72, "ak_data": [28, 31, 90], "ak_df": [24, 28, 44, 97], "ak_in1d": 72, "ak_in1dmult": 72, "ak_in1dmulti": 72, "ak_int": 72, "ak_intmult": 72, "ak_io_benchmark": 65, "aka": 56, "akab": 28, "akbool": 28, "akcast": 28, "akfloat64": 28, "akint64": [28, 42, 45, 46, 47], "akstat": [28, 49, 51], "aku": [3, 28, 29, 48, 91], "akuint64": 28, "algorithm": [28, 37, 59, 62, 79, 92], "alia": [24, 26, 28, 39, 57, 58, 61, 97, 98], "alias": [28, 61], "alic": [24, 28, 97], "align": [28, 29, 63], "all": [0, 3, 4, 16, 17, 20, 21, 22, 24, 26, 28, 29, 30, 31, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 47, 57, 60, 61, 62, 64, 65, 68, 69, 70, 73, 74, 76, 79, 82, 83, 84, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107], "all_scalar": [25, 28, 42, 96], "allclos": 54, "alloc": 22, "allow": [0, 21, 23, 24, 28, 29, 31, 34, 41, 42, 45, 46, 47, 49, 51, 57, 58, 60, 62, 65, 66, 72, 74, 75, 77, 84, 86, 90, 96, 102, 103], "allow_error": [24, 28, 29, 31, 41, 60, 90], "allow_list": [28, 29, 91], "allsymbol": [28, 30], "almost": [95, 97, 101, 107], "alnum": 60, "alon": [95, 107], "along": [24, 26, 28, 37, 42, 96, 105], "alongsid": [28, 31], "alpha": [54, 60, 65, 88], "alphabet": 60, "alphanumer": 60, "alreadi": [0, 1, 21, 24, 26, 28, 29, 31, 41, 57, 58, 60, 61, 69, 73, 74, 76, 81, 95, 98, 105], "also": [1, 3, 4, 21, 23, 26, 28, 33, 37, 42, 43, 54, 57, 58, 60, 67, 69, 72, 73, 75, 76, 77, 79, 82, 86, 90, 96, 100, 101, 103, 105, 107], "altern": [1, 28, 54, 58, 68, 69, 81, 83, 86], "alwai": [0, 26, 28, 31, 41, 61, 73, 90, 93, 95, 97, 98, 99, 101, 107], "amount": [22, 24, 28, 41, 84, 97, 107], "an": [0, 1, 3, 4, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 41, 42, 43, 45, 46, 47, 48, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 79, 82, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "anaconda": [1, 79, 81, 86, 87], "anaconda3": [81, 82, 83], "analog": [26, 28, 61, 98], "analyt": 78, "angl": [28, 37], "ani": [0, 3, 17, 20, 21, 24, 26, 28, 29, 30, 31, 32, 37, 39, 41, 42, 45, 47, 57, 58, 60, 64, 65, 68, 70, 74, 76, 82, 83, 89, 93, 97, 98, 99, 101, 102, 103, 107], "anim": [28, 58], "animal_1": [24, 28], "animal_2": [24, 28], "annot": 16, "anoth": [0, 24, 26, 28, 31, 37, 41, 60, 74, 79, 83, 86, 90, 97, 98, 100, 101, 103, 107], "anyon": 0, "anyth": [0, 28, 41, 68], "anywai": [0, 96], "api": [1, 4, 7, 9, 10, 14, 16, 17, 24, 26, 28, 58, 62, 64, 78, 98, 101], "api_specif": [7, 28, 62], "apic": 65, "app": 86, "appear": [3, 21, 24, 26, 28, 29, 31, 41, 43, 58, 60, 68, 98, 99], "append": [20, 21, 24, 26, 28, 29, 31, 41, 43, 57, 60, 74, 76, 89, 96, 98, 107], "append_singl": [28, 57, 89, 103], "appli": [3, 24, 26, 28, 37, 65, 93, 97, 98, 107], "applic": [26, 28, 37, 90, 96, 98, 105], "apply_permut": [24, 28, 97], "appreci": 0, "approach": [84, 103], "appropri": [0, 24, 28, 31, 64, 68, 75, 79, 81, 85, 90], "approv": 0, "approxim": [24, 28], "apt": 82, "ar": [0, 1, 3, 4, 16, 21, 23, 24, 26, 28, 29, 31, 37, 41, 42, 43, 45, 47, 54, 56, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 72, 73, 74, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107], "arang": [3, 6, 20, 24, 26, 28, 31, 37, 41, 42, 43, 44, 45, 47, 57, 58, 62, 64, 72, 89, 90, 93, 94, 96, 97, 98, 99, 100, 101, 103, 105], "arbitrari": [24, 28, 97], "arbitrarili": [21, 28], "arcco": [9, 28, 37], "arccosh": [9, 28, 37], "arch": 65, "arch_cap": 65, "arch_string_raw": 65, "architectur": 65, "archiv": 82, "arcsin": [9, 28, 37], "arcsinh": [9, 28, 37], "arctan": [9, 28, 37], "arctan2": [9, 28, 37], "arctanh": [9, 28, 37], "area": [54, 65], "aren": [16, 82, 83], "arg": [0, 3, 28, 29, 39, 42, 54, 57, 58, 61, 62, 64, 84, 96, 98], "arg1": 64, "argmax": [12, 26, 28, 39, 41, 57, 89, 93, 98, 99], "argmaxk": [28, 41, 89, 93, 99], "argmin": [12, 26, 28, 39, 41, 57, 89, 93, 98, 99], "argmink": [28, 41, 89, 93, 99], "argpars": 85, "args1": [3, 28], "args2": [3, 28], "argsort": [14, 21, 22, 24, 26, 28, 29, 39, 41, 59, 89, 92, 93, 95, 97, 98, 107], "argument": [2, 3, 23, 24, 26, 28, 37, 41, 45, 47, 54, 57, 58, 60, 62, 64, 79, 84, 102, 104], "arithmet": [89, 101], "arkodua": [73, 74], "arkouda": [63, 65, 68, 70, 71, 75, 77, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 100, 101, 105], "arkouda_arrow_path": 1, "arkouda_client_directori": [1, 56], "arkouda_client_mod": 1, "arkouda_client_timeout": 1, "arkouda_config_fil": [69, 84], "arkouda_develop": [1, 69], "arkouda_full_stack_test": 1, "arkouda_hdf5_path": 1, "arkouda_hom": 1, "arkouda_iconv_path": 1, "arkouda_idn2_path": 1, "arkouda_key_fil": 1, "arkouda_log_level": [1, 28], "arkouda_mem_alloc": 22, "arkouda_numlocal": 1, "arkouda_password": 1, "arkouda_print_passes_fil": 1, "arkouda_quick_compil": [1, 69, 83], "arkouda_root": 65, "arkouda_serv": [1, 22, 25, 28, 66, 69, 70, 79, 81, 84, 106], "arkouda_server_aggregation_dst_buff_s": 1, "arkouda_server_aggregation_src_buff_s": 1, "arkouda_server_aggregation_yield_frequ": 1, "arkouda_server_connection_info": 1, "arkouda_server_host": 1, "arkouda_server_port": 1, "arkouda_server_user_modul": [1, 84], "arkouda_skip_check_dep": 1, "arkouda_supported_dtyp": [25, 28], "arkouda_tunnel_serv": 1, "arkouda_typ": [24, 28, 29, 31, 41, 60], "arkouda_verbos": 1, "arkouda_vers": 74, "arkouda_zmq_path": 1, "arkoudalogg": [26, 28, 34, 60, 98], "arkoudavers": 0, "arm64": 83, "around": [0, 4, 16, 23, 28, 54, 68, 70], "arr": [28, 43], "arrai": [3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 33, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 57, 58, 59, 60, 61, 62, 64, 65, 73, 74, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 107], "arraryview": [20, 28, 94], "array_api": [28, 63], "array_of_size_rank": 74, "array_view": [28, 31, 63, 94], "arrays_and_dtyp": 7, "arraysetop": [64, 105], "arraysetopsmsg": 64, "arrayview": [20, 28, 31, 37, 41, 89, 90, 101], "arri": 62, "arrow": [1, 85], "artifact": 56, "as_compon": [28, 62], "as_index": [24, 28, 97], "as_integer_ratio": 39, "as_perc": 22, "asarrai": [4, 6, 16], "ascend": [24, 26, 28, 29, 37, 41, 58, 91, 97, 99, 104], "ascii": 65, "asia": [28, 61], "asin": 9, "asinh": 9, "ask": 0, "aslogg": 64, "assembl": 60, "assert": [25, 28], "assig": 100, "assign": [0, 21, 24, 26, 28, 58, 73, 74, 89, 95, 98, 103, 107], "assist": [0, 84], "associ": [0, 1, 28, 31, 45, 47, 58, 62, 65, 68, 90, 102, 103, 104], "assum": [2, 24, 26, 28, 31, 42, 43, 58, 68, 73, 74, 75, 82, 83, 87, 90, 97, 98, 104, 105], "assume_sort": [26, 28, 98, 105], "assume_uniqu": [28, 43, 105], "assumpt": [20, 21, 28, 41, 42, 60, 90, 94, 95, 101, 107], "ast": 85, "astyp": [7, 24, 28, 39, 41, 60], "atan": 9, "atan2": 9, "atanh": 9, "attach": [21, 23, 24, 26, 28, 29, 41, 57, 58, 60, 61, 62, 89, 98], "attach_al": [28, 62], "attach_pdarrai": [28, 41], "attahc": [28, 41], "attempt": [21, 24, 26, 28, 29, 31, 41, 57, 58, 59, 60, 61, 81, 90, 97, 98], "attent": 65, "attrib": 64, "attribut": [20, 21, 24, 29, 31, 41, 60, 61, 90, 94, 101], "attributi": [28, 41, 101], "authent": [22, 56, 79, 106], "author": 0, "author_tim": 65, "auto": [54, 63, 68], "autoapi": [63, 85], "autoclass": 91, "autom": [1, 68], "automat": [1, 21, 28, 31, 58, 74, 90, 95, 104], "autosav": 65, "av": 64, "avail": [1, 22, 28, 31, 41, 45, 54, 65, 70, 74, 86, 90, 99, 102], "avail_mem": 22, "averag": [26, 28, 41, 42, 65, 93, 98], "avoid": [0, 67, 70], "avx": 65, "avx2": 65, "awar": 0, "awk": 86, "ax": [0, 4, 11, 16, 24, 28, 54], "axi": [10, 11, 12, 14, 15, 17, 19, 24, 28, 29, 44, 57, 58, 59, 92, 97, 103, 104], "b": [21, 22, 24, 26, 28, 29, 31, 33, 37, 39, 41, 42, 43, 44, 45, 47, 54, 57, 58, 59, 60, 62, 72, 88, 92, 93, 97, 98, 99, 100, 101, 102, 103, 105, 107], "back": [23, 26, 28, 62, 64, 67, 70, 90, 98], "backbon": 101, "backend": [24, 28, 58, 67, 81], "backward": [28, 57, 62, 103], "badvalu": 54, "balanc": [21, 28, 60], "bandwidth": [28, 42, 90], "base": [0, 1, 2, 3, 4, 13, 16, 20, 21, 23, 24, 27, 28, 29, 31, 34, 37, 39, 41, 45, 48, 49, 51, 54, 59, 61, 62, 68, 81, 83, 87, 89, 90, 91, 92, 93, 94, 95, 97, 101, 102, 104, 107], "bash": [82, 83], "bashrc": [82, 83, 86], "basic": [22, 28, 29, 41, 56, 68, 86, 94, 101], "bear": [0, 68, 82, 83], "becaus": [20, 21, 24, 28, 29, 31, 37, 42, 46, 47, 57, 60, 69, 72, 73, 74, 75, 79, 90, 95, 96, 97, 103, 107], "becom": [28, 37], "been": [1, 21, 22, 24, 28, 31, 41, 43, 57, 60, 66, 67, 68, 81, 84, 93, 95, 96], "befor": [0, 28, 61, 65, 81, 90], "begin": [0, 60, 100, 107], "behav": [0, 20, 28, 94], "behavior": [0, 4, 24, 28, 41, 42, 45, 46, 47, 93, 94, 96, 97, 102, 107], "being": [20, 24, 28, 29, 31, 37, 41, 58, 72, 74, 75, 76, 84, 90, 94, 97, 100, 104], "believ": 68, "belong": [21, 28, 95], "below": [28, 44, 54, 65, 66, 72, 81, 82, 83, 85, 90, 97], "bench_decod": 65, "bench_encod": 65, "benchmark": [69, 71, 84, 88], "benchmark_v2": 65, "benefici": [65, 76], "best": [0, 3, 28, 54], "better": [20, 21, 24, 28, 29, 31, 41, 57, 60], "between": [1, 21, 22, 28, 33, 37, 41, 42, 60, 61, 62, 65, 72, 84, 96, 99, 101, 107], "beyond": [28, 41, 72, 93], "bi": [28, 37], "bi_end": [3, 28], "bi_start": [3, 28], "bi_val": [3, 28], "bia": 28, "biggest": 69, "bigint": [25, 28, 37, 41, 42, 65, 90, 96], "bigint_from_uint_arrai": [3, 28, 41, 42], "bigint_to_uint_arrai": [28, 41, 42], "bin": [28, 37, 41, 44, 54, 81, 82, 83, 86, 99], "binari": [23, 28, 42, 82, 83, 93], "binop": [21, 24, 28, 31, 41, 57, 60], "bit": [0, 7, 21, 23, 28, 37, 39, 41, 42, 57, 60, 65, 69, 90, 94, 96, 97, 101], "bit_count": 39, "bittyp": [25, 28], "bitvector": [23, 28], "bitwis": [26, 28, 98, 101], "bitwise_and": 9, "bitwise_invert": 9, "bitwise_left_shift": 9, "bitwise_or": 9, "bitwise_right_shift": 9, "bitwise_xor": 9, "black": 0, "block": [0, 21, 28, 43, 60, 64, 72, 79, 96], "bmi1": 65, "bmi2": 65, "bob": [24, 28, 97], "bodi": 0, "bool": [3, 6, 7, 8, 11, 12, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 57, 58, 59, 60, 61, 62, 65, 74, 88, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107], "bool_": [21, 28, 39, 41, 60, 61, 99], "bool_onli": [24, 28], "bool_scalar": [25, 28], "boolean": [3, 7, 21, 24, 26, 28, 35, 37, 39, 41, 43, 57, 58, 60, 72, 74, 93, 95, 97, 98, 100, 101, 103, 104, 105, 107], "boost": 81, "borrow": 64, "both": [22, 24, 28, 31, 33, 37, 41, 43, 61, 69, 72, 74, 75, 79, 81, 90, 95, 105, 107], "bottleneck": 67, "bottom": [28, 41, 68], "bound": [28, 41, 42, 46, 47, 57, 61, 96, 103], "boundari": [28, 45, 47, 61, 102], "box": 68, "branch": [0, 64, 65, 68, 81], "brand_raw": 65, "brew": 83, "bring": 68, "broad": 0, "broadcast": [11, 26, 28, 37, 41, 62, 89, 93, 98], "broadcast_arrai": 11, "broadcast_dim": [28, 62], "broadcast_to": 11, "broadcast_to_shap": [28, 41], "broken": 64, "brotli": [21, 24, 28, 29, 31, 41, 57, 60, 65, 76], "brown": 72, "browser": 81, "buffer": 1, "bug": [68, 71], "build": [1, 26, 28, 65, 68, 71, 79, 82, 86, 98, 106], "build_from_compon": [26, 28, 89, 98], "built": [0, 20, 21, 28, 41, 60, 66, 68, 69, 70, 79, 81, 83, 84, 90, 94, 95, 101, 107], "builtin": [28, 41], "bundl": [82, 83], "button": 68, "bydayofweek": 98, "byte": [20, 21, 24, 25, 28, 29, 31, 33, 39, 41, 42, 58, 60, 62, 74, 79, 90, 94, 95, 97, 101, 107], "byteord": [25, 28], "bytes_attrib": 60, "bytes_s": 60, "byteswap": 39, "c": [16, 20, 21, 24, 28, 29, 39, 41, 42, 43, 44, 57, 58, 60, 62, 65, 67, 69, 82, 88, 94, 97, 101, 103, 105, 107], "c1": [28, 37, 93], "c2": [28, 37, 93], "c_string": 74, "cach": [2, 21, 28, 60], "cached_regex_pattern": 60, "cachedaccessor": [2, 28], "calc_string_offset": [28, 31, 90], "calcul": [26, 28, 31, 41, 43, 54, 65, 74, 90, 93, 98, 99, 105], "calculu": [35, 107], "call": [21, 22, 23, 24, 26, 28, 31, 41, 42, 45, 46, 47, 54, 57, 58, 60, 64, 72, 76, 79, 81, 83, 84, 90, 93, 94, 96, 97, 98, 101, 102, 106], "callabl": [4, 23, 24, 28, 97], "callback": [23, 28], "caller": [24, 28, 58, 97], "came": [28, 57, 103], "can": [1, 3, 16, 20, 21, 23, 24, 26, 28, 29, 31, 37, 41, 42, 43, 46, 47, 54, 56, 57, 58, 60, 61, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 86, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107], "can_cast": 7, "cancel": [28, 37], "cannot": [3, 20, 21, 23, 24, 26, 28, 29, 31, 37, 41, 42, 57, 58, 60, 61, 76, 86, 90, 94, 95, 98, 101, 107], "canon": 39, "capac": [28, 37, 101], "capit": 60, "capitilz": 60, "captur": [1, 35, 107], "care": 65, "carol": [24, 28, 97], "carri": [28, 61], "cartesian": 94, "case": [21, 22, 26, 28, 29, 31, 37, 41, 45, 47, 54, 58, 60, 61, 65, 67, 72, 73, 74, 76, 81, 82, 84, 86, 93, 102, 104], "cask": 83, "caskroom": [81, 83], "cast": [3, 4, 23, 28, 37, 41, 42, 60, 64, 89, 90, 96, 107], "castabl": [28, 52, 53], "cat": [21, 28, 31, 86], "catch": 0, "categor": [24, 26, 28, 29, 31, 37, 43, 58, 59, 62, 63, 89, 90, 92, 93, 96, 97, 98, 99, 101, 104, 105], "categori": [0, 21, 28, 59, 68, 74, 89, 92, 95], "categorical_arrai": [21, 28], "categorical_test": 0, "categoricaltest": 0, "cattwo": [21, 28], "caus": [20, 21, 24, 28, 29, 31, 41, 57, 60, 79, 81], "caution": [20, 21, 28, 41, 42, 60, 90, 94, 95, 101, 107], "ccflag": 1, "cd": [66, 79, 82, 83, 85], "cdf": 54, "cdoubl": 39, "ceil": [9, 28, 37], "cell": [24, 28], "cento": 82, "central": 54, "certain": [28, 41, 66, 84, 93], "cfg": [1, 69, 70, 84], "cfloat": 39, "chang": [1, 23, 24, 28, 29, 31, 41, 45, 65, 68, 70, 79, 82, 83, 85, 90, 93, 97, 102], "channel": [22, 106], "chapel": [22, 28, 37, 45, 64, 67, 69, 74, 78, 79, 81, 84, 85, 86, 87, 101, 102, 106, 107], "chapel_vers": 79, "char": [28, 39, 40, 60, 63], "charact": [21, 22, 23, 27, 28, 39, 42, 58, 60, 84, 107], "check": [0, 1, 3, 16, 20, 21, 24, 26, 28, 29, 31, 37, 41, 54, 57, 60, 62, 64, 68, 69, 70, 88, 95, 105, 106, 107], "check_np_dtyp": [25, 28], "checker": 16, "checkout": 70, "chi": [28, 49, 51, 54], "chi2": 54, "chipset": 83, "chisquar": [28, 49, 51], "choic": [28, 42, 45, 47, 81], "choos": [28, 37, 39, 68, 83, 86, 93, 106], "chosen": [3, 28, 37, 41, 93, 101, 103], "chpl": [1, 64, 69, 81, 82, 83, 84], "chpl_comm": [66, 82, 83], "chpl_debug_flag": 1, "chpl_develop": [69, 83], "chpl_flag": [1, 67], "chpl_gasnet_cfg_opt": 66, "chpl_gmp": [82, 83], "chpl_home": [66, 82, 83], "chpl_llvm": [82, 83], "chpl_re2": [82, 83], "chpl_rt_oversubscrib": 66, "chpl_target_compil": 67, "chpl_target_cpu": 83, "chpl_test_timeout": 66, "chplconfig": 82, "chpldoc": [81, 82], "chunk": [21, 28, 29, 31, 41, 57, 60], "ci": 0, "circl": [28, 37], "cl": [2, 28, 95], "clang": [67, 82], "class": [0, 42, 65, 89, 90, 91, 94, 95, 97, 98, 102, 103, 104, 107], "classmethod": [21, 23, 24, 28, 29, 57, 58, 95], "claus": [28, 37, 93], "clean": 81, "clear": [28, 41], "clflush": 65, "clflushopt": 65, "click": [68, 81, 87], "client": [20, 21, 24, 28, 41, 42, 60, 61, 63, 75, 81, 82, 83, 84, 85, 86, 89, 94, 95, 97, 101, 103, 107], "client_dtyp": [28, 31, 63], "clientgeneratedlog": [28, 34], "clip": [28, 37, 39], "clone": 87, "clongdoubl": 39, "clongfloat": 39, "close": [0, 3, 28, 42, 61, 64, 72, 96], "clz": [28, 41], "cm_version": 82, "cmake": [82, 85], "cmd": [64, 84], "cmd_filter": 22, "cmov": 65, "co": [9, 26, 28, 37, 42, 89, 93, 98], "coargsort": [24, 28, 59, 89, 92, 95, 97, 107], "code": [1, 21, 28, 29, 31, 39, 49, 51, 59, 64, 68, 69, 72, 74, 79, 84, 89, 92, 95], "coeffici": [28, 41], "col": [28, 44], "col1": [24, 28, 97], "col2": [24, 28, 97], "col2_i": [24, 28], "col2_x": [24, 28], "col3": [24, 28, 97], "col_a": [24, 28], "col_b": [24, 28], "col_c": [24, 28], "col_delim": [24, 28, 29, 31, 41, 60], "col_nam": [28, 31], "cola": 73, "colb": 73, "colc": 73, "collect": [21, 24, 26, 28, 29, 31, 41, 48, 54, 57, 60, 82, 98], "collis": [21, 28, 37, 60], "column": [3, 21, 24, 26, 28, 29, 31, 41, 44, 57, 58, 59, 60, 72, 73, 76, 77, 90, 92, 98, 103, 104], "column_data": 72, "column_delim": [28, 31, 90], "column_major": [20, 28, 41, 94], "column_nam": 72, "columnar": 90, "com": [0, 28, 49, 51, 82, 83], "combin": [24, 28, 60, 61, 62, 70], "come": [26, 28, 70, 90, 96, 105], "comma": [65, 73, 81], "command": [22, 27, 28, 41, 64, 65, 66, 68, 70, 79, 81, 83, 84, 85, 86, 106], "command_filt": [22, 27], "commandlin": 65, "commandmap": [22, 64, 84], "comment": [0, 69, 84], "commit": [0, 68], "commit_info": 65, "common": [0, 3, 26, 28, 43, 64, 86, 90, 98, 105, 107], "commonli": 72, "commun": [1, 28, 59, 68, 83, 92, 96], "compar": [54, 60, 68, 88, 90, 107], "comparison": [65, 73, 95, 101, 103, 107], "compat": [7, 9, 10, 14, 17, 21, 24, 28, 39, 41, 57, 61, 62, 97, 98], "compet": 1, "compil": [60, 67, 70, 71, 81, 82, 83, 84, 86], "complementari": [28, 41], "complet": [21, 22, 24, 28, 41, 54, 57, 60, 64, 66, 68, 81, 83, 106, 107], "complex": [3, 28, 39, 79], "complex128": [8, 25, 28, 39], "complex256": 39, "complex64": [8, 25, 28, 39], "complex_": 39, "compliant": 4, "compon": [3, 21, 23, 24, 26, 28, 29, 30, 41, 57, 58, 60, 61, 62, 65, 74, 76, 98], "compos": [28, 39, 42, 60, 79, 90], "composit": 60, "compress": [21, 24, 28, 29, 31, 39, 41, 57, 60, 65, 100, 103], "compris": 107, "comput": [21, 22, 24, 26, 28, 33, 37, 41, 49, 51, 52, 53, 57, 60, 64, 72, 90, 93, 95, 97, 98, 99, 101, 103, 105, 107], "computation": 72, "compute_join_s": [28, 33], "concat": [11, 24, 28, 29, 57, 58, 97, 104], "concaten": [21, 24, 28, 43, 57, 58, 60, 62, 64, 89, 103, 104, 107], "concept": 95, "concis": 68, "concret": [25, 28], "concurr": [0, 90], "cond": [28, 37, 93], "conda": [79, 81, 82, 83, 85], "condens": [28, 57, 103], "condit": [3, 12, 24, 28, 37, 41, 54, 93], "conf": 86, "confid": 54, "config": [82, 84], "configur": [0, 1, 28, 65, 72, 79, 83, 86, 91, 97, 104], "confirm": [0, 68], "conflict": 0, "conform": 64, "conj": [9, 39], "conjug": 39, "conjunct": [21, 28, 90, 95, 107], "connect": [21, 22, 24, 28, 29, 42, 49, 51, 52, 53, 56, 58, 62, 64, 69, 86, 89, 90, 97], "connect_url": [22, 79, 106], "connectionerror": [22, 106], "consecut": [28, 42, 58, 96], "consensu": [0, 68], "consequ": 82, "conserv": [23, 28], "consid": [21, 24, 28, 58, 68, 107], "consider": [26, 28, 105, 107], "consist": [0, 24, 28, 37, 72, 93, 97], "consol": 28, "constant": [26, 28, 41, 89, 98], "constant_tsc": 65, "construct": [4, 16, 21, 28, 42, 45, 57, 60, 64, 72, 89, 98, 100, 102], "constructor": [21, 28, 45, 47, 57, 72, 95, 102], "consum": [28, 29, 58], "conta": [60, 107], "contain": [3, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 37, 41, 42, 43, 44, 45, 47, 57, 58, 59, 60, 61, 63, 64, 65, 69, 70, 72, 73, 74, 79, 84, 88, 89, 90, 92, 93, 95, 96, 97, 98, 101, 103, 104, 105, 107], "content": [1, 73, 90], "contigu": [21, 28, 33, 60], "continu": [0, 54, 68], "contribut": [24, 28, 58, 64], "contributor": [0, 28, 49, 51], "control": [1, 23, 28, 37, 101], "conveni": [28, 82, 83, 90], "convent": [21, 28], "convers": [0, 21, 28, 90, 95, 101, 107], "convert": [4, 16, 20, 21, 23, 24, 28, 29, 37, 41, 42, 57, 58, 60, 61, 62, 73, 90, 94, 95, 97, 101, 103, 104, 105, 107], "convert_byt": 62, "convert_categor": [24, 28, 31], "convert_if_categor": [28, 62], "convert_int": [24, 28], "cool": 0, "coordin": [28, 37, 94], "copi": [6, 7, 11, 20, 24, 28, 29, 31, 39, 45, 47, 57, 59, 103], "core": [24, 27, 28, 65, 68, 97], "corr": [24, 28, 41], "correct": [3, 15, 24, 28, 64, 69, 82, 86, 88, 97], "correctli": [24, 28, 86, 97], "correl": [24, 28, 41], "correspond": [3, 21, 23, 24, 26, 28, 29, 31, 32, 33, 35, 37, 41, 42, 49, 51, 56, 57, 58, 60, 62, 64, 74, 76, 90, 93, 95, 97, 98, 99, 100, 103, 104, 107], "cosh": [9, 28, 37], "cosin": [28, 37, 93], "cosort": [3, 28], "cosorted": [3, 28], "cost": [21, 28, 95], "could": [28, 41, 44, 57, 60, 69, 84, 107], "count": [13, 24, 26, 28, 36, 37, 41, 57, 58, 60, 65, 72, 89, 93, 98, 103, 107], "counter_nam": 65, "coupl": 69, "cours": [28, 41], "cov": [28, 41], "covari": [28, 41], "cpp": 81, "cpp14": 82, "cpu": 65, "cpuid": 65, "cpuinfo_vers": 65, "cpuinfo_version_str": 65, "cpython": 65, "crazi": 1, "creat": [0, 20, 21, 23, 24, 26, 28, 29, 31, 32, 36, 41, 42, 44, 57, 58, 60, 61, 63, 64, 65, 68, 70, 74, 76, 79, 81, 82, 83, 84, 85, 86, 89, 90, 94, 95, 97, 98, 99, 101, 102], "create_pdarrai": [28, 64], "createsymentri": 64, "creation": [4, 16, 21, 28, 64, 68, 89], "cressi": [28, 49, 51], "critic": [28, 34], "crucial": 69, "cryptograph": [28, 37], "csingl": 39, "csv": [24, 28, 29, 31, 41, 60, 77, 90], "csv_output": [24, 28], "ctrl": 69, "ctz": [28, 41], "cuda": [28, 41], "cumprod": [28, 37, 39, 89, 93], "cumsum": [28, 37, 39, 89, 93], "cumul": [28, 37, 44, 54, 88, 93], "curl": 82, "current": [0, 20, 21, 22, 24, 26, 28, 29, 30, 31, 37, 41, 42, 45, 47, 56, 60, 67, 68, 69, 73, 74, 75, 76, 82, 83, 87, 90, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 106, 107], "current_arkouda_vers": 74, "custom": [2, 28, 34, 64, 73, 81, 99], "customiz": 90, "cut": [67, 68, 70], "cwd": [28, 31, 41], "cx16": 65, "cx8": 65, "cycl": [83, 85], "d": [0, 4, 16, 21, 24, 28, 29, 39, 42, 43, 44, 45, 47, 57, 58, 60, 61, 62, 72, 88, 102, 103, 105, 107], "dai": [24, 28, 61, 68, 97, 98], "darwin": [56, 83], "dash": 68, "data": [2, 7, 20, 21, 23, 24, 25, 26, 28, 29, 31, 37, 39, 41, 42, 43, 44, 54, 57, 58, 59, 60, 61, 62, 64, 65, 72, 75, 77, 78, 89, 91, 92, 94, 95, 96, 98, 103, 104, 106, 107], "data2": 62, "databas": [24, 28], "datafram": [2, 28, 29, 31, 44, 48, 58, 63, 75, 90, 104], "datalimit": [24, 28, 97], "datapar": 83, "dataset": [20, 21, 23, 24, 26, 28, 29, 31, 41, 57, 60, 73, 74, 76, 77, 98, 107], "dataset_nam": [28, 31, 90], "datasetnam": [28, 31, 90], "datatyp": [28, 42, 52, 53, 74], "date": [20, 28, 61, 68], "date_oper": [2, 28], "date_rang": [28, 61], "datefram": [24, 28, 97], "dateoffset": [28, 61], "datetim": [28, 31, 42, 61, 65, 90], "datetime64": [28, 42, 61], "datetimeaccessor": [2, 28], "datetimeindex": [28, 61], "datsetnam": [28, 31], "day_of_week": [28, 61], "day_of_year": [28, 61], "dayofweek": [28, 61, 98], "dayofyear": [28, 61], "dd": 68, "ddof": [26, 28, 41, 49, 51, 61, 93, 98, 99], "de": 65, "deactiv": 81, "deal": [23, 28], "debandi99": 0, "debug": [28, 34, 64, 66, 70], "decid": 0, "decim": 60, "decod": 60, "decor": 16, "decreas": [28, 41, 42, 69, 93, 96, 99], "dedup": [24, 28, 97], "dedupl": 89, "deep": [24, 28, 57, 97], "def": [16, 64, 73, 84], "default": [1, 3, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 37, 39, 41, 42, 43, 45, 46, 47, 49, 51, 56, 57, 58, 60, 61, 62, 65, 67, 73, 74, 79, 83, 84, 88, 90, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107], "default_log_format": 28, "default_rng": [28, 45, 47, 89, 102], "defaultt": [28, 34], "defautl": 83, "defin": [3, 4, 16, 21, 23, 24, 25, 26, 27, 28, 29, 31, 34, 37, 41, 42, 54, 57, 58, 60, 61, 64, 68, 94, 95, 96, 97, 98, 99, 101], "deg2rad": [28, 37], "degrad": [28, 41, 93], "degre": [26, 28, 37, 41, 49, 51, 54, 93, 98, 99], "degred": [28, 41, 93], "deleg": [28, 37, 42, 46, 47, 96, 99], "delet": [20, 21, 22, 23, 24, 26, 28, 29, 31, 41, 57, 58, 60, 61, 65, 70, 79, 98], "delimit": [24, 28, 29, 31, 32, 41, 58, 60, 65, 68, 73, 90, 107], "delimited_file_to_dict": 32, "delta": [26, 28, 33, 41, 49, 51, 93, 98, 99], "demo": 72, "demonstr": [0, 64], "denom": [28, 37], "denomin": [28, 37, 39, 41], "denot": [24, 28, 29, 31, 41, 54, 60, 61], "dens": [3, 21, 26, 28, 98], "densiti": 54, "dep": [1, 81, 82, 83], "depend": [28, 41, 74, 82, 83, 86, 87, 93, 103], "deprec": [21, 24, 26, 28, 29, 31, 41, 57, 58, 60, 61, 68, 90, 98], "dequ": [28, 42, 90], "deriv": [28, 31, 32, 34, 37, 60, 101], "descend": [14, 24, 28, 42, 58, 96, 97, 104], "describ": [64, 68], "descript": [65, 68, 72, 89], "descriptor": [2, 28, 60], "design": [0, 68, 90], "desir": [3, 22, 23, 28, 37, 41, 42, 45, 46, 47, 56, 65, 66, 79, 84, 93, 96, 99, 101, 102, 106, 107], "destin": 11, "detail": [0, 7, 16, 28, 30, 41, 54, 65, 68, 81, 82, 83, 85, 99, 106, 107], "detect": [24, 28, 31, 58, 74, 90], "determin": [20, 21, 24, 26, 28, 29, 31, 41, 57, 60, 62, 68, 74, 84, 90, 95, 97, 98], "determinist": [21, 28, 43, 96], "dev": [0, 82, 83, 85], "devel": 82, "develop": [1, 21, 28, 68, 69, 70, 82, 83, 84, 87, 90], "deviat": [26, 28, 41, 42, 54, 61, 93, 98, 99], "devic": [4, 6, 16], "devicend": [28, 41], "devicendarrai": [28, 41], "devtoolset": 82, "df": [2, 24, 28, 54, 72, 97], "df1": [24, 28], "df2": [24, 28], "df_deep": [24, 28, 97], "df_shallow": [24, 28, 97], "diagon": 39, "dict": [4, 21, 22, 24, 26, 28, 29, 30, 31, 32, 45, 47, 48, 58, 62, 97, 98, 102], "dict_to_delimited_fil": 32, "dictionari": [21, 22, 24, 26, 28, 31, 32, 45, 47, 60, 62, 84, 90, 97, 98, 102], "did": [0, 22], "diff": [28, 58], "diffaggreg": [24, 28], "differ": [4, 21, 22, 23, 24, 26, 28, 29, 31, 33, 37, 39, 41, 42, 43, 56, 57, 58, 60, 61, 62, 64, 65, 70, 72, 73, 74, 76, 82, 83, 89, 90, 94, 96, 97, 98, 99, 105, 106], "differenc": [24, 28], "differenti": 54, "difficult": 84, "digit": [28, 59, 60, 92], "dimens": [3, 4, 16, 20, 21, 24, 28, 37, 41, 60, 72, 74, 94, 95, 101, 103], "dimension": [3, 20, 28, 37, 42, 58, 90, 94, 101, 104], "direct": [3, 28, 68, 74, 81], "directli": [4, 16, 21, 28, 41, 58, 59, 60, 72, 81, 92, 94, 95, 97, 101, 107], "directori": [20, 21, 24, 26, 28, 29, 31, 32, 41, 56, 57, 60, 65, 66, 69, 70, 79, 81, 82, 83, 84, 85, 86, 87, 88, 98], "dirti": 65, "disabl": [28, 34, 66], "disable_gc": 65, "disableverbos": [28, 34], "discard": [3, 21, 28, 95], "discard_empti": [28, 57], "disconnect": [22, 28, 41], "discourag": [94, 95, 97, 101, 103, 107], "discov": 84, "discret": [28, 45, 47, 102], "discuss": 0, "disk": [24, 28, 29, 31, 41, 60, 107], "dispatch": 64, "displai": [1, 23, 24, 28, 29, 44, 54, 58, 62, 81, 86, 97], "dist": 81, "distinct": [21, 24, 28, 95], "distribut": [20, 21, 23, 24, 26, 28, 29, 31, 41, 42, 44, 45, 46, 47, 54, 57, 60, 79, 82, 83, 90, 93, 94, 95, 96, 98, 101, 102, 105, 107], "distro": 82, "div": [28, 41], "diverg": [28, 49, 51], "divid": [9, 28, 41], "dividend": [28, 41], "divis": [28, 41], "divisor": [26, 28, 41, 93, 98], "divmod": [28, 41], "djkba": [28, 42], "do": [1, 3, 20, 21, 22, 24, 26, 28, 29, 31, 37, 41, 57, 58, 60, 65, 69, 70, 82, 84, 85, 87, 93, 94, 97, 98, 104], "doc": [0, 24, 28, 49, 51, 58, 64, 81, 82, 94], "docstr": [4, 7, 9, 10, 14, 16, 17, 64], "document": [0, 1, 54, 63, 64, 65, 69, 70, 72, 77, 83, 84], "doe": [20, 21, 22, 24, 26, 28, 29, 31, 32, 41, 42, 44, 54, 57, 58, 60, 69, 72, 74, 76, 90, 94, 95, 96, 97, 98, 101, 104, 106, 107], "doesn": [0, 68, 81], "dog": [24, 28, 58], "domain": [3, 28], "don": [0, 24, 28, 31, 60, 69, 70, 86], "done": [0, 24, 28, 70, 81, 84, 97], "dot": [28, 41, 68], "doubl": [39, 64], "doubt": [0, 68], "down": [22, 67, 68, 70, 79, 81, 84], "download": [79, 82, 83, 87], "draft": 68, "draw": [28, 42, 45, 46, 47, 102], "drawn": [28, 42, 45, 46, 47, 96, 102], "drop": [24, 26, 28, 41, 68, 93, 98], "drop_dupl": [24, 28, 97], "dropna": [24, 26, 28, 89, 97, 98], "dset_nam": [28, 31], "dt": [25, 28, 33, 37, 58, 101], "dtype": [3, 4, 6, 7, 15, 16, 20, 21, 24, 26, 28, 29, 31, 33, 36, 37, 39, 41, 42, 43, 45, 46, 47, 57, 59, 60, 61, 62, 63, 64, 65, 72, 88, 89, 90, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 107], "dtypeobject": [25, 28], "duck": 16, "due": [21, 24, 28, 31, 73, 76, 90], "dump": 39, "duplcat": [24, 28, 97], "duplic": [0, 24, 28, 97], "durat": [28, 61], "dure": [0, 1, 28, 31, 62, 70, 72, 74, 75, 84, 85], "dynam": 28, "e": [0, 1, 2, 3, 5, 21, 23, 24, 26, 28, 31, 37, 39, 41, 42, 57, 58, 60, 61, 64, 68, 69, 70, 82, 83, 85, 90, 93, 95, 96, 98, 103, 106, 107], "each": [3, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 41, 43, 45, 47, 57, 58, 60, 61, 62, 64, 65, 72, 74, 81, 84, 90, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 107], "eager": 85, "earli": 0, "earlier": [62, 72], "easi": [0, 28, 34, 65, 68, 72, 81], "easiest": 69, "easili": 72, "edg": [28, 37, 44, 99], "effect": [24, 28, 61, 70, 105], "effici": [21, 24, 28, 29, 41, 60, 103, 107], "either": [0, 21, 26, 28, 30, 31, 37, 41, 42, 43, 46, 47, 57, 58, 84, 86, 90, 103, 104, 105], "el7": 82, "elect": [74, 75], "element": [20, 21, 24, 26, 28, 32, 33, 35, 37, 41, 42, 43, 45, 47, 57, 58, 60, 61, 64, 72, 84, 89, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107], "elementwis": [28, 41], "elimin": [21, 28, 76], "elk": [24, 28, 58], "ellips": 68, "ellipsi": [4, 6, 7, 11, 12, 15, 16, 17, 28, 41, 42, 46, 47, 62], "els": [0, 24, 28, 58, 64, 68], "elsewher": [28, 37, 41, 93], "emploi": [28, 37], "empti": [6, 23, 24, 26, 28, 31, 37, 41, 43, 57, 58, 60, 81, 93, 96, 97, 99, 104], "empty_lik": 6, "en": [28, 49, 51, 64], "enabl": [22, 28, 34, 41, 56, 69, 81, 82, 84, 90, 106], "enableverbos": [28, 34], "encapsul": [28, 42, 56, 60], "encod": [60, 65, 107], "encoding_benchmark": 65, "encount": [0, 28, 31], "encourag": [82, 83], "end": [3, 21, 24, 28, 33, 35, 37, 41, 42, 57, 60, 61, 67, 89, 95, 96, 100, 103, 107], "endpoint": [6, 28, 45, 47, 102], "endswith": [21, 28, 60, 89, 95, 107], "enforc": [28, 37], "engin": [28, 37], "enough": [28, 39, 57, 60, 74, 82, 83, 103], "enrich_inplac": 62, "ensur": [0, 24, 28, 37, 68, 74, 81, 83, 97, 101], "enter": [28, 58, 90, 104], "entir": [24, 28, 57, 60, 65, 70, 97, 103], "entiti": 60, "entri": [3, 24, 28, 41, 58, 60, 64, 65, 97], "entropi": 54, "enum": [25, 28, 34, 37, 74], "enumer": [28, 34, 37], "env": [1, 28, 69, 79, 81, 82, 83, 85], "env_nam": 85, "environ": [56, 65, 79, 84, 85], "environmenterror": 56, "ep": 7, "equal": [9, 24, 28, 33, 37, 45, 47, 54, 74, 76, 99, 102, 103], "equival": [3, 20, 21, 24, 26, 28, 31, 37, 41, 42, 43, 54, 59, 60, 61, 62, 69, 72, 92, 93, 94, 96, 105], "erm": 65, "error": [20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 34, 35, 37, 41, 42, 57, 58, 60, 61, 64, 74, 76, 86, 90, 93, 94, 95, 97, 98, 99, 101, 106, 107], "errormod": [28, 37, 101], "errormsg": 64, "especi": [0, 21, 24, 28, 70, 83, 95], "essenti": [24, 28, 41, 57, 60, 97, 103], "estim": [24, 26, 28, 41, 54, 93, 97, 98], "etc": [24, 28, 58, 68, 82, 86], "ethan": 0, "euler_gamma": 39, "eval": 81, "evalu": [3, 28, 41, 93, 99], "even": [21, 24, 26, 28, 39, 41, 74, 93, 97, 98, 106], "evenli": [28, 37, 42, 96, 99], "everi": [0, 1, 24, 28, 65, 97, 107], "everyth": [24, 28, 58, 67, 68], "evolv": 68, "ewab": [28, 42], "exact": 83, "exactli": [28, 61], "exampl": [0, 3, 16, 20, 21, 22, 24, 26, 28, 29, 31, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 65, 68, 74, 79, 81, 83, 84, 86, 90, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107], "example_featur": 0, "exce": [20, 21, 24, 28, 41, 42, 46, 47, 60, 61, 62, 90, 94, 95, 96, 97, 101, 107], "excel": 68, "except": [0, 3, 28, 37, 41, 64, 72, 82, 107], "exchang": 107, "exclud": 84, "exclus": [1, 28, 33, 42, 43, 45, 46, 47, 72, 96, 100, 102, 105], "execut": [1, 22, 27, 28, 31, 41, 60, 64, 66, 67, 69, 70, 73, 81, 82, 84, 95, 106], "exhaust": [72, 74], "exist": [20, 21, 22, 24, 26, 28, 29, 31, 32, 41, 42, 57, 58, 60, 74, 76, 81, 96, 97, 98, 106], "exist_ok": [24, 28], "exit": [79, 86], "exp": [9, 28, 37, 42, 54, 89, 93], "exp1m": [28, 37], "expand": [20, 21, 24, 28, 29, 31, 41, 57, 60, 62, 90], "expand_dim": 11, "expandus": 56, "expans": 100, "expect": [0, 20, 24, 26, 28, 29, 31, 41, 49, 51, 54, 60, 65, 74, 82, 83, 90, 94, 98, 101], "expens": [21, 28], "experi": [0, 90], "experiment": [60, 107], "explicit": [74, 101], "explicitli": [1, 24, 28, 43, 84, 105], "explod": 82, "expm1": [9, 28, 37], "expon": 39, "exponenti": [28, 37, 93], "export": [23, 28, 31, 37, 66, 69, 81, 82, 83, 86, 99], "export_uint": [23, 28], "expos": [28, 45, 47, 101, 102], "express": [3, 21, 28, 31, 60, 65, 89, 90, 95, 97, 100, 101], "extend": 39, "extens": [2, 21, 28, 29, 31, 41, 57, 60, 81, 90], "extent": 65, "extra": [24, 28, 58], "extra_info": 65, "extract": 98, "extrem": [72, 74, 76], "ey": 6, "f": [20, 21, 24, 28, 37, 39, 41, 42, 54, 60, 79, 82, 83, 85, 90, 93, 94, 107], "f16c": 65, "f_exp": [28, 49, 51], "f_name": 72, "f_ob": [28, 49, 51], "face": [28, 57, 68, 101], "fact": 76, "factori": [28, 29, 60], "fail": [0, 24, 28, 31, 37, 68, 90, 97, 101], "failur": [0, 28, 31, 81, 90], "fall": [0, 62], "fals": [3, 12, 14, 15, 17, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 35, 36, 37, 39, 41, 42, 43, 45, 46, 47, 54, 57, 58, 60, 61, 62, 65, 72, 88, 90, 91, 93, 95, 96, 97, 98, 101, 102, 103, 105, 107], "famili": 65, "fast": [1, 21, 28, 60], "faster": [3, 21, 28, 43, 69, 95, 105], "fastest": [28, 41], "featur": [66, 67, 68, 69, 71, 81, 84, 89, 90, 98], "feedback": 0, "feel": 0, "fetch": [68, 70], "few": [28, 37, 72], "field": [23, 28, 42, 60, 68, 90, 107], "fig": 54, "figur": [28, 44, 70], "file": [0, 1, 16, 20, 21, 24, 26, 28, 29, 31, 32, 41, 56, 57, 58, 60, 64, 66, 69, 70, 75, 76, 79, 81, 82, 83, 85, 86, 98, 107], "file_format": [20, 21, 24, 28, 29, 31, 41, 57, 60], "file_typ": [20, 21, 23, 24, 26, 28, 29, 31, 41, 57, 60, 98], "file_vers": 74, "filenam": [20, 21, 24, 26, 28, 29, 31, 41, 57, 60, 65, 90, 98], "filename_cod": [28, 31], "filenotfound": [28, 31], "filetyp": [28, 31, 90], "fill": [26, 28, 39, 41, 42, 45, 47, 58, 65, 88, 96, 98, 102], "fill_valu": [6, 28, 42], "fill_values1": [28, 58], "fill_values2": [28, 58], "fill_values3": [28, 58], "fillna": [28, 58], "fillvalu": [3, 28], "filname_cod": [28, 31], "filter": [0, 24, 27, 28, 57, 90], "filter_by_rang": [24, 28], "filtered_df": [24, 28], "final": [64, 65, 68, 81], "find": [0, 3, 21, 24, 26, 28, 36, 41, 43, 56, 58, 60, 62, 65, 68, 71, 82, 93, 98, 99, 105, 107], "find_loc": [36, 60, 89, 107], "find_match": [35, 89, 107], "findal": [36, 60, 89, 107], "finfo_object": 7, "finit": [28, 37], "firewal": 86, "first": [0, 3, 24, 26, 28, 31, 32, 37, 41, 42, 43, 54, 58, 60, 62, 66, 70, 71, 72, 73, 74, 79, 81, 82, 84, 89, 90, 93, 96, 97, 98, 99, 104, 107], "fit": [0, 39, 54, 65, 68, 90], "fit_loc_scal": 54, "five": [3, 28, 43, 60, 96, 107], "fix": [0, 28, 37, 54, 61, 68, 86, 107], "flag": [23, 28, 31, 39, 44, 65, 70, 84, 90, 106], "flake8": [0, 85], "flat": [39, 60, 107], "flatten": [28, 33, 39, 57, 60, 74, 89, 103], "flexibl": 74, "flip": 11, "float": [3, 6, 7, 15, 22, 24, 28, 31, 37, 39, 41, 42, 45, 46, 47, 62, 90, 93, 96, 97, 99, 101, 102], "float128": 39, "float16": 39, "float32": [8, 25, 28, 39, 99], "float64": [8, 24, 25, 26, 28, 29, 37, 39, 41, 42, 43, 46, 47, 49, 51, 52, 53, 59, 65, 73, 74, 88, 92, 93, 96, 97, 98, 99, 101, 105], "float_": 39, "float_scalar": [25, 28, 41, 42, 46, 47], "floor": [9, 28, 37, 41], "floor_divid": [9, 28, 41], "floordivis": [28, 41], "fluid": [21, 23, 24, 26, 28, 29, 41, 57, 58, 60, 61, 98], "flush_l1d": 65, "fma": 65, "fmod": [28, 41], "fname": 72, "focus": 69, "folder": 81, "folk": 1, "follow": [0, 1, 3, 22, 28, 37, 49, 51, 64, 65, 66, 68, 79, 81, 82, 83, 84, 85, 86, 87, 93, 95, 98, 101, 103, 105, 106, 107], "foo": [0, 2, 28], "foo_test": 0, "foopar": 0, "forc": [94, 95, 97, 101, 107], "forget": [70, 86], "fork": [0, 81, 82, 83, 87], "form": [21, 25, 28, 29, 41, 54, 56, 57, 60, 68, 84, 107], "format": [20, 21, 22, 23, 24, 28, 29, 30, 31, 41, 56, 57, 58, 60, 64, 72, 74, 75, 76, 84, 97, 103, 106, 107], "format_oth": [28, 41], "former": [28, 41, 60, 107], "fortran": [28, 41, 101], "forward": [28, 59, 86, 92, 103], "found": [1, 3, 24, 28, 29, 31, 41, 60, 64, 65, 72, 76, 83, 84, 86], "four": [3, 28, 43, 54, 60, 61, 96, 107], "fp": [28, 42], "fpu": 65, "frac": 54, "frame": [24, 28, 58, 97, 104], "frameon": 54, "free": [28, 41, 60], "freedom": [26, 28, 41, 49, 51, 54, 93, 98, 99], "freeman": [28, 49, 51], "freez": 54, "freq": [28, 61], "frequenc": [1, 28, 49, 51, 61], "frequent": [28, 58, 84, 104], "friendli": [24, 28, 58], "from": [0, 3, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 34, 35, 37, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 57, 58, 60, 62, 64, 65, 66, 68, 69, 70, 72, 73, 74, 79, 81, 82, 84, 86, 88, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107], "from_": 7, "from_cod": [21, 28, 89, 95], "from_dlpack": 6, "from_multi_arrai": [28, 57], "from_panda": [24, 28], "from_part": [28, 57, 60], "from_return_msg": [21, 23, 24, 26, 28, 29, 57, 58, 60], "from_seri": [28, 42], "fromencod": 60, "fromhex": 39, "fromright": [60, 107], "frontend": 81, "frozen": 54, "frustrat": 70, "fsgsbase": 65, "fsspec": [24, 28, 58], "full": [6, 21, 28, 35, 37, 42, 44, 54, 60, 61, 67, 69, 79, 81, 83, 87, 95, 107], "full_lik": [6, 28, 42], "fullmatch": [60, 89, 107], "fullnam": 65, "func": [16, 54], "funcion": 84, "functioanl": 103, "function": [0, 1, 16, 21, 54, 58, 60, 65, 68, 69, 72, 73, 75, 76, 79, 84, 89, 90, 91, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 107], "furo": 85, "further": [82, 83, 87], "futur": [1, 23, 28, 31, 45, 60, 90, 99, 102], "fxsr": 65, "g": [2, 21, 23, 24, 26, 28, 31, 37, 39, 41, 57, 58, 60, 61, 62, 69, 70, 72, 82, 90, 93, 95, 96, 98, 103, 106, 107], "gain": 68, "gamma": 54, "gasnet": [70, 71, 82, 83], "gasnet_masterip": 66, "gasnet_quiet": 66, "gasnet_route_output": 66, "gasnet_spawnfn": 66, "gasnet_workerip": 66, "gasnetsetup": 66, "gather": [65, 89], "gawk": 82, "gb": [22, 24, 28, 29, 58, 62], "gc": [24, 28, 58], "gcc": [65, 82], "gen_rang": [28, 33], "gener": [7, 16, 21, 22, 24, 27, 28, 33, 34, 37, 41, 42, 44, 45, 46, 47, 49, 51, 54, 56, 58, 61, 63, 64, 65, 69, 70, 72, 73, 74, 76, 81, 82, 86, 88, 89, 90, 93, 96, 102, 104], "generate_histori": 22, "generate_token": 56, "generate_username_token_json": 56, "generic_concat": [28, 62], "generic_mo": 54, "generic_msg": [64, 84], "genproto": 16, "gensymentri": 64, "gent": 64, "genuineintel": 65, "get": [22, 24, 25, 27, 28, 31, 37, 57, 58, 64, 65, 68, 69, 70, 82, 86, 90, 94, 101, 103], "get_arkouda_client_directori": 56, "get_byt": 60, "get_byteord": [25, 28], "get_callback": [28, 62], "get_column": [28, 31, 73, 77], "get_config": [0, 22], "get_dataset": [28, 31, 73, 77, 90], "get_directori": 32, "get_filetyp": [28, 31], "get_home_directori": 56, "get_jth": [28, 57, 89, 103], "get_length": 60, "get_length_n": [28, 57, 89, 103], "get_match": 36, "get_mem_avail": 22, "get_mem_statu": 22, "get_mem_us": 22, "get_ngram": [28, 57, 89, 103], "get_null_indic": [28, 31], "get_offset": 60, "get_prefix": [28, 57, 60, 89, 103], "get_server_byteord": [25, 28], "get_server_command": 22, "get_suffix": [28, 57, 60, 89, 103], "get_usernam": 56, "getarkoudalogg": 28, "getcwd": [24, 28], "getfield": 39, "getgenerictypearrayentri": 64, "getgenerictypedarrayentri": 64, "getlinenumb": 64, "getmodulenam": [64, 84], "getroutinenam": 64, "getter": 60, "getvalueof": 64, "ghi": 73, "ghpage": 81, "ghz": 65, "gib": 65, "git": [0, 70, 82, 83], "github": [0, 28, 49, 51, 68, 70, 81, 82, 83, 87], "gitk": 68, "give": [28, 41, 58, 73, 85, 104, 106], "given": [3, 16, 21, 24, 26, 28, 31, 37, 41, 42, 43, 45, 47, 54, 60, 61, 62, 65, 85, 90, 95, 96, 97, 98, 102, 107], "glob": [28, 31, 90], "gmp": 83, "gnu": [67, 86], "go": [26, 28, 68, 70, 82, 86, 96], "goal": 4, "good": [0, 68, 70], "googl": 107, "got": 70, "gottfri": [35, 107], "gpu": [28, 41], "gram": [28, 57, 103], "graph": [28, 44, 98], "graphic": 68, "greater": [9, 28, 42, 45, 47, 96, 102], "greater_equ": 9, "greatli": [21, 28, 43, 96], "green": 68, "grep": [81, 86], "grid": [24, 28, 44, 58], "group": [1, 21, 24, 26, 28, 35, 57, 58, 59, 60, 65, 72, 74, 89, 92, 95, 97, 98, 104, 105, 107], "group_ani": [26, 28, 98], "group_argmaxima": [26, 28, 98], "group_argminima": [26, 28, 98], "group_maxima": [26, 28, 98], "group_mean": [26, 28, 98], "group_median": [26, 28, 98], "group_minima": [26, 28, 98], "group_num": [35, 107], "group_nuniqu": [26, 28, 98], "group_product": [26, 28, 98], "group_std": [26, 28, 98], "group_sum": [26, 28, 98], "group_var": [26, 28, 98], "groupabl": [26, 28, 43, 98, 105], "groupable_element_typ": [26, 28, 58, 104], "groupbi": [21, 24, 26, 28, 31, 57, 60, 62, 89, 95, 107], "groupby_reduction_typ": [26, 28], "groupbyclass": [24, 28, 43, 58, 63, 97, 105], "grow": [28, 41, 93], "guarante": [21, 28, 59, 60, 92, 102, 107], "guid": [64, 79, 81, 82, 83], "guidelin": [68, 107], "gz": [79, 81, 82, 83], "gzip": [21, 24, 28, 29, 31, 41, 57, 60, 65, 76], "h": [28, 37, 39, 44, 61, 88, 99, 106], "h5": [28, 31, 41, 90], "h5l": [28, 31], "h5py": [85, 90], "ha": [0, 4, 21, 23, 24, 26, 28, 29, 31, 37, 41, 42, 43, 57, 58, 60, 61, 62, 66, 68, 69, 73, 74, 84, 90, 93, 95, 96, 97, 98, 100, 101, 103, 104], "half": [3, 28, 39, 45, 47, 102], "hand": [3, 28, 68, 100], "handl": [21, 22, 24, 28, 37, 60, 75, 90, 95, 97, 101, 107], "handled_funct": 4, "handler": 28, "hang": 79, "happen": [64, 68], "has_non_float_nul": [28, 31, 90], "has_repeat_label": [28, 58], "hash": [21, 28, 37, 57, 59, 60, 92], "hasnan": [28, 58], "have": [0, 1, 3, 21, 24, 26, 28, 29, 31, 37, 41, 42, 43, 44, 45, 46, 47, 52, 53, 57, 58, 60, 61, 62, 64, 67, 68, 69, 70, 72, 73, 74, 76, 81, 82, 83, 84, 85, 90, 93, 95, 96, 97, 98, 101, 102, 103, 104], "hd15iqr": 65, "hdf5": [1, 20, 21, 24, 26, 28, 29, 31, 41, 57, 60, 73, 75, 76, 77, 81, 85, 90, 98, 107], "hdf5_output": [24, 28], "hdf_output": [24, 28], "head": [24, 28, 58, 68], "header": [24, 28, 29, 31, 41, 60, 90], "healthcheck": 22, "heavi": [28, 42], "hei": 68, "hello": [60, 90, 107], "hello3": 83, "help": [0, 23, 28, 84], "helper": [23, 28, 62], "henc": [28, 37], "here": [1, 60, 62, 65, 66, 69, 70, 71, 72, 74, 76, 81, 83, 84, 85, 86, 87, 106], "heroic": 67, "hex": 39, "hexidecim": 56, "hf": [28, 42], "hff": [28, 42], "hfmd": [28, 42], "hi": [28, 37], "hierarch": [3, 28], "high": [3, 23, 24, 28, 37, 41, 42, 45, 46, 47, 72, 96, 102], "higher": [28, 37], "highest": [24, 28, 41, 42], "highli": 82, "highlight": [1, 68, 72], "hist": [28, 37, 54], "hist_al": [28, 44], "histogram": [28, 37, 44, 54, 89], "histogram2d": [28, 37, 99], "histogramdd": [28, 37], "histori": [0, 22, 28, 63, 68], "historyaccessor": 27, "historyretriev": 27, "histtyp": 54, "hit": 69, "hog": 70, "hold": [28, 37, 54, 101], "hole": [28, 58], "home": [56, 81, 84], "homebrew": [69, 81], "homepag": 81, "homogen": [24, 28, 97], "hong_kong": [28, 61], "horizont": [28, 57, 58, 103, 104], "host": [22, 24, 28, 56, 58, 81], "hostnam": [1, 21, 22, 24, 28, 31, 41, 57, 60, 69, 79, 88, 106], "hour": [28, 61], "hous": 86, "how": [0, 20, 21, 23, 24, 28, 29, 31, 37, 41, 57, 60, 64, 65, 68, 73, 85, 94, 98, 101], "howev": [26, 28, 37, 41, 74, 81, 85, 86, 93, 95, 98], "ht": 65, "html": [7, 24, 28, 49, 51, 58, 62, 64, 81, 94], "http": [0, 7, 24, 28, 49, 51, 58, 62, 64, 82, 83, 94], "human": [21, 28, 30, 41, 60], "hundr": 90, "hyperbol": [28, 37], "hyperlink": 68, "hypervisor": 65, "hypothet": [26, 28, 33, 41, 93, 98], "hz_actual": 65, "hz_actual_friendli": 65, "hz_advertis": 65, "hz_advertised_friendli": 65, "i": [0, 1, 3, 4, 7, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "i7": 65, "iat": [28, 58], "ibpb": 65, "ibr": 65, "ibv": 66, "iconv": [1, 81, 85], "id": [22, 65, 86, 98], "idea": [0, 68, 70, 73, 90], "ideal": [0, 68], "ident": [24, 28, 54, 62, 93, 101], "identif": [28, 34], "identifi": [0, 3, 21, 28, 31, 41, 101], "idn2": [1, 81, 85], "idna": 65, "idx": [3, 24, 28, 29, 72], "idx1": 62, "idx2": 62, "ie": [28, 42], "ieee": [39, 97, 101], "iff": [3, 21, 28, 29, 41, 58, 60, 61, 93, 99], "ignor": [16, 24, 26, 28, 31, 37, 61, 90, 97, 101], "ignore_index": [24, 28], "iinfo_object": 7, "iloc": [28, 58], "imag": [9, 39], "imagin": 98, "imit": [28, 31], "immun": [21, 23, 24, 26, 28, 29, 41, 57, 58, 60, 61, 98], "imnotok": 22, "imok": 22, "impact": [21, 26, 28, 29, 41, 57, 67, 68, 70, 98], "implement": [0, 4, 21, 22, 23, 24, 27, 28, 37, 39, 41, 43, 45, 54, 56, 57, 58, 60, 64, 73, 79, 93, 96, 102, 106, 107], "implements_numpi": 4, "impli": [3, 28, 100], "implicit": 101, "import": [21, 23, 24, 28, 29, 31, 37, 40, 44, 49, 51, 52, 53, 55, 56, 58, 60, 62, 63, 64, 68, 74, 79, 81, 84, 97, 99, 106], "import_data": [28, 31, 75, 90], "importerror": [28, 41], "impos": [28, 61], "improv": [21, 28, 43, 68, 69, 84, 96], "in1d": [21, 28, 43, 64, 72, 89, 95, 105, 107], "in1d_interv": [3, 28], "inaccess": [20, 21, 24, 28, 29, 31, 41, 57, 60], "inadvert": [23, 28], "inappropri": [3, 28], "includ": [0, 1, 3, 24, 26, 28, 29, 30, 31, 37, 41, 58, 60, 61, 64, 65, 68, 73, 74, 79, 81, 82, 84, 90, 93, 97, 98, 101, 103], "includedelimit": [60, 107], "inclus": [3, 24, 28, 37, 41, 42, 45, 46, 47, 61, 93, 96, 100, 102], "incompat": 82, "incorpor": 101, "increas": [28, 57, 103], "increment": [67, 68], "ind": 100, "independ": [28, 31, 56, 90], "index": [2, 3, 6, 20, 21, 23, 24, 26, 28, 31, 33, 35, 41, 42, 43, 57, 58, 60, 62, 63, 65, 72, 81, 88, 89, 90, 93, 95, 98, 99, 103, 104, 107], "index_label": [28, 58], "index_s": [65, 88], "indexerror": [28, 58], "indexof1d": [28, 43], "indic": [0, 3, 7, 10, 13, 20, 21, 22, 23, 24, 26, 28, 29, 31, 33, 35, 37, 41, 43, 57, 58, 59, 60, 61, 62, 72, 74, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 107], "indici": [35, 107], "individu": [28, 48, 66, 107], "inds2": 62, "ineffiec": 76, "inf": [5, 28, 37, 39], "infer": [24, 25, 26, 28, 31, 42, 74, 90], "infin": 39, "infinit": [26, 28, 37, 41, 93, 98], "info": [0, 1, 21, 24, 28, 30, 34, 41, 60], "infoclass": [28, 63], "inform": [0, 1, 4, 7, 9, 10, 14, 16, 17, 21, 22, 26, 28, 30, 41, 45, 47, 60, 65, 68, 69, 70, 72, 73, 74, 76, 77, 79, 81, 82, 83, 84, 85, 95, 102, 103, 105, 107], "infrastructur": 1, "infti": 39, "ing": [60, 107], "ingest": [90, 107], "inherit": [26, 28, 54, 98, 101], "ini": [0, 65], "init": [26, 28, 83, 98], "initi": [21, 22, 28, 41, 42, 45, 46, 47, 65, 83, 88, 95, 96, 101, 102, 106], "initialdata": [24, 28, 97], "inner": [24, 28, 33], "inplac": [24, 28, 97], "input": [16, 21, 23, 24, 26, 29, 37, 41, 42, 43, 57, 59, 61, 62, 64, 68, 90, 92, 93, 95, 98, 101, 104, 105], "insensit": [28, 29, 41, 60, 65], "insert": [60, 107], "inspect": [84, 90], "instal": [1, 28, 41, 69, 86, 106], "instanc": [21, 23, 24, 26, 28, 41, 42, 54, 58, 60, 65, 76, 81, 84, 90, 93, 97, 98, 99, 101, 107], "instanti": 28, "instead": [21, 23, 24, 26, 28, 31, 41, 45, 47, 60, 65, 88, 90, 93, 95, 98, 102, 107], "instruct": [1, 60, 79, 82, 83, 85, 86, 87, 106], "int": [3, 4, 6, 7, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 39, 41, 42, 43, 45, 46, 47, 49, 51, 56, 57, 58, 60, 61, 62, 64, 74, 90, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107], "int16": [8, 25, 28, 39, 99], "int32": [8, 25, 28, 39, 99], "int64": [3, 8, 21, 23, 24, 25, 26, 28, 29, 31, 33, 35, 37, 39, 41, 42, 43, 45, 46, 47, 57, 59, 60, 61, 64, 65, 72, 73, 74, 88, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 107], "int8": [8, 25, 28, 39, 99], "int_": 39, "int_scalar": [20, 21, 24, 25, 26, 28, 31, 37, 41, 42, 46, 47, 57, 59, 60, 61, 93, 94, 96, 98, 99, 101], "intc": 39, "integ": [1, 21, 23, 24, 26, 28, 31, 33, 37, 39, 41, 42, 43, 45, 47, 61, 74, 89, 93, 94, 95, 96, 97, 98, 101, 103, 105, 107], "integr": [0, 26, 28, 31, 41, 42, 46, 47, 68, 90, 96, 98], "intel": 65, "intend": [0, 21, 23, 24, 28, 37, 41, 57, 60, 73, 79, 82, 83, 91, 97, 104], "intens": [28, 59, 72, 92, 96], "interact": [69, 73, 77, 78, 79, 83, 85], "interest": 72, "interfac": [0, 68], "interleav": [21, 24, 28, 43, 96], "intermedi": [3, 28], "intern": [1, 4, 16, 28, 33, 41, 60, 68], "interoper": 0, "interpret": [22, 28, 31, 65, 90, 106], "intersect": [24, 28, 43, 57, 72, 89, 105], "intersect1d": [21, 28, 43, 57, 64, 72, 89, 103, 105], "intersect_df": [24, 28], "interv": [3, 28, 37, 42, 45, 47, 54, 61, 96, 99, 102], "interval_lookup": [3, 28], "intp": 39, "intptr_t": 39, "introduct": 72, "inttyp": [25, 28], "intx": [24, 28], "invalid": [28, 31, 90], "invari": 1, "invers": [24, 28, 37, 54, 62, 97], "inverse_indic": 13, "invert": [9, 26, 28, 43, 105], "invert_permut": [24, 28, 62], "invok": [28, 42, 46, 47], "involv": [69, 87], "invpcid": 65, "invpcid_singl": 65, "io": [28, 63, 64, 65, 75, 76, 77], "io_compress": 65, "io_files_per_loc": 65, "io_only_delet": 65, "io_only_read": 65, "io_only_writ": 65, "io_path": 65, "io_util": [28, 63], "ior": [60, 107], "ip": [23, 28], "ip2": [23, 28], "ip_address": [23, 28, 29, 91], "ipaddress": [23, 28], "ipv4": [23, 28, 31, 90], "ipv6": [23, 28], "ipython": [22, 27, 79], "iqr": 65, "iqr_outli": 65, "is_cosort": [3, 28], "is_float": 62, "is_int": 62, "is_integ": 39, "is_ipv4": [23, 28], "is_ipv6": [23, 28], "is_leap_year": [28, 61], "is_numer": 62, "is_regist": [21, 23, 24, 26, 28, 29, 41, 57, 58, 60, 61, 62, 89, 98], "is_sort": [28, 41, 89, 93, 99], "is_uniqu": [28, 29], "isaac": [35, 107], "isalnum": 60, "isalpha": 60, "isbool": 74, "isdecim": 60, "isdigit": 60, "isdtyp": 7, "isempti": 60, "isf": 54, "isfinit": [9, 28, 37], "isin": [24, 28, 58], "isinf": [9, 28, 37], "isinst": [21, 28, 64], "islow": 60, "isn": 70, "isna": [21, 24, 28, 58], "isnan": [9, 28, 37], "isnul": [28, 58], "isocalendar": [28, 61], "isort": 0, "isspac": 60, "issu": [21, 24, 26, 28, 64, 68, 81, 86, 98, 103], "issupportedint": 28, "issupportednumb": [25, 28], "istitl": 60, "isupp": 60, "item": [3, 4, 16, 21, 24, 28, 39, 41, 42, 43, 58, 62, 95, 97, 104, 105], "items": [20, 28, 39, 41, 42, 60, 89, 90, 94, 101], "itemset": 39, "iter": [24, 28, 31, 42, 59, 65, 89, 90, 92], "ith": [21, 28, 57, 60], "its": [3, 7, 9, 10, 14, 17, 21, 25, 28, 29, 37, 41, 57, 58, 60, 68, 74, 83, 93, 101, 103, 104, 107], "itself": [28, 41, 68], "j": [28, 57, 66, 67, 82, 83, 103], "j16": 67, "jake": 72, "jane": 72, "john": 72, "join": [24, 28, 57, 60, 63, 64, 89], "join_on_eq_with_dt": [28, 33], "json": [21, 22, 28, 30, 41, 56, 60], "jupyt": [22, 27, 79], "just": [69, 70, 101, 102], "k": [6, 28, 41, 54, 65, 93, 99], "kb": [22, 24, 28, 29, 58, 62], "keep": [0, 3, 24, 28, 72, 83, 86, 90, 97], "keepdim": [12, 15, 17], "keepparti": [60, 107], "kei": [3, 21, 24, 26, 28, 29, 30, 31, 32, 37, 43, 58, 64, 72, 74, 84, 86, 91, 97, 98, 104, 105], "kept": [24, 26, 28, 57, 97, 98], "kextrememsg": 84, "key_": 74, "keyerror": [28, 58], "keyfil": 1, "keynam": 62, "keys1": [3, 28], "keys2": [3, 28], "keyword": [0, 21, 28, 45, 47, 54, 57, 58, 96, 102, 104], "kind": [7, 25, 28], "kitwar": 82, "know": 69, "known": [0, 28, 37], "kurt": 54, "kurtosi": 54, "kwarg": [21, 24, 26, 28, 39, 42, 48, 54, 58, 61, 62, 95, 96, 98], "kwd": 54, "kwoqnphz": [28, 42], "l": [28, 31, 39, 61, 66, 68, 72, 73, 81, 90], "l1_data_cache_s": 65, "l1_instruction_cache_s": 65, "l2_cache_associ": 65, "l2_cache_line_s": 65, "l2_cache_s": 65, "l3_cache_s": 65, "l_name": 72, "label": [0, 21, 24, 26, 28, 29, 44, 54, 58, 95, 97, 98, 104], "lahf_lm": 65, "laid": 0, "lambda": [28, 49, 51], "lambda_": [28, 49, 51], "lang": 82, "larg": [21, 28, 39, 65, 93], "larger": [20, 21, 28, 41, 42, 60, 68, 72, 90, 94, 95, 101, 107], "largest": [28, 41, 45, 47, 58, 93, 102, 104], "last": [24, 28, 41, 42, 58, 59, 60, 68, 84, 92, 97, 104, 106, 107], "later": [28, 41, 60, 85], "latest": [7, 28, 62, 64, 82, 83, 86], "latter": [22, 107], "launch": [64, 86, 89], "layer": 90, "lb": 54, "ld15iqr": 65, "ld_library_path": 1, "lead": [28, 41, 60], "learn": [28, 61, 64, 79], "least": [0, 23, 24, 28, 41, 57, 59, 60, 92, 103], "leav": [0, 28, 37, 99], "left": [0, 3, 12, 23, 24, 28, 37, 41, 54, 59, 60, 61, 92, 99, 107], "left_align": [3, 28], "left_df": [24, 28], "left_shift": 9, "left_suffix": [24, 28], "legend": 54, "leibniz": [35, 107], "len": [26, 28, 41, 57, 60, 93, 98, 100, 103, 107], "len_suffix": [28, 57], "length": [0, 3, 21, 26, 28, 29, 31, 33, 35, 42, 43, 46, 47, 56, 57, 58, 60, 65, 74, 88, 93, 96, 98, 103, 104, 105, 107], "less": [9, 21, 26, 28, 29, 41, 45, 47, 57, 60, 102], "less_equ": 9, "lesser": 65, "let": 72, "letter": 60, "level": [1, 28, 34, 43, 58, 65, 69, 73, 74, 81, 82, 83, 84, 87, 90, 104, 105], "levelnam": 28, "leverag": [67, 82], "lexicograph": [28, 59, 68, 92], "lhdf5": 1, "lhdf5_hl": 1, "lib": [1, 81, 86, 105], "libclang": 82, "libedit": 82, "librari": [0, 1, 64, 86, 107], "libtic": 86, "libtinfow": 86, "licens": 82, "liconv": 1, "lidn2": 1, "lie": [21, 28, 37, 60], "life": [83, 85], "like": [0, 2, 3, 23, 24, 26, 28, 41, 45, 47, 61, 66, 68, 69, 70, 72, 75, 79, 81, 84, 90, 91, 97, 98, 100, 102, 104, 106, 107], "likelihood": [26, 28, 41, 49, 51, 93, 98], "lim": 100, "limit": [0, 4, 20, 21, 28, 33, 37, 41, 42, 60, 61, 73, 76, 79, 90, 94, 95, 97, 101, 107], "linalg": [18, 28, 63], "line": [0, 28, 32, 69, 73, 79, 84, 94, 106], "linear": [28, 37, 107], "linearli": [28, 42, 61, 96], "lineno": 28, "link": [0, 1, 28, 31, 61, 68, 81, 82], "linkifi": 85, "linspac": [6, 26, 28, 37, 42, 54, 89, 93, 96, 98, 101], "linter": 0, "linux": [39, 56, 65, 81, 86, 87], "linux64": 82, "list": [0, 3, 4, 6, 11, 16, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 37, 41, 42, 43, 44, 54, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 72, 73, 77, 79, 81, 83, 84, 87, 90, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107], "list_registri": [28, 30, 41], "list_symbol_t": [28, 30], "listen": [79, 106], "liter": [12, 95, 107], "live": [82, 83], "ll": [69, 70, 81], "llvm": [82, 83, 86], "lm": 65, "ln": 86, "lname": 72, "lo": [28, 37], "load": [21, 24, 28, 29, 31, 41, 57, 60, 73, 74, 76, 77, 86, 90], "load_al": [21, 24, 28, 29, 31, 41, 60, 77], "loc": [28, 54, 58], "local": [0, 1, 20, 21, 22, 24, 26, 28, 29, 31, 41, 57, 58, 60, 61, 62, 65, 66, 74, 79, 81, 82, 83, 90, 96, 98, 104, 106], "locale_hostnam": 22, "locale_id": 22, "localhost": [22, 79, 106], "locat": [1, 26, 28, 29, 37, 41, 54, 56, 58, 60, 65, 68, 70, 81, 86, 93, 98, 104, 107], "locationsinfo": 36, "log": [1, 9, 26, 28, 34, 37, 42, 44, 49, 51, 52, 53, 54, 60, 89, 93, 98], "log10": [9, 28, 37], "log1p": [9, 28, 37], "log2": [9, 28, 37], "log_lvl": [28, 34], "log_msg": [28, 34], "logaddexp": 9, "logarithm": [28, 37, 93], "logcdf": 54, "logformat": 28, "logger": [26, 28, 60, 63, 89, 98], "logic": [3, 20, 21, 28, 37, 42, 46, 47, 57, 60, 64, 89, 94, 96, 99, 103], "logical_and": 9, "logical_not": 9, "logical_or": 9, "logical_xor": 9, "loglevel": [28, 34], "logmean": [28, 42], "lognorm": [28, 42], "logpdf": 54, "logsf": 54, "logstd": [28, 42], "long": [28, 39, 57, 60, 70, 103], "longcomplex": 39, "longdoubl": 39, "longer": [24, 28, 42, 74, 85, 97], "longfloat": 39, "longlong": 39, "longnam": 54, "look": [0, 1, 64, 68, 69, 72, 84, 90, 106], "lookahead": [21, 28, 60, 95, 107], "lookbehind": [21, 28, 60, 95, 107], "lookup": [3, 28, 29, 58], "loop": 1, "loos": 68, "loss": 103, "lot": 65, "love": 0, "low": [3, 23, 24, 28, 37, 41, 42, 45, 46, 47, 72, 90, 96, 102], "lower": [24, 28, 37, 45, 47, 60, 74, 97, 102], "lower_bounds_inclus": [3, 28], "lowercamelcas": 0, "lowercas": [28, 42, 60], "lowest": [3, 24, 28, 41, 42, 45, 47, 102], "ls_csv": [28, 31, 73, 77], "lst": [28, 58], "lstick": [60, 89, 107], "lt": 86, "ludmmgtb": [28, 42], "lw": 54, "lz": [28, 41], "lz4": [21, 24, 28, 29, 31, 41, 57, 60, 65, 76], "lzmq": 1, "m": [0, 28, 29, 35, 37, 54, 57, 61, 65, 81, 86, 107], "m1": 72, "m2": 72, "m4": 82, "mac": [81, 83], "machin": [22, 65, 66, 69, 79, 82, 83, 106], "machine_info": 65, "machineri": 64, "maco": [56, 79, 82, 87], "macosx": 83, "made": [23, 24, 28, 60, 107], "mai": [20, 21, 24, 28, 29, 31, 37, 41, 42, 43, 45, 60, 72, 74, 79, 81, 83, 85, 86, 90, 94, 95, 96, 97, 101, 102, 107], "main": [65, 68, 74], "mainli": 1, "maintain": [28, 29, 31, 57, 75, 90], "major": [68, 73, 91, 97, 104], "make": [0, 1, 21, 23, 24, 28, 37, 45, 47, 54, 58, 61, 64, 65, 66, 67, 68, 70, 79, 81, 82, 83, 84, 86, 95, 97, 102], "makebinari": 67, "makefil": 81, "malform": [28, 42, 90], "manag": [81, 82, 83, 85, 87], "mani": [3, 21, 24, 28, 65, 95, 98], "manipul": 0, "manner": [45, 64, 102], "mantissa": 39, "manual": 83, "map": [3, 21, 22, 23, 24, 28, 29, 31, 32, 45, 47, 58, 60, 62, 90, 97, 102, 107], "mapper": [24, 28, 97], "mark": 74, "markdown": [0, 24, 28, 58], "mask": [24, 28, 57, 58, 60, 103], "master": [0, 68, 81], "match": [1, 16, 20, 21, 24, 26, 28, 29, 31, 36, 37, 41, 42, 57, 58, 60, 61, 62, 63, 65, 89, 90, 93, 94, 96, 98, 101, 104, 106], "match_typ": [35, 36, 89, 107], "matcher": [28, 63], "matchtyp": [35, 36, 107], "math": [35, 107], "mathemat": 93, "matlab": 100, "matmul": 19, "matplotlib": [28, 37, 44, 54, 85, 99], "matric": 62, "matrix": [19, 24, 26, 28, 62, 98], "matrix_transpos": 19, "matter": 69, "mawk": 82, "max": [7, 15, 26, 28, 37, 39, 41, 57, 60, 65, 89, 93, 98, 99, 107], "max_bit": [28, 41, 42, 65, 90, 96, 101], "max_list_s": [28, 29, 91], "max_tim": 65, "maxbit": 65, "maxima": [26, 28, 98], "maximum": [1, 22, 24, 26, 28, 29, 41, 42, 46, 47, 62, 65, 90, 93, 96, 97, 98, 99], "maxk": [28, 41, 84, 89, 93, 99], "maxkmsg": 84, "maxlen": [28, 42], "maxmum": [28, 41, 93], "maxsplit": [36, 60, 107], "maxtaskpar": 22, "maxtransferbyt": [20, 21, 24, 28, 41, 42, 60, 61, 90, 94, 95, 97, 101, 107], "mb": [22, 24, 28, 29, 58, 62], "mca": 65, "mce": 65, "md": [81, 82, 83], "mean": [15, 22, 24, 26, 28, 31, 39, 41, 42, 45, 47, 54, 56, 57, 60, 65, 89, 90, 93, 98, 99, 102], "mean_shim": 15, "measur": [65, 88], "median": [26, 28, 54, 65, 89, 98], "meet": 0, "megabyt": [24, 28, 97], "member": 0, "membership": [3, 28, 43, 105], "memori": [20, 21, 22, 24, 28, 29, 31, 41, 57, 58, 60, 70, 71, 74, 79, 90, 94, 95, 101, 107], "memory_usag": [24, 28, 29, 58], "memory_usage_info": [24, 28], "mention": [0, 70], "mere": 60, "merg": [21, 24, 28, 62, 68], "meshgrid": 6, "messag": [1, 20, 21, 22, 24, 28, 29, 34, 41, 42, 57, 60, 64, 79, 90], "messagearg": 64, "meth": 16, "method": [2, 4, 21, 22, 23, 24, 26, 27, 28, 31, 37, 41, 42, 45, 46, 47, 54, 56, 57, 58, 60, 67, 72, 73, 89, 90, 95, 96, 98, 99, 101, 102], "mi": [21, 28, 29, 58, 61], "mib": 65, "microsecond": [28, 61], "microsoft": [65, 86], "midnight": [28, 61], "might": [28, 58, 81, 83, 84], "milli": [28, 33], "million": [28, 37, 41, 93], "millisecond": [28, 61], "mimic": [28, 45, 47, 102], "min": [7, 15, 26, 28, 37, 39, 41, 57, 65, 89, 93, 98, 99], "min_round": 65, "min_tim": 65, "mind": [0, 16, 72, 86], "mine": 70, "miniforg": 81, "minim": [4, 24, 28, 69, 70, 96, 97], "minima": [26, 28, 98], "minimum": [26, 28, 41, 42, 82, 93, 98, 99], "mink": [28, 41, 84, 89, 93, 99], "minkmsg": 84, "minlen": [28, 42], "minor": 68, "minu": [28, 37], "minut": [28, 61], "mismatch": [24, 26, 28, 81, 98], "miss": [21, 24, 28, 58, 95], "mistak": 68, "mix": [28, 60, 61, 65, 94], "mkdir": [24, 28], "mm": 68, "mmx": 65, "mod": [28, 41, 49, 51], "modal": [26, 28, 98], "mode": [1, 20, 21, 23, 24, 26, 28, 29, 31, 41, 57, 58, 60, 89, 96, 98], "model": [65, 102], "modif": [21, 23, 24, 26, 28, 29, 41, 57, 58, 60, 61, 84, 97, 98], "modifi": [24, 28, 49, 51, 69, 97], "modul": [64, 69, 70, 79, 90, 107], "modular": [28, 41, 70], "modulenotfounderror": [28, 41], "moment": 54, "moment_typ": 54, "momtyp": 54, "monoton": [28, 41, 93, 99], "month": [28, 61, 68], "more": [0, 1, 3, 4, 7, 9, 10, 14, 16, 17, 20, 21, 24, 28, 29, 31, 37, 41, 54, 58, 60, 61, 64, 65, 66, 68, 69, 70, 72, 74, 76, 77, 79, 81, 82, 83, 85, 90, 94, 95, 97, 101, 103, 107], "most": [0, 1, 23, 26, 28, 36, 58, 60, 65, 67, 68, 72, 74, 79, 81, 83, 86, 90, 96, 98, 101, 104, 107], "most_common": [26, 28, 62, 89, 98], "mostli": [23, 28], "motion": 1, "movb": 65, "move": [28, 59, 62, 70, 72, 92, 96, 103], "moveaxi": 11, "movement": 96, "mpi": 90, "msb_left": [23, 28], "msgarg": 64, "msgtupl": 64, "msgtype": 64, "msi": 65, "msr": 65, "mt": [4, 16], "mtrr": 65, "mu": [28, 42, 45, 46, 47, 102], "much": [0, 3, 20, 21, 24, 28, 31, 41, 57, 60, 67, 72, 74, 90, 94, 95, 101, 107], "multi": [3, 20, 23, 26, 28, 31, 43, 58, 72, 91, 94, 96, 98, 101, 104, 105], "multia": [28, 43, 105], "multib": [28, 43, 105], "multidimension": [28, 37], "multiindex": [24, 28, 29, 58, 91, 104], "multipl": [3, 24, 28, 31, 37, 57, 61, 64, 65, 66, 72, 74, 76, 77, 84, 88, 90, 91, 93, 97, 103], "multiplex": 93, "multipli": [9, 26, 28, 45, 47, 64, 98, 102], "must": [1, 3, 21, 22, 23, 24, 26, 28, 29, 31, 37, 41, 42, 43, 44, 45, 47, 52, 53, 57, 58, 60, 61, 64, 66, 69, 72, 73, 79, 81, 82, 84, 90, 93, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107], "mutual": 1, "mv": [54, 69, 70], "mvsk": 54, "my": [60, 69, 90, 107], "my_data": [24, 28], "my_data_locale0000": [24, 28], "my_dir": [24, 28], "my_path": [24, 28], "my_table_nam": [24, 28], "my_zero": [28, 41], "myarrai": [4, 28, 62], "mydtyp": [28, 41, 101], "mypi": [0, 85], "myst": 85, "n": [4, 16, 21, 24, 26, 28, 31, 37, 41, 42, 43, 45, 46, 47, 57, 58, 60, 61, 73, 83, 85, 88, 93, 94, 95, 96, 97, 98, 102, 103, 104], "n_col": 6, "n_row": 6, "na": [21, 24, 28, 58, 74], "na_cod": 74, "naiv": [28, 61], "name": [0, 1, 2, 3, 16, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 34, 39, 41, 42, 45, 46, 47, 54, 57, 58, 60, 61, 62, 65, 66, 68, 72, 73, 74, 76, 81, 83, 84, 85, 89, 90, 91, 95, 96, 97, 98, 102, 104], "name_dict": [28, 45, 47, 102], "name_prefix": [28, 31, 41, 90], "name_prefix_local": [28, 31, 41], "namedtupl": [13, 28, 49, 51], "nameserv": 86, "namespac": [2, 4, 16, 28, 31], "nan": [5, 24, 26, 28, 37, 39, 58, 62, 97, 98, 101], "nanosecond": [28, 42, 61], "nativ": [26, 28, 75, 76, 83, 90, 98, 103], "natur": [28, 37, 93], "navalu": [21, 28, 95], "navig": [65, 68, 81, 82, 83, 85], "nbin": [28, 37, 99], "nbyte": [21, 24, 28, 29, 39, 41, 42, 58, 60, 62, 90], "ncx2": 54, "nd": [28, 37], "ndarrai": [4, 16, 20, 21, 28, 41, 42, 44, 57, 60, 72, 90, 93, 94, 95, 101, 103, 107], "ndim": [4, 16, 20, 21, 28, 39, 41, 60, 89, 94, 95, 101], "nearest": [28, 37], "necessari": [0, 64, 68, 81, 86], "necessarili": [21, 28, 39, 58, 60], "need": [0, 4, 21, 24, 28, 31, 41, 57, 58, 60, 64, 65, 68, 69, 70, 73, 81, 82, 83, 84, 86, 90, 97, 104], "neg": [9, 28, 42, 45, 57, 67, 96, 100, 102, 103], "neglig": [21, 28, 60], "neither": [21, 28, 29, 41, 42, 60, 61, 96, 107], "nest": [4, 16, 28, 31, 74, 90], "nestedsequ": 6, "never": [28, 37, 101], "new": [0, 20, 21, 24, 26, 28, 29, 31, 32, 34, 35, 36, 37, 41, 44, 45, 57, 58, 60, 62, 64, 68, 69, 70, 85, 97, 98, 101, 102, 103, 104, 107], "new_categori": [21, 28], "new_str": [60, 107], "newaxi": 39, "newbyteord": 39, "newer": 82, "newfig": [28, 44], "newlin": [24, 28, 29, 31, 41, 60, 73], "newton": [35, 107], "next": [68, 70, 81, 84, 106], "nextnam": 64, "neyman": [28, 49, 51], "ngram": [28, 57, 89], "ngroup": [26, 28, 89, 98], "nice": 0, "nightli": 1, "ninf": 39, "nkei": [26, 28, 58, 89, 98], "nl": [66, 79, 106], "nlevel": [21, 28, 89, 95], "nnlf": 54, "nnz": [26, 28], "node": [21, 24, 28, 31, 41, 57, 60, 65, 74, 88, 90], "node01": [79, 106], "non": [1, 3, 21, 24, 26, 28, 31, 36, 37, 41, 42, 43, 45, 46, 47, 54, 58, 59, 60, 67, 90, 92, 93, 96, 98, 99, 100, 102, 107], "non_empti": [28, 57], "noncentr": 54, "none": [3, 4, 6, 10, 11, 12, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 41, 42, 44, 45, 46, 47, 48, 49, 51, 54, 57, 58, 60, 61, 62, 65, 82, 83, 90, 91, 95, 96, 97, 98, 99, 101, 102, 104, 106], "nonexist": [24, 28, 97], "nonuniqueerror": [3, 28], "nonzero": [12, 26, 28, 36, 39, 60, 107], "nopl": 65, "nor": [21, 28, 29, 41, 42, 60, 96, 107], "norepeat": [28, 57, 103], "normal": [21, 22, 23, 24, 26, 28, 41, 42, 45, 46, 47, 61, 64, 93, 95, 97, 98, 102], "not_alnum": 60, "not_alpha": 60, "not_decim": 60, "not_digit": 60, "not_empti": 60, "not_equ": 9, "not_spac": 60, "notabl": 107, "note": [0, 1, 2, 3, 4, 16, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 37, 41, 42, 43, 44, 45, 46, 47, 49, 51, 54, 56, 57, 58, 59, 60, 61, 62, 64, 66, 70, 72, 74, 76, 81, 83, 84, 86, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107], "notebook": [22, 27, 79], "notebookhistoryretriev": 27, "notic": 72, "notifi": 74, "notimplementederror": [28, 37, 64, 99], "notna": [24, 28, 58], "notnul": [28, 58], "nov": 65, "now": [21, 23, 24, 26, 28, 29, 41, 45, 57, 58, 60, 61, 62, 64, 69, 70, 73, 76, 81, 82, 83, 98, 102], "np": [4, 7, 9, 10, 14, 16, 17, 20, 21, 24, 25, 26, 28, 33, 37, 41, 42, 44, 52, 53, 54, 57, 58, 60, 61, 62, 72, 90, 93, 94, 95, 96, 97, 98, 99, 101, 103, 107], "np_arr": 72, "null": [21, 24, 28, 31, 60, 74, 90, 95, 107], "num": [6, 22, 25, 28, 37], "num_command": [22, 27], "num_match": [60, 107], "numarg": 54, "numba": [28, 41], "number": [0, 1, 3, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 36, 37, 39, 41, 42, 45, 46, 47, 54, 57, 58, 60, 61, 62, 65, 66, 68, 69, 70, 72, 74, 82, 84, 86, 88, 90, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107], "number_of_dimens": 74, "number_of_substit": [60, 107], "numer": [3, 24, 28, 39, 41, 42, 44, 58, 59, 62, 63, 74, 89, 90, 92, 95, 101, 104, 107], "numeric_and_bool_scalar": [28, 41], "numeric_onli": [24, 28], "numeric_scalar": [25, 28, 37, 41, 42, 45, 46, 47, 93, 96, 102], "numid": 98, "numlocal": [21, 22, 24, 28, 29, 31, 41, 57, 60, 106], "numpi": [0, 4, 16, 20, 21, 23, 24, 25, 26, 28, 29, 33, 37, 41, 42, 45, 47, 49, 51, 52, 53, 54, 57, 58, 60, 61, 63, 64, 65, 72, 85, 88, 90, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 107], "numpu": 22, "numpy_funct": 4, "numpy_scalar": [25, 28, 41, 93], "numpydoc": 64, "nuniqu": [26, 28, 57, 89, 98], "nx": [28, 37, 65], "ny": [28, 37], "nzero": 39, "o": [21, 24, 28, 29, 41, 56, 57, 60, 87, 89], "o0": 1, "o1": 1, "obj": [6, 28, 31, 62], "object": [2, 3, 4, 6, 16, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 35, 36, 37, 41, 42, 43, 44, 45, 54, 56, 57, 58, 60, 61, 62, 64, 73, 74, 75, 76, 77, 86, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "objtyp": [20, 21, 24, 26, 28, 29, 41, 57, 58, 60, 74], "observ": [0, 28, 41, 49, 51, 93], "obtain": [36, 60, 107], "occur": [22, 24, 26, 28, 31, 36, 37, 41, 58, 60, 64, 81, 98, 99, 104, 107], "occurr": [28, 36, 37, 41, 60, 93, 99, 107], "odd": [28, 41], "oerror": 32, "off": [60, 69, 107], "offer": [91, 97, 104, 107], "offset": [21, 26, 28, 31, 42, 60, 74, 90, 95, 105, 107], "offset_alias": [28, 61], "offset_attrib": 60, "often": [21, 28, 95, 99], "ok": 68, "old": [21, 28, 68], "older": [28, 29, 41, 74, 82], "omit": [28, 60, 61, 65, 74], "onc": [0, 24, 28, 31, 41, 58, 60, 66, 67, 68, 70, 72, 73, 76, 81, 86], "one": [0, 1, 2, 3, 4, 16, 21, 24, 25, 26, 28, 29, 31, 32, 37, 41, 42, 43, 45, 47, 54, 57, 58, 60, 64, 65, 68, 70, 72, 73, 74, 76, 79, 82, 83, 84, 85, 86, 90, 93, 95, 96, 97, 98, 102, 103, 105, 107], "one_two": [60, 107], "onelin": 68, "ones": [1, 6, 22, 24, 28, 37, 42, 58, 65, 69, 88, 89, 93, 96], "ones_lik": [6, 28, 42, 89, 96], "onli": [4, 16, 21, 24, 26, 28, 29, 31, 33, 35, 37, 41, 42, 43, 45, 57, 58, 59, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76, 81, 84, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107], "onlin": [68, 86], "onto": [24, 28, 60, 107], "op": [21, 23, 24, 28, 31, 41, 57, 60, 65], "open": [0, 3, 21, 24, 28, 29, 31, 32, 41, 45, 47, 57, 58, 60, 61, 86, 102], "opeq": [23, 28, 41], "opeqop": [28, 41], "oper": [21, 22, 23, 24, 26, 28, 29, 31, 41, 56, 57, 59, 60, 64, 65, 68, 75, 79, 85, 87, 88, 89, 92, 97, 98, 100, 106], "opt": [81, 82, 83], "optim": 69, "option": [1, 3, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 35, 41, 42, 43, 44, 45, 46, 47, 57, 58, 60, 61, 64, 65, 68, 74, 79, 81, 82, 83, 85, 88, 90, 96, 97, 98, 99, 102, 104, 105, 106, 107], "order": [0, 20, 21, 23, 24, 26, 28, 31, 37, 41, 42, 43, 49, 51, 54, 57, 58, 59, 60, 62, 66, 74, 76, 81, 89, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 107], "ordin": [28, 37], "org": [7, 24, 28, 49, 51, 58, 62, 64, 94], "orient": [76, 95, 97, 101, 107], "orig": [60, 107], "orig_kei": [26, 28, 98], "origin": [21, 23, 24, 26, 28, 29, 31, 35, 37, 41, 43, 57, 58, 60, 61, 93, 95, 96, 97, 98, 103, 107], "origin_indic": [28, 57, 60, 103], "osxsav": 65, "other": [3, 21, 23, 24, 26, 28, 29, 31, 37, 41, 42, 45, 47, 57, 59, 60, 61, 65, 69, 70, 72, 90, 91, 92, 93, 95, 98, 102, 103, 105, 107], "other_df": [24, 28], "otherwis": [0, 20, 21, 24, 25, 26, 28, 29, 31, 35, 41, 42, 43, 45, 47, 57, 58, 60, 62, 64, 87, 90, 94, 95, 97, 98, 101, 103, 105, 107], "our": [0, 28, 41, 64, 65, 67, 68, 72, 74, 79, 81, 86, 87, 90], "out": [0, 15, 22, 24, 28, 37, 57, 69, 70, 73, 74, 76, 81, 84, 99, 100, 103], "outer": [24, 28, 100], "outlier": 65, "outlin": [68, 74], "outperform": [28, 41, 93], "output": [0, 1, 20, 21, 23, 24, 26, 28, 29, 31, 37, 41, 45, 47, 57, 58, 60, 68, 72, 76, 79, 90, 93, 98, 99, 101, 102, 105, 106], "outsid": [0, 28, 37, 73, 84], "outstand": 0, "over": [3, 21, 24, 28, 31, 37, 41, 45, 47, 57, 60, 88, 93, 94, 95, 97, 99, 101, 102, 103, 107], "overflow": [20, 21, 28, 37, 41, 60, 90, 94, 95, 101, 107], "overlap": [3, 24, 28, 36, 60, 107], "overload": [26, 28, 98], "overnight": 70, "overrid": [20, 21, 23, 28, 41, 42, 60, 69, 90, 94, 95, 101, 107], "overridden": [28, 42, 56], "overview": 65, "overwhelm": [28, 42, 90], "overwrit": [20, 21, 24, 26, 28, 29, 31, 41, 57, 60, 98, 101], "overwritten": [20, 21, 24, 28, 29, 31, 41, 57, 60, 74, 76], "own": [0, 1, 28, 61, 103, 107], "p": [3, 28, 41, 42, 45, 47, 49, 51], "packag": [82, 83, 85, 87], "pad": [23, 28, 68], "pae": 65, "page": [63, 68, 81], "pai": 65, "pair": [28, 32, 33, 37, 57, 103], "pairwis": [24, 28, 37], "panda": [0, 24, 28, 29, 31, 42, 58, 61, 64, 75, 77, 85, 90, 91, 95, 97], "parallel": [67, 90, 101, 105], "parallel_start_test": 0, "param": [2, 21, 28, 29, 31, 41, 57, 60, 65], "paramet": [0, 3, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 83, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "parent": [1, 24, 28, 36], "parent_entry_nam": [35, 36], "pariti": [28, 41], "parquet": [21, 24, 26, 28, 29, 31, 41, 57, 60, 65, 73, 75, 77, 90, 98], "parquet_output": [24, 28], "pars": [22, 23, 24, 28, 29, 41, 58, 64, 106], "parse_hdf_categor": [21, 28], "parseabl": [28, 42, 96], "parser": 85, "part": [0, 4, 16, 28, 57, 60, 86, 107], "particular": [4, 24, 28, 54, 58, 84], "particularli": [82, 84], "partit": [60, 107], "paruqet": 76, "pass": [0, 1, 3, 16, 21, 23, 24, 26, 28, 31, 37, 41, 45, 57, 58, 60, 68, 90, 97, 98, 102, 104], "password": [1, 24, 28, 58, 86], "past": 70, "pat": 65, "path": [20, 24, 28, 29, 31, 32, 41, 56, 65, 70, 81, 82, 83, 84, 86, 90], "path_prefix": [28, 31], "path_to_ark": 83, "path_to_arkouda": 85, "path_to_chpl": 83, "pathlib": [24, 28, 32, 56], "pattern": [35, 36, 60, 68, 72, 98, 107], "pb": 22, "pcg64": [45, 102], "pcid": 65, "pclmulqdq": 65, "pct_avail_mem": 22, "pd": [24, 28, 31, 42, 61, 62, 72, 90, 97], "pd_df": [24, 28, 72, 97], "pda": [26, 28, 37, 41, 42, 59, 61, 62, 64, 92, 93, 96, 99, 101, 105], "pda1": [28, 41, 43, 105], "pda2": [28, 41, 43, 105], "pdarrai": [3, 20, 21, 23, 24, 26, 28, 29, 31, 33, 35, 37, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 57, 58, 59, 60, 61, 62, 64, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 107], "pdarrayclass": [20, 21, 23, 24, 26, 28, 29, 31, 33, 35, 37, 42, 43, 46, 47, 52, 53, 57, 58, 59, 60, 62, 63, 97], "pdarraycr": [28, 41, 63], "pdarraysetop": [28, 57, 63, 64, 103], "pdconcat": [28, 58, 104], "pdf": 54, "pdpe1gb": 65, "pdrrai": [28, 37, 42, 90], "pearson": [24, 28, 41, 49, 51], "peel": [60, 89, 107], "pep": 16, "pep8": 0, "per": [1, 20, 21, 22, 24, 26, 28, 29, 31, 41, 57, 60, 64, 65, 70, 74, 84, 90, 93, 98], "percent": [22, 54], "percent_transfer_limit": 62, "percentag": [22, 62], "percentil": 54, "perf_count": 65, "perform": [20, 21, 24, 26, 28, 29, 31, 33, 37, 41, 43, 57, 60, 65, 67, 68, 69, 72, 73, 75, 81, 89, 90, 93, 96, 97, 98, 101], "period": [28, 61], "perl": 82, "perm": [24, 28, 59, 62, 92, 97], "perm_arri": [24, 28, 97], "perm_df": [24, 28, 97], "permiss": [21, 28, 29, 41, 57, 60], "permut": [21, 24, 26, 28, 45, 47, 59, 60, 62, 74, 89, 92, 95, 98, 105], "permute_dim": 11, "person": 0, "pexpect": 85, "pge": 65, "physic": [22, 35, 107], "physicalmemori": 22, "pi": [5, 28, 37, 39], "piec": 69, "pierce314159": 0, "pig": [24, 28, 58], "pinf": 39, "pip": [81, 82, 83], "pipe": 107, "pipelin": [90, 107], "pkg": 82, "place": [21, 23, 24, 26, 28, 29, 31, 34, 41, 45, 47, 56, 57, 58, 60, 61, 62, 66, 70, 93, 97, 98], "placement": [28, 37], "plan": [86, 87, 99, 101], "platform": [39, 56], "pleas": [0, 21, 23, 24, 26, 28, 29, 31, 41, 57, 58, 60, 61, 66, 68, 69, 72, 74, 76, 77, 81, 82, 83, 84, 95, 97, 98], "plot": [28, 37, 54, 63, 90, 99], "plot_dist": [28, 44], "plt": [28, 37, 44, 54, 99], "plu": [28, 37], "pni": 65, "point": [24, 28, 29, 33, 37, 39, 41, 42, 46, 47, 54, 58, 86, 96, 97, 101], "pointer": 39, "popcnt": 65, "popcount": [28, 41], "popul": [26, 28, 32, 36, 41, 93, 98], "port": [1, 21, 22, 24, 28, 31, 41, 57, 58, 60, 69, 79, 88, 106], "portion": 74, "pos_dt": [28, 33], "posit": [9, 24, 28, 35, 36, 41, 58, 60, 100, 104, 107], "position": [24, 28], "positon": [60, 107], "possibl": [0, 24, 28, 31, 37, 57, 60, 61, 64, 65, 68, 72, 81, 86, 90, 103, 107], "possibli": 64, "post": [0, 68], "postit": [60, 107], "potenti": [24, 28, 41], "pow": 9, "power": [9, 28, 41, 49, 51, 78, 100], "power_diverg": [28, 49, 51], "power_divergenceresult": [28, 49, 51], "powershel": 86, "ppf": 54, "pr": [0, 68], "practic": [0, 26, 28, 41, 84, 93, 98], "pre": [21, 28, 62, 95], "precis": [28, 31, 37, 39, 90, 101], "pred": [28, 33], "predic": [28, 33], "prefer": [0, 83, 85, 87, 102], "prefix": [20, 21, 24, 26, 28, 29, 31, 41, 57, 60, 61, 89, 98, 107], "prefix_path": [20, 21, 23, 24, 26, 28, 29, 31, 41, 57, 60, 98], "prepar": [26, 28, 81, 98], "prepend": [28, 57, 60, 89, 107], "prepend_singl": [28, 57, 89, 103], "prerequisit": [81, 82, 83], "presenc": 16, "present": [0, 3, 21, 23, 24, 28, 29, 31, 37, 41, 43, 57, 58, 60, 72, 74, 90, 99, 105], "preserv": [24, 28, 58, 104, 107], "pretti": 70, "pretty_print_info": [21, 28, 41, 60], "pretty_print_inform": [28, 30], "prev": 68, "prevent": [23, 28, 31, 41, 57, 73, 74, 82, 103], "previou": [68, 70, 83], "previous": [21, 24, 26, 28, 29, 31, 41, 57, 58, 60, 61, 98], "primarili": [16, 90], "print": [0, 1, 21, 22, 24, 28, 30, 41, 48, 58, 60, 86, 106], "print_server_command": 22, "printabl": [28, 42], "printit": 0, "prior": 84, "probabl": [21, 28, 45, 47, 54, 60, 102], "problem": [0, 65, 79, 88], "problem_s": 65, "proc": [0, 64], "proce": [20, 21, 28, 41, 42, 60, 90, 94, 95, 101, 107], "procedur": 0, "proceed": 81, "process": [22, 28, 30, 31, 58, 64, 71, 74, 79, 86, 90, 103, 107], "processor": [22, 65], "prod": [15, 26, 28, 39, 41, 57, 89, 93, 98, 99], "prod_sum_dtyp": 15, "produc": [21, 28, 60, 95, 102, 107], "product": [19, 26, 28, 37, 41, 42, 90, 93, 94, 98, 99], "program": [0, 21, 23, 24, 26, 28, 29, 41, 57, 58, 60, 61, 79, 98, 106], "progress": 83, "project": [0, 24, 28, 58, 65, 68, 81], "promot": [4, 64], "proof": [23, 28], "proper": [28, 37, 57, 60, 62, 103], "properli": [0, 69, 74, 82, 83], "properti": [2, 4, 16, 21, 24, 28, 29, 41, 57, 58, 61, 64, 74], "protect": [20, 21, 28, 41, 42, 60, 90, 94, 95, 101, 107], "proto": 16, "protocol": 16, "provid": [0, 7, 20, 21, 24, 26, 28, 29, 31, 41, 45, 47, 57, 58, 60, 62, 65, 67, 72, 73, 74, 76, 77, 81, 82, 83, 85, 90, 93, 97, 98, 102, 103], "prune": 85, "pse": 65, "pse36": 65, "pseudo": 102, "pti": 65, "ptp": 39, "publish": 68, "pull": [28, 31, 42, 68, 74], "purg": 60, "purge_cached_regex_pattern": 60, "purpos": [65, 68, 91, 97, 104], "push": [68, 81], "put": [26, 28, 39, 70, 98], "pvalu": [28, 49, 51], "pwd": [82, 83], "pwr": [28, 41], "py": [0, 1, 64, 65, 69, 81, 84, 85, 88], "pyarrow": [85, 90], "pycapsul": 16, "pycharm": 0, "pydata": [24, 28, 58], "pyfiglet": 85, "pypi": [24, 28, 58], "pyplot": [28, 37, 44, 54, 99], "pytest": [0, 71, 85], "python": [3, 4, 16, 20, 21, 22, 23, 27, 28, 39, 41, 42, 43, 56, 58, 60, 65, 78, 81, 86, 87, 89, 90, 93, 94, 95, 96, 97, 100, 101, 107], "python3": [65, 69, 81, 82], "python_build": 65, "python_compil": 65, "python_implement": 65, "python_implementation_vers": 65, "python_vers": 65, "pythonpath": [82, 83], "pyzmq": 85, "pzero": 39, "q": [39, 54], "q1": 65, "q3": 65, "quadrupl": 39, "qualifi": [24, 28], "queri": [3, 28, 90], "quetzal": [24, 28, 58], "quick": [22, 69], "quickli": [24, 28, 66, 97], "quickstart": [82, 83, 87], "quit": [0, 79], "quotient": [28, 41], "r": [0, 24, 28, 54, 65, 68, 72, 82, 83, 88], "rad2deg": [28, 37], "radian": [28, 37], "radix": [28, 59, 92], "radixsortlsd": [28, 59, 92], "rai": [28, 37], "rais": [3, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 41, 42, 43, 46, 47, 56, 57, 58, 59, 60, 61, 62, 64, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107], "ran": [65, 69], "randint": [22, 26, 28, 37, 42, 46, 47, 59, 72, 89, 92, 93, 96, 98, 99], "randn": [28, 44], "random": [24, 28, 42, 44, 54, 63, 65, 88, 89], "random_st": 54, "random_strings_lognorm": [28, 42], "random_strings_uniform": [28, 42], "randomli": [28, 45, 47], "rang": [3, 21, 24, 28, 29, 31, 33, 37, 41, 42, 45, 46, 47, 57, 58, 60, 61, 88, 90, 93, 96, 97, 99, 102, 104, 107], "rank": [21, 28, 41, 42, 60, 74, 89, 90, 95, 96, 100], "rasi": [21, 28, 60, 95, 107], "rate": 65, "rather": [4, 16, 21, 24, 28, 60], "ravel": 39, "raw": [60, 107], "rc": 83, "rdrand": 65, "rdrnd": 65, "rdseed": 65, "rdtscp": 65, "re": [0, 21, 22, 24, 26, 28, 81, 98, 106, 107], "re2": [21, 28, 60, 81, 95, 107], "reach": 0, "reachabl": 106, "reactiv": 83, "read": [20, 21, 24, 28, 29, 31, 32, 41, 49, 51, 58, 60, 73, 74, 75, 76, 94, 107], "read_": [28, 31], "read_all_test": 1, "read_csv": [24, 28, 31, 73, 77], "read_hdf": [28, 31, 57, 77, 90], "read_nest": [28, 31, 90], "read_parquet": [28, 31, 77, 90], "read_path": [28, 31, 90], "read_tagged_data": [28, 31], "readabl": [21, 28, 30, 31, 41, 60, 74, 90], "readalltest": 1, "readi": [0, 66, 68, 82, 83], "readm": 1, "readthedoc": 64, "real": [0, 9, 28, 39, 42, 46, 47, 68, 74], "realist": [21, 28, 60], "realli": [0, 60], "reason": [68, 70, 83], "rebas": 0, "rebuild": [26, 28, 64, 67, 69, 70, 98], "rebuilt": 69, "receiv": [20, 21, 22, 24, 28, 29, 31, 41, 57, 60, 90, 94, 101, 106], "receive_arrai": [21, 24, 28, 41, 57, 60], "receive_datafram": [28, 31], "recent": 68, "recogn": 16, "recommend": [0, 28, 37, 45, 47, 66, 70, 76, 82, 85, 86, 87, 97, 102, 103], "recompil": 70, "recomput": [21, 28, 31], "reconnect": [28, 41], "reconstitut": [21, 28], "reconstruct": 74, "record": [28, 31], "recurs": [28, 42, 90], "reduc": [24, 26, 28, 69, 71, 98], "reduct": [26, 28, 41, 88, 89, 98, 99], "refer": [0, 24, 26, 28, 49, 51, 58, 69, 72, 81, 83, 85, 98], "reflect": [24, 28, 83, 97, 103], "reformat": [0, 90], "regard": 82, "regex": [21, 28, 60, 95, 107], "regex_max_captur": 1, "regist": [1, 4, 21, 23, 24, 26, 28, 29, 30, 41, 57, 58, 60, 61, 62, 64, 89, 98], "register_al": [28, 62], "registerablepiec": [21, 28], "registerd": [28, 58], "registeredsymbol": [28, 30], "registerfunct": 84, "registr": [28, 41, 60], "registrationerror": [21, 23, 24, 26, 28, 29, 41, 57, 58, 60, 61, 98], "registri": [21, 24, 26, 28, 29, 30, 41, 58, 60, 61, 62, 98], "regular": [21, 28, 60, 89, 95], "relat": [65, 68, 72], "releas": [20, 21, 24, 28, 29, 31, 41, 57, 60, 65, 70, 71, 82, 83, 102], "reli": [21, 28, 29, 41, 57, 60, 98], "remain": [20, 21, 24, 28, 29, 31, 37, 41, 57, 60, 82, 90, 91, 97, 104], "remaind": [9, 28, 41, 60, 107], "remap": [21, 28], "rememb": [70, 72], "remot": [68, 82, 83, 106], "remov": [20, 21, 24, 28, 29, 31, 41, 57, 60, 65, 69, 85, 97, 103, 107], "remove_repeat": [28, 57, 89, 103], "renam": [24, 28], "rep_good": 65, "rep_msg": [21, 23, 24, 26, 28, 29, 57, 60, 84], "repack": [20, 21, 23, 24, 26, 28, 29, 31, 41, 57, 60], "repeat": [1, 11, 21, 28, 39, 57, 95, 103], "repetit": 11, "repl": [27, 36, 60, 107], "replac": [3, 24, 28, 31, 36, 41, 45, 47, 57, 60, 66, 68, 74, 83, 84, 85, 103, 107], "repli": 64, "replic": [26, 28, 98], "repmsg": [28, 58, 64], "repo": [82, 83, 87], "repons": [28, 29, 41, 60], "report": 70, "report_mem": 62, "repres": [21, 23, 26, 28, 57, 58, 60, 61, 65, 74, 95, 98, 107], "represent": [23, 24, 28, 41], "reproduc": [0, 28, 45, 46, 47, 71, 96, 102], "reqmsg": 64, "request": [24, 26, 28, 32, 41, 42, 60, 64, 68, 96, 97, 98], "requir": [0, 3, 4, 16, 22, 24, 26, 28, 29, 31, 33, 41, 42, 58, 66, 67, 69, 70, 74, 75, 76, 79, 84, 90, 96, 97, 98], "requiredpiec": [21, 28], "reset_categori": [21, 28], "reset_index": [24, 28, 97], "reshap": [11, 20, 28, 39, 41, 89, 94], "resid": [28, 41, 60, 101], "resili": [28, 59, 92], "resisterfunct": 64, "resiz": 39, "resolv": [0, 67, 79, 86], "resolve_scalar_dtyp": [25, 28], "respect": [28, 37, 41, 42, 43, 54, 61, 68, 90, 96], "respond": 64, "respons": [22, 24, 28, 60, 64], "rest": [28, 58], "restor": [28, 31], "restrict": [4, 16], "result": [3, 21, 24, 26, 28, 29, 31, 33, 37, 41, 42, 43, 44, 45, 46, 47, 49, 51, 57, 58, 60, 61, 64, 65, 72, 73, 74, 75, 83, 90, 93, 96, 97, 98, 101, 102, 103, 104, 107], "result_array_on": [28, 33], "result_limit": [28, 33], "result_typ": 7, "ret": 64, "retain": [28, 37, 41, 62, 93], "retain_index": [24, 28, 97], "retriev": [22, 27, 28, 30, 41, 56, 58, 68], "return": [3, 4, 7, 16, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 73, 75, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107], "return_count": [28, 37, 99], "return_group": [26, 28, 105], "return_group_origin": [35, 107], "return_indic": [26, 28, 105], "return_length": [28, 33], "return_match_origin": [35, 36, 60, 107], "return_multipl": [28, 57, 103], "return_num_sub": 36, "return_obj": [28, 31, 90], "return_origin": [28, 57, 60, 103], "return_seg": [36, 60, 107], "return_valid": [28, 37, 101], "revarg": [3, 28], "revers": [4, 16, 23, 26, 28], "review": 68, "revindic": [3, 28], "revkei": [3, 28], "rf": 81, "rh": 82, "right": [3, 12, 23, 24, 28, 41, 45, 54, 59, 60, 61, 68, 92, 97, 100, 102, 106, 107], "right_align": [3, 28], "right_df": [24, 28], "right_shift": 9, "right_suffix": [24, 28], "risk": [28, 37, 74], "rm": 81, "rng": [28, 45, 47, 61, 102], "role": 1, "roll": 11, "root": [21, 23, 24, 26, 28, 29, 41, 58, 61, 65, 74, 82, 90, 93, 98], "rot": [28, 41], "rotat": [28, 37, 41], "rotl": [28, 41], "rotr": [28, 41], "round": [9, 28, 37, 39, 65], "rout": 86, "row": [3, 24, 26, 28, 29, 31, 41, 43, 57, 58, 59, 60, 63, 72, 73, 90, 92, 97, 98, 103, 105], "row_major": [20, 28, 41, 94], "row_numb": [26, 28], "row_start": [26, 28], "rpartit": [60, 107], "rpath": 81, "rpeel": [60, 89, 107], "rtype": [28, 29, 58], "rule": [4, 28, 37, 101], "run": [20, 21, 22, 24, 28, 31, 37, 41, 57, 60, 69, 70, 72, 79, 81, 82, 83, 85, 86, 88, 90, 94, 95, 101, 103, 106, 107], "runtim": [16, 22, 67], "runtime_check": 16, "runtimeerror": [20, 21, 22, 24, 26, 28, 29, 30, 31, 35, 37, 41, 42, 43, 57, 58, 60, 61, 90, 93, 94, 95, 96, 98, 99, 101, 105, 106, 107], "runtimewarn": [28, 31, 90], "ruok": 22, "rv": 54, "rv_continu": 54, "s1": [28, 37, 93], "s2": [28, 29, 37, 58, 93], "s3": [24, 28, 58], "sa": [28, 62], "sacrific": 107, "safe": [28, 37, 68, 101], "sai": 106, "sake": 64, "salari": 72, "same": [3, 20, 21, 23, 24, 26, 28, 29, 31, 37, 41, 42, 43, 56, 57, 58, 59, 60, 61, 68, 72, 73, 74, 76, 82, 83, 84, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107], "sampl": [24, 28, 37, 42, 45, 46, 47, 102], "satisfi": [3, 24, 28, 31], "save": [20, 21, 24, 26, 28, 29, 31, 41, 57, 60, 65, 66, 68, 69, 74, 75, 76, 90, 95, 98, 105], "save_al": [28, 29, 31, 41, 77], "save_offset": 60, "saveusedmodul": [69, 70, 84], "sb": [28, 62], "scalar": [3, 4, 16, 21, 24, 28, 37, 41, 57, 58, 64, 65, 88, 89, 95, 99, 100, 103, 104], "scalardtyp": [25, 28], "scale": [21, 28, 44, 49, 51, 54, 67, 72, 78], "scaler": [28, 58, 104], "scan": 89, "scatter": [65, 89], "schema": 90, "scheme": 68, "scienc": 98, "scipi": [0, 28, 63, 85], "scl": 82, "scope": [0, 84], "script": [64, 69, 83, 84, 88], "scroll": 81, "se": [26, 28, 41, 93, 98], "search": [3, 21, 28, 35, 43, 60, 89, 95], "search_interv": [3, 28], "searchsort": [12, 39], "sec": [28, 61, 65], "second": [3, 22, 28, 32, 37, 42, 43, 58, 60, 61, 62, 64, 65, 69, 72, 93, 96, 101, 104, 105, 106, 107], "secret": 56, "section": [1, 28, 37, 65, 67, 68, 69, 70, 72, 74, 79, 81, 85, 93], "secur": [28, 37, 63], "see": [0, 1, 3, 4, 7, 9, 10, 14, 16, 17, 24, 26, 28, 37, 41, 44, 45, 47, 54, 58, 60, 61, 62, 64, 65, 68, 69, 70, 79, 81, 84, 90, 93, 95, 98, 99, 101, 102, 103, 104, 105, 107], "seed": [28, 42, 45, 46, 47, 54, 65, 88, 96, 102], "seen": [22, 106], "seg": 62, "seg_a": [28, 57, 103], "seg_b": [28, 57, 103], "seg_suffix": [28, 57], "segarr": [28, 57, 103], "segarrai": [26, 28, 31, 37, 63, 89, 90, 97, 98], "segment": [21, 26, 28, 31, 33, 57, 60, 62, 74, 89, 90, 95, 98, 103, 105, 107], "segment_nam": [28, 57], "segstr": 60, "select": [22, 24, 27, 28, 31, 57, 58, 64, 68, 81, 87, 97, 103], "self": [16, 21, 24, 28, 41, 54, 57, 60, 90, 91, 94, 95, 97, 101, 102, 103, 104, 107], "send": [21, 22, 24, 28, 31, 41, 42, 57, 60, 64, 90, 97, 106], "send_arrai": [28, 31], "sens": [24, 28, 58], "sensit": [28, 61], "sent": [28, 31, 75], "sep": 65, "separ": [1, 4, 23, 24, 28, 29, 31, 32, 41, 54, 60, 65, 73, 74, 84, 90, 101, 107], "sequenc": [3, 21, 23, 28, 29, 37, 41, 42, 43, 45, 47, 57, 59, 62, 92, 96, 98, 101, 103, 105, 107], "sequenti": [28, 31, 90], "seri": [2, 24, 28, 29, 42, 61, 62, 63], "serv": 87, "server": [0, 1, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 41, 42, 45, 46, 47, 56, 57, 58, 60, 61, 67, 69, 70, 82, 83, 86, 88, 89, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 107], "server_util": [0, 1], "serverdaemon": 64, "servererrorstr": 64, "serverhostnam": 22, "servermodul": [1, 69, 70, 84], "serverport": 22, "session": [69, 79], "set": [1, 3, 20, 21, 23, 24, 26, 28, 29, 31, 34, 37, 41, 42, 43, 56, 57, 58, 60, 61, 65, 66, 68, 73, 74, 81, 82, 83, 84, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 107], "set_categori": [21, 28], "set_dtyp": [28, 29, 91], "set_jth": [28, 57, 89, 103], "set_xlim": 54, "setchplenv": [82, 83], "setdiff": [28, 57, 89, 103], "setdiff1d": [28, 43, 57, 64, 72, 89, 103, 105], "setfield": 39, "setflag": 39, "setop": 89, "setup": [1, 81, 86], "setxor": [28, 57, 89, 103], "setxor1d": [28, 43, 57, 64, 72, 89, 103, 105], "sever": [72, 74, 90, 93, 96], "sf": 54, "sh": [82, 83], "shallow": [24, 28, 97], "shape": [3, 4, 6, 11, 16, 20, 21, 24, 28, 29, 37, 39, 41, 45, 47, 54, 58, 60, 62, 74, 89, 93, 94, 95, 101, 102], "share": [20, 21, 24, 26, 28, 29, 41, 57, 60, 68, 86, 98], "shell": [22, 27, 28, 31, 83, 90], "shellhistoryretriev": 27, "shift": [11, 54], "short": 39, "shorthand": [28, 41, 60], "should": [0, 1, 4, 16, 21, 24, 25, 26, 28, 31, 37, 41, 42, 58, 60, 62, 64, 68, 69, 70, 72, 73, 74, 75, 79, 81, 82, 83, 85, 90, 97, 98, 101, 106], "shouldn": [69, 70], "show": [24, 28, 31, 44, 54, 81, 90, 94, 98], "show_int": [23, 28], "shown": 106, "shuffl": [28, 45, 47], "shut": [22, 79, 84], "shutdown": [22, 69, 70, 84], "side": [1, 12, 20, 21, 22, 24, 26, 28, 29, 30, 31, 35, 41, 42, 45, 47, 57, 58, 60, 61, 64, 68, 69, 79, 84, 86, 90, 93, 94, 95, 98, 99, 100, 101, 102, 103, 106, 107], "sigma": [28, 42, 45, 46, 47, 102], "sign": [9, 28, 31, 37, 39, 41, 45, 47, 90, 97, 101, 102], "signatur": [16, 27, 64], "signific": [23, 28, 37, 41, 59, 68, 84, 92, 93], "significantli": [21, 28, 69, 95], "similar": [0, 28, 31, 60, 65, 72, 90, 101, 103, 107], "similarli": [20, 28, 65, 72, 94], "simpl": [0, 16, 72, 84, 99], "simplest": 65, "simpli": [21, 22, 28, 37, 96], "simplic": 64, "simplifi": [0, 65], "simul": [82, 83], "sin": [9, 28, 37, 89, 93], "sinc": [1, 4, 28, 37, 45, 70, 95, 97, 101, 102, 107], "sine": [28, 37, 93], "singl": [0, 2, 3, 4, 16, 20, 21, 23, 24, 26, 28, 29, 31, 33, 37, 39, 41, 43, 45, 47, 57, 60, 69, 70, 72, 74, 76, 81, 84, 88, 90, 96, 97, 98, 100, 102, 103, 105], "singlecomplex": 39, "singleton": [28, 41], "sinh": [9, 28, 37], "siphash": [28, 37], "siphash128": [21, 28, 60], "site": 81, "situat": [28, 42], "six": [28, 60, 107], "size": [3, 4, 16, 20, 21, 24, 25, 26, 28, 29, 31, 33, 37, 39, 41, 42, 45, 46, 47, 54, 57, 58, 59, 60, 61, 62, 65, 72, 74, 75, 76, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107], "skew": [28, 54], "skip": [1, 26, 28, 31, 60, 82, 90, 98, 105, 107], "skipna": [26, 28, 98], "slice": [21, 24, 28, 41, 72, 89, 94, 95, 97, 103, 107], "slice_bit": [28, 41], "slightli": [24, 28, 31, 97], "slower": [21, 28, 107], "small": [24, 28, 37, 58, 74, 90], "smaller": [28, 58, 68, 73, 90], "smallest": [28, 41, 58, 93, 104], "smallest_norm": 7, "smap": 65, "smemtrack": 1, "smep": 65, "smith": 72, "snappi": [21, 24, 28, 29, 31, 41, 57, 60, 65, 76, 81], "snapshot": [28, 31], "so": [0, 1, 21, 23, 24, 26, 28, 31, 37, 41, 45, 47, 57, 58, 60, 65, 67, 68, 69, 70, 84, 85, 86, 90, 93, 94, 97, 98, 102, 104, 105], "socket": [22, 106], "softwar": 82, "some": [0, 4, 21, 24, 28, 54, 66, 72, 76, 81, 82, 95, 97, 103, 107], "someon": [0, 68], "someth": [68, 69, 106], "sometim": [54, 84, 94, 101], "somewhat": 67, "somewher": 64, "sort": [1, 3, 14, 21, 24, 26, 28, 37, 39, 41, 43, 57, 58, 60, 62, 63, 68, 88, 89, 93, 95, 96, 98, 99, 105, 107], "sort_index": [24, 28, 58, 104], "sort_valu": [24, 28, 58, 97, 104], "sorted_df1": [24, 28, 97], "sorted_df2": [24, 28, 97], "sorter": 12, "sortingalgorithm": [28, 59, 92], "sought": [60, 107], "sourc": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 66, 74, 79, 81, 82, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107], "space": [0, 1, 3, 28, 37, 42, 60, 61, 65, 81, 84, 96, 99, 107], "span": [60, 107], "spars": [3, 26, 28, 62, 98, 101], "sparse_sum_help": 62, "special": [23, 28, 51, 54, 58, 60, 63, 101, 104], "special_objtyp": [23, 28, 61], "special_str": 60, "specif": [0, 4, 16, 24, 28, 31, 45, 47, 54, 70, 73, 74, 75, 82, 84, 89, 90, 97, 102], "specifi": [1, 3, 4, 7, 11, 16, 20, 23, 24, 26, 28, 29, 31, 32, 41, 42, 44, 45, 46, 47, 54, 57, 58, 60, 61, 62, 65, 69, 75, 90, 93, 94, 96, 97, 98, 102, 103], "speed": [21, 28, 43, 67, 71, 84, 95, 96, 105], "sphinx": [63, 81, 85], "splash": 1, "split": [25, 28, 36, 60, 68, 89], "spread": 90, "sqrt": [9, 26, 28, 41, 93, 98], "squar": [9, 26, 28, 37, 41, 49, 51, 54, 93, 98], "squared_test": [28, 49, 51], "squash": 0, "squeez": [11, 39], "src": [64, 84], "ss": 65, "ssbd": 65, "sse": 65, "sse2": 65, "sse4_1": 65, "sse4_2": 65, "ssegmentedstr": 60, "ssh": 1, "ssse3": 65, "st": 64, "stabl": [14, 28, 59, 92, 94], "stack": [11, 107], "standard": [0, 4, 21, 26, 28, 41, 42, 45, 46, 47, 54, 61, 64, 65, 66, 93, 98, 99, 102], "standard_norm": [28, 42, 45, 46, 47, 89], "standardize_categori": [21, 28], "start": [0, 3, 4, 6, 16, 21, 24, 26, 28, 29, 33, 35, 41, 42, 57, 58, 59, 60, 61, 74, 89, 92, 95, 96, 98, 100, 103, 107], "startswith": [21, 28, 60, 89, 95, 107], "startup": [1, 79, 89], "stat": [28, 49, 51, 63, 65], "state": [21, 28, 45, 47, 60, 68, 102], "static": [16, 21, 24, 26, 28, 29, 41, 57, 58, 60, 98], "statist": [26, 28, 41, 49, 51, 65, 89, 93, 98], "statu": 22, "std": [15, 26, 28, 39, 41, 54, 61, 89, 93, 98, 99], "stddev": 65, "stddev_outli": 65, "stdev": [28, 45, 47, 102], "step": [0, 6, 26, 28, 65, 66, 67, 70, 81, 84, 87, 105, 106], "stepfil": 54, "stibp": 65, "stick": [60, 70, 89, 107], "still": [74, 107], "stop": [6, 22, 28, 42, 96, 100], "storag": [24, 28, 58, 65], "storage_opt": [24, 28, 58], "store": [20, 23, 24, 26, 28, 29, 31, 39, 42, 46, 47, 56, 60, 65, 73, 74, 77, 86, 90, 94, 95, 96, 98, 103, 107], "str": [2, 4, 6, 7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 44, 56, 57, 58, 60, 61, 62, 65, 73, 90, 93, 94, 95, 96, 97, 98, 101, 106, 107], "str_": [25, 28, 99], "str_acc": [28, 58], "str_scalar": [21, 25, 28, 36, 60, 95, 107], "straight": 68, "strategi": [85, 86, 90], "stream": [4, 16, 28, 45, 47, 69, 102], "streamhandl": 28, "strict": [28, 37, 101], "strict_typ": [28, 31], "stricttyp": [28, 31, 90], "stride": [24, 28, 33, 39, 42, 96, 97, 100], "string": [0, 1, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 41, 42, 43, 49, 51, 56, 57, 58, 59, 61, 62, 63, 64, 65, 68, 84, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105], "string_oper": [2, 28], "stringa": 60, "stringaccessor": [2, 28], "stringb": 60, "stringc": 60, "stringifi": [24, 28, 97], "strings0": 60, "strings1": 60, "strings2": 60, "strings_arrai": [60, 74], "strings_encodedecod": 65, "strings_end": [60, 107], "strings_pdarrai": 60, "strings_start": [60, 107], "strip": 60, "strive": 68, "strongli": [28, 37], "structur": [16, 21, 24, 28, 57, 72, 76, 97, 98, 101, 103, 107], "strucutur": 103, "style": [0, 21, 23, 24, 26, 28, 29, 41, 57, 58, 60, 61, 97, 98, 101], "sub": [28, 36, 39, 57, 60, 89, 107], "subclass": [4, 39], "subdir": 82, "subdirectori": 64, "subject": [1, 28, 61], "subn": [60, 89, 107], "subplot": 54, "subsequ": [28, 37, 74], "subset": [4, 21, 22, 24, 27, 28, 57, 84, 93, 97, 103], "substanti": 68, "substitu": [60, 107], "substitut": [36, 60, 79, 81, 107], "substr": [21, 23, 28, 60, 89, 95], "subsystem": 86, "subtract": 9, "subtyp": 16, "succeed": [28, 37, 101], "success": [20, 21, 22, 24, 28, 29, 31, 33, 37, 41, 57, 60, 101, 106], "successfulli": 83, "sudo": [82, 86], "suffix": [24, 28, 31, 57, 60, 74, 89, 107], "suggest": [70, 86], "sum": [15, 24, 26, 28, 37, 39, 41, 57, 61, 62, 89, 93, 98, 99], "summar": [89, 90], "summari": [0, 24, 28], "super": 0, "supercomput": 78, "suppli": [26, 28, 31, 37, 42, 57, 74, 76, 77, 96, 97], "support": [0, 21, 23, 24, 25, 26, 28, 29, 31, 32, 37, 41, 42, 43, 45, 54, 56, 57, 58, 60, 61, 64, 72, 75, 79, 82, 83, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107], "supported_opeq": [28, 61], "supported_scalar": [28, 58], "supported_with_datetim": [28, 61], "supported_with_pdarrai": [28, 61], "supported_with_r_datetim": [28, 61], "supported_with_r_pdarrai": [28, 61], "supported_with_r_timedelta": [28, 61], "supported_with_timedelta": [28, 61], "supportsbufferprotocol": [6, 16], "supportsdlpack": 16, "suppress": [24, 28], "sure": [0, 24, 28, 29, 31, 41, 60, 68, 86], "surround": 0, "surviv": [3, 28, 54], "swapax": 39, "switch": [84, 94], "symbol": [22, 28, 30, 41, 57, 60, 64, 101], "symentri": 64, "symlink": 86, "symmetr": [3, 28, 43, 57, 72, 89, 105], "symtab": 64, "symtabl": 22, "sync": 83, "synchron": [21, 28], "syntax": 100, "syscal": 65, "system": [1, 20, 21, 28, 41, 56, 60, 64, 65, 83, 84, 85, 86, 87, 90, 93, 94, 95, 101, 106, 107], "t": [0, 4, 16, 24, 28, 31, 39, 60, 61, 64, 68, 69, 70, 81, 82, 83, 86, 88, 107], "t1": [28, 33], "t2": [28, 33], "tab": [0, 68, 81], "tabl": [3, 22, 24, 28, 30, 41, 57, 58, 60, 64, 65, 85, 101, 103], "tablefmt": [24, 28, 58], "tablul": [24, 28, 58], "tabul": [24, 28, 58, 85], "tag": [0, 28, 31, 34, 68, 70], "tag_data": [28, 31], "tagdata": [28, 31], "taht": 90, "tail": [24, 28, 42, 58], "take": [0, 10, 23, 26, 28, 34, 39, 41, 45, 47, 54, 66, 67, 69, 70, 72, 75, 90, 98, 102], "taken": [68, 84], "talk": 94, "tan": [9, 28, 37], "tangent": [28, 37], "tanh": [9, 28, 37], "tar": [79, 81, 82, 83], "target": [28, 32, 37, 42, 65, 67, 68, 81, 90, 96, 100, 101], "task": [1, 22], "tb": 22, "tblgen": 86, "tcp": [22, 79, 106], "team": 68, "technic": [28, 31], "techniqu": 70, "tell": [28, 31, 65, 90], "tend": 67, "tensor": [26, 28, 98], "tensordot": 19, "termin": [28, 31, 74, 79, 86, 106], "test": [3, 21, 24, 28, 31, 43, 49, 51, 66, 68, 69, 70, 72, 79, 84, 97, 105], "test_": 0, "test_command": 84, "test_data_url": 1, "testmsg": 84, "text": [68, 73, 90], "th": [28, 37, 57, 93, 103], "than": [3, 4, 20, 21, 24, 26, 28, 29, 31, 37, 39, 41, 42, 43, 45, 47, 57, 58, 59, 60, 66, 68, 69, 76, 90, 92, 94, 95, 96, 97, 98, 101, 102, 105, 107], "thei": [1, 16, 21, 22, 23, 24, 26, 28, 29, 31, 41, 57, 58, 60, 61, 62, 66, 68, 73, 74, 75, 82, 83, 90, 94, 95, 98, 104], "them": [1, 24, 28, 31, 43, 54, 60, 68, 82, 90, 97, 105], "therefor": 74, "theta": 54, "thi": [0, 1, 4, 16, 20, 21, 22, 23, 24, 26, 28, 29, 31, 34, 37, 39, 41, 42, 44, 45, 47, 48, 49, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 81, 82, 83, 84, 86, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107], "thin": [23, 28], "thing": [0, 4, 16, 72], "third": [28, 42, 68, 96], "thirti": [3, 28], "those": [0, 4, 16, 28, 59, 72, 82, 84, 92, 100], "though": 72, "thousand": 90, "three": [3, 28, 42, 43, 60, 61, 81, 96, 100, 101, 107], "three_____four____f": [60, 107], "thresh": [24, 28], "threshold": 107, "thrift": 81, "through": [1, 28, 37, 64, 66, 68, 79, 83], "throw": 64, "thrown": [20, 21, 24, 28, 29, 30, 31, 35, 41, 42, 57, 58, 60, 90, 93, 94, 95, 99, 101, 107], "thu": [28, 31, 42, 59, 64, 74, 75, 92, 103], "tiebreak": [3, 28], "tile": 11, "time": [1, 21, 22, 24, 26, 28, 29, 31, 33, 37, 41, 45, 57, 58, 60, 61, 65, 67, 69, 70, 73, 74, 76, 84, 88, 90, 95, 98, 99, 102, 103, 105, 107], "timeclass": [28, 31, 63], "timedelta": [28, 31, 42, 61, 90], "timedelta64": [28, 61], "timedelta_rang": [28, 61], "timedeltaindex": [28, 61], "timeout": [1, 22, 106], "timer": 65, "times2": 64, "times2msg": 64, "timeseri": [28, 61], "timestamp": [28, 33], "timezon": [28, 61], "tip": [71, 81], "titl": [0, 60, 68], "titlecas": 60, "tm": 65, "to_csv": [24, 28, 29, 31, 41, 60, 73, 77], "to_cuda": [28, 41], "to_datafram": [28, 58], "to_datetim": [28, 42], "to_devic": [4, 16], "to_dict": [28, 29], "to_hdf": [20, 21, 23, 24, 26, 28, 29, 31, 41, 57, 60, 74, 77, 89, 90, 98], "to_list": [20, 21, 23, 28, 29, 41, 57, 58, 60, 72, 90, 94, 101, 103, 107], "to_markdown": [24, 28, 58], "to_ndarrai": [4, 16, 20, 21, 23, 28, 29, 37, 41, 42, 44, 57, 60, 61, 72, 89, 90, 94, 95, 99, 101, 103, 107], "to_panda": [24, 28, 29, 58, 61, 72, 97, 104], "to_parqet": [28, 41], "to_parquet": [21, 24, 28, 29, 31, 41, 57, 60, 76, 77, 90], "to_str": [21, 28], "tobyt": 39, "toencod": 60, "tofil": 39, "togeth": [21, 24, 26, 28, 60, 62, 97, 98, 105], "token": [1, 22, 56, 79, 106], "token_hex": 56, "token_str": 79, "token_valu": [22, 106], "toleft": [60, 107], "tolist": [4, 16, 39], "too": [67, 90], "tool": [0, 82, 83], "toolset": 72, "top": [28, 58, 64, 69, 74, 81, 82, 83, 87, 104], "topn": [28, 58, 104], "tostr": 39, "tosymentri": 64, "total": [22, 24, 26, 28, 31, 60, 65, 90, 98], "total_mem": 22, "total_second": [28, 61], "totestmsg": 84, "touch": 100, "toward": [28, 42], "trace": 39, "track": [0, 69, 76], "trail": [28, 41, 60], "transfer": [20, 21, 24, 28, 31, 41, 57, 60, 65, 90, 94, 95, 97, 101, 103, 107], "transfer_r": 65, "transform": [28, 29], "transit": 72, "translate_np_dtyp": [25, 28], "transpos": [4, 16, 28, 39, 57, 90], "treat": [3, 20, 23, 24, 25, 28, 59, 65, 72, 92, 94, 97], "trial": [65, 88], "tril": 6, "triu": 6, "trivial": [3, 28], "true": [1, 3, 6, 7, 14, 20, 21, 22, 23, 24, 26, 28, 29, 31, 33, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 54, 57, 58, 60, 61, 62, 65, 72, 83, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107], "true_dt": [28, 33], "trunc": [9, 28, 37], "truncat": [20, 21, 23, 26, 28, 29, 31, 37, 41, 57, 60, 74, 76, 98], "try": [0, 25, 28, 29, 31, 41, 86], "tsc": 65, "tukei": [28, 49, 51], "tune": 1, "tunnel": 1, "tupl": [3, 4, 6, 7, 11, 12, 15, 16, 17, 21, 23, 24, 25, 26, 28, 33, 37, 41, 42, 43, 46, 47, 57, 58, 60, 62, 72, 90, 95, 96, 97, 98, 99, 101, 104, 105, 107], "turn": [25, 28, 58, 69, 79, 104], "tutori": 86, "tvkj": [28, 42], "tvkjte": [28, 42], "twenti": [3, 28], "twice": [28, 42, 90], "two": [3, 19, 21, 23, 24, 26, 28, 29, 33, 37, 39, 41, 42, 43, 57, 58, 60, 61, 62, 72, 73, 82, 84, 90, 93, 96, 98, 105, 107], "txt": 1, "type": [2, 3, 4, 7, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 43, 45, 46, 47, 49, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 75, 81, 85, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107], "typecheck": 64, "typeerror": [3, 21, 23, 24, 25, 26, 28, 29, 31, 33, 34, 37, 41, 42, 43, 46, 47, 57, 58, 59, 60, 61, 62, 64, 90, 92, 93, 95, 96, 98, 99, 104, 105, 107], "typeguard": 85, "typic": [0, 23, 28, 64, 69, 70, 95], "tz": [28, 61], "tzinfo": [28, 61], "u": [0, 23, 28, 42, 61, 68, 82, 83, 90], "u0": [24, 28, 29], "u0009": 60, "u0009nu000bu000cu000d": 60, "u000b": 60, "u000c": 60, "u000d": 60, "u5": [60, 90, 107], "ub": 54, "ubuntu": 86, "ubyt": 39, "ui": 1, "uint": [3, 24, 28, 31, 39, 41, 42, 60, 73], "uint16": [8, 25, 28, 39, 99], "uint32": [8, 25, 28, 31, 39, 90, 99], "uint64": [3, 8, 23, 25, 26, 28, 37, 39, 41, 42, 46, 47, 59, 65, 74, 88, 92, 93, 96, 97, 99, 101], "uint8": [8, 25, 28, 37, 39, 60, 74, 99, 101, 107], "uintc": 39, "uintp": 39, "uintptr_t": 39, "ulonglong": 39, "unabl": [21, 23, 24, 26, 28, 29, 41, 58, 60, 61, 98], "unaffect": 65, "unalt": [45, 102], "unbias": [26, 28, 41, 93, 98], "unchang": [21, 28], "undefin": [28, 42, 46, 47, 96], "under": [0, 2, 20, 21, 23, 24, 26, 28, 29, 31, 41, 42, 57, 58, 60, 61, 65, 68, 90, 94, 95, 98, 101, 107], "under_flat": [60, 107], "under_map": [60, 107], "underflow": [28, 37, 101], "underli": [21, 23, 24, 26, 28, 29, 37, 57, 58, 61, 98], "underneath": 68, "underscor": [4, 16], "undoubl": 64, "unequ": [28, 37, 93], "unflatten": 74, "uniform": [28, 37, 42, 45, 46, 47, 59, 89, 90, 92, 93, 96], "uniformli": [28, 42, 45, 46, 47, 96, 102], "uniniti": [28, 41], "uninterpret": [28, 37, 101], "union": [21, 22, 24, 28, 30, 31, 33, 37, 41, 42, 43, 46, 47, 57, 59, 60, 72, 89, 90, 92, 93, 95, 96, 98, 99, 101, 104, 105, 107], "union1d": [21, 28, 43, 57, 64, 72, 89, 103, 105], "uniqu": [3, 21, 24, 26, 28, 29, 37, 41, 43, 57, 58, 60, 72, 74, 89, 90, 95, 98, 99, 100, 103, 104, 105, 107], "unique_al": 13, "unique_count": 13, "unique_invers": 13, "unique_kei": [26, 28, 89, 98], "unique_key_idx": 74, "unique_valu": [13, 28, 37, 41, 99], "uniqueallresult": 13, "uniquecountsresult": 13, "uniqueinverseresult": 13, "unit": [0, 1, 22, 24, 28, 29, 37, 58, 61, 62], "unknown": [24, 28, 29, 31, 41, 42, 60], "unless": [1, 24, 28, 31, 37, 45, 47, 60, 102, 107], "unlik": [24, 28, 31, 60, 61], "unlimit": [24, 28], "unnecessari": 70, "unord": [28, 57], "unpack": [60, 79, 83, 107], "unregist": [21, 23, 24, 26, 28, 29, 41, 57, 58, 60, 61, 62, 89, 98], "unregister_al": [28, 62], "unregister_categorical_by_nam": [21, 28], "unregister_dataframe_by_nam": [24, 28], "unregister_groupby_by_nam": [26, 28, 89, 98], "unregister_pdarray_by_nam": [28, 41], "unregister_segarray_by_nam": [28, 57], "unregister_strings_by_nam": 60, "unrel": 96, "unset": [69, 83], "unsign": [39, 97], "unsort": [24, 28, 97], "unsqueez": [3, 28], "unstabl": [45, 102], "unstack": 11, "unsupport": [25, 26, 28, 31, 56, 59, 90, 105], "unsupportedoper": 32, "unsupportedopt": 32, "unsur": 0, "until": [21, 23, 24, 26, 28, 29, 41, 57, 58, 60, 61, 70, 98], "unus": [21, 28, 31, 90], "up": [1, 3, 21, 22, 24, 26, 28, 31, 37, 41, 43, 57, 60, 64, 67, 70, 71, 81, 82, 83, 84, 90, 93, 94, 95, 96, 105, 107], "updat": [21, 23, 24, 26, 28, 29, 31, 41, 44, 57, 58, 60, 61, 76, 81, 86, 90, 98], "update_hdf": [20, 21, 23, 24, 26, 28, 29, 31, 41, 57, 60], "update_nrow": [24, 28], "upgrad": [81, 85], "upon": [28, 37, 60, 83, 84, 87, 93], "upper": [28, 45, 47, 60, 68, 102], "upper_bounds_exclus": [3, 28], "upper_bounds_inclus": [3, 28], "uppercamelcas": 0, "uppercas": [28, 42, 60], "upstream": [68, 82, 83], "url": [1, 22, 24, 28, 58, 79, 81, 106], "us": [0, 1, 3, 4, 16, 21, 22, 23, 24, 26, 27, 28, 29, 31, 34, 37, 41, 42, 44, 45, 46, 47, 48, 49, 51, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "usag": [4, 16, 24, 28, 29, 58, 71, 79, 88, 103, 106], "use_seri": [24, 28, 97], "usedmodul": [69, 70, 84], "usehash": 60, "user": [0, 1, 20, 21, 23, 24, 26, 28, 29, 31, 34, 37, 41, 42, 44, 56, 57, 58, 60, 61, 62, 65, 68, 71, 72, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 90, 94, 95, 98, 101, 107], "user_defined_nam": [21, 23, 24, 26, 28, 29, 41, 57, 58, 60, 61, 98], "userdict": [24, 28, 48], "userid": [24, 28, 97, 98], "usernam": [24, 28, 56, 58, 97], "username_token": 56, "ushort": 39, "usual": [0, 26, 28, 64, 98], "utf": [24, 28, 31, 60], "utf8proc": 81, "util": [0, 28, 31, 63, 68, 81, 82, 83], "v": [0, 28, 54, 57, 68, 82, 88, 103], "v1": [28, 49, 51], "v2022": 68, "v2023": [70, 79], "val": [3, 25, 26, 28, 54, 57, 58, 62, 98, 103], "val1": 62, "val2": 62, "val_suffix": [28, 57], "valid": [3, 16, 21, 28, 31, 37, 42, 58, 60, 90, 95, 101, 107], "validate_kei": [28, 58], "validate_v": [28, 58], "vals1": 62, "vals2": 62, "valu": [3, 4, 13, 20, 21, 22, 23, 24, 26, 28, 29, 31, 32, 33, 37, 41, 42, 43, 45, 46, 47, 49, 51, 54, 57, 58, 60, 61, 62, 65, 72, 74, 76, 83, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107], "valuabl": 84, "value_count": [28, 37, 41, 58, 89, 99, 104], "value_label": [28, 58], "value_nam": [28, 57], "value_s": [65, 88], "valueerror": [3, 21, 22, 24, 26, 28, 29, 31, 32, 33, 37, 41, 42, 43, 46, 47, 57, 58, 59, 60, 90, 92, 93, 95, 96, 98, 99, 103, 104, 106, 107], "var": [0, 1, 15, 26, 28, 39, 41, 54, 64, 89, 93, 98, 99], "vari": [28, 41, 72, 81, 83, 85, 87, 103], "variabl": [0, 26, 28, 31, 33, 41, 54, 56, 57, 60, 65, 66, 82, 83, 84, 93, 98, 103, 107], "varianc": [26, 28, 41, 54, 93, 98, 99], "variat": 54, "varieti": [28, 45, 47, 102], "variou": [1, 73], "vcxsrv": 86, "ve": [70, 82, 83], "vecdot": 19, "vecentropi": 54, "vector": [23, 26, 28, 89, 98], "vendor_id_raw": 65, "venv": [81, 82], "verbos": [1, 28, 30, 34], "veri": [0, 24, 28, 72, 96, 97], "verifi": [0, 1, 24, 28, 75, 90, 97], "versa": [24, 28, 90, 97], "version": [0, 21, 24, 28, 49, 51, 62, 65, 68, 74, 79, 81, 82, 83, 85, 86], "versu": [28, 31, 90], "vertic": [28, 57, 58, 103], "verticl": [28, 58, 104], "via": [0, 1, 21, 24, 26, 28, 41, 42, 60, 64, 81, 82, 83, 90, 95, 98, 100, 101, 102, 107], "vice": [24, 28, 90, 97], "view": [4, 16, 20, 28, 39, 68, 72, 77, 81, 87, 94, 101], "virtual": 81, "visibl": [21, 22, 28, 29, 31, 41, 57, 60, 106], "visit": [79, 82, 83], "visual": [28, 44], "vme": 65, "vname": 64, "vsxrrl": [28, 42], "w": [28, 35, 61, 107], "wa": [0, 20, 21, 23, 24, 26, 28, 29, 31, 37, 41, 57, 58, 60, 61, 69, 74, 75, 81, 83, 90, 98, 101, 103], "wai": [22, 65, 69, 74, 79, 84, 93, 95, 96, 97, 101, 102, 107], "walk": [64, 66, 79], "want": [0, 1, 24, 28, 79, 83, 85, 97], "warmup": 65, "warn": [1, 28, 31, 34, 60, 90, 107], "we": [0, 1, 4, 24, 28, 29, 31, 37, 41, 45, 47, 60, 62, 64, 65, 66, 68, 70, 72, 73, 76, 81, 82, 83, 85, 86, 99, 101, 102], "web": [0, 68], "week": [28, 61, 98], "weekdai": [28, 61], "weekofyear": [28, 61], "weight": [28, 45, 47], "welcom": 0, "well": [23, 28, 65, 72, 85], "went": 106, "were": [3, 20, 26, 28, 29, 31, 41, 57, 60, 69, 84, 94, 98, 103, 107], "wget": 82, "what": [0, 25, 28, 45, 57, 64, 68, 69, 70, 84, 102, 106], "wheel": 81, "when": [0, 1, 3, 20, 21, 23, 24, 26, 28, 29, 31, 37, 41, 43, 57, 58, 60, 61, 62, 64, 65, 68, 69, 70, 72, 74, 76, 79, 81, 83, 84, 85, 86, 90, 93, 95, 97, 98, 101, 103, 105], "whenev": 107, "where": [1, 12, 21, 22, 24, 26, 28, 29, 31, 32, 33, 37, 41, 42, 43, 56, 57, 60, 62, 64, 65, 66, 67, 74, 82, 83, 89, 90, 98, 99, 100, 101, 103, 105, 106, 107], "wherea": [94, 107], "wherev": 70, "whether": [7, 21, 24, 26, 28, 31, 33, 35, 37, 43, 57, 58, 60, 61, 72, 90, 95, 103, 104, 105, 107], "which": [0, 3, 20, 21, 22, 23, 24, 26, 28, 29, 31, 37, 41, 42, 43, 45, 46, 47, 57, 58, 59, 60, 61, 64, 65, 67, 68, 70, 72, 81, 82, 83, 84, 88, 90, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 105, 106, 107], "whichev": 86, "whicn": [22, 106], "while": [3, 28, 31, 59, 70, 74, 76, 81, 86, 90, 92], "whitespac": [28, 31, 60], "whl": 81, "who": [0, 82, 83], "whole": [60, 68, 107], "whose": [24, 28, 57, 58, 60, 104], "wide": 107, "width": [23, 28, 107], "wiki": [0, 28, 49, 51], "wikipedia": [28, 49, 51], "window": [28, 33, 56, 79, 87], "wise": [21, 28, 37, 41, 89, 94], "wish": 84, "within": [21, 22, 24, 26, 27, 28, 29, 31, 41, 42, 45, 47, 57, 60, 64, 65, 74, 76, 96, 97, 98, 102, 103], "without": [21, 24, 28, 31, 41, 45, 47, 70, 79, 81, 90, 97], "won": 70, "word": [3, 28, 45, 47, 102], "work": [0, 21, 24, 28, 31, 41, 43, 48, 60, 69, 72, 74, 76, 79, 82, 83, 84, 90, 95, 97, 100, 105, 107], "workflow": [0, 28, 31, 62, 68, 84, 90], "workhors": 98, "world": [60, 90, 107], "worri": 69, "wors": 69, "would": [62, 66, 70, 75, 90, 93, 98], "wraparound": 65, "wrapper": [4, 7, 9, 10, 14, 16, 17, 23, 28, 101], "writ": 76, "write": [1, 20, 21, 24, 28, 29, 31, 32, 34, 41, 57, 58, 60, 65, 68, 73, 90, 94], "write_fil": [28, 31, 90], "write_line_to_fil": 32, "write_log": [28, 34], "writeln": 0, "written": [21, 24, 26, 28, 29, 31, 32, 34, 41, 57, 58, 60, 73, 74, 75, 76, 77, 81, 90, 98, 101], "wrong": [28, 31, 106], "wrote": 0, "wsl": 86, "wsl2": [65, 87], "wt": [24, 28, 58], "x": [0, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 23, 24, 25, 26, 28, 31, 37, 41, 44, 45, 47, 49, 51, 52, 53, 54, 57, 60, 62, 72, 86, 90, 93, 94, 95, 97, 98, 101, 103, 107], "x1": [9, 12, 19], "x2": [9, 12, 19], "x410": 86, "x86": 82, "x86_64": [39, 65, 82, 86], "x_edg": [28, 37], "xgetbv1": 65, "xlabel": [28, 44], "xlogi": [28, 52, 53], "xor": [26, 28, 41, 57, 89, 98], "xore": [28, 37], "xsave": 65, "xsavec": 65, "xsaveopt": 65, "xserver": 86, "xtol": 54, "xtopologi": 65, "xvf": 82, "xy": 6, "xzf": [79, 83], "y": [28, 37, 41, 44, 49, 51, 52, 53, 54, 66, 82], "y_edg": [28, 37], "yaml": 85, "yaml_fil": 85, "ye": 66, "year": [28, 61], "yet": [28, 57, 81, 90, 94], "yield": [1, 20, 21, 24, 28, 29, 31, 41, 57, 60, 97, 100], "yml": [79, 82, 83, 85], "you": [0, 1, 21, 23, 24, 26, 28, 29, 31, 41, 57, 58, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 79, 81, 82, 83, 84, 85, 86, 87, 97, 98, 100], "your": [0, 1, 24, 28, 29, 31, 41, 60, 66, 67, 68, 70, 71, 79, 81, 82, 83, 84, 85, 86, 87, 97, 106, 107], "your_fork": [82, 83], "your_machin": 79, "yum": 82, "yyyi": 68, "z": [28, 37], "zero": [6, 26, 28, 37, 41, 42, 68, 89, 96, 98, 100, 101], "zero_up": [3, 28], "zerodivisionerror": [28, 41, 42, 96], "zeromq": [81, 85], "zeros_lik": [6, 28, 42, 89, 96], "zmq": [1, 81], "zmqchannel": [22, 106], "zone": [28, 61], "zsh": 83, "zshrc": 83, "zstd": [21, 24, 28, 29, 31, 41, 57, 60, 65, 76], "\u00b2": 60}, "titles": ["Contributing", "Environment Variables", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.accessor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.alignment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._array_object</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._constants</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._creation_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._data_type_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._dtypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._elementwise_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._indexing_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._manipulation_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._searching_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._set_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._sorting_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._statistical_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._typing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api._utility_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_api.linalg</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.array_view</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.categorical</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.client</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.client_dtypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.dataframe</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.dtypes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.groupbyclass</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.history</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.index</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.infoclass</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.io_util</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.join</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.match</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.matcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.numeric</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.numpy.char</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.numpy.imports</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.numpy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.pdarrayclass</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.pdarraycreation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.pdarraysetops</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.plotting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.random._generator</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.random._legacy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.random</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.row</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.scipy._stats_py</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.scipy.imports</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.scipy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.scipy.special._math</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.scipy.special</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.scipy.stats.imports</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.scipy.stats</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.security</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.segarray</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.series</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.sorting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.strings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.timeclass</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">arkouda.util</span></code>", "API Reference", "Adding Your First Feature", "PyTest Benchmarks", "GASNet Development", "Reducing Memory Usage of Arkouda Builds", "Release Process", "Speeding up Arkouda Compilation", "Tips for Reproducing User Bugs", "Developer Documentation", "Examples", "CSV", "HDF5", "Import/Export", "Parquet", "File I/O", "Arkouda Documentation", "Quickstart", "Chapel API Reference", "Building the Server", "Linux", "MacOS", "Modular Server Builds", "Requirements", "Windows (WSL2)", "Installation", "Performance Testing", "Usage Guide", "Data I/O", "Indexs in Arkouda", "Sorting", "Arithmetic and Numeric Operations", "ArrayView in Arkouda", "Categoricals", "Creating Arrays", "DataFrames in Arkouda", "GroupBy", "Summarizing Data", "Indexing and Assignment", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">pdarray</span></code> class", "Random in Arkouda", "SegArrays in Arkouda", "Series in Arkouda", "Array Set Operations", "Startup", "Strings in Arkouda"], "titleterms": {"3": [79, 106], "The": [65, 101], "_array_object": 4, "_constant": 5, "_creation_funct": 6, "_data_type_funct": 7, "_dtype": 8, "_elementwise_funct": 9, "_gener": 45, "_indexing_funct": 10, "_legaci": 46, "_manipulation_funct": 11, "_math": 52, "_searching_funct": 12, "_set_funct": 13, "_sorting_funct": 14, "_statistical_funct": 15, "_stats_pi": 49, "_type": 16, "_utility_funct": 17, "access": 103, "accessor": 2, "ad": [0, 1, 64, 84], "align": 3, "all": 81, "alwai": 69, "an": 84, "anaconda": [82, 83, 85], "api": [63, 73, 74, 75, 76, 77, 80], "append": [97, 103], "argsort": [88, 91], "argument": [65, 88], "arithmet": 93, "arkouda": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 69, 72, 73, 74, 76, 78, 79, 81, 82, 83, 84, 91, 94, 97, 102, 103, 104, 106, 107], "arrai": [72, 96, 103, 105], "array_api": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "array_view": 20, "arrayview": [74, 94], "arrow": 81, "assign": 100, "attribut": [4, 16, 25, 26, 28, 30, 39, 56, 57, 74], "basic": 72, "benchmark": 65, "between": 90, "bug": [0, 70], "build": [66, 67, 69, 70, 81, 83, 84], "cast": 101, "categor": [21, 74, 76, 95], "chang": 91, "chapel": [0, 1, 66, 80, 82, 83], "char": 38, "class": [2, 4, 7, 13, 16, 20, 21, 23, 24, 26, 27, 28, 29, 34, 35, 36, 37, 39, 41, 45, 47, 48, 49, 51, 54, 57, 58, 60, 61, 101], "client": [1, 22, 64, 79, 90, 106], "client_dtyp": 23, "clone": [82, 83], "code": 0, "column": 97, "compil": [1, 69], "compress": 76, "concat": 91, "concaten": [96, 97], "configur": [66, 74, 81, 84], "connect": [79, 106], "constant": 96, "construct": 95, "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], "contribut": 0, "convent": 0, "copi": 97, "core": 0, "count": [99, 104], "creat": [72, 96], "creation": [72, 94, 102], "csv": 73, "custom": 84, "data": [73, 74, 76, 90, 97, 99, 101], "datafram": [24, 72, 73, 74, 76, 97], "dataset": 90, "dedupl": [97, 103], "depend": [1, 79, 81, 85], "descript": 99, "develop": [0, 66, 71, 85], "diff": 68, "differ": 103, "directori": 1, "disconnect": 79, "disk": 90, "distribut": [74, 81], "document": [71, 78, 81], "drop": 97, "dtype": [25, 91], "effici": 70, "element": [93, 103], "environ": [1, 66, 69, 81, 82, 83], "exampl": [64, 72, 73], "export": [72, 75, 77, 90], "express": 107, "featur": [0, 64, 91, 97, 102, 104], "file": [65, 73, 74, 77, 84, 90], "filter": 97, "first": 64, "flag": 1, "flatten": 107, "format": [73, 77, 90], "from": [1, 83, 90], "full": [65, 70], "function": [2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 37, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 56, 57, 59, 61, 62, 64, 77, 93], "gasnet": 66, "gather": [88, 100], "gener": [68, 77], "get": 81, "git": 68, "groupbi": [72, 74, 97, 98], "groupbyclass": 26, "guid": [87, 89], "hdf5": 74, "head": [97, 104], "header": 73, "histogram": 99, "histori": 27, "homebrew": 83, "i": [77, 90, 107], "import": [39, 50, 54, 72, 75, 77, 90], "index": [29, 73, 74, 76, 91, 94, 97, 100], "individu": 81, "infoclass": 30, "input": [28, 58], "instal": [79, 81, 82, 83, 85, 87], "instruct": 68, "integ": [100, 102], "integr": 104, "interact": 72, "interfac": 64, "intersect": 103, "io": 31, "io_util": 32, "issu": 0, "iter": [94, 95, 97, 101, 103, 107], "join": [33, 107], "json": 65, "kernel": 82, "l": 77, "larg": 90, "launch": [79, 106], "legaci": 74, "linalg": 19, "lint": 0, "linux": 82, "list": 85, "log": 68, "logger": 34, "logic": 100, "lookup": [91, 104], "maco": 83, "makefil": 1, "manual": 81, "map": 72, "match": [35, 107], "matcher": 36, "memori": 67, "merg": 0, "metadata": 74, "method": [103, 107], "mode": [74, 76], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 52, 54, 56, 57, 58, 59, 60, 61, 62, 84], "modular": [69, 81, 84], "name": [88, 101], "new": 84, "next": [82, 83], "ngram": 103, "note": 68, "numer": [37, 93], "numpi": [38, 39, 40], "o": [77, 90, 107], "object": [72, 107], "onli": 0, "oper": [72, 93, 95, 101, 103, 105, 107], "output": 65, "outsid": 1, "overview": 87, "packag": [18, 28, 47, 51, 53, 81], "panda": [72, 104], "parquet": 76, "path": 1, "pdarrai": [72, 73, 74, 76, 100, 101], "pdarrayclass": 41, "pdarraycr": 42, "pdarraysetop": 43, "perform": [88, 103, 107], "permut": 97, "pip": 85, "plot": 44, "posit": 88, "prefix": 103, "prepend": 103, "preprocess": 90, "process": [0, 68, 84], "pull": 0, "pytest": 65, "python": [0, 1, 64, 72, 79, 82, 83, 85, 106], "python3": 0, "quickstart": 79, "random": [45, 46, 47, 96, 102], "rank": 101, "read": [65, 77, 90], "recommend": [81, 83], "reduc": [67, 88], "reduct": 93, "refer": [63, 73, 74, 75, 76, 80], "regular": [96, 107], "releas": [0, 68], "renam": 97, "report": 0, "repositori": [82, 83], "reproduc": 70, "request": 0, "requir": [85, 87], "reset": 97, "reshap": 101, "review": 0, "rhel": 82, "row": 48, "run": [0, 1, 65, 66, 84], "save": [70, 84], "scalar": 93, "scan": [88, 93], "scatter": [88, 100], "schema": 74, "scipi": [49, 50, 51, 52, 53, 54, 55], "search": 107, "secur": 56, "segarrai": [57, 74, 76, 103], "seri": [58, 104], "server": [64, 79, 81, 84, 90, 106], "set": [69, 72, 103, 105], "setop": 103, "shutdown": 79, "singl": 65, "size": 103, "slice": 100, "sort": [59, 92, 97, 104], "sourc": 83, "special": [52, 53], "specif": [85, 103, 107], "specifi": 84, "speed": 69, "split": 107, "src": 1, "standard_norm": 102, "start": 81, "startup": 106, "stat": [54, 55], "statist": 99, "step": [68, 82, 83], "stream": 88, "string": [60, 73, 74, 76, 107], "sub": 103, "submodul": [18, 28, 40, 51, 55], "subpackag": [28, 40, 51], "substr": 107, "suffix": 103, "suit": 65, "summar": 99, "support": [73, 74, 76, 77, 90], "symmetr": 103, "system": 69, "tail": [97, 104], "team": 0, "test": [0, 1, 65, 88], "timeclass": 61, "tip": 70, "troubleshoot": 81, "type": [73, 74, 76, 97, 101], "ubuntu": 82, "uniform": 102, "union": 103, "up": 69, "updat": [82, 83, 85], "us": [69, 72, 79, 81, 84, 85], "usag": [67, 89], "user": 70, "util": 62, "valu": [99, 104], "variabl": [1, 69, 81], "vector": 93, "where": 93, "window": 86, "wise": 93, "without": 73, "write": [0, 74, 76, 77], "wsl2": 86, "your": 64}})