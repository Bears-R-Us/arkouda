Search.setIndex({"alltitles": {"API Reference": [[81, null], [91, "api-reference"], [92, "api-reference"], [93, "api-reference"], [94, "api-reference"]], "Access/Set Specific Elements in Sub-Array": [[121, "access-set-specific-elements-in-sub-array"]], "Add a local external tool": [[100, "add-a-local-external-tool"]], "Adding Functionality to the Arkouda Server": [[82, "adding-functionality-to-the-arkouda-server"]], "Adding Issues": [[0, "adding-issues"]], "Adding Python Functionality (Client Interface)": [[82, "adding-python-functionality-client-interface"]], "Adding Your First Feature": [[82, null]], "Adding a Module from Outside the Arkouda src Directory": [[1, "adding-a-module-from-outside-the-arkouda-src-directory"]], "Adding new modules into the build process": [[103, "adding-new-modules-into-the-build-process"]], "All Dependencies": [[99, "all-dependencies"]], "Anaconda": [[102, "anaconda"]], "Append": [[115, "append"]], "Append & Prepend": [[121, "append-prepend"]], "ArgSort": [[110, "argsort"]], "Argsort": [[107, "argsort"]], "Arithmetic and Numeric Operations": [[112, null]], "Arkouda Arrays": [[90, "arkouda-arrays"]], "Arkouda DataFrames": [[90, "arkouda-dataframes"]], "Arkouda Documentation": [[96, null]], "Arkouda Formatted File": [[91, "arkouda-formatted-file"]], "Array Set Operations": [[123, null]], "Arrow Install Troubleshooting": [[99, "arrow-install-troubleshooting"]], "Attributes": [[5, "attributes"], [23, "attributes"], [26, "attributes"], [28, "attributes"], [38, "attributes"], [39, "attributes"], [42, "attributes"], [54, "attributes"], [55, "attributes"], [58, "attributes"], [71, "attributes"], [72, "attributes"], [74, "attributes"], [79, "attributes"], [80, "attributes"]], "Basic Interaction": [[90, "basic-interaction"]], "Benchmark Arguments": [[83, "benchmark-arguments"]], "Between client and server": [[109, "between-client-and-server"]], "Bug Reports": [[0, "bug-reports"]], "Build Arkouda": [[84, "build-arkouda"]], "Build Chapel with GASNet": [[84, "build-chapel-with-gasnet"]], "Build from Source (Recommended)": [[102, "build-from-source-recommended"]], "Build the Server": [[99, "build-the-server"]], "Building the Arkouda Documentation": [[99, "building-the-arkouda-documentation"]], "Building the Server": [[99, null]], "CSV": [[91, null]], "Categorical": [[92, "categorical"], [92, "id3"], [94, "categorical"]], "Categoricals": [[113, null]], "Change Dtype": [[110, "change-dtype"]], "Chapel": [[0, "chapel"]], "Chapel API Reference": [[98, null]], "Chapel Compiler Flags": [[1, "chapel-compiler-flags"]], "Chapel Installation": [[101, "chapel-installation"]], "Classes": [[2, "classes"], [5, "classes"], [7, "classes"], [9, "classes"], [14, "classes"], [18, "classes"], [20, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [38, "classes"], [39, "classes"], [42, "classes"], [47, "classes"], [52, "classes"], [54, "classes"], [56, "classes"], [57, "classes"], [59, "classes"], [64, "classes"], [65, "classes"], [67, "classes"], [70, "classes"], [72, "classes"], [73, "classes"], [75, "classes"], [77, "classes"], [79, "classes"], [80, "classes"]], "Clone Arkouda Repository": [[101, "clone-arkouda-repository"], [102, "clone-arkouda-repository"]], "Coding Conventions and Linting": [[0, "coding-conventions-and-linting"]], "Compilation / Makefile": [[1, "compilation-makefile"]], "Compression": [[94, "compression"]], "Concat": [[110, "concat"]], "Concatenate": [[115, "concatenate"]], "Concatenation": [[114, "concatenation"]], "Configuration for each tool": [[100, "configuration-for-each-tool"]], "Connect a Python 3 client": [[124, "connect-a-python-3-client"]], "Connect the Python 3 Client": [[97, "connect-the-python-3-client"]], "Constant": [[114, "constant"]], "Construction": [[113, "construction"]], "Contributing": [[0, null]], "Copy": [[115, "copy"]], "Core Development Team Only": [[0, "core-development-team-only"]], "Creating & Using a DataFrame": [[90, "creating-using-a-dataframe"]], "Creating Arrays": [[114, null]], "Creation": [[120, "creation"]], "Data Distribution": [[92, "data-distribution"]], "Data Formatting": [[91, "data-formatting"]], "Data I/O": [[109, null]], "Data Preprocessing": [[109, "data-preprocessing"]], "Data Schema": [[92, "data-schema"]], "Data Type": [[119, "data-type"]], "Data Types": [[115, "data-types"]], "DataFrame": [[91, "dataframe"], [92, "dataframe"], [94, "dataframe"]], "DataFrames": [[90, "dataframes"]], "DataFrames in Arkouda": [[115, null]], "Deduplication": [[115, "deduplication"], [121, "deduplication"]], "Dependencies": [[99, "dependencies"]], "Dependency Configuration": [[99, "dependency-configuration"]], "Dependency List": [[104, "dependency-list"]], "Dependency Paths": [[1, "dependency-paths"]], "Descriptive Statistics": [[117, "descriptive-statistics"]], "Developer Documentation": [[89, null]], "Developer Specific": [[104, "developer-specific"]], "Developing Arkouda": [[0, "developing-arkouda"]], "Diff the git logs": [[86, "diff-the-git-logs"]], "Distributable Package": [[99, "distributable-package"]], "Drop": [[115, "drop"]], "Element-wise Functions": [[112, "element-wise-functions"]], "Environment Configuration": [[84, "environment-configuration"]], "Environment Variables": [[1, null]], "Environment Variables to Always Set": [[87, "environment-variables-to-always-set"]], "Example": [[82, "example"], [82, "id1"]], "Example Files": [[91, "example-files"]], "Examples": [[90, null]], "Exceptions": [[3, "exceptions"], [26, "exceptions"], [42, "exceptions"], [47, "exceptions"], [59, "exceptions"], [72, "exceptions"], [79, "exceptions"]], "Export": [[93, "export"]], "Exporting pdarray Objects": [[90, "exporting-pdarray-objects"]], "Exporting to Pandas": [[90, "exporting-to-pandas"]], "External Tools": [[100, null]], "Feature Requests": [[0, "feature-requests"]], "Features": [[110, "features"], [115, "features"], [120, "features"], [122, "features"]], "File Configuration": [[92, "file-configuration"]], "File Formatting": [[91, "file-formatting"]], "File I/O": [[95, null]], "File Without Header": [[91, "file-without-header"]], "Filter": [[115, "filter"]], "Flattening": [[125, "flattening"]], "Functions": [[2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [17, "functions"], [19, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [23, "functions"], [24, "functions"], [26, "functions"], [28, "functions"], [29, "functions"], [30, "functions"], [31, "functions"], [32, "functions"], [38, "functions"], [39, "functions"], [42, "functions"], [47, "functions"], [48, "functions"], [49, "functions"], [50, "functions"], [52, "functions"], [54, "functions"], [55, "functions"], [57, "functions"], [58, "functions"], [59, "functions"], [60, "functions"], [61, "functions"], [62, "functions"], [63, "functions"], [64, "functions"], [67, "functions"], [68, "functions"], [69, "functions"], [71, "functions"], [72, "functions"], [74, "functions"], [75, "functions"], [76, "functions"], [78, "functions"], [79, "functions"], [80, "functions"]], "GASNet Development": [[84, null]], "Gather": [[107, "gather"]], "Gather/Scatter (pdarray)": [[118, "gather-scatter-pdarray"]], "General I/O API": [[95, "general-i-o-api"]], "Generating release notes": [[86, "generating-release-notes"]], "Getting Started": [[99, "getting-started"]], "GroupBy": [[90, "groupby"], [92, "groupby"], [92, "id5"], [115, "groupby"], [116, null]], "HDF5": [[92, null]], "Head/Tail": [[122, "head-tail"]], "Histogram": [[117, "histogram"]], "Homebrew": [[102, "homebrew"]], "I/O": [[125, "i-o"]], "Import": [[93, "import"]], "Import/Export": [[93, null], [109, "import-export"]], "Import/Export Support": [[95, "import-export-support"]], "Importing Pandas DataFrame": [[90, "importing-pandas-dataframe"]], "Index": [[91, "index"], [92, "index"], [94, "index"]], "Indexing and Assignment": [[118, null]], "Indexs in Arkouda": [[110, null]], "Individual Installs": [[99, "individual-installs"]], "Install Arkouda": [[97, "install-arkouda"]], "Install Chapel": [[102, "install-chapel"]], "Install Chapel (RHEL)": [[101, "install-chapel-rhel"]], "Install Chapel (Ubuntu)": [[101, "install-chapel-ubuntu"]], "Install Dependencies": [[97, "install-dependencies"]], "Install Guides": [[106, "install-guides"]], "Installation": [[106, null]], "Installing Dependencies Manually": [[99, "installing-dependencies-manually"]], "Installing/Updating Python Dependencies": [[104, "installing-updating-python-dependencies"]], "Integer": [[118, "integer"]], "Integer pdarray index": [[118, "integer-pdarray-index"]], "Intersect": [[121, "intersect"]], "Iteration": [[113, "iteration"], [115, "iteration"], [119, "iteration"], [121, "iteration"], [125, "iteration"]], "Large Datasets": [[109, "large-datasets"]], "Launch arkouda server": [[124, "launch-arkouda-server"]], "Launching the Server": [[97, "launching-the-server"]], "Legacy File Support": [[92, "legacy-file-support"]], "Linux": [[101, null]], "Logical indexing": [[118, "logical-indexing"]], "Lookup": [[110, "lookup"], [122, "lookup"], [122, "id1"]], "MacOS": [[102, null]], "Match Object": [[125, "match-object"]], "Merging Pull Requests": [[0, "merging-pull-requests"]], "MetaData Attributes": [[92, "metadata-attributes"]], "Modular Building": [[99, "modular-building"]], "Modular Server Builds": [[103, null]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [24, "module-contents"], [25, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [38, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [63, "module-contents"], [65, "module-contents"], [67, "module-contents"], [68, "module-contents"], [69, "module-contents"], [70, "module-contents"], [71, "module-contents"], [73, "module-contents"]], "NGrams": [[121, "ngrams"]], "Name": [[119, "name"]], "Named Arguments": [[107, "named-arguments"], [107, "named-arguments"], [107, "named-arguments"], [107, "named-arguments"], [107, "named-arguments"], [107, "named-arguments"]], "Next Steps": [[100, "next-steps"], [101, "next-steps"], [102, "next-steps"]], "Operation": [[121, "operation"]], "Operations": [[113, "operations"], [125, "operations"]], "Operators": [[119, "operators"]], "Overview": [[106, "overview"]], "Package Contents": [[9, "package-contents"], [23, "package-contents"], [26, "package-contents"], [39, "package-contents"], [42, "package-contents"], [52, "package-contents"], [59, "package-contents"], [60, "package-contents"], [61, "package-contents"], [62, "package-contents"], [64, "package-contents"], [72, "package-contents"], [74, "package-contents"], [75, "package-contents"], [76, "package-contents"], [77, "package-contents"], [78, "package-contents"], [79, "package-contents"], [80, "package-contents"]], "Pandas Integration": [[122, "pandas-integration"]], "Parquet": [[94, null]], "Performance": [[121, "performance"], [125, "performance"]], "Performance Testing": [[107, null]], "Permutations": [[115, "permutations"]], "Positional Arguments": [[107, "positional-arguments"], [107, "positional-arguments"], [107, "positional-arguments"], [107, "positional-arguments"], [107, "positional-arguments"], [107, "positional-arguments"]], "Prefix & Suffix": [[121, "prefix-suffix"]], "PyCharm External Tools": [[100, "pycharm-external-tools"]], "PyTest Benchmarks": [[83, null]], "Python Client": [[1, "python-client"]], "Python Dependencies": [[104, "python-dependencies"]], "Python Environment - Anaconda": [[102, "python-environment-anaconda"]], "Python Environment - Anaconda (Linux)": [[101, "python-environment-anaconda-linux"]], "Python Mapping": [[90, "python-mapping"]], "Python3": [[0, "python3"]], "Quickstart": [[97, null]], "Random": [[114, "random"]], "Random in Arkouda": [[120, null]], "Rank": [[119, "rank"]], "Read": [[95, "read"]], "Reading data from disk": [[109, "reading-data-from-disk"]], "Reading the JSON Output": [[83, "reading-the-json-output"]], "Reduce": [[107, "reduce"]], "Reducing Memory Usage of Arkouda Builds": [[85, null]], "Reductions": [[112, "reductions"]], "Regular": [[114, "regular"]], "Regular Expressions": [[125, "regular-expressions"]], "Release Process": [[0, "release-process"], [86, null]], "Rename Columns": [[115, "rename-columns"]], "Reproducing User Bugs Efficiently": [[88, "reproducing-user-bugs-efficiently"]], "Requirements": [[104, null], [106, "requirements"]], "Reset Indexes": [[115, "reset-indexes"]], "Reshape": [[119, "reshape"]], "Reviewing Pull Requests": [[0, "reviewing-pull-requests"]], "Run Arkouda": [[84, "run-arkouda"]], "Running": [[1, "running"]], "Running Single Files or Tests": [[83, "running-single-files-or-tests"]], "Running The Full Suite": [[83, "running-the-full-suite"]], "Running chapel tests": [[0, "running-chapel-tests"]], "Running python tests": [[0, "running-python-tests"]], "Running the external tools": [[100, "running-the-external-tools"]], "Saving Full Builds": [[88, "saving-full-builds"]], "Saving modules used in an Arkouda server run": [[103, "saving-modules-used-in-an-arkouda-server-run"]], "Scan": [[107, "scan"]], "Scans": [[112, "scans"]], "Scatter": [[107, "scatter"]], "SegArray": [[92, "segarray"], [92, "id4"], [94, "segarray"]], "SegArray SetOps": [[121, "segarray-setops"]], "SegArray Specific Methods": [[121, "segarray-specific-methods"]], "SegArrays in Arkouda": [[121, null]], "Series in Arkouda": [[122, null]], "Set Difference": [[121, "set-difference"]], "Shutdown/Disconnect": [[97, "shutdown-disconnect"]], "Slice": [[118, "slice"]], "Sorting": [[111, null], [115, "sorting"], [122, "sorting"]], "Specifying a custom configuration file": [[103, "specifying-a-custom-configuration-file"]], "Speeding up Arkouda Compilation": [[87, null]], "Splitting and joining": [[125, "splitting-and-joining"]], "Startup": [[124, null]], "Step-by-step instructions": [[86, "step-by-step-instructions"]], "Stream": [[107, "stream"]], "String-Specific Methods": [[125, "string-specific-methods"]], "Strings": [[91, "strings"], [92, "strings"], [92, "id2"], [94, "strings"]], "Strings in Arkouda": [[125, null]], "Sub-array of Size": [[121, "sub-array-of-size"]], "Submodules": [[9, "submodules"], [26, "submodules"], [39, "submodules"], [42, "submodules"], [44, "submodules"], [66, "submodules"]], "Substring search": [[125, "substring-search"]], "Summarizing Data": [[117, null]], "Support Arkouda Data Types": [[91, "support-arkouda-data-types"]], "Supported Arkouda Data Types": [[92, "supported-arkouda-data-types"], [94, "supported-arkouda-data-types"]], "Supported File Formats": [[109, "supported-file-formats"]], "Supported File Formats:": [[95, null]], "Supported Write Modes": [[92, "supported-write-modes"], [94, "supported-write-modes"]], "Symmetric Difference": [[121, "symmetric-difference"]], "Tail/Head of Data": [[115, "tail-head-of-data"]], "Testing": [[0, "testing"], [1, "testing"]], "The pdarray class": [[119, null]], "Tips for Reproducing User Bugs": [[88, null]], "Type Casting": [[119, "type-casting"]], "Union": [[121, "union"]], "Updating Environment": [[102, "updating-environment"]], "Usage Guide": [[108, null]], "Using Anaconda": [[104, "using-anaconda"]], "Using Arkouda": [[97, "using-arkouda"]], "Using Environment Installed Dependencies (Recommended)": [[99, "using-environment-installed-dependencies-recommended"]], "Using Pip": [[100, "using-pip"], [104, "using-pip"]], "Using conda": [[99, "using-conda"]], "Using pip": [[99, "using-pip"]], "Using the Modular Build System": [[87, "using-the-modular-build-system"]], "VSCode Chapel Language Syntax Highlighter": [[100, "vscode-chapel-language-syntax-highlighter"]], "Value Counts": [[117, "value-counts"], [122, "value-counts"]], "Vector and Scalar Arithmetic": [[112, "vector-and-scalar-arithmetic"]], "Where": [[112, "where"]], "Windows (WSL2)": [[105, null]], "Write": [[95, "write"]], "Writing Pull Requests": [[0, "writing-pull-requests"]], "arkouda": [[26, null]], "arkouda.accessor": [[2, null]], "arkouda.alignment": [[3, null]], "arkouda.apply": [[4, null]], "arkouda.array_api": [[9, null]], "arkouda.array_api.array_object": [[5, null]], "arkouda.array_api.creation_functions": [[6, null]], "arkouda.array_api.data_type_functions": [[7, null]], "arkouda.array_api.elementwise_functions": [[8, null]], "arkouda.array_api.indexing_functions": [[10, null]], "arkouda.array_api.linalg": [[11, null]], "arkouda.array_api.manipulation_functions": [[12, null]], "arkouda.array_api.searching_functions": [[13, null]], "arkouda.array_api.set_functions": [[14, null]], "arkouda.array_api.sorting_functions": [[15, null]], "arkouda.array_api.statistical_functions": [[16, null]], "arkouda.array_api.utility_functions": [[17, null]], "arkouda.categorical": [[18, null]], "arkouda.client": [[19, null]], "arkouda.client_dtypes": [[20, null]], "arkouda.comm_diagnostics": [[21, null]], "arkouda.dataframe": [[22, null]], "arkouda.dtypes": [[23, null]], "arkouda.groupbyclass": [[24, null]], "arkouda.history": [[25, null]], "arkouda.index": [[27, null]], "arkouda.infoclass": [[28, null]], "arkouda.io": [[29, null]], "arkouda.io_util": [[30, null]], "arkouda.join": [[31, null]], "arkouda.logger": [[32, null]], "arkouda.match": [[33, null]], "arkouda.matcher": [[34, null]], "arkouda.numeric": [[35, null]], "arkouda.numpy": [[42, null]], "arkouda.numpy.char": [[36, null]], "arkouda.numpy.ctypeslib": [[37, null]], "arkouda.numpy.dtypes": [[39, null]], "arkouda.numpy.dtypes.dtypes": [[38, null]], "arkouda.numpy.exceptions": [[40, null]], "arkouda.numpy.fft": [[41, null]], "arkouda.numpy.lib": [[44, null]], "arkouda.numpy.lib.emath": [[43, null]], "arkouda.numpy.linalg": [[45, null]], "arkouda.numpy.ma": [[46, null]], "arkouda.numpy.pdarrayclass": [[47, null]], "arkouda.numpy.pdarraycreation": [[48, null]], "arkouda.numpy.pdarraymanipulation": [[49, null]], "arkouda.numpy.pdarraysetops": [[50, null]], "arkouda.numpy.polynomial": [[51, null]], "arkouda.numpy.random": [[52, null]], "arkouda.numpy.rec": [[53, null]], "arkouda.numpy.segarray": [[54, null]], "arkouda.numpy.sorting": [[55, null]], "arkouda.numpy.strings": [[56, null]], "arkouda.numpy.timeclass": [[57, null]], "arkouda.numpy.util": [[58, null]], "arkouda.pdarrayclass": [[59, null]], "arkouda.pdarraycreation": [[60, null]], "arkouda.pdarraymanipulation": [[61, null]], "arkouda.pdarraysetops": [[62, null]], "arkouda.plotting": [[63, null]], "arkouda.random": [[64, null]], "arkouda.row": [[65, null]], "arkouda.scipy": [[66, null]], "arkouda.scipy.sparrayclass": [[67, null]], "arkouda.scipy.sparsematrix": [[68, null]], "arkouda.scipy.special": [[69, null]], "arkouda.scipy.stats": [[70, null]], "arkouda.security": [[71, null]], "arkouda.segarray": [[72, null]], "arkouda.series": [[73, null]], "arkouda.sorting": [[74, null]], "arkouda.sparrayclass": [[75, null]], "arkouda.sparsematrix": [[76, null]], "arkouda.strings": [[77, null]], "arkouda.testing": [[78, null]], "arkouda.timeclass": [[79, null]], "arkouda.util": [[80, null]], "black": [[100, "black"]], "choice": [[120, "choice"]], "exponential": [[120, "exponential"]], "flake8": [[100, "flake8"]], "installing the chapel-py dependency": [[99, "installing-the-chapel-py-dependency"]], "installing the chapel-py dependency manually": [[99, "installing-the-chapel-py-dependency-manually"]], "integers": [[120, "integers"]], "isort": [[100, "isort"]], "logistic": [[120, "logistic"]], "lognormal": [[120, "lognormal"]], "ls Functionality": [[95, "ls-functionality"]], "normal": [[120, "normal"]], "pdarray": [[91, "pdarray"], [92, "pdarray"], [92, "id1"], [94, "pdarray"]], "pdarray Creation": [[90, "pdarray-creation"]], "pdarray Set operations": [[90, "pdarray-set-operations"]], "pdarrays": [[90, "pdarrays"]], "permutation": [[120, "permutation"]], "poisson": [[120, "poisson"]], "random": [[120, "random"]], "shuffle": [[120, "shuffle"]], "standard_exponential": [[120, "standard-exponential"]], "standard_normal": [[120, "standard-normal"]], "uniform": [[120, "uniform"]]}, "docnames": ["CONTRIBUTING_LINK", "ENVIRONMENT", "autoapi/arkouda/accessor/index", "autoapi/arkouda/alignment/index", "autoapi/arkouda/apply/index", "autoapi/arkouda/array_api/array_object/index", "autoapi/arkouda/array_api/creation_functions/index", "autoapi/arkouda/array_api/data_type_functions/index", "autoapi/arkouda/array_api/elementwise_functions/index", "autoapi/arkouda/array_api/index", "autoapi/arkouda/array_api/indexing_functions/index", "autoapi/arkouda/array_api/linalg/index", "autoapi/arkouda/array_api/manipulation_functions/index", "autoapi/arkouda/array_api/searching_functions/index", "autoapi/arkouda/array_api/set_functions/index", "autoapi/arkouda/array_api/sorting_functions/index", "autoapi/arkouda/array_api/statistical_functions/index", "autoapi/arkouda/array_api/utility_functions/index", "autoapi/arkouda/categorical/index", "autoapi/arkouda/client/index", "autoapi/arkouda/client_dtypes/index", "autoapi/arkouda/comm_diagnostics/index", "autoapi/arkouda/dataframe/index", "autoapi/arkouda/dtypes/index", "autoapi/arkouda/groupbyclass/index", "autoapi/arkouda/history/index", "autoapi/arkouda/index", "autoapi/arkouda/index/index", "autoapi/arkouda/infoclass/index", "autoapi/arkouda/io/index", "autoapi/arkouda/io_util/index", "autoapi/arkouda/join/index", "autoapi/arkouda/logger/index", "autoapi/arkouda/match/index", "autoapi/arkouda/matcher/index", "autoapi/arkouda/numeric/index", "autoapi/arkouda/numpy/char/index", "autoapi/arkouda/numpy/ctypeslib/index", "autoapi/arkouda/numpy/dtypes/dtypes/index", "autoapi/arkouda/numpy/dtypes/index", "autoapi/arkouda/numpy/exceptions/index", "autoapi/arkouda/numpy/fft/index", "autoapi/arkouda/numpy/index", "autoapi/arkouda/numpy/lib/emath/index", "autoapi/arkouda/numpy/lib/index", "autoapi/arkouda/numpy/linalg/index", "autoapi/arkouda/numpy/ma/index", "autoapi/arkouda/numpy/pdarrayclass/index", "autoapi/arkouda/numpy/pdarraycreation/index", "autoapi/arkouda/numpy/pdarraymanipulation/index", "autoapi/arkouda/numpy/pdarraysetops/index", "autoapi/arkouda/numpy/polynomial/index", "autoapi/arkouda/numpy/random/index", "autoapi/arkouda/numpy/rec/index", "autoapi/arkouda/numpy/segarray/index", "autoapi/arkouda/numpy/sorting/index", "autoapi/arkouda/numpy/strings/index", "autoapi/arkouda/numpy/timeclass/index", "autoapi/arkouda/numpy/util/index", "autoapi/arkouda/pdarrayclass/index", "autoapi/arkouda/pdarraycreation/index", "autoapi/arkouda/pdarraymanipulation/index", "autoapi/arkouda/pdarraysetops/index", "autoapi/arkouda/plotting/index", "autoapi/arkouda/random/index", "autoapi/arkouda/row/index", "autoapi/arkouda/scipy/index", "autoapi/arkouda/scipy/sparrayclass/index", "autoapi/arkouda/scipy/sparsematrix/index", "autoapi/arkouda/scipy/special/index", "autoapi/arkouda/scipy/stats/index", "autoapi/arkouda/security/index", "autoapi/arkouda/segarray/index", "autoapi/arkouda/series/index", "autoapi/arkouda/sorting/index", "autoapi/arkouda/sparrayclass/index", "autoapi/arkouda/sparsematrix/index", "autoapi/arkouda/strings/index", "autoapi/arkouda/testing/index", "autoapi/arkouda/timeclass/index", "autoapi/arkouda/util/index", "autoapi/index", "developer/ADDING_FEATURES", "developer/BENCHMARK", "developer/GASNET", "developer/MEMORY", "developer/RELEASE_PROCESS", "developer/TIPS", "developer/USER_BUGS", "developer/dev_menu", "examples", "file_io/CSV", "file_io/HDF5", "file_io/IMPORT_EXPORT", "file_io/PARQUET", "file_io/io_menu", "index", "quickstart", "server/index", "setup/BUILD", "setup/EXTERNAL_TOOLS", "setup/LINUX_INSTALL", "setup/MAC_INSTALL", "setup/MODULAR", "setup/REQUIREMENTS", "setup/WINDOWS_INSTALL", "setup/install_menu", "setup/testing", "usage", "usage/IO", "usage/Index", "usage/argsort", "usage/arithmetic", "usage/categorical", "usage/creation", "usage/dataframe", "usage/groupby", "usage/histogram", "usage/indexing", "usage/pdarray", "usage/random", "usage/segarray", "usage/series", "usage/setops", "usage/startup", "usage/strings"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["CONTRIBUTING_LINK.md", "ENVIRONMENT.md", "autoapi/arkouda/accessor/index.rst", "autoapi/arkouda/alignment/index.rst", "autoapi/arkouda/apply/index.rst", "autoapi/arkouda/array_api/array_object/index.rst", "autoapi/arkouda/array_api/creation_functions/index.rst", "autoapi/arkouda/array_api/data_type_functions/index.rst", "autoapi/arkouda/array_api/elementwise_functions/index.rst", "autoapi/arkouda/array_api/index.rst", "autoapi/arkouda/array_api/indexing_functions/index.rst", "autoapi/arkouda/array_api/linalg/index.rst", "autoapi/arkouda/array_api/manipulation_functions/index.rst", "autoapi/arkouda/array_api/searching_functions/index.rst", "autoapi/arkouda/array_api/set_functions/index.rst", "autoapi/arkouda/array_api/sorting_functions/index.rst", "autoapi/arkouda/array_api/statistical_functions/index.rst", "autoapi/arkouda/array_api/utility_functions/index.rst", "autoapi/arkouda/categorical/index.rst", "autoapi/arkouda/client/index.rst", "autoapi/arkouda/client_dtypes/index.rst", "autoapi/arkouda/comm_diagnostics/index.rst", "autoapi/arkouda/dataframe/index.rst", "autoapi/arkouda/dtypes/index.rst", "autoapi/arkouda/groupbyclass/index.rst", "autoapi/arkouda/history/index.rst", "autoapi/arkouda/index.rst", "autoapi/arkouda/index/index.rst", "autoapi/arkouda/infoclass/index.rst", "autoapi/arkouda/io/index.rst", "autoapi/arkouda/io_util/index.rst", "autoapi/arkouda/join/index.rst", "autoapi/arkouda/logger/index.rst", "autoapi/arkouda/match/index.rst", "autoapi/arkouda/matcher/index.rst", "autoapi/arkouda/numeric/index.rst", "autoapi/arkouda/numpy/char/index.rst", "autoapi/arkouda/numpy/ctypeslib/index.rst", "autoapi/arkouda/numpy/dtypes/dtypes/index.rst", "autoapi/arkouda/numpy/dtypes/index.rst", "autoapi/arkouda/numpy/exceptions/index.rst", "autoapi/arkouda/numpy/fft/index.rst", "autoapi/arkouda/numpy/index.rst", "autoapi/arkouda/numpy/lib/emath/index.rst", "autoapi/arkouda/numpy/lib/index.rst", "autoapi/arkouda/numpy/linalg/index.rst", "autoapi/arkouda/numpy/ma/index.rst", "autoapi/arkouda/numpy/pdarrayclass/index.rst", "autoapi/arkouda/numpy/pdarraycreation/index.rst", "autoapi/arkouda/numpy/pdarraymanipulation/index.rst", "autoapi/arkouda/numpy/pdarraysetops/index.rst", "autoapi/arkouda/numpy/polynomial/index.rst", "autoapi/arkouda/numpy/random/index.rst", "autoapi/arkouda/numpy/rec/index.rst", "autoapi/arkouda/numpy/segarray/index.rst", "autoapi/arkouda/numpy/sorting/index.rst", "autoapi/arkouda/numpy/strings/index.rst", "autoapi/arkouda/numpy/timeclass/index.rst", "autoapi/arkouda/numpy/util/index.rst", "autoapi/arkouda/pdarrayclass/index.rst", "autoapi/arkouda/pdarraycreation/index.rst", "autoapi/arkouda/pdarraymanipulation/index.rst", "autoapi/arkouda/pdarraysetops/index.rst", "autoapi/arkouda/plotting/index.rst", "autoapi/arkouda/random/index.rst", "autoapi/arkouda/row/index.rst", "autoapi/arkouda/scipy/index.rst", "autoapi/arkouda/scipy/sparrayclass/index.rst", "autoapi/arkouda/scipy/sparsematrix/index.rst", "autoapi/arkouda/scipy/special/index.rst", "autoapi/arkouda/scipy/stats/index.rst", "autoapi/arkouda/security/index.rst", "autoapi/arkouda/segarray/index.rst", "autoapi/arkouda/series/index.rst", "autoapi/arkouda/sorting/index.rst", "autoapi/arkouda/sparrayclass/index.rst", "autoapi/arkouda/sparsematrix/index.rst", "autoapi/arkouda/strings/index.rst", "autoapi/arkouda/testing/index.rst", "autoapi/arkouda/timeclass/index.rst", "autoapi/arkouda/util/index.rst", "autoapi/index.rst", "developer/ADDING_FEATURES.md", "developer/BENCHMARK.md", "developer/GASNET.md", "developer/MEMORY.md", "developer/RELEASE_PROCESS.md", "developer/TIPS.md", "developer/USER_BUGS.md", "developer/dev_menu.rst", "examples.rst", "file_io/CSV.md", "file_io/HDF5.md", "file_io/IMPORT_EXPORT.md", "file_io/PARQUET.md", "file_io/io_menu.rst", "index.rst", "quickstart.rst", "server/index.rst", "setup/BUILD.md", "setup/EXTERNAL_TOOLS.md", "setup/LINUX_INSTALL.md", "setup/MAC_INSTALL.md", "setup/MODULAR.md", "setup/REQUIREMENTS.md", "setup/WINDOWS_INSTALL.md", "setup/install_menu.rst", "setup/testing.rst", "usage.rst", "usage/IO.rst", "usage/Index.rst", "usage/argsort.rst", "usage/arithmetic.rst", "usage/categorical.rst", "usage/creation.rst", "usage/dataframe.rst", "usage/groupby.rst", "usage/histogram.rst", "usage/indexing.rst", "usage/pdarray.rst", "usage/random.rst", "usage/segarray.rst", "usage/series.rst", "usage/setops.rst", "usage/startup.rst", "usage/strings.rst"], "indexentries": {"a() (arkouda.scipy.stats.chi2 method)": [[70, "arkouda.scipy.stats.chi2.a", false]], "abs() (arkouda.numpy.timeclass.timedelta method)": [[57, "arkouda.numpy.timeclass.Timedelta.abs", false]], "abs() (arkouda.numpy.timedelta method)": [[42, "arkouda.numpy.Timedelta.abs", false]], "abs() (arkouda.timeclass.timedelta method)": [[79, "arkouda.timeclass.Timedelta.abs", false]], "abs() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.abs", false], [26, "id471", false]], "abs() (arkouda.util.timedelta method)": [[80, "arkouda.util.Timedelta.abs", false]], "abs() (in module arkouda)": [[112, "arkouda.abs", false]], "abs() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.abs", false]], "acos() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.acos", false]], "acosh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.acosh", false]], "add() (arkouda.series method)": [[26, "arkouda.Series.add", false]], "add() (arkouda.series.series method)": [[73, "arkouda.series.Series.add", false]], "add() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.add", false]], "aggregate() (arkouda.groupby method)": [[26, "arkouda.GroupBy.aggregate", false], [26, "id138", false], [26, "id185", false], [26, "id232", false], [26, "id279", false], [116, "arkouda.GroupBy.aggregate", false]], "aggregate() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.aggregate", false]], "aggregate() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.aggregate", false]], "aggregate() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.aggregate", false]], "aggregate() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.aggregate", false]], "aggregate() (arkouda.segarray method)": [[26, "arkouda.SegArray.aggregate", false]], "aggregate() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.aggregate", false]], "aggregate() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.aggregate", false]], "aggregate() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.aggregate", false]], "aggregate() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.aggregate", false]], "ak_array() (in module arkouda)": [[26, "arkouda.ak_array", false]], "ak_array() (in module arkouda.numpy)": [[42, "arkouda.numpy.ak_array", false]], "akcast() (in module arkouda)": [[26, "arkouda.akcast", false]], "align() (in module arkouda.alignment)": [[3, "arkouda.alignment.align", false]], "all() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.all", false], [26, "id4", false]], "all() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.all", false]], "all() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.all", false]], "all() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.all", false]], "all() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.all", false]], "all() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.all", false]], "all() (arkouda.groupby method)": [[26, "arkouda.GroupBy.all", false], [26, "id139", false], [26, "id186", false], [26, "id233", false], [26, "id280", false], [116, "arkouda.GroupBy.all", false]], "all() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.all", false]], "all() (arkouda.ndarray method)": [[26, "arkouda.ndarray.all", false]], "all() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.all", false]], "all() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.all", false]], "all() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.all", false], [42, "id280", false], [42, "id343", false], [42, "id411", false], [42, "id480", false]], "all() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.all", false]], "all() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.all", false]], "all() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.all", false]], "all() (arkouda.pdarray method)": [[26, "arkouda.pdarray.all", false], [26, "id542", false], [26, "id610", false], [117, "arkouda.pdarray.all", false]], "all() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.all", false]], "all() (arkouda.segarray method)": [[26, "arkouda.SegArray.all", false]], "all() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.all", false]], "all() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.all", false]], "all() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.all", false]], "all() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.all", false]], "all() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.all", false]], "all() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.all", false]], "all() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.all", false]], "all() (in module arkouda)": [[112, "arkouda.all", false]], "all() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.all", false]], "all_scalars (class in arkouda.numpy)": [[42, "id232", false]], "all_scalars (in module arkouda)": [[26, "arkouda.all_scalars", false]], "all_scalars (in module arkouda.dtypes)": [[23, "arkouda.dtypes.all_scalars", false]], "all_scalars (in module arkouda.numpy)": [[42, "arkouda.numpy.all_scalars", false]], "all_scalars (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.all_scalars", false]], "all_scalars (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.all_scalars", false]], "allsymbols (in module arkouda)": [[26, "arkouda.AllSymbols", false]], "allsymbols (in module arkouda.infoclass)": [[28, "arkouda.infoclass.AllSymbols", false]], "and() (arkouda.groupby method)": [[26, "arkouda.GroupBy.AND", false], [26, "id134", false], [26, "id181", false], [26, "id228", false], [26, "id275", false], [116, "arkouda.GroupBy.AND", false]], "and() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.AND", false]], "and() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.AND", false]], "and() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.AND", false]], "and() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.AND", false]], "and() (arkouda.segarray method)": [[26, "arkouda.SegArray.AND", false]], "and() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.AND", false]], "and() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.AND", false]], "and() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.AND", false]], "and() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.AND", false]], "any() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.any", false], [26, "id5", false]], "any() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.any", false]], "any() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.any", false]], "any() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.any", false]], "any() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.any", false]], "any() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.any", false]], "any() (arkouda.groupby method)": [[26, "arkouda.GroupBy.any", false], [26, "id140", false], [26, "id187", false], [26, "id234", false], [26, "id281", false], [116, "arkouda.GroupBy.any", false]], "any() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.any", false]], "any() (arkouda.ndarray method)": [[26, "arkouda.ndarray.any", false]], "any() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.any", false]], "any() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.any", false]], "any() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.any", false], [42, "id281", false], [42, "id344", false], [42, "id412", false], [42, "id481", false]], "any() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.any", false]], "any() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.any", false]], "any() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.any", false]], "any() (arkouda.pdarray method)": [[26, "arkouda.pdarray.any", false], [26, "id543", false], [26, "id611", false], [117, "arkouda.pdarray.any", false]], "any() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.any", false]], "any() (arkouda.segarray method)": [[26, "arkouda.SegArray.any", false]], "any() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.any", false]], "any() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.any", false]], "any() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.any", false]], "any() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.any", false]], "any() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.any", false]], "any() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.any", false]], "any() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.any", false]], "any() (in module arkouda)": [[112, "arkouda.any", false]], "any() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.any", false]], "append() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.append", false], [26, "id6", false]], "append() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.append", false]], "append() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.append", false]], "append() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.append", false]], "append() (arkouda.segarray method)": [[26, "arkouda.SegArray.append", false]], "append() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.append", false]], "append() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.append", false]], "append_single() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.append_single", false]], "append_single() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.append_single", false]], "append_single() (arkouda.segarray method)": [[26, "arkouda.SegArray.append_single", false]], "append_single() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.append_single", false]], "append_single() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.append_single", false]], "apply() (in module arkouda)": [[26, "arkouda.apply", false]], "apply() (in module arkouda.apply)": [[4, "arkouda.apply.apply", false]], "apply_permutation() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.apply_permutation", false], [26, "id7", false]], "apply_permutation() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.apply_permutation", false]], "apply_permutation() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.apply_permutation", false]], "arange() (in module arkouda)": [[26, "arkouda.arange", false], [26, "id492", false], [26, "id493", false], [26, "id494", false], [114, "arkouda.arange", false]], "arange() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.arange", false]], "arange() (in module arkouda.numpy)": [[42, "arkouda.numpy.arange", false], [42, "id233", false]], "arange() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.arange", false]], "arange() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.arange", false]], "arange() (in module arkouda.segarray)": [[72, "arkouda.segarray.arange", false]], "arange() (in module arkouda.util)": [[80, "arkouda.util.arange", false]], "argmax() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.argmax", false]], "argmax() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.argmax", false]], "argmax() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.argmax", false]], "argmax() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.argmax", false]], "argmax() (arkouda.groupby method)": [[26, "arkouda.GroupBy.argmax", false], [26, "id141", false], [26, "id188", false], [26, "id235", false], [26, "id282", false], [116, "arkouda.GroupBy.argmax", false]], "argmax() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.argmax", false]], "argmax() (arkouda.ndarray method)": [[26, "arkouda.ndarray.argmax", false]], "argmax() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.argmax", false]], "argmax() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.argmax", false]], "argmax() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.argmax", false], [42, "id282", false], [42, "id345", false], [42, "id413", false], [42, "id482", false]], "argmax() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.argmax", false]], "argmax() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.argmax", false]], "argmax() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.argmax", false]], "argmax() (arkouda.pdarray method)": [[26, "arkouda.pdarray.argmax", false], [26, "id544", false], [26, "id612", false], [117, "arkouda.pdarray.argmax", false]], "argmax() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.argmax", false]], "argmax() (arkouda.segarray method)": [[26, "arkouda.SegArray.argmax", false]], "argmax() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.argmax", false]], "argmax() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.argmax", false]], "argmax() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.argmax", false]], "argmax() (arkouda.series method)": [[26, "arkouda.Series.argmax", false]], "argmax() (arkouda.series.series method)": [[73, "arkouda.series.Series.argmax", false]], "argmax() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.argmax", false]], "argmax() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.argmax", false]], "argmax() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.argmax", false]], "argmax() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.argmax", false]], "argmax() (in module arkouda)": [[112, "arkouda.argmax", false]], "argmax() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.argmax", false]], "argmaxk() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.argmaxk", false], [42, "id283", false], [42, "id346", false], [42, "id414", false], [42, "id483", false]], "argmaxk() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.argmaxk", false]], "argmaxk() (arkouda.pdarray method)": [[26, "arkouda.pdarray.argmaxk", false], [26, "id545", false], [26, "id613", false], [117, "arkouda.pdarray.argmaxk", false]], "argmaxk() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.argmaxk", false]], "argmaxk() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.argmaxk", false]], "argmaxk() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.argmaxk", false]], "argmaxk() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.argmaxk", false]], "argmaxk() (in module arkouda)": [[26, "arkouda.argmaxk", false], [112, "arkouda.argmaxk", false]], "argmaxk() (in module arkouda.numpy)": [[42, "arkouda.numpy.argmaxk", false]], "argmaxk() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.argmaxk", false]], "argmaxk() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.argmaxk", false]], "argmin() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.argmin", false]], "argmin() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.argmin", false]], "argmin() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.argmin", false]], "argmin() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.argmin", false]], "argmin() (arkouda.groupby method)": [[26, "arkouda.GroupBy.argmin", false], [26, "id142", false], [26, "id189", false], [26, "id236", false], [26, "id283", false], [116, "arkouda.GroupBy.argmin", false]], "argmin() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.argmin", false]], "argmin() (arkouda.ndarray method)": [[26, "arkouda.ndarray.argmin", false]], "argmin() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.argmin", false]], "argmin() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.argmin", false]], "argmin() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.argmin", false], [42, "id284", false], [42, "id347", false], [42, "id415", false], [42, "id484", false]], "argmin() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.argmin", false]], "argmin() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.argmin", false]], "argmin() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.argmin", false]], "argmin() (arkouda.pdarray method)": [[26, "arkouda.pdarray.argmin", false], [26, "id546", false], [26, "id614", false], [117, "arkouda.pdarray.argmin", false]], "argmin() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.argmin", false]], "argmin() (arkouda.segarray method)": [[26, "arkouda.SegArray.argmin", false]], "argmin() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.argmin", false]], "argmin() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.argmin", false]], "argmin() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.argmin", false]], "argmin() (arkouda.series method)": [[26, "arkouda.Series.argmin", false]], "argmin() (arkouda.series.series method)": [[73, "arkouda.series.Series.argmin", false]], "argmin() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.argmin", false]], "argmin() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.argmin", false]], "argmin() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.argmin", false]], "argmin() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.argmin", false]], "argmin() (in module arkouda)": [[112, "arkouda.argmin", false]], "argmin() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.argmin", false]], "argmink() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.argmink", false], [42, "id285", false], [42, "id348", false], [42, "id416", false], [42, "id485", false]], "argmink() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.argmink", false]], "argmink() (arkouda.pdarray method)": [[26, "arkouda.pdarray.argmink", false], [26, "id547", false], [26, "id615", false], [117, "arkouda.pdarray.argmink", false]], "argmink() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.argmink", false]], "argmink() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.argmink", false]], "argmink() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.argmink", false]], "argmink() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.argmink", false]], "argmink() (in module arkouda)": [[26, "arkouda.argmink", false], [112, "arkouda.argmink", false]], "argmink() (in module arkouda.numpy)": [[42, "arkouda.numpy.argmink", false]], "argmink() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.argmink", false]], "argmink() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.argmink", false]], "argpartition() (arkouda.ndarray method)": [[26, "arkouda.ndarray.argpartition", false]], "argpartition() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.argpartition", false]], "argsort() (arkouda.categorical method)": [[26, "arkouda.Categorical.argsort", false]], "argsort() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.argsort", false]], "argsort() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.argsort", false], [26, "id8", false]], "argsort() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.argsort", false]], "argsort() (arkouda.index method)": [[26, "arkouda.Index.argsort", false]], "argsort() (arkouda.index.index method)": [[27, "arkouda.index.Index.argsort", false]], "argsort() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.argsort", false]], "argsort() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.argsort", false]], "argsort() (arkouda.ndarray method)": [[26, "arkouda.ndarray.argsort", false]], "argsort() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.argsort", false]], "argsort() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.argsort", false]], "argsort() (in module arkouda)": [[26, "arkouda.argsort", false], [26, "id495", false], [111, "arkouda.argsort", false]], "argsort() (in module arkouda.array_api.sorting_functions)": [[15, "arkouda.array_api.sorting_functions.argsort", false]], "argsort() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.argsort", false]], "argsort() (in module arkouda.index)": [[110, "arkouda.Index.argsort", false]], "argsort() (in module arkouda.multiindex)": [[110, "arkouda.MultiIndex.argsort", false]], "argsort() (in module arkouda.numpy)": [[42, "arkouda.numpy.argsort", false]], "argsort() (in module arkouda.numpy.sorting)": [[55, "arkouda.numpy.sorting.argsort", false]], "argsort() (in module arkouda.sorting)": [[74, "arkouda.sorting.argsort", false]], "arkouda": [[26, "module-arkouda", false]], "arkouda.accessor": [[2, "module-arkouda.accessor", false]], "arkouda.alignment": [[3, "module-arkouda.alignment", false]], "arkouda.apply": [[4, "module-arkouda.apply", false]], "arkouda.array_api": [[9, "module-arkouda.array_api", false]], "arkouda.array_api.array_object": [[5, "module-arkouda.array_api.array_object", false]], "arkouda.array_api.creation_functions": [[6, "module-arkouda.array_api.creation_functions", false]], "arkouda.array_api.data_type_functions": [[7, "module-arkouda.array_api.data_type_functions", false]], "arkouda.array_api.elementwise_functions": [[8, "module-arkouda.array_api.elementwise_functions", false]], "arkouda.array_api.indexing_functions": [[10, "module-arkouda.array_api.indexing_functions", false]], "arkouda.array_api.linalg": [[11, "module-arkouda.array_api.linalg", false]], "arkouda.array_api.manipulation_functions": [[12, "module-arkouda.array_api.manipulation_functions", false]], "arkouda.array_api.searching_functions": [[13, "module-arkouda.array_api.searching_functions", false]], "arkouda.array_api.set_functions": [[14, "module-arkouda.array_api.set_functions", false]], "arkouda.array_api.sorting_functions": [[15, "module-arkouda.array_api.sorting_functions", false]], "arkouda.array_api.statistical_functions": [[16, "module-arkouda.array_api.statistical_functions", false]], "arkouda.array_api.utility_functions": [[17, "module-arkouda.array_api.utility_functions", false]], "arkouda.categorical": [[18, "module-arkouda.categorical", false]], "arkouda.client": [[19, "module-arkouda.client", false]], "arkouda.client_dtypes": [[20, "module-arkouda.client_dtypes", false]], "arkouda.comm_diagnostics": [[21, "module-arkouda.comm_diagnostics", false]], "arkouda.dataframe": [[22, "module-arkouda.dataframe", false]], "arkouda.dtypes": [[23, "module-arkouda.dtypes", false]], "arkouda.groupbyclass": [[24, "module-arkouda.groupbyclass", false]], "arkouda.history": [[25, "module-arkouda.history", false]], "arkouda.index": [[27, "module-arkouda.index", false]], "arkouda.infoclass": [[28, "module-arkouda.infoclass", false]], "arkouda.io": [[29, "module-arkouda.io", false]], "arkouda.io_util": [[30, "module-arkouda.io_util", false]], "arkouda.join": [[31, "module-arkouda.join", false]], "arkouda.logger": [[32, "module-arkouda.logger", false]], "arkouda.match": [[33, "module-arkouda.match", false]], "arkouda.matcher": [[34, "module-arkouda.matcher", false]], "arkouda.numeric": [[35, "module-arkouda.numeric", false]], "arkouda.numpy": [[42, "module-arkouda.numpy", false]], "arkouda.numpy.char": [[36, "module-arkouda.numpy.char", false]], "arkouda.numpy.ctypeslib": [[37, "module-arkouda.numpy.ctypeslib", false]], "arkouda.numpy.dtypes": [[39, "module-arkouda.numpy.dtypes", false]], "arkouda.numpy.dtypes.dtypes": [[38, "module-arkouda.numpy.dtypes.dtypes", false]], "arkouda.numpy.exceptions": [[40, "module-arkouda.numpy.exceptions", false]], "arkouda.numpy.fft": [[41, "module-arkouda.numpy.fft", false]], "arkouda.numpy.lib": [[44, "module-arkouda.numpy.lib", false]], "arkouda.numpy.lib.emath": [[43, "module-arkouda.numpy.lib.emath", false]], "arkouda.numpy.linalg": [[45, "module-arkouda.numpy.linalg", false]], "arkouda.numpy.ma": [[46, "module-arkouda.numpy.ma", false]], "arkouda.numpy.pdarrayclass": [[47, "module-arkouda.numpy.pdarrayclass", false]], "arkouda.numpy.pdarraycreation": [[48, "module-arkouda.numpy.pdarraycreation", false]], "arkouda.numpy.pdarraymanipulation": [[49, "module-arkouda.numpy.pdarraymanipulation", false]], "arkouda.numpy.pdarraysetops": [[50, "module-arkouda.numpy.pdarraysetops", false]], "arkouda.numpy.polynomial": [[51, "module-arkouda.numpy.polynomial", false]], "arkouda.numpy.random": [[52, "module-arkouda.numpy.random", false]], "arkouda.numpy.rec": [[53, "module-arkouda.numpy.rec", false]], "arkouda.numpy.segarray": [[54, "module-arkouda.numpy.segarray", false]], "arkouda.numpy.sorting": [[55, "module-arkouda.numpy.sorting", false]], "arkouda.numpy.strings": [[56, "module-arkouda.numpy.strings", false]], "arkouda.numpy.timeclass": [[57, "module-arkouda.numpy.timeclass", false]], "arkouda.numpy.util": [[58, "module-arkouda.numpy.util", false]], "arkouda.pdarrayclass": [[59, "module-arkouda.pdarrayclass", false]], "arkouda.pdarraycreation": [[60, "module-arkouda.pdarraycreation", false]], "arkouda.pdarraymanipulation": [[61, "module-arkouda.pdarraymanipulation", false]], "arkouda.pdarraysetops": [[62, "module-arkouda.pdarraysetops", false]], "arkouda.plotting": [[63, "module-arkouda.plotting", false]], "arkouda.random": [[64, "module-arkouda.random", false]], "arkouda.row": [[65, "module-arkouda.row", false]], "arkouda.scipy": [[66, "module-arkouda.scipy", false]], "arkouda.scipy.sparrayclass": [[67, "module-arkouda.scipy.sparrayclass", false]], "arkouda.scipy.sparsematrix": [[68, "module-arkouda.scipy.sparsematrix", false]], "arkouda.scipy.special": [[69, "module-arkouda.scipy.special", false]], "arkouda.scipy.stats": [[70, "module-arkouda.scipy.stats", false]], "arkouda.security": [[71, "module-arkouda.security", false]], "arkouda.segarray": [[72, "module-arkouda.segarray", false]], "arkouda.series": [[73, "module-arkouda.series", false]], "arkouda.sorting": [[74, "module-arkouda.sorting", false]], "arkouda.sparrayclass": [[75, "module-arkouda.sparrayclass", false]], "arkouda.sparsematrix": [[76, "module-arkouda.sparsematrix", false]], "arkouda.strings": [[77, "module-arkouda.strings", false]], "arkouda.testing": [[78, "module-arkouda.testing", false]], "arkouda.timeclass": [[79, "module-arkouda.timeclass", false]], "arkouda.util": [[80, "module-arkouda.util", false]], "arkouda_supported_dtypes (in module arkouda)": [[26, "arkouda.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (in module arkouda.dtypes)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (in module arkouda.numpy)": [[42, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_ints (in module arkouda)": [[26, "arkouda.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_ints (in module arkouda.dtypes)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_ints (in module arkouda.numpy)": [[42, "arkouda.numpy.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_ints (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_ints (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.ARKOUDA_SUPPORTED_INTS", false]], "array (class in arkouda.array_api)": [[9, "arkouda.array_api.Array", false]], "array (class in arkouda.array_api.array_object)": [[5, "arkouda.array_api.array_object.Array", false]], "array() (in module arkouda)": [[26, "arkouda.array", false], [26, "id496", false], [26, "id497", false], [109, "arkouda.array", false]], "array() (in module arkouda.numpy)": [[42, "arkouda.numpy.array", false], [42, "id234", false]], "array() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.array", false]], "array() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.array", false]], "array() (in module arkouda.segarray)": [[72, "arkouda.segarray.array", false]], "as_index (arkouda.dataframe.dataframegroupby attribute)": [[22, "arkouda.dataframe.DataFrameGroupBy.as_index", false]], "as_index (arkouda.dataframegroupby attribute)": [[26, "arkouda.DataFrameGroupBy.as_index", false]], "asarray() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.asarray", false]], "asin() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.asin", false]], "asinh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.asinh", false]], "assert_almost_equal() (in module arkouda)": [[26, "arkouda.assert_almost_equal", false]], "assert_almost_equal() (in module arkouda.testing)": [[78, "arkouda.testing.assert_almost_equal", false]], "assert_almost_equivalent() (in module arkouda)": [[26, "arkouda.assert_almost_equivalent", false]], "assert_almost_equivalent() (in module arkouda.testing)": [[78, "arkouda.testing.assert_almost_equivalent", false]], "assert_arkouda_array_equal() (in module arkouda)": [[26, "arkouda.assert_arkouda_array_equal", false]], "assert_arkouda_array_equal() (in module arkouda.testing)": [[78, "arkouda.testing.assert_arkouda_array_equal", false]], "assert_arkouda_array_equivalent() (in module arkouda)": [[26, "arkouda.assert_arkouda_array_equivalent", false]], "assert_arkouda_array_equivalent() (in module arkouda.testing)": [[78, "arkouda.testing.assert_arkouda_array_equivalent", false]], "assert_arkouda_pdarray_equal() (in module arkouda)": [[26, "arkouda.assert_arkouda_pdarray_equal", false]], "assert_arkouda_pdarray_equal() (in module arkouda.testing)": [[78, "arkouda.testing.assert_arkouda_pdarray_equal", false]], "assert_arkouda_segarray_equal() (in module arkouda)": [[26, "arkouda.assert_arkouda_segarray_equal", false]], "assert_arkouda_segarray_equal() (in module arkouda.testing)": [[78, "arkouda.testing.assert_arkouda_segarray_equal", false]], "assert_arkouda_strings_equal() (in module arkouda)": [[26, "arkouda.assert_arkouda_strings_equal", false]], "assert_arkouda_strings_equal() (in module arkouda.testing)": [[78, "arkouda.testing.assert_arkouda_strings_equal", false]], "assert_attr_equal() (in module arkouda)": [[26, "arkouda.assert_attr_equal", false]], "assert_attr_equal() (in module arkouda.testing)": [[78, "arkouda.testing.assert_attr_equal", false]], "assert_categorical_equal() (in module arkouda)": [[26, "arkouda.assert_categorical_equal", false]], "assert_categorical_equal() (in module arkouda.testing)": [[78, "arkouda.testing.assert_categorical_equal", false]], "assert_class_equal() (in module arkouda)": [[26, "arkouda.assert_class_equal", false]], "assert_class_equal() (in module arkouda.testing)": [[78, "arkouda.testing.assert_class_equal", false]], "assert_contains_all() (in module arkouda)": [[26, "arkouda.assert_contains_all", false]], "assert_contains_all() (in module arkouda.testing)": [[78, "arkouda.testing.assert_contains_all", false]], "assert_copy() (in module arkouda)": [[26, "arkouda.assert_copy", false]], "assert_copy() (in module arkouda.testing)": [[78, "arkouda.testing.assert_copy", false]], "assert_dict_equal() (in module arkouda)": [[26, "arkouda.assert_dict_equal", false]], "assert_dict_equal() (in module arkouda.testing)": [[78, "arkouda.testing.assert_dict_equal", false]], "assert_equal() (in module arkouda)": [[26, "arkouda.assert_equal", false]], "assert_equal() (in module arkouda.testing)": [[78, "arkouda.testing.assert_equal", false]], "assert_equivalent() (in module arkouda)": [[26, "arkouda.assert_equivalent", false]], "assert_equivalent() (in module arkouda.testing)": [[78, "arkouda.testing.assert_equivalent", false]], "assert_frame_equal() (in module arkouda)": [[26, "arkouda.assert_frame_equal", false]], "assert_frame_equal() (in module arkouda.testing)": [[78, "arkouda.testing.assert_frame_equal", false]], "assert_frame_equivalent() (in module arkouda)": [[26, "arkouda.assert_frame_equivalent", false]], "assert_frame_equivalent() (in module arkouda.testing)": [[78, "arkouda.testing.assert_frame_equivalent", false]], "assert_index_equal() (in module arkouda)": [[26, "arkouda.assert_index_equal", false]], "assert_index_equal() (in module arkouda.testing)": [[78, "arkouda.testing.assert_index_equal", false]], "assert_index_equivalent() (in module arkouda)": [[26, "arkouda.assert_index_equivalent", false]], "assert_index_equivalent() (in module arkouda.testing)": [[78, "arkouda.testing.assert_index_equivalent", false]], "assert_is_sorted() (in module arkouda)": [[26, "arkouda.assert_is_sorted", false]], "assert_is_sorted() (in module arkouda.testing)": [[78, "arkouda.testing.assert_is_sorted", false]], "assert_series_equal() (in module arkouda)": [[26, "arkouda.assert_series_equal", false]], "assert_series_equal() (in module arkouda.testing)": [[78, "arkouda.testing.assert_series_equal", false]], "assert_series_equivalent() (in module arkouda)": [[26, "arkouda.assert_series_equivalent", false]], "assert_series_equivalent() (in module arkouda.testing)": [[78, "arkouda.testing.assert_series_equivalent", false]], "assign() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.assign", false], [26, "id9", false]], "assign() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.assign", false]], "astype() (arkouda.ndarray method)": [[26, "arkouda.ndarray.astype", false]], "astype() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.astype", false]], "astype() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.astype", false], [42, "id286", false], [42, "id349", false], [42, "id417", false], [42, "id486", false]], "astype() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.astype", false]], "astype() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.astype", false], [42, "id14", false], [42, "id162", false], [42, "id86", false]], "astype() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.astype", false]], "astype() (arkouda.pdarray method)": [[26, "arkouda.pdarray.astype", false], [26, "id548", false], [26, "id616", false]], "astype() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.astype", false]], "astype() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.astype", false]], "astype() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.astype", false]], "astype() (arkouda.strings method)": [[26, "arkouda.Strings.astype", false], [26, "id326", false], [26, "id402", false]], "astype() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.astype", false]], "astype() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.astype", false]], "astype() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.astype", false]], "astype() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.astype", false]], "astype() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.astype", false]], "at (arkouda.series property)": [[26, "arkouda.Series.at", false]], "at (arkouda.series.series property)": [[73, "arkouda.series.Series.at", false]], "atan() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.atan", false]], "atan2() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.atan2", false]], "atanh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.atanh", false]], "attach() (arkouda.categorical method)": [[26, "arkouda.Categorical.attach", false]], "attach() (arkouda.categorical.categorical static method)": [[18, "arkouda.categorical.Categorical.attach", false]], "attach() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.attach", false], [26, "id10", false]], "attach() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.attach", false]], "attach() (arkouda.groupby method)": [[26, "arkouda.GroupBy.attach", false], [26, "id143", false], [26, "id190", false], [26, "id237", false], [26, "id284", false]], "attach() (arkouda.groupby static method)": [[116, "arkouda.GroupBy.attach", false]], "attach() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.attach", false]], "attach() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.attach", false]], "attach() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.attach", false]], "attach() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.attach", false], [42, "id287", false]], "attach() (arkouda.numpy.pdarray static method)": [[42, "id350", false], [42, "id418", false], [42, "id487", false]], "attach() (arkouda.numpy.pdarrayclass.pdarray static method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.attach", false]], "attach() (arkouda.numpy.segarray class method)": [[42, "arkouda.numpy.SegArray.attach", false]], "attach() (arkouda.numpy.segarray.segarray class method)": [[54, "arkouda.numpy.segarray.SegArray.attach", false]], "attach() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.attach", false], [42, "id15", false]], "attach() (arkouda.numpy.strings static method)": [[42, "id163", false], [42, "id87", false]], "attach() (arkouda.numpy.strings.strings static method)": [[56, "arkouda.numpy.strings.Strings.attach", false]], "attach() (arkouda.pdarray method)": [[26, "arkouda.pdarray.attach", false]], "attach() (arkouda.pdarray static method)": [[26, "id549", false], [26, "id617", false]], "attach() (arkouda.pdarrayclass.pdarray static method)": [[59, "arkouda.pdarrayclass.pdarray.attach", false]], "attach() (arkouda.segarray class method)": [[26, "arkouda.SegArray.attach", false]], "attach() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.attach", false]], "attach() (arkouda.segarray.pdarray static method)": [[72, "arkouda.segarray.pdarray.attach", false]], "attach() (arkouda.segarray.segarray class method)": [[72, "arkouda.segarray.SegArray.attach", false]], "attach() (arkouda.segarray.strings static method)": [[72, "arkouda.segarray.Strings.attach", false]], "attach() (arkouda.series method)": [[26, "arkouda.Series.attach", false]], "attach() (arkouda.series.series method)": [[73, "arkouda.series.Series.attach", false]], "attach() (arkouda.strings method)": [[26, "arkouda.Strings.attach", false]], "attach() (arkouda.strings static method)": [[26, "id327", false], [26, "id403", false]], "attach() (arkouda.strings.strings static method)": [[77, "arkouda.strings.Strings.attach", false]], "attach() (arkouda.timeclass.pdarray static method)": [[79, "arkouda.timeclass.pdarray.attach", false]], "attach() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.attach", false]], "attach() (arkouda.util.pdarray static method)": [[80, "arkouda.util.pdarray.attach", false]], "attach() (arkouda.util.segarray class method)": [[80, "arkouda.util.SegArray.attach", false]], "attach() (arkouda.util.strings static method)": [[80, "arkouda.util.Strings.attach", false]], "attach() (in module arkouda)": [[26, "arkouda.attach", false]], "attach() (in module arkouda.numpy)": [[42, "arkouda.numpy.attach", false]], "attach() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.attach", false]], "attach() (in module arkouda.util)": [[80, "arkouda.util.attach", false]], "attach_all() (in module arkouda)": [[26, "arkouda.attach_all", false]], "attach_all() (in module arkouda.numpy)": [[42, "arkouda.numpy.attach_all", false]], "attach_all() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.attach_all", false]], "attach_all() (in module arkouda.util)": [[80, "arkouda.util.attach_all", false]], "attach_pdarray() (in module arkouda)": [[26, "arkouda.attach_pdarray", false]], "attach_pdarray() (in module arkouda.numpy)": [[42, "arkouda.numpy.attach_pdarray", false]], "attach_pdarray() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.attach_pdarray", false]], "attach_pdarray() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.attach_pdarray", false]], "b() (arkouda.scipy.stats.chi2 method)": [[70, "arkouda.scipy.stats.chi2.b", false]], "badvalue() (arkouda.scipy.stats.chi2 method)": [[70, "arkouda.scipy.stats.chi2.badvalue", false]], "base() (arkouda.ndarray method)": [[26, "arkouda.ndarray.base", false]], "base() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.base", false]], "bigint (arkouda.dtype attribute)": [[26, "arkouda.DType.BIGINT", false]], "bigint (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.BIGINT", false]], "bigint (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.BIGINT", false]], "bigint (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.BIGINT", false]], "bigint (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.BIGINT", false]], "bigint (class in arkouda)": [[26, "arkouda.bigint", false]], "bigint (class in arkouda.dtypes)": [[23, "arkouda.dtypes.bigint", false]], "bigint (class in arkouda.numpy)": [[42, "arkouda.numpy.bigint", false]], "bigint (class in arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.bigint", false]], "bigint (class in arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.bigint", false]], "bigint_from_uint_arrays() (in module arkouda)": [[26, "arkouda.bigint_from_uint_arrays", false]], "bigint_from_uint_arrays() (in module arkouda.numpy)": [[42, "arkouda.numpy.bigint_from_uint_arrays", false]], "bigint_from_uint_arrays() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.bigint_from_uint_arrays", false]], "bigint_from_uint_arrays() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.bigint_from_uint_arrays", false]], "bigint_to_uint_arrays() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.bigint_to_uint_arrays", false], [42, "id288", false], [42, "id351", false], [42, "id419", false], [42, "id488", false]], "bigint_to_uint_arrays() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.bigint_to_uint_arrays", false]], "bigint_to_uint_arrays() (arkouda.pdarray method)": [[26, "arkouda.pdarray.bigint_to_uint_arrays", false], [26, "id550", false], [26, "id618", false]], "bigint_to_uint_arrays() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.bigint_to_uint_arrays", false]], "bigint_to_uint_arrays() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.bigint_to_uint_arrays", false]], "bigint_to_uint_arrays() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.bigint_to_uint_arrays", false]], "bigint_to_uint_arrays() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.bigint_to_uint_arrays", false]], "binops (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.BinOps", false]], "binops (arkouda.numpy.pdarray attribute)": [[42, "id341", false], [42, "id409", false], [42, "id478", false]], "binops (arkouda.numpy.pdarrayclass.pdarray attribute)": [[47, "arkouda.numpy.pdarrayclass.pdarray.BinOps", false]], "binops (arkouda.numpy.strings attribute)": [[42, "id161", false], [42, "id85", false]], "binops (arkouda.numpy.strings.strings attribute)": [[56, "arkouda.numpy.strings.Strings.BinOps", false]], "binops (arkouda.pdarray attribute)": [[26, "id540", false], [26, "id608", false]], "binops (arkouda.pdarrayclass.pdarray attribute)": [[59, "arkouda.pdarrayclass.pdarray.BinOps", false]], "binops (arkouda.segarray.pdarray attribute)": [[72, "arkouda.segarray.pdarray.BinOps", false]], "binops (arkouda.segarray.strings attribute)": [[72, "arkouda.segarray.Strings.BinOps", false]], "binops (arkouda.strings attribute)": [[26, "id325", false], [26, "id401", false]], "binops (arkouda.strings.strings attribute)": [[77, "arkouda.strings.Strings.BinOps", false]], "binops (arkouda.timeclass.pdarray attribute)": [[79, "arkouda.timeclass.pdarray.BinOps", false]], "binops (arkouda.util.pdarray attribute)": [[80, "arkouda.util.pdarray.BinOps", false]], "binops (arkouda.util.strings attribute)": [[80, "arkouda.util.Strings.BinOps", false]], "binops() (arkouda.categorical method)": [[26, "arkouda.Categorical.BinOps", false]], "binops() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.BinOps", false]], "binops() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.BinOps", false], [42, "id278", false]], "binops() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.BinOps", false], [42, "id13", false]], "binops() (arkouda.pdarray method)": [[26, "arkouda.pdarray.BinOps", false]], "binops() (arkouda.strings method)": [[26, "arkouda.Strings.BinOps", false]], "bits (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.bits", false]], "bits (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.iinfo_object.bits", false]], "bittype (in module arkouda)": [[26, "arkouda.bitType", false], [26, "id498", false]], "bittype (in module arkouda.dtypes)": [[23, "arkouda.dtypes.bitType", false]], "bittype (in module arkouda.numpy)": [[42, "arkouda.numpy.bitType", false]], "bittype (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.bitType", false]], "bittype (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.bitType", false]], "bitvector (class in arkouda)": [[26, "arkouda.BitVector", false]], "bitvector (class in arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.BitVector", false]], "bitvector (class in arkouda.util)": [[80, "arkouda.util.BitVector", false]], "bitvectorizer() (in module arkouda)": [[26, "arkouda.BitVectorizer", false]], "bitvectorizer() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.BitVectorizer", false]], "bitvectorizer() (in module arkouda.util)": [[80, "arkouda.util.BitVectorizer", false]], "bitwise_and() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_and", false]], "bitwise_invert() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_invert", false]], "bitwise_left_shift() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_left_shift", false]], "bitwise_or() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_or", false]], "bitwise_right_shift() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_right_shift", false]], "bitwise_xor() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_xor", false]], "bool (arkouda.dtype attribute)": [[26, "arkouda.DType.BOOL", false]], "bool (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.BOOL", false]], "bool (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.BOOL", false]], "bool (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.BOOL", false]], "bool (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.BOOL", false]], "bool_scalars (class in arkouda.numpy)": [[42, "id235", false]], "bool_scalars (in module arkouda)": [[26, "arkouda.bool_scalars", false], [26, "id499", false]], "bool_scalars (in module arkouda.dtypes)": [[23, "arkouda.dtypes.bool_scalars", false]], "bool_scalars (in module arkouda.numpy)": [[42, "arkouda.numpy.bool_scalars", false]], "bool_scalars (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.bool_scalars", false]], "bool_scalars (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.bool_scalars", false]], "broadcast() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.broadcast", false]], "broadcast() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.broadcast", false]], "broadcast() (arkouda.groupby method)": [[26, "arkouda.GroupBy.broadcast", false], [26, "id144", false], [26, "id191", false], [26, "id238", false], [26, "id285", false], [116, "arkouda.GroupBy.broadcast", false]], "broadcast() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.broadcast", false]], "broadcast() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.broadcast", false]], "broadcast() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.broadcast", false]], "broadcast() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.broadcast", false]], "broadcast() (in module arkouda)": [[26, "arkouda.broadcast", false], [26, "id500", false], [26, "id501", false]], "broadcast() (in module arkouda.groupbyclass)": [[24, "arkouda.groupbyclass.broadcast", false]], "broadcast() (in module arkouda.numpy)": [[42, "arkouda.numpy.broadcast", false]], "broadcast() (in module arkouda.segarray)": [[72, "arkouda.segarray.broadcast", false]], "broadcast() (in module arkouda.util)": [[80, "arkouda.util.broadcast", false]], "broadcast_arrays() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.broadcast_arrays", false]], "broadcast_dims() (in module arkouda)": [[26, "arkouda.broadcast_dims", false]], "broadcast_dims() (in module arkouda.numpy)": [[42, "arkouda.numpy.broadcast_dims", false]], "broadcast_dims() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.broadcast_dims", false]], "broadcast_dims() (in module arkouda.util)": [[80, "arkouda.util.broadcast_dims", false]], "broadcast_to() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.broadcast_to", false]], "broadcast_to_shape() (in module arkouda)": [[26, "arkouda.broadcast_to_shape", false]], "broadcast_to_shape() (in module arkouda.numpy)": [[42, "arkouda.numpy.broadcast_to_shape", false]], "broadcast_to_shape() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.broadcast_to_shape", false]], "broadcast_to_shape() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.broadcast_to_shape", false]], "build_from_components() (arkouda.groupby method)": [[26, "arkouda.GroupBy.build_from_components", false], [26, "id145", false], [26, "id192", false], [26, "id239", false], [26, "id286", false]], "build_from_components() (arkouda.groupby static method)": [[116, "arkouda.GroupBy.build_from_components", false]], "build_from_components() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.build_from_components", false]], "build_from_components() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.build_from_components", false]], "build_from_components() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.build_from_components", false]], "build_from_components() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.build_from_components", false]], "byteswap() (arkouda.ndarray method)": [[26, "arkouda.ndarray.byteswap", false]], "byteswap() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.byteswap", false]], "cached_regex_patterns() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.cached_regex_patterns", false], [42, "id16", false], [42, "id164", false], [42, "id88", false]], "cached_regex_patterns() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.cached_regex_patterns", false]], "cached_regex_patterns() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.cached_regex_patterns", false]], "cached_regex_patterns() (arkouda.strings method)": [[26, "arkouda.Strings.cached_regex_patterns", false], [26, "id328", false], [26, "id404", false]], "cached_regex_patterns() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.cached_regex_patterns", false]], "cached_regex_patterns() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.cached_regex_patterns", false]], "cachedaccessor (class in arkouda)": [[26, "arkouda.CachedAccessor", false]], "cachedaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.CachedAccessor", false]], "can_cast() (in module arkouda)": [[26, "arkouda.can_cast", false]], "can_cast() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.can_cast", false]], "can_cast() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.can_cast", false]], "can_cast() (in module arkouda.numpy)": [[42, "arkouda.numpy.can_cast", false]], "can_cast() (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.can_cast", false]], "can_cast() (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.can_cast", false]], "capitalize() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.capitalize", false], [42, "id165", false], [42, "id17", false], [42, "id89", false]], "capitalize() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.capitalize", false]], "capitalize() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.capitalize", false]], "capitalize() (arkouda.strings method)": [[26, "arkouda.Strings.capitalize", false], [26, "id329", false], [26, "id405", false]], "capitalize() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.capitalize", false]], "capitalize() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.capitalize", false]], "cast() (in module arkouda)": [[26, "arkouda.cast", false], [119, "arkouda.cast", false]], "cast() (in module arkouda.numpy)": [[42, "arkouda.numpy.cast", false]], "categorical (class in arkouda)": [[26, "arkouda.Categorical", false], [113, "arkouda.Categorical", false]], "categorical (class in arkouda.categorical)": [[18, "arkouda.categorical.Categorical", false]], "categorical (class in arkouda.numpy)": [[42, "arkouda.numpy.Categorical", false]], "categories (arkouda.categorical attribute)": [[26, "arkouda.Categorical.categories", false], [113, "arkouda.Categorical.categories", false]], "categories (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.categories", false]], "categories (arkouda.numpy.categorical attribute)": [[42, "arkouda.numpy.Categorical.categories", false]], "ceil() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.ceil", false]], "chi2 (class in arkouda.scipy.stats)": [[70, "arkouda.scipy.stats.chi2", false]], "choice() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.choice", false]], "choice() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.choice", false]], "choice() (in module arkouda.random.generator)": [[120, "arkouda.random.Generator.choice", false]], "choose() (arkouda.ndarray method)": [[26, "arkouda.ndarray.choose", false]], "choose() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.choose", false]], "chunk_info() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.chunk_info", false]], "chunk_info() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.chunk_info", false]], "clear() (in module arkouda)": [[26, "arkouda.clear", false]], "clear() (in module arkouda.numpy)": [[42, "arkouda.numpy.clear", false]], "clear() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.clear", false]], "clear() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.clear", false]], "clip() (arkouda.ndarray method)": [[26, "arkouda.ndarray.clip", false]], "clip() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.clip", false]], "clip() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.clip", false]], "clz() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.clz", false], [42, "id289", false], [42, "id352", false], [42, "id420", false], [42, "id489", false]], "clz() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.clz", false]], "clz() (arkouda.pdarray method)": [[26, "arkouda.pdarray.clz", false], [26, "id551", false], [26, "id619", false]], "clz() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.clz", false]], "clz() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.clz", false]], "clz() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.clz", false]], "clz() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.clz", false]], "clz() (in module arkouda)": [[26, "arkouda.clz", false]], "clz() (in module arkouda.numpy)": [[42, "arkouda.numpy.clz", false]], "clz() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.clz", false]], "clz() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.clz", false]], "coargsort() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.coargsort", false], [26, "id11", false]], "coargsort() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.coargsort", false]], "coargsort() (in module arkouda)": [[26, "arkouda.coargsort", false], [26, "id502", false], [111, "arkouda.coargsort", false]], "coargsort() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.coargsort", false]], "coargsort() (in module arkouda.numpy)": [[42, "arkouda.numpy.coargsort", false]], "coargsort() (in module arkouda.numpy.sorting)": [[55, "arkouda.numpy.sorting.coargsort", false]], "coargsort() (in module arkouda.sorting)": [[74, "arkouda.sorting.coargsort", false]], "coargsort() (in module arkouda.util)": [[80, "arkouda.util.coargsort", false]], "codes (arkouda.categorical attribute)": [[26, "arkouda.Categorical.codes", false], [113, "arkouda.Categorical.codes", false]], "codes (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.codes", false]], "codes (arkouda.numpy.categorical attribute)": [[42, "arkouda.numpy.Categorical.codes", false]], "columns (arkouda.dataframe property)": [[26, "arkouda.DataFrame.columns", false], [26, "id12", false]], "columns (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.columns", false]], "complex128 (arkouda.dtype attribute)": [[26, "arkouda.DType.COMPLEX128", false]], "complex128 (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.COMPLEX128", false]], "complex128 (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.COMPLEX128", false]], "complex128 (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.COMPLEX128", false]], "complex128 (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.COMPLEX128", false]], "complex64 (arkouda.dtype attribute)": [[26, "arkouda.DType.COMPLEX64", false]], "complex64 (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.COMPLEX64", false]], "complex64 (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.COMPLEX64", false]], "complex64 (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.COMPLEX64", false]], "complex64 (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.COMPLEX64", false]], "components (arkouda.numpy.timeclass.timedelta property)": [[57, "arkouda.numpy.timeclass.Timedelta.components", false]], "components (arkouda.numpy.timedelta property)": [[42, "arkouda.numpy.Timedelta.components", false]], "components (arkouda.timeclass.timedelta property)": [[79, "arkouda.timeclass.Timedelta.components", false]], "components (arkouda.timedelta property)": [[26, "arkouda.Timedelta.components", false], [26, "id472", false]], "components (arkouda.util.timedelta property)": [[80, "arkouda.util.Timedelta.components", false]], "compress() (arkouda.ndarray method)": [[26, "arkouda.ndarray.compress", false]], "compress() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.compress", false]], "compute_join_size() (in module arkouda.join)": [[31, "arkouda.join.compute_join_size", false]], "concat() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.concat", false], [26, "id13", false]], "concat() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.concat", false]], "concat() (arkouda.index method)": [[26, "arkouda.Index.concat", false]], "concat() (arkouda.index.index method)": [[27, "arkouda.index.Index.concat", false]], "concat() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.concat", false]], "concat() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.concat", false]], "concat() (arkouda.numpy.segarray class method)": [[42, "arkouda.numpy.SegArray.concat", false]], "concat() (arkouda.numpy.segarray.segarray class method)": [[54, "arkouda.numpy.segarray.SegArray.concat", false]], "concat() (arkouda.segarray class method)": [[26, "arkouda.SegArray.concat", false]], "concat() (arkouda.segarray.segarray class method)": [[72, "arkouda.segarray.SegArray.concat", false]], "concat() (arkouda.series method)": [[26, "arkouda.Series.concat", false]], "concat() (arkouda.series.series method)": [[73, "arkouda.series.Series.concat", false]], "concat() (arkouda.util.segarray class method)": [[80, "arkouda.util.SegArray.concat", false]], "concat() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.concat", false]], "concat() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.concat", false]], "concat() (in module arkouda.index)": [[110, "arkouda.Index.concat", false]], "concat() (in module arkouda.multiindex)": [[110, "arkouda.MultiIndex.concat", false]], "concatenate() (arkouda.categorical method)": [[26, "arkouda.Categorical.concatenate", false]], "concatenate() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.concatenate", false]], "concatenate() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.concatenate", false]], "concatenate() (in module arkouda)": [[26, "arkouda.concatenate", false], [114, "arkouda.concatenate", false]], "concatenate() (in module arkouda.numpy)": [[42, "arkouda.numpy.concatenate", false], [42, "id236", false]], "concatenate() (in module arkouda.numpy.pdarraysetops)": [[50, "arkouda.numpy.pdarraysetops.concatenate", false]], "concatenate() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.concatenate", false]], "concatenate() (in module arkouda.pdarraysetops)": [[62, "arkouda.pdarraysetops.concatenate", false]], "concatenate() (in module arkouda.segarray)": [[72, "arkouda.segarray.concatenate", false]], "concatenate() (in module arkouda.util)": [[80, "arkouda.util.concatenate", false]], "conj() (arkouda.ndarray method)": [[26, "arkouda.ndarray.conj", false]], "conj() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.conj", false]], "conj() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.conj", false]], "conjugate() (arkouda.ndarray method)": [[26, "arkouda.ndarray.conjugate", false]], "conjugate() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.conjugate", false]], "connect() (in module arkouda)": [[124, "arkouda.connect", false]], "connect() (in module arkouda.client)": [[19, "arkouda.client.connect", false]], "conserves (arkouda.bitvector attribute)": [[26, "arkouda.BitVector.conserves", false]], "conserves (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.conserves", false]], "conserves (arkouda.util.bitvector attribute)": [[80, "arkouda.util.BitVector.conserves", false]], "contains() (arkouda.categorical method)": [[26, "arkouda.Categorical.contains", false], [113, "arkouda.Categorical.contains", false]], "contains() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.contains", false]], "contains() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.contains", false]], "contains() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.contains", false], [42, "id166", false], [42, "id18", false], [42, "id90", false]], "contains() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.contains", false]], "contains() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.contains", false]], "contains() (arkouda.strings method)": [[26, "arkouda.Strings.contains", false], [26, "id330", false], [26, "id406", false]], "contains() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.contains", false]], "contains() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.contains", false]], "convert_bytes() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.convert_bytes", false]], "convert_bytes() (in module arkouda.util)": [[80, "arkouda.util.convert_bytes", false]], "convert_if_categorical() (in module arkouda)": [[26, "arkouda.convert_if_categorical", false]], "convert_if_categorical() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.convert_if_categorical", false]], "convert_if_categorical() (in module arkouda.util)": [[80, "arkouda.util.convert_if_categorical", false]], "copy() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.copy", false]], "copy() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.copy", false]], "copy() (arkouda.ndarray method)": [[26, "arkouda.ndarray.copy", false]], "copy() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.copy", false]], "copy() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.copy", false]], "copy() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.copy", false]], "copy() (arkouda.segarray method)": [[26, "arkouda.SegArray.copy", false]], "copy() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.copy", false]], "copy() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.copy", false]], "copy() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.copy", false]], "copy_with() (arkouda.iterable method)": [[26, "arkouda.Iterable.copy_with", false]], "copy_with() (arkouda.numpy.iterable method)": [[42, "arkouda.numpy.Iterable.copy_with", false]], "corr() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.corr", false], [26, "id14", false]], "corr() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.corr", false]], "corr() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.corr", false], [42, "id290", false], [42, "id353", false], [42, "id421", false], [42, "id490", false]], "corr() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.corr", false]], "corr() (arkouda.pdarray method)": [[26, "arkouda.pdarray.corr", false], [26, "id552", false], [26, "id620", false]], "corr() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.corr", false]], "corr() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.corr", false]], "corr() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.corr", false]], "corr() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.corr", false]], "corr() (in module arkouda)": [[26, "arkouda.corr", false]], "corr() (in module arkouda.numpy)": [[42, "arkouda.numpy.corr", false]], "corr() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.corr", false]], "corr() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.corr", false]], "cos() (in module arkouda)": [[112, "arkouda.cos", false]], "cos() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.cos", false]], "cosh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.cosh", false]], "count() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.count", false], [26, "id15", false]], "count() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.count", false]], "count() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.count", false]], "count() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.count", false]], "count() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.count", false]], "count() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.count", false]], "count() (arkouda.groupby method)": [[26, "arkouda.GroupBy.count", false], [26, "id146", false], [26, "id193", false], [26, "id240", false], [26, "id287", false], [116, "arkouda.GroupBy.count", false]], "count() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.count", false]], "count() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.count", false]], "count() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.count", false]], "count() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.count", false]], "counts (arkouda.array_api.set_functions.uniqueallresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueAllResult.counts", false]], "counts (arkouda.array_api.set_functions.uniquecountsresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueCountsResult.counts", false]], "cov() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.cov", false], [42, "id291", false], [42, "id354", false], [42, "id422", false], [42, "id491", false]], "cov() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.cov", false]], "cov() (arkouda.pdarray method)": [[26, "arkouda.pdarray.cov", false], [26, "id553", false], [26, "id621", false]], "cov() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.cov", false]], "cov() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.cov", false]], "cov() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.cov", false]], "cov() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.cov", false]], "cov() (in module arkouda)": [[26, "arkouda.cov", false]], "cov() (in module arkouda.numpy)": [[42, "arkouda.numpy.cov", false]], "cov() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.cov", false]], "cov() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.cov", false]], "create_pdarray() (in module arkouda)": [[26, "arkouda.create_pdarray", false], [26, "id503", false], [26, "id504", false]], "create_pdarray() (in module arkouda.numpy)": [[42, "arkouda.numpy.create_pdarray", false], [42, "id237", false], [42, "id238", false]], "create_pdarray() (in module arkouda.segarray)": [[72, "arkouda.segarray.create_pdarray", false]], "create_pdarray() (in module arkouda.timeclass)": [[79, "arkouda.timeclass.create_pdarray", false]], "create_pdarray() (in module arkouda.util)": [[80, "arkouda.util.create_pdarray", false]], "create_sparray() (in module arkouda.scipy.sparrayclass)": [[67, "arkouda.scipy.sparrayclass.create_sparray", false]], "create_sparray() (in module arkouda.sparrayclass)": [[75, "arkouda.sparrayclass.create_sparray", false]], "create_sparse_matrix() (in module arkouda.scipy.sparsematrix)": [[68, "arkouda.scipy.sparsematrix.create_sparse_matrix", false]], "create_sparse_matrix() (in module arkouda.sparsematrix)": [[76, "arkouda.sparsematrix.create_sparse_matrix", false]], "critical (arkouda.logger.loglevel attribute)": [[32, "arkouda.logger.LogLevel.CRITICAL", false]], "critical (arkouda.loglevel attribute)": [[26, "arkouda.LogLevel.CRITICAL", false]], "ctypes() (arkouda.ndarray method)": [[26, "arkouda.ndarray.ctypes", false]], "ctypes() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.ctypes", false]], "ctz() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.ctz", false], [42, "id292", false], [42, "id355", false], [42, "id423", false], [42, "id492", false]], "ctz() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.ctz", false]], "ctz() (arkouda.pdarray method)": [[26, "arkouda.pdarray.ctz", false], [26, "id554", false], [26, "id622", false]], "ctz() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.ctz", false]], "ctz() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.ctz", false]], "ctz() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.ctz", false]], "ctz() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.ctz", false]], "ctz() (in module arkouda)": [[26, "arkouda.ctz", false]], "ctz() (in module arkouda.numpy)": [[42, "arkouda.numpy.ctz", false]], "ctz() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.ctz", false]], "ctz() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.ctz", false]], "cumprod() (arkouda.ndarray method)": [[26, "arkouda.ndarray.cumprod", false]], "cumprod() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.cumprod", false]], "cumprod() (in module arkouda)": [[112, "arkouda.cumprod", false]], "cumsum() (arkouda.ndarray method)": [[26, "arkouda.ndarray.cumsum", false]], "cumsum() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.cumsum", false]], "cumsum() (in module arkouda)": [[112, "arkouda.cumsum", false]], "cumulative_sum() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.cumulative_sum", false]], "data() (arkouda.ndarray method)": [[26, "arkouda.ndarray.data", false]], "data() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.data", false]], "dataframe (class in arkouda)": [[26, "arkouda.DataFrame", false], [26, "id2", false], [115, "arkouda.DataFrame", false]], "dataframe (class in arkouda.dataframe)": [[22, "arkouda.dataframe.DataFrame", false]], "dataframegroupby (class in arkouda)": [[26, "arkouda.DataFrameGroupBy", false]], "dataframegroupby (class in arkouda.dataframe)": [[22, "arkouda.dataframe.DataFrameGroupBy", false]], "date (arkouda.datetime property)": [[26, "arkouda.Datetime.date", false], [26, "id59", false], [26, "id92", false]], "date (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.date", false]], "date (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.date", false]], "date (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.date", false]], "date (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.date", false]], "date_operators() (in module arkouda)": [[26, "arkouda.date_operators", false]], "date_operators() (in module arkouda.accessor)": [[2, "arkouda.accessor.date_operators", false]], "date_range() (in module arkouda)": [[26, "arkouda.date_range", false], [26, "id505", false]], "date_range() (in module arkouda.numpy)": [[42, "arkouda.numpy.date_range", false]], "date_range() (in module arkouda.numpy.timeclass)": [[57, "arkouda.numpy.timeclass.date_range", false]], "date_range() (in module arkouda.timeclass)": [[79, "arkouda.timeclass.date_range", false]], "datetime (class in arkouda)": [[26, "arkouda.Datetime", false], [26, "id58", false], [26, "id91", false]], "datetime (class in arkouda.numpy)": [[42, "arkouda.numpy.Datetime", false]], "datetime (class in arkouda.numpy.timeclass)": [[57, "arkouda.numpy.timeclass.Datetime", false]], "datetime (class in arkouda.timeclass)": [[79, "arkouda.timeclass.Datetime", false]], "datetime (class in arkouda.util)": [[80, "arkouda.util.Datetime", false]], "datetimeaccessor (class in arkouda)": [[26, "arkouda.DatetimeAccessor", false]], "datetimeaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.DatetimeAccessor", false]], "day (arkouda.datetime property)": [[26, "arkouda.Datetime.day", false], [26, "id60", false], [26, "id93", false]], "day (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.day", false]], "day (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.day", false]], "day (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.day", false]], "day (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.day", false]], "day_of_week (arkouda.datetime property)": [[26, "arkouda.Datetime.day_of_week", false], [26, "id61", false], [26, "id94", false]], "day_of_week (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.day_of_week", false]], "day_of_week (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.day_of_week", false]], "day_of_week (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.day_of_week", false]], "day_of_week (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.day_of_week", false]], "day_of_year (arkouda.datetime property)": [[26, "arkouda.Datetime.day_of_year", false], [26, "id62", false], [26, "id95", false]], "day_of_year (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.day_of_year", false]], "day_of_year (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.day_of_year", false]], "day_of_year (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.day_of_year", false]], "day_of_year (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.day_of_year", false]], "dayofweek (arkouda.datetime property)": [[26, "arkouda.Datetime.dayofweek", false], [26, "id63", false], [26, "id96", false]], "dayofweek (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.dayofweek", false]], "dayofweek (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.dayofweek", false]], "dayofweek (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.dayofweek", false]], "dayofweek (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.dayofweek", false]], "dayofyear (arkouda.datetime property)": [[26, "arkouda.Datetime.dayofyear", false], [26, "id64", false], [26, "id97", false]], "dayofyear (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.dayofyear", false]], "dayofyear (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.dayofyear", false]], "dayofyear (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.dayofyear", false]], "dayofyear (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.dayofyear", false]], "days (arkouda.numpy.timeclass.timedelta property)": [[57, "arkouda.numpy.timeclass.Timedelta.days", false]], "days (arkouda.numpy.timedelta property)": [[42, "arkouda.numpy.Timedelta.days", false]], "days (arkouda.timeclass.timedelta property)": [[79, "arkouda.timeclass.Timedelta.days", false]], "days (arkouda.timedelta property)": [[26, "arkouda.Timedelta.days", false], [26, "id473", false]], "days (arkouda.util.timedelta property)": [[80, "arkouda.util.Timedelta.days", false]], "debug (arkouda.logger.loglevel attribute)": [[32, "arkouda.logger.LogLevel.DEBUG", false]], "debug (arkouda.loglevel attribute)": [[26, "arkouda.LogLevel.DEBUG", false]], "decode() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.decode", false], [42, "id167", false], [42, "id19", false], [42, "id91", false]], "decode() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.decode", false]], "decode() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.decode", false]], "decode() (arkouda.strings method)": [[26, "arkouda.Strings.decode", false], [26, "id331", false], [26, "id407", false]], "decode() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.decode", false]], "decode() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.decode", false]], "delete() (in module arkouda)": [[26, "arkouda.delete", false]], "delete() (in module arkouda.numpy)": [[42, "arkouda.numpy.delete", false]], "delete() (in module arkouda.numpy.pdarraymanipulation)": [[49, "arkouda.numpy.pdarraymanipulation.delete", false]], "delete() (in module arkouda.pdarraymanipulation)": [[61, "arkouda.pdarraymanipulation.delete", false]], "delete_directory() (in module arkouda.io_util)": [[30, "arkouda.io_util.delete_directory", false]], "delimited_file_to_dict() (in module arkouda.io_util)": [[30, "arkouda.io_util.delimited_file_to_dict", false]], "device (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.device", false]], "device (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.device", false]], "df (arkouda.dataframe.dataframegroupby attribute)": [[22, "arkouda.dataframe.DataFrameGroupBy.df", false]], "df (arkouda.dataframegroupby attribute)": [[26, "arkouda.DataFrameGroupBy.df", false]], "diagonal() (arkouda.ndarray method)": [[26, "arkouda.ndarray.diagonal", false]], "diagonal() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.diagonal", false]], "dict_to_delimited_file() (in module arkouda.io_util)": [[30, "arkouda.io_util.dict_to_delimited_file", false]], "diff() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.diff", false]], "diff() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.diff", false]], "diff() (arkouda.series method)": [[26, "arkouda.Series.diff", false]], "diff() (arkouda.series.series method)": [[73, "arkouda.series.Series.diff", false]], "diff() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.diff", false]], "diffaggregate (class in arkouda)": [[26, "arkouda.DiffAggregate", false]], "diffaggregate (class in arkouda.dataframe)": [[22, "arkouda.dataframe.DiffAggregate", false]], "difference() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.difference", false]], "difference() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.difference", false]], "disableverbose() (in module arkouda)": [[26, "arkouda.disableVerbose", false]], "disableverbose() (in module arkouda.logger)": [[32, "arkouda.logger.disableVerbose", false]], "disconnect() (in module arkouda.client)": [[19, "arkouda.client.disconnect", false]], "divide() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.divide", false]], "divmod() (in module arkouda)": [[26, "arkouda.divmod", false]], "divmod() (in module arkouda.numpy)": [[42, "arkouda.numpy.divmod", false]], "divmod() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.divmod", false]], "divmod() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.divmod", false]], "dot() (arkouda.ndarray method)": [[26, "arkouda.ndarray.dot", false]], "dot() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.dot", false]], "dot() (in module arkouda)": [[26, "arkouda.dot", false]], "dot() (in module arkouda.numpy)": [[42, "arkouda.numpy.dot", false]], "dot() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.dot", false]], "dot() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.dot", false]], "drop() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.drop", false], [26, "id16", false]], "drop() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.drop", false]], "drop() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.drop", false]], "drop_duplicates() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.drop_duplicates", false], [26, "id17", false]], "drop_duplicates() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.drop_duplicates", false]], "drop_duplicates() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.drop_duplicates", false]], "dropna (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.dropna", false], [26, "id133", false], [26, "id180", false], [26, "id227", false], [26, "id274", false], [116, "arkouda.GroupBy.dropna", false]], "dropna (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.dropna", false]], "dropna (arkouda.numpy.groupby attribute)": [[42, "arkouda.numpy.GroupBy.dropna", false]], "dropna (arkouda.segarray.groupby attribute)": [[72, "arkouda.segarray.GroupBy.dropna", false]], "dropna (arkouda.util.groupby attribute)": [[80, "arkouda.util.GroupBy.dropna", false]], "dropna() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.dropna", false], [26, "id18", false]], "dropna() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.dropna", false]], "dt() (arkouda.series method)": [[26, "arkouda.Series.dt", false]], "dt() (arkouda.series.series method)": [[73, "arkouda.series.Series.dt", false]], "dtype (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.dtype", false]], "dtype (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.dtype", false]], "dtype (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.dtype", false]], "dtype (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.iinfo_object.dtype", false]], "dtype (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.dtype", false]], "dtype (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.dtype", false]], "dtype (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.dtype", false]], "dtype (arkouda.numpy.pdarray attribute)": [[42, "arkouda.numpy.pdarray.dtype", false], [42, "id273", false], [42, "id336", false], [42, "id356", false], [42, "id404", false], [42, "id424", false], [42, "id473", false], [42, "id493", false]], "dtype (arkouda.numpy.pdarrayclass.pdarray attribute)": [[47, "arkouda.numpy.pdarrayclass.pdarray.dtype", false], [47, "id0", false]], "dtype (arkouda.numpy.segarray attribute)": [[42, "arkouda.numpy.SegArray.dtype", false]], "dtype (arkouda.numpy.segarray.segarray attribute)": [[54, "arkouda.numpy.segarray.SegArray.dtype", false]], "dtype (arkouda.numpy.strings attribute)": [[42, "arkouda.numpy.Strings.dtype", false], [42, "id11", false], [42, "id159", false], [42, "id168", false], [42, "id83", false], [42, "id92", false]], "dtype (arkouda.numpy.strings.strings attribute)": [[56, "arkouda.numpy.strings.Strings.dtype", false], [56, "id0", false]], "dtype (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.dtype", false], [26, "id535", false], [26, "id555", false], [26, "id603", false], [26, "id623", false], [119, "arkouda.pdarray.dtype", false]], "dtype (arkouda.pdarrayclass.pdarray attribute)": [[59, "arkouda.pdarrayclass.pdarray.dtype", false], [59, "id0", false]], "dtype (arkouda.scipy.sparrayclass.sparray attribute)": [[67, "arkouda.scipy.sparrayclass.sparray.dtype", false], [67, "id0", false]], "dtype (arkouda.segarray attribute)": [[26, "arkouda.SegArray.dtype", false]], "dtype (arkouda.segarray.pdarray attribute)": [[72, "arkouda.segarray.pdarray.dtype", false], [72, "id5", false]], "dtype (arkouda.segarray.segarray attribute)": [[72, "arkouda.segarray.SegArray.dtype", false]], "dtype (arkouda.segarray.strings attribute)": [[72, "arkouda.segarray.Strings.dtype", false], [72, "id1", false]], "dtype (arkouda.series property)": [[26, "arkouda.Series.dtype", false]], "dtype (arkouda.series.series property)": [[73, "arkouda.series.Series.dtype", false]], "dtype (arkouda.sparrayclass.sparray attribute)": [[75, "arkouda.sparrayclass.sparray.dtype", false], [75, "id0", false]], "dtype (arkouda.strings attribute)": [[26, "arkouda.Strings.dtype", false], [26, "id323", false], [26, "id332", false], [26, "id399", false], [26, "id408", false]], "dtype (arkouda.strings.strings attribute)": [[77, "arkouda.strings.Strings.dtype", false], [77, "id0", false]], "dtype (arkouda.timeclass.pdarray attribute)": [[79, "arkouda.timeclass.pdarray.dtype", false], [79, "id0", false]], "dtype (arkouda.util.pdarray attribute)": [[80, "arkouda.util.pdarray.dtype", false], [80, "id5", false]], "dtype (arkouda.util.segarray attribute)": [[80, "arkouda.util.SegArray.dtype", false]], "dtype (arkouda.util.strings attribute)": [[80, "arkouda.util.Strings.dtype", false], [80, "id1", false]], "dtype (class in arkouda)": [[26, "arkouda.DType", false]], "dtype (class in arkouda.dtypes)": [[23, "arkouda.dtypes.DType", false]], "dtype (class in arkouda.numpy)": [[42, "arkouda.numpy.DType", false]], "dtype (class in arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.DType", false]], "dtype (class in arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.DType", false]], "dtype() (arkouda.categorical method)": [[26, "arkouda.Categorical.dtype", false]], "dtype() (arkouda.ndarray method)": [[26, "arkouda.ndarray.dtype", false]], "dtype() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.dtype", false]], "dtype() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.dtype", false]], "dtype() (in module arkouda)": [[26, "arkouda.dtype", false]], "dtype() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.dtype", false]], "dtype() (in module arkouda.numpy)": [[42, "arkouda.numpy.dtype", false]], "dtype() (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.dtype", false]], "dtype() (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.dtype", false]], "dtype() (in module arkouda.util)": [[80, "arkouda.util.dtype", false]], "dtypeobjects (in module arkouda)": [[26, "arkouda.DTypeObjects", false]], "dtypeobjects (in module arkouda.dtypes)": [[23, "arkouda.dtypes.DTypeObjects", false]], "dtypeobjects (in module arkouda.numpy)": [[42, "arkouda.numpy.DTypeObjects", false]], "dtypeobjects (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.DTypeObjects", false]], "dtypeobjects (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.DTypeObjects", false]], "dtypes (arkouda.dataframe property)": [[26, "arkouda.DataFrame.dtypes", false], [26, "id19", false]], "dtypes (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.dtypes", false]], "dtypes (in module arkouda)": [[26, "arkouda.DTypes", false]], "dtypes (in module arkouda.dtypes)": [[23, "arkouda.dtypes.DTypes", false]], "dtypes (in module arkouda.numpy)": [[42, "arkouda.numpy.DTypes", false]], "dtypes (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.DTypes", false]], "dtypes (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.DTypes", false]], "dump() (arkouda.ndarray method)": [[26, "arkouda.ndarray.dump", false]], "dump() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.dump", false]], "dumps() (arkouda.ndarray method)": [[26, "arkouda.ndarray.dumps", false]], "dumps() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.dumps", false]], "empty (arkouda.dataframe property)": [[26, "arkouda.DataFrame.empty", false], [26, "id20", false]], "empty (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.empty", false]], "empty() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.empty", false]], "empty_like() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.empty_like", false]], "enableverbose() (in module arkouda)": [[26, "arkouda.enableVerbose", false]], "enableverbose() (in module arkouda.logger)": [[32, "arkouda.logger.enableVerbose", false]], "encode() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.encode", false], [42, "id169", false], [42, "id20", false], [42, "id93", false]], "encode() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.encode", false]], "encode() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.encode", false]], "encode() (arkouda.strings method)": [[26, "arkouda.Strings.encode", false], [26, "id333", false], [26, "id409", false]], "encode() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.encode", false]], "encode() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.encode", false]], "end() (arkouda.match.match method)": [[33, "arkouda.match.Match.end", false], [125, "arkouda.match.Match.end", false]], "endswith() (arkouda.categorical method)": [[26, "arkouda.Categorical.endswith", false], [113, "arkouda.Categorical.endswith", false]], "endswith() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.endswith", false]], "endswith() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.endswith", false]], "endswith() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.endswith", false], [42, "id170", false], [42, "id21", false], [42, "id94", false]], "endswith() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.endswith", false]], "endswith() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.endswith", false]], "endswith() (arkouda.strings method)": [[26, "arkouda.Strings.endswith", false], [26, "id334", false], [26, "id410", false]], "endswith() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.endswith", false]], "endswith() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.endswith", false]], "enrich_inplace() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.enrich_inplace", false]], "enrich_inplace() (in module arkouda.util)": [[80, "arkouda.util.enrich_inplace", false]], "entry (arkouda.numpy.strings attribute)": [[42, "arkouda.numpy.Strings.entry", false], [42, "id154", false], [42, "id171", false], [42, "id6", false], [42, "id78", false], [42, "id95", false]], "entry (arkouda.numpy.strings.strings attribute)": [[56, "arkouda.numpy.strings.Strings.entry", false], [56, "id1", false]], "entry (arkouda.segarray.strings attribute)": [[72, "arkouda.segarray.Strings.entry", false], [72, "id2", false]], "entry (arkouda.strings attribute)": [[26, "arkouda.Strings.entry", false], [26, "id318", false], [26, "id335", false], [26, "id394", false], [26, "id411", false]], "entry (arkouda.strings.strings attribute)": [[77, "arkouda.strings.Strings.entry", false], [77, "id1", false]], "entry (arkouda.util.strings attribute)": [[80, "arkouda.util.Strings.entry", false], [80, "id2", false]], "eps (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.eps", false]], "equal() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.equal", false]], "equal_levels() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.equal_levels", false]], "equal_levels() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.equal_levels", false]], "equals() (arkouda.categorical method)": [[26, "arkouda.Categorical.equals", false]], "equals() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.equals", false]], "equals() (arkouda.index method)": [[26, "arkouda.Index.equals", false]], "equals() (arkouda.index.index method)": [[27, "arkouda.index.Index.equals", false]], "equals() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.equals", false]], "equals() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.equals", false], [42, "id293", false], [42, "id357", false], [42, "id425", false], [42, "id494", false]], "equals() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.equals", false]], "equals() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.equals", false], [42, "id172", false], [42, "id22", false], [42, "id96", false]], "equals() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.equals", false]], "equals() (arkouda.pdarray method)": [[26, "arkouda.pdarray.equals", false], [26, "id556", false], [26, "id624", false]], "equals() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.equals", false]], "equals() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.equals", false]], "equals() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.equals", false]], "equals() (arkouda.strings method)": [[26, "arkouda.Strings.equals", false], [26, "id336", false], [26, "id412", false]], "equals() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.equals", false]], "equals() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.equals", false]], "equals() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.equals", false]], "equals() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.equals", false]], "error (arkouda.logger.loglevel attribute)": [[32, "arkouda.logger.LogLevel.ERROR", false]], "error (arkouda.loglevel attribute)": [[26, "arkouda.LogLevel.ERROR", false]], "exp() (in module arkouda)": [[112, "arkouda.exp", false]], "exp() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.exp", false]], "expand() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.expand", false]], "expand() (in module arkouda.util)": [[80, "arkouda.util.expand", false]], "expand_dims() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.expand_dims", false]], "expm1() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.expm1", false]], "exponential() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.exponential", false]], "exponential() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.exponential", false]], "exponential() (in module arkouda.random.generator)": [[120, "arkouda.random.Generator.exponential", false]], "export() (in module arkouda)": [[26, "arkouda.export", false], [109, "arkouda.export", false]], "export() (in module arkouda.io)": [[29, "arkouda.io.export", false]], "export_uint() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.export_uint", false]], "export_uint() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.export_uint", false]], "export_uint() (arkouda.util.ipv4 method)": [[80, "arkouda.util.IPv4.export_uint", false]], "eye() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.eye", false]], "factory() (arkouda.index static method)": [[26, "arkouda.Index.factory", false]], "factory() (arkouda.index.index static method)": [[27, "arkouda.index.Index.factory", false]], "fields (class in arkouda)": [[26, "arkouda.Fields", false]], "fields (class in arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.Fields", false]], "fill() (arkouda.ndarray method)": [[26, "arkouda.ndarray.fill", false]], "fill() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.fill", false]], "fill() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.fill", false], [42, "id294", false], [42, "id358", false], [42, "id426", false], [42, "id495", false]], "fill() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.fill", false]], "fill() (arkouda.pdarray method)": [[26, "arkouda.pdarray.fill", false], [26, "id557", false], [26, "id625", false]], "fill() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.fill", false]], "fill() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.fill", false]], "fill() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.fill", false]], "fill() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.fill", false]], "fill_vals() (arkouda.scipy.sparrayclass.sparray method)": [[67, "arkouda.scipy.sparrayclass.sparray.fill_vals", false]], "fill_vals() (arkouda.sparrayclass.sparray method)": [[75, "arkouda.sparrayclass.sparray.fill_vals", false]], "fillna() (arkouda.series method)": [[26, "arkouda.Series.fillna", false]], "fillna() (arkouda.series.series method)": [[73, "arkouda.series.Series.fillna", false]], "filter() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.filter", false]], "filter() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.filter", false]], "filter() (arkouda.segarray method)": [[26, "arkouda.SegArray.filter", false]], "filter() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.filter", false]], "filter() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.filter", false]], "filter_by_range() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.filter_by_range", false], [26, "id21", false]], "filter_by_range() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.filter_by_range", false]], "find() (in module arkouda.alignment)": [[3, "arkouda.alignment.find", false]], "find_locations() (arkouda.matcher.matcher method)": [[34, "arkouda.matcher.Matcher.find_locations", false]], "find_locations() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.find_locations", false], [42, "id173", false], [42, "id23", false], [42, "id97", false]], "find_locations() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.find_locations", false]], "find_locations() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.find_locations", false]], "find_locations() (arkouda.strings method)": [[26, "arkouda.Strings.find_locations", false], [26, "id337", false], [26, "id413", false]], "find_locations() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.find_locations", false]], "find_locations() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.find_locations", false]], "find_matches() (arkouda.match.match method)": [[33, "arkouda.match.Match.find_matches", false], [125, "arkouda.match.Match.find_matches", false]], "findall() (arkouda.matcher.matcher method)": [[34, "arkouda.matcher.Matcher.findall", false]], "findall() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.findall", false], [42, "id174", false], [42, "id24", false], [42, "id98", false]], "findall() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.findall", false]], "findall() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.findall", false]], "findall() (arkouda.strings method)": [[26, "arkouda.Strings.findall", false], [26, "id338", false], [26, "id414", false]], "findall() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.findall", false]], "findall() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.findall", false]], "finfo() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.finfo", false]], "finfo_object (class in arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.finfo_object", false]], "first() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.first", false]], "first() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.first", false]], "first() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.first", false]], "first() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.first", false]], "first() (arkouda.groupby method)": [[26, "arkouda.GroupBy.first", false], [26, "id147", false], [26, "id194", false], [26, "id241", false], [26, "id288", false], [116, "arkouda.GroupBy.first", false]], "first() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.first", false]], "first() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.first", false]], "first() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.first", false]], "first() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.first", false]], "flags() (arkouda.ndarray method)": [[26, "arkouda.ndarray.flags", false]], "flags() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.flags", false]], "flat() (arkouda.ndarray method)": [[26, "arkouda.ndarray.flat", false]], "flat() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.flat", false]], "flatten() (arkouda.ndarray method)": [[26, "arkouda.ndarray.flatten", false]], "flatten() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.flatten", false]], "flatten() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.flatten", false], [42, "id295", false], [42, "id359", false], [42, "id427", false], [42, "id496", false]], "flatten() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.flatten", false]], "flatten() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.flatten", false], [42, "id175", false], [42, "id25", false], [42, "id99", false]], "flatten() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.flatten", false]], "flatten() (arkouda.pdarray method)": [[26, "arkouda.pdarray.flatten", false], [26, "id558", false], [26, "id626", false]], "flatten() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.flatten", false]], "flatten() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.flatten", false]], "flatten() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.flatten", false]], "flatten() (arkouda.strings method)": [[26, "arkouda.Strings.flatten", false], [26, "id339", false], [26, "id415", false]], "flatten() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.flatten", false]], "flatten() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.flatten", false]], "flatten() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.flatten", false]], "flatten() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.flatten", false]], "flip() (in module arkouda)": [[26, "arkouda.flip", false]], "flip() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.flip", false]], "flip() (in module arkouda.numpy)": [[42, "arkouda.numpy.flip", false]], "float (arkouda.dtype attribute)": [[26, "arkouda.DType.FLOAT", false]], "float (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.FLOAT", false]], "float (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.FLOAT", false]], "float (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.FLOAT", false]], "float (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.FLOAT", false]], "float32 (arkouda.dtype attribute)": [[26, "arkouda.DType.FLOAT32", false]], "float32 (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.FLOAT32", false]], "float32 (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.FLOAT32", false]], "float32 (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.FLOAT32", false]], "float32 (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.FLOAT32", false]], "float64 (arkouda.dtype attribute)": [[26, "arkouda.DType.FLOAT64", false]], "float64 (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.FLOAT64", false]], "float64 (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.FLOAT64", false]], "float64 (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.FLOAT64", false]], "float64 (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.FLOAT64", false]], "float_scalars (in module arkouda)": [[26, "arkouda.float_scalars", false]], "float_scalars (in module arkouda.dtypes)": [[23, "arkouda.dtypes.float_scalars", false]], "float_scalars (in module arkouda.numpy)": [[42, "arkouda.numpy.float_scalars", false]], "float_scalars (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.float_scalars", false]], "float_scalars (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.float_scalars", false]], "float_scalars (in module arkouda.util)": [[80, "arkouda.util.float_scalars", false]], "floor() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.floor", false]], "floor_divide() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.floor_divide", false]], "fmod() (in module arkouda)": [[26, "arkouda.fmod", false]], "fmod() (in module arkouda.numpy)": [[42, "arkouda.numpy.fmod", false]], "fmod() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.fmod", false]], "fmod() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.fmod", false]], "format() (arkouda.bitvector method)": [[26, "arkouda.BitVector.format", false]], "format() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.format", false]], "format() (arkouda.client_dtypes.fields method)": [[20, "arkouda.client_dtypes.Fields.format", false]], "format() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.format", false]], "format() (arkouda.fields method)": [[26, "arkouda.Fields.format", false]], "format() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.format", false]], "format() (arkouda.util.bitvector method)": [[80, "arkouda.util.BitVector.format", false]], "format() (arkouda.util.ipv4 method)": [[80, "arkouda.util.IPv4.format", false]], "format_other() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.format_other", false], [42, "id296", false], [42, "id360", false], [42, "id428", false], [42, "id497", false]], "format_other() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.format_other", false]], "format_other() (arkouda.pdarray method)": [[26, "arkouda.pdarray.format_other", false], [26, "id559", false], [26, "id627", false]], "format_other() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.format_other", false]], "format_other() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.format_other", false]], "format_other() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.format_other", false]], "format_other() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.format_other", false]], "from_codes() (arkouda.categorical class method)": [[113, "arkouda.Categorical.from_codes", false]], "from_codes() (arkouda.categorical method)": [[26, "arkouda.Categorical.from_codes", false]], "from_codes() (arkouda.categorical.categorical class method)": [[18, "arkouda.categorical.Categorical.from_codes", false]], "from_codes() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.from_codes", false]], "from_dlpack() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.from_dlpack", false]], "from_multi_array() (arkouda.numpy.segarray class method)": [[42, "arkouda.numpy.SegArray.from_multi_array", false]], "from_multi_array() (arkouda.numpy.segarray.segarray class method)": [[54, "arkouda.numpy.segarray.SegArray.from_multi_array", false]], "from_multi_array() (arkouda.segarray class method)": [[26, "arkouda.SegArray.from_multi_array", false]], "from_multi_array() (arkouda.segarray.segarray class method)": [[72, "arkouda.segarray.SegArray.from_multi_array", false]], "from_multi_array() (arkouda.util.segarray class method)": [[80, "arkouda.util.SegArray.from_multi_array", false]], "from_pandas() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.from_pandas", false], [26, "id22", false]], "from_pandas() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.from_pandas", false]], "from_parts() (arkouda.numpy.segarray class method)": [[42, "arkouda.numpy.SegArray.from_parts", false]], "from_parts() (arkouda.numpy.segarray.segarray class method)": [[54, "arkouda.numpy.segarray.SegArray.from_parts", false]], "from_parts() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.from_parts", false], [42, "id26", false]], "from_parts() (arkouda.numpy.strings static method)": [[42, "id100", false], [42, "id176", false]], "from_parts() (arkouda.numpy.strings.strings static method)": [[56, "arkouda.numpy.strings.Strings.from_parts", false]], "from_parts() (arkouda.segarray class method)": [[26, "arkouda.SegArray.from_parts", false]], "from_parts() (arkouda.segarray.segarray class method)": [[72, "arkouda.segarray.SegArray.from_parts", false]], "from_parts() (arkouda.segarray.strings static method)": [[72, "arkouda.segarray.Strings.from_parts", false]], "from_parts() (arkouda.strings method)": [[26, "arkouda.Strings.from_parts", false]], "from_parts() (arkouda.strings static method)": [[26, "id340", false], [26, "id416", false]], "from_parts() (arkouda.strings.strings static method)": [[77, "arkouda.strings.Strings.from_parts", false]], "from_parts() (arkouda.util.segarray class method)": [[80, "arkouda.util.SegArray.from_parts", false]], "from_parts() (arkouda.util.strings static method)": [[80, "arkouda.util.Strings.from_parts", false]], "from_return_msg() (arkouda.bitvector class method)": [[26, "arkouda.BitVector.from_return_msg", false]], "from_return_msg() (arkouda.categorical method)": [[26, "arkouda.Categorical.from_return_msg", false]], "from_return_msg() (arkouda.categorical.categorical class method)": [[18, "arkouda.categorical.Categorical.from_return_msg", false]], "from_return_msg() (arkouda.client_dtypes.bitvector class method)": [[20, "arkouda.client_dtypes.BitVector.from_return_msg", false]], "from_return_msg() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.from_return_msg", false], [26, "id23", false]], "from_return_msg() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.from_return_msg", false]], "from_return_msg() (arkouda.groupby method)": [[26, "arkouda.GroupBy.from_return_msg", false], [26, "id148", false], [26, "id195", false], [26, "id242", false], [26, "id289", false]], "from_return_msg() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.from_return_msg", false]], "from_return_msg() (arkouda.index class method)": [[26, "arkouda.Index.from_return_msg", false]], "from_return_msg() (arkouda.index.index class method)": [[27, "arkouda.index.Index.from_return_msg", false]], "from_return_msg() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.from_return_msg", false]], "from_return_msg() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.from_return_msg", false]], "from_return_msg() (arkouda.numpy.segarray class method)": [[42, "arkouda.numpy.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.numpy.segarray.segarray class method)": [[54, "arkouda.numpy.segarray.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.from_return_msg", false], [42, "id27", false]], "from_return_msg() (arkouda.numpy.strings static method)": [[42, "id101", false], [42, "id177", false]], "from_return_msg() (arkouda.numpy.strings.strings static method)": [[56, "arkouda.numpy.strings.Strings.from_return_msg", false]], "from_return_msg() (arkouda.segarray class method)": [[26, "arkouda.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.from_return_msg", false]], "from_return_msg() (arkouda.segarray.segarray class method)": [[72, "arkouda.segarray.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.segarray.strings static method)": [[72, "arkouda.segarray.Strings.from_return_msg", false]], "from_return_msg() (arkouda.series method)": [[26, "arkouda.Series.from_return_msg", false]], "from_return_msg() (arkouda.series.series method)": [[73, "arkouda.series.Series.from_return_msg", false]], "from_return_msg() (arkouda.strings method)": [[26, "arkouda.Strings.from_return_msg", false]], "from_return_msg() (arkouda.strings static method)": [[26, "id341", false], [26, "id417", false]], "from_return_msg() (arkouda.strings.strings static method)": [[77, "arkouda.strings.Strings.from_return_msg", false]], "from_return_msg() (arkouda.util.bitvector class method)": [[80, "arkouda.util.BitVector.from_return_msg", false]], "from_return_msg() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.from_return_msg", false]], "from_return_msg() (arkouda.util.segarray class method)": [[80, "arkouda.util.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.util.strings static method)": [[80, "arkouda.util.Strings.from_return_msg", false]], "from_series() (in module arkouda)": [[26, "arkouda.from_series", false]], "from_series() (in module arkouda.numpy)": [[42, "arkouda.numpy.from_series", false], [42, "id239", false]], "from_series() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.from_series", false]], "from_series() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.from_series", false]], "from_series() (in module arkouda.timeclass)": [[79, "arkouda.timeclass.from_series", false]], "full() (in module arkouda)": [[26, "arkouda.full", false]], "full() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.full", false]], "full() (in module arkouda.numpy)": [[42, "arkouda.numpy.full", false]], "full() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.full", false]], "full() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.full", false]], "full_like() (in module arkouda)": [[26, "arkouda.full_like", false]], "full_like() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.full_like", false]], "full_like() (in module arkouda.numpy)": [[42, "arkouda.numpy.full_like", false]], "full_like() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.full_like", false]], "full_like() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.full_like", false]], "full_match_bool (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.full_match_bool", false]], "full_match_ind (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.full_match_ind", false]], "fullmatch() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.fullmatch", false], [42, "id102", false], [42, "id178", false], [42, "id28", false]], "fullmatch() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.fullmatch", false]], "fullmatch() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.fullmatch", false]], "fullmatch() (arkouda.strings method)": [[26, "arkouda.Strings.fullmatch", false], [26, "id342", false], [26, "id418", false]], "fullmatch() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.fullmatch", false]], "fullmatch() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.fullmatch", false]], "gb (arkouda.dataframe.dataframegroupby attribute)": [[22, "arkouda.dataframe.DataFrameGroupBy.gb", false]], "gb (arkouda.dataframe.diffaggregate attribute)": [[22, "arkouda.dataframe.DiffAggregate.gb", false]], "gb (arkouda.dataframegroupby attribute)": [[26, "arkouda.DataFrameGroupBy.gb", false]], "gb (arkouda.diffaggregate attribute)": [[26, "arkouda.DiffAggregate.gb", false]], "gb_key_names (arkouda.dataframe.dataframegroupby attribute)": [[22, "arkouda.dataframe.DataFrameGroupBy.gb_key_names", false]], "gb_key_names (arkouda.dataframegroupby attribute)": [[26, "arkouda.DataFrameGroupBy.gb_key_names", false]], "gen_ranges() (in module arkouda.join)": [[31, "arkouda.join.gen_ranges", false]], "generate_history() (in module arkouda.client)": [[19, "arkouda.client.generate_history", false]], "generate_token() (in module arkouda.security)": [[71, "arkouda.security.generate_token", false]], "generate_username_token_json() (in module arkouda.security)": [[71, "arkouda.security.generate_username_token_json", false]], "generator (class in arkouda.numpy.random)": [[52, "arkouda.numpy.random.Generator", false]], "generator (class in arkouda.random)": [[64, "arkouda.random.Generator", false], [120, "arkouda.random.Generator", false]], "generic_concat() (in module arkouda)": [[26, "arkouda.generic_concat", false]], "generic_concat() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.generic_concat", false]], "generic_concat() (in module arkouda.util)": [[80, "arkouda.util.generic_concat", false]], "generic_moment() (arkouda.scipy.stats.chi2 method)": [[70, "arkouda.scipy.stats.chi2.generic_moment", false]], "generic_msg() (in module arkouda)": [[26, "arkouda.generic_msg", false]], "generic_msg() (in module arkouda.numpy)": [[42, "arkouda.numpy.generic_msg", false]], "get_arkouda_client_directory() (in module arkouda.security)": [[71, "arkouda.security.get_arkouda_client_directory", false]], "get_byteorder() (in module arkouda)": [[26, "arkouda.get_byteorder", false]], "get_byteorder() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.get_byteorder", false]], "get_byteorder() (in module arkouda.numpy)": [[42, "arkouda.numpy.get_byteorder", false]], "get_byteorder() (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.get_byteorder", false]], "get_byteorder() (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.get_byteorder", false]], "get_bytes() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.get_bytes", false], [42, "id103", false], [42, "id179", false], [42, "id29", false]], "get_bytes() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.get_bytes", false]], "get_bytes() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.get_bytes", false]], "get_bytes() (arkouda.strings method)": [[26, "arkouda.Strings.get_bytes", false], [26, "id343", false], [26, "id419", false]], "get_bytes() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.get_bytes", false]], "get_bytes() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.get_bytes", false]], "get_callback() (in module arkouda)": [[26, "arkouda.get_callback", false]], "get_callback() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.get_callback", false]], "get_callback() (in module arkouda.util)": [[80, "arkouda.util.get_callback", false]], "get_columns() (in module arkouda)": [[26, "arkouda.get_columns", false]], "get_columns() (in module arkouda.io)": [[29, "arkouda.io.get_columns", false]], "get_comm_diagnostics() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics", false]], "get_comm_diagnostics_amo() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_amo", false]], "get_comm_diagnostics_cache_get_hits() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_get_hits", false]], "get_comm_diagnostics_cache_get_misses() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_get_misses", false]], "get_comm_diagnostics_cache_num_page_readaheads() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_num_page_readaheads", false]], "get_comm_diagnostics_cache_num_prefetches() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_num_prefetches", false]], "get_comm_diagnostics_cache_prefetch_unused() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_prefetch_unused", false]], "get_comm_diagnostics_cache_prefetch_waited() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_prefetch_waited", false]], "get_comm_diagnostics_cache_put_hits() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_put_hits", false]], "get_comm_diagnostics_cache_put_misses() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_put_misses", false]], "get_comm_diagnostics_cache_readahead_unused() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_readahead_unused", false]], "get_comm_diagnostics_cache_readahead_waited() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_readahead_waited", false]], "get_comm_diagnostics_execute_on() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_execute_on", false]], "get_comm_diagnostics_execute_on_fast() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_execute_on_fast", false]], "get_comm_diagnostics_execute_on_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_execute_on_nb", false]], "get_comm_diagnostics_get() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_get", false]], "get_comm_diagnostics_get_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_get_nb", false]], "get_comm_diagnostics_put() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_put", false]], "get_comm_diagnostics_put_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_put_nb", false]], "get_comm_diagnostics_try_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_try_nb", false]], "get_comm_diagnostics_wait_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_wait_nb", false]], "get_config() (in module arkouda.client)": [[19, "arkouda.client.get_config", false]], "get_datasets() (in module arkouda)": [[26, "arkouda.get_datasets", false], [109, "arkouda.get_datasets", false]], "get_datasets() (in module arkouda.io)": [[29, "arkouda.io.get_datasets", false]], "get_directory() (in module arkouda.io_util)": [[30, "arkouda.io_util.get_directory", false]], "get_filetype() (in module arkouda)": [[26, "arkouda.get_filetype", false]], "get_filetype() (in module arkouda.io)": [[29, "arkouda.io.get_filetype", false]], "get_home_directory() (in module arkouda.security)": [[71, "arkouda.security.get_home_directory", false]], "get_jth() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.get_jth", false]], "get_jth() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.get_jth", false]], "get_jth() (arkouda.segarray method)": [[26, "arkouda.SegArray.get_jth", false]], "get_jth() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.get_jth", false]], "get_jth() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.get_jth", false]], "get_length_n() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.get_length_n", false]], "get_length_n() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.get_length_n", false]], "get_length_n() (arkouda.segarray method)": [[26, "arkouda.SegArray.get_length_n", false]], "get_length_n() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.get_length_n", false]], "get_length_n() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.get_length_n", false]], "get_lengths() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.get_lengths", false], [42, "id104", false], [42, "id180", false], [42, "id30", false]], "get_lengths() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.get_lengths", false]], "get_lengths() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.get_lengths", false]], "get_lengths() (arkouda.strings method)": [[26, "arkouda.Strings.get_lengths", false], [26, "id344", false], [26, "id420", false]], "get_lengths() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.get_lengths", false]], "get_lengths() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.get_lengths", false]], "get_level_values() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.get_level_values", false]], "get_level_values() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.get_level_values", false]], "get_match() (arkouda.matcher.matcher method)": [[34, "arkouda.matcher.Matcher.get_match", false]], "get_max_array_rank() (in module arkouda.client)": [[19, "arkouda.client.get_max_array_rank", false]], "get_mem_avail() (in module arkouda.client)": [[19, "arkouda.client.get_mem_avail", false]], "get_mem_status() (in module arkouda.client)": [[19, "arkouda.client.get_mem_status", false]], "get_mem_used() (in module arkouda.client)": [[19, "arkouda.client.get_mem_used", false]], "get_ngrams() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.get_ngrams", false]], "get_ngrams() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.get_ngrams", false]], "get_ngrams() (arkouda.segarray method)": [[26, "arkouda.SegArray.get_ngrams", false]], "get_ngrams() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.get_ngrams", false]], "get_ngrams() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.get_ngrams", false]], "get_null_indices() (in module arkouda)": [[26, "arkouda.get_null_indices", false]], "get_null_indices() (in module arkouda.io)": [[29, "arkouda.io.get_null_indices", false]], "get_offsets() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.get_offsets", false], [42, "id105", false], [42, "id181", false], [42, "id31", false]], "get_offsets() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.get_offsets", false]], "get_offsets() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.get_offsets", false]], "get_offsets() (arkouda.strings method)": [[26, "arkouda.Strings.get_offsets", false], [26, "id345", false], [26, "id421", false]], "get_offsets() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.get_offsets", false]], "get_offsets() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.get_offsets", false]], "get_prefixes() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.get_prefixes", false], [42, "id106", false], [42, "id182", false], [42, "id32", false]], "get_prefixes() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.get_prefixes", false]], "get_prefixes() (arkouda.segarray method)": [[26, "arkouda.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.get_prefixes", false]], "get_prefixes() (arkouda.strings method)": [[26, "arkouda.Strings.get_prefixes", false], [26, "id346", false], [26, "id422", false]], "get_prefixes() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.get_prefixes", false]], "get_prefixes() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.get_prefixes", false]], "get_server_byteorder() (in module arkouda)": [[26, "arkouda.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.numpy)": [[42, "arkouda.numpy.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.get_server_byteorder", false]], "get_server_commands() (in module arkouda.client)": [[19, "arkouda.client.get_server_commands", false]], "get_suffixes() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.get_suffixes", false], [42, "id107", false], [42, "id183", false], [42, "id33", false]], "get_suffixes() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.get_suffixes", false]], "get_suffixes() (arkouda.segarray method)": [[26, "arkouda.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.get_suffixes", false]], "get_suffixes() (arkouda.strings method)": [[26, "arkouda.Strings.get_suffixes", false], [26, "id347", false], [26, "id423", false]], "get_suffixes() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.get_suffixes", false]], "get_suffixes() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.get_suffixes", false]], "get_username() (in module arkouda.security)": [[71, "arkouda.security.get_username", false]], "getarkoudalogger() (in module arkouda)": [[26, "arkouda.getArkoudaLogger", false]], "getarkoudalogger() (in module arkouda.numpy)": [[42, "arkouda.numpy.getArkoudaLogger", false]], "getarkoudalogger() (in module arkouda.segarray)": [[72, "arkouda.segarray.getArkoudaLogger", false]], "getfield() (arkouda.ndarray method)": [[26, "arkouda.ndarray.getfield", false]], "getfield() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.getfield", false]], "greater() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.greater", false]], "greater_equal() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.greater_equal", false]], "group() (arkouda.categorical method)": [[26, "arkouda.Categorical.group", false]], "group() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.group", false]], "group() (arkouda.match.match method)": [[33, "arkouda.match.Match.group", false], [125, "arkouda.match.Match.group", false]], "group() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.group", false]], "group() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.group", false], [42, "id108", false], [42, "id184", false], [42, "id34", false]], "group() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.group", false]], "group() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.group", false]], "group() (arkouda.strings method)": [[26, "arkouda.Strings.group", false], [26, "id348", false], [26, "id424", false]], "group() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.group", false]], "group() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.group", false]], "groupby (class in arkouda)": [[26, "arkouda.GroupBy", false], [26, "id125", false], [26, "id172", false], [26, "id219", false], [26, "id266", false], [116, "arkouda.GroupBy", false]], "groupby (class in arkouda.groupbyclass)": [[24, "arkouda.groupbyclass.GroupBy", false]], "groupby (class in arkouda.numpy)": [[42, "arkouda.numpy.GroupBy", false]], "groupby (class in arkouda.segarray)": [[72, "arkouda.segarray.GroupBy", false]], "groupby (class in arkouda.util)": [[80, "arkouda.util.GroupBy", false]], "groupby() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.GroupBy", false], [26, "id3", false], [26, "arkouda.DataFrame.groupby", false], [26, "id24", false]], "groupby() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.GroupBy", false], [22, "arkouda.dataframe.DataFrame.groupby", false]], "groupby() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.groupby", false]], "groupby_reduction_types (class in arkouda)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES", false]], "groupby_reduction_types (class in arkouda.groupbyclass)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES", false]], "grouping (arkouda.numpy.segarray property)": [[42, "arkouda.numpy.SegArray.grouping", false]], "grouping (arkouda.numpy.segarray.segarray property)": [[54, "arkouda.numpy.segarray.SegArray.grouping", false]], "grouping (arkouda.segarray property)": [[26, "arkouda.SegArray.grouping", false]], "grouping (arkouda.segarray.segarray property)": [[72, "arkouda.segarray.SegArray.grouping", false]], "grouping (arkouda.util.segarray property)": [[80, "arkouda.util.SegArray.grouping", false]], "handled_functions (in module arkouda.array_api.array_object)": [[5, "arkouda.array_api.array_object.HANDLED_FUNCTIONS", false]], "has_repeat_labels() (arkouda.series method)": [[26, "arkouda.Series.has_repeat_labels", false]], "has_repeat_labels() (arkouda.series.series method)": [[73, "arkouda.series.Series.has_repeat_labels", false]], "hash() (arkouda.categorical method)": [[26, "arkouda.Categorical.hash", false]], "hash() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.hash", false]], "hash() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.hash", false]], "hash() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.hash", false]], "hash() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.hash", false]], "hash() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.hash", false], [42, "id109", false], [42, "id185", false], [42, "id35", false]], "hash() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.hash", false]], "hash() (arkouda.segarray method)": [[26, "arkouda.SegArray.hash", false]], "hash() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.hash", false]], "hash() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.hash", false]], "hash() (arkouda.strings method)": [[26, "arkouda.Strings.hash", false], [26, "id349", false], [26, "id425", false]], "hash() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.hash", false]], "hash() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.hash", false]], "hash() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.hash", false]], "hasnans() (arkouda.series method)": [[26, "arkouda.Series.hasnans", false]], "hasnans() (arkouda.series.series method)": [[73, "arkouda.series.Series.hasnans", false]], "head() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.head", false], [26, "id25", false]], "head() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.head", false]], "head() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.head", false]], "head() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.head", false]], "head() (arkouda.groupby method)": [[26, "arkouda.GroupBy.head", false], [26, "id149", false], [26, "id196", false], [26, "id243", false], [26, "id290", false], [116, "arkouda.GroupBy.head", false]], "head() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.head", false]], "head() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.head", false]], "head() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.head", false]], "head() (arkouda.series method)": [[26, "arkouda.Series.head", false]], "head() (arkouda.series.series method)": [[73, "arkouda.series.Series.head", false]], "head() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.head", false]], "head() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.head", false]], "head() (in module arkouda.series)": [[122, "arkouda.Series.head", false]], "hist_all() (in module arkouda)": [[26, "arkouda.hist_all", false]], "hist_all() (in module arkouda.plotting)": [[63, "arkouda.plotting.hist_all", false]], "histogram() (in module arkouda)": [[117, "arkouda.histogram", false]], "historyretriever (class in arkouda.history)": [[25, "arkouda.history.HistoryRetriever", false]], "hour (arkouda.datetime property)": [[26, "arkouda.Datetime.hour", false], [26, "id65", false], [26, "id98", false]], "hour (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.hour", false]], "hour (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.hour", false]], "hour (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.hour", false]], "hour (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.hour", false]], "iat (arkouda.series property)": [[26, "arkouda.Series.iat", false]], "iat (arkouda.series.series property)": [[73, "arkouda.series.Series.iat", false]], "identity() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.identity", false]], "identity() (in module arkouda.util)": [[80, "arkouda.util.identity", false]], "iinfo() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.iinfo", false]], "iinfo_object (class in arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.iinfo_object", false]], "iloc (arkouda.series property)": [[26, "arkouda.Series.iloc", false]], "iloc (arkouda.series.series property)": [[73, "arkouda.series.Series.iloc", false]], "imag() (arkouda.ndarray method)": [[26, "arkouda.ndarray.imag", false]], "imag() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.imag", false]], "imag() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.imag", false]], "implements_numpy() (in module arkouda.array_api.array_object)": [[5, "arkouda.array_api.array_object.implements_numpy", false]], "import_data() (in module arkouda)": [[26, "arkouda.import_data", false], [109, "arkouda.import_data", false]], "import_data() (in module arkouda.io)": [[29, "arkouda.io.import_data", false]], "in1d() (arkouda.categorical method)": [[26, "arkouda.Categorical.in1d", false]], "in1d() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.in1d", false]], "in1d() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.in1d", false]], "in1d() (in module arkouda)": [[26, "arkouda.in1d", false], [26, "id506", false], [123, "arkouda.in1d", false]], "in1d() (in module arkouda.numpy)": [[42, "arkouda.numpy.in1d", false]], "in1d() (in module arkouda.numpy.pdarraysetops)": [[50, "arkouda.numpy.pdarraysetops.in1d", false]], "in1d() (in module arkouda.pdarraysetops)": [[62, "arkouda.pdarraysetops.in1d", false]], "in1d_intervals() (in module arkouda.alignment)": [[3, "arkouda.alignment.in1d_intervals", false]], "index (arkouda.dataframe property)": [[26, "arkouda.DataFrame.index", false], [26, "id26", false]], "index (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.index", false]], "index (arkouda.index property)": [[26, "arkouda.Index.index", false]], "index (arkouda.index.index property)": [[27, "arkouda.index.Index.index", false]], "index (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.index", false]], "index (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.index", false]], "index (class in arkouda)": [[26, "arkouda.Index", false], [110, "arkouda.Index", false]], "index (class in arkouda.index)": [[27, "arkouda.index.Index", false]], "index (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.Index", false]], "index (in module arkouda.util)": [[80, "arkouda.util.Index", false]], "indexof1d() (in module arkouda)": [[26, "arkouda.indexof1d", false]], "indexof1d() (in module arkouda.numpy)": [[42, "arkouda.numpy.indexof1d", false]], "indexof1d() (in module arkouda.numpy.pdarraysetops)": [[50, "arkouda.numpy.pdarraysetops.indexof1d", false]], "indexof1d() (in module arkouda.pdarraysetops)": [[62, "arkouda.pdarraysetops.indexof1d", false]], "indices (arkouda.array_api.set_functions.uniqueallresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueAllResult.indices", false]], "indices (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.indices", false]], "inferred_type (arkouda.categorical property)": [[26, "arkouda.Categorical.inferred_type", false]], "inferred_type (arkouda.categorical.categorical property)": [[18, "arkouda.categorical.Categorical.inferred_type", false]], "inferred_type (arkouda.index property)": [[26, "arkouda.Index.inferred_type", false]], "inferred_type (arkouda.index.index property)": [[27, "arkouda.index.Index.inferred_type", false]], "inferred_type (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.inferred_type", false]], "inferred_type (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.inferred_type", false]], "inferred_type (arkouda.numpy.categorical property)": [[42, "arkouda.numpy.Categorical.inferred_type", false]], "inferred_type (arkouda.numpy.pdarray property)": [[42, "arkouda.numpy.pdarray.inferred_type", false], [42, "id297", false], [42, "id361", false], [42, "id429", false], [42, "id498", false]], "inferred_type (arkouda.numpy.pdarrayclass.pdarray property)": [[47, "arkouda.numpy.pdarrayclass.pdarray.inferred_type", false]], "inferred_type (arkouda.numpy.strings property)": [[42, "arkouda.numpy.Strings.inferred_type", false], [42, "id110", false], [42, "id186", false], [42, "id36", false]], "inferred_type (arkouda.numpy.strings.strings property)": [[56, "arkouda.numpy.strings.Strings.inferred_type", false]], "inferred_type (arkouda.pdarray property)": [[26, "arkouda.pdarray.inferred_type", false], [26, "id560", false], [26, "id628", false]], "inferred_type (arkouda.pdarrayclass.pdarray property)": [[59, "arkouda.pdarrayclass.pdarray.inferred_type", false]], "inferred_type (arkouda.segarray.pdarray property)": [[72, "arkouda.segarray.pdarray.inferred_type", false]], "inferred_type (arkouda.segarray.strings property)": [[72, "arkouda.segarray.Strings.inferred_type", false]], "inferred_type (arkouda.strings property)": [[26, "arkouda.Strings.inferred_type", false], [26, "id350", false], [26, "id426", false]], "inferred_type (arkouda.strings.strings property)": [[77, "arkouda.strings.Strings.inferred_type", false]], "inferred_type (arkouda.timeclass.pdarray property)": [[79, "arkouda.timeclass.pdarray.inferred_type", false]], "inferred_type (arkouda.util.pdarray property)": [[80, "arkouda.util.pdarray.inferred_type", false]], "inferred_type (arkouda.util.strings property)": [[80, "arkouda.util.Strings.inferred_type", false]], "info (arkouda.dataframe property)": [[26, "arkouda.DataFrame.info", false], [26, "id27", false]], "info (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.info", false]], "info (arkouda.logger.loglevel attribute)": [[32, "arkouda.logger.LogLevel.INFO", false]], "info (arkouda.loglevel attribute)": [[26, "arkouda.LogLevel.INFO", false]], "info() (arkouda.categorical method)": [[26, "arkouda.Categorical.info", false]], "info() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.info", false]], "info() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.info", false]], "info() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.info", false], [42, "id298", false], [42, "id362", false], [42, "id430", false], [42, "id499", false]], "info() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.info", false]], "info() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.info", false], [42, "id111", false], [42, "id187", false], [42, "id37", false]], "info() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.info", false]], "info() (arkouda.pdarray method)": [[26, "arkouda.pdarray.info", false], [26, "id561", false], [26, "id629", false]], "info() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.info", false]], "info() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.info", false]], "info() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.info", false]], "info() (arkouda.strings method)": [[26, "arkouda.Strings.info", false], [26, "id351", false], [26, "id427", false]], "info() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.info", false]], "info() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.info", false]], "info() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.info", false]], "info() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.info", false]], "information() (in module arkouda)": [[26, "arkouda.information", false]], "information() (in module arkouda.infoclass)": [[28, "arkouda.infoclass.information", false]], "int (arkouda.dtype attribute)": [[26, "arkouda.DType.INT", false]], "int (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.INT", false]], "int (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.INT", false]], "int (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.INT", false]], "int (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.INT", false]], "int16 (arkouda.dtype attribute)": [[26, "arkouda.DType.INT16", false]], "int16 (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.INT16", false]], "int16 (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.INT16", false]], "int16 (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.INT16", false]], "int16 (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.INT16", false]], "int32 (arkouda.dtype attribute)": [[26, "arkouda.DType.INT32", false]], "int32 (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.INT32", false]], "int32 (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.INT32", false]], "int32 (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.INT32", false]], "int32 (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.INT32", false]], "int64 (arkouda.dtype attribute)": [[26, "arkouda.DType.INT64", false]], "int64 (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.INT64", false]], "int64 (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.INT64", false]], "int64 (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.INT64", false]], "int64 (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.INT64", false]], "int8 (arkouda.dtype attribute)": [[26, "arkouda.DType.INT8", false]], "int8 (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.INT8", false]], "int8 (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.INT8", false]], "int8 (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.INT8", false]], "int8 (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.INT8", false]], "int_scalars (in module arkouda)": [[26, "arkouda.int_scalars", false]], "int_scalars (in module arkouda.dtypes)": [[23, "arkouda.dtypes.int_scalars", false]], "int_scalars (in module arkouda.numpy)": [[42, "arkouda.numpy.int_scalars", false], [42, "id241", false], [42, "id242", false]], "int_scalars (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.int_scalars", false]], "int_scalars (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.int_scalars", false]], "int_scalars (in module arkouda.segarray)": [[72, "arkouda.segarray.int_scalars", false]], "int_scalars (in module arkouda.timeclass)": [[79, "arkouda.timeclass.int_scalars", false]], "int_scalars (in module arkouda.util)": [[80, "arkouda.util.int_scalars", false]], "integers() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.integers", false]], "integers() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.integers", false]], "integers() (in module arkouda.random.generator)": [[120, "arkouda.random.Generator.integers", false]], "intersect() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.intersect", false]], "intersect() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.intersect", false]], "intersect() (arkouda.segarray method)": [[26, "arkouda.SegArray.intersect", false]], "intersect() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.intersect", false]], "intersect() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.intersect", false]], "intersect() (in module arkouda)": [[26, "arkouda.intersect", false]], "intersect() (in module arkouda.dataframe)": [[22, "arkouda.dataframe.intersect", false]], "intersect1d() (in module arkouda)": [[26, "arkouda.intersect1d", false], [123, "arkouda.intersect1d", false]], "intersect1d() (in module arkouda.numpy)": [[42, "arkouda.numpy.intersect1d", false]], "intersect1d() (in module arkouda.numpy.pdarraysetops)": [[50, "arkouda.numpy.pdarraysetops.intersect1d", false]], "intersect1d() (in module arkouda.pdarraysetops)": [[62, "arkouda.pdarraysetops.intersect1d", false]], "intersection() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.intersection", false]], "intersection() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.intersection", false]], "interval_lookup() (in module arkouda.alignment)": [[3, "arkouda.alignment.interval_lookup", false]], "inttypes (in module arkouda)": [[26, "arkouda.intTypes", false], [26, "id507", false]], "inttypes (in module arkouda.dtypes)": [[23, "arkouda.dtypes.intTypes", false]], "inttypes (in module arkouda.numpy)": [[42, "arkouda.numpy.intTypes", false], [42, "id240", false]], "inttypes (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.intTypes", false]], "inttypes (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.intTypes", false]], "inttypes (in module arkouda.timeclass)": [[79, "arkouda.timeclass.intTypes", false]], "intx() (in module arkouda)": [[26, "arkouda.intx", false]], "intx() (in module arkouda.dataframe)": [[22, "arkouda.dataframe.intx", false]], "inverse_indices (arkouda.array_api.set_functions.uniqueallresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueAllResult.inverse_indices", false]], "inverse_indices (arkouda.array_api.set_functions.uniqueinverseresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueInverseResult.inverse_indices", false]], "invert_permutation() (in module arkouda)": [[26, "arkouda.invert_permutation", false]], "invert_permutation() (in module arkouda.dataframe)": [[22, "arkouda.dataframe.invert_permutation", false]], "invert_permutation() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.invert_permutation", false]], "invert_permutation() (in module arkouda.util)": [[80, "arkouda.util.invert_permutation", false]], "ip_address() (in module arkouda)": [[26, "arkouda.ip_address", false]], "ip_address() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.ip_address", false]], "ipv4 (class in arkouda)": [[26, "arkouda.IPv4", false]], "ipv4 (class in arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.IPv4", false]], "ipv4 (class in arkouda.util)": [[80, "arkouda.util.IPv4", false]], "is_cosorted() (in module arkouda.alignment)": [[3, "arkouda.alignment.is_cosorted", false]], "is_float() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.is_float", false]], "is_float() (in module arkouda.util)": [[80, "arkouda.util.is_float", false]], "is_int() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.is_int", false]], "is_int() (in module arkouda.util)": [[80, "arkouda.util.is_int", false]], "is_ipv4() (in module arkouda)": [[26, "arkouda.is_ipv4", false]], "is_ipv4() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.is_ipv4", false]], "is_ipv6() (in module arkouda)": [[26, "arkouda.is_ipv6", false]], "is_ipv6() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.is_ipv6", false]], "is_leap_year (arkouda.datetime property)": [[26, "arkouda.Datetime.is_leap_year", false], [26, "id66", false], [26, "id99", false]], "is_leap_year (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.is_leap_year", false]], "is_leap_year (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.is_leap_year", false]], "is_leap_year (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.is_leap_year", false]], "is_leap_year (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.is_leap_year", false]], "is_numeric() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.is_numeric", false]], "is_numeric() (in module arkouda.util)": [[80, "arkouda.util.is_numeric", false]], "is_registered() (arkouda.categorical method)": [[26, "arkouda.Categorical.is_registered", false]], "is_registered() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.is_registered", false]], "is_registered() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.is_registered", false], [26, "id28", false]], "is_registered() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.is_registered", false]], "is_registered() (arkouda.datetime method)": [[26, "arkouda.Datetime.is_registered", false], [26, "id100", false], [26, "id67", false]], "is_registered() (arkouda.groupby method)": [[26, "arkouda.GroupBy.is_registered", false], [26, "id150", false], [26, "id197", false], [26, "id244", false], [26, "id291", false], [116, "arkouda.GroupBy.is_registered", false]], "is_registered() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.is_registered", false]], "is_registered() (arkouda.index method)": [[26, "arkouda.Index.is_registered", false]], "is_registered() (arkouda.index.index method)": [[27, "arkouda.index.Index.is_registered", false]], "is_registered() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.is_registered", false]], "is_registered() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.is_registered", false]], "is_registered() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.is_registered", false]], "is_registered() (arkouda.numpy.datetime method)": [[42, "arkouda.numpy.Datetime.is_registered", false]], "is_registered() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.is_registered", false]], "is_registered() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.is_registered", false], [42, "id299", false], [42, "id363", false], [42, "id431", false], [42, "id500", false]], "is_registered() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.is_registered", false]], "is_registered() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.is_registered", false]], "is_registered() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.is_registered", false]], "is_registered() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.is_registered", false], [42, "id112", false], [42, "id188", false], [42, "id38", false]], "is_registered() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.is_registered", false]], "is_registered() (arkouda.numpy.timeclass.datetime method)": [[57, "arkouda.numpy.timeclass.Datetime.is_registered", false]], "is_registered() (arkouda.numpy.timeclass.timedelta method)": [[57, "arkouda.numpy.timeclass.Timedelta.is_registered", false]], "is_registered() (arkouda.numpy.timedelta method)": [[42, "arkouda.numpy.Timedelta.is_registered", false]], "is_registered() (arkouda.pdarray method)": [[26, "arkouda.pdarray.is_registered", false], [26, "id562", false], [26, "id630", false]], "is_registered() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.is_registered", false]], "is_registered() (arkouda.segarray method)": [[26, "arkouda.SegArray.is_registered", false]], "is_registered() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.is_registered", false]], "is_registered() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.is_registered", false]], "is_registered() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.is_registered", false]], "is_registered() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.is_registered", false]], "is_registered() (arkouda.series method)": [[26, "arkouda.Series.is_registered", false]], "is_registered() (arkouda.series.series method)": [[73, "arkouda.series.Series.is_registered", false]], "is_registered() (arkouda.strings method)": [[26, "arkouda.Strings.is_registered", false], [26, "id352", false], [26, "id428", false]], "is_registered() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.is_registered", false]], "is_registered() (arkouda.timeclass.datetime method)": [[79, "arkouda.timeclass.Datetime.is_registered", false]], "is_registered() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.is_registered", false]], "is_registered() (arkouda.timeclass.timedelta method)": [[79, "arkouda.timeclass.Timedelta.is_registered", false]], "is_registered() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.is_registered", false], [26, "id474", false]], "is_registered() (arkouda.util.datetime method)": [[80, "arkouda.util.Datetime.is_registered", false]], "is_registered() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.is_registered", false]], "is_registered() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.is_registered", false]], "is_registered() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.is_registered", false]], "is_registered() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.is_registered", false]], "is_registered() (arkouda.util.timedelta method)": [[80, "arkouda.util.Timedelta.is_registered", false]], "is_registered() (in module arkouda)": [[26, "arkouda.is_registered", false]], "is_registered() (in module arkouda.numpy)": [[42, "arkouda.numpy.is_registered", false]], "is_registered() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.is_registered", false]], "is_registered() (in module arkouda.util)": [[80, "arkouda.util.is_registered", false]], "is_sorted() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.is_sorted", false], [42, "id300", false], [42, "id364", false], [42, "id432", false], [42, "id501", false]], "is_sorted() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.is_sorted", false]], "is_sorted() (arkouda.pdarray method)": [[26, "arkouda.pdarray.is_sorted", false], [26, "id563", false], [26, "id631", false], [117, "arkouda.pdarray.is_sorted", false]], "is_sorted() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.is_sorted", false]], "is_sorted() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.is_sorted", false]], "is_sorted() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.is_sorted", false]], "is_sorted() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.is_sorted", false]], "is_sorted() (in module arkouda)": [[112, "arkouda.is_sorted", false]], "is_unique (arkouda.index property)": [[26, "arkouda.Index.is_unique", false]], "is_unique (arkouda.index.index property)": [[27, "arkouda.index.Index.is_unique", false]], "isalnum() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.isalnum", false], [42, "id113", false], [42, "id189", false], [42, "id39", false]], "isalnum() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.isalnum", false]], "isalnum() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.isalnum", false]], "isalnum() (arkouda.strings method)": [[26, "arkouda.Strings.isalnum", false], [26, "id353", false], [26, "id429", false]], "isalnum() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.isalnum", false]], "isalnum() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.isalnum", false]], "isalpha() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.isalpha", false], [42, "id114", false], [42, "id190", false], [42, "id40", false]], "isalpha() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.isalpha", false]], "isalpha() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.isalpha", false]], "isalpha() (arkouda.strings method)": [[26, "arkouda.Strings.isalpha", false], [26, "id354", false], [26, "id430", false]], "isalpha() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.isalpha", false]], "isalpha() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.isalpha", false]], "isdecimal() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.isdecimal", false], [42, "id115", false], [42, "id191", false], [42, "id41", false]], "isdecimal() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.isdecimal", false]], "isdecimal() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.isdecimal", false]], "isdecimal() (arkouda.strings method)": [[26, "arkouda.Strings.isdecimal", false], [26, "id355", false], [26, "id431", false]], "isdecimal() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.isdecimal", false]], "isdecimal() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.isdecimal", false]], "isdigit() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.isdigit", false], [42, "id116", false], [42, "id192", false], [42, "id42", false]], "isdigit() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.isdigit", false]], "isdigit() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.isdigit", false]], "isdigit() (arkouda.strings method)": [[26, "arkouda.Strings.isdigit", false], [26, "id356", false], [26, "id432", false]], "isdigit() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.isdigit", false]], "isdigit() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.isdigit", false]], "isdisjoint() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.isdisjoint", false]], "isdisjoint() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.isdisjoint", false]], "isdtype() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.isdtype", false]], "isempty() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.isempty", false], [42, "id117", false], [42, "id193", false], [42, "id43", false]], "isempty() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.isempty", false]], "isempty() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.isempty", false]], "isempty() (arkouda.strings method)": [[26, "arkouda.Strings.isempty", false], [26, "id357", false], [26, "id433", false]], "isempty() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.isempty", false]], "isempty() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.isempty", false]], "isfinite() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.isfinite", false]], "isin() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.isin", false], [26, "id29", false]], "isin() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.isin", false]], "isin() (arkouda.series method)": [[26, "arkouda.Series.isin", false]], "isin() (arkouda.series.series method)": [[73, "arkouda.series.Series.isin", false]], "isinf() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.isinf", false]], "islower() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.islower", false], [42, "id118", false], [42, "id194", false], [42, "id44", false]], "islower() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.islower", false]], "islower() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.islower", false]], "islower() (arkouda.strings method)": [[26, "arkouda.Strings.islower", false], [26, "id358", false], [26, "id434", false]], "islower() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.islower", false]], "islower() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.islower", false]], "isna() (arkouda.categorical method)": [[26, "arkouda.Categorical.isna", false]], "isna() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.isna", false]], "isna() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.isna", false], [26, "id30", false]], "isna() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.isna", false]], "isna() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.isna", false]], "isna() (arkouda.series method)": [[26, "arkouda.Series.isna", false]], "isna() (arkouda.series.series method)": [[73, "arkouda.series.Series.isna", false]], "isnan() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.isnan", false]], "isnull() (arkouda.series method)": [[26, "arkouda.Series.isnull", false]], "isnull() (arkouda.series.series method)": [[73, "arkouda.series.Series.isnull", false]], "isocalendar() (arkouda.datetime method)": [[26, "arkouda.Datetime.isocalendar", false], [26, "id101", false], [26, "id68", false]], "isocalendar() (arkouda.numpy.datetime method)": [[42, "arkouda.numpy.Datetime.isocalendar", false]], "isocalendar() (arkouda.numpy.timeclass.datetime method)": [[57, "arkouda.numpy.timeclass.Datetime.isocalendar", false]], "isocalendar() (arkouda.timeclass.datetime method)": [[79, "arkouda.timeclass.Datetime.isocalendar", false]], "isocalendar() (arkouda.util.datetime method)": [[80, "arkouda.util.Datetime.isocalendar", false]], "isspace() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.isspace", false], [42, "id119", false], [42, "id195", false], [42, "id45", false]], "isspace() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.isspace", false]], "isspace() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.isspace", false]], "isspace() (arkouda.strings method)": [[26, "arkouda.Strings.isspace", false], [26, "id359", false], [26, "id435", false]], "isspace() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.isspace", false]], "isspace() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.isspace", false]], "issubset() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.issubset", false]], "issubset() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.issubset", false]], "issuperset() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.issuperset", false]], "issuperset() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.issuperset", false]], "issupportedbool() (in module arkouda)": [[26, "arkouda.isSupportedBool", false]], "issupportedbool() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.isSupportedBool", false]], "issupportedbool() (in module arkouda.numpy)": [[42, "arkouda.numpy.isSupportedBool", false]], "issupportedbool() (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.isSupportedBool", false]], "issupportedbool() (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.isSupportedBool", false]], "issupporteddtype() (in module arkouda)": [[26, "arkouda.isSupportedDType", false]], "issupporteddtype() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.isSupportedDType", false]], "issupporteddtype() (in module arkouda.numpy)": [[42, "arkouda.numpy.isSupportedDType", false], [42, "id243", false]], "issupporteddtype() (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.isSupportedDType", false]], "issupporteddtype() (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.isSupportedDType", false]], "issupportedfloat() (in module arkouda)": [[26, "arkouda.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.numpy)": [[42, "arkouda.numpy.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.isSupportedFloat", false]], "issupportedint() (in module arkouda)": [[26, "arkouda.isSupportedInt", false], [26, "id508", false]], "issupportedint() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.isSupportedInt", false]], "issupportedint() (in module arkouda.numpy)": [[42, "arkouda.numpy.isSupportedInt", false], [42, "id244", false], [42, "id245", false]], "issupportedint() (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.isSupportedInt", false]], "issupportedint() (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.isSupportedInt", false]], "issupportedint() (in module arkouda.segarray)": [[72, "arkouda.segarray.isSupportedInt", false]], "issupportedint() (in module arkouda.timeclass)": [[79, "arkouda.timeclass.isSupportedInt", false]], "issupportednumber() (in module arkouda)": [[26, "arkouda.isSupportedNumber", false]], "issupportednumber() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.isSupportedNumber", false]], "issupportednumber() (in module arkouda.numpy)": [[42, "arkouda.numpy.isSupportedNumber", false]], "issupportednumber() (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.isSupportedNumber", false]], "issupportednumber() (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.isSupportedNumber", false]], "istitle() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.istitle", false], [42, "id120", false], [42, "id196", false], [42, "id46", false]], "istitle() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.istitle", false]], "istitle() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.istitle", false]], "istitle() (arkouda.strings method)": [[26, "arkouda.Strings.istitle", false], [26, "id360", false], [26, "id436", false]], "istitle() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.istitle", false]], "istitle() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.istitle", false]], "isupper() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.isupper", false], [42, "id121", false], [42, "id197", false], [42, "id47", false]], "isupper() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.isupper", false]], "isupper() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.isupper", false]], "isupper() (arkouda.strings method)": [[26, "arkouda.Strings.isupper", false], [26, "id361", false], [26, "id437", false]], "isupper() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.isupper", false]], "isupper() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.isupper", false]], "item() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.item", false]], "item() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.item", false]], "item() (arkouda.ndarray method)": [[26, "arkouda.ndarray.item", false]], "item() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.item", false]], "itemset() (arkouda.ndarray method)": [[26, "arkouda.ndarray.itemset", false]], "itemset() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.itemset", false]], "itemsize (arkouda.bigint attribute)": [[26, "arkouda.bigint.itemsize", false]], "itemsize (arkouda.dtypes.bigint attribute)": [[23, "arkouda.dtypes.bigint.itemsize", false]], "itemsize (arkouda.numpy.bigint attribute)": [[42, "arkouda.numpy.bigint.itemsize", false]], "itemsize (arkouda.numpy.dtypes.bigint attribute)": [[39, "arkouda.numpy.dtypes.bigint.itemsize", false]], "itemsize (arkouda.numpy.dtypes.dtypes.bigint attribute)": [[38, "arkouda.numpy.dtypes.dtypes.bigint.itemsize", false]], "itemsize (arkouda.numpy.pdarray attribute)": [[42, "arkouda.numpy.pdarray.itemsize", false], [42, "id277", false], [42, "id340", false], [42, "id365", false], [42, "id408", false], [42, "id433", false], [42, "id477", false], [42, "id502", false]], "itemsize (arkouda.numpy.pdarrayclass.pdarray attribute)": [[47, "arkouda.numpy.pdarrayclass.pdarray.itemsize", false], [47, "id1", false]], "itemsize (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.itemsize", false], [26, "id539", false], [26, "id564", false], [26, "id607", false], [26, "id632", false], [119, "arkouda.pdarray.itemsize", false]], "itemsize (arkouda.pdarrayclass.pdarray attribute)": [[59, "arkouda.pdarrayclass.pdarray.itemsize", false], [59, "id1", false]], "itemsize (arkouda.scipy.sparrayclass.sparray attribute)": [[67, "arkouda.scipy.sparrayclass.sparray.itemsize", false], [67, "id1", false]], "itemsize (arkouda.segarray.pdarray attribute)": [[72, "arkouda.segarray.pdarray.itemsize", false], [72, "id6", false]], "itemsize (arkouda.sparrayclass.sparray attribute)": [[75, "arkouda.sparrayclass.sparray.itemsize", false], [75, "id1", false]], "itemsize (arkouda.timeclass.pdarray attribute)": [[79, "arkouda.timeclass.pdarray.itemsize", false], [79, "id1", false]], "itemsize (arkouda.util.pdarray attribute)": [[80, "arkouda.util.pdarray.itemsize", false], [80, "id6", false]], "itemsize() (arkouda.ndarray method)": [[26, "arkouda.ndarray.itemsize", false]], "itemsize() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.itemsize", false]], "iterable (class in arkouda)": [[26, "arkouda.Iterable", false]], "iterable (class in arkouda.numpy)": [[42, "arkouda.numpy.Iterable", false]], "join_on_eq_with_dt() (in module arkouda.join)": [[31, "arkouda.join.join_on_eq_with_dt", false]], "kind (arkouda.bigint attribute)": [[26, "arkouda.bigint.kind", false]], "kind (arkouda.dtypes.bigint attribute)": [[23, "arkouda.dtypes.bigint.kind", false]], "kind (arkouda.numpy.bigint attribute)": [[42, "arkouda.numpy.bigint.kind", false]], "kind (arkouda.numpy.dtypes.bigint attribute)": [[39, "arkouda.numpy.dtypes.bigint.kind", false]], "kind (arkouda.numpy.dtypes.dtypes.bigint attribute)": [[38, "arkouda.numpy.dtypes.dtypes.bigint.kind", false]], "layout (arkouda.scipy.sparrayclass.sparray attribute)": [[67, "arkouda.scipy.sparrayclass.sparray.layout", false], [67, "id2", false]], "layout (arkouda.sparrayclass.sparray attribute)": [[75, "arkouda.sparrayclass.sparray.layout", false], [75, "id2", false]], "left_align() (in module arkouda.alignment)": [[3, "arkouda.alignment.left_align", false]], "len_suffix (in module arkouda)": [[26, "arkouda.LEN_SUFFIX", false]], "len_suffix (in module arkouda.numpy)": [[42, "arkouda.numpy.LEN_SUFFIX", false]], "len_suffix (in module arkouda.numpy.segarray)": [[54, "arkouda.numpy.segarray.LEN_SUFFIX", false]], "len_suffix (in module arkouda.segarray)": [[72, "arkouda.segarray.LEN_SUFFIX", false]], "lengths (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.lengths", false]], "less() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.less", false]], "less_equal() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.less_equal", false]], "levels (arkouda.index.multiindex attribute)": [[27, "arkouda.index.MultiIndex.levels", false]], "levels (arkouda.multiindex attribute)": [[26, "arkouda.MultiIndex.levels", false]], "linspace() (in module arkouda)": [[26, "arkouda.linspace", false], [114, "arkouda.linspace", false]], "linspace() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.linspace", false]], "linspace() (in module arkouda.numpy)": [[42, "arkouda.numpy.linspace", false]], "linspace() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.linspace", false]], "linspace() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.linspace", false]], "list_registry() (in module arkouda)": [[26, "arkouda.list_registry", false]], "list_registry() (in module arkouda.infoclass)": [[28, "arkouda.infoclass.list_registry", false]], "list_registry() (in module arkouda.util)": [[80, "arkouda.util.list_registry", false]], "list_symbol_table() (in module arkouda)": [[26, "arkouda.list_symbol_table", false]], "list_symbol_table() (in module arkouda.infoclass)": [[28, "arkouda.infoclass.list_symbol_table", false]], "load() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.load", false], [26, "id31", false]], "load() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.load", false]], "load() (arkouda.numpy.segarray class method)": [[42, "arkouda.numpy.SegArray.load", false]], "load() (arkouda.numpy.segarray.segarray class method)": [[54, "arkouda.numpy.segarray.SegArray.load", false]], "load() (arkouda.segarray class method)": [[26, "arkouda.SegArray.load", false]], "load() (arkouda.segarray.segarray class method)": [[72, "arkouda.segarray.SegArray.load", false]], "load() (arkouda.util.segarray class method)": [[80, "arkouda.util.SegArray.load", false]], "load() (in module arkouda)": [[26, "arkouda.load", false]], "load() (in module arkouda.io)": [[29, "arkouda.io.load", false]], "load_all() (in module arkouda)": [[26, "arkouda.load_all", false]], "load_all() (in module arkouda.io)": [[29, "arkouda.io.load_all", false]], "load_checkpoint() (in module arkouda)": [[26, "arkouda.load_checkpoint", false]], "load_checkpoint() (in module arkouda.io)": [[29, "arkouda.io.load_checkpoint", false]], "loc (arkouda.series property)": [[26, "arkouda.Series.loc", false]], "loc (arkouda.series.series property)": [[73, "arkouda.series.Series.loc", false]], "locate() (arkouda.series method)": [[26, "arkouda.Series.locate", false]], "locate() (arkouda.series.series method)": [[73, "arkouda.series.Series.locate", false]], "locate() (in module arkouda.series)": [[122, "arkouda.Series.locate", false], [122, "id0", false]], "locationsinfo (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.LocationsInfo", false]], "log() (in module arkouda)": [[112, "arkouda.log", false]], "log() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.log", false]], "log10() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.log10", false]], "log1p() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.log1p", false]], "log2() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.log2", false]], "logaddexp() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logaddexp", false]], "logger (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.logger", false]], "logger (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.logger", false], [26, "id132", false], [26, "id179", false], [26, "id226", false], [26, "id273", false], [116, "arkouda.GroupBy.logger", false]], "logger (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.logger", false]], "logger (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.logger", false]], "logger (arkouda.numpy.groupby attribute)": [[42, "arkouda.numpy.GroupBy.logger", false]], "logger (arkouda.numpy.segarray attribute)": [[42, "arkouda.numpy.SegArray.logger", false]], "logger (arkouda.numpy.segarray.segarray attribute)": [[54, "arkouda.numpy.segarray.SegArray.logger", false]], "logger (arkouda.numpy.strings attribute)": [[42, "arkouda.numpy.Strings.logger", false], [42, "id12", false], [42, "id122", false], [42, "id160", false], [42, "id198", false], [42, "id84", false]], "logger (arkouda.numpy.strings.strings attribute)": [[56, "arkouda.numpy.strings.Strings.logger", false], [56, "id2", false]], "logger (arkouda.segarray attribute)": [[26, "arkouda.SegArray.logger", false]], "logger (arkouda.segarray.groupby attribute)": [[72, "arkouda.segarray.GroupBy.logger", false]], "logger (arkouda.segarray.segarray attribute)": [[72, "arkouda.segarray.SegArray.logger", false]], "logger (arkouda.segarray.strings attribute)": [[72, "arkouda.segarray.Strings.logger", false], [72, "id3", false]], "logger (arkouda.strings attribute)": [[26, "arkouda.Strings.logger", false], [26, "id324", false], [26, "id362", false], [26, "id400", false], [26, "id438", false]], "logger (arkouda.strings.strings attribute)": [[77, "arkouda.strings.Strings.logger", false], [77, "id2", false]], "logger (arkouda.util.groupby attribute)": [[80, "arkouda.util.GroupBy.logger", false]], "logger (arkouda.util.segarray attribute)": [[80, "arkouda.util.SegArray.logger", false]], "logger (arkouda.util.strings attribute)": [[80, "arkouda.util.Strings.logger", false], [80, "id3", false]], "logical_and() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logical_and", false]], "logical_not() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logical_not", false]], "logical_or() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logical_or", false]], "logical_xor() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logical_xor", false]], "logistic() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.logistic", false]], "logistic() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.logistic", false]], "logistic() (in module arkouda.random.generator)": [[120, "arkouda.random.Generator.logistic", false]], "loglevel (class in arkouda)": [[26, "arkouda.LogLevel", false]], "loglevel (class in arkouda.logger)": [[32, "arkouda.logger.LogLevel", false]], "lognormal() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.lognormal", false]], "lognormal() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.lognormal", false]], "lognormal() (in module arkouda.random.generator)": [[120, "arkouda.random.Generator.lognormal", false]], "lookup() (arkouda.index method)": [[26, "arkouda.Index.lookup", false]], "lookup() (arkouda.index.index method)": [[27, "arkouda.index.Index.lookup", false]], "lookup() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.lookup", false]], "lookup() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.lookup", false]], "lookup() (in module arkouda.alignment)": [[3, "arkouda.alignment.lookup", false]], "lookup() (in module arkouda.index)": [[110, "arkouda.Index.lookup", false]], "lookup() (in module arkouda.multiindex)": [[110, "arkouda.MultiIndex.lookup", false]], "lower() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.lower", false], [42, "id123", false], [42, "id199", false], [42, "id48", false]], "lower() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.lower", false]], "lower() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.lower", false]], "lower() (arkouda.strings method)": [[26, "arkouda.Strings.lower", false], [26, "id363", false], [26, "id439", false]], "lower() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.lower", false]], "lower() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.lower", false]], "ls() (in module arkouda)": [[26, "arkouda.ls", false]], "ls() (in module arkouda.io)": [[29, "arkouda.io.ls", false]], "ls_csv() (in module arkouda)": [[26, "arkouda.ls_csv", false]], "ls_csv() (in module arkouda.io)": [[29, "arkouda.io.ls_csv", false]], "lstick() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.lstick", false], [42, "id124", false], [42, "id200", false], [42, "id49", false]], "lstick() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.lstick", false]], "lstick() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.lstick", false]], "lstick() (arkouda.strings method)": [[26, "arkouda.Strings.lstick", false], [26, "id364", false], [26, "id440", false]], "lstick() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.lstick", false]], "lstick() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.lstick", false]], "map() (arkouda.index method)": [[26, "arkouda.Index.map", false]], "map() (arkouda.index.index method)": [[27, "arkouda.index.Index.map", false]], "map() (arkouda.series method)": [[26, "arkouda.Series.map", false]], "map() (arkouda.series.series method)": [[73, "arkouda.series.Series.map", false]], "map() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.map", false]], "map() (in module arkouda.util)": [[80, "arkouda.util.map", false]], "match (class in arkouda.match)": [[33, "arkouda.match.Match", false]], "match() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.match", false], [42, "id125", false], [42, "id201", false], [42, "id50", false]], "match() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.match", false]], "match() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.match", false]], "match() (arkouda.strings method)": [[26, "arkouda.Strings.match", false], [26, "id365", false], [26, "id441", false]], "match() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.match", false]], "match() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.match", false]], "match_bool (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.match_bool", false]], "match_ind (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.match_ind", false]], "match_type() (arkouda.match.match method)": [[33, "arkouda.match.Match.match_type", false], [125, "arkouda.match.Match.match_type", false]], "matched() (arkouda.match.match method)": [[33, "arkouda.match.Match.matched", false], [125, "arkouda.match.Match.matched", false]], "matcher (class in arkouda.matcher)": [[34, "arkouda.matcher.Matcher", false]], "matmul() (in module arkouda.array_api.linalg)": [[11, "arkouda.array_api.linalg.matmul", false]], "matrix_transpose() (in module arkouda.array_api.linalg)": [[11, "arkouda.array_api.linalg.matrix_transpose", false]], "max (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.max", false]], "max (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.iinfo_object.max", false]], "max() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.max", false]], "max() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.max", false]], "max() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.max", false]], "max() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.max", false]], "max() (arkouda.groupby method)": [[26, "arkouda.GroupBy.max", false], [26, "id151", false], [26, "id198", false], [26, "id245", false], [26, "id292", false], [116, "arkouda.GroupBy.max", false]], "max() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.max", false]], "max() (arkouda.ndarray method)": [[26, "arkouda.ndarray.max", false]], "max() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.max", false]], "max() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.max", false]], "max() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.max", false], [42, "id301", false], [42, "id366", false], [42, "id434", false], [42, "id503", false]], "max() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.max", false]], "max() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.max", false]], "max() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.max", false]], "max() (arkouda.pdarray method)": [[26, "arkouda.pdarray.max", false], [26, "id565", false], [26, "id633", false], [117, "arkouda.pdarray.max", false]], "max() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.max", false]], "max() (arkouda.segarray method)": [[26, "arkouda.SegArray.max", false]], "max() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.max", false]], "max() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.max", false]], "max() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.max", false]], "max() (arkouda.series method)": [[26, "arkouda.Series.max", false]], "max() (arkouda.series.series method)": [[73, "arkouda.series.Series.max", false]], "max() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.max", false]], "max() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.max", false]], "max() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.max", false]], "max() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.max", false]], "max() (in module arkouda)": [[112, "arkouda.max", false]], "max() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.max", false]], "max_bits (arkouda.numpy.pdarray property)": [[42, "arkouda.numpy.pdarray.max_bits", false], [42, "id302", false], [42, "id367", false], [42, "id435", false], [42, "id504", false]], "max_bits (arkouda.numpy.pdarrayclass.pdarray property)": [[47, "arkouda.numpy.pdarrayclass.pdarray.max_bits", false]], "max_bits (arkouda.pdarray property)": [[26, "arkouda.pdarray.max_bits", false], [26, "id566", false], [26, "id634", false]], "max_bits (arkouda.pdarrayclass.pdarray property)": [[59, "arkouda.pdarrayclass.pdarray.max_bits", false]], "max_bits (arkouda.segarray.pdarray property)": [[72, "arkouda.segarray.pdarray.max_bits", false]], "max_bits (arkouda.timeclass.pdarray property)": [[79, "arkouda.timeclass.pdarray.max_bits", false]], "max_bits (arkouda.util.pdarray property)": [[80, "arkouda.util.pdarray.max_bits", false]], "max_list_size (arkouda.index attribute)": [[26, "arkouda.Index.max_list_size", false]], "max_list_size (arkouda.index.index attribute)": [[27, "arkouda.index.Index.max_list_size", false]], "maxk() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.maxk", false], [42, "id303", false], [42, "id368", false], [42, "id436", false], [42, "id505", false]], "maxk() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.maxk", false]], "maxk() (arkouda.pdarray method)": [[26, "arkouda.pdarray.maxk", false], [26, "id567", false], [26, "id635", false], [117, "arkouda.pdarray.maxk", false]], "maxk() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.maxk", false]], "maxk() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.maxk", false]], "maxk() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.maxk", false]], "maxk() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.maxk", false]], "maxk() (in module arkouda)": [[26, "arkouda.maxk", false], [112, "arkouda.maxk", false]], "maxk() (in module arkouda.numpy)": [[42, "arkouda.numpy.maxk", false]], "maxk() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.maxk", false]], "maxk() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.maxk", false]], "mean() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.mean", false]], "mean() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.mean", false]], "mean() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.mean", false]], "mean() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.mean", false]], "mean() (arkouda.groupby method)": [[26, "arkouda.GroupBy.mean", false], [26, "id152", false], [26, "id199", false], [26, "id246", false], [26, "id293", false], [116, "arkouda.GroupBy.mean", false]], "mean() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.mean", false]], "mean() (arkouda.ndarray method)": [[26, "arkouda.ndarray.mean", false]], "mean() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.mean", false]], "mean() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.mean", false]], "mean() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.mean", false], [42, "id304", false], [42, "id369", false], [42, "id437", false], [42, "id506", false]], "mean() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.mean", false]], "mean() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.mean", false]], "mean() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.mean", false]], "mean() (arkouda.pdarray method)": [[26, "arkouda.pdarray.mean", false], [26, "id568", false], [26, "id636", false], [117, "arkouda.pdarray.mean", false]], "mean() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.mean", false]], "mean() (arkouda.segarray method)": [[26, "arkouda.SegArray.mean", false]], "mean() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.mean", false]], "mean() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.mean", false]], "mean() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.mean", false]], "mean() (arkouda.series method)": [[26, "arkouda.Series.mean", false]], "mean() (arkouda.series.series method)": [[73, "arkouda.series.Series.mean", false]], "mean() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.mean", false]], "mean() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.mean", false]], "mean() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.mean", false]], "mean() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.mean", false]], "mean() (in module arkouda)": [[26, "arkouda.mean", false], [112, "arkouda.mean", false]], "mean() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.mean", false]], "mean() (in module arkouda.numpy)": [[42, "arkouda.numpy.mean", false]], "mean() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.mean", false]], "mean() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.mean", false]], "mean_shim() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.mean_shim", false]], "median() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.median", false]], "median() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.median", false]], "median() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.median", false]], "median() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.median", false]], "median() (arkouda.groupby method)": [[26, "arkouda.GroupBy.median", false], [26, "id153", false], [26, "id200", false], [26, "id247", false], [26, "id294", false], [116, "arkouda.GroupBy.median", false]], "median() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.median", false]], "median() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.median", false]], "median() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.median", false]], "median() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.median", false]], "memory_usage() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.memory_usage", false], [26, "id32", false]], "memory_usage() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.memory_usage", false]], "memory_usage() (arkouda.index method)": [[26, "arkouda.Index.memory_usage", false]], "memory_usage() (arkouda.index.index method)": [[27, "arkouda.index.Index.memory_usage", false]], "memory_usage() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.memory_usage", false]], "memory_usage() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.memory_usage", false]], "memory_usage() (arkouda.series method)": [[26, "arkouda.Series.memory_usage", false]], "memory_usage() (arkouda.series.series method)": [[73, "arkouda.series.Series.memory_usage", false]], "memory_usage_info() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.memory_usage_info", false], [26, "id33", false]], "memory_usage_info() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.memory_usage_info", false]], "merge() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.merge", false], [26, "id34", false]], "merge() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.merge", false]], "merge() (in module arkouda)": [[26, "arkouda.merge", false]], "merge() (in module arkouda.dataframe)": [[22, "arkouda.dataframe.merge", false]], "meshgrid() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.meshgrid", false]], "microsecond (arkouda.datetime property)": [[26, "arkouda.Datetime.microsecond", false], [26, "id102", false], [26, "id69", false]], "microsecond (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.microsecond", false]], "microsecond (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.microsecond", false]], "microsecond (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.microsecond", false]], "microsecond (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.microsecond", false]], "microseconds (arkouda.numpy.timeclass.timedelta property)": [[57, "arkouda.numpy.timeclass.Timedelta.microseconds", false]], "microseconds (arkouda.numpy.timedelta property)": [[42, "arkouda.numpy.Timedelta.microseconds", false]], "microseconds (arkouda.timeclass.timedelta property)": [[79, "arkouda.timeclass.Timedelta.microseconds", false]], "microseconds (arkouda.timedelta property)": [[26, "arkouda.Timedelta.microseconds", false], [26, "id475", false]], "microseconds (arkouda.util.timedelta property)": [[80, "arkouda.util.Timedelta.microseconds", false]], "millisecond (arkouda.datetime property)": [[26, "arkouda.Datetime.millisecond", false], [26, "id103", false], [26, "id70", false]], "millisecond (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.millisecond", false]], "millisecond (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.millisecond", false]], "millisecond (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.millisecond", false]], "millisecond (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.millisecond", false]], "min (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.min", false]], "min (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.iinfo_object.min", false]], "min() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.min", false]], "min() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.min", false]], "min() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.min", false]], "min() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.min", false]], "min() (arkouda.groupby method)": [[26, "arkouda.GroupBy.min", false], [26, "id154", false], [26, "id201", false], [26, "id248", false], [26, "id295", false], [116, "arkouda.GroupBy.min", false]], "min() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.min", false]], "min() (arkouda.ndarray method)": [[26, "arkouda.ndarray.min", false]], "min() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.min", false]], "min() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.min", false]], "min() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.min", false], [42, "id305", false], [42, "id370", false], [42, "id438", false], [42, "id507", false]], "min() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.min", false]], "min() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.min", false]], "min() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.min", false]], "min() (arkouda.pdarray method)": [[26, "arkouda.pdarray.min", false], [26, "id569", false], [26, "id637", false], [117, "arkouda.pdarray.min", false]], "min() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.min", false]], "min() (arkouda.segarray method)": [[26, "arkouda.SegArray.min", false]], "min() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.min", false]], "min() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.min", false]], "min() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.min", false]], "min() (arkouda.series method)": [[26, "arkouda.Series.min", false]], "min() (arkouda.series.series method)": [[73, "arkouda.series.Series.min", false]], "min() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.min", false]], "min() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.min", false]], "min() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.min", false]], "min() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.min", false]], "min() (in module arkouda)": [[112, "arkouda.min", false]], "min() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.min", false]], "mink() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.mink", false], [42, "id306", false], [42, "id371", false], [42, "id439", false], [42, "id508", false]], "mink() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.mink", false]], "mink() (arkouda.pdarray method)": [[26, "arkouda.pdarray.mink", false], [26, "id570", false], [26, "id638", false], [117, "arkouda.pdarray.mink", false]], "mink() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.mink", false]], "mink() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.mink", false]], "mink() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.mink", false]], "mink() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.mink", false]], "mink() (in module arkouda)": [[26, "arkouda.mink", false], [112, "arkouda.mink", false]], "mink() (in module arkouda.numpy)": [[42, "arkouda.numpy.mink", false]], "mink() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.mink", false]], "mink() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.mink", false]], "minute (arkouda.datetime property)": [[26, "arkouda.Datetime.minute", false], [26, "id104", false], [26, "id71", false]], "minute (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.minute", false]], "minute (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.minute", false]], "minute (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.minute", false]], "minute (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.minute", false]], "mod() (in module arkouda)": [[26, "arkouda.mod", false]], "mod() (in module arkouda.numpy)": [[42, "arkouda.numpy.mod", false]], "mod() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.mod", false]], "mod() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.mod", false]], "mode() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.mode", false]], "mode() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.mode", false]], "mode() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.mode", false]], "mode() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.mode", false]], "mode() (arkouda.groupby method)": [[26, "arkouda.GroupBy.mode", false], [26, "id155", false], [26, "id202", false], [26, "id249", false], [26, "id296", false], [116, "arkouda.GroupBy.mode", false]], "mode() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.mode", false]], "mode() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.mode", false]], "mode() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.mode", false]], "mode() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.mode", false]], "module": [[2, "module-arkouda.accessor", false], [3, "module-arkouda.alignment", false], [4, "module-arkouda.apply", false], [5, "module-arkouda.array_api.array_object", false], [6, "module-arkouda.array_api.creation_functions", false], [7, "module-arkouda.array_api.data_type_functions", false], [8, "module-arkouda.array_api.elementwise_functions", false], [9, "module-arkouda.array_api", false], [10, "module-arkouda.array_api.indexing_functions", false], [11, "module-arkouda.array_api.linalg", false], [12, "module-arkouda.array_api.manipulation_functions", false], [13, "module-arkouda.array_api.searching_functions", false], [14, "module-arkouda.array_api.set_functions", false], [15, "module-arkouda.array_api.sorting_functions", false], [16, "module-arkouda.array_api.statistical_functions", false], [17, "module-arkouda.array_api.utility_functions", false], [18, "module-arkouda.categorical", false], [19, "module-arkouda.client", false], [20, "module-arkouda.client_dtypes", false], [21, "module-arkouda.comm_diagnostics", false], [22, "module-arkouda.dataframe", false], [23, "module-arkouda.dtypes", false], [24, "module-arkouda.groupbyclass", false], [25, "module-arkouda.history", false], [26, "module-arkouda", false], [27, "module-arkouda.index", false], [28, "module-arkouda.infoclass", false], [29, "module-arkouda.io", false], [30, "module-arkouda.io_util", false], [31, "module-arkouda.join", false], [32, "module-arkouda.logger", false], [33, "module-arkouda.match", false], [34, "module-arkouda.matcher", false], [35, "module-arkouda.numeric", false], [36, "module-arkouda.numpy.char", false], [37, "module-arkouda.numpy.ctypeslib", false], [38, "module-arkouda.numpy.dtypes.dtypes", false], [39, "module-arkouda.numpy.dtypes", false], [40, "module-arkouda.numpy.exceptions", false], [41, "module-arkouda.numpy.fft", false], [42, "module-arkouda.numpy", false], [43, "module-arkouda.numpy.lib.emath", false], [44, "module-arkouda.numpy.lib", false], [45, "module-arkouda.numpy.linalg", false], [46, "module-arkouda.numpy.ma", false], [47, "module-arkouda.numpy.pdarrayclass", false], [48, "module-arkouda.numpy.pdarraycreation", false], [49, "module-arkouda.numpy.pdarraymanipulation", false], [50, "module-arkouda.numpy.pdarraysetops", false], [51, "module-arkouda.numpy.polynomial", false], [52, "module-arkouda.numpy.random", false], [53, "module-arkouda.numpy.rec", false], [54, "module-arkouda.numpy.segarray", false], [55, "module-arkouda.numpy.sorting", false], [56, "module-arkouda.numpy.strings", false], [57, "module-arkouda.numpy.timeclass", false], [58, "module-arkouda.numpy.util", false], [59, "module-arkouda.pdarrayclass", false], [60, "module-arkouda.pdarraycreation", false], [61, "module-arkouda.pdarraymanipulation", false], [62, "module-arkouda.pdarraysetops", false], [63, "module-arkouda.plotting", false], [64, "module-arkouda.random", false], [65, "module-arkouda.row", false], [66, "module-arkouda.scipy", false], [67, "module-arkouda.scipy.sparrayclass", false], [68, "module-arkouda.scipy.sparsematrix", false], [69, "module-arkouda.scipy.special", false], [70, "module-arkouda.scipy.stats", false], [71, "module-arkouda.security", false], [72, "module-arkouda.segarray", false], [73, "module-arkouda.series", false], [74, "module-arkouda.sorting", false], [75, "module-arkouda.sparrayclass", false], [76, "module-arkouda.sparsematrix", false], [77, "module-arkouda.strings", false], [78, "module-arkouda.testing", false], [79, "module-arkouda.timeclass", false], [80, "module-arkouda.util", false]], "moment_type() (arkouda.scipy.stats.chi2 method)": [[70, "arkouda.scipy.stats.chi2.moment_type", false]], "month (arkouda.datetime property)": [[26, "arkouda.Datetime.month", false], [26, "id105", false], [26, "id72", false]], "month (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.month", false]], "month (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.month", false]], "month (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.month", false]], "month (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.month", false]], "most_common() (arkouda.groupby method)": [[26, "arkouda.GroupBy.most_common", false], [26, "id156", false], [26, "id203", false], [26, "id250", false], [26, "id297", false], [116, "arkouda.GroupBy.most_common", false]], "most_common() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.most_common", false]], "most_common() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.most_common", false]], "most_common() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.most_common", false]], "most_common() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.most_common", false]], "most_common() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.most_common", false]], "most_common() (in module arkouda.util)": [[80, "arkouda.util.most_common", false]], "moveaxis() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.moveaxis", false]], "msb_left (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.MSB_left", false]], "msb_left (arkouda.fields attribute)": [[26, "arkouda.Fields.MSB_left", false]], "mt (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.mT", false]], "mt (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.mT", false]], "multiindex (class in arkouda)": [[26, "arkouda.MultiIndex", false]], "multiindex (class in arkouda.index)": [[27, "arkouda.index.MultiIndex", false]], "multiply() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.multiply", false]], "name (arkouda.bigint attribute)": [[26, "arkouda.bigint.name", false]], "name (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.name", false]], "name (arkouda.dtypes.bigint attribute)": [[23, "arkouda.dtypes.bigint.name", false]], "name (arkouda.fields attribute)": [[26, "arkouda.Fields.name", false]], "name (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.name", false]], "name (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.name", false]], "name (arkouda.numpy.bigint attribute)": [[42, "arkouda.numpy.bigint.name", false]], "name (arkouda.numpy.dtypes.bigint attribute)": [[39, "arkouda.numpy.dtypes.bigint.name", false]], "name (arkouda.numpy.dtypes.dtypes.bigint attribute)": [[38, "arkouda.numpy.dtypes.dtypes.bigint.name", false]], "name (arkouda.numpy.pdarray attribute)": [[42, "arkouda.numpy.pdarray.name", false], [42, "id272", false], [42, "id335", false], [42, "id372", false], [42, "id403", false], [42, "id440", false], [42, "id472", false], [42, "id509", false]], "name (arkouda.numpy.pdarrayclass.pdarray attribute)": [[47, "arkouda.numpy.pdarrayclass.pdarray.name", false], [47, "id2", false]], "name (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.name", false], [26, "id534", false], [26, "id571", false], [26, "id602", false], [26, "id639", false], [119, "arkouda.pdarray.name", false]], "name (arkouda.pdarrayclass.pdarray attribute)": [[59, "arkouda.pdarrayclass.pdarray.name", false], [59, "id2", false]], "name (arkouda.scipy.sparrayclass.sparray attribute)": [[67, "arkouda.scipy.sparrayclass.sparray.name", false], [67, "id3", false]], "name (arkouda.segarray.pdarray attribute)": [[72, "arkouda.segarray.pdarray.name", false], [72, "id7", false]], "name (arkouda.sparrayclass.sparray attribute)": [[75, "arkouda.sparrayclass.sparray.name", false], [75, "id3", false]], "name (arkouda.timeclass.pdarray attribute)": [[79, "arkouda.timeclass.pdarray.name", false], [79, "id2", false]], "name (arkouda.util.pdarray attribute)": [[80, "arkouda.util.pdarray.name", false], [80, "id7", false]], "name() (arkouda.scipy.stats.chi2 method)": [[70, "arkouda.scipy.stats.chi2.name", false]], "names (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.names", false]], "names (arkouda.fields attribute)": [[26, "arkouda.Fields.names", false]], "names (arkouda.index property)": [[26, "arkouda.Index.names", false]], "names (arkouda.index.index property)": [[27, "arkouda.index.Index.names", false]], "names (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.names", false]], "names (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.names", false]], "namewidth (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.namewidth", false]], "namewidth (arkouda.fields attribute)": [[26, "arkouda.Fields.namewidth", false]], "nanosecond (arkouda.datetime property)": [[26, "arkouda.Datetime.nanosecond", false], [26, "id106", false], [26, "id73", false]], "nanosecond (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.nanosecond", false]], "nanosecond (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.nanosecond", false]], "nanosecond (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.nanosecond", false]], "nanosecond (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.nanosecond", false]], "nanoseconds (arkouda.numpy.timeclass.timedelta property)": [[57, "arkouda.numpy.timeclass.Timedelta.nanoseconds", false]], "nanoseconds (arkouda.numpy.timedelta property)": [[42, "arkouda.numpy.Timedelta.nanoseconds", false]], "nanoseconds (arkouda.timeclass.timedelta property)": [[79, "arkouda.timeclass.Timedelta.nanoseconds", false]], "nanoseconds (arkouda.timedelta property)": [[26, "arkouda.Timedelta.nanoseconds", false], [26, "id476", false]], "nanoseconds (arkouda.util.timedelta property)": [[80, "arkouda.util.Timedelta.nanoseconds", false]], "nbytes (arkouda.categorical property)": [[26, "arkouda.Categorical.nbytes", false]], "nbytes (arkouda.categorical.categorical property)": [[18, "arkouda.categorical.Categorical.nbytes", false]], "nbytes (arkouda.numpy.categorical property)": [[42, "arkouda.numpy.Categorical.nbytes", false]], "nbytes (arkouda.numpy.pdarray property)": [[42, "arkouda.numpy.pdarray.nbytes", false], [42, "id307", false], [42, "id373", false], [42, "id441", false], [42, "id510", false]], "nbytes (arkouda.numpy.pdarrayclass.pdarray property)": [[47, "arkouda.numpy.pdarrayclass.pdarray.nbytes", false]], "nbytes (arkouda.numpy.segarray property)": [[42, "arkouda.numpy.SegArray.nbytes", false]], "nbytes (arkouda.numpy.segarray.segarray property)": [[54, "arkouda.numpy.segarray.SegArray.nbytes", false]], "nbytes (arkouda.numpy.strings attribute)": [[42, "arkouda.numpy.Strings.nbytes", false], [42, "id156", false], [42, "id8", false], [42, "id80", false]], "nbytes (arkouda.numpy.strings.strings attribute)": [[56, "arkouda.numpy.strings.Strings.nbytes", false]], "nbytes (arkouda.pdarray property)": [[26, "arkouda.pdarray.nbytes", false], [26, "id572", false], [26, "id640", false]], "nbytes (arkouda.pdarrayclass.pdarray property)": [[59, "arkouda.pdarrayclass.pdarray.nbytes", false]], "nbytes (arkouda.segarray property)": [[26, "arkouda.SegArray.nbytes", false]], "nbytes (arkouda.segarray.pdarray property)": [[72, "arkouda.segarray.pdarray.nbytes", false]], "nbytes (arkouda.segarray.segarray property)": [[72, "arkouda.segarray.SegArray.nbytes", false]], "nbytes (arkouda.segarray.strings attribute)": [[72, "arkouda.segarray.Strings.nbytes", false]], "nbytes (arkouda.strings attribute)": [[26, "arkouda.Strings.nbytes", false], [26, "id320", false], [26, "id396", false]], "nbytes (arkouda.strings.strings attribute)": [[77, "arkouda.strings.Strings.nbytes", false]], "nbytes (arkouda.timeclass.pdarray property)": [[79, "arkouda.timeclass.pdarray.nbytes", false]], "nbytes (arkouda.util.pdarray property)": [[80, "arkouda.util.pdarray.nbytes", false]], "nbytes (arkouda.util.segarray property)": [[80, "arkouda.util.SegArray.nbytes", false]], "nbytes (arkouda.util.strings attribute)": [[80, "arkouda.util.Strings.nbytes", false]], "nbytes() (arkouda.ndarray method)": [[26, "arkouda.ndarray.nbytes", false]], "nbytes() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.nbytes", false]], "ndarray (class in arkouda)": [[26, "arkouda.ndarray", false]], "ndarray (class in arkouda.numpy)": [[42, "arkouda.numpy.ndarray", false]], "ndim (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.ndim", false]], "ndim (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.ndim", false]], "ndim (arkouda.bigint attribute)": [[26, "arkouda.bigint.ndim", false]], "ndim (arkouda.categorical attribute)": [[26, "arkouda.Categorical.ndim", false], [113, "arkouda.Categorical.ndim", false]], "ndim (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.ndim", false], [18, "id0", false]], "ndim (arkouda.dtypes.bigint attribute)": [[23, "arkouda.dtypes.bigint.ndim", false]], "ndim (arkouda.index property)": [[26, "arkouda.Index.ndim", false]], "ndim (arkouda.index.index property)": [[27, "arkouda.index.Index.ndim", false]], "ndim (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.ndim", false]], "ndim (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.ndim", false]], "ndim (arkouda.numpy.bigint attribute)": [[42, "arkouda.numpy.bigint.ndim", false]], "ndim (arkouda.numpy.categorical attribute)": [[42, "arkouda.numpy.Categorical.ndim", false]], "ndim (arkouda.numpy.dtypes.bigint attribute)": [[39, "arkouda.numpy.dtypes.bigint.ndim", false]], "ndim (arkouda.numpy.dtypes.dtypes.bigint attribute)": [[38, "arkouda.numpy.dtypes.dtypes.bigint.ndim", false]], "ndim (arkouda.numpy.pdarray attribute)": [[42, "arkouda.numpy.pdarray.ndim", false], [42, "id275", false], [42, "id338", false], [42, "id374", false], [42, "id406", false], [42, "id442", false], [42, "id475", false], [42, "id511", false]], "ndim (arkouda.numpy.pdarrayclass.pdarray attribute)": [[47, "arkouda.numpy.pdarrayclass.pdarray.ndim", false], [47, "id3", false]], "ndim (arkouda.numpy.strings attribute)": [[42, "arkouda.numpy.Strings.ndim", false], [42, "id157", false], [42, "id81", false], [42, "id9", false]], "ndim (arkouda.numpy.strings.strings attribute)": [[56, "arkouda.numpy.strings.Strings.ndim", false]], "ndim (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.ndim", false], [26, "id537", false], [26, "id573", false], [26, "id605", false], [26, "id641", false], [119, "arkouda.pdarray.ndim", false]], "ndim (arkouda.pdarrayclass.pdarray attribute)": [[59, "arkouda.pdarrayclass.pdarray.ndim", false], [59, "id3", false]], "ndim (arkouda.scipy.sparrayclass.sparray attribute)": [[67, "arkouda.scipy.sparrayclass.sparray.ndim", false], [67, "id4", false]], "ndim (arkouda.segarray.pdarray attribute)": [[72, "arkouda.segarray.pdarray.ndim", false], [72, "id8", false]], "ndim (arkouda.segarray.strings attribute)": [[72, "arkouda.segarray.Strings.ndim", false]], "ndim (arkouda.series property)": [[26, "arkouda.Series.ndim", false]], "ndim (arkouda.series.series property)": [[73, "arkouda.series.Series.ndim", false]], "ndim (arkouda.sparrayclass.sparray attribute)": [[75, "arkouda.sparrayclass.sparray.ndim", false], [75, "id4", false]], "ndim (arkouda.strings attribute)": [[26, "arkouda.Strings.ndim", false], [26, "id321", false], [26, "id397", false]], "ndim (arkouda.strings.strings attribute)": [[77, "arkouda.strings.Strings.ndim", false]], "ndim (arkouda.timeclass.pdarray attribute)": [[79, "arkouda.timeclass.pdarray.ndim", false], [79, "id3", false]], "ndim (arkouda.util.pdarray attribute)": [[80, "arkouda.util.pdarray.ndim", false], [80, "id8", false]], "ndim (arkouda.util.strings attribute)": [[80, "arkouda.util.Strings.ndim", false]], "ndim() (arkouda.ndarray method)": [[26, "arkouda.ndarray.ndim", false]], "ndim() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.ndim", false]], "negative() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.negative", false]], "newbyteorder() (arkouda.ndarray method)": [[26, "arkouda.ndarray.newbyteorder", false]], "newbyteorder() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.newbyteorder", false]], "ngroups (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.ngroups", false], [26, "id130", false], [26, "id177", false], [26, "id224", false], [26, "id271", false], [116, "arkouda.GroupBy.ngroups", false]], "ngroups (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.ngroups", false]], "ngroups (arkouda.numpy.groupby attribute)": [[42, "arkouda.numpy.GroupBy.ngroups", false]], "ngroups (arkouda.segarray.groupby attribute)": [[72, "arkouda.segarray.GroupBy.ngroups", false]], "ngroups (arkouda.util.groupby attribute)": [[80, "arkouda.util.GroupBy.ngroups", false]], "nkeys (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.nkeys", false], [26, "id126", false], [26, "id173", false], [26, "id220", false], [26, "id267", false], [116, "arkouda.GroupBy.nkeys", false]], "nkeys (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.nkeys", false]], "nkeys (arkouda.numpy.groupby attribute)": [[42, "arkouda.numpy.GroupBy.nkeys", false]], "nkeys (arkouda.segarray.groupby attribute)": [[72, "arkouda.segarray.GroupBy.nkeys", false]], "nkeys (arkouda.util.groupby attribute)": [[80, "arkouda.util.GroupBy.nkeys", false]], "nlevels (arkouda.categorical attribute)": [[26, "arkouda.Categorical.nlevels", false], [113, "arkouda.Categorical.nlevels", false]], "nlevels (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.nlevels", false], [18, "id1", false]], "nlevels (arkouda.index property)": [[26, "arkouda.Index.nlevels", false]], "nlevels (arkouda.index.index property)": [[27, "arkouda.index.Index.nlevels", false]], "nlevels (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.nlevels", false]], "nlevels (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.nlevels", false]], "nlevels (arkouda.numpy.categorical attribute)": [[42, "arkouda.numpy.Categorical.nlevels", false]], "nnz (arkouda.scipy.sparrayclass.sparray attribute)": [[67, "arkouda.scipy.sparrayclass.sparray.nnz", false], [67, "id5", false]], "nnz (arkouda.sparrayclass.sparray attribute)": [[75, "arkouda.sparrayclass.sparray.nnz", false], [75, "id5", false]], "non_empty (arkouda.numpy.segarray property)": [[42, "arkouda.numpy.SegArray.non_empty", false]], "non_empty (arkouda.numpy.segarray.segarray property)": [[54, "arkouda.numpy.segarray.SegArray.non_empty", false]], "non_empty (arkouda.segarray property)": [[26, "arkouda.SegArray.non_empty", false]], "non_empty (arkouda.segarray.segarray property)": [[72, "arkouda.segarray.SegArray.non_empty", false]], "non_empty (arkouda.util.segarray property)": [[80, "arkouda.util.SegArray.non_empty", false]], "nonuniqueerror": [[3, "arkouda.alignment.NonUniqueError", false]], "nonzero() (arkouda.ndarray method)": [[26, "arkouda.ndarray.nonzero", false]], "nonzero() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.nonzero", false]], "nonzero() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.nonzero", false]], "normal() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.normal", false]], "normal() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.normal", false]], "normal() (in module arkouda.random.generator)": [[120, "arkouda.random.Generator.normal", false]], "normalize() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.normalize", false]], "normalize() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.normalize", false]], "normalize() (arkouda.util.ipv4 method)": [[80, "arkouda.util.IPv4.normalize", false]], "not_equal() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.not_equal", false]], "notebookhistoryretriever (class in arkouda.history)": [[25, "arkouda.history.NotebookHistoryRetriever", false]], "notna() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.notna", false], [26, "id35", false]], "notna() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.notna", false]], "notna() (arkouda.series method)": [[26, "arkouda.Series.notna", false]], "notna() (arkouda.series.series method)": [[73, "arkouda.series.Series.notna", false]], "notnull() (arkouda.series method)": [[26, "arkouda.Series.notnull", false]], "notnull() (arkouda.series.series method)": [[73, "arkouda.series.Series.notnull", false]], "num_matches (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.num_matches", false]], "numargs() (arkouda.scipy.stats.chi2 method)": [[70, "arkouda.scipy.stats.chi2.numargs", false]], "number_format_strings (in module arkouda)": [[26, "arkouda.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (in module arkouda.dtypes)": [[23, "arkouda.dtypes.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (in module arkouda.numpy)": [[42, "arkouda.numpy.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.NUMBER_FORMAT_STRINGS", false]], "numeric_and_bool_scalars (in module arkouda)": [[26, "arkouda.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (in module arkouda.dtypes)": [[23, "arkouda.dtypes.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (in module arkouda.numpy)": [[42, "arkouda.numpy.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.numeric_and_bool_scalars", false], [39, "id0", false]], "numeric_and_bool_scalars (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.numeric_and_bool_scalars", false]], "numeric_scalars (class in arkouda.numpy)": [[42, "id268", false]], "numeric_scalars (in module arkouda)": [[26, "arkouda.numeric_scalars", false]], "numeric_scalars (in module arkouda.dtypes)": [[23, "arkouda.dtypes.numeric_scalars", false]], "numeric_scalars (in module arkouda.numpy)": [[42, "arkouda.numpy.numeric_scalars", false]], "numeric_scalars (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.numeric_scalars", false]], "numeric_scalars (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.numeric_scalars", false]], "numeric_scalars (in module arkouda.util)": [[80, "arkouda.util.numeric_scalars", false]], "numericdtypes (in module arkouda)": [[26, "arkouda.NumericDTypes", false]], "numericdtypes (in module arkouda.dtypes)": [[23, "arkouda.dtypes.NumericDTypes", false]], "numericdtypes (in module arkouda.numpy)": [[42, "arkouda.numpy.NumericDTypes", false]], "numericdtypes (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.NumericDTypes", false]], "numericdtypes (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.NumericDTypes", false]], "numpy_scalars (in module arkouda)": [[26, "arkouda.numpy_scalars", false]], "numpy_scalars (in module arkouda.dtypes)": [[23, "arkouda.dtypes.numpy_scalars", false]], "numpy_scalars (in module arkouda.numpy)": [[42, "arkouda.numpy.numpy_scalars", false]], "numpy_scalars (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.numpy_scalars", false]], "numpy_scalars (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.numpy_scalars", false]], "nunique() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.nunique", false]], "nunique() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.nunique", false]], "nunique() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.nunique", false]], "nunique() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.nunique", false]], "nunique() (arkouda.groupby method)": [[26, "arkouda.GroupBy.nunique", false], [26, "id157", false], [26, "id204", false], [26, "id251", false], [26, "id298", false], [116, "arkouda.GroupBy.nunique", false]], "nunique() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.nunique", false]], "nunique() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.nunique", false]], "nunique() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.nunique", false]], "nunique() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.nunique", false]], "nunique() (arkouda.segarray method)": [[26, "arkouda.SegArray.nunique", false]], "nunique() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.nunique", false]], "nunique() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.nunique", false]], "nunique() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.nunique", false]], "nunique() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.nunique", false]], "objtype (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.objType", false]], "objtype (arkouda.index attribute)": [[26, "arkouda.Index.objType", false]], "objtype (arkouda.index.index attribute)": [[27, "arkouda.index.Index.objType", false]], "objtype (arkouda.index.multiindex attribute)": [[27, "arkouda.index.MultiIndex.objType", false]], "objtype (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.objType", false]], "objtype (arkouda.multiindex attribute)": [[26, "arkouda.MultiIndex.objType", false]], "objtype (arkouda.numpy.pdarray attribute)": [[42, "id375", false], [42, "id443", false], [42, "id512", false]], "objtype (arkouda.numpy.pdarrayclass.pdarray attribute)": [[47, "arkouda.numpy.pdarrayclass.pdarray.objType", false]], "objtype (arkouda.numpy.segarray attribute)": [[42, "arkouda.numpy.SegArray.objType", false]], "objtype (arkouda.numpy.segarray.segarray attribute)": [[54, "arkouda.numpy.segarray.SegArray.objType", false]], "objtype (arkouda.numpy.strings attribute)": [[42, "id126", false], [42, "id202", false]], "objtype (arkouda.numpy.strings.strings attribute)": [[56, "arkouda.numpy.strings.Strings.objType", false]], "objtype (arkouda.pdarray attribute)": [[26, "id574", false], [26, "id642", false]], "objtype (arkouda.pdarrayclass.pdarray attribute)": [[59, "arkouda.pdarrayclass.pdarray.objType", false]], "objtype (arkouda.segarray attribute)": [[26, "arkouda.SegArray.objType", false]], "objtype (arkouda.segarray.pdarray attribute)": [[72, "arkouda.segarray.pdarray.objType", false]], "objtype (arkouda.segarray.segarray attribute)": [[72, "arkouda.segarray.SegArray.objType", false]], "objtype (arkouda.segarray.strings attribute)": [[72, "arkouda.segarray.Strings.objType", false]], "objtype (arkouda.strings attribute)": [[26, "id366", false], [26, "id442", false]], "objtype (arkouda.strings.strings attribute)": [[77, "arkouda.strings.Strings.objType", false]], "objtype (arkouda.timeclass.pdarray attribute)": [[79, "arkouda.timeclass.pdarray.objType", false]], "objtype (arkouda.util.pdarray attribute)": [[80, "arkouda.util.pdarray.objType", false]], "objtype (arkouda.util.segarray attribute)": [[80, "arkouda.util.SegArray.objType", false]], "objtype (arkouda.util.strings attribute)": [[80, "arkouda.util.Strings.objType", false]], "objtype() (arkouda.categorical method)": [[26, "arkouda.Categorical.objType", false]], "objtype() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.objType", false], [26, "id36", false]], "objtype() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.objType", false]], "objtype() (arkouda.groupby method)": [[26, "arkouda.GroupBy.objType", false], [26, "id158", false], [26, "id205", false], [26, "id252", false], [26, "id299", false]], "objtype() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.objType", false]], "objtype() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.objType", false]], "objtype() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.objType", false]], "objtype() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.objType", false], [42, "id308", false]], "objtype() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.objType", false], [42, "id51", false]], "objtype() (arkouda.pdarray method)": [[26, "arkouda.pdarray.objType", false]], "objtype() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.objType", false]], "objtype() (arkouda.series method)": [[26, "arkouda.Series.objType", false]], "objtype() (arkouda.series.series method)": [[73, "arkouda.series.Series.objType", false]], "objtype() (arkouda.strings method)": [[26, "arkouda.Strings.objType", false]], "objtype() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.objType", false]], "ones() (in module arkouda)": [[26, "arkouda.ones", false], [26, "id531", false], [114, "arkouda.ones", false]], "ones() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.ones", false]], "ones() (in module arkouda.numpy)": [[42, "arkouda.numpy.ones", false], [42, "id269", false]], "ones() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.ones", false]], "ones() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.ones", false]], "ones() (in module arkouda.segarray)": [[72, "arkouda.segarray.ones", false]], "ones_like() (in module arkouda)": [[26, "arkouda.ones_like", false], [114, "arkouda.ones_like", false]], "ones_like() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.ones_like", false]], "ones_like() (in module arkouda.numpy)": [[42, "arkouda.numpy.ones_like", false]], "ones_like() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.ones_like", false]], "ones_like() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.ones_like", false]], "opeq() (arkouda.bitvector method)": [[26, "arkouda.BitVector.opeq", false]], "opeq() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.opeq", false]], "opeq() (arkouda.client_dtypes.fields method)": [[20, "arkouda.client_dtypes.Fields.opeq", false]], "opeq() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.opeq", false]], "opeq() (arkouda.fields method)": [[26, "arkouda.Fields.opeq", false]], "opeq() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.opeq", false]], "opeq() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.opeq", false], [42, "id309", false], [42, "id376", false], [42, "id444", false], [42, "id513", false]], "opeq() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.opeq", false]], "opeq() (arkouda.pdarray method)": [[26, "arkouda.pdarray.opeq", false], [26, "id575", false], [26, "id643", false]], "opeq() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.opeq", false]], "opeq() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.opeq", false]], "opeq() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.opeq", false]], "opeq() (arkouda.util.bitvector method)": [[80, "arkouda.util.BitVector.opeq", false]], "opeq() (arkouda.util.ipv4 method)": [[80, "arkouda.util.IPv4.opeq", false]], "opeq() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.opeq", false]], "opeqops (arkouda.numpy.pdarray attribute)": [[42, "id342", false], [42, "id410", false], [42, "id479", false]], "opeqops (arkouda.numpy.pdarrayclass.pdarray attribute)": [[47, "arkouda.numpy.pdarrayclass.pdarray.OpEqOps", false]], "opeqops (arkouda.pdarray attribute)": [[26, "id541", false], [26, "id609", false]], "opeqops (arkouda.pdarrayclass.pdarray attribute)": [[59, "arkouda.pdarrayclass.pdarray.OpEqOps", false]], "opeqops (arkouda.segarray.pdarray attribute)": [[72, "arkouda.segarray.pdarray.OpEqOps", false]], "opeqops (arkouda.timeclass.pdarray attribute)": [[79, "arkouda.timeclass.pdarray.OpEqOps", false]], "opeqops (arkouda.util.pdarray attribute)": [[80, "arkouda.util.pdarray.OpEqOps", false]], "opeqops() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.OpEqOps", false], [42, "id279", false]], "opeqops() (arkouda.pdarray method)": [[26, "arkouda.pdarray.OpEqOps", false]], "optional (class in arkouda)": [[26, "arkouda.Optional", false]], "optional (class in arkouda.numpy)": [[42, "arkouda.numpy.Optional", false]], "or() (arkouda.groupby method)": [[26, "arkouda.GroupBy.OR", false], [26, "id135", false], [26, "id182", false], [26, "id229", false], [26, "id276", false], [116, "arkouda.GroupBy.OR", false]], "or() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.OR", false]], "or() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.OR", false]], "or() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.OR", false]], "or() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.OR", false]], "or() (arkouda.segarray method)": [[26, "arkouda.SegArray.OR", false]], "or() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.OR", false]], "or() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.OR", false]], "or() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.OR", false]], "or() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.OR", false]], "pad (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.pad", false]], "pad (arkouda.fields attribute)": [[26, "arkouda.Fields.pad", false]], "pad() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.pad", false]], "padchar (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.padchar", false]], "padchar (arkouda.fields attribute)": [[26, "arkouda.Fields.padchar", false]], "parent_entry_name (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.parent_entry_name", false]], "parity() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.parity", false], [42, "id310", false], [42, "id377", false], [42, "id445", false], [42, "id514", false]], "parity() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.parity", false]], "parity() (arkouda.pdarray method)": [[26, "arkouda.pdarray.parity", false], [26, "id576", false], [26, "id644", false]], "parity() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.parity", false]], "parity() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.parity", false]], "parity() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.parity", false]], "parity() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.parity", false]], "parity() (in module arkouda)": [[26, "arkouda.parity", false]], "parity() (in module arkouda.numpy)": [[42, "arkouda.numpy.parity", false]], "parity() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.parity", false]], "parity() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.parity", false]], "parse_hdf_categoricals() (arkouda.categorical method)": [[26, "arkouda.Categorical.parse_hdf_categoricals", false]], "parse_hdf_categoricals() (arkouda.categorical.categorical static method)": [[18, "arkouda.categorical.Categorical.parse_hdf_categoricals", false]], "parse_hdf_categoricals() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.parse_hdf_categoricals", false]], "partition() (arkouda.ndarray method)": [[26, "arkouda.ndarray.partition", false]], "partition() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.partition", false]], "pdarray (class in arkouda)": [[26, "arkouda.pdarray", false], [26, "id533", false], [26, "id601", false], [119, "arkouda.pdarray", false]], "pdarray (class in arkouda.numpy)": [[42, "arkouda.numpy.pdarray", false], [42, "id271", false], [42, "id334", false], [42, "id402", false], [42, "id471", false]], "pdarray (class in arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.pdarray", false]], "pdarray (class in arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.pdarray", false]], "pdarray (class in arkouda.segarray)": [[72, "arkouda.segarray.pdarray", false]], "pdarray (class in arkouda.timeclass)": [[79, "arkouda.timeclass.pdarray", false]], "pdarray (class in arkouda.util)": [[80, "arkouda.util.pdarray", false]], "pdconcat() (arkouda.series method)": [[26, "arkouda.Series.pdconcat", false]], "pdconcat() (arkouda.series.series method)": [[73, "arkouda.series.Series.pdconcat", false]], "pdconcat() (in module arkouda.series)": [[122, "arkouda.Series.pdconcat", false]], "peel() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.peel", false], [42, "id127", false], [42, "id203", false], [42, "id52", false]], "peel() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.peel", false]], "peel() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.peel", false]], "peel() (arkouda.strings method)": [[26, "arkouda.Strings.peel", false], [26, "id367", false], [26, "id443", false]], "peel() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.peel", false]], "peel() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.peel", false]], "permutation (arkouda.categorical attribute)": [[26, "arkouda.Categorical.permutation", false], [113, "arkouda.Categorical.permutation", false]], "permutation (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.permutation", false], [18, "id2", false]], "permutation (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.permutation", false], [26, "id128", false], [26, "id175", false], [26, "id222", false], [26, "id269", false], [116, "arkouda.GroupBy.permutation", false]], "permutation (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.permutation", false]], "permutation (arkouda.numpy.categorical attribute)": [[42, "arkouda.numpy.Categorical.permutation", false]], "permutation (arkouda.numpy.groupby attribute)": [[42, "arkouda.numpy.GroupBy.permutation", false]], "permutation (arkouda.segarray.groupby attribute)": [[72, "arkouda.segarray.GroupBy.permutation", false]], "permutation (arkouda.util.groupby attribute)": [[80, "arkouda.util.GroupBy.permutation", false]], "permutation() (arkouda.categorical method)": [[26, "id0", false]], "permutation() (arkouda.numpy.categorical method)": [[42, "id0", false]], "permutation() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.permutation", false]], "permutation() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.permutation", false]], "permutation() (in module arkouda.random.generator)": [[120, "arkouda.random.Generator.permutation", false]], "permute_dims() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.permute_dims", false]], "plot_dist() (in module arkouda)": [[26, "arkouda.plot_dist", false]], "plot_dist() (in module arkouda.plotting)": [[63, "arkouda.plotting.plot_dist", false]], "poisson() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.poisson", false]], "poisson() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.poisson", false]], "poisson() (in module arkouda.random.generator)": [[120, "arkouda.random.Generator.poisson", false]], "popcount() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.popcount", false], [42, "id311", false], [42, "id378", false], [42, "id446", false], [42, "id515", false]], "popcount() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.popcount", false]], "popcount() (arkouda.pdarray method)": [[26, "arkouda.pdarray.popcount", false], [26, "id577", false], [26, "id645", false]], "popcount() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.popcount", false]], "popcount() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.popcount", false]], "popcount() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.popcount", false]], "popcount() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.popcount", false]], "popcount() (in module arkouda)": [[26, "arkouda.popcount", false]], "popcount() (in module arkouda.numpy)": [[42, "arkouda.numpy.popcount", false]], "popcount() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.popcount", false]], "popcount() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.popcount", false]], "populated (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.populated", false]], "positive() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.positive", false]], "pow() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.pow", false]], "power() (in module arkouda)": [[26, "arkouda.power", false]], "power() (in module arkouda.numpy)": [[42, "arkouda.numpy.power", false]], "power() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.power", false]], "power() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.power", false]], "prepend_single() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.prepend_single", false]], "prepend_single() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.prepend_single", false]], "prepend_single() (arkouda.segarray method)": [[26, "arkouda.SegArray.prepend_single", false]], "prepend_single() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.prepend_single", false]], "prepend_single() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.prepend_single", false]], "pretty_print_info() (arkouda.categorical method)": [[26, "arkouda.Categorical.pretty_print_info", false]], "pretty_print_info() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.pretty_print_info", false]], "pretty_print_info() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.pretty_print_info", false]], "pretty_print_info() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.pretty_print_info", false], [42, "id312", false], [42, "id379", false], [42, "id447", false], [42, "id516", false]], "pretty_print_info() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.pretty_print_info", false]], "pretty_print_info() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.pretty_print_info", false], [42, "id128", false], [42, "id204", false], [42, "id53", false]], "pretty_print_info() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.pretty_print_info", false]], "pretty_print_info() (arkouda.pdarray method)": [[26, "arkouda.pdarray.pretty_print_info", false], [26, "id578", false], [26, "id646", false]], "pretty_print_info() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.pretty_print_info", false]], "pretty_print_info() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.pretty_print_info", false]], "pretty_print_info() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.pretty_print_info", false]], "pretty_print_info() (arkouda.strings method)": [[26, "arkouda.Strings.pretty_print_info", false], [26, "id368", false], [26, "id444", false]], "pretty_print_info() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.pretty_print_info", false]], "pretty_print_info() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.pretty_print_info", false]], "pretty_print_info() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.pretty_print_info", false]], "pretty_print_info() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.pretty_print_info", false]], "pretty_print_information() (in module arkouda)": [[26, "arkouda.pretty_print_information", false]], "pretty_print_information() (in module arkouda.infoclass)": [[28, "arkouda.infoclass.pretty_print_information", false]], "print_comm_diagnostics_table() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.print_comm_diagnostics_table", false]], "print_server_commands() (in module arkouda.client)": [[19, "arkouda.client.print_server_commands", false]], "prod() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.prod", false]], "prod() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.prod", false]], "prod() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.prod", false]], "prod() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.prod", false]], "prod() (arkouda.groupby method)": [[26, "arkouda.GroupBy.prod", false], [26, "id159", false], [26, "id206", false], [26, "id253", false], [26, "id300", false], [116, "arkouda.GroupBy.prod", false]], "prod() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.prod", false]], "prod() (arkouda.ndarray method)": [[26, "arkouda.ndarray.prod", false]], "prod() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.prod", false]], "prod() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.prod", false]], "prod() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.prod", false], [42, "id313", false], [42, "id380", false], [42, "id448", false], [42, "id517", false]], "prod() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.prod", false]], "prod() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.prod", false]], "prod() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.prod", false]], "prod() (arkouda.pdarray method)": [[26, "arkouda.pdarray.prod", false], [26, "id579", false], [26, "id647", false], [117, "arkouda.pdarray.prod", false]], "prod() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.prod", false]], "prod() (arkouda.segarray method)": [[26, "arkouda.SegArray.prod", false]], "prod() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.prod", false]], "prod() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.prod", false]], "prod() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.prod", false]], "prod() (arkouda.series method)": [[26, "arkouda.Series.prod", false]], "prod() (arkouda.series.series method)": [[73, "arkouda.series.Series.prod", false]], "prod() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.prod", false]], "prod() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.prod", false]], "prod() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.prod", false]], "prod() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.prod", false]], "prod() (in module arkouda)": [[112, "arkouda.prod", false]], "prod() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.prod", false]], "promote_to_common_dtype() (in module arkouda)": [[26, "arkouda.promote_to_common_dtype", false]], "promote_to_common_dtype() (in module arkouda.numpy)": [[42, "arkouda.numpy.promote_to_common_dtype", false]], "promote_to_common_dtype() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.promote_to_common_dtype", false]], "promote_to_common_dtype() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.promote_to_common_dtype", false]], "properties (class in arkouda)": [[26, "arkouda.Properties", false]], "properties (class in arkouda.accessor)": [[2, "arkouda.accessor.Properties", false]], "ptp() (arkouda.ndarray method)": [[26, "arkouda.ndarray.ptp", false]], "ptp() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.ptp", false]], "purge_cached_regex_patterns() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.purge_cached_regex_patterns", false], [42, "id129", false], [42, "id205", false], [42, "id54", false]], "purge_cached_regex_patterns() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.purge_cached_regex_patterns", false]], "purge_cached_regex_patterns() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.purge_cached_regex_patterns", false]], "purge_cached_regex_patterns() (arkouda.strings method)": [[26, "arkouda.Strings.purge_cached_regex_patterns", false], [26, "id369", false], [26, "id445", false]], "purge_cached_regex_patterns() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.purge_cached_regex_patterns", false]], "purge_cached_regex_patterns() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.purge_cached_regex_patterns", false]], "put() (arkouda.ndarray method)": [[26, "arkouda.ndarray.put", false]], "put() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.put", false]], "randint() (in module arkouda)": [[26, "arkouda.randint", false], [114, "arkouda.randint", false]], "randint() (in module arkouda.numpy)": [[42, "arkouda.numpy.randint", false]], "randint() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.randint", false]], "randint() (in module arkouda.numpy.random)": [[52, "arkouda.numpy.random.randint", false]], "randint() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.randint", false]], "randint() (in module arkouda.random)": [[64, "arkouda.random.randint", false]], "random() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.random", false]], "random() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.random", false]], "random() (in module arkouda.random.generator)": [[120, "arkouda.random.Generator.random", false]], "random_sparse_matrix() (in module arkouda.scipy.sparsematrix)": [[68, "arkouda.scipy.sparsematrix.random_sparse_matrix", false]], "random_sparse_matrix() (in module arkouda.sparsematrix)": [[76, "arkouda.sparsematrix.random_sparse_matrix", false]], "random_strings_lognormal() (in module arkouda)": [[26, "arkouda.random_strings_lognormal", false]], "random_strings_lognormal() (in module arkouda.numpy)": [[42, "arkouda.numpy.random_strings_lognormal", false]], "random_strings_lognormal() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.random_strings_lognormal", false]], "random_strings_lognormal() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.random_strings_lognormal", false]], "random_strings_uniform() (in module arkouda)": [[26, "arkouda.random_strings_uniform", false]], "random_strings_uniform() (in module arkouda.numpy)": [[42, "arkouda.numpy.random_strings_uniform", false]], "random_strings_uniform() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.random_strings_uniform", false]], "random_strings_uniform() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.random_strings_uniform", false]], "ravel() (arkouda.ndarray method)": [[26, "arkouda.ndarray.ravel", false]], "ravel() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.ravel", false]], "re (arkouda.match.match attribute)": [[33, "arkouda.match.Match.re", false]], "read() (in module arkouda)": [[26, "arkouda.read", false], [109, "arkouda.read", false]], "read() (in module arkouda.io)": [[29, "arkouda.io.read", false]], "read_csv() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.read_csv", false], [26, "id37", false]], "read_csv() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.read_csv", false]], "read_csv() (in module arkouda)": [[26, "arkouda.read_csv", false]], "read_csv() (in module arkouda.io)": [[29, "arkouda.io.read_csv", false]], "read_hdf() (arkouda.numpy.segarray class method)": [[42, "arkouda.numpy.SegArray.read_hdf", false]], "read_hdf() (arkouda.numpy.segarray.segarray class method)": [[54, "arkouda.numpy.segarray.SegArray.read_hdf", false]], "read_hdf() (arkouda.segarray class method)": [[26, "arkouda.SegArray.read_hdf", false]], "read_hdf() (arkouda.segarray.segarray class method)": [[72, "arkouda.segarray.SegArray.read_hdf", false]], "read_hdf() (arkouda.util.segarray class method)": [[80, "arkouda.util.SegArray.read_hdf", false]], "read_hdf() (in module arkouda)": [[26, "arkouda.read_hdf", false]], "read_hdf() (in module arkouda.io)": [[29, "arkouda.io.read_hdf", false]], "read_parquet() (in module arkouda)": [[26, "arkouda.read_parquet", false]], "read_parquet() (in module arkouda.io)": [[29, "arkouda.io.read_parquet", false]], "read_tagged_data() (in module arkouda)": [[26, "arkouda.read_tagged_data", false]], "read_tagged_data() (in module arkouda.io)": [[29, "arkouda.io.read_tagged_data", false]], "read_zarr() (in module arkouda)": [[26, "arkouda.read_zarr", false]], "read_zarr() (in module arkouda.io)": [[29, "arkouda.io.read_zarr", false]], "real() (arkouda.ndarray method)": [[26, "arkouda.ndarray.real", false]], "real() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.real", false]], "real() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.real", false]], "receive() (in module arkouda)": [[26, "arkouda.receive", false]], "receive() (in module arkouda.io)": [[29, "arkouda.io.receive", false]], "receive_dataframe() (in module arkouda)": [[26, "arkouda.receive_dataframe", false]], "receive_dataframe() (in module arkouda.io)": [[29, "arkouda.io.receive_dataframe", false]], "reductions() (arkouda.groupby method)": [[26, "arkouda.GroupBy.Reductions", false], [26, "id136", false], [26, "id183", false], [26, "id230", false], [26, "id277", false]], "reductions() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.Reductions", false]], "reductions() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.Reductions", false]], "reductions() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.Reductions", false]], "reductions() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.Reductions", false]], "regex_split() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.regex_split", false], [42, "id130", false], [42, "id206", false], [42, "id55", false]], "regex_split() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.regex_split", false]], "regex_split() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.regex_split", false]], "regex_split() (arkouda.strings method)": [[26, "arkouda.Strings.regex_split", false], [26, "id370", false], [26, "id446", false]], "regex_split() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.regex_split", false]], "regex_split() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.regex_split", false]], "register() (arkouda.bitvector method)": [[26, "arkouda.BitVector.register", false]], "register() (arkouda.categorical method)": [[26, "arkouda.Categorical.register", false]], "register() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.register", false]], "register() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.register", false]], "register() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.register", false]], "register() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.register", false], [26, "id38", false]], "register() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.register", false]], "register() (arkouda.datetime method)": [[26, "arkouda.Datetime.register", false], [26, "id107", false], [26, "id74", false]], "register() (arkouda.groupby method)": [[26, "arkouda.GroupBy.register", false], [26, "id160", false], [26, "id207", false], [26, "id254", false], [26, "id301", false], [116, "arkouda.GroupBy.register", false]], "register() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.register", false]], "register() (arkouda.index method)": [[26, "arkouda.Index.register", false]], "register() (arkouda.index.index method)": [[27, "arkouda.index.Index.register", false]], "register() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.register", false]], "register() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.register", false]], "register() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.register", false]], "register() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.register", false]], "register() (arkouda.numpy.datetime method)": [[42, "arkouda.numpy.Datetime.register", false]], "register() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.register", false]], "register() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.register", false], [42, "id314", false], [42, "id381", false], [42, "id449", false], [42, "id518", false]], "register() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.register", false]], "register() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.register", false]], "register() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.register", false]], "register() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.register", false], [42, "id131", false], [42, "id207", false], [42, "id56", false]], "register() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.register", false]], "register() (arkouda.numpy.timeclass.datetime method)": [[57, "arkouda.numpy.timeclass.Datetime.register", false]], "register() (arkouda.numpy.timeclass.timedelta method)": [[57, "arkouda.numpy.timeclass.Timedelta.register", false]], "register() (arkouda.numpy.timedelta method)": [[42, "arkouda.numpy.Timedelta.register", false]], "register() (arkouda.pdarray method)": [[26, "arkouda.pdarray.register", false], [26, "id580", false], [26, "id648", false]], "register() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.register", false]], "register() (arkouda.segarray method)": [[26, "arkouda.SegArray.register", false]], "register() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.register", false]], "register() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.register", false]], "register() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.register", false]], "register() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.register", false]], "register() (arkouda.series method)": [[26, "arkouda.Series.register", false]], "register() (arkouda.series.series method)": [[73, "arkouda.series.Series.register", false]], "register() (arkouda.strings method)": [[26, "arkouda.Strings.register", false], [26, "id371", false], [26, "id447", false]], "register() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.register", false]], "register() (arkouda.timeclass.datetime method)": [[79, "arkouda.timeclass.Datetime.register", false]], "register() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.register", false]], "register() (arkouda.timeclass.timedelta method)": [[79, "arkouda.timeclass.Timedelta.register", false]], "register() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.register", false], [26, "id477", false]], "register() (arkouda.util.bitvector method)": [[80, "arkouda.util.BitVector.register", false]], "register() (arkouda.util.datetime method)": [[80, "arkouda.util.Datetime.register", false]], "register() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.register", false]], "register() (arkouda.util.ipv4 method)": [[80, "arkouda.util.IPv4.register", false]], "register() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.register", false]], "register() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.register", false]], "register() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.register", false]], "register() (arkouda.util.timedelta method)": [[80, "arkouda.util.Timedelta.register", false]], "register() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.register", false]], "register() (in module arkouda.util)": [[80, "arkouda.util.register", false]], "register_all() (in module arkouda)": [[26, "arkouda.register_all", false]], "register_all() (in module arkouda.numpy)": [[42, "arkouda.numpy.register_all", false]], "register_all() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.register_all", false]], "register_all() (in module arkouda.util)": [[80, "arkouda.util.register_all", false]], "registerablepieces (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.RegisterablePieces", false]], "registerablepieces() (arkouda.categorical method)": [[26, "arkouda.Categorical.RegisterablePieces", false]], "registerablepieces() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.RegisterablePieces", false]], "registered_name (arkouda.bitvector attribute)": [[26, "arkouda.BitVector.registered_name", false]], "registered_name (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.registered_name", false]], "registered_name (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.registered_name", false]], "registered_name (arkouda.index attribute)": [[26, "arkouda.Index.registered_name", false]], "registered_name (arkouda.index.index attribute)": [[27, "arkouda.index.Index.registered_name", false]], "registered_name (arkouda.index.multiindex attribute)": [[27, "arkouda.index.MultiIndex.registered_name", false]], "registered_name (arkouda.multiindex attribute)": [[26, "arkouda.MultiIndex.registered_name", false]], "registered_name (arkouda.numpy.pdarray attribute)": [[42, "arkouda.numpy.pdarray.registered_name", false], [42, "id450", false], [42, "id519", false]], "registered_name (arkouda.numpy.pdarrayclass.pdarray attribute)": [[47, "arkouda.numpy.pdarrayclass.pdarray.registered_name", false]], "registered_name (arkouda.numpy.segarray attribute)": [[42, "arkouda.numpy.SegArray.registered_name", false]], "registered_name (arkouda.numpy.segarray.segarray attribute)": [[54, "arkouda.numpy.segarray.SegArray.registered_name", false]], "registered_name (arkouda.numpy.strings attribute)": [[42, "arkouda.numpy.Strings.registered_name", false], [42, "id208", false]], "registered_name (arkouda.numpy.strings.strings attribute)": [[56, "arkouda.numpy.strings.Strings.registered_name", false]], "registered_name (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.registered_name", false], [26, "id649", false]], "registered_name (arkouda.pdarrayclass.pdarray attribute)": [[59, "arkouda.pdarrayclass.pdarray.registered_name", false]], "registered_name (arkouda.segarray attribute)": [[26, "arkouda.SegArray.registered_name", false]], "registered_name (arkouda.segarray.pdarray attribute)": [[72, "arkouda.segarray.pdarray.registered_name", false]], "registered_name (arkouda.segarray.segarray attribute)": [[72, "arkouda.segarray.SegArray.registered_name", false]], "registered_name (arkouda.segarray.strings attribute)": [[72, "arkouda.segarray.Strings.registered_name", false]], "registered_name (arkouda.strings attribute)": [[26, "arkouda.Strings.registered_name", false], [26, "id448", false]], "registered_name (arkouda.strings.strings attribute)": [[77, "arkouda.strings.Strings.registered_name", false]], "registered_name (arkouda.timeclass.pdarray attribute)": [[79, "arkouda.timeclass.pdarray.registered_name", false]], "registered_name (arkouda.util.bitvector attribute)": [[80, "arkouda.util.BitVector.registered_name", false]], "registered_name (arkouda.util.pdarray attribute)": [[80, "arkouda.util.pdarray.registered_name", false]], "registered_name (arkouda.util.segarray attribute)": [[80, "arkouda.util.SegArray.registered_name", false]], "registered_name (arkouda.util.strings attribute)": [[80, "arkouda.util.Strings.registered_name", false]], "registeredsymbols (in module arkouda)": [[26, "arkouda.RegisteredSymbols", false]], "registeredsymbols (in module arkouda.infoclass)": [[28, "arkouda.infoclass.RegisteredSymbols", false]], "registrationerror": [[26, "arkouda.RegistrationError", false], [26, "id315", false], [26, "id316", false], [42, "arkouda.numpy.RegistrationError", false], [42, "id3", false], [42, "id4", false], [47, "arkouda.numpy.pdarrayclass.RegistrationError", false], [59, "arkouda.pdarrayclass.RegistrationError", false], [72, "arkouda.segarray.RegistrationError", false], [79, "arkouda.timeclass.RegistrationError", false]], "remainder() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.remainder", false]], "remove_repeats() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.remove_repeats", false]], "remove_repeats() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.remove_repeats", false]], "remove_repeats() (arkouda.segarray method)": [[26, "arkouda.SegArray.remove_repeats", false]], "remove_repeats() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.remove_repeats", false]], "remove_repeats() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.remove_repeats", false]], "rename() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.rename", false], [26, "id39", false]], "rename() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.rename", false]], "rename() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.rename", false]], "repeat() (arkouda.ndarray method)": [[26, "arkouda.ndarray.repeat", false]], "repeat() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.repeat", false]], "repeat() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.repeat", false]], "report_mem() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.report_mem", false]], "report_mem() (in module arkouda.util)": [[80, "arkouda.util.report_mem", false]], "requiredpieces (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.RequiredPieces", false]], "requiredpieces() (arkouda.categorical method)": [[26, "arkouda.Categorical.RequiredPieces", false]], "requiredpieces() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.RequiredPieces", false]], "reset_categories() (arkouda.categorical method)": [[26, "arkouda.Categorical.reset_categories", false]], "reset_categories() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.reset_categories", false]], "reset_categories() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.reset_categories", false]], "reset_comm_diagnostics() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.reset_comm_diagnostics", false]], "reset_index() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.reset_index", false], [26, "id40", false]], "reset_index() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.reset_index", false]], "reset_index() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.reset_index", false]], "reshape() (arkouda.ndarray method)": [[26, "arkouda.ndarray.reshape", false]], "reshape() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.reshape", false]], "reshape() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.reshape", false], [42, "id315", false], [42, "id382", false], [42, "id451", false], [42, "id520", false]], "reshape() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.reshape", false]], "reshape() (arkouda.pdarray method)": [[26, "arkouda.pdarray.reshape", false], [26, "id581", false], [26, "id650", false]], "reshape() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.reshape", false]], "reshape() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.reshape", false]], "reshape() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.reshape", false]], "reshape() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.reshape", false]], "reshape() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.reshape", false]], "resize() (arkouda.ndarray method)": [[26, "arkouda.ndarray.resize", false]], "resize() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.resize", false]], "resolve_scalar_dtype() (in module arkouda)": [[26, "arkouda.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.numpy)": [[42, "arkouda.numpy.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.resolve_scalar_dtype", false], [39, "id1", false]], "resolve_scalar_dtype() (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.resolve_scalar_dtype", false]], "restore() (in module arkouda)": [[26, "arkouda.restore", false]], "restore() (in module arkouda.io)": [[29, "arkouda.io.restore", false]], "result_type() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.result_type", false]], "retrieve() (arkouda.history.historyretriever method)": [[25, "arkouda.history.HistoryRetriever.retrieve", false]], "retrieve() (arkouda.history.notebookhistoryretriever method)": [[25, "arkouda.history.NotebookHistoryRetriever.retrieve", false]], "retrieve() (arkouda.history.shellhistoryretriever method)": [[25, "arkouda.history.ShellHistoryRetriever.retrieve", false]], "reverse (arkouda.bitvector attribute)": [[26, "arkouda.BitVector.reverse", false]], "reverse (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.reverse", false]], "reverse (arkouda.util.bitvector attribute)": [[80, "arkouda.util.BitVector.reverse", false]], "right_align() (in module arkouda.alignment)": [[3, "arkouda.alignment.right_align", false]], "roll() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.roll", false]], "rotl() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.rotl", false], [42, "id316", false], [42, "id383", false], [42, "id452", false], [42, "id521", false]], "rotl() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.rotl", false]], "rotl() (arkouda.pdarray method)": [[26, "arkouda.pdarray.rotl", false], [26, "id582", false], [26, "id651", false]], "rotl() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.rotl", false]], "rotl() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.rotl", false]], "rotl() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.rotl", false]], "rotl() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.rotl", false]], "rotl() (in module arkouda)": [[26, "arkouda.rotl", false]], "rotl() (in module arkouda.numpy)": [[42, "arkouda.numpy.rotl", false]], "rotl() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.rotl", false]], "rotl() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.rotl", false]], "rotr() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.rotr", false], [42, "id317", false], [42, "id384", false], [42, "id453", false], [42, "id522", false]], "rotr() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.rotr", false]], "rotr() (arkouda.pdarray method)": [[26, "arkouda.pdarray.rotr", false], [26, "id583", false], [26, "id652", false]], "rotr() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.rotr", false]], "rotr() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.rotr", false]], "rotr() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.rotr", false]], "rotr() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.rotr", false]], "rotr() (in module arkouda)": [[26, "arkouda.rotr", false]], "rotr() (in module arkouda.numpy)": [[42, "arkouda.numpy.rotr", false]], "rotr() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.rotr", false]], "rotr() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.rotr", false]], "round() (arkouda.ndarray method)": [[26, "arkouda.ndarray.round", false]], "round() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.round", false]], "round() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.round", false]], "row (class in arkouda)": [[26, "arkouda.Row", false]], "row (class in arkouda.row)": [[65, "arkouda.row.Row", false]], "rpeel() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.rpeel", false], [42, "id132", false], [42, "id209", false], [42, "id57", false]], "rpeel() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.rpeel", false]], "rpeel() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.rpeel", false]], "rpeel() (arkouda.strings method)": [[26, "arkouda.Strings.rpeel", false], [26, "id372", false], [26, "id449", false]], "rpeel() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.rpeel", false]], "rpeel() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.rpeel", false]], "ruok() (in module arkouda.client)": [[19, "arkouda.client.ruok", false]], "sample() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.sample", false], [26, "id41", false]], "sample() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.sample", false]], "sample() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.sample", false]], "sample() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.sample", false]], "sample() (arkouda.groupby method)": [[26, "arkouda.GroupBy.sample", false], [26, "id161", false], [26, "id208", false], [26, "id255", false], [26, "id302", false], [116, "arkouda.GroupBy.sample", false]], "sample() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.sample", false]], "sample() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.sample", false]], "sample() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.sample", false]], "sample() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.sample", false]], "save() (arkouda.categorical method)": [[26, "arkouda.Categorical.save", false]], "save() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.save", false]], "save() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.save", false], [26, "id42", false]], "save() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.save", false]], "save() (arkouda.index method)": [[26, "arkouda.Index.save", false]], "save() (arkouda.index.index method)": [[27, "arkouda.index.Index.save", false]], "save() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.save", false]], "save() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.save", false], [42, "id318", false], [42, "id385", false], [42, "id454", false], [42, "id523", false]], "save() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.save", false]], "save() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.save", false]], "save() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.save", false]], "save() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.save", false], [42, "id133", false], [42, "id210", false], [42, "id58", false]], "save() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.save", false]], "save() (arkouda.pdarray method)": [[26, "arkouda.pdarray.save", false], [26, "id584", false], [26, "id653", false]], "save() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.save", false]], "save() (arkouda.segarray method)": [[26, "arkouda.SegArray.save", false]], "save() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.save", false]], "save() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.save", false]], "save() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.save", false]], "save() (arkouda.strings method)": [[26, "arkouda.Strings.save", false], [26, "id373", false], [26, "id450", false]], "save() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.save", false]], "save() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.save", false]], "save() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.save", false]], "save() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.save", false]], "save() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.save", false]], "save_all() (in module arkouda)": [[26, "arkouda.save_all", false]], "save_all() (in module arkouda.io)": [[29, "arkouda.io.save_all", false]], "save_checkpoint() (in module arkouda)": [[26, "arkouda.save_checkpoint", false]], "save_checkpoint() (in module arkouda.io)": [[29, "arkouda.io.save_checkpoint", false]], "scalar_array() (in module arkouda)": [[26, "arkouda.scalar_array", false]], "scalar_array() (in module arkouda.numpy)": [[42, "arkouda.numpy.scalar_array", false]], "scalar_array() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.scalar_array", false]], "scalar_array() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.scalar_array", false]], "scalardtypes (in module arkouda)": [[26, "arkouda.ScalarDTypes", false]], "scalardtypes (in module arkouda.dtypes)": [[23, "arkouda.dtypes.ScalarDTypes", false]], "scalardtypes (in module arkouda.numpy)": [[42, "arkouda.numpy.ScalarDTypes", false]], "scalardtypes (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.ScalarDTypes", false]], "scalardtypes (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.ScalarDTypes", false]], "search() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.search", false], [42, "id134", false], [42, "id211", false], [42, "id59", false]], "search() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.search", false]], "search() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.search", false]], "search() (arkouda.strings method)": [[26, "arkouda.Strings.search", false], [26, "id374", false], [26, "id451", false]], "search() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.search", false]], "search() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.search", false]], "search_bool (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.search_bool", false]], "search_ind (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.search_ind", false]], "search_intervals() (in module arkouda.alignment)": [[3, "arkouda.alignment.search_intervals", false]], "searchsorted() (arkouda.ndarray method)": [[26, "arkouda.ndarray.searchsorted", false]], "searchsorted() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.searchsorted", false]], "searchsorted() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.searchsorted", false]], "second (arkouda.datetime property)": [[26, "arkouda.Datetime.second", false], [26, "id108", false], [26, "id75", false]], "second (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.second", false]], "second (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.second", false]], "second (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.second", false]], "second (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.second", false]], "seconds (arkouda.numpy.timeclass.timedelta property)": [[57, "arkouda.numpy.timeclass.Timedelta.seconds", false]], "seconds (arkouda.numpy.timedelta property)": [[42, "arkouda.numpy.Timedelta.seconds", false]], "seconds (arkouda.timeclass.timedelta property)": [[79, "arkouda.timeclass.Timedelta.seconds", false]], "seconds (arkouda.timedelta property)": [[26, "arkouda.Timedelta.seconds", false], [26, "id478", false]], "seconds (arkouda.util.timedelta property)": [[80, "arkouda.util.Timedelta.seconds", false]], "seg_suffix (in module arkouda)": [[26, "arkouda.SEG_SUFFIX", false]], "seg_suffix (in module arkouda.numpy)": [[42, "arkouda.numpy.SEG_SUFFIX", false]], "seg_suffix (in module arkouda.numpy.segarray)": [[54, "arkouda.numpy.segarray.SEG_SUFFIX", false]], "seg_suffix (in module arkouda.segarray)": [[72, "arkouda.segarray.SEG_SUFFIX", false]], "segarray (class in arkouda)": [[26, "arkouda.SegArray", false]], "segarray (class in arkouda.numpy)": [[42, "arkouda.numpy.SegArray", false]], "segarray (class in arkouda.numpy.segarray)": [[54, "arkouda.numpy.segarray.SegArray", false]], "segarray (class in arkouda.segarray)": [[72, "arkouda.segarray.SegArray", false]], "segarray (class in arkouda.util)": [[80, "arkouda.util.SegArray", false]], "segarray() (in module arkouda)": [[26, "arkouda.segarray", false]], "segarray() (in module arkouda.numpy)": [[42, "arkouda.numpy.segarray", false]], "segarray() (in module arkouda.numpy.segarray)": [[54, "arkouda.numpy.segarray.segarray", false]], "segarray() (in module arkouda.segarray)": [[72, "arkouda.segarray.segarray", false]], "segments (arkouda.categorical attribute)": [[26, "arkouda.Categorical.segments", false], [113, "arkouda.Categorical.segments", false]], "segments (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.segments", false], [18, "id3", false]], "segments (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.segments", false], [26, "id131", false], [26, "id178", false], [26, "id225", false], [26, "id272", false], [116, "arkouda.GroupBy.segments", false]], "segments (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.segments", false]], "segments (arkouda.numpy.categorical attribute)": [[42, "arkouda.numpy.Categorical.segments", false]], "segments (arkouda.numpy.groupby attribute)": [[42, "arkouda.numpy.GroupBy.segments", false]], "segments (arkouda.numpy.segarray attribute)": [[42, "arkouda.numpy.SegArray.segments", false]], "segments (arkouda.numpy.segarray.segarray attribute)": [[54, "arkouda.numpy.segarray.SegArray.segments", false]], "segments (arkouda.segarray attribute)": [[26, "arkouda.SegArray.segments", false]], "segments (arkouda.segarray.groupby attribute)": [[72, "arkouda.segarray.GroupBy.segments", false]], "segments (arkouda.segarray.segarray attribute)": [[72, "arkouda.segarray.SegArray.segments", false]], "segments (arkouda.util.groupby attribute)": [[80, "arkouda.util.GroupBy.segments", false]], "segments (arkouda.util.segarray attribute)": [[80, "arkouda.util.SegArray.segments", false]], "segments() (arkouda.categorical method)": [[26, "id1", false]], "segments() (arkouda.numpy.categorical method)": [[42, "id1", false]], "separator (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.separator", false]], "separator (arkouda.fields attribute)": [[26, "arkouda.Fields.separator", false]], "series (arkouda.accessor.datetimeaccessor attribute)": [[2, "arkouda.accessor.DatetimeAccessor.series", false]], "series (arkouda.accessor.stringaccessor attribute)": [[2, "arkouda.accessor.StringAccessor.series", false]], "series (arkouda.datetimeaccessor attribute)": [[26, "arkouda.DatetimeAccessor.series", false]], "series (arkouda.stringaccessor attribute)": [[26, "arkouda.StringAccessor.series", false]], "series (class in arkouda)": [[26, "arkouda.Series", false], [122, "arkouda.Series", false]], "series (class in arkouda.series)": [[73, "arkouda.series.Series", false]], "seriesdtypes (in module arkouda)": [[26, "arkouda.SeriesDTypes", false]], "seriesdtypes (in module arkouda.dtypes)": [[23, "arkouda.dtypes.SeriesDTypes", false]], "seriesdtypes (in module arkouda.numpy)": [[42, "arkouda.numpy.SeriesDTypes", false]], "seriesdtypes (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.SeriesDTypes", false]], "seriesdtypes (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.SeriesDTypes", false]], "set_categories() (arkouda.categorical method)": [[26, "arkouda.Categorical.set_categories", false]], "set_categories() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.set_categories", false]], "set_categories() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.set_categories", false]], "set_dtype() (arkouda.index method)": [[26, "arkouda.Index.set_dtype", false]], "set_dtype() (arkouda.index.index method)": [[27, "arkouda.index.Index.set_dtype", false]], "set_dtype() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.set_dtype", false]], "set_dtype() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.set_dtype", false]], "set_dtype() (in module arkouda.index)": [[110, "arkouda.Index.set_dtype", false]], "set_dtype() (in module arkouda.multiindex)": [[110, "arkouda.MultiIndex.set_dtype", false]], "set_jth() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.set_jth", false]], "set_jth() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.set_jth", false]], "set_jth() (arkouda.segarray method)": [[26, "arkouda.SegArray.set_jth", false]], "set_jth() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.set_jth", false]], "set_jth() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.set_jth", false]], "setdiff() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.setdiff", false]], "setdiff() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.setdiff", false]], "setdiff() (arkouda.segarray method)": [[26, "arkouda.SegArray.setdiff", false]], "setdiff() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.setdiff", false]], "setdiff() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.setdiff", false]], "setdiff1d() (in module arkouda)": [[26, "arkouda.setdiff1d", false], [123, "arkouda.setdiff1d", false]], "setdiff1d() (in module arkouda.numpy)": [[42, "arkouda.numpy.setdiff1d", false]], "setdiff1d() (in module arkouda.numpy.pdarraysetops)": [[50, "arkouda.numpy.pdarraysetops.setdiff1d", false]], "setdiff1d() (in module arkouda.pdarraysetops)": [[62, "arkouda.pdarraysetops.setdiff1d", false]], "setfield() (arkouda.ndarray method)": [[26, "arkouda.ndarray.setfield", false]], "setfield() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.setfield", false]], "setflags() (arkouda.ndarray method)": [[26, "arkouda.ndarray.setflags", false]], "setflags() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.setflags", false]], "setxor() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.setxor", false]], "setxor() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.setxor", false]], "setxor() (arkouda.segarray method)": [[26, "arkouda.SegArray.setxor", false]], "setxor() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.setxor", false]], "setxor() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.setxor", false]], "setxor1d() (in module arkouda)": [[26, "arkouda.setxor1d", false], [123, "arkouda.setxor1d", false]], "setxor1d() (in module arkouda.numpy)": [[42, "arkouda.numpy.setxor1d", false]], "setxor1d() (in module arkouda.numpy.pdarraysetops)": [[50, "arkouda.numpy.pdarraysetops.setxor1d", false]], "setxor1d() (in module arkouda.pdarraysetops)": [[62, "arkouda.pdarraysetops.setxor1d", false]], "shape (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.shape", false]], "shape (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.shape", false]], "shape (arkouda.bigint attribute)": [[26, "arkouda.bigint.shape", false]], "shape (arkouda.categorical attribute)": [[26, "arkouda.Categorical.shape", false], [113, "arkouda.Categorical.shape", false]], "shape (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.shape", false], [18, "id4", false]], "shape (arkouda.dataframe property)": [[26, "arkouda.DataFrame.shape", false], [26, "id43", false]], "shape (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.shape", false]], "shape (arkouda.dtypes.bigint attribute)": [[23, "arkouda.dtypes.bigint.shape", false]], "shape (arkouda.index property)": [[26, "arkouda.Index.shape", false]], "shape (arkouda.index.index property)": [[27, "arkouda.index.Index.shape", false]], "shape (arkouda.numpy.bigint attribute)": [[42, "arkouda.numpy.bigint.shape", false]], "shape (arkouda.numpy.categorical attribute)": [[42, "arkouda.numpy.Categorical.shape", false]], "shape (arkouda.numpy.dtypes.bigint attribute)": [[39, "arkouda.numpy.dtypes.bigint.shape", false]], "shape (arkouda.numpy.dtypes.dtypes.bigint attribute)": [[38, "arkouda.numpy.dtypes.dtypes.bigint.shape", false]], "shape (arkouda.numpy.pdarray attribute)": [[42, "arkouda.numpy.pdarray.shape", false], [42, "id276", false], [42, "id339", false], [42, "id407", false], [42, "id476", false]], "shape (arkouda.numpy.pdarray property)": [[42, "id270", false], [42, "id319", false], [42, "id386", false], [42, "id455", false], [42, "id524", false]], "shape (arkouda.numpy.pdarrayclass.pdarray attribute)": [[47, "arkouda.numpy.pdarrayclass.pdarray.shape", false]], "shape (arkouda.numpy.pdarrayclass.pdarray property)": [[47, "id4", false]], "shape (arkouda.numpy.strings attribute)": [[42, "arkouda.numpy.Strings.shape", false], [42, "id10", false], [42, "id158", false], [42, "id82", false]], "shape (arkouda.numpy.strings.strings attribute)": [[56, "arkouda.numpy.strings.Strings.shape", false]], "shape (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.shape", false], [26, "id538", false], [26, "id606", false], [119, "arkouda.pdarray.shape", false]], "shape (arkouda.pdarray property)": [[26, "id532", false], [26, "id585", false], [26, "id654", false]], "shape (arkouda.pdarrayclass.pdarray attribute)": [[59, "arkouda.pdarrayclass.pdarray.shape", false]], "shape (arkouda.pdarrayclass.pdarray property)": [[59, "id4", false]], "shape (arkouda.scipy.sparrayclass.sparray attribute)": [[67, "arkouda.scipy.sparrayclass.sparray.shape", false], [67, "id6", false]], "shape (arkouda.segarray.pdarray attribute)": [[72, "arkouda.segarray.pdarray.shape", false]], "shape (arkouda.segarray.pdarray property)": [[72, "id9", false]], "shape (arkouda.segarray.strings attribute)": [[72, "arkouda.segarray.Strings.shape", false]], "shape (arkouda.series property)": [[26, "arkouda.Series.shape", false]], "shape (arkouda.series.series property)": [[73, "arkouda.series.Series.shape", false]], "shape (arkouda.sparrayclass.sparray attribute)": [[75, "arkouda.sparrayclass.sparray.shape", false], [75, "id6", false]], "shape (arkouda.strings attribute)": [[26, "arkouda.Strings.shape", false], [26, "id322", false], [26, "id398", false]], "shape (arkouda.strings.strings attribute)": [[77, "arkouda.strings.Strings.shape", false]], "shape (arkouda.timeclass.pdarray attribute)": [[79, "arkouda.timeclass.pdarray.shape", false]], "shape (arkouda.timeclass.pdarray property)": [[79, "id4", false]], "shape (arkouda.util.pdarray attribute)": [[80, "arkouda.util.pdarray.shape", false]], "shape (arkouda.util.pdarray property)": [[80, "id9", false]], "shape (arkouda.util.strings attribute)": [[80, "arkouda.util.Strings.shape", false]], "shape() (arkouda.ndarray method)": [[26, "arkouda.ndarray.shape", false]], "shape() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.shape", false]], "shape() (in module arkouda)": [[26, "arkouda.shape", false]], "shape() (in module arkouda.numpy)": [[42, "arkouda.numpy.shape", false]], "shapes() (arkouda.scipy.stats.chi2 method)": [[70, "arkouda.scipy.stats.chi2.shapes", false]], "shellhistoryretriever (class in arkouda.history)": [[25, "arkouda.history.ShellHistoryRetriever", false]], "show_int (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.show_int", false]], "show_int (arkouda.fields attribute)": [[26, "arkouda.Fields.show_int", false]], "shuffle() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.shuffle", false]], "shuffle() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.shuffle", false]], "shuffle() (in module arkouda.random.generator)": [[120, "arkouda.random.Generator.shuffle", false]], "shutdown() (in module arkouda.client)": [[19, "arkouda.client.shutdown", false]], "sign() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.sign", false]], "sin() (in module arkouda)": [[112, "arkouda.sin", false]], "sin() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.sin", false]], "sinh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.sinh", false]], "size (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.size", false]], "size (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.size", false]], "size (arkouda.categorical attribute)": [[26, "arkouda.Categorical.size", false], [113, "arkouda.Categorical.size", false]], "size (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.size", false], [18, "id5", false]], "size (arkouda.dataframe property)": [[26, "arkouda.DataFrame.size", false], [26, "id44", false]], "size (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.size", false]], "size (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.size", false], [26, "id127", false], [26, "id174", false], [26, "id221", false], [26, "id268", false], [116, "arkouda.GroupBy.size", false]], "size (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.size", false]], "size (arkouda.numpy.categorical attribute)": [[42, "arkouda.numpy.Categorical.size", false]], "size (arkouda.numpy.groupby attribute)": [[42, "arkouda.numpy.GroupBy.size", false]], "size (arkouda.numpy.pdarray attribute)": [[42, "arkouda.numpy.pdarray.size", false], [42, "id274", false], [42, "id337", false], [42, "id387", false], [42, "id405", false], [42, "id456", false], [42, "id474", false], [42, "id525", false]], "size (arkouda.numpy.pdarrayclass.pdarray attribute)": [[47, "arkouda.numpy.pdarrayclass.pdarray.size", false], [47, "id5", false]], "size (arkouda.numpy.segarray attribute)": [[42, "arkouda.numpy.SegArray.size", false]], "size (arkouda.numpy.segarray.segarray attribute)": [[54, "arkouda.numpy.segarray.SegArray.size", false]], "size (arkouda.numpy.strings attribute)": [[42, "arkouda.numpy.Strings.size", false], [42, "id135", false], [42, "id155", false], [42, "id212", false], [42, "id7", false], [42, "id79", false]], "size (arkouda.numpy.strings.strings attribute)": [[56, "arkouda.numpy.strings.Strings.size", false], [56, "id3", false]], "size (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.size", false], [26, "id536", false], [26, "id586", false], [26, "id604", false], [26, "id655", false], [119, "arkouda.pdarray.size", false]], "size (arkouda.pdarrayclass.pdarray attribute)": [[59, "arkouda.pdarrayclass.pdarray.size", false], [59, "id5", false]], "size (arkouda.scipy.sparrayclass.sparray attribute)": [[67, "arkouda.scipy.sparrayclass.sparray.size", false], [67, "id7", false]], "size (arkouda.segarray attribute)": [[26, "arkouda.SegArray.size", false]], "size (arkouda.segarray.groupby attribute)": [[72, "arkouda.segarray.GroupBy.size", false]], "size (arkouda.segarray.pdarray attribute)": [[72, "arkouda.segarray.pdarray.size", false], [72, "id10", false]], "size (arkouda.segarray.segarray attribute)": [[72, "arkouda.segarray.SegArray.size", false]], "size (arkouda.segarray.strings attribute)": [[72, "arkouda.segarray.Strings.size", false], [72, "id4", false]], "size (arkouda.sparrayclass.sparray attribute)": [[75, "arkouda.sparrayclass.sparray.size", false], [75, "id7", false]], "size (arkouda.strings attribute)": [[26, "arkouda.Strings.size", false], [26, "id319", false], [26, "id375", false], [26, "id395", false], [26, "id452", false]], "size (arkouda.strings.strings attribute)": [[77, "arkouda.strings.Strings.size", false], [77, "id3", false]], "size (arkouda.timeclass.pdarray attribute)": [[79, "arkouda.timeclass.pdarray.size", false], [79, "id5", false]], "size (arkouda.util.groupby attribute)": [[80, "arkouda.util.GroupBy.size", false]], "size (arkouda.util.pdarray attribute)": [[80, "arkouda.util.pdarray.size", false], [80, "id10", false]], "size (arkouda.util.segarray attribute)": [[80, "arkouda.util.SegArray.size", false]], "size (arkouda.util.strings attribute)": [[80, "arkouda.util.Strings.size", false], [80, "id4", false]], "size() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.size", false]], "size() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.size", false]], "size() (arkouda.groupby method)": [[26, "id124", false], [26, "id162", false], [26, "id209", false], [26, "id256", false], [26, "id303", false], [116, "id0", false]], "size() (arkouda.groupbyclass.groupby method)": [[24, "id0", false]], "size() (arkouda.ndarray method)": [[26, "arkouda.ndarray.size", false]], "size() (arkouda.numpy.groupby method)": [[42, "id2", false]], "size() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.size", false]], "size() (arkouda.segarray.groupby method)": [[72, "id0", false]], "size() (arkouda.util.groupby method)": [[80, "id0", false]], "skew() (in module arkouda)": [[26, "arkouda.skew", false]], "slice_bits() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.slice_bits", false], [42, "id320", false], [42, "id388", false], [42, "id457", false], [42, "id526", false]], "slice_bits() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.slice_bits", false]], "slice_bits() (arkouda.pdarray method)": [[26, "arkouda.pdarray.slice_bits", false], [26, "id587", false], [26, "id656", false]], "slice_bits() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.slice_bits", false]], "slice_bits() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.slice_bits", false]], "slice_bits() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.slice_bits", false]], "slice_bits() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.slice_bits", false]], "smallest_normal (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.smallest_normal", false]], "snapshot() (in module arkouda)": [[26, "arkouda.snapshot", false]], "snapshot() (in module arkouda.io)": [[29, "arkouda.io.snapshot", false]], "sort() (arkouda.ndarray method)": [[26, "arkouda.ndarray.sort", false]], "sort() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.sort", false]], "sort() (in module arkouda)": [[26, "arkouda.sort", false]], "sort() (in module arkouda.array_api.sorting_functions)": [[15, "arkouda.array_api.sorting_functions.sort", false]], "sort() (in module arkouda.numpy)": [[42, "arkouda.numpy.sort", false]], "sort() (in module arkouda.numpy.sorting)": [[55, "arkouda.numpy.sorting.sort", false]], "sort() (in module arkouda.sorting)": [[74, "arkouda.sorting.sort", false]], "sort_index() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.sort_index", false], [26, "id45", false]], "sort_index() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.sort_index", false]], "sort_index() (arkouda.series method)": [[26, "arkouda.Series.sort_index", false]], "sort_index() (arkouda.series.series method)": [[73, "arkouda.series.Series.sort_index", false]], "sort_index() (in module arkouda.series)": [[122, "arkouda.Series.sort_index", false]], "sort_values() (arkouda.categorical method)": [[26, "arkouda.Categorical.sort_values", false]], "sort_values() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.sort_values", false]], "sort_values() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.sort_values", false], [26, "id46", false]], "sort_values() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.sort_values", false]], "sort_values() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.sort_values", false]], "sort_values() (arkouda.series method)": [[26, "arkouda.Series.sort_values", false]], "sort_values() (arkouda.series.series method)": [[73, "arkouda.series.Series.sort_values", false]], "sort_values() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.sort_values", false]], "sort_values() (in module arkouda.series)": [[122, "arkouda.Series.sort_values", false]], "sortingalgorithm (in module arkouda)": [[26, "arkouda.SortingAlgorithm", false]], "sortingalgorithm (in module arkouda.numpy)": [[42, "arkouda.numpy.SortingAlgorithm", false]], "sortingalgorithm (in module arkouda.numpy.sorting)": [[55, "arkouda.numpy.sorting.SortingAlgorithm", false]], "sortingalgorithm (in module arkouda.sorting)": [[74, "arkouda.sorting.SortingAlgorithm", false]], "sparray (class in arkouda.scipy.sparrayclass)": [[67, "arkouda.scipy.sparrayclass.sparray", false]], "sparray (class in arkouda.sparrayclass)": [[75, "arkouda.sparrayclass.sparray", false]], "sparse_matrix_matrix_mult() (in module arkouda.scipy.sparsematrix)": [[68, "arkouda.scipy.sparsematrix.sparse_matrix_matrix_mult", false]], "sparse_matrix_matrix_mult() (in module arkouda.sparsematrix)": [[76, "arkouda.sparsematrix.sparse_matrix_matrix_mult", false]], "sparse_sum_help() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.sparse_sum_help", false]], "sparse_sum_help() (in module arkouda.util)": [[80, "arkouda.util.sparse_sum_help", false]], "special_objtype (arkouda.bitvector attribute)": [[26, "arkouda.BitVector.special_objType", false]], "special_objtype (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.special_objType", false]], "special_objtype (arkouda.client_dtypes.ipv4 attribute)": [[20, "arkouda.client_dtypes.IPv4.special_objType", false]], "special_objtype (arkouda.datetime attribute)": [[26, "arkouda.Datetime.special_objType", false], [26, "id109", false], [26, "id76", false]], "special_objtype (arkouda.ipv4 attribute)": [[26, "arkouda.IPv4.special_objType", false]], "special_objtype (arkouda.numpy.datetime attribute)": [[42, "arkouda.numpy.Datetime.special_objType", false]], "special_objtype (arkouda.numpy.timeclass.datetime attribute)": [[57, "arkouda.numpy.timeclass.Datetime.special_objType", false]], "special_objtype (arkouda.numpy.timeclass.timedelta attribute)": [[57, "arkouda.numpy.timeclass.Timedelta.special_objType", false]], "special_objtype (arkouda.numpy.timedelta attribute)": [[42, "arkouda.numpy.Timedelta.special_objType", false]], "special_objtype (arkouda.timeclass.datetime attribute)": [[79, "arkouda.timeclass.Datetime.special_objType", false]], "special_objtype (arkouda.timeclass.timedelta attribute)": [[79, "arkouda.timeclass.Timedelta.special_objType", false]], "special_objtype (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.special_objType", false], [26, "id479", false]], "special_objtype (arkouda.util.bitvector attribute)": [[80, "arkouda.util.BitVector.special_objType", false]], "special_objtype (arkouda.util.datetime attribute)": [[80, "arkouda.util.Datetime.special_objType", false]], "special_objtype (arkouda.util.ipv4 attribute)": [[80, "arkouda.util.IPv4.special_objType", false]], "special_objtype (arkouda.util.timedelta attribute)": [[80, "arkouda.util.Timedelta.special_objType", false]], "split() (arkouda.matcher.matcher method)": [[34, "arkouda.matcher.Matcher.split", false]], "split() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.split", false], [42, "id136", false], [42, "id213", false], [42, "id60", false]], "split() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.split", false]], "split() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.split", false]], "split() (arkouda.strings method)": [[26, "arkouda.Strings.split", false], [26, "id376", false], [26, "id453", false]], "split() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.split", false]], "split() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.split", false]], "sqrt() (in module arkouda)": [[26, "arkouda.sqrt", false]], "sqrt() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.sqrt", false]], "sqrt() (in module arkouda.numpy)": [[42, "arkouda.numpy.sqrt", false]], "sqrt() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.sqrt", false]], "sqrt() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.sqrt", false]], "square() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.square", false]], "squeeze() (arkouda.ndarray method)": [[26, "arkouda.ndarray.squeeze", false]], "squeeze() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.squeeze", false]], "squeeze() (in module arkouda)": [[26, "arkouda.squeeze", false]], "squeeze() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.squeeze", false]], "squeeze() (in module arkouda.numpy)": [[42, "arkouda.numpy.squeeze", false]], "stack() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.stack", false]], "standard_exponential() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.standard_exponential", false]], "standard_exponential() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.standard_exponential", false]], "standard_exponential() (in module arkouda.random.generator)": [[120, "arkouda.random.Generator.standard_exponential", false]], "standard_gamma() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.standard_gamma", false]], "standard_gamma() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.standard_gamma", false]], "standard_normal() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.standard_normal", false]], "standard_normal() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.standard_normal", false]], "standard_normal() (in module arkouda)": [[26, "arkouda.standard_normal", false]], "standard_normal() (in module arkouda.numpy)": [[42, "arkouda.numpy.standard_normal", false]], "standard_normal() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.standard_normal", false]], "standard_normal() (in module arkouda.numpy.random)": [[52, "arkouda.numpy.random.standard_normal", false]], "standard_normal() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.standard_normal", false]], "standard_normal() (in module arkouda.random)": [[64, "arkouda.random.standard_normal", false]], "standard_normal() (in module arkouda.random.generator)": [[120, "arkouda.random.Generator.standard_normal", false]], "standardize_categories() (arkouda.categorical method)": [[26, "arkouda.Categorical.standardize_categories", false]], "standardize_categories() (arkouda.categorical.categorical class method)": [[18, "arkouda.categorical.Categorical.standardize_categories", false]], "standardize_categories() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.standardize_categories", false]], "start() (arkouda.match.match method)": [[33, "arkouda.match.Match.start", false], [125, "arkouda.match.Match.start", false]], "start_comm_diagnostics() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.start_comm_diagnostics", false]], "start_verbose_comm() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.start_verbose_comm", false]], "starts (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.starts", false]], "startswith() (arkouda.categorical method)": [[26, "arkouda.Categorical.startswith", false], [113, "arkouda.Categorical.startswith", false]], "startswith() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.startswith", false]], "startswith() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.startswith", false]], "startswith() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.startswith", false], [42, "id137", false], [42, "id214", false], [42, "id61", false]], "startswith() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.startswith", false]], "startswith() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.startswith", false]], "startswith() (arkouda.strings method)": [[26, "arkouda.Strings.startswith", false], [26, "id377", false], [26, "id454", false]], "startswith() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.startswith", false]], "startswith() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.startswith", false]], "std() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.std", false]], "std() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.std", false]], "std() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.std", false]], "std() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.std", false]], "std() (arkouda.groupby method)": [[26, "arkouda.GroupBy.std", false], [26, "id163", false], [26, "id210", false], [26, "id257", false], [26, "id304", false], [116, "arkouda.GroupBy.std", false]], "std() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.std", false]], "std() (arkouda.ndarray method)": [[26, "arkouda.ndarray.std", false]], "std() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.std", false]], "std() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.std", false]], "std() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.std", false], [42, "id321", false], [42, "id389", false], [42, "id458", false], [42, "id527", false]], "std() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.std", false]], "std() (arkouda.numpy.timeclass.timedelta method)": [[57, "arkouda.numpy.timeclass.Timedelta.std", false]], "std() (arkouda.numpy.timedelta method)": [[42, "arkouda.numpy.Timedelta.std", false]], "std() (arkouda.pdarray method)": [[26, "arkouda.pdarray.std", false], [26, "id588", false], [26, "id657", false], [117, "arkouda.pdarray.std", false]], "std() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.std", false]], "std() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.std", false]], "std() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.std", false]], "std() (arkouda.series method)": [[26, "arkouda.Series.std", false]], "std() (arkouda.series.series method)": [[73, "arkouda.series.Series.std", false]], "std() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.std", false]], "std() (arkouda.timeclass.timedelta method)": [[79, "arkouda.timeclass.Timedelta.std", false]], "std() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.std", false], [26, "id480", false]], "std() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.std", false]], "std() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.std", false]], "std() (arkouda.util.timedelta method)": [[80, "arkouda.util.Timedelta.std", false]], "std() (in module arkouda)": [[26, "arkouda.std", false], [112, "arkouda.std", false]], "std() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.std", false]], "std() (in module arkouda.numpy)": [[42, "arkouda.numpy.std", false]], "std() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.std", false]], "std() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.std", false]], "stick() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.stick", false], [42, "id138", false], [42, "id215", false], [42, "id62", false]], "stick() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.stick", false]], "stick() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.stick", false]], "stick() (arkouda.strings method)": [[26, "arkouda.Strings.stick", false], [26, "id378", false], [26, "id455", false]], "stick() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.stick", false]], "stick() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.stick", false]], "stop_comm_diagnostics() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.stop_comm_diagnostics", false]], "stop_verbose_comm() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.stop_verbose_comm", false]], "str (arkouda.dtype attribute)": [[26, "arkouda.DType.STR", false]], "str (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.STR", false]], "str (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.STR", false]], "str (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.STR", false]], "str (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.STR", false]], "str_acc() (arkouda.series method)": [[26, "arkouda.Series.str_acc", false]], "str_acc() (arkouda.series.series method)": [[73, "arkouda.series.Series.str_acc", false]], "str_scalars (in module arkouda)": [[26, "arkouda.str_scalars", false]], "str_scalars (in module arkouda.dtypes)": [[23, "arkouda.dtypes.str_scalars", false]], "str_scalars (in module arkouda.numpy)": [[42, "arkouda.numpy.str_scalars", false]], "str_scalars (in module arkouda.numpy.dtypes)": [[39, "arkouda.numpy.dtypes.str_scalars", false]], "str_scalars (in module arkouda.numpy.dtypes.dtypes)": [[38, "arkouda.numpy.dtypes.dtypes.str_scalars", false]], "strides() (arkouda.ndarray method)": [[26, "arkouda.ndarray.strides", false]], "strides() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.strides", false]], "string_operators() (in module arkouda)": [[26, "arkouda.string_operators", false]], "string_operators() (in module arkouda.accessor)": [[2, "arkouda.accessor.string_operators", false]], "stringaccessor (class in arkouda)": [[26, "arkouda.StringAccessor", false]], "stringaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.StringAccessor", false]], "strings (class in arkouda)": [[26, "arkouda.Strings", false], [26, "id317", false], [26, "id393", false]], "strings (class in arkouda.numpy)": [[42, "arkouda.numpy.Strings", false], [42, "id153", false], [42, "id5", false], [42, "id77", false]], "strings (class in arkouda.numpy.strings)": [[56, "arkouda.numpy.strings.Strings", false]], "strings (class in arkouda.segarray)": [[72, "arkouda.segarray.Strings", false]], "strings (class in arkouda.strings)": [[77, "arkouda.strings.Strings", false]], "strings (class in arkouda.util)": [[80, "arkouda.util.Strings", false]], "strip() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.strip", false], [42, "id139", false], [42, "id216", false], [42, "id63", false]], "strip() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.strip", false]], "strip() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.strip", false]], "strip() (arkouda.strings method)": [[26, "arkouda.Strings.strip", false], [26, "id379", false], [26, "id456", false]], "strip() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.strip", false]], "strip() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.strip", false]], "sub() (arkouda.matcher.matcher method)": [[34, "arkouda.matcher.Matcher.sub", false]], "sub() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.sub", false], [42, "id140", false], [42, "id217", false], [42, "id64", false]], "sub() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.sub", false]], "sub() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.sub", false]], "sub() (arkouda.strings method)": [[26, "arkouda.Strings.sub", false], [26, "id380", false], [26, "id457", false]], "sub() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.sub", false]], "sub() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.sub", false]], "subn() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.subn", false], [42, "id141", false], [42, "id218", false], [42, "id65", false]], "subn() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.subn", false]], "subn() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.subn", false]], "subn() (arkouda.strings method)": [[26, "arkouda.Strings.subn", false], [26, "id381", false], [26, "id458", false]], "subn() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.subn", false]], "subn() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.subn", false]], "subtract() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.subtract", false]], "sum() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.sum", false]], "sum() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.sum", false]], "sum() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.sum", false]], "sum() (arkouda.datetime method)": [[26, "arkouda.Datetime.sum", false], [26, "id110", false], [26, "id77", false]], "sum() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.sum", false]], "sum() (arkouda.groupby method)": [[26, "arkouda.GroupBy.sum", false], [26, "id164", false], [26, "id211", false], [26, "id258", false], [26, "id305", false], [116, "arkouda.GroupBy.sum", false]], "sum() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.sum", false]], "sum() (arkouda.ndarray method)": [[26, "arkouda.ndarray.sum", false]], "sum() (arkouda.numpy.datetime method)": [[42, "arkouda.numpy.Datetime.sum", false]], "sum() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.sum", false]], "sum() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.sum", false]], "sum() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.sum", false], [42, "id322", false], [42, "id390", false], [42, "id459", false], [42, "id528", false]], "sum() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.sum", false]], "sum() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.sum", false]], "sum() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.sum", false]], "sum() (arkouda.numpy.timeclass.datetime method)": [[57, "arkouda.numpy.timeclass.Datetime.sum", false]], "sum() (arkouda.numpy.timeclass.timedelta method)": [[57, "arkouda.numpy.timeclass.Timedelta.sum", false]], "sum() (arkouda.numpy.timedelta method)": [[42, "arkouda.numpy.Timedelta.sum", false]], "sum() (arkouda.pdarray method)": [[26, "arkouda.pdarray.sum", false], [26, "id589", false], [26, "id658", false], [117, "arkouda.pdarray.sum", false]], "sum() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.sum", false]], "sum() (arkouda.segarray method)": [[26, "arkouda.SegArray.sum", false]], "sum() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.sum", false]], "sum() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.sum", false]], "sum() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.sum", false]], "sum() (arkouda.series method)": [[26, "arkouda.Series.sum", false]], "sum() (arkouda.series.series method)": [[73, "arkouda.series.Series.sum", false]], "sum() (arkouda.timeclass.datetime method)": [[79, "arkouda.timeclass.Datetime.sum", false]], "sum() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.sum", false]], "sum() (arkouda.timeclass.timedelta method)": [[79, "arkouda.timeclass.Timedelta.sum", false]], "sum() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.sum", false], [26, "id481", false]], "sum() (arkouda.util.datetime method)": [[80, "arkouda.util.Datetime.sum", false]], "sum() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.sum", false]], "sum() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.sum", false]], "sum() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.sum", false]], "sum() (arkouda.util.timedelta method)": [[80, "arkouda.util.Timedelta.sum", false]], "sum() (in module arkouda)": [[112, "arkouda.sum", false]], "sum() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.sum", false]], "supported_opeq (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_opeq", false], [26, "id111", false], [26, "id78", false]], "supported_opeq (arkouda.numpy.datetime attribute)": [[42, "arkouda.numpy.Datetime.supported_opeq", false]], "supported_opeq (arkouda.numpy.timeclass.datetime attribute)": [[57, "arkouda.numpy.timeclass.Datetime.supported_opeq", false]], "supported_opeq (arkouda.numpy.timeclass.timedelta attribute)": [[57, "arkouda.numpy.timeclass.Timedelta.supported_opeq", false]], "supported_opeq (arkouda.numpy.timedelta attribute)": [[42, "arkouda.numpy.Timedelta.supported_opeq", false]], "supported_opeq (arkouda.timeclass.datetime attribute)": [[79, "arkouda.timeclass.Datetime.supported_opeq", false]], "supported_opeq (arkouda.timeclass.timedelta attribute)": [[79, "arkouda.timeclass.Timedelta.supported_opeq", false]], "supported_opeq (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_opeq", false], [26, "id482", false]], "supported_opeq (arkouda.util.datetime attribute)": [[80, "arkouda.util.Datetime.supported_opeq", false]], "supported_opeq (arkouda.util.timedelta attribute)": [[80, "arkouda.util.Timedelta.supported_opeq", false]], "supported_with_datetime (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_with_datetime", false], [26, "id112", false], [26, "id79", false]], "supported_with_datetime (arkouda.numpy.datetime attribute)": [[42, "arkouda.numpy.Datetime.supported_with_datetime", false]], "supported_with_datetime (arkouda.numpy.timeclass.datetime attribute)": [[57, "arkouda.numpy.timeclass.Datetime.supported_with_datetime", false]], "supported_with_datetime (arkouda.numpy.timeclass.timedelta attribute)": [[57, "arkouda.numpy.timeclass.Timedelta.supported_with_datetime", false]], "supported_with_datetime (arkouda.numpy.timedelta attribute)": [[42, "arkouda.numpy.Timedelta.supported_with_datetime", false]], "supported_with_datetime (arkouda.timeclass.datetime attribute)": [[79, "arkouda.timeclass.Datetime.supported_with_datetime", false]], "supported_with_datetime (arkouda.timeclass.timedelta attribute)": [[79, "arkouda.timeclass.Timedelta.supported_with_datetime", false]], "supported_with_datetime (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_with_datetime", false], [26, "id483", false]], "supported_with_datetime (arkouda.util.datetime attribute)": [[80, "arkouda.util.Datetime.supported_with_datetime", false]], "supported_with_datetime (arkouda.util.timedelta attribute)": [[80, "arkouda.util.Timedelta.supported_with_datetime", false]], "supported_with_pdarray (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_with_pdarray", false], [26, "id113", false], [26, "id80", false]], "supported_with_pdarray (arkouda.numpy.datetime attribute)": [[42, "arkouda.numpy.Datetime.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.numpy.timeclass.datetime attribute)": [[57, "arkouda.numpy.timeclass.Datetime.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.numpy.timeclass.timedelta attribute)": [[57, "arkouda.numpy.timeclass.Timedelta.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.numpy.timedelta attribute)": [[42, "arkouda.numpy.Timedelta.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.timeclass.datetime attribute)": [[79, "arkouda.timeclass.Datetime.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.timeclass.timedelta attribute)": [[79, "arkouda.timeclass.Timedelta.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_with_pdarray", false], [26, "id484", false]], "supported_with_pdarray (arkouda.util.datetime attribute)": [[80, "arkouda.util.Datetime.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.util.timedelta attribute)": [[80, "arkouda.util.Timedelta.supported_with_pdarray", false]], "supported_with_r_datetime (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_with_r_datetime", false], [26, "id114", false], [26, "id81", false]], "supported_with_r_datetime (arkouda.numpy.datetime attribute)": [[42, "arkouda.numpy.Datetime.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.numpy.timeclass.datetime attribute)": [[57, "arkouda.numpy.timeclass.Datetime.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.numpy.timeclass.timedelta attribute)": [[57, "arkouda.numpy.timeclass.Timedelta.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.numpy.timedelta attribute)": [[42, "arkouda.numpy.Timedelta.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.timeclass.datetime attribute)": [[79, "arkouda.timeclass.Datetime.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.timeclass.timedelta attribute)": [[79, "arkouda.timeclass.Timedelta.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_with_r_datetime", false], [26, "id485", false]], "supported_with_r_datetime (arkouda.util.datetime attribute)": [[80, "arkouda.util.Datetime.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.util.timedelta attribute)": [[80, "arkouda.util.Timedelta.supported_with_r_datetime", false]], "supported_with_r_pdarray (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_with_r_pdarray", false], [26, "id115", false], [26, "id82", false]], "supported_with_r_pdarray (arkouda.numpy.datetime attribute)": [[42, "arkouda.numpy.Datetime.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.numpy.timeclass.datetime attribute)": [[57, "arkouda.numpy.timeclass.Datetime.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.numpy.timeclass.timedelta attribute)": [[57, "arkouda.numpy.timeclass.Timedelta.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.numpy.timedelta attribute)": [[42, "arkouda.numpy.Timedelta.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.timeclass.datetime attribute)": [[79, "arkouda.timeclass.Datetime.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.timeclass.timedelta attribute)": [[79, "arkouda.timeclass.Timedelta.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_with_r_pdarray", false], [26, "id486", false]], "supported_with_r_pdarray (arkouda.util.datetime attribute)": [[80, "arkouda.util.Datetime.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.util.timedelta attribute)": [[80, "arkouda.util.Timedelta.supported_with_r_pdarray", false]], "supported_with_r_timedelta (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_with_r_timedelta", false], [26, "id116", false], [26, "id83", false]], "supported_with_r_timedelta (arkouda.numpy.datetime attribute)": [[42, "arkouda.numpy.Datetime.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.numpy.timeclass.datetime attribute)": [[57, "arkouda.numpy.timeclass.Datetime.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.numpy.timeclass.timedelta attribute)": [[57, "arkouda.numpy.timeclass.Timedelta.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.numpy.timedelta attribute)": [[42, "arkouda.numpy.Timedelta.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.timeclass.datetime attribute)": [[79, "arkouda.timeclass.Datetime.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.timeclass.timedelta attribute)": [[79, "arkouda.timeclass.Timedelta.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_with_r_timedelta", false], [26, "id487", false]], "supported_with_r_timedelta (arkouda.util.datetime attribute)": [[80, "arkouda.util.Datetime.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.util.timedelta attribute)": [[80, "arkouda.util.Timedelta.supported_with_r_timedelta", false]], "supported_with_timedelta (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_with_timedelta", false], [26, "id117", false], [26, "id84", false]], "supported_with_timedelta (arkouda.numpy.datetime attribute)": [[42, "arkouda.numpy.Datetime.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.numpy.timeclass.datetime attribute)": [[57, "arkouda.numpy.timeclass.Datetime.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.numpy.timeclass.timedelta attribute)": [[57, "arkouda.numpy.timeclass.Timedelta.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.numpy.timedelta attribute)": [[42, "arkouda.numpy.Timedelta.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.timeclass.datetime attribute)": [[79, "arkouda.timeclass.Datetime.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.timeclass.timedelta attribute)": [[79, "arkouda.timeclass.Timedelta.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_with_timedelta", false], [26, "id488", false]], "supported_with_timedelta (arkouda.util.datetime attribute)": [[80, "arkouda.util.Datetime.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.util.timedelta attribute)": [[80, "arkouda.util.Timedelta.supported_with_timedelta", false]], "swapaxes() (arkouda.ndarray method)": [[26, "arkouda.ndarray.swapaxes", false]], "swapaxes() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.swapaxes", false]], "symmetric_difference() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.symmetric_difference", false]], "t (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.T", false]], "t (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.T", false]], "t() (arkouda.ndarray method)": [[26, "arkouda.ndarray.T", false]], "t() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.T", false]], "tail() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.tail", false], [26, "id47", false]], "tail() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.tail", false]], "tail() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.tail", false]], "tail() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.tail", false]], "tail() (arkouda.groupby method)": [[26, "arkouda.GroupBy.tail", false], [26, "id165", false], [26, "id212", false], [26, "id259", false], [26, "id306", false], [116, "arkouda.GroupBy.tail", false]], "tail() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.tail", false]], "tail() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.tail", false]], "tail() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.tail", false]], "tail() (arkouda.series method)": [[26, "arkouda.Series.tail", false]], "tail() (arkouda.series.series method)": [[73, "arkouda.series.Series.tail", false]], "tail() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.tail", false]], "tail() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.tail", false]], "tail() (in module arkouda.series)": [[122, "arkouda.Series.tail", false]], "take() (arkouda.ndarray method)": [[26, "arkouda.ndarray.take", false]], "take() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.take", false]], "take() (in module arkouda.array_api.indexing_functions)": [[10, "arkouda.array_api.indexing_functions.take", false]], "tan() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.tan", false]], "tanh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.tanh", false]], "tensordot() (in module arkouda.array_api.linalg)": [[11, "arkouda.array_api.linalg.tensordot", false]], "tile() (in module arkouda)": [[26, "arkouda.tile", false]], "tile() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.tile", false]], "tile() (in module arkouda.numpy)": [[42, "arkouda.numpy.tile", false]], "timedelta (class in arkouda)": [[26, "arkouda.Timedelta", false], [26, "id470", false]], "timedelta (class in arkouda.numpy)": [[42, "arkouda.numpy.Timedelta", false]], "timedelta (class in arkouda.numpy.timeclass)": [[57, "arkouda.numpy.timeclass.Timedelta", false]], "timedelta (class in arkouda.timeclass)": [[79, "arkouda.timeclass.Timedelta", false]], "timedelta (class in arkouda.util)": [[80, "arkouda.util.Timedelta", false]], "timedelta_range() (in module arkouda)": [[26, "arkouda.timedelta_range", false], [26, "id672", false]], "timedelta_range() (in module arkouda.numpy)": [[42, "arkouda.numpy.timedelta_range", false]], "timedelta_range() (in module arkouda.numpy.timeclass)": [[57, "arkouda.numpy.timeclass.timedelta_range", false]], "timedelta_range() (in module arkouda.timeclass)": [[79, "arkouda.timeclass.timedelta_range", false]], "title() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.title", false], [42, "id142", false], [42, "id219", false], [42, "id66", false]], "title() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.title", false]], "title() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.title", false]], "title() (arkouda.strings method)": [[26, "arkouda.Strings.title", false], [26, "id382", false], [26, "id459", false]], "title() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.title", false]], "title() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.title", false]], "to_csv() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.to_csv", false], [26, "id48", false]], "to_csv() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_csv", false]], "to_csv() (arkouda.index method)": [[26, "arkouda.Index.to_csv", false]], "to_csv() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_csv", false]], "to_csv() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.to_csv", false], [42, "id323", false], [42, "id391", false], [42, "id460", false], [42, "id529", false]], "to_csv() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.to_csv", false]], "to_csv() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.to_csv", false], [42, "id143", false], [42, "id220", false], [42, "id67", false]], "to_csv() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.to_csv", false]], "to_csv() (arkouda.pdarray method)": [[26, "arkouda.pdarray.to_csv", false], [26, "id590", false], [26, "id659", false]], "to_csv() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.to_csv", false]], "to_csv() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.to_csv", false]], "to_csv() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.to_csv", false]], "to_csv() (arkouda.strings method)": [[26, "arkouda.Strings.to_csv", false], [26, "id383", false], [26, "id460", false]], "to_csv() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.to_csv", false]], "to_csv() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.to_csv", false]], "to_csv() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.to_csv", false]], "to_csv() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.to_csv", false]], "to_csv() (in module arkouda)": [[26, "arkouda.to_csv", false]], "to_csv() (in module arkouda.io)": [[29, "arkouda.io.to_csv", false]], "to_cuda() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.to_cuda", false], [42, "id324", false], [42, "id392", false], [42, "id461", false], [42, "id530", false]], "to_cuda() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.to_cuda", false]], "to_cuda() (arkouda.pdarray method)": [[26, "arkouda.pdarray.to_cuda", false], [26, "id591", false], [26, "id660", false]], "to_cuda() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.to_cuda", false]], "to_cuda() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.to_cuda", false]], "to_cuda() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.to_cuda", false]], "to_cuda() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.to_cuda", false]], "to_dataframe() (arkouda.series method)": [[26, "arkouda.Series.to_dataframe", false]], "to_dataframe() (arkouda.series.series method)": [[73, "arkouda.series.Series.to_dataframe", false]], "to_device() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.to_device", false]], "to_device() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.to_device", false]], "to_dict() (arkouda.index method)": [[26, "arkouda.Index.to_dict", false]], "to_dict() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_dict", false]], "to_dict() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.to_dict", false]], "to_dict() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.to_dict", false]], "to_hdf() (arkouda.categorical method)": [[26, "arkouda.Categorical.to_hdf", false]], "to_hdf() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_hdf", false]], "to_hdf() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.to_hdf", false]], "to_hdf() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.to_hdf", false], [26, "id49", false]], "to_hdf() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_hdf", false]], "to_hdf() (arkouda.groupby method)": [[26, "arkouda.GroupBy.to_hdf", false], [26, "id166", false], [26, "id213", false], [26, "id260", false], [26, "id307", false], [116, "arkouda.GroupBy.to_hdf", false]], "to_hdf() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.to_hdf", false]], "to_hdf() (arkouda.index method)": [[26, "arkouda.Index.to_hdf", false]], "to_hdf() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_hdf", false]], "to_hdf() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.to_hdf", false]], "to_hdf() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.to_hdf", false]], "to_hdf() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.to_hdf", false]], "to_hdf() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.to_hdf", false]], "to_hdf() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.to_hdf", false]], "to_hdf() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.to_hdf", false], [42, "id325", false], [42, "id393", false], [42, "id462", false], [42, "id531", false]], "to_hdf() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.to_hdf", false]], "to_hdf() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.to_hdf", false]], "to_hdf() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.to_hdf", false]], "to_hdf() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.to_hdf", false], [42, "id144", false], [42, "id221", false], [42, "id68", false]], "to_hdf() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.to_hdf", false]], "to_hdf() (arkouda.pdarray method)": [[26, "arkouda.pdarray.to_hdf", false], [26, "id592", false], [26, "id661", false]], "to_hdf() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.to_hdf", false]], "to_hdf() (arkouda.segarray method)": [[26, "arkouda.SegArray.to_hdf", false]], "to_hdf() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.to_hdf", false]], "to_hdf() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.to_hdf", false]], "to_hdf() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.to_hdf", false]], "to_hdf() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.to_hdf", false]], "to_hdf() (arkouda.strings method)": [[26, "arkouda.Strings.to_hdf", false], [26, "id384", false], [26, "id461", false]], "to_hdf() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.to_hdf", false]], "to_hdf() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.to_hdf", false]], "to_hdf() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.to_hdf", false]], "to_hdf() (arkouda.util.ipv4 method)": [[80, "arkouda.util.IPv4.to_hdf", false]], "to_hdf() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.to_hdf", false]], "to_hdf() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.to_hdf", false]], "to_hdf() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.to_hdf", false]], "to_hdf() (in module arkouda)": [[26, "arkouda.to_hdf", false]], "to_hdf() (in module arkouda.io)": [[29, "arkouda.io.to_hdf", false]], "to_list() (arkouda.bitvector method)": [[26, "arkouda.BitVector.to_list", false]], "to_list() (arkouda.categorical method)": [[26, "arkouda.Categorical.to_list", false]], "to_list() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_list", false]], "to_list() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.to_list", false]], "to_list() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.to_list", false]], "to_list() (arkouda.index method)": [[26, "arkouda.Index.to_list", false]], "to_list() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_list", false]], "to_list() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.to_list", false]], "to_list() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.to_list", false]], "to_list() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.to_list", false]], "to_list() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.to_list", false]], "to_list() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.to_list", false], [42, "id326", false], [42, "id394", false], [42, "id463", false], [42, "id532", false]], "to_list() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.to_list", false]], "to_list() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.to_list", false]], "to_list() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.to_list", false]], "to_list() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.to_list", false], [42, "id145", false], [42, "id222", false], [42, "id69", false]], "to_list() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.to_list", false]], "to_list() (arkouda.pdarray method)": [[26, "arkouda.pdarray.to_list", false], [26, "id593", false], [26, "id662", false]], "to_list() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.to_list", false]], "to_list() (arkouda.segarray method)": [[26, "arkouda.SegArray.to_list", false]], "to_list() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.to_list", false]], "to_list() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.to_list", false]], "to_list() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.to_list", false]], "to_list() (arkouda.series method)": [[26, "arkouda.Series.to_list", false]], "to_list() (arkouda.series.series method)": [[73, "arkouda.series.Series.to_list", false]], "to_list() (arkouda.strings method)": [[26, "arkouda.Strings.to_list", false], [26, "id385", false], [26, "id462", false]], "to_list() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.to_list", false]], "to_list() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.to_list", false]], "to_list() (arkouda.util.bitvector method)": [[80, "arkouda.util.BitVector.to_list", false]], "to_list() (arkouda.util.ipv4 method)": [[80, "arkouda.util.IPv4.to_list", false]], "to_list() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.to_list", false]], "to_list() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.to_list", false]], "to_list() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.to_list", false]], "to_markdown() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.to_markdown", false], [26, "id50", false]], "to_markdown() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_markdown", false]], "to_markdown() (arkouda.series method)": [[26, "arkouda.Series.to_markdown", false]], "to_markdown() (arkouda.series.series method)": [[73, "arkouda.series.Series.to_markdown", false]], "to_ndarray() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.to_ndarray", false]], "to_ndarray() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.to_ndarray", false]], "to_ndarray() (arkouda.bitvector method)": [[26, "arkouda.BitVector.to_ndarray", false]], "to_ndarray() (arkouda.categorical method)": [[26, "arkouda.Categorical.to_ndarray", false]], "to_ndarray() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_ndarray", false]], "to_ndarray() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.to_ndarray", false]], "to_ndarray() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.to_ndarray", false]], "to_ndarray() (arkouda.index method)": [[26, "arkouda.Index.to_ndarray", false]], "to_ndarray() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_ndarray", false]], "to_ndarray() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.to_ndarray", false]], "to_ndarray() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.to_ndarray", false]], "to_ndarray() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.to_ndarray", false]], "to_ndarray() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.to_ndarray", false]], "to_ndarray() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.to_ndarray", false], [42, "id327", false], [42, "id395", false], [42, "id464", false], [42, "id533", false]], "to_ndarray() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.to_ndarray", false]], "to_ndarray() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.to_ndarray", false], [42, "id146", false], [42, "id223", false], [42, "id70", false]], "to_ndarray() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.to_ndarray", false]], "to_ndarray() (arkouda.pdarray method)": [[26, "arkouda.pdarray.to_ndarray", false], [26, "id594", false], [26, "id663", false]], "to_ndarray() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.to_ndarray", false]], "to_ndarray() (arkouda.segarray method)": [[26, "arkouda.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.to_ndarray", false]], "to_ndarray() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.to_ndarray", false]], "to_ndarray() (arkouda.series method)": [[26, "arkouda.Series.to_ndarray", false]], "to_ndarray() (arkouda.series.series method)": [[73, "arkouda.series.Series.to_ndarray", false]], "to_ndarray() (arkouda.strings method)": [[26, "arkouda.Strings.to_ndarray", false], [26, "id386", false], [26, "id463", false]], "to_ndarray() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.to_ndarray", false]], "to_ndarray() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.to_ndarray", false]], "to_ndarray() (arkouda.util.bitvector method)": [[80, "arkouda.util.BitVector.to_ndarray", false]], "to_ndarray() (arkouda.util.ipv4 method)": [[80, "arkouda.util.IPv4.to_ndarray", false]], "to_ndarray() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.to_ndarray", false]], "to_ndarray() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.to_ndarray", false]], "to_ndarray() (in module arkouda.categorical)": [[113, "arkouda.Categorical.to_ndarray", false]], "to_ndarray() (in module arkouda.pdarray)": [[109, "arkouda.pdarray.to_ndarray", false], [119, "arkouda.pdarray.to_ndarray", false]], "to_pandas() (arkouda.categorical method)": [[26, "arkouda.Categorical.to_pandas", false]], "to_pandas() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_pandas", false]], "to_pandas() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.to_pandas", false], [26, "id51", false]], "to_pandas() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_pandas", false]], "to_pandas() (arkouda.datetime method)": [[26, "arkouda.Datetime.to_pandas", false], [26, "id118", false], [26, "id85", false]], "to_pandas() (arkouda.index method)": [[26, "arkouda.Index.to_pandas", false]], "to_pandas() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_pandas", false]], "to_pandas() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.to_pandas", false]], "to_pandas() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.to_pandas", false]], "to_pandas() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.to_pandas", false]], "to_pandas() (arkouda.numpy.datetime method)": [[42, "arkouda.numpy.Datetime.to_pandas", false]], "to_pandas() (arkouda.numpy.timeclass.datetime method)": [[57, "arkouda.numpy.timeclass.Datetime.to_pandas", false]], "to_pandas() (arkouda.numpy.timeclass.timedelta method)": [[57, "arkouda.numpy.timeclass.Timedelta.to_pandas", false]], "to_pandas() (arkouda.numpy.timedelta method)": [[42, "arkouda.numpy.Timedelta.to_pandas", false]], "to_pandas() (arkouda.series method)": [[26, "arkouda.Series.to_pandas", false]], "to_pandas() (arkouda.series.series method)": [[73, "arkouda.series.Series.to_pandas", false]], "to_pandas() (arkouda.timeclass.datetime method)": [[79, "arkouda.timeclass.Datetime.to_pandas", false]], "to_pandas() (arkouda.timeclass.timedelta method)": [[79, "arkouda.timeclass.Timedelta.to_pandas", false]], "to_pandas() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.to_pandas", false], [26, "id489", false]], "to_pandas() (arkouda.util.datetime method)": [[80, "arkouda.util.Datetime.to_pandas", false]], "to_pandas() (arkouda.util.timedelta method)": [[80, "arkouda.util.Timedelta.to_pandas", false]], "to_pandas() (in module arkouda.dataframe)": [[115, "arkouda.DataFrame.to_pandas", false]], "to_pandas() (in module arkouda.series)": [[122, "arkouda.Series.to_pandas", false]], "to_parquet() (arkouda.categorical method)": [[26, "arkouda.Categorical.to_parquet", false]], "to_parquet() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_parquet", false]], "to_parquet() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.to_parquet", false], [26, "id52", false]], "to_parquet() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_parquet", false]], "to_parquet() (arkouda.index method)": [[26, "arkouda.Index.to_parquet", false]], "to_parquet() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_parquet", false]], "to_parquet() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.to_parquet", false]], "to_parquet() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.to_parquet", false], [42, "id328", false], [42, "id396", false], [42, "id465", false], [42, "id534", false]], "to_parquet() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.to_parquet", false]], "to_parquet() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.to_parquet", false]], "to_parquet() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.to_parquet", false]], "to_parquet() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.to_parquet", false], [42, "id147", false], [42, "id224", false], [42, "id71", false]], "to_parquet() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.to_parquet", false]], "to_parquet() (arkouda.pdarray method)": [[26, "arkouda.pdarray.to_parquet", false], [26, "id595", false], [26, "id664", false]], "to_parquet() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.to_parquet", false]], "to_parquet() (arkouda.segarray method)": [[26, "arkouda.SegArray.to_parquet", false]], "to_parquet() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.to_parquet", false]], "to_parquet() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.to_parquet", false]], "to_parquet() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.to_parquet", false]], "to_parquet() (arkouda.strings method)": [[26, "arkouda.Strings.to_parquet", false], [26, "id387", false], [26, "id464", false]], "to_parquet() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.to_parquet", false]], "to_parquet() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.to_parquet", false]], "to_parquet() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.to_parquet", false]], "to_parquet() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.to_parquet", false]], "to_parquet() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.to_parquet", false]], "to_parquet() (in module arkouda)": [[26, "arkouda.to_parquet", false]], "to_parquet() (in module arkouda.io)": [[29, "arkouda.io.to_parquet", false]], "to_pdarray() (arkouda.scipy.sparrayclass.sparray method)": [[67, "arkouda.scipy.sparrayclass.sparray.to_pdarray", false]], "to_pdarray() (arkouda.sparrayclass.sparray method)": [[75, "arkouda.sparrayclass.sparray.to_pdarray", false]], "to_strings() (arkouda.categorical method)": [[26, "arkouda.Categorical.to_strings", false]], "to_strings() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_strings", false]], "to_strings() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.to_strings", false]], "to_zarr() (in module arkouda)": [[26, "arkouda.to_zarr", false]], "to_zarr() (in module arkouda.io)": [[29, "arkouda.io.to_zarr", false]], "tobytes() (arkouda.ndarray method)": [[26, "arkouda.ndarray.tobytes", false]], "tobytes() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.tobytes", false]], "tofile() (arkouda.ndarray method)": [[26, "arkouda.ndarray.tofile", false]], "tofile() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.tofile", false]], "tolist() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.tolist", false]], "tolist() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.tolist", false]], "tolist() (arkouda.ndarray method)": [[26, "arkouda.ndarray.tolist", false]], "tolist() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.tolist", false]], "topn() (arkouda.series method)": [[26, "arkouda.Series.topn", false]], "topn() (arkouda.series.series method)": [[73, "arkouda.series.Series.topn", false]], "topn() (in module arkouda.series)": [[122, "arkouda.Series.topn", false]], "tostring() (arkouda.ndarray method)": [[26, "arkouda.ndarray.tostring", false]], "tostring() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.tostring", false]], "total_seconds() (arkouda.numpy.timeclass.timedelta method)": [[57, "arkouda.numpy.timeclass.Timedelta.total_seconds", false]], "total_seconds() (arkouda.numpy.timedelta method)": [[42, "arkouda.numpy.Timedelta.total_seconds", false]], "total_seconds() (arkouda.timeclass.timedelta method)": [[79, "arkouda.timeclass.Timedelta.total_seconds", false]], "total_seconds() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.total_seconds", false], [26, "id490", false]], "total_seconds() (arkouda.util.timedelta method)": [[80, "arkouda.util.Timedelta.total_seconds", false]], "trace() (arkouda.ndarray method)": [[26, "arkouda.ndarray.trace", false]], "trace() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.trace", false]], "transfer() (arkouda.categorical method)": [[26, "arkouda.Categorical.transfer", false]], "transfer() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.transfer", false]], "transfer() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.transfer", false], [26, "id53", false]], "transfer() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.transfer", false]], "transfer() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.transfer", false]], "transfer() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.transfer", false], [42, "id329", false], [42, "id397", false], [42, "id466", false], [42, "id535", false]], "transfer() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.transfer", false]], "transfer() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.transfer", false]], "transfer() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.transfer", false]], "transfer() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.transfer", false], [42, "id148", false], [42, "id225", false], [42, "id72", false]], "transfer() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.transfer", false]], "transfer() (arkouda.pdarray method)": [[26, "arkouda.pdarray.transfer", false], [26, "id596", false], [26, "id665", false]], "transfer() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.transfer", false]], "transfer() (arkouda.segarray method)": [[26, "arkouda.SegArray.transfer", false]], "transfer() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.transfer", false]], "transfer() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.transfer", false]], "transfer() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.transfer", false]], "transfer() (arkouda.strings method)": [[26, "arkouda.Strings.transfer", false], [26, "id388", false], [26, "id465", false]], "transfer() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.transfer", false]], "transfer() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.transfer", false]], "transfer() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.transfer", false]], "transfer() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.transfer", false]], "transfer() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.transfer", false]], "transpose() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.transpose", false]], "transpose() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.transpose", false]], "transpose() (arkouda.ndarray method)": [[26, "arkouda.ndarray.transpose", false]], "transpose() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.transpose", false]], "trapezoid() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.trapezoid", false]], "trapz() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.trapz", false]], "tril() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.tril", false]], "triu() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.triu", false]], "trunc() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.trunc", false]], "tuple (class in arkouda)": [[26, "arkouda.Tuple", false]], "tuple (class in arkouda.numpy)": [[42, "arkouda.numpy.Tuple", false], [42, "id230", false]], "type() (arkouda.bigint method)": [[26, "arkouda.bigint.type", false]], "type() (arkouda.dtypes.bigint method)": [[23, "arkouda.dtypes.bigint.type", false]], "type() (arkouda.numpy.bigint method)": [[42, "arkouda.numpy.bigint.type", false]], "type() (arkouda.numpy.dtypes.bigint method)": [[39, "arkouda.numpy.dtypes.bigint.type", false]], "type() (arkouda.numpy.dtypes.dtypes.bigint method)": [[38, "arkouda.numpy.dtypes.dtypes.bigint.type", false]], "typechecked() (in module arkouda)": [[26, "arkouda.typechecked", false]], "typechecked() (in module arkouda.numpy)": [[42, "arkouda.numpy.typechecked", false]], "uint (arkouda.dtype attribute)": [[26, "arkouda.DType.UINT", false]], "uint (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.UINT", false]], "uint (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.UINT", false]], "uint (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.UINT", false]], "uint (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.UINT", false]], "uint16 (arkouda.dtype attribute)": [[26, "arkouda.DType.UINT16", false]], "uint16 (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.UINT16", false]], "uint16 (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.UINT16", false]], "uint16 (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.UINT16", false]], "uint16 (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.UINT16", false]], "uint32 (arkouda.dtype attribute)": [[26, "arkouda.DType.UINT32", false]], "uint32 (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.UINT32", false]], "uint32 (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.UINT32", false]], "uint32 (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.UINT32", false]], "uint32 (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.UINT32", false]], "uint64 (arkouda.dtype attribute)": [[26, "arkouda.DType.UINT64", false]], "uint64 (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.UINT64", false]], "uint64 (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.UINT64", false]], "uint64 (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.UINT64", false]], "uint64 (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.UINT64", false]], "uint8 (arkouda.dtype attribute)": [[26, "arkouda.DType.UINT8", false]], "uint8 (arkouda.dtypes.dtype attribute)": [[23, "arkouda.dtypes.DType.UINT8", false]], "uint8 (arkouda.numpy.dtype attribute)": [[42, "arkouda.numpy.DType.UINT8", false]], "uint8 (arkouda.numpy.dtypes.dtype attribute)": [[39, "arkouda.numpy.dtypes.DType.UINT8", false]], "uint8 (arkouda.numpy.dtypes.dtypes.dtype attribute)": [[38, "arkouda.numpy.dtypes.dtypes.DType.UINT8", false]], "uniform() (arkouda.numpy.random.generator method)": [[52, "arkouda.numpy.random.Generator.uniform", false]], "uniform() (arkouda.random.generator method)": [[64, "arkouda.random.Generator.uniform", false]], "uniform() (in module arkouda)": [[26, "arkouda.uniform", false]], "uniform() (in module arkouda.numpy)": [[42, "arkouda.numpy.uniform", false]], "uniform() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.uniform", false]], "uniform() (in module arkouda.numpy.random)": [[52, "arkouda.numpy.random.uniform", false]], "uniform() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.uniform", false]], "uniform() (in module arkouda.random)": [[64, "arkouda.random.uniform", false]], "uniform() (in module arkouda.random.generator)": [[120, "arkouda.random.Generator.uniform", false]], "union (class in arkouda)": [[26, "arkouda.Union", false]], "union (class in arkouda.numpy)": [[42, "arkouda.numpy.Union", false], [42, "id231", false]], "union() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.union", false]], "union() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.union", false]], "union() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.union", false]], "union() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.union", false]], "union() (arkouda.segarray method)": [[26, "arkouda.SegArray.union", false]], "union() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.union", false]], "union() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.union", false]], "union1d() (in module arkouda)": [[26, "arkouda.union1d", false], [123, "arkouda.union1d", false]], "union1d() (in module arkouda.numpy)": [[42, "arkouda.numpy.union1d", false]], "union1d() (in module arkouda.numpy.pdarraysetops)": [[50, "arkouda.numpy.pdarraysetops.union1d", false]], "union1d() (in module arkouda.pdarraysetops)": [[62, "arkouda.pdarraysetops.union1d", false]], "unique() (arkouda.categorical method)": [[26, "arkouda.Categorical.unique", false]], "unique() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.unique", false]], "unique() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.unique", false]], "unique() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.unique", false]], "unique() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.unique", false]], "unique() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.unique", false]], "unique() (arkouda.groupby method)": [[26, "arkouda.GroupBy.unique", false], [26, "id167", false], [26, "id214", false], [26, "id261", false], [26, "id308", false], [116, "arkouda.GroupBy.unique", false]], "unique() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.unique", false]], "unique() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.unique", false]], "unique() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.unique", false]], "unique() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.unique", false]], "unique() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.unique", false]], "unique() (arkouda.segarray method)": [[26, "arkouda.SegArray.unique", false]], "unique() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.unique", false]], "unique() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.unique", false]], "unique() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.unique", false]], "unique() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.unique", false]], "unique() (in module arkouda)": [[26, "arkouda.unique", false], [26, "id673", false], [123, "arkouda.unique", false]], "unique() (in module arkouda.groupbyclass)": [[24, "arkouda.groupbyclass.unique", false]], "unique() (in module arkouda.util)": [[80, "arkouda.util.unique", false]], "unique_all() (in module arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.unique_all", false]], "unique_counts() (in module arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.unique_counts", false]], "unique_inverse() (in module arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.unique_inverse", false]], "unique_keys (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.unique_keys", false], [26, "id129", false], [26, "id176", false], [26, "id223", false], [26, "id270", false], [116, "arkouda.GroupBy.unique_keys", false]], "unique_keys (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.unique_keys", false]], "unique_keys (arkouda.numpy.groupby attribute)": [[42, "arkouda.numpy.GroupBy.unique_keys", false]], "unique_keys (arkouda.segarray.groupby attribute)": [[72, "arkouda.segarray.GroupBy.unique_keys", false]], "unique_keys (arkouda.util.groupby attribute)": [[80, "arkouda.util.GroupBy.unique_keys", false]], "unique_values() (in module arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.unique_values", false]], "uniqueallresult (class in arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.UniqueAllResult", false]], "uniquecountsresult (class in arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.UniqueCountsResult", false]], "uniqueinverseresult (class in arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.UniqueInverseResult", false]], "unregister() (arkouda.categorical method)": [[26, "arkouda.Categorical.unregister", false]], "unregister() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.unregister", false]], "unregister() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.unregister", false], [26, "id54", false]], "unregister() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.unregister", false]], "unregister() (arkouda.datetime method)": [[26, "arkouda.Datetime.unregister", false], [26, "id119", false], [26, "id86", false]], "unregister() (arkouda.groupby method)": [[26, "arkouda.GroupBy.unregister", false], [26, "id168", false], [26, "id215", false], [26, "id262", false], [26, "id309", false], [116, "arkouda.GroupBy.unregister", false]], "unregister() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.unregister", false]], "unregister() (arkouda.index method)": [[26, "arkouda.Index.unregister", false]], "unregister() (arkouda.index.index method)": [[27, "arkouda.index.Index.unregister", false]], "unregister() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.unregister", false]], "unregister() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.unregister", false]], "unregister() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.unregister", false]], "unregister() (arkouda.numpy.datetime method)": [[42, "arkouda.numpy.Datetime.unregister", false]], "unregister() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.unregister", false]], "unregister() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.unregister", false], [42, "id330", false], [42, "id398", false], [42, "id467", false], [42, "id536", false]], "unregister() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.unregister", false]], "unregister() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.unregister", false]], "unregister() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.unregister", false]], "unregister() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.unregister", false], [42, "id149", false], [42, "id226", false], [42, "id73", false]], "unregister() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.unregister", false]], "unregister() (arkouda.numpy.timeclass.datetime method)": [[57, "arkouda.numpy.timeclass.Datetime.unregister", false]], "unregister() (arkouda.numpy.timeclass.timedelta method)": [[57, "arkouda.numpy.timeclass.Timedelta.unregister", false]], "unregister() (arkouda.numpy.timedelta method)": [[42, "arkouda.numpy.Timedelta.unregister", false]], "unregister() (arkouda.pdarray method)": [[26, "arkouda.pdarray.unregister", false], [26, "id597", false], [26, "id666", false]], "unregister() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.unregister", false]], "unregister() (arkouda.segarray method)": [[26, "arkouda.SegArray.unregister", false]], "unregister() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.unregister", false]], "unregister() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.unregister", false]], "unregister() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.unregister", false]], "unregister() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.unregister", false]], "unregister() (arkouda.series method)": [[26, "arkouda.Series.unregister", false]], "unregister() (arkouda.series.series method)": [[73, "arkouda.series.Series.unregister", false]], "unregister() (arkouda.strings method)": [[26, "arkouda.Strings.unregister", false], [26, "id389", false], [26, "id466", false]], "unregister() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.unregister", false]], "unregister() (arkouda.timeclass.datetime method)": [[79, "arkouda.timeclass.Datetime.unregister", false]], "unregister() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.unregister", false]], "unregister() (arkouda.timeclass.timedelta method)": [[79, "arkouda.timeclass.Timedelta.unregister", false]], "unregister() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.unregister", false], [26, "id491", false]], "unregister() (arkouda.util.datetime method)": [[80, "arkouda.util.Datetime.unregister", false]], "unregister() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.unregister", false]], "unregister() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.unregister", false]], "unregister() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.unregister", false]], "unregister() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.unregister", false]], "unregister() (arkouda.util.timedelta method)": [[80, "arkouda.util.Timedelta.unregister", false]], "unregister() (in module arkouda)": [[26, "arkouda.unregister", false]], "unregister() (in module arkouda.numpy)": [[42, "arkouda.numpy.unregister", false]], "unregister() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.unregister", false]], "unregister() (in module arkouda.util)": [[80, "arkouda.util.unregister", false]], "unregister_all() (in module arkouda)": [[26, "arkouda.unregister_all", false]], "unregister_all() (in module arkouda.numpy)": [[42, "arkouda.numpy.unregister_all", false]], "unregister_all() (in module arkouda.numpy.util)": [[58, "arkouda.numpy.util.unregister_all", false]], "unregister_all() (in module arkouda.util)": [[80, "arkouda.util.unregister_all", false]], "unregister_categorical_by_name() (arkouda.categorical method)": [[26, "arkouda.Categorical.unregister_categorical_by_name", false]], "unregister_categorical_by_name() (arkouda.categorical.categorical static method)": [[18, "arkouda.categorical.Categorical.unregister_categorical_by_name", false]], "unregister_categorical_by_name() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.unregister_categorical_by_name", false]], "unregister_dataframe_by_name() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.unregister_dataframe_by_name", false], [26, "id55", false]], "unregister_dataframe_by_name() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.unregister_dataframe_by_name", false]], "unregister_groupby_by_name() (arkouda.groupby method)": [[26, "arkouda.GroupBy.unregister_groupby_by_name", false], [26, "id169", false], [26, "id216", false], [26, "id263", false], [26, "id310", false]], "unregister_groupby_by_name() (arkouda.groupby static method)": [[116, "arkouda.GroupBy.unregister_groupby_by_name", false]], "unregister_groupby_by_name() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.unregister_groupby_by_name", false]], "unregister_groupby_by_name() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.unregister_groupby_by_name", false]], "unregister_groupby_by_name() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.unregister_groupby_by_name", false]], "unregister_groupby_by_name() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.unregister_groupby_by_name", false]], "unregister_pdarray_by_name() (in module arkouda)": [[26, "arkouda.unregister_pdarray_by_name", false]], "unregister_pdarray_by_name() (in module arkouda.numpy)": [[42, "arkouda.numpy.unregister_pdarray_by_name", false]], "unregister_pdarray_by_name() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.unregister_pdarray_by_name", false]], "unregister_pdarray_by_name() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.unregister_pdarray_by_name", false]], "unregister_segarray_by_name() (arkouda.numpy.segarray static method)": [[42, "arkouda.numpy.SegArray.unregister_segarray_by_name", false]], "unregister_segarray_by_name() (arkouda.numpy.segarray.segarray static method)": [[54, "arkouda.numpy.segarray.SegArray.unregister_segarray_by_name", false]], "unregister_segarray_by_name() (arkouda.segarray static method)": [[26, "arkouda.SegArray.unregister_segarray_by_name", false]], "unregister_segarray_by_name() (arkouda.segarray.segarray static method)": [[72, "arkouda.segarray.SegArray.unregister_segarray_by_name", false]], "unregister_segarray_by_name() (arkouda.util.segarray static method)": [[80, "arkouda.util.SegArray.unregister_segarray_by_name", false]], "unregister_strings_by_name() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.unregister_strings_by_name", false], [42, "id74", false]], "unregister_strings_by_name() (arkouda.numpy.strings static method)": [[42, "id150", false], [42, "id227", false]], "unregister_strings_by_name() (arkouda.numpy.strings.strings static method)": [[56, "arkouda.numpy.strings.Strings.unregister_strings_by_name", false]], "unregister_strings_by_name() (arkouda.segarray.strings static method)": [[72, "arkouda.segarray.Strings.unregister_strings_by_name", false]], "unregister_strings_by_name() (arkouda.strings method)": [[26, "arkouda.Strings.unregister_strings_by_name", false]], "unregister_strings_by_name() (arkouda.strings static method)": [[26, "id390", false], [26, "id467", false]], "unregister_strings_by_name() (arkouda.strings.strings static method)": [[77, "arkouda.strings.Strings.unregister_strings_by_name", false]], "unregister_strings_by_name() (arkouda.util.strings static method)": [[80, "arkouda.util.Strings.unregister_strings_by_name", false]], "unsqueeze() (in module arkouda.alignment)": [[3, "arkouda.alignment.unsqueeze", false]], "unstack() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.unstack", false]], "update_hdf() (arkouda.categorical method)": [[26, "arkouda.Categorical.update_hdf", false]], "update_hdf() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.update_hdf", false]], "update_hdf() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.update_hdf", false]], "update_hdf() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.update_hdf", false], [26, "id56", false]], "update_hdf() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.update_hdf", false]], "update_hdf() (arkouda.groupby method)": [[26, "arkouda.GroupBy.update_hdf", false], [26, "id170", false], [26, "id217", false], [26, "id264", false], [26, "id311", false]], "update_hdf() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.update_hdf", false]], "update_hdf() (arkouda.index method)": [[26, "arkouda.Index.update_hdf", false]], "update_hdf() (arkouda.index.index method)": [[27, "arkouda.index.Index.update_hdf", false]], "update_hdf() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.update_hdf", false]], "update_hdf() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.update_hdf", false]], "update_hdf() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.update_hdf", false]], "update_hdf() (arkouda.numpy.categorical method)": [[42, "arkouda.numpy.Categorical.update_hdf", false]], "update_hdf() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.update_hdf", false]], "update_hdf() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.update_hdf", false], [42, "id331", false], [42, "id399", false], [42, "id468", false], [42, "id537", false]], "update_hdf() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.update_hdf", false]], "update_hdf() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.update_hdf", false]], "update_hdf() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.update_hdf", false]], "update_hdf() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.update_hdf", false], [42, "id151", false], [42, "id228", false], [42, "id75", false]], "update_hdf() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.update_hdf", false]], "update_hdf() (arkouda.pdarray method)": [[26, "arkouda.pdarray.update_hdf", false], [26, "id598", false], [26, "id667", false]], "update_hdf() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.update_hdf", false]], "update_hdf() (arkouda.segarray method)": [[26, "arkouda.SegArray.update_hdf", false]], "update_hdf() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.update_hdf", false]], "update_hdf() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.update_hdf", false]], "update_hdf() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.update_hdf", false]], "update_hdf() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.update_hdf", false]], "update_hdf() (arkouda.strings method)": [[26, "arkouda.Strings.update_hdf", false], [26, "id391", false], [26, "id468", false]], "update_hdf() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.update_hdf", false]], "update_hdf() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.update_hdf", false]], "update_hdf() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.update_hdf", false]], "update_hdf() (arkouda.util.ipv4 method)": [[80, "arkouda.util.IPv4.update_hdf", false]], "update_hdf() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.update_hdf", false]], "update_hdf() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.update_hdf", false]], "update_hdf() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.update_hdf", false]], "update_hdf() (in module arkouda)": [[26, "arkouda.update_hdf", false]], "update_hdf() (in module arkouda.io)": [[29, "arkouda.io.update_hdf", false]], "update_nrows() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.update_nrows", false], [26, "id57", false]], "update_nrows() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.update_nrows", false]], "upper() (arkouda.numpy.strings method)": [[42, "arkouda.numpy.Strings.upper", false], [42, "id152", false], [42, "id229", false], [42, "id76", false]], "upper() (arkouda.numpy.strings.strings method)": [[56, "arkouda.numpy.strings.Strings.upper", false]], "upper() (arkouda.segarray.strings method)": [[72, "arkouda.segarray.Strings.upper", false]], "upper() (arkouda.strings method)": [[26, "arkouda.Strings.upper", false], [26, "id392", false], [26, "id469", false]], "upper() (arkouda.strings.strings method)": [[77, "arkouda.strings.Strings.upper", false]], "upper() (arkouda.util.strings method)": [[80, "arkouda.util.Strings.upper", false]], "username_tokenizer (in module arkouda.security)": [[71, "arkouda.security.username_tokenizer", false]], "val_suffix (in module arkouda)": [[26, "arkouda.VAL_SUFFIX", false]], "val_suffix (in module arkouda.numpy)": [[42, "arkouda.numpy.VAL_SUFFIX", false]], "val_suffix (in module arkouda.numpy.segarray)": [[54, "arkouda.numpy.segarray.VAL_SUFFIX", false]], "val_suffix (in module arkouda.segarray)": [[72, "arkouda.segarray.VAL_SUFFIX", false]], "validate_key() (arkouda.series method)": [[26, "arkouda.Series.validate_key", false]], "validate_key() (arkouda.series.series method)": [[73, "arkouda.series.Series.validate_key", false]], "validate_val() (arkouda.series method)": [[26, "arkouda.Series.validate_val", false]], "validate_val() (arkouda.series.series method)": [[73, "arkouda.series.Series.validate_val", false]], "valsize (arkouda.numpy.segarray attribute)": [[42, "arkouda.numpy.SegArray.valsize", false]], "valsize (arkouda.numpy.segarray.segarray attribute)": [[54, "arkouda.numpy.segarray.SegArray.valsize", false]], "valsize (arkouda.segarray attribute)": [[26, "arkouda.SegArray.valsize", false]], "valsize (arkouda.segarray.segarray attribute)": [[72, "arkouda.segarray.SegArray.valsize", false]], "valsize (arkouda.util.segarray attribute)": [[80, "arkouda.util.SegArray.valsize", false]], "value_counts() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.value_counts", false], [42, "id332", false], [42, "id400", false], [42, "id469", false], [42, "id538", false]], "value_counts() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.value_counts", false]], "value_counts() (arkouda.pdarray method)": [[26, "arkouda.pdarray.value_counts", false], [26, "id599", false], [26, "id668", false]], "value_counts() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.value_counts", false]], "value_counts() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.value_counts", false]], "value_counts() (arkouda.series method)": [[26, "arkouda.Series.value_counts", false]], "value_counts() (arkouda.series.series method)": [[73, "arkouda.series.Series.value_counts", false]], "value_counts() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.value_counts", false]], "value_counts() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.value_counts", false]], "value_counts() (in module arkouda)": [[117, "arkouda.value_counts", false]], "value_counts() (in module arkouda.series)": [[122, "arkouda.Series.value_counts", false]], "values (arkouda.array_api.set_functions.uniqueallresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueAllResult.values", false]], "values (arkouda.array_api.set_functions.uniquecountsresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueCountsResult.values", false]], "values (arkouda.array_api.set_functions.uniqueinverseresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueInverseResult.values", false]], "values (arkouda.bitvector attribute)": [[26, "arkouda.BitVector.values", false]], "values (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.values", false]], "values (arkouda.client_dtypes.ipv4 attribute)": [[20, "arkouda.client_dtypes.IPv4.values", false]], "values (arkouda.dataframe.diffaggregate attribute)": [[22, "arkouda.dataframe.DiffAggregate.values", false]], "values (arkouda.diffaggregate attribute)": [[26, "arkouda.DiffAggregate.values", false]], "values (arkouda.ipv4 attribute)": [[26, "arkouda.IPv4.values", false]], "values (arkouda.numpy.segarray attribute)": [[42, "arkouda.numpy.SegArray.values", false]], "values (arkouda.numpy.segarray.segarray attribute)": [[54, "arkouda.numpy.segarray.SegArray.values", false]], "values (arkouda.segarray attribute)": [[26, "arkouda.SegArray.values", false]], "values (arkouda.segarray.segarray attribute)": [[72, "arkouda.segarray.SegArray.values", false]], "values (arkouda.util.bitvector attribute)": [[80, "arkouda.util.BitVector.values", false]], "values (arkouda.util.ipv4 attribute)": [[80, "arkouda.util.IPv4.values", false]], "values (arkouda.util.segarray attribute)": [[80, "arkouda.util.SegArray.values", false]], "var() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.var", false]], "var() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.var", false]], "var() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.var", false]], "var() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.var", false]], "var() (arkouda.groupby method)": [[26, "arkouda.GroupBy.var", false], [26, "id171", false], [26, "id218", false], [26, "id265", false], [26, "id312", false], [116, "arkouda.GroupBy.var", false]], "var() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.var", false]], "var() (arkouda.ndarray method)": [[26, "arkouda.ndarray.var", false]], "var() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.var", false]], "var() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.var", false]], "var() (arkouda.numpy.pdarray method)": [[42, "arkouda.numpy.pdarray.var", false], [42, "id333", false], [42, "id401", false], [42, "id470", false], [42, "id539", false]], "var() (arkouda.numpy.pdarrayclass.pdarray method)": [[47, "arkouda.numpy.pdarrayclass.pdarray.var", false]], "var() (arkouda.pdarray method)": [[26, "arkouda.pdarray.var", false], [26, "id600", false], [26, "id669", false], [117, "arkouda.pdarray.var", false]], "var() (arkouda.pdarrayclass.pdarray method)": [[59, "arkouda.pdarrayclass.pdarray.var", false]], "var() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.var", false]], "var() (arkouda.segarray.pdarray method)": [[72, "arkouda.segarray.pdarray.var", false]], "var() (arkouda.series method)": [[26, "arkouda.Series.var", false]], "var() (arkouda.series.series method)": [[73, "arkouda.series.Series.var", false]], "var() (arkouda.timeclass.pdarray method)": [[79, "arkouda.timeclass.pdarray.var", false]], "var() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.var", false]], "var() (arkouda.util.pdarray method)": [[80, "arkouda.util.pdarray.var", false]], "var() (in module arkouda)": [[26, "arkouda.var", false], [112, "arkouda.var", false]], "var() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.var", false]], "var() (in module arkouda.numpy)": [[42, "arkouda.numpy.var", false]], "var() (in module arkouda.numpy.pdarrayclass)": [[47, "arkouda.numpy.pdarrayclass.var", false]], "var() (in module arkouda.pdarrayclass)": [[59, "arkouda.pdarrayclass.var", false]], "vecdot() (in module arkouda.array_api.linalg)": [[11, "arkouda.array_api.linalg.vecdot", false]], "vecentropy() (arkouda.scipy.stats.chi2 method)": [[70, "arkouda.scipy.stats.chi2.vecentropy", false]], "view() (arkouda.ndarray method)": [[26, "arkouda.ndarray.view", false]], "view() (arkouda.numpy.ndarray method)": [[42, "arkouda.numpy.ndarray.view", false]], "vstack() (in module arkouda)": [[26, "arkouda.vstack", false]], "vstack() (in module arkouda.numpy)": [[42, "arkouda.numpy.vstack", false]], "vstack() (in module arkouda.numpy.pdarraymanipulation)": [[49, "arkouda.numpy.pdarraymanipulation.vstack", false]], "vstack() (in module arkouda.pdarraymanipulation)": [[61, "arkouda.pdarraymanipulation.vstack", false]], "warn (arkouda.logger.loglevel attribute)": [[32, "arkouda.logger.LogLevel.WARN", false]], "warn (arkouda.loglevel attribute)": [[26, "arkouda.LogLevel.WARN", false]], "week (arkouda.datetime property)": [[26, "arkouda.Datetime.week", false], [26, "id120", false], [26, "id87", false]], "week (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.week", false]], "week (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.week", false]], "week (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.week", false]], "week (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.week", false]], "weekday (arkouda.datetime property)": [[26, "arkouda.Datetime.weekday", false], [26, "id121", false], [26, "id88", false]], "weekday (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.weekday", false]], "weekday (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.weekday", false]], "weekday (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.weekday", false]], "weekday (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.weekday", false]], "weekofyear (arkouda.datetime property)": [[26, "arkouda.Datetime.weekofyear", false], [26, "id122", false], [26, "id89", false]], "weekofyear (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.weekofyear", false]], "weekofyear (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.weekofyear", false]], "weekofyear (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.weekofyear", false]], "weekofyear (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.weekofyear", false]], "where() (in module arkouda)": [[112, "arkouda.where", false]], "where() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.where", false]], "width (arkouda.bitvector attribute)": [[26, "arkouda.BitVector.width", false]], "width (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.width", false]], "width (arkouda.util.bitvector attribute)": [[80, "arkouda.util.BitVector.width", false]], "write_line_to_file() (in module arkouda.io_util)": [[30, "arkouda.io_util.write_line_to_file", false]], "write_log() (in module arkouda)": [[26, "arkouda.write_log", false]], "write_log() (in module arkouda.logger)": [[32, "arkouda.logger.write_log", false]], "xlogy() (in module arkouda)": [[26, "arkouda.xlogy", false]], "xlogy() (in module arkouda.scipy.special)": [[69, "arkouda.scipy.special.xlogy", false]], "xor() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.xor", false]], "xor() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.xor", false]], "xor() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.xor", false]], "xor() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.xor", false]], "xor() (arkouda.groupby method)": [[26, "arkouda.GroupBy.XOR", false], [26, "id137", false], [26, "id184", false], [26, "id231", false], [26, "id278", false], [116, "arkouda.GroupBy.XOR", false]], "xor() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.XOR", false]], "xor() (arkouda.numpy.groupby method)": [[42, "arkouda.numpy.GroupBy.XOR", false]], "xor() (arkouda.numpy.segarray method)": [[42, "arkouda.numpy.SegArray.XOR", false]], "xor() (arkouda.numpy.segarray.segarray method)": [[54, "arkouda.numpy.segarray.SegArray.XOR", false]], "xor() (arkouda.segarray method)": [[26, "arkouda.SegArray.XOR", false]], "xor() (arkouda.segarray.groupby method)": [[72, "arkouda.segarray.GroupBy.XOR", false]], "xor() (arkouda.segarray.segarray method)": [[72, "arkouda.segarray.SegArray.XOR", false]], "xor() (arkouda.util.groupby method)": [[80, "arkouda.util.GroupBy.XOR", false]], "xor() (arkouda.util.segarray method)": [[80, "arkouda.util.SegArray.XOR", false]], "xtol() (arkouda.scipy.stats.chi2 method)": [[70, "arkouda.scipy.stats.chi2.xtol", false]], "year (arkouda.datetime property)": [[26, "arkouda.Datetime.year", false], [26, "id123", false], [26, "id90", false]], "year (arkouda.numpy.datetime property)": [[42, "arkouda.numpy.Datetime.year", false]], "year (arkouda.numpy.timeclass.datetime property)": [[57, "arkouda.numpy.timeclass.Datetime.year", false]], "year (arkouda.timeclass.datetime property)": [[79, "arkouda.timeclass.Datetime.year", false]], "year (arkouda.util.datetime property)": [[80, "arkouda.util.Datetime.year", false]], "zero_up() (in module arkouda.alignment)": [[3, "arkouda.alignment.zero_up", false]], "zeros() (in module arkouda)": [[26, "arkouda.zeros", false], [26, "id674", false], [114, "arkouda.zeros", false]], "zeros() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.zeros", false]], "zeros() (in module arkouda.numpy)": [[42, "arkouda.numpy.zeros", false], [42, "id540", false]], "zeros() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.zeros", false]], "zeros() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.zeros", false]], "zeros() (in module arkouda.segarray)": [[72, "arkouda.segarray.zeros", false]], "zeros_like() (in module arkouda)": [[26, "arkouda.zeros_like", false], [114, "arkouda.zeros_like", false]], "zeros_like() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.zeros_like", false]], "zeros_like() (in module arkouda.numpy)": [[42, "arkouda.numpy.zeros_like", false]], "zeros_like() (in module arkouda.numpy.pdarraycreation)": [[48, "arkouda.numpy.pdarraycreation.zeros_like", false]], "zeros_like() (in module arkouda.pdarraycreation)": [[60, "arkouda.pdarraycreation.zeros_like", false]]}, "objects": {"": [[26, 0, 0, "-", "arkouda"]], "arkouda": [[26, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [26, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [26, 1, 1, "", "AllSymbols"], [26, 2, 1, "", "BitVector"], [26, 5, 1, "", "BitVectorizer"], [26, 2, 1, "", "CachedAccessor"], [113, 2, 1, "", "Categorical"], [26, 2, 1, "", "DType"], [26, 1, 1, "", "DTypeObjects"], [26, 1, 1, "", "DTypes"], [115, 2, 1, "", "DataFrame"], [26, 2, 1, "", "DataFrameGroupBy"], [26, 2, 1, "id91", "Datetime"], [26, 2, 1, "", "DatetimeAccessor"], [26, 2, 1, "", "DiffAggregate"], [26, 2, 1, "", "Fields"], [26, 2, 1, "", "GROUPBY_REDUCTION_TYPES"], [116, 2, 1, "", "GroupBy"], [26, 2, 1, "", "IPv4"], [110, 2, 1, "", "Index"], [26, 2, 1, "", "Iterable"], [26, 1, 1, "", "LEN_SUFFIX"], [26, 2, 1, "", "LogLevel"], [26, 2, 1, "", "MultiIndex"], [26, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [26, 1, 1, "", "NumericDTypes"], [26, 2, 1, "", "Optional"], [26, 2, 1, "", "Properties"], [26, 1, 1, "", "RegisteredSymbols"], [26, 7, 1, "id316", "RegistrationError"], [26, 2, 1, "", "Row"], [26, 1, 1, "", "SEG_SUFFIX"], [26, 1, 1, "", "ScalarDTypes"], [26, 2, 1, "", "SegArray"], [122, 2, 1, "", "Series"], [26, 1, 1, "", "SeriesDTypes"], [26, 1, 1, "", "SortingAlgorithm"], [26, 2, 1, "", "StringAccessor"], [26, 2, 1, "id393", "Strings"], [26, 2, 1, "id470", "Timedelta"], [26, 2, 1, "", "Tuple"], [26, 2, 1, "", "Union"], [26, 1, 1, "", "VAL_SUFFIX"], [112, 5, 1, "", "abs"], [2, 0, 0, "-", "accessor"], [26, 5, 1, "", "ak_array"], [26, 5, 1, "", "akcast"], [3, 0, 0, "-", "alignment"], [112, 5, 1, "", "all"], [26, 1, 1, "", "all_scalars"], [112, 5, 1, "", "any"], [26, 5, 1, "", "apply"], [4, 0, 0, "-", "apply"], [114, 5, 1, "", "arange"], [112, 5, 1, "", "argmax"], [112, 5, 1, "", "argmaxk"], [112, 5, 1, "", "argmin"], [112, 5, 1, "", "argmink"], [111, 5, 1, "", "argsort"], [109, 5, 1, "", "array"], [9, 0, 0, "-", "array_api"], [26, 5, 1, "", "assert_almost_equal"], [26, 5, 1, "", "assert_almost_equivalent"], [26, 5, 1, "", "assert_arkouda_array_equal"], [26, 5, 1, "", "assert_arkouda_array_equivalent"], [26, 5, 1, "", "assert_arkouda_pdarray_equal"], [26, 5, 1, "", "assert_arkouda_segarray_equal"], [26, 5, 1, "", "assert_arkouda_strings_equal"], [26, 5, 1, "", "assert_attr_equal"], [26, 5, 1, "", "assert_categorical_equal"], [26, 5, 1, "", "assert_class_equal"], [26, 5, 1, "", "assert_contains_all"], [26, 5, 1, "", "assert_copy"], [26, 5, 1, "", "assert_dict_equal"], [26, 5, 1, "", "assert_equal"], [26, 5, 1, "", "assert_equivalent"], [26, 5, 1, "", "assert_frame_equal"], [26, 5, 1, "", "assert_frame_equivalent"], [26, 5, 1, "", "assert_index_equal"], [26, 5, 1, "", "assert_index_equivalent"], [26, 5, 1, "", "assert_is_sorted"], [26, 5, 1, "", "assert_series_equal"], [26, 5, 1, "", "assert_series_equivalent"], [26, 5, 1, "", "attach"], [26, 5, 1, "", "attach_all"], [26, 5, 1, "", "attach_pdarray"], [26, 2, 1, "", "bigint"], [26, 5, 1, "", "bigint_from_uint_arrays"], [26, 1, 1, "id498", "bitType"], [26, 1, 1, "id499", "bool_scalars"], [26, 5, 1, "id501", "broadcast"], [26, 5, 1, "", "broadcast_dims"], [26, 5, 1, "", "broadcast_to_shape"], [26, 5, 1, "", "can_cast"], [119, 5, 1, "", "cast"], [18, 0, 0, "-", "categorical"], [26, 5, 1, "", "clear"], [19, 0, 0, "-", "client"], [20, 0, 0, "-", "client_dtypes"], [26, 5, 1, "", "clz"], [111, 5, 1, "", "coargsort"], [21, 0, 0, "-", "comm_diagnostics"], [114, 5, 1, "", "concatenate"], [124, 5, 1, "", "connect"], [26, 5, 1, "", "convert_if_categorical"], [26, 5, 1, "", "corr"], [112, 5, 1, "", "cos"], [26, 5, 1, "", "cov"], [26, 5, 1, "id504", "create_pdarray"], [26, 5, 1, "", "ctz"], [112, 5, 1, "", "cumprod"], [112, 5, 1, "", "cumsum"], [22, 0, 0, "-", "dataframe"], [26, 5, 1, "", "date_operators"], [26, 5, 1, "id505", "date_range"], [26, 5, 1, "", "delete"], [26, 5, 1, "", "disableVerbose"], [26, 5, 1, "", "divmod"], [26, 5, 1, "", "dot"], [26, 5, 1, "", "dtype"], [23, 0, 0, "-", "dtypes"], [26, 5, 1, "", "enableVerbose"], [112, 5, 1, "", "exp"], [109, 5, 1, "", "export"], [26, 5, 1, "", "flip"], [26, 1, 1, "", "float_scalars"], [26, 5, 1, "", "fmod"], [26, 5, 1, "", "from_series"], [26, 5, 1, "", "full"], [26, 5, 1, "", "full_like"], [26, 5, 1, "", "generic_concat"], [26, 5, 1, "", "generic_msg"], [26, 5, 1, "", "getArkoudaLogger"], [26, 5, 1, "", "get_byteorder"], [26, 5, 1, "", "get_callback"], [26, 5, 1, "", "get_columns"], [109, 5, 1, "", "get_datasets"], [26, 5, 1, "", "get_filetype"], [26, 5, 1, "", "get_null_indices"], [26, 5, 1, "", "get_server_byteorder"], [24, 0, 0, "-", "groupbyclass"], [26, 5, 1, "", "hist_all"], [117, 5, 1, "", "histogram"], [25, 0, 0, "-", "history"], [109, 5, 1, "", "import_data"], [123, 5, 1, "", "in1d"], [27, 0, 0, "-", "index"], [26, 5, 1, "", "indexof1d"], [28, 0, 0, "-", "infoclass"], [26, 5, 1, "", "information"], [26, 1, 1, "id507", "intTypes"], [26, 1, 1, "", "int_scalars"], [26, 5, 1, "", "intersect"], [123, 5, 1, "", "intersect1d"], [26, 5, 1, "", "intx"], [26, 5, 1, "", "invert_permutation"], [29, 0, 0, "-", "io"], [30, 0, 0, "-", "io_util"], [26, 5, 1, "", "ip_address"], [26, 5, 1, "", "isSupportedBool"], [26, 5, 1, "", "isSupportedDType"], [26, 5, 1, "", "isSupportedFloat"], [26, 5, 1, "id508", "isSupportedInt"], [26, 5, 1, "", "isSupportedNumber"], [26, 5, 1, "", "is_ipv4"], [26, 5, 1, "", "is_ipv6"], [26, 5, 1, "", "is_registered"], [112, 5, 1, "", "is_sorted"], [31, 0, 0, "-", "join"], [114, 5, 1, "", "linspace"], [26, 5, 1, "", "list_registry"], [26, 5, 1, "", "list_symbol_table"], [26, 5, 1, "", "load"], [26, 5, 1, "", "load_all"], [26, 5, 1, "", "load_checkpoint"], [112, 5, 1, "", "log"], [32, 0, 0, "-", "logger"], [26, 5, 1, "", "ls"], [26, 5, 1, "", "ls_csv"], [33, 0, 0, "-", "match"], [34, 0, 0, "-", "matcher"], [112, 5, 1, "", "max"], [112, 5, 1, "", "maxk"], [112, 5, 1, "", "mean"], [26, 5, 1, "", "merge"], [112, 5, 1, "", "min"], [112, 5, 1, "", "mink"], [26, 5, 1, "", "mod"], [26, 2, 1, "", "ndarray"], [35, 0, 0, "-", "numeric"], [26, 1, 1, "", "numeric_and_bool_scalars"], [26, 1, 1, "", "numeric_scalars"], [42, 0, 0, "-", "numpy"], [26, 1, 1, "", "numpy_scalars"], [114, 5, 1, "", "ones"], [114, 5, 1, "", "ones_like"], [26, 5, 1, "", "parity"], [119, 2, 1, "", "pdarray"], [59, 0, 0, "-", "pdarrayclass"], [60, 0, 0, "-", "pdarraycreation"], [61, 0, 0, "-", "pdarraymanipulation"], [62, 0, 0, "-", "pdarraysetops"], [26, 5, 1, "", "plot_dist"], [63, 0, 0, "-", "plotting"], [26, 5, 1, "", "popcount"], [26, 5, 1, "", "power"], [26, 5, 1, "", "pretty_print_information"], [112, 5, 1, "", "prod"], [26, 5, 1, "", "promote_to_common_dtype"], [114, 5, 1, "", "randint"], [64, 0, 0, "-", "random"], [26, 5, 1, "", "random_strings_lognormal"], [26, 5, 1, "", "random_strings_uniform"], [109, 5, 1, "", "read"], [26, 5, 1, "", "read_csv"], [26, 5, 1, "", "read_hdf"], [26, 5, 1, "", "read_parquet"], [26, 5, 1, "", "read_tagged_data"], [26, 5, 1, "", "read_zarr"], [26, 5, 1, "", "receive"], [26, 5, 1, "", "receive_dataframe"], [26, 5, 1, "", "register_all"], [26, 5, 1, "", "resolve_scalar_dtype"], [26, 5, 1, "", "restore"], [26, 5, 1, "", "rotl"], [26, 5, 1, "", "rotr"], [65, 0, 0, "-", "row"], [26, 5, 1, "", "save_all"], [26, 5, 1, "", "save_checkpoint"], [26, 5, 1, "", "scalar_array"], [66, 0, 0, "-", "scipy"], [71, 0, 0, "-", "security"], [72, 0, 0, "-", "segarray"], [73, 0, 0, "-", "series"], [123, 5, 1, "", "setdiff1d"], [123, 5, 1, "", "setxor1d"], [26, 5, 1, "", "shape"], [112, 5, 1, "", "sin"], [26, 5, 1, "", "skew"], [26, 5, 1, "", "snapshot"], [26, 5, 1, "", "sort"], [74, 0, 0, "-", "sorting"], [75, 0, 0, "-", "sparrayclass"], [76, 0, 0, "-", "sparsematrix"], [26, 5, 1, "", "sqrt"], [26, 5, 1, "", "squeeze"], [26, 5, 1, "", "standard_normal"], [112, 5, 1, "", "std"], [26, 1, 1, "", "str_scalars"], [26, 5, 1, "", "string_operators"], [77, 0, 0, "-", "strings"], [112, 5, 1, "", "sum"], [78, 0, 0, "-", "testing"], [26, 5, 1, "", "tile"], [79, 0, 0, "-", "timeclass"], [26, 5, 1, "id672", "timedelta_range"], [26, 5, 1, "", "to_csv"], [26, 5, 1, "", "to_hdf"], [26, 5, 1, "", "to_parquet"], [26, 5, 1, "", "to_zarr"], [26, 5, 1, "", "typechecked"], [26, 5, 1, "", "uniform"], [123, 5, 1, "", "union1d"], [123, 5, 1, "", "unique"], [26, 5, 1, "", "unregister"], [26, 5, 1, "", "unregister_all"], [26, 5, 1, "", "unregister_pdarray_by_name"], [26, 5, 1, "", "update_hdf"], [80, 0, 0, "-", "util"], [117, 5, 1, "", "value_counts"], [112, 5, 1, "", "var"], [26, 5, 1, "", "vstack"], [112, 5, 1, "", "where"], [26, 5, 1, "", "write_log"], [26, 5, 1, "", "xlogy"], [114, 5, 1, "", "zeros"], [114, 5, 1, "", "zeros_like"]], "arkouda.BitVector": [[26, 3, 1, "", "conserves"], [26, 4, 1, "", "format"], [26, 4, 1, "", "from_return_msg"], [26, 4, 1, "", "opeq"], [26, 4, 1, "", "register"], [26, 3, 1, "", "registered_name"], [26, 3, 1, "", "reverse"], [26, 3, 1, "", "special_objType"], [26, 4, 1, "", "to_list"], [26, 4, 1, "", "to_ndarray"], [26, 3, 1, "", "values"], [26, 3, 1, "", "width"]], "arkouda.Categorical": [[26, 4, 1, "", "BinOps"], [26, 4, 1, "", "RegisterablePieces"], [26, 4, 1, "", "RequiredPieces"], [26, 4, 1, "", "argsort"], [26, 4, 1, "", "attach"], [113, 3, 1, "", "categories"], [113, 3, 1, "", "codes"], [26, 4, 1, "", "concatenate"], [113, 4, 1, "", "contains"], [26, 4, 1, "", "dtype"], [113, 4, 1, "", "endswith"], [26, 4, 1, "", "equals"], [113, 4, 1, "", "from_codes"], [26, 4, 1, "", "from_return_msg"], [26, 4, 1, "", "group"], [26, 4, 1, "", "hash"], [26, 4, 1, "", "in1d"], [26, 6, 1, "", "inferred_type"], [26, 4, 1, "", "info"], [26, 4, 1, "", "is_registered"], [26, 4, 1, "", "isna"], [26, 6, 1, "", "nbytes"], [113, 3, 1, "", "ndim"], [113, 3, 1, "", "nlevels"], [26, 4, 1, "", "objType"], [26, 4, 1, "", "parse_hdf_categoricals"], [113, 3, 1, "", "permutation"], [26, 4, 1, "", "pretty_print_info"], [26, 4, 1, "", "register"], [26, 4, 1, "", "reset_categories"], [26, 4, 1, "", "save"], [113, 3, 1, "", "segments"], [26, 4, 1, "", "set_categories"], [113, 3, 1, "", "shape"], [113, 3, 1, "", "size"], [26, 4, 1, "", "sort_values"], [26, 4, 1, "", "standardize_categories"], [113, 4, 1, "", "startswith"], [26, 4, 1, "", "to_hdf"], [26, 4, 1, "", "to_list"], [113, 5, 1, "", "to_ndarray"], [26, 4, 1, "", "to_pandas"], [26, 4, 1, "", "to_parquet"], [26, 4, 1, "", "to_strings"], [26, 4, 1, "", "transfer"], [26, 4, 1, "", "unique"], [26, 4, 1, "", "unregister"], [26, 4, 1, "", "unregister_categorical_by_name"], [26, 4, 1, "", "update_hdf"]], "arkouda.DType": [[26, 3, 1, "", "BIGINT"], [26, 3, 1, "", "BOOL"], [26, 3, 1, "", "COMPLEX128"], [26, 3, 1, "", "COMPLEX64"], [26, 3, 1, "", "FLOAT"], [26, 3, 1, "", "FLOAT32"], [26, 3, 1, "", "FLOAT64"], [26, 3, 1, "", "INT"], [26, 3, 1, "", "INT16"], [26, 3, 1, "", "INT32"], [26, 3, 1, "", "INT64"], [26, 3, 1, "", "INT8"], [26, 3, 1, "", "STR"], [26, 3, 1, "", "UINT"], [26, 3, 1, "", "UINT16"], [26, 3, 1, "", "UINT32"], [26, 3, 1, "", "UINT64"], [26, 3, 1, "", "UINT8"]], "arkouda.DataFrame": [[26, 4, 1, "id3", "GroupBy"], [26, 4, 1, "id4", "all"], [26, 4, 1, "id5", "any"], [26, 4, 1, "id6", "append"], [115, 5, 1, "", "apply_permutation"], [115, 5, 1, "", "argsort"], [26, 4, 1, "id9", "assign"], [26, 4, 1, "id10", "attach"], [115, 5, 1, "", "coargsort"], [26, 6, 1, "id12", "columns"], [115, 5, 1, "", "concat"], [115, 5, 1, "", "copy"], [26, 4, 1, "id14", "corr"], [26, 4, 1, "id15", "count"], [115, 5, 1, "", "drop"], [115, 5, 1, "", "drop_duplicates"], [26, 4, 1, "id18", "dropna"], [26, 6, 1, "id19", "dtypes"], [26, 6, 1, "id20", "empty"], [26, 4, 1, "id21", "filter_by_range"], [26, 4, 1, "id22", "from_pandas"], [26, 4, 1, "id23", "from_return_msg"], [115, 5, 1, "", "groupby"], [115, 5, 1, "", "head"], [26, 6, 1, "id26", "index"], [26, 6, 1, "id27", "info"], [26, 4, 1, "id28", "is_registered"], [26, 4, 1, "id29", "isin"], [26, 4, 1, "id30", "isna"], [26, 4, 1, "id31", "load"], [26, 4, 1, "id32", "memory_usage"], [26, 4, 1, "id33", "memory_usage_info"], [26, 4, 1, "id34", "merge"], [26, 4, 1, "id35", "notna"], [26, 4, 1, "id36", "objType"], [26, 4, 1, "id37", "read_csv"], [26, 4, 1, "id38", "register"], [115, 5, 1, "", "rename"], [115, 5, 1, "", "reset_index"], [26, 4, 1, "id41", "sample"], [26, 4, 1, "id42", "save"], [26, 6, 1, "id43", "shape"], [26, 6, 1, "id44", "size"], [26, 4, 1, "id45", "sort_index"], [115, 5, 1, "", "sort_values"], [115, 5, 1, "", "tail"], [26, 4, 1, "id48", "to_csv"], [26, 4, 1, "id49", "to_hdf"], [26, 4, 1, "id50", "to_markdown"], [115, 5, 1, "", "to_pandas"], [26, 4, 1, "id52", "to_parquet"], [26, 4, 1, "id53", "transfer"], [26, 4, 1, "id54", "unregister"], [26, 4, 1, "id55", "unregister_dataframe_by_name"], [26, 4, 1, "id56", "update_hdf"], [26, 4, 1, "id57", "update_nrows"]], "arkouda.DataFrameGroupBy": [[26, 4, 1, "", "all"], [26, 4, 1, "", "any"], [26, 4, 1, "", "argmax"], [26, 4, 1, "", "argmin"], [26, 3, 1, "", "as_index"], [26, 4, 1, "", "broadcast"], [26, 4, 1, "", "count"], [26, 3, 1, "", "df"], [26, 4, 1, "", "diff"], [26, 4, 1, "", "first"], [26, 3, 1, "", "gb"], [26, 3, 1, "", "gb_key_names"], [26, 4, 1, "", "head"], [26, 4, 1, "", "max"], [26, 4, 1, "", "mean"], [26, 4, 1, "", "median"], [26, 4, 1, "", "min"], [26, 4, 1, "", "mode"], [26, 4, 1, "", "nunique"], [26, 4, 1, "", "prod"], [26, 4, 1, "", "sample"], [26, 4, 1, "", "size"], [26, 4, 1, "", "std"], [26, 4, 1, "", "sum"], [26, 4, 1, "", "tail"], [26, 4, 1, "", "unique"], [26, 4, 1, "", "var"], [26, 4, 1, "", "xor"]], "arkouda.Datetime": [[26, 6, 1, "id92", "date"], [26, 6, 1, "id93", "day"], [26, 6, 1, "id94", "day_of_week"], [26, 6, 1, "id95", "day_of_year"], [26, 6, 1, "id96", "dayofweek"], [26, 6, 1, "id97", "dayofyear"], [26, 6, 1, "id98", "hour"], [26, 6, 1, "id99", "is_leap_year"], [26, 4, 1, "id100", "is_registered"], [26, 4, 1, "id101", "isocalendar"], [26, 6, 1, "id102", "microsecond"], [26, 6, 1, "id103", "millisecond"], [26, 6, 1, "id104", "minute"], [26, 6, 1, "id105", "month"], [26, 6, 1, "id106", "nanosecond"], [26, 4, 1, "id107", "register"], [26, 6, 1, "id108", "second"], [26, 3, 1, "id109", "special_objType"], [26, 4, 1, "id110", "sum"], [26, 3, 1, "id111", "supported_opeq"], [26, 3, 1, "id112", "supported_with_datetime"], [26, 3, 1, "id113", "supported_with_pdarray"], [26, 3, 1, "id114", "supported_with_r_datetime"], [26, 3, 1, "id115", "supported_with_r_pdarray"], [26, 3, 1, "id116", "supported_with_r_timedelta"], [26, 3, 1, "id117", "supported_with_timedelta"], [26, 4, 1, "id118", "to_pandas"], [26, 4, 1, "id119", "unregister"], [26, 6, 1, "id120", "week"], [26, 6, 1, "id121", "weekday"], [26, 6, 1, "id122", "weekofyear"], [26, 6, 1, "id123", "year"]], "arkouda.DatetimeAccessor": [[26, 3, 1, "", "series"]], "arkouda.DiffAggregate": [[26, 4, 1, "", "all"], [26, 4, 1, "", "any"], [26, 4, 1, "", "argmax"], [26, 4, 1, "", "argmin"], [26, 4, 1, "", "count"], [26, 4, 1, "", "first"], [26, 3, 1, "", "gb"], [26, 4, 1, "", "max"], [26, 4, 1, "", "mean"], [26, 4, 1, "", "median"], [26, 4, 1, "", "min"], [26, 4, 1, "", "mode"], [26, 4, 1, "", "nunique"], [26, 4, 1, "", "prod"], [26, 4, 1, "", "std"], [26, 4, 1, "", "sum"], [26, 4, 1, "", "unique"], [26, 3, 1, "", "values"], [26, 4, 1, "", "var"], [26, 4, 1, "", "xor"]], "arkouda.Fields": [[26, 3, 1, "", "MSB_left"], [26, 4, 1, "", "format"], [26, 3, 1, "", "name"], [26, 3, 1, "", "names"], [26, 3, 1, "", "namewidth"], [26, 4, 1, "", "opeq"], [26, 3, 1, "", "pad"], [26, 3, 1, "", "padchar"], [26, 3, 1, "", "separator"], [26, 3, 1, "", "show_int"]], "arkouda.GROUPBY_REDUCTION_TYPES": [[26, 4, 1, "", "copy"], [26, 4, 1, "", "difference"], [26, 4, 1, "", "intersection"], [26, 4, 1, "", "isdisjoint"], [26, 4, 1, "", "issubset"], [26, 4, 1, "", "issuperset"], [26, 4, 1, "", "symmetric_difference"], [26, 4, 1, "", "union"]], "arkouda.GroupBy": [[116, 4, 1, "", "AND"], [116, 4, 1, "", "OR"], [26, 4, 1, "id277", "Reductions"], [116, 4, 1, "", "XOR"], [116, 4, 1, "", "aggregate"], [116, 4, 1, "", "all"], [116, 4, 1, "", "any"], [116, 4, 1, "", "argmax"], [116, 4, 1, "", "argmin"], [116, 4, 1, "", "attach"], [116, 4, 1, "", "broadcast"], [116, 4, 1, "", "build_from_components"], [116, 4, 1, "", "count"], [116, 3, 1, "", "dropna"], [116, 4, 1, "", "first"], [26, 4, 1, "id289", "from_return_msg"], [116, 4, 1, "", "head"], [116, 4, 1, "", "is_registered"], [116, 3, 1, "", "logger"], [116, 4, 1, "", "max"], [116, 4, 1, "", "mean"], [116, 4, 1, "", "median"], [116, 4, 1, "", "min"], [116, 4, 1, "", "mode"], [116, 4, 1, "", "most_common"], [116, 3, 1, "", "ngroups"], [116, 3, 1, "", "nkeys"], [116, 4, 1, "", "nunique"], [26, 4, 1, "id299", "objType"], [116, 3, 1, "", "permutation"], [116, 4, 1, "", "prod"], [116, 4, 1, "", "register"], [116, 4, 1, "", "sample"], [116, 3, 1, "", "segments"], [116, 4, 1, "id0", "size"], [116, 4, 1, "", "std"], [116, 4, 1, "", "sum"], [116, 4, 1, "", "tail"], [116, 4, 1, "", "to_hdf"], [116, 4, 1, "", "unique"], [116, 3, 1, "", "unique_keys"], [116, 4, 1, "", "unregister"], [116, 4, 1, "", "unregister_groupby_by_name"], [26, 4, 1, "id311", "update_hdf"], [116, 4, 1, "", "var"]], "arkouda.IPv4": [[26, 4, 1, "", "export_uint"], [26, 4, 1, "", "format"], [26, 4, 1, "", "normalize"], [26, 4, 1, "", "opeq"], [26, 4, 1, "", "register"], [26, 3, 1, "", "special_objType"], [26, 4, 1, "", "to_hdf"], [26, 4, 1, "", "to_list"], [26, 4, 1, "", "to_ndarray"], [26, 4, 1, "", "update_hdf"], [26, 3, 1, "", "values"]], "arkouda.Index": [[110, 5, 1, "", "argsort"], [110, 5, 1, "", "concat"], [26, 4, 1, "", "equals"], [26, 4, 1, "", "factory"], [26, 4, 1, "", "from_return_msg"], [26, 6, 1, "", "index"], [26, 6, 1, "", "inferred_type"], [26, 4, 1, "", "is_registered"], [26, 6, 1, "", "is_unique"], [110, 5, 1, "", "lookup"], [26, 4, 1, "", "map"], [26, 3, 1, "", "max_list_size"], [26, 4, 1, "", "memory_usage"], [26, 6, 1, "", "names"], [26, 6, 1, "", "ndim"], [26, 6, 1, "", "nlevels"], [26, 3, 1, "", "objType"], [26, 4, 1, "", "register"], [26, 3, 1, "", "registered_name"], [26, 4, 1, "", "save"], [110, 5, 1, "", "set_dtype"], [26, 6, 1, "", "shape"], [26, 4, 1, "", "to_csv"], [26, 4, 1, "", "to_dict"], [26, 4, 1, "", "to_hdf"], [26, 4, 1, "", "to_list"], [26, 4, 1, "", "to_ndarray"], [26, 4, 1, "", "to_pandas"], [26, 4, 1, "", "to_parquet"], [26, 4, 1, "", "unregister"], [26, 4, 1, "", "update_hdf"]], "arkouda.Iterable": [[26, 4, 1, "", "copy_with"]], "arkouda.LogLevel": [[26, 3, 1, "", "CRITICAL"], [26, 3, 1, "", "DEBUG"], [26, 3, 1, "", "ERROR"], [26, 3, 1, "", "INFO"], [26, 3, 1, "", "WARN"]], "arkouda.MultiIndex": [[110, 5, 1, "", "argsort"], [110, 5, 1, "", "concat"], [26, 6, 1, "", "dtype"], [26, 4, 1, "", "equal_levels"], [26, 4, 1, "", "get_level_values"], [26, 6, 1, "", "index"], [26, 6, 1, "", "inferred_type"], [26, 4, 1, "", "is_registered"], [26, 3, 1, "", "levels"], [110, 5, 1, "", "lookup"], [26, 4, 1, "", "memory_usage"], [26, 6, 1, "", "name"], [26, 6, 1, "", "names"], [26, 6, 1, "", "ndim"], [26, 6, 1, "", "nlevels"], [26, 3, 1, "", "objType"], [26, 4, 1, "", "register"], [26, 3, 1, "", "registered_name"], [110, 5, 1, "", "set_dtype"], [26, 4, 1, "", "to_dict"], [26, 4, 1, "", "to_hdf"], [26, 4, 1, "", "to_list"], [26, 4, 1, "", "to_ndarray"], [26, 4, 1, "", "to_pandas"], [26, 4, 1, "", "unregister"], [26, 4, 1, "", "update_hdf"]], "arkouda.SegArray": [[26, 4, 1, "", "AND"], [26, 4, 1, "", "OR"], [26, 4, 1, "", "XOR"], [26, 4, 1, "", "aggregate"], [26, 4, 1, "", "all"], [26, 4, 1, "", "any"], [26, 4, 1, "", "append"], [26, 4, 1, "", "append_single"], [26, 4, 1, "", "argmax"], [26, 4, 1, "", "argmin"], [26, 4, 1, "", "attach"], [26, 4, 1, "", "concat"], [26, 4, 1, "", "copy"], [26, 3, 1, "", "dtype"], [26, 4, 1, "", "filter"], [26, 4, 1, "", "from_multi_array"], [26, 4, 1, "", "from_parts"], [26, 4, 1, "", "from_return_msg"], [26, 4, 1, "", "get_jth"], [26, 4, 1, "", "get_length_n"], [26, 4, 1, "", "get_ngrams"], [26, 4, 1, "", "get_prefixes"], [26, 4, 1, "", "get_suffixes"], [26, 6, 1, "", "grouping"], [26, 4, 1, "", "hash"], [26, 4, 1, "", "intersect"], [26, 4, 1, "", "is_registered"], [26, 4, 1, "", "load"], [26, 3, 1, "", "logger"], [26, 4, 1, "", "max"], [26, 4, 1, "", "mean"], [26, 4, 1, "", "min"], [26, 6, 1, "", "nbytes"], [26, 6, 1, "", "non_empty"], [26, 4, 1, "", "nunique"], [26, 3, 1, "", "objType"], [26, 4, 1, "", "prepend_single"], [26, 4, 1, "", "prod"], [26, 4, 1, "", "read_hdf"], [26, 4, 1, "", "register"], [26, 3, 1, "", "registered_name"], [26, 4, 1, "", "remove_repeats"], [26, 4, 1, "", "save"], [26, 3, 1, "", "segments"], [26, 4, 1, "", "set_jth"], [26, 4, 1, "", "setdiff"], [26, 4, 1, "", "setxor"], [26, 3, 1, "", "size"], [26, 4, 1, "", "sum"], [26, 4, 1, "", "to_hdf"], [26, 4, 1, "", "to_list"], [26, 4, 1, "", "to_ndarray"], [26, 4, 1, "", "to_parquet"], [26, 4, 1, "", "transfer"], [26, 4, 1, "", "union"], [26, 4, 1, "", "unique"], [26, 4, 1, "", "unregister"], [26, 4, 1, "", "unregister_segarray_by_name"], [26, 4, 1, "", "update_hdf"], [26, 3, 1, "", "valsize"], [26, 3, 1, "", "values"]], "arkouda.Series": [[26, 4, 1, "", "add"], [26, 4, 1, "", "argmax"], [26, 4, 1, "", "argmin"], [26, 6, 1, "", "at"], [26, 4, 1, "", "attach"], [26, 4, 1, "", "concat"], [26, 4, 1, "", "diff"], [26, 4, 1, "", "dt"], [26, 6, 1, "", "dtype"], [26, 4, 1, "", "fillna"], [26, 4, 1, "", "from_return_msg"], [26, 4, 1, "", "has_repeat_labels"], [26, 4, 1, "", "hasnans"], [122, 5, 1, "", "head"], [26, 6, 1, "", "iat"], [26, 6, 1, "", "iloc"], [26, 4, 1, "", "is_registered"], [26, 4, 1, "", "isin"], [26, 4, 1, "", "isna"], [26, 4, 1, "", "isnull"], [26, 6, 1, "", "loc"], [122, 5, 1, "id0", "locate"], [26, 4, 1, "", "map"], [26, 4, 1, "", "max"], [26, 4, 1, "", "mean"], [26, 4, 1, "", "memory_usage"], [26, 4, 1, "", "min"], [26, 6, 1, "", "ndim"], [26, 4, 1, "", "notna"], [26, 4, 1, "", "notnull"], [26, 4, 1, "", "objType"], [122, 5, 1, "", "pdconcat"], [26, 4, 1, "", "prod"], [26, 4, 1, "", "register"], [26, 6, 1, "", "shape"], [122, 5, 1, "", "sort_index"], [122, 5, 1, "", "sort_values"], [26, 4, 1, "", "std"], [26, 4, 1, "", "str_acc"], [26, 4, 1, "", "sum"], [122, 5, 1, "", "tail"], [26, 4, 1, "", "to_dataframe"], [26, 4, 1, "", "to_list"], [26, 4, 1, "", "to_markdown"], [26, 4, 1, "", "to_ndarray"], [122, 5, 1, "", "to_pandas"], [122, 5, 1, "", "topn"], [26, 4, 1, "", "unregister"], [26, 4, 1, "", "validate_key"], [26, 4, 1, "", "validate_val"], [122, 5, 1, "", "value_counts"], [26, 4, 1, "", "var"]], "arkouda.StringAccessor": [[26, 3, 1, "", "series"]], "arkouda.Strings": [[26, 3, 1, "id401", "BinOps"], [26, 4, 1, "id402", "astype"], [26, 4, 1, "id403", "attach"], [26, 4, 1, "id404", "cached_regex_patterns"], [26, 4, 1, "id405", "capitalize"], [26, 4, 1, "id406", "contains"], [26, 4, 1, "id407", "decode"], [26, 3, 1, "id408", "dtype"], [26, 4, 1, "id409", "encode"], [26, 4, 1, "id410", "endswith"], [26, 3, 1, "id411", "entry"], [26, 4, 1, "id412", "equals"], [26, 4, 1, "id413", "find_locations"], [26, 4, 1, "id414", "findall"], [26, 4, 1, "id415", "flatten"], [26, 4, 1, "id416", "from_parts"], [26, 4, 1, "id417", "from_return_msg"], [26, 4, 1, "id418", "fullmatch"], [26, 4, 1, "id419", "get_bytes"], [26, 4, 1, "id420", "get_lengths"], [26, 4, 1, "id421", "get_offsets"], [26, 4, 1, "id422", "get_prefixes"], [26, 4, 1, "id423", "get_suffixes"], [26, 4, 1, "id424", "group"], [26, 4, 1, "id425", "hash"], [26, 6, 1, "id426", "inferred_type"], [26, 4, 1, "id427", "info"], [26, 4, 1, "id428", "is_registered"], [26, 4, 1, "id429", "isalnum"], [26, 4, 1, "id430", "isalpha"], [26, 4, 1, "id431", "isdecimal"], [26, 4, 1, "id432", "isdigit"], [26, 4, 1, "id433", "isempty"], [26, 4, 1, "id434", "islower"], [26, 4, 1, "id435", "isspace"], [26, 4, 1, "id436", "istitle"], [26, 4, 1, "id437", "isupper"], [26, 3, 1, "id438", "logger"], [26, 4, 1, "id439", "lower"], [26, 4, 1, "id440", "lstick"], [26, 4, 1, "id441", "match"], [26, 3, 1, "id396", "nbytes"], [26, 3, 1, "id397", "ndim"], [26, 3, 1, "id442", "objType"], [26, 4, 1, "id443", "peel"], [26, 4, 1, "id444", "pretty_print_info"], [26, 4, 1, "id445", "purge_cached_regex_patterns"], [26, 4, 1, "id446", "regex_split"], [26, 4, 1, "id447", "register"], [26, 3, 1, "id448", "registered_name"], [26, 4, 1, "id449", "rpeel"], [26, 4, 1, "id450", "save"], [26, 4, 1, "id451", "search"], [26, 3, 1, "id398", "shape"], [26, 3, 1, "id452", "size"], [26, 4, 1, "id453", "split"], [26, 4, 1, "id454", "startswith"], [26, 4, 1, "id455", "stick"], [26, 4, 1, "id456", "strip"], [26, 4, 1, "id457", "sub"], [26, 4, 1, "id458", "subn"], [26, 4, 1, "id459", "title"], [26, 4, 1, "id460", "to_csv"], [26, 4, 1, "id461", "to_hdf"], [26, 4, 1, "id462", "to_list"], [26, 4, 1, "id463", "to_ndarray"], [26, 4, 1, "id464", "to_parquet"], [26, 4, 1, "id465", "transfer"], [26, 4, 1, "id466", "unregister"], [26, 4, 1, "id467", "unregister_strings_by_name"], [26, 4, 1, "id468", "update_hdf"], [26, 4, 1, "id469", "upper"]], "arkouda.Timedelta": [[26, 4, 1, "id471", "abs"], [26, 6, 1, "id472", "components"], [26, 6, 1, "id473", "days"], [26, 4, 1, "id474", "is_registered"], [26, 6, 1, "id475", "microseconds"], [26, 6, 1, "id476", "nanoseconds"], [26, 4, 1, "id477", "register"], [26, 6, 1, "id478", "seconds"], [26, 3, 1, "id479", "special_objType"], [26, 4, 1, "id480", "std"], [26, 4, 1, "id481", "sum"], [26, 3, 1, "id482", "supported_opeq"], [26, 3, 1, "id483", "supported_with_datetime"], [26, 3, 1, "id484", "supported_with_pdarray"], [26, 3, 1, "id485", "supported_with_r_datetime"], [26, 3, 1, "id486", "supported_with_r_pdarray"], [26, 3, 1, "id487", "supported_with_r_timedelta"], [26, 3, 1, "id488", "supported_with_timedelta"], [26, 4, 1, "id489", "to_pandas"], [26, 4, 1, "id490", "total_seconds"], [26, 4, 1, "id491", "unregister"]], "arkouda.accessor": [[2, 2, 1, "", "CachedAccessor"], [2, 2, 1, "", "DatetimeAccessor"], [2, 2, 1, "", "Properties"], [2, 2, 1, "", "StringAccessor"], [2, 5, 1, "", "date_operators"], [2, 5, 1, "", "string_operators"]], "arkouda.accessor.DatetimeAccessor": [[2, 3, 1, "", "series"]], "arkouda.accessor.StringAccessor": [[2, 3, 1, "", "series"]], "arkouda.alignment": [[3, 7, 1, "", "NonUniqueError"], [3, 5, 1, "", "align"], [3, 5, 1, "", "find"], [3, 5, 1, "", "in1d_intervals"], [3, 5, 1, "", "interval_lookup"], [3, 5, 1, "", "is_cosorted"], [3, 5, 1, "", "left_align"], [3, 5, 1, "", "lookup"], [3, 5, 1, "", "right_align"], [3, 5, 1, "", "search_intervals"], [3, 5, 1, "", "unsqueeze"], [3, 5, 1, "", "zero_up"]], "arkouda.apply": [[4, 5, 1, "", "apply"]], "arkouda.array_api": [[9, 2, 1, "", "Array"], [5, 0, 0, "-", "array_object"], [6, 0, 0, "-", "creation_functions"], [7, 0, 0, "-", "data_type_functions"], [8, 0, 0, "-", "elementwise_functions"], [10, 0, 0, "-", "indexing_functions"], [11, 0, 0, "-", "linalg"], [12, 0, 0, "-", "manipulation_functions"], [13, 0, 0, "-", "searching_functions"], [14, 0, 0, "-", "set_functions"], [15, 0, 0, "-", "sorting_functions"], [16, 0, 0, "-", "statistical_functions"], [17, 0, 0, "-", "utility_functions"]], "arkouda.array_api.Array": [[9, 6, 1, "", "T"], [9, 4, 1, "", "chunk_info"], [9, 6, 1, "", "device"], [9, 6, 1, "", "dtype"], [9, 4, 1, "", "item"], [9, 6, 1, "", "mT"], [9, 6, 1, "", "ndim"], [9, 6, 1, "", "shape"], [9, 6, 1, "", "size"], [9, 4, 1, "", "to_device"], [9, 4, 1, "", "to_ndarray"], [9, 4, 1, "", "tolist"], [9, 4, 1, "", "transpose"]], "arkouda.array_api.array_object": [[5, 2, 1, "", "Array"], [5, 1, 1, "", "HANDLED_FUNCTIONS"], [5, 5, 1, "", "implements_numpy"]], "arkouda.array_api.array_object.Array": [[5, 6, 1, "", "T"], [5, 4, 1, "", "chunk_info"], [5, 6, 1, "", "device"], [5, 6, 1, "", "dtype"], [5, 4, 1, "", "item"], [5, 6, 1, "", "mT"], [5, 6, 1, "", "ndim"], [5, 6, 1, "", "shape"], [5, 6, 1, "", "size"], [5, 4, 1, "", "to_device"], [5, 4, 1, "", "to_ndarray"], [5, 4, 1, "", "tolist"], [5, 4, 1, "", "transpose"]], "arkouda.array_api.creation_functions": [[6, 5, 1, "", "arange"], [6, 5, 1, "", "asarray"], [6, 5, 1, "", "empty"], [6, 5, 1, "", "empty_like"], [6, 5, 1, "", "eye"], [6, 5, 1, "", "from_dlpack"], [6, 5, 1, "", "full"], [6, 5, 1, "", "full_like"], [6, 5, 1, "", "linspace"], [6, 5, 1, "", "meshgrid"], [6, 5, 1, "", "ones"], [6, 5, 1, "", "ones_like"], [6, 5, 1, "", "tril"], [6, 5, 1, "", "triu"], [6, 5, 1, "", "zeros"], [6, 5, 1, "", "zeros_like"]], "arkouda.array_api.data_type_functions": [[7, 5, 1, "", "astype"], [7, 5, 1, "", "can_cast"], [7, 5, 1, "", "finfo"], [7, 2, 1, "", "finfo_object"], [7, 5, 1, "", "iinfo"], [7, 2, 1, "", "iinfo_object"], [7, 5, 1, "", "isdtype"], [7, 5, 1, "", "result_type"]], "arkouda.array_api.data_type_functions.finfo_object": [[7, 3, 1, "", "bits"], [7, 3, 1, "", "dtype"], [7, 3, 1, "", "eps"], [7, 3, 1, "", "max"], [7, 3, 1, "", "min"], [7, 3, 1, "", "smallest_normal"]], "arkouda.array_api.data_type_functions.iinfo_object": [[7, 3, 1, "", "bits"], [7, 3, 1, "", "dtype"], [7, 3, 1, "", "max"], [7, 3, 1, "", "min"]], "arkouda.array_api.elementwise_functions": [[8, 5, 1, "", "abs"], [8, 5, 1, "", "acos"], [8, 5, 1, "", "acosh"], [8, 5, 1, "", "add"], [8, 5, 1, "", "asin"], [8, 5, 1, "", "asinh"], [8, 5, 1, "", "atan"], [8, 5, 1, "", "atan2"], [8, 5, 1, "", "atanh"], [8, 5, 1, "", "bitwise_and"], [8, 5, 1, "", "bitwise_invert"], [8, 5, 1, "", "bitwise_left_shift"], [8, 5, 1, "", "bitwise_or"], [8, 5, 1, "", "bitwise_right_shift"], [8, 5, 1, "", "bitwise_xor"], [8, 5, 1, "", "ceil"], [8, 5, 1, "", "conj"], [8, 5, 1, "", "cos"], [8, 5, 1, "", "cosh"], [8, 5, 1, "", "divide"], [8, 5, 1, "", "equal"], [8, 5, 1, "", "exp"], [8, 5, 1, "", "expm1"], [8, 5, 1, "", "floor"], [8, 5, 1, "", "floor_divide"], [8, 5, 1, "", "greater"], [8, 5, 1, "", "greater_equal"], [8, 5, 1, "", "imag"], [8, 5, 1, "", "isfinite"], [8, 5, 1, "", "isinf"], [8, 5, 1, "", "isnan"], [8, 5, 1, "", "less"], [8, 5, 1, "", "less_equal"], [8, 5, 1, "", "log"], [8, 5, 1, "", "log10"], [8, 5, 1, "", "log1p"], [8, 5, 1, "", "log2"], [8, 5, 1, "", "logaddexp"], [8, 5, 1, "", "logical_and"], [8, 5, 1, "", "logical_not"], [8, 5, 1, "", "logical_or"], [8, 5, 1, "", "logical_xor"], [8, 5, 1, "", "multiply"], [8, 5, 1, "", "negative"], [8, 5, 1, "", "not_equal"], [8, 5, 1, "", "positive"], [8, 5, 1, "", "pow"], [8, 5, 1, "", "real"], [8, 5, 1, "", "remainder"], [8, 5, 1, "", "round"], [8, 5, 1, "", "sign"], [8, 5, 1, "", "sin"], [8, 5, 1, "", "sinh"], [8, 5, 1, "", "sqrt"], [8, 5, 1, "", "square"], [8, 5, 1, "", "subtract"], [8, 5, 1, "", "tan"], [8, 5, 1, "", "tanh"], [8, 5, 1, "", "trunc"]], "arkouda.array_api.indexing_functions": [[10, 5, 1, "", "take"]], "arkouda.array_api.linalg": [[11, 5, 1, "", "matmul"], [11, 5, 1, "", "matrix_transpose"], [11, 5, 1, "", "tensordot"], [11, 5, 1, "", "vecdot"]], "arkouda.array_api.manipulation_functions": [[12, 5, 1, "", "broadcast_arrays"], [12, 5, 1, "", "broadcast_to"], [12, 5, 1, "", "concat"], [12, 5, 1, "", "expand_dims"], [12, 5, 1, "", "flip"], [12, 5, 1, "", "moveaxis"], [12, 5, 1, "", "permute_dims"], [12, 5, 1, "", "repeat"], [12, 5, 1, "", "reshape"], [12, 5, 1, "", "roll"], [12, 5, 1, "", "squeeze"], [12, 5, 1, "", "stack"], [12, 5, 1, "", "tile"], [12, 5, 1, "", "unstack"]], "arkouda.array_api.searching_functions": [[13, 5, 1, "", "argmax"], [13, 5, 1, "", "argmin"], [13, 5, 1, "", "nonzero"], [13, 5, 1, "", "searchsorted"], [13, 5, 1, "", "where"]], "arkouda.array_api.set_functions": [[14, 2, 1, "", "UniqueAllResult"], [14, 2, 1, "", "UniqueCountsResult"], [14, 2, 1, "", "UniqueInverseResult"], [14, 5, 1, "", "unique_all"], [14, 5, 1, "", "unique_counts"], [14, 5, 1, "", "unique_inverse"], [14, 5, 1, "", "unique_values"]], "arkouda.array_api.set_functions.UniqueAllResult": [[14, 3, 1, "", "counts"], [14, 3, 1, "", "indices"], [14, 3, 1, "", "inverse_indices"], [14, 3, 1, "", "values"]], "arkouda.array_api.set_functions.UniqueCountsResult": [[14, 3, 1, "", "counts"], [14, 3, 1, "", "values"]], "arkouda.array_api.set_functions.UniqueInverseResult": [[14, 3, 1, "", "inverse_indices"], [14, 3, 1, "", "values"]], "arkouda.array_api.sorting_functions": [[15, 5, 1, "", "argsort"], [15, 5, 1, "", "sort"]], "arkouda.array_api.statistical_functions": [[16, 5, 1, "", "cumulative_sum"], [16, 5, 1, "", "max"], [16, 5, 1, "", "mean"], [16, 5, 1, "", "mean_shim"], [16, 5, 1, "", "min"], [16, 5, 1, "", "prod"], [16, 5, 1, "", "std"], [16, 5, 1, "", "sum"], [16, 5, 1, "", "var"]], "arkouda.array_api.utility_functions": [[17, 5, 1, "", "all"], [17, 5, 1, "", "any"], [17, 5, 1, "", "clip"], [17, 5, 1, "", "diff"], [17, 5, 1, "", "pad"], [17, 5, 1, "", "trapezoid"], [17, 5, 1, "", "trapz"]], "arkouda.bigint": [[26, 3, 1, "", "itemsize"], [26, 3, 1, "", "kind"], [26, 3, 1, "", "name"], [26, 3, 1, "", "ndim"], [26, 3, 1, "", "shape"], [26, 4, 1, "", "type"]], "arkouda.categorical": [[18, 2, 1, "", "Categorical"]], "arkouda.categorical.Categorical": [[18, 3, 1, "", "BinOps"], [18, 3, 1, "", "RegisterablePieces"], [18, 3, 1, "", "RequiredPieces"], [18, 4, 1, "", "argsort"], [18, 4, 1, "", "attach"], [18, 3, 1, "", "categories"], [18, 3, 1, "", "codes"], [18, 4, 1, "", "concatenate"], [18, 4, 1, "", "contains"], [18, 3, 1, "", "dtype"], [18, 4, 1, "", "endswith"], [18, 4, 1, "", "equals"], [18, 4, 1, "", "from_codes"], [18, 4, 1, "", "from_return_msg"], [18, 4, 1, "", "group"], [18, 4, 1, "", "hash"], [18, 4, 1, "", "in1d"], [18, 6, 1, "", "inferred_type"], [18, 4, 1, "", "info"], [18, 4, 1, "", "is_registered"], [18, 4, 1, "", "isna"], [18, 3, 1, "", "logger"], [18, 6, 1, "", "nbytes"], [18, 3, 1, "id0", "ndim"], [18, 3, 1, "id1", "nlevels"], [18, 3, 1, "", "objType"], [18, 4, 1, "", "parse_hdf_categoricals"], [18, 3, 1, "id2", "permutation"], [18, 4, 1, "", "pretty_print_info"], [18, 4, 1, "", "register"], [18, 3, 1, "", "registered_name"], [18, 4, 1, "", "reset_categories"], [18, 4, 1, "", "save"], [18, 3, 1, "id3", "segments"], [18, 4, 1, "", "set_categories"], [18, 3, 1, "id4", "shape"], [18, 3, 1, "id5", "size"], [18, 4, 1, "", "sort_values"], [18, 4, 1, "", "standardize_categories"], [18, 4, 1, "", "startswith"], [18, 4, 1, "", "to_hdf"], [18, 4, 1, "", "to_list"], [18, 4, 1, "", "to_ndarray"], [18, 4, 1, "", "to_pandas"], [18, 4, 1, "", "to_parquet"], [18, 4, 1, "", "to_strings"], [18, 4, 1, "", "transfer"], [18, 4, 1, "", "unique"], [18, 4, 1, "", "unregister"], [18, 4, 1, "", "unregister_categorical_by_name"], [18, 4, 1, "", "update_hdf"]], "arkouda.client": [[19, 5, 1, "", "connect"], [19, 5, 1, "", "disconnect"], [19, 5, 1, "", "generate_history"], [19, 5, 1, "", "get_config"], [19, 5, 1, "", "get_max_array_rank"], [19, 5, 1, "", "get_mem_avail"], [19, 5, 1, "", "get_mem_status"], [19, 5, 1, "", "get_mem_used"], [19, 5, 1, "", "get_server_commands"], [19, 5, 1, "", "print_server_commands"], [19, 5, 1, "", "ruok"], [19, 5, 1, "", "shutdown"]], "arkouda.client_dtypes": [[20, 2, 1, "", "BitVector"], [20, 5, 1, "", "BitVectorizer"], [20, 2, 1, "", "Fields"], [20, 2, 1, "", "IPv4"], [20, 5, 1, "", "ip_address"], [20, 5, 1, "", "is_ipv4"], [20, 5, 1, "", "is_ipv6"]], "arkouda.client_dtypes.BitVector": [[20, 3, 1, "", "conserves"], [20, 4, 1, "", "format"], [20, 4, 1, "", "from_return_msg"], [20, 4, 1, "", "opeq"], [20, 4, 1, "", "register"], [20, 3, 1, "", "registered_name"], [20, 3, 1, "", "reverse"], [20, 3, 1, "", "special_objType"], [20, 4, 1, "", "to_list"], [20, 4, 1, "", "to_ndarray"], [20, 3, 1, "", "values"], [20, 3, 1, "", "width"]], "arkouda.client_dtypes.Fields": [[20, 3, 1, "", "MSB_left"], [20, 4, 1, "", "format"], [20, 3, 1, "", "name"], [20, 3, 1, "", "names"], [20, 3, 1, "", "namewidth"], [20, 4, 1, "", "opeq"], [20, 3, 1, "", "pad"], [20, 3, 1, "", "padchar"], [20, 3, 1, "", "separator"], [20, 3, 1, "", "show_int"]], "arkouda.client_dtypes.IPv4": [[20, 4, 1, "", "export_uint"], [20, 4, 1, "", "format"], [20, 4, 1, "", "normalize"], [20, 4, 1, "", "opeq"], [20, 4, 1, "", "register"], [20, 3, 1, "", "special_objType"], [20, 4, 1, "", "to_hdf"], [20, 4, 1, "", "to_list"], [20, 4, 1, "", "to_ndarray"], [20, 4, 1, "", "update_hdf"], [20, 3, 1, "", "values"]], "arkouda.comm_diagnostics": [[21, 5, 1, "", "get_comm_diagnostics"], [21, 5, 1, "", "get_comm_diagnostics_amo"], [21, 5, 1, "", "get_comm_diagnostics_cache_get_hits"], [21, 5, 1, "", "get_comm_diagnostics_cache_get_misses"], [21, 5, 1, "", "get_comm_diagnostics_cache_num_page_readaheads"], [21, 5, 1, "", "get_comm_diagnostics_cache_num_prefetches"], [21, 5, 1, "", "get_comm_diagnostics_cache_prefetch_unused"], [21, 5, 1, "", "get_comm_diagnostics_cache_prefetch_waited"], [21, 5, 1, "", "get_comm_diagnostics_cache_put_hits"], [21, 5, 1, "", "get_comm_diagnostics_cache_put_misses"], [21, 5, 1, "", "get_comm_diagnostics_cache_readahead_unused"], [21, 5, 1, "", "get_comm_diagnostics_cache_readahead_waited"], [21, 5, 1, "", "get_comm_diagnostics_execute_on"], [21, 5, 1, "", "get_comm_diagnostics_execute_on_fast"], [21, 5, 1, "", "get_comm_diagnostics_execute_on_nb"], [21, 5, 1, "", "get_comm_diagnostics_get"], [21, 5, 1, "", "get_comm_diagnostics_get_nb"], [21, 5, 1, "", "get_comm_diagnostics_put"], [21, 5, 1, "", "get_comm_diagnostics_put_nb"], [21, 5, 1, "", "get_comm_diagnostics_try_nb"], [21, 5, 1, "", "get_comm_diagnostics_wait_nb"], [21, 5, 1, "", "print_comm_diagnostics_table"], [21, 5, 1, "", "reset_comm_diagnostics"], [21, 5, 1, "", "start_comm_diagnostics"], [21, 5, 1, "", "start_verbose_comm"], [21, 5, 1, "", "stop_comm_diagnostics"], [21, 5, 1, "", "stop_verbose_comm"]], "arkouda.dataframe": [[22, 2, 1, "", "DataFrame"], [22, 2, 1, "", "DataFrameGroupBy"], [22, 2, 1, "", "DiffAggregate"], [22, 5, 1, "", "intersect"], [22, 5, 1, "", "intx"], [22, 5, 1, "", "invert_permutation"], [22, 5, 1, "", "merge"]], "arkouda.dataframe.DataFrame": [[22, 4, 1, "", "GroupBy"], [22, 4, 1, "", "all"], [22, 4, 1, "", "any"], [22, 4, 1, "", "append"], [22, 4, 1, "", "apply_permutation"], [22, 4, 1, "", "argsort"], [22, 4, 1, "", "assign"], [22, 4, 1, "", "attach"], [22, 4, 1, "", "coargsort"], [22, 6, 1, "", "columns"], [22, 4, 1, "", "concat"], [22, 4, 1, "", "corr"], [22, 4, 1, "", "count"], [22, 4, 1, "", "drop"], [22, 4, 1, "", "drop_duplicates"], [22, 4, 1, "", "dropna"], [22, 6, 1, "", "dtypes"], [22, 6, 1, "", "empty"], [22, 4, 1, "", "filter_by_range"], [22, 4, 1, "", "from_pandas"], [22, 4, 1, "", "from_return_msg"], [22, 4, 1, "", "groupby"], [22, 4, 1, "", "head"], [22, 6, 1, "", "index"], [22, 6, 1, "", "info"], [22, 4, 1, "", "is_registered"], [22, 4, 1, "", "isin"], [22, 4, 1, "", "isna"], [22, 4, 1, "", "load"], [22, 4, 1, "", "memory_usage"], [22, 4, 1, "", "memory_usage_info"], [22, 4, 1, "", "merge"], [22, 4, 1, "", "notna"], [22, 4, 1, "", "objType"], [22, 4, 1, "", "read_csv"], [22, 4, 1, "", "register"], [22, 4, 1, "", "rename"], [22, 4, 1, "", "reset_index"], [22, 4, 1, "", "sample"], [22, 4, 1, "", "save"], [22, 6, 1, "", "shape"], [22, 6, 1, "", "size"], [22, 4, 1, "", "sort_index"], [22, 4, 1, "", "sort_values"], [22, 4, 1, "", "tail"], [22, 4, 1, "", "to_csv"], [22, 4, 1, "", "to_hdf"], [22, 4, 1, "", "to_markdown"], [22, 4, 1, "", "to_pandas"], [22, 4, 1, "", "to_parquet"], [22, 4, 1, "", "transfer"], [22, 4, 1, "", "unregister"], [22, 4, 1, "", "unregister_dataframe_by_name"], [22, 4, 1, "", "update_hdf"], [22, 4, 1, "", "update_nrows"]], "arkouda.dataframe.DataFrameGroupBy": [[22, 4, 1, "", "all"], [22, 4, 1, "", "any"], [22, 4, 1, "", "argmax"], [22, 4, 1, "", "argmin"], [22, 3, 1, "", "as_index"], [22, 4, 1, "", "broadcast"], [22, 4, 1, "", "count"], [22, 3, 1, "", "df"], [22, 4, 1, "", "diff"], [22, 4, 1, "", "first"], [22, 3, 1, "", "gb"], [22, 3, 1, "", "gb_key_names"], [22, 4, 1, "", "head"], [22, 4, 1, "", "max"], [22, 4, 1, "", "mean"], [22, 4, 1, "", "median"], [22, 4, 1, "", "min"], [22, 4, 1, "", "mode"], [22, 4, 1, "", "nunique"], [22, 4, 1, "", "prod"], [22, 4, 1, "", "sample"], [22, 4, 1, "", "size"], [22, 4, 1, "", "std"], [22, 4, 1, "", "sum"], [22, 4, 1, "", "tail"], [22, 4, 1, "", "unique"], [22, 4, 1, "", "var"], [22, 4, 1, "", "xor"]], "arkouda.dataframe.DiffAggregate": [[22, 4, 1, "", "all"], [22, 4, 1, "", "any"], [22, 4, 1, "", "argmax"], [22, 4, 1, "", "argmin"], [22, 4, 1, "", "count"], [22, 4, 1, "", "first"], [22, 3, 1, "", "gb"], [22, 4, 1, "", "max"], [22, 4, 1, "", "mean"], [22, 4, 1, "", "median"], [22, 4, 1, "", "min"], [22, 4, 1, "", "mode"], [22, 4, 1, "", "nunique"], [22, 4, 1, "", "prod"], [22, 4, 1, "", "std"], [22, 4, 1, "", "sum"], [22, 4, 1, "", "unique"], [22, 3, 1, "", "values"], [22, 4, 1, "", "var"], [22, 4, 1, "", "xor"]], "arkouda.dtypes": [[23, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [23, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [23, 2, 1, "", "DType"], [23, 1, 1, "", "DTypeObjects"], [23, 1, 1, "", "DTypes"], [23, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [23, 1, 1, "", "NumericDTypes"], [23, 1, 1, "", "ScalarDTypes"], [23, 1, 1, "", "SeriesDTypes"], [23, 1, 1, "", "all_scalars"], [23, 2, 1, "", "bigint"], [23, 1, 1, "", "bitType"], [23, 1, 1, "", "bool_scalars"], [23, 5, 1, "", "can_cast"], [23, 5, 1, "", "dtype"], [23, 1, 1, "", "float_scalars"], [23, 5, 1, "", "get_byteorder"], [23, 5, 1, "", "get_server_byteorder"], [23, 1, 1, "", "intTypes"], [23, 1, 1, "", "int_scalars"], [23, 5, 1, "", "isSupportedBool"], [23, 5, 1, "", "isSupportedDType"], [23, 5, 1, "", "isSupportedFloat"], [23, 5, 1, "", "isSupportedInt"], [23, 5, 1, "", "isSupportedNumber"], [23, 1, 1, "", "numeric_and_bool_scalars"], [23, 1, 1, "", "numeric_scalars"], [23, 1, 1, "", "numpy_scalars"], [23, 5, 1, "", "resolve_scalar_dtype"], [23, 1, 1, "", "str_scalars"]], "arkouda.dtypes.DType": [[23, 3, 1, "", "BIGINT"], [23, 3, 1, "", "BOOL"], [23, 3, 1, "", "COMPLEX128"], [23, 3, 1, "", "COMPLEX64"], [23, 3, 1, "", "FLOAT"], [23, 3, 1, "", "FLOAT32"], [23, 3, 1, "", "FLOAT64"], [23, 3, 1, "", "INT"], [23, 3, 1, "", "INT16"], [23, 3, 1, "", "INT32"], [23, 3, 1, "", "INT64"], [23, 3, 1, "", "INT8"], [23, 3, 1, "", "STR"], [23, 3, 1, "", "UINT"], [23, 3, 1, "", "UINT16"], [23, 3, 1, "", "UINT32"], [23, 3, 1, "", "UINT64"], [23, 3, 1, "", "UINT8"]], "arkouda.dtypes.bigint": [[23, 3, 1, "", "itemsize"], [23, 3, 1, "", "kind"], [23, 3, 1, "", "name"], [23, 3, 1, "", "ndim"], [23, 3, 1, "", "shape"], [23, 4, 1, "", "type"]], "arkouda.groupbyclass": [[24, 2, 1, "", "GROUPBY_REDUCTION_TYPES"], [24, 2, 1, "", "GroupBy"], [24, 5, 1, "", "broadcast"], [24, 5, 1, "", "unique"]], "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES": [[24, 4, 1, "", "copy"], [24, 4, 1, "", "difference"], [24, 4, 1, "", "intersection"], [24, 4, 1, "", "isdisjoint"], [24, 4, 1, "", "issubset"], [24, 4, 1, "", "issuperset"], [24, 4, 1, "", "symmetric_difference"], [24, 4, 1, "", "union"]], "arkouda.groupbyclass.GroupBy": [[24, 4, 1, "", "AND"], [24, 4, 1, "", "OR"], [24, 4, 1, "", "Reductions"], [24, 4, 1, "", "XOR"], [24, 4, 1, "", "aggregate"], [24, 4, 1, "", "all"], [24, 4, 1, "", "any"], [24, 4, 1, "", "argmax"], [24, 4, 1, "", "argmin"], [24, 4, 1, "", "attach"], [24, 4, 1, "", "broadcast"], [24, 4, 1, "", "build_from_components"], [24, 4, 1, "", "count"], [24, 3, 1, "", "dropna"], [24, 4, 1, "", "first"], [24, 4, 1, "", "from_return_msg"], [24, 4, 1, "", "head"], [24, 4, 1, "", "is_registered"], [24, 3, 1, "", "logger"], [24, 4, 1, "", "max"], [24, 4, 1, "", "mean"], [24, 4, 1, "", "median"], [24, 4, 1, "", "min"], [24, 4, 1, "", "mode"], [24, 4, 1, "", "most_common"], [24, 3, 1, "", "ngroups"], [24, 3, 1, "", "nkeys"], [24, 4, 1, "", "nunique"], [24, 4, 1, "", "objType"], [24, 3, 1, "", "permutation"], [24, 4, 1, "", "prod"], [24, 4, 1, "", "register"], [24, 4, 1, "", "sample"], [24, 3, 1, "", "segments"], [24, 4, 1, "id0", "size"], [24, 4, 1, "", "std"], [24, 4, 1, "", "sum"], [24, 4, 1, "", "tail"], [24, 4, 1, "", "to_hdf"], [24, 4, 1, "", "unique"], [24, 3, 1, "", "unique_keys"], [24, 4, 1, "", "unregister"], [24, 4, 1, "", "unregister_groupby_by_name"], [24, 4, 1, "", "update_hdf"], [24, 4, 1, "", "var"]], "arkouda.history": [[25, 2, 1, "", "HistoryRetriever"], [25, 2, 1, "", "NotebookHistoryRetriever"], [25, 2, 1, "", "ShellHistoryRetriever"]], "arkouda.history.HistoryRetriever": [[25, 4, 1, "", "retrieve"]], "arkouda.history.NotebookHistoryRetriever": [[25, 4, 1, "", "retrieve"]], "arkouda.history.ShellHistoryRetriever": [[25, 4, 1, "", "retrieve"]], "arkouda.index": [[27, 2, 1, "", "Index"], [27, 2, 1, "", "MultiIndex"]], "arkouda.index.Index": [[27, 4, 1, "", "argsort"], [27, 4, 1, "", "concat"], [27, 4, 1, "", "equals"], [27, 4, 1, "", "factory"], [27, 4, 1, "", "from_return_msg"], [27, 6, 1, "", "index"], [27, 6, 1, "", "inferred_type"], [27, 4, 1, "", "is_registered"], [27, 6, 1, "", "is_unique"], [27, 4, 1, "", "lookup"], [27, 4, 1, "", "map"], [27, 3, 1, "", "max_list_size"], [27, 4, 1, "", "memory_usage"], [27, 6, 1, "", "names"], [27, 6, 1, "", "ndim"], [27, 6, 1, "", "nlevels"], [27, 3, 1, "", "objType"], [27, 4, 1, "", "register"], [27, 3, 1, "", "registered_name"], [27, 4, 1, "", "save"], [27, 4, 1, "", "set_dtype"], [27, 6, 1, "", "shape"], [27, 4, 1, "", "to_csv"], [27, 4, 1, "", "to_dict"], [27, 4, 1, "", "to_hdf"], [27, 4, 1, "", "to_list"], [27, 4, 1, "", "to_ndarray"], [27, 4, 1, "", "to_pandas"], [27, 4, 1, "", "to_parquet"], [27, 4, 1, "", "unregister"], [27, 4, 1, "", "update_hdf"]], "arkouda.index.MultiIndex": [[27, 4, 1, "", "argsort"], [27, 4, 1, "", "concat"], [27, 6, 1, "", "dtype"], [27, 4, 1, "", "equal_levels"], [27, 4, 1, "", "get_level_values"], [27, 6, 1, "", "index"], [27, 6, 1, "", "inferred_type"], [27, 4, 1, "", "is_registered"], [27, 3, 1, "", "levels"], [27, 4, 1, "", "lookup"], [27, 4, 1, "", "memory_usage"], [27, 6, 1, "", "name"], [27, 6, 1, "", "names"], [27, 6, 1, "", "ndim"], [27, 6, 1, "", "nlevels"], [27, 3, 1, "", "objType"], [27, 4, 1, "", "register"], [27, 3, 1, "", "registered_name"], [27, 4, 1, "", "set_dtype"], [27, 4, 1, "", "to_dict"], [27, 4, 1, "", "to_hdf"], [27, 4, 1, "", "to_list"], [27, 4, 1, "", "to_ndarray"], [27, 4, 1, "", "to_pandas"], [27, 4, 1, "", "unregister"], [27, 4, 1, "", "update_hdf"]], "arkouda.infoclass": [[28, 1, 1, "", "AllSymbols"], [28, 1, 1, "", "RegisteredSymbols"], [28, 5, 1, "", "information"], [28, 5, 1, "", "list_registry"], [28, 5, 1, "", "list_symbol_table"], [28, 5, 1, "", "pretty_print_information"]], "arkouda.io": [[29, 5, 1, "", "export"], [29, 5, 1, "", "get_columns"], [29, 5, 1, "", "get_datasets"], [29, 5, 1, "", "get_filetype"], [29, 5, 1, "", "get_null_indices"], [29, 5, 1, "", "import_data"], [29, 5, 1, "", "load"], [29, 5, 1, "", "load_all"], [29, 5, 1, "", "load_checkpoint"], [29, 5, 1, "", "ls"], [29, 5, 1, "", "ls_csv"], [29, 5, 1, "", "read"], [29, 5, 1, "", "read_csv"], [29, 5, 1, "", "read_hdf"], [29, 5, 1, "", "read_parquet"], [29, 5, 1, "", "read_tagged_data"], [29, 5, 1, "", "read_zarr"], [29, 5, 1, "", "receive"], [29, 5, 1, "", "receive_dataframe"], [29, 5, 1, "", "restore"], [29, 5, 1, "", "save_all"], [29, 5, 1, "", "save_checkpoint"], [29, 5, 1, "", "snapshot"], [29, 5, 1, "", "to_csv"], [29, 5, 1, "", "to_hdf"], [29, 5, 1, "", "to_parquet"], [29, 5, 1, "", "to_zarr"], [29, 5, 1, "", "update_hdf"]], "arkouda.io_util": [[30, 5, 1, "", "delete_directory"], [30, 5, 1, "", "delimited_file_to_dict"], [30, 5, 1, "", "dict_to_delimited_file"], [30, 5, 1, "", "get_directory"], [30, 5, 1, "", "write_line_to_file"]], "arkouda.join": [[31, 5, 1, "", "compute_join_size"], [31, 5, 1, "", "gen_ranges"], [31, 5, 1, "", "join_on_eq_with_dt"]], "arkouda.logger": [[32, 2, 1, "", "LogLevel"], [32, 5, 1, "", "disableVerbose"], [32, 5, 1, "", "enableVerbose"], [32, 5, 1, "", "write_log"]], "arkouda.logger.LogLevel": [[32, 3, 1, "", "CRITICAL"], [32, 3, 1, "", "DEBUG"], [32, 3, 1, "", "ERROR"], [32, 3, 1, "", "INFO"], [32, 3, 1, "", "WARN"]], "arkouda.match": [[33, 2, 1, "", "Match"]], "arkouda.match.Match": [[125, 4, 1, "", "end"], [125, 4, 1, "", "find_matches"], [125, 4, 1, "", "group"], [125, 4, 1, "", "match_type"], [125, 4, 1, "", "matched"], [33, 3, 1, "", "re"], [125, 4, 1, "", "start"]], "arkouda.matcher": [[34, 2, 1, "", "Matcher"]], "arkouda.matcher.Matcher": [[34, 3, 1, "", "LocationsInfo"], [34, 4, 1, "", "find_locations"], [34, 4, 1, "", "findall"], [34, 3, 1, "", "full_match_bool"], [34, 3, 1, "", "full_match_ind"], [34, 4, 1, "", "get_match"], [34, 3, 1, "", "indices"], [34, 3, 1, "", "lengths"], [34, 3, 1, "", "logger"], [34, 3, 1, "", "match_bool"], [34, 3, 1, "", "match_ind"], [34, 3, 1, "", "num_matches"], [34, 3, 1, "", "objType"], [34, 3, 1, "", "parent_entry_name"], [34, 3, 1, "", "populated"], [34, 3, 1, "", "search_bool"], [34, 3, 1, "", "search_ind"], [34, 4, 1, "", "split"], [34, 3, 1, "", "starts"], [34, 4, 1, "", "sub"]], "arkouda.ndarray": [[26, 4, 1, "", "T"], [26, 4, 1, "", "all"], [26, 4, 1, "", "any"], [26, 4, 1, "", "argmax"], [26, 4, 1, "", "argmin"], [26, 4, 1, "", "argpartition"], [26, 4, 1, "", "argsort"], [26, 4, 1, "", "astype"], [26, 4, 1, "", "base"], [26, 4, 1, "", "byteswap"], [26, 4, 1, "", "choose"], [26, 4, 1, "", "clip"], [26, 4, 1, "", "compress"], [26, 4, 1, "", "conj"], [26, 4, 1, "", "conjugate"], [26, 4, 1, "", "copy"], [26, 4, 1, "", "ctypes"], [26, 4, 1, "", "cumprod"], [26, 4, 1, "", "cumsum"], [26, 4, 1, "", "data"], [26, 4, 1, "", "diagonal"], [26, 4, 1, "", "dot"], [26, 4, 1, "", "dtype"], [26, 4, 1, "", "dump"], [26, 4, 1, "", "dumps"], [26, 4, 1, "", "fill"], [26, 4, 1, "", "flags"], [26, 4, 1, "", "flat"], [26, 4, 1, "", "flatten"], [26, 4, 1, "", "getfield"], [26, 4, 1, "", "imag"], [26, 4, 1, "", "item"], [26, 4, 1, "", "itemset"], [26, 4, 1, "", "itemsize"], [26, 4, 1, "", "max"], [26, 4, 1, "", "mean"], [26, 4, 1, "", "min"], [26, 4, 1, "", "nbytes"], [26, 4, 1, "", "ndim"], [26, 4, 1, "", "newbyteorder"], [26, 4, 1, "", "nonzero"], [26, 4, 1, "", "partition"], [26, 4, 1, "", "prod"], [26, 4, 1, "", "ptp"], [26, 4, 1, "", "put"], [26, 4, 1, "", "ravel"], [26, 4, 1, "", "real"], [26, 4, 1, "", "repeat"], [26, 4, 1, "", "reshape"], [26, 4, 1, "", "resize"], [26, 4, 1, "", "round"], [26, 4, 1, "", "searchsorted"], [26, 4, 1, "", "setfield"], [26, 4, 1, "", "setflags"], [26, 4, 1, "", "shape"], [26, 4, 1, "", "size"], [26, 4, 1, "", "sort"], [26, 4, 1, "", "squeeze"], [26, 4, 1, "", "std"], [26, 4, 1, "", "strides"], [26, 4, 1, "", "sum"], [26, 4, 1, "", "swapaxes"], [26, 4, 1, "", "take"], [26, 4, 1, "", "tobytes"], [26, 4, 1, "", "tofile"], [26, 4, 1, "", "tolist"], [26, 4, 1, "", "tostring"], [26, 4, 1, "", "trace"], [26, 4, 1, "", "transpose"], [26, 4, 1, "", "var"], [26, 4, 1, "", "view"]], "arkouda.numpy": [[42, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [42, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [42, 2, 1, "", "Categorical"], [42, 2, 1, "", "DType"], [42, 1, 1, "", "DTypeObjects"], [42, 1, 1, "", "DTypes"], [42, 2, 1, "", "Datetime"], [42, 2, 1, "", "GroupBy"], [42, 2, 1, "", "Iterable"], [42, 1, 1, "", "LEN_SUFFIX"], [42, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [42, 1, 1, "", "NumericDTypes"], [42, 2, 1, "", "Optional"], [42, 7, 1, "id4", "RegistrationError"], [42, 1, 1, "", "SEG_SUFFIX"], [42, 1, 1, "", "ScalarDTypes"], [42, 2, 1, "", "SegArray"], [42, 1, 1, "", "SeriesDTypes"], [42, 1, 1, "", "SortingAlgorithm"], [42, 2, 1, "id153", "Strings"], [42, 2, 1, "", "Timedelta"], [42, 2, 1, "id230", "Tuple"], [42, 2, 1, "id231", "Union"], [42, 1, 1, "", "VAL_SUFFIX"], [42, 5, 1, "", "ak_array"], [42, 2, 1, "id232", "all_scalars"], [42, 5, 1, "id233", "arange"], [42, 5, 1, "", "argmaxk"], [42, 5, 1, "", "argmink"], [42, 5, 1, "", "argsort"], [42, 5, 1, "id234", "array"], [42, 5, 1, "", "attach"], [42, 5, 1, "", "attach_all"], [42, 5, 1, "", "attach_pdarray"], [42, 2, 1, "", "bigint"], [42, 5, 1, "", "bigint_from_uint_arrays"], [42, 1, 1, "", "bitType"], [42, 2, 1, "id235", "bool_scalars"], [42, 5, 1, "", "broadcast"], [42, 5, 1, "", "broadcast_dims"], [42, 5, 1, "", "broadcast_to_shape"], [42, 5, 1, "", "can_cast"], [42, 5, 1, "", "cast"], [36, 0, 0, "-", "char"], [42, 5, 1, "", "clear"], [42, 5, 1, "", "clz"], [42, 5, 1, "", "coargsort"], [42, 5, 1, "id236", "concatenate"], [42, 5, 1, "", "corr"], [42, 5, 1, "", "cov"], [42, 5, 1, "id238", "create_pdarray"], [37, 0, 0, "-", "ctypeslib"], [42, 5, 1, "", "ctz"], [42, 5, 1, "", "date_range"], [42, 5, 1, "", "delete"], [42, 5, 1, "", "divmod"], [42, 5, 1, "", "dot"], [42, 5, 1, "", "dtype"], [39, 0, 0, "-", "dtypes"], [40, 0, 0, "-", "exceptions"], [41, 0, 0, "-", "fft"], [42, 5, 1, "", "flip"], [42, 1, 1, "", "float_scalars"], [42, 5, 1, "", "fmod"], [42, 5, 1, "id239", "from_series"], [42, 5, 1, "", "full"], [42, 5, 1, "", "full_like"], [42, 5, 1, "", "generic_msg"], [42, 5, 1, "", "getArkoudaLogger"], [42, 5, 1, "", "get_byteorder"], [42, 5, 1, "", "get_server_byteorder"], [42, 5, 1, "", "in1d"], [42, 5, 1, "", "indexof1d"], [42, 1, 1, "id240", "intTypes"], [42, 1, 1, "id242", "int_scalars"], [42, 5, 1, "", "intersect1d"], [42, 5, 1, "", "isSupportedBool"], [42, 5, 1, "id243", "isSupportedDType"], [42, 5, 1, "", "isSupportedFloat"], [42, 5, 1, "id245", "isSupportedInt"], [42, 5, 1, "", "isSupportedNumber"], [42, 5, 1, "", "is_registered"], [44, 0, 0, "-", "lib"], [45, 0, 0, "-", "linalg"], [42, 5, 1, "", "linspace"], [46, 0, 0, "-", "ma"], [42, 5, 1, "", "maxk"], [42, 5, 1, "", "mean"], [42, 5, 1, "", "mink"], [42, 5, 1, "", "mod"], [42, 2, 1, "", "ndarray"], [42, 1, 1, "", "numeric_and_bool_scalars"], [42, 2, 1, "id268", "numeric_scalars"], [42, 1, 1, "", "numpy_scalars"], [42, 5, 1, "id269", "ones"], [42, 5, 1, "", "ones_like"], [42, 5, 1, "", "parity"], [42, 2, 1, "id471", "pdarray"], [47, 0, 0, "-", "pdarrayclass"], [48, 0, 0, "-", "pdarraycreation"], [49, 0, 0, "-", "pdarraymanipulation"], [50, 0, 0, "-", "pdarraysetops"], [51, 0, 0, "-", "polynomial"], [42, 5, 1, "", "popcount"], [42, 5, 1, "", "power"], [42, 5, 1, "", "promote_to_common_dtype"], [42, 5, 1, "", "randint"], [52, 0, 0, "-", "random"], [42, 5, 1, "", "random_strings_lognormal"], [42, 5, 1, "", "random_strings_uniform"], [53, 0, 0, "-", "rec"], [42, 5, 1, "", "register_all"], [42, 5, 1, "", "resolve_scalar_dtype"], [42, 5, 1, "", "rotl"], [42, 5, 1, "", "rotr"], [42, 5, 1, "", "scalar_array"], [54, 0, 0, "-", "segarray"], [42, 5, 1, "", "setdiff1d"], [42, 5, 1, "", "setxor1d"], [42, 5, 1, "", "shape"], [42, 5, 1, "", "sort"], [55, 0, 0, "-", "sorting"], [42, 5, 1, "", "sqrt"], [42, 5, 1, "", "squeeze"], [42, 5, 1, "", "standard_normal"], [42, 5, 1, "", "std"], [42, 1, 1, "", "str_scalars"], [56, 0, 0, "-", "strings"], [42, 5, 1, "", "tile"], [57, 0, 0, "-", "timeclass"], [42, 5, 1, "", "timedelta_range"], [42, 5, 1, "", "typechecked"], [42, 5, 1, "", "uniform"], [42, 5, 1, "", "union1d"], [42, 5, 1, "", "unregister"], [42, 5, 1, "", "unregister_all"], [42, 5, 1, "", "unregister_pdarray_by_name"], [58, 0, 0, "-", "util"], [42, 5, 1, "", "var"], [42, 5, 1, "", "vstack"], [42, 5, 1, "id540", "zeros"], [42, 5, 1, "", "zeros_like"]], "arkouda.numpy.Categorical": [[42, 4, 1, "", "BinOps"], [42, 4, 1, "", "RegisterablePieces"], [42, 4, 1, "", "RequiredPieces"], [42, 4, 1, "", "argsort"], [42, 4, 1, "", "attach"], [42, 3, 1, "", "categories"], [42, 3, 1, "", "codes"], [42, 4, 1, "", "concatenate"], [42, 4, 1, "", "contains"], [42, 4, 1, "", "dtype"], [42, 4, 1, "", "endswith"], [42, 4, 1, "", "equals"], [42, 4, 1, "", "from_codes"], [42, 4, 1, "", "from_return_msg"], [42, 4, 1, "", "group"], [42, 4, 1, "", "hash"], [42, 4, 1, "", "in1d"], [42, 6, 1, "", "inferred_type"], [42, 4, 1, "", "info"], [42, 4, 1, "", "is_registered"], [42, 4, 1, "", "isna"], [42, 6, 1, "", "nbytes"], [42, 3, 1, "", "ndim"], [42, 3, 1, "", "nlevels"], [42, 4, 1, "", "objType"], [42, 4, 1, "", "parse_hdf_categoricals"], [42, 4, 1, "id0", "permutation"], [42, 4, 1, "", "pretty_print_info"], [42, 4, 1, "", "register"], [42, 4, 1, "", "reset_categories"], [42, 4, 1, "", "save"], [42, 4, 1, "id1", "segments"], [42, 4, 1, "", "set_categories"], [42, 3, 1, "", "shape"], [42, 3, 1, "", "size"], [42, 4, 1, "", "sort_values"], [42, 4, 1, "", "standardize_categories"], [42, 4, 1, "", "startswith"], [42, 4, 1, "", "to_hdf"], [42, 4, 1, "", "to_list"], [42, 4, 1, "", "to_ndarray"], [42, 4, 1, "", "to_pandas"], [42, 4, 1, "", "to_parquet"], [42, 4, 1, "", "to_strings"], [42, 4, 1, "", "transfer"], [42, 4, 1, "", "unique"], [42, 4, 1, "", "unregister"], [42, 4, 1, "", "unregister_categorical_by_name"], [42, 4, 1, "", "update_hdf"]], "arkouda.numpy.DType": [[42, 3, 1, "", "BIGINT"], [42, 3, 1, "", "BOOL"], [42, 3, 1, "", "COMPLEX128"], [42, 3, 1, "", "COMPLEX64"], [42, 3, 1, "", "FLOAT"], [42, 3, 1, "", "FLOAT32"], [42, 3, 1, "", "FLOAT64"], [42, 3, 1, "", "INT"], [42, 3, 1, "", "INT16"], [42, 3, 1, "", "INT32"], [42, 3, 1, "", "INT64"], [42, 3, 1, "", "INT8"], [42, 3, 1, "", "STR"], [42, 3, 1, "", "UINT"], [42, 3, 1, "", "UINT16"], [42, 3, 1, "", "UINT32"], [42, 3, 1, "", "UINT64"], [42, 3, 1, "", "UINT8"]], "arkouda.numpy.Datetime": [[42, 6, 1, "", "date"], [42, 6, 1, "", "day"], [42, 6, 1, "", "day_of_week"], [42, 6, 1, "", "day_of_year"], [42, 6, 1, "", "dayofweek"], [42, 6, 1, "", "dayofyear"], [42, 6, 1, "", "hour"], [42, 6, 1, "", "is_leap_year"], [42, 4, 1, "", "is_registered"], [42, 4, 1, "", "isocalendar"], [42, 6, 1, "", "microsecond"], [42, 6, 1, "", "millisecond"], [42, 6, 1, "", "minute"], [42, 6, 1, "", "month"], [42, 6, 1, "", "nanosecond"], [42, 4, 1, "", "register"], [42, 6, 1, "", "second"], [42, 3, 1, "", "special_objType"], [42, 4, 1, "", "sum"], [42, 3, 1, "", "supported_opeq"], [42, 3, 1, "", "supported_with_datetime"], [42, 3, 1, "", "supported_with_pdarray"], [42, 3, 1, "", "supported_with_r_datetime"], [42, 3, 1, "", "supported_with_r_pdarray"], [42, 3, 1, "", "supported_with_r_timedelta"], [42, 3, 1, "", "supported_with_timedelta"], [42, 4, 1, "", "to_pandas"], [42, 4, 1, "", "unregister"], [42, 6, 1, "", "week"], [42, 6, 1, "", "weekday"], [42, 6, 1, "", "weekofyear"], [42, 6, 1, "", "year"]], "arkouda.numpy.GroupBy": [[42, 4, 1, "", "AND"], [42, 4, 1, "", "OR"], [42, 4, 1, "", "Reductions"], [42, 4, 1, "", "XOR"], [42, 4, 1, "", "aggregate"], [42, 4, 1, "", "all"], [42, 4, 1, "", "any"], [42, 4, 1, "", "argmax"], [42, 4, 1, "", "argmin"], [42, 4, 1, "", "attach"], [42, 4, 1, "", "broadcast"], [42, 4, 1, "", "build_from_components"], [42, 4, 1, "", "count"], [42, 3, 1, "", "dropna"], [42, 4, 1, "", "first"], [42, 4, 1, "", "from_return_msg"], [42, 4, 1, "", "head"], [42, 4, 1, "", "is_registered"], [42, 3, 1, "", "logger"], [42, 4, 1, "", "max"], [42, 4, 1, "", "mean"], [42, 4, 1, "", "median"], [42, 4, 1, "", "min"], [42, 4, 1, "", "mode"], [42, 4, 1, "", "most_common"], [42, 3, 1, "", "ngroups"], [42, 3, 1, "", "nkeys"], [42, 4, 1, "", "nunique"], [42, 4, 1, "", "objType"], [42, 3, 1, "", "permutation"], [42, 4, 1, "", "prod"], [42, 4, 1, "", "register"], [42, 4, 1, "", "sample"], [42, 3, 1, "", "segments"], [42, 4, 1, "id2", "size"], [42, 4, 1, "", "std"], [42, 4, 1, "", "sum"], [42, 4, 1, "", "tail"], [42, 4, 1, "", "to_hdf"], [42, 4, 1, "", "unique"], [42, 3, 1, "", "unique_keys"], [42, 4, 1, "", "unregister"], [42, 4, 1, "", "unregister_groupby_by_name"], [42, 4, 1, "", "update_hdf"], [42, 4, 1, "", "var"]], "arkouda.numpy.Iterable": [[42, 4, 1, "", "copy_with"]], "arkouda.numpy.SegArray": [[42, 4, 1, "", "AND"], [42, 4, 1, "", "OR"], [42, 4, 1, "", "XOR"], [42, 4, 1, "", "aggregate"], [42, 4, 1, "", "all"], [42, 4, 1, "", "any"], [42, 4, 1, "", "append"], [42, 4, 1, "", "append_single"], [42, 4, 1, "", "argmax"], [42, 4, 1, "", "argmin"], [42, 4, 1, "", "attach"], [42, 4, 1, "", "concat"], [42, 4, 1, "", "copy"], [42, 3, 1, "", "dtype"], [42, 4, 1, "", "filter"], [42, 4, 1, "", "from_multi_array"], [42, 4, 1, "", "from_parts"], [42, 4, 1, "", "from_return_msg"], [42, 4, 1, "", "get_jth"], [42, 4, 1, "", "get_length_n"], [42, 4, 1, "", "get_ngrams"], [42, 4, 1, "", "get_prefixes"], [42, 4, 1, "", "get_suffixes"], [42, 6, 1, "", "grouping"], [42, 4, 1, "", "hash"], [42, 4, 1, "", "intersect"], [42, 4, 1, "", "is_registered"], [42, 4, 1, "", "load"], [42, 3, 1, "", "logger"], [42, 4, 1, "", "max"], [42, 4, 1, "", "mean"], [42, 4, 1, "", "min"], [42, 6, 1, "", "nbytes"], [42, 6, 1, "", "non_empty"], [42, 4, 1, "", "nunique"], [42, 3, 1, "", "objType"], [42, 4, 1, "", "prepend_single"], [42, 4, 1, "", "prod"], [42, 4, 1, "", "read_hdf"], [42, 4, 1, "", "register"], [42, 3, 1, "", "registered_name"], [42, 4, 1, "", "remove_repeats"], [42, 4, 1, "", "save"], [42, 3, 1, "", "segments"], [42, 4, 1, "", "set_jth"], [42, 4, 1, "", "setdiff"], [42, 4, 1, "", "setxor"], [42, 3, 1, "", "size"], [42, 4, 1, "", "sum"], [42, 4, 1, "", "to_hdf"], [42, 4, 1, "", "to_list"], [42, 4, 1, "", "to_ndarray"], [42, 4, 1, "", "to_parquet"], [42, 4, 1, "", "transfer"], [42, 4, 1, "", "union"], [42, 4, 1, "", "unique"], [42, 4, 1, "", "unregister"], [42, 4, 1, "", "unregister_segarray_by_name"], [42, 4, 1, "", "update_hdf"], [42, 3, 1, "", "valsize"], [42, 3, 1, "", "values"]], "arkouda.numpy.Strings": [[42, 3, 1, "id161", "BinOps"], [42, 4, 1, "id162", "astype"], [42, 4, 1, "id163", "attach"], [42, 4, 1, "id164", "cached_regex_patterns"], [42, 4, 1, "id165", "capitalize"], [42, 4, 1, "id166", "contains"], [42, 4, 1, "id167", "decode"], [42, 3, 1, "id168", "dtype"], [42, 4, 1, "id169", "encode"], [42, 4, 1, "id170", "endswith"], [42, 3, 1, "id171", "entry"], [42, 4, 1, "id172", "equals"], [42, 4, 1, "id173", "find_locations"], [42, 4, 1, "id174", "findall"], [42, 4, 1, "id175", "flatten"], [42, 4, 1, "id176", "from_parts"], [42, 4, 1, "id177", "from_return_msg"], [42, 4, 1, "id178", "fullmatch"], [42, 4, 1, "id179", "get_bytes"], [42, 4, 1, "id180", "get_lengths"], [42, 4, 1, "id181", "get_offsets"], [42, 4, 1, "id182", "get_prefixes"], [42, 4, 1, "id183", "get_suffixes"], [42, 4, 1, "id184", "group"], [42, 4, 1, "id185", "hash"], [42, 6, 1, "id186", "inferred_type"], [42, 4, 1, "id187", "info"], [42, 4, 1, "id188", "is_registered"], [42, 4, 1, "id189", "isalnum"], [42, 4, 1, "id190", "isalpha"], [42, 4, 1, "id191", "isdecimal"], [42, 4, 1, "id192", "isdigit"], [42, 4, 1, "id193", "isempty"], [42, 4, 1, "id194", "islower"], [42, 4, 1, "id195", "isspace"], [42, 4, 1, "id196", "istitle"], [42, 4, 1, "id197", "isupper"], [42, 3, 1, "id198", "logger"], [42, 4, 1, "id199", "lower"], [42, 4, 1, "id200", "lstick"], [42, 4, 1, "id201", "match"], [42, 3, 1, "id156", "nbytes"], [42, 3, 1, "id157", "ndim"], [42, 3, 1, "id202", "objType"], [42, 4, 1, "id203", "peel"], [42, 4, 1, "id204", "pretty_print_info"], [42, 4, 1, "id205", "purge_cached_regex_patterns"], [42, 4, 1, "id206", "regex_split"], [42, 4, 1, "id207", "register"], [42, 3, 1, "id208", "registered_name"], [42, 4, 1, "id209", "rpeel"], [42, 4, 1, "id210", "save"], [42, 4, 1, "id211", "search"], [42, 3, 1, "id158", "shape"], [42, 3, 1, "id212", "size"], [42, 4, 1, "id213", "split"], [42, 4, 1, "id214", "startswith"], [42, 4, 1, "id215", "stick"], [42, 4, 1, "id216", "strip"], [42, 4, 1, "id217", "sub"], [42, 4, 1, "id218", "subn"], [42, 4, 1, "id219", "title"], [42, 4, 1, "id220", "to_csv"], [42, 4, 1, "id221", "to_hdf"], [42, 4, 1, "id222", "to_list"], [42, 4, 1, "id223", "to_ndarray"], [42, 4, 1, "id224", "to_parquet"], [42, 4, 1, "id225", "transfer"], [42, 4, 1, "id226", "unregister"], [42, 4, 1, "id227", "unregister_strings_by_name"], [42, 4, 1, "id228", "update_hdf"], [42, 4, 1, "id229", "upper"]], "arkouda.numpy.Timedelta": [[42, 4, 1, "", "abs"], [42, 6, 1, "", "components"], [42, 6, 1, "", "days"], [42, 4, 1, "", "is_registered"], [42, 6, 1, "", "microseconds"], [42, 6, 1, "", "nanoseconds"], [42, 4, 1, "", "register"], [42, 6, 1, "", "seconds"], [42, 3, 1, "", "special_objType"], [42, 4, 1, "", "std"], [42, 4, 1, "", "sum"], [42, 3, 1, "", "supported_opeq"], [42, 3, 1, "", "supported_with_datetime"], [42, 3, 1, "", "supported_with_pdarray"], [42, 3, 1, "", "supported_with_r_datetime"], [42, 3, 1, "", "supported_with_r_pdarray"], [42, 3, 1, "", "supported_with_r_timedelta"], [42, 3, 1, "", "supported_with_timedelta"], [42, 4, 1, "", "to_pandas"], [42, 4, 1, "", "total_seconds"], [42, 4, 1, "", "unregister"]], "arkouda.numpy.bigint": [[42, 3, 1, "", "itemsize"], [42, 3, 1, "", "kind"], [42, 3, 1, "", "name"], [42, 3, 1, "", "ndim"], [42, 3, 1, "", "shape"], [42, 4, 1, "", "type"]], "arkouda.numpy.dtypes": [[39, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [39, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [39, 2, 1, "", "DType"], [39, 1, 1, "", "DTypeObjects"], [39, 1, 1, "", "DTypes"], [39, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [39, 1, 1, "", "NumericDTypes"], [39, 1, 1, "", "ScalarDTypes"], [39, 1, 1, "", "SeriesDTypes"], [39, 1, 1, "", "all_scalars"], [39, 2, 1, "", "bigint"], [39, 1, 1, "", "bitType"], [39, 1, 1, "", "bool_scalars"], [39, 5, 1, "", "can_cast"], [39, 5, 1, "", "dtype"], [38, 0, 0, "-", "dtypes"], [39, 1, 1, "", "float_scalars"], [39, 5, 1, "", "get_byteorder"], [39, 5, 1, "", "get_server_byteorder"], [39, 1, 1, "", "intTypes"], [39, 1, 1, "", "int_scalars"], [39, 5, 1, "", "isSupportedBool"], [39, 5, 1, "", "isSupportedDType"], [39, 5, 1, "", "isSupportedFloat"], [39, 5, 1, "", "isSupportedInt"], [39, 5, 1, "", "isSupportedNumber"], [39, 1, 1, "id0", "numeric_and_bool_scalars"], [39, 1, 1, "", "numeric_scalars"], [39, 1, 1, "", "numpy_scalars"], [39, 5, 1, "id1", "resolve_scalar_dtype"], [39, 1, 1, "", "str_scalars"]], "arkouda.numpy.dtypes.DType": [[39, 3, 1, "", "BIGINT"], [39, 3, 1, "", "BOOL"], [39, 3, 1, "", "COMPLEX128"], [39, 3, 1, "", "COMPLEX64"], [39, 3, 1, "", "FLOAT"], [39, 3, 1, "", "FLOAT32"], [39, 3, 1, "", "FLOAT64"], [39, 3, 1, "", "INT"], [39, 3, 1, "", "INT16"], [39, 3, 1, "", "INT32"], [39, 3, 1, "", "INT64"], [39, 3, 1, "", "INT8"], [39, 3, 1, "", "STR"], [39, 3, 1, "", "UINT"], [39, 3, 1, "", "UINT16"], [39, 3, 1, "", "UINT32"], [39, 3, 1, "", "UINT64"], [39, 3, 1, "", "UINT8"]], "arkouda.numpy.dtypes.bigint": [[39, 3, 1, "", "itemsize"], [39, 3, 1, "", "kind"], [39, 3, 1, "", "name"], [39, 3, 1, "", "ndim"], [39, 3, 1, "", "shape"], [39, 4, 1, "", "type"]], "arkouda.numpy.dtypes.dtypes": [[38, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [38, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [38, 2, 1, "", "DType"], [38, 1, 1, "", "DTypeObjects"], [38, 1, 1, "", "DTypes"], [38, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [38, 1, 1, "", "NumericDTypes"], [38, 1, 1, "", "ScalarDTypes"], [38, 1, 1, "", "SeriesDTypes"], [38, 1, 1, "", "all_scalars"], [38, 2, 1, "", "bigint"], [38, 1, 1, "", "bitType"], [38, 1, 1, "", "bool_scalars"], [38, 5, 1, "", "can_cast"], [38, 5, 1, "", "dtype"], [38, 1, 1, "", "float_scalars"], [38, 5, 1, "", "get_byteorder"], [38, 5, 1, "", "get_server_byteorder"], [38, 1, 1, "", "intTypes"], [38, 1, 1, "", "int_scalars"], [38, 5, 1, "", "isSupportedBool"], [38, 5, 1, "", "isSupportedDType"], [38, 5, 1, "", "isSupportedFloat"], [38, 5, 1, "", "isSupportedInt"], [38, 5, 1, "", "isSupportedNumber"], [38, 1, 1, "", "numeric_and_bool_scalars"], [38, 1, 1, "", "numeric_scalars"], [38, 1, 1, "", "numpy_scalars"], [38, 5, 1, "", "resolve_scalar_dtype"], [38, 1, 1, "", "str_scalars"]], "arkouda.numpy.dtypes.dtypes.DType": [[38, 3, 1, "", "BIGINT"], [38, 3, 1, "", "BOOL"], [38, 3, 1, "", "COMPLEX128"], [38, 3, 1, "", "COMPLEX64"], [38, 3, 1, "", "FLOAT"], [38, 3, 1, "", "FLOAT32"], [38, 3, 1, "", "FLOAT64"], [38, 3, 1, "", "INT"], [38, 3, 1, "", "INT16"], [38, 3, 1, "", "INT32"], [38, 3, 1, "", "INT64"], [38, 3, 1, "", "INT8"], [38, 3, 1, "", "STR"], [38, 3, 1, "", "UINT"], [38, 3, 1, "", "UINT16"], [38, 3, 1, "", "UINT32"], [38, 3, 1, "", "UINT64"], [38, 3, 1, "", "UINT8"]], "arkouda.numpy.dtypes.dtypes.bigint": [[38, 3, 1, "", "itemsize"], [38, 3, 1, "", "kind"], [38, 3, 1, "", "name"], [38, 3, 1, "", "ndim"], [38, 3, 1, "", "shape"], [38, 4, 1, "", "type"]], "arkouda.numpy.lib": [[43, 0, 0, "-", "emath"]], "arkouda.numpy.ndarray": [[42, 4, 1, "", "T"], [42, 4, 1, "", "all"], [42, 4, 1, "", "any"], [42, 4, 1, "", "argmax"], [42, 4, 1, "", "argmin"], [42, 4, 1, "", "argpartition"], [42, 4, 1, "", "argsort"], [42, 4, 1, "", "astype"], [42, 4, 1, "", "base"], [42, 4, 1, "", "byteswap"], [42, 4, 1, "", "choose"], [42, 4, 1, "", "clip"], [42, 4, 1, "", "compress"], [42, 4, 1, "", "conj"], [42, 4, 1, "", "conjugate"], [42, 4, 1, "", "copy"], [42, 4, 1, "", "ctypes"], [42, 4, 1, "", "cumprod"], [42, 4, 1, "", "cumsum"], [42, 4, 1, "", "data"], [42, 4, 1, "", "diagonal"], [42, 4, 1, "", "dot"], [42, 4, 1, "", "dtype"], [42, 4, 1, "", "dump"], [42, 4, 1, "", "dumps"], [42, 4, 1, "", "fill"], [42, 4, 1, "", "flags"], [42, 4, 1, "", "flat"], [42, 4, 1, "", "flatten"], [42, 4, 1, "", "getfield"], [42, 4, 1, "", "imag"], [42, 4, 1, "", "item"], [42, 4, 1, "", "itemset"], [42, 4, 1, "", "itemsize"], [42, 4, 1, "", "max"], [42, 4, 1, "", "mean"], [42, 4, 1, "", "min"], [42, 4, 1, "", "nbytes"], [42, 4, 1, "", "ndim"], [42, 4, 1, "", "newbyteorder"], [42, 4, 1, "", "nonzero"], [42, 4, 1, "", "partition"], [42, 4, 1, "", "prod"], [42, 4, 1, "", "ptp"], [42, 4, 1, "", "put"], [42, 4, 1, "", "ravel"], [42, 4, 1, "", "real"], [42, 4, 1, "", "repeat"], [42, 4, 1, "", "reshape"], [42, 4, 1, "", "resize"], [42, 4, 1, "", "round"], [42, 4, 1, "", "searchsorted"], [42, 4, 1, "", "setfield"], [42, 4, 1, "", "setflags"], [42, 4, 1, "", "shape"], [42, 4, 1, "", "size"], [42, 4, 1, "", "sort"], [42, 4, 1, "", "squeeze"], [42, 4, 1, "", "std"], [42, 4, 1, "", "strides"], [42, 4, 1, "", "sum"], [42, 4, 1, "", "swapaxes"], [42, 4, 1, "", "take"], [42, 4, 1, "", "tobytes"], [42, 4, 1, "", "tofile"], [42, 4, 1, "", "tolist"], [42, 4, 1, "", "tostring"], [42, 4, 1, "", "trace"], [42, 4, 1, "", "transpose"], [42, 4, 1, "", "var"], [42, 4, 1, "", "view"]], "arkouda.numpy.pdarray": [[42, 3, 1, "id478", "BinOps"], [42, 3, 1, "id479", "OpEqOps"], [42, 4, 1, "id480", "all"], [42, 4, 1, "id481", "any"], [42, 4, 1, "id482", "argmax"], [42, 4, 1, "id483", "argmaxk"], [42, 4, 1, "id484", "argmin"], [42, 4, 1, "id485", "argmink"], [42, 4, 1, "id486", "astype"], [42, 4, 1, "id487", "attach"], [42, 4, 1, "id488", "bigint_to_uint_arrays"], [42, 4, 1, "id489", "clz"], [42, 4, 1, "id490", "corr"], [42, 4, 1, "id491", "cov"], [42, 4, 1, "id492", "ctz"], [42, 3, 1, "id493", "dtype"], [42, 4, 1, "id494", "equals"], [42, 4, 1, "id495", "fill"], [42, 4, 1, "id496", "flatten"], [42, 4, 1, "id497", "format_other"], [42, 6, 1, "id498", "inferred_type"], [42, 4, 1, "id499", "info"], [42, 4, 1, "id500", "is_registered"], [42, 4, 1, "id501", "is_sorted"], [42, 3, 1, "id502", "itemsize"], [42, 4, 1, "id503", "max"], [42, 6, 1, "id504", "max_bits"], [42, 4, 1, "id505", "maxk"], [42, 4, 1, "id506", "mean"], [42, 4, 1, "id507", "min"], [42, 4, 1, "id508", "mink"], [42, 3, 1, "id509", "name"], [42, 6, 1, "id510", "nbytes"], [42, 3, 1, "id511", "ndim"], [42, 3, 1, "id512", "objType"], [42, 4, 1, "id513", "opeq"], [42, 4, 1, "id514", "parity"], [42, 4, 1, "id515", "popcount"], [42, 4, 1, "id516", "pretty_print_info"], [42, 4, 1, "id517", "prod"], [42, 4, 1, "id518", "register"], [42, 3, 1, "id519", "registered_name"], [42, 4, 1, "id520", "reshape"], [42, 4, 1, "id521", "rotl"], [42, 4, 1, "id522", "rotr"], [42, 4, 1, "id523", "save"], [42, 6, 1, "id524", "shape"], [42, 3, 1, "id525", "size"], [42, 4, 1, "id526", "slice_bits"], [42, 4, 1, "id527", "std"], [42, 4, 1, "id528", "sum"], [42, 4, 1, "id529", "to_csv"], [42, 4, 1, "id530", "to_cuda"], [42, 4, 1, "id531", "to_hdf"], [42, 4, 1, "id532", "to_list"], [42, 4, 1, "id533", "to_ndarray"], [42, 4, 1, "id534", "to_parquet"], [42, 4, 1, "id535", "transfer"], [42, 4, 1, "id536", "unregister"], [42, 4, 1, "id537", "update_hdf"], [42, 4, 1, "id538", "value_counts"], [42, 4, 1, "id539", "var"]], "arkouda.numpy.pdarrayclass": [[47, 7, 1, "", "RegistrationError"], [47, 5, 1, "", "argmaxk"], [47, 5, 1, "", "argmink"], [47, 5, 1, "", "attach_pdarray"], [47, 5, 1, "", "broadcast_to_shape"], [47, 5, 1, "", "clear"], [47, 5, 1, "", "clz"], [47, 5, 1, "", "corr"], [47, 5, 1, "", "cov"], [47, 5, 1, "", "ctz"], [47, 5, 1, "", "divmod"], [47, 5, 1, "", "dot"], [47, 5, 1, "", "fmod"], [47, 5, 1, "", "maxk"], [47, 5, 1, "", "mean"], [47, 5, 1, "", "mink"], [47, 5, 1, "", "mod"], [47, 5, 1, "", "parity"], [47, 2, 1, "", "pdarray"], [47, 5, 1, "", "popcount"], [47, 5, 1, "", "power"], [47, 5, 1, "", "rotl"], [47, 5, 1, "", "rotr"], [47, 5, 1, "", "sqrt"], [47, 5, 1, "", "std"], [47, 5, 1, "", "unregister_pdarray_by_name"], [47, 5, 1, "", "var"]], "arkouda.numpy.pdarrayclass.pdarray": [[47, 3, 1, "", "BinOps"], [47, 3, 1, "", "OpEqOps"], [47, 4, 1, "", "all"], [47, 4, 1, "", "any"], [47, 4, 1, "", "argmax"], [47, 4, 1, "", "argmaxk"], [47, 4, 1, "", "argmin"], [47, 4, 1, "", "argmink"], [47, 4, 1, "", "astype"], [47, 4, 1, "", "attach"], [47, 4, 1, "", "bigint_to_uint_arrays"], [47, 4, 1, "", "clz"], [47, 4, 1, "", "corr"], [47, 4, 1, "", "cov"], [47, 4, 1, "", "ctz"], [47, 3, 1, "id0", "dtype"], [47, 4, 1, "", "equals"], [47, 4, 1, "", "fill"], [47, 4, 1, "", "flatten"], [47, 4, 1, "", "format_other"], [47, 6, 1, "", "inferred_type"], [47, 4, 1, "", "info"], [47, 4, 1, "", "is_registered"], [47, 4, 1, "", "is_sorted"], [47, 3, 1, "id1", "itemsize"], [47, 4, 1, "", "max"], [47, 6, 1, "", "max_bits"], [47, 4, 1, "", "maxk"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "min"], [47, 4, 1, "", "mink"], [47, 3, 1, "id2", "name"], [47, 6, 1, "", "nbytes"], [47, 3, 1, "id3", "ndim"], [47, 3, 1, "", "objType"], [47, 4, 1, "", "opeq"], [47, 4, 1, "", "parity"], [47, 4, 1, "", "popcount"], [47, 4, 1, "", "pretty_print_info"], [47, 4, 1, "", "prod"], [47, 4, 1, "", "register"], [47, 3, 1, "", "registered_name"], [47, 4, 1, "", "reshape"], [47, 4, 1, "", "rotl"], [47, 4, 1, "", "rotr"], [47, 4, 1, "", "save"], [47, 6, 1, "id4", "shape"], [47, 3, 1, "id5", "size"], [47, 4, 1, "", "slice_bits"], [47, 4, 1, "", "std"], [47, 4, 1, "", "sum"], [47, 4, 1, "", "to_csv"], [47, 4, 1, "", "to_cuda"], [47, 4, 1, "", "to_hdf"], [47, 4, 1, "", "to_list"], [47, 4, 1, "", "to_ndarray"], [47, 4, 1, "", "to_parquet"], [47, 4, 1, "", "transfer"], [47, 4, 1, "", "unregister"], [47, 4, 1, "", "update_hdf"], [47, 4, 1, "", "value_counts"], [47, 4, 1, "", "var"]], "arkouda.numpy.pdarraycreation": [[48, 5, 1, "", "arange"], [48, 5, 1, "", "array"], [48, 5, 1, "", "bigint_from_uint_arrays"], [48, 5, 1, "", "from_series"], [48, 5, 1, "", "full"], [48, 5, 1, "", "full_like"], [48, 5, 1, "", "linspace"], [48, 5, 1, "", "ones"], [48, 5, 1, "", "ones_like"], [48, 5, 1, "", "promote_to_common_dtype"], [48, 5, 1, "", "randint"], [48, 5, 1, "", "random_strings_lognormal"], [48, 5, 1, "", "random_strings_uniform"], [48, 5, 1, "", "scalar_array"], [48, 5, 1, "", "standard_normal"], [48, 5, 1, "", "uniform"], [48, 5, 1, "", "zeros"], [48, 5, 1, "", "zeros_like"]], "arkouda.numpy.pdarraymanipulation": [[49, 5, 1, "", "delete"], [49, 5, 1, "", "vstack"]], "arkouda.numpy.pdarraysetops": [[50, 5, 1, "", "concatenate"], [50, 5, 1, "", "in1d"], [50, 5, 1, "", "indexof1d"], [50, 5, 1, "", "intersect1d"], [50, 5, 1, "", "setdiff1d"], [50, 5, 1, "", "setxor1d"], [50, 5, 1, "", "union1d"]], "arkouda.numpy.random": [[52, 2, 1, "", "Generator"], [52, 5, 1, "", "randint"], [52, 5, 1, "", "standard_normal"], [52, 5, 1, "", "uniform"]], "arkouda.numpy.random.Generator": [[52, 4, 1, "", "choice"], [52, 4, 1, "", "exponential"], [52, 4, 1, "", "integers"], [52, 4, 1, "", "logistic"], [52, 4, 1, "", "lognormal"], [52, 4, 1, "", "normal"], [52, 4, 1, "", "permutation"], [52, 4, 1, "", "poisson"], [52, 4, 1, "", "random"], [52, 4, 1, "", "shuffle"], [52, 4, 1, "", "standard_exponential"], [52, 4, 1, "", "standard_gamma"], [52, 4, 1, "", "standard_normal"], [52, 4, 1, "", "uniform"]], "arkouda.numpy.segarray": [[54, 1, 1, "", "LEN_SUFFIX"], [54, 1, 1, "", "SEG_SUFFIX"], [54, 2, 1, "", "SegArray"], [54, 1, 1, "", "VAL_SUFFIX"], [54, 5, 1, "", "segarray"]], "arkouda.numpy.segarray.SegArray": [[54, 4, 1, "", "AND"], [54, 4, 1, "", "OR"], [54, 4, 1, "", "XOR"], [54, 4, 1, "", "aggregate"], [54, 4, 1, "", "all"], [54, 4, 1, "", "any"], [54, 4, 1, "", "append"], [54, 4, 1, "", "append_single"], [54, 4, 1, "", "argmax"], [54, 4, 1, "", "argmin"], [54, 4, 1, "", "attach"], [54, 4, 1, "", "concat"], [54, 4, 1, "", "copy"], [54, 3, 1, "", "dtype"], [54, 4, 1, "", "filter"], [54, 4, 1, "", "from_multi_array"], [54, 4, 1, "", "from_parts"], [54, 4, 1, "", "from_return_msg"], [54, 4, 1, "", "get_jth"], [54, 4, 1, "", "get_length_n"], [54, 4, 1, "", "get_ngrams"], [54, 4, 1, "", "get_prefixes"], [54, 4, 1, "", "get_suffixes"], [54, 6, 1, "", "grouping"], [54, 4, 1, "", "hash"], [54, 4, 1, "", "intersect"], [54, 4, 1, "", "is_registered"], [54, 4, 1, "", "load"], [54, 3, 1, "", "logger"], [54, 4, 1, "", "max"], [54, 4, 1, "", "mean"], [54, 4, 1, "", "min"], [54, 6, 1, "", "nbytes"], [54, 6, 1, "", "non_empty"], [54, 4, 1, "", "nunique"], [54, 3, 1, "", "objType"], [54, 4, 1, "", "prepend_single"], [54, 4, 1, "", "prod"], [54, 4, 1, "", "read_hdf"], [54, 4, 1, "", "register"], [54, 3, 1, "", "registered_name"], [54, 4, 1, "", "remove_repeats"], [54, 4, 1, "", "save"], [54, 3, 1, "", "segments"], [54, 4, 1, "", "set_jth"], [54, 4, 1, "", "setdiff"], [54, 4, 1, "", "setxor"], [54, 3, 1, "", "size"], [54, 4, 1, "", "sum"], [54, 4, 1, "", "to_hdf"], [54, 4, 1, "", "to_list"], [54, 4, 1, "", "to_ndarray"], [54, 4, 1, "", "to_parquet"], [54, 4, 1, "", "transfer"], [54, 4, 1, "", "union"], [54, 4, 1, "", "unique"], [54, 4, 1, "", "unregister"], [54, 4, 1, "", "unregister_segarray_by_name"], [54, 4, 1, "", "update_hdf"], [54, 3, 1, "", "valsize"], [54, 3, 1, "", "values"]], "arkouda.numpy.sorting": [[55, 1, 1, "", "SortingAlgorithm"], [55, 5, 1, "", "argsort"], [55, 5, 1, "", "coargsort"], [55, 5, 1, "", "sort"]], "arkouda.numpy.strings": [[56, 2, 1, "", "Strings"]], "arkouda.numpy.strings.Strings": [[56, 3, 1, "", "BinOps"], [56, 4, 1, "", "astype"], [56, 4, 1, "", "attach"], [56, 4, 1, "", "cached_regex_patterns"], [56, 4, 1, "", "capitalize"], [56, 4, 1, "", "contains"], [56, 4, 1, "", "decode"], [56, 3, 1, "id0", "dtype"], [56, 4, 1, "", "encode"], [56, 4, 1, "", "endswith"], [56, 3, 1, "id1", "entry"], [56, 4, 1, "", "equals"], [56, 4, 1, "", "find_locations"], [56, 4, 1, "", "findall"], [56, 4, 1, "", "flatten"], [56, 4, 1, "", "from_parts"], [56, 4, 1, "", "from_return_msg"], [56, 4, 1, "", "fullmatch"], [56, 4, 1, "", "get_bytes"], [56, 4, 1, "", "get_lengths"], [56, 4, 1, "", "get_offsets"], [56, 4, 1, "", "get_prefixes"], [56, 4, 1, "", "get_suffixes"], [56, 4, 1, "", "group"], [56, 4, 1, "", "hash"], [56, 6, 1, "", "inferred_type"], [56, 4, 1, "", "info"], [56, 4, 1, "", "is_registered"], [56, 4, 1, "", "isalnum"], [56, 4, 1, "", "isalpha"], [56, 4, 1, "", "isdecimal"], [56, 4, 1, "", "isdigit"], [56, 4, 1, "", "isempty"], [56, 4, 1, "", "islower"], [56, 4, 1, "", "isspace"], [56, 4, 1, "", "istitle"], [56, 4, 1, "", "isupper"], [56, 3, 1, "id2", "logger"], [56, 4, 1, "", "lower"], [56, 4, 1, "", "lstick"], [56, 4, 1, "", "match"], [56, 3, 1, "", "nbytes"], [56, 3, 1, "", "ndim"], [56, 3, 1, "", "objType"], [56, 4, 1, "", "peel"], [56, 4, 1, "", "pretty_print_info"], [56, 4, 1, "", "purge_cached_regex_patterns"], [56, 4, 1, "", "regex_split"], [56, 4, 1, "", "register"], [56, 3, 1, "", "registered_name"], [56, 4, 1, "", "rpeel"], [56, 4, 1, "", "save"], [56, 4, 1, "", "search"], [56, 3, 1, "", "shape"], [56, 3, 1, "id3", "size"], [56, 4, 1, "", "split"], [56, 4, 1, "", "startswith"], [56, 4, 1, "", "stick"], [56, 4, 1, "", "strip"], [56, 4, 1, "", "sub"], [56, 4, 1, "", "subn"], [56, 4, 1, "", "title"], [56, 4, 1, "", "to_csv"], [56, 4, 1, "", "to_hdf"], [56, 4, 1, "", "to_list"], [56, 4, 1, "", "to_ndarray"], [56, 4, 1, "", "to_parquet"], [56, 4, 1, "", "transfer"], [56, 4, 1, "", "unregister"], [56, 4, 1, "", "unregister_strings_by_name"], [56, 4, 1, "", "update_hdf"], [56, 4, 1, "", "upper"]], "arkouda.numpy.timeclass": [[57, 2, 1, "", "Datetime"], [57, 2, 1, "", "Timedelta"], [57, 5, 1, "", "date_range"], [57, 5, 1, "", "timedelta_range"]], "arkouda.numpy.timeclass.Datetime": [[57, 6, 1, "", "date"], [57, 6, 1, "", "day"], [57, 6, 1, "", "day_of_week"], [57, 6, 1, "", "day_of_year"], [57, 6, 1, "", "dayofweek"], [57, 6, 1, "", "dayofyear"], [57, 6, 1, "", "hour"], [57, 6, 1, "", "is_leap_year"], [57, 4, 1, "", "is_registered"], [57, 4, 1, "", "isocalendar"], [57, 6, 1, "", "microsecond"], [57, 6, 1, "", "millisecond"], [57, 6, 1, "", "minute"], [57, 6, 1, "", "month"], [57, 6, 1, "", "nanosecond"], [57, 4, 1, "", "register"], [57, 6, 1, "", "second"], [57, 3, 1, "", "special_objType"], [57, 4, 1, "", "sum"], [57, 3, 1, "", "supported_opeq"], [57, 3, 1, "", "supported_with_datetime"], [57, 3, 1, "", "supported_with_pdarray"], [57, 3, 1, "", "supported_with_r_datetime"], [57, 3, 1, "", "supported_with_r_pdarray"], [57, 3, 1, "", "supported_with_r_timedelta"], [57, 3, 1, "", "supported_with_timedelta"], [57, 4, 1, "", "to_pandas"], [57, 4, 1, "", "unregister"], [57, 6, 1, "", "week"], [57, 6, 1, "", "weekday"], [57, 6, 1, "", "weekofyear"], [57, 6, 1, "", "year"]], "arkouda.numpy.timeclass.Timedelta": [[57, 4, 1, "", "abs"], [57, 6, 1, "", "components"], [57, 6, 1, "", "days"], [57, 4, 1, "", "is_registered"], [57, 6, 1, "", "microseconds"], [57, 6, 1, "", "nanoseconds"], [57, 4, 1, "", "register"], [57, 6, 1, "", "seconds"], [57, 3, 1, "", "special_objType"], [57, 4, 1, "", "std"], [57, 4, 1, "", "sum"], [57, 3, 1, "", "supported_opeq"], [57, 3, 1, "", "supported_with_datetime"], [57, 3, 1, "", "supported_with_pdarray"], [57, 3, 1, "", "supported_with_r_datetime"], [57, 3, 1, "", "supported_with_r_pdarray"], [57, 3, 1, "", "supported_with_r_timedelta"], [57, 3, 1, "", "supported_with_timedelta"], [57, 4, 1, "", "to_pandas"], [57, 4, 1, "", "total_seconds"], [57, 4, 1, "", "unregister"]], "arkouda.numpy.util": [[58, 1, 1, "", "Index"], [58, 5, 1, "", "attach"], [58, 5, 1, "", "attach_all"], [58, 5, 1, "", "broadcast_dims"], [58, 5, 1, "", "concatenate"], [58, 5, 1, "", "convert_bytes"], [58, 5, 1, "", "convert_if_categorical"], [58, 5, 1, "", "enrich_inplace"], [58, 5, 1, "", "expand"], [58, 5, 1, "", "generic_concat"], [58, 5, 1, "", "get_callback"], [58, 5, 1, "", "identity"], [58, 5, 1, "", "invert_permutation"], [58, 5, 1, "", "is_float"], [58, 5, 1, "", "is_int"], [58, 5, 1, "", "is_numeric"], [58, 5, 1, "", "is_registered"], [58, 5, 1, "", "map"], [58, 5, 1, "", "most_common"], [58, 5, 1, "", "register"], [58, 5, 1, "", "register_all"], [58, 5, 1, "", "report_mem"], [58, 5, 1, "", "sparse_sum_help"], [58, 5, 1, "", "unregister"], [58, 5, 1, "", "unregister_all"]], "arkouda.pdarray": [[26, 3, 1, "id608", "BinOps"], [26, 3, 1, "id609", "OpEqOps"], [117, 4, 1, "", "all"], [117, 4, 1, "", "any"], [117, 4, 1, "", "argmax"], [117, 4, 1, "", "argmaxk"], [117, 4, 1, "", "argmin"], [117, 4, 1, "", "argmink"], [26, 4, 1, "id616", "astype"], [26, 4, 1, "id617", "attach"], [26, 4, 1, "id618", "bigint_to_uint_arrays"], [26, 4, 1, "id619", "clz"], [26, 4, 1, "id620", "corr"], [26, 4, 1, "id621", "cov"], [26, 4, 1, "id622", "ctz"], [119, 3, 1, "", "dtype"], [26, 4, 1, "id624", "equals"], [26, 4, 1, "id625", "fill"], [26, 4, 1, "id626", "flatten"], [26, 4, 1, "id627", "format_other"], [26, 6, 1, "id628", "inferred_type"], [26, 4, 1, "id629", "info"], [26, 4, 1, "id630", "is_registered"], [117, 4, 1, "", "is_sorted"], [119, 3, 1, "", "itemsize"], [117, 4, 1, "", "max"], [26, 6, 1, "id634", "max_bits"], [117, 4, 1, "", "maxk"], [117, 4, 1, "", "mean"], [117, 4, 1, "", "min"], [117, 4, 1, "", "mink"], [119, 3, 1, "", "name"], [26, 6, 1, "id640", "nbytes"], [119, 3, 1, "", "ndim"], [26, 3, 1, "id642", "objType"], [26, 4, 1, "id643", "opeq"], [26, 4, 1, "id644", "parity"], [26, 4, 1, "id645", "popcount"], [26, 4, 1, "id646", "pretty_print_info"], [117, 4, 1, "", "prod"], [26, 4, 1, "id648", "register"], [26, 3, 1, "id649", "registered_name"], [26, 4, 1, "id650", "reshape"], [26, 4, 1, "id651", "rotl"], [26, 4, 1, "id652", "rotr"], [26, 4, 1, "id653", "save"], [119, 3, 1, "", "shape"], [119, 3, 1, "", "size"], [26, 4, 1, "id656", "slice_bits"], [117, 4, 1, "", "std"], [117, 4, 1, "", "sum"], [26, 4, 1, "id659", "to_csv"], [26, 4, 1, "id660", "to_cuda"], [26, 4, 1, "id661", "to_hdf"], [26, 4, 1, "id662", "to_list"], [119, 5, 1, "", "to_ndarray"], [26, 4, 1, "id664", "to_parquet"], [26, 4, 1, "id665", "transfer"], [26, 4, 1, "id666", "unregister"], [26, 4, 1, "id667", "update_hdf"], [26, 4, 1, "id668", "value_counts"], [117, 4, 1, "", "var"]], "arkouda.pdarrayclass": [[59, 7, 1, "", "RegistrationError"], [59, 5, 1, "", "argmaxk"], [59, 5, 1, "", "argmink"], [59, 5, 1, "", "attach_pdarray"], [59, 5, 1, "", "broadcast_to_shape"], [59, 5, 1, "", "clear"], [59, 5, 1, "", "clz"], [59, 5, 1, "", "corr"], [59, 5, 1, "", "cov"], [59, 5, 1, "", "ctz"], [59, 5, 1, "", "divmod"], [59, 5, 1, "", "dot"], [59, 5, 1, "", "fmod"], [59, 5, 1, "", "maxk"], [59, 5, 1, "", "mean"], [59, 5, 1, "", "mink"], [59, 5, 1, "", "mod"], [59, 5, 1, "", "parity"], [59, 2, 1, "", "pdarray"], [59, 5, 1, "", "popcount"], [59, 5, 1, "", "power"], [59, 5, 1, "", "rotl"], [59, 5, 1, "", "rotr"], [59, 5, 1, "", "sqrt"], [59, 5, 1, "", "std"], [59, 5, 1, "", "unregister_pdarray_by_name"], [59, 5, 1, "", "var"]], "arkouda.pdarrayclass.pdarray": [[59, 3, 1, "", "BinOps"], [59, 3, 1, "", "OpEqOps"], [59, 4, 1, "", "all"], [59, 4, 1, "", "any"], [59, 4, 1, "", "argmax"], [59, 4, 1, "", "argmaxk"], [59, 4, 1, "", "argmin"], [59, 4, 1, "", "argmink"], [59, 4, 1, "", "astype"], [59, 4, 1, "", "attach"], [59, 4, 1, "", "bigint_to_uint_arrays"], [59, 4, 1, "", "clz"], [59, 4, 1, "", "corr"], [59, 4, 1, "", "cov"], [59, 4, 1, "", "ctz"], [59, 3, 1, "id0", "dtype"], [59, 4, 1, "", "equals"], [59, 4, 1, "", "fill"], [59, 4, 1, "", "flatten"], [59, 4, 1, "", "format_other"], [59, 6, 1, "", "inferred_type"], [59, 4, 1, "", "info"], [59, 4, 1, "", "is_registered"], [59, 4, 1, "", "is_sorted"], [59, 3, 1, "id1", "itemsize"], [59, 4, 1, "", "max"], [59, 6, 1, "", "max_bits"], [59, 4, 1, "", "maxk"], [59, 4, 1, "", "mean"], [59, 4, 1, "", "min"], [59, 4, 1, "", "mink"], [59, 3, 1, "id2", "name"], [59, 6, 1, "", "nbytes"], [59, 3, 1, "id3", "ndim"], [59, 3, 1, "", "objType"], [59, 4, 1, "", "opeq"], [59, 4, 1, "", "parity"], [59, 4, 1, "", "popcount"], [59, 4, 1, "", "pretty_print_info"], [59, 4, 1, "", "prod"], [59, 4, 1, "", "register"], [59, 3, 1, "", "registered_name"], [59, 4, 1, "", "reshape"], [59, 4, 1, "", "rotl"], [59, 4, 1, "", "rotr"], [59, 4, 1, "", "save"], [59, 6, 1, "id4", "shape"], [59, 3, 1, "id5", "size"], [59, 4, 1, "", "slice_bits"], [59, 4, 1, "", "std"], [59, 4, 1, "", "sum"], [59, 4, 1, "", "to_csv"], [59, 4, 1, "", "to_cuda"], [59, 4, 1, "", "to_hdf"], [59, 4, 1, "", "to_list"], [59, 4, 1, "", "to_ndarray"], [59, 4, 1, "", "to_parquet"], [59, 4, 1, "", "transfer"], [59, 4, 1, "", "unregister"], [59, 4, 1, "", "update_hdf"], [59, 4, 1, "", "value_counts"], [59, 4, 1, "", "var"]], "arkouda.pdarraycreation": [[60, 5, 1, "", "arange"], [60, 5, 1, "", "array"], [60, 5, 1, "", "bigint_from_uint_arrays"], [60, 5, 1, "", "from_series"], [60, 5, 1, "", "full"], [60, 5, 1, "", "full_like"], [60, 5, 1, "", "linspace"], [60, 5, 1, "", "ones"], [60, 5, 1, "", "ones_like"], [60, 5, 1, "", "promote_to_common_dtype"], [60, 5, 1, "", "randint"], [60, 5, 1, "", "random_strings_lognormal"], [60, 5, 1, "", "random_strings_uniform"], [60, 5, 1, "", "scalar_array"], [60, 5, 1, "", "standard_normal"], [60, 5, 1, "", "uniform"], [60, 5, 1, "", "zeros"], [60, 5, 1, "", "zeros_like"]], "arkouda.pdarraymanipulation": [[61, 5, 1, "", "delete"], [61, 5, 1, "", "vstack"]], "arkouda.pdarraysetops": [[62, 5, 1, "", "concatenate"], [62, 5, 1, "", "in1d"], [62, 5, 1, "", "indexof1d"], [62, 5, 1, "", "intersect1d"], [62, 5, 1, "", "setdiff1d"], [62, 5, 1, "", "setxor1d"], [62, 5, 1, "", "union1d"]], "arkouda.plotting": [[63, 5, 1, "", "hist_all"], [63, 5, 1, "", "plot_dist"]], "arkouda.random": [[120, 2, 1, "", "Generator"], [64, 5, 1, "", "randint"], [64, 5, 1, "", "standard_normal"], [64, 5, 1, "", "uniform"]], "arkouda.random.Generator": [[120, 5, 1, "", "choice"], [120, 5, 1, "", "exponential"], [120, 5, 1, "", "integers"], [120, 5, 1, "", "logistic"], [120, 5, 1, "", "lognormal"], [120, 5, 1, "", "normal"], [120, 5, 1, "", "permutation"], [120, 5, 1, "", "poisson"], [120, 5, 1, "", "random"], [120, 5, 1, "", "shuffle"], [120, 5, 1, "", "standard_exponential"], [64, 4, 1, "", "standard_gamma"], [120, 5, 1, "", "standard_normal"], [120, 5, 1, "", "uniform"]], "arkouda.row": [[65, 2, 1, "", "Row"]], "arkouda.scipy": [[67, 0, 0, "-", "sparrayclass"], [68, 0, 0, "-", "sparsematrix"], [69, 0, 0, "-", "special"], [70, 0, 0, "-", "stats"]], "arkouda.scipy.sparrayclass": [[67, 5, 1, "", "create_sparray"], [67, 2, 1, "", "sparray"]], "arkouda.scipy.sparrayclass.sparray": [[67, 3, 1, "id0", "dtype"], [67, 4, 1, "", "fill_vals"], [67, 3, 1, "id1", "itemsize"], [67, 3, 1, "id2", "layout"], [67, 3, 1, "id3", "name"], [67, 3, 1, "id4", "ndim"], [67, 3, 1, "id5", "nnz"], [67, 3, 1, "id6", "shape"], [67, 3, 1, "id7", "size"], [67, 4, 1, "", "to_pdarray"]], "arkouda.scipy.sparsematrix": [[68, 5, 1, "", "create_sparse_matrix"], [68, 5, 1, "", "random_sparse_matrix"], [68, 5, 1, "", "sparse_matrix_matrix_mult"]], "arkouda.scipy.special": [[69, 5, 1, "", "xlogy"]], "arkouda.scipy.stats": [[70, 2, 1, "", "chi2"]], "arkouda.scipy.stats.chi2": [[70, 4, 1, "", "a"], [70, 4, 1, "", "b"], [70, 4, 1, "", "badvalue"], [70, 4, 1, "", "generic_moment"], [70, 4, 1, "", "moment_type"], [70, 4, 1, "", "name"], [70, 4, 1, "", "numargs"], [70, 4, 1, "", "shapes"], [70, 4, 1, "", "vecentropy"], [70, 4, 1, "", "xtol"]], "arkouda.security": [[71, 5, 1, "", "generate_token"], [71, 5, 1, "", "generate_username_token_json"], [71, 5, 1, "", "get_arkouda_client_directory"], [71, 5, 1, "", "get_home_directory"], [71, 5, 1, "", "get_username"], [71, 1, 1, "", "username_tokenizer"]], "arkouda.segarray": [[72, 2, 1, "", "GroupBy"], [72, 1, 1, "", "LEN_SUFFIX"], [72, 7, 1, "", "RegistrationError"], [72, 1, 1, "", "SEG_SUFFIX"], [72, 2, 1, "", "SegArray"], [72, 2, 1, "", "Strings"], [72, 1, 1, "", "VAL_SUFFIX"], [72, 5, 1, "", "arange"], [72, 5, 1, "", "array"], [72, 5, 1, "", "broadcast"], [72, 5, 1, "", "concatenate"], [72, 5, 1, "", "create_pdarray"], [72, 5, 1, "", "getArkoudaLogger"], [72, 1, 1, "", "int_scalars"], [72, 5, 1, "", "isSupportedInt"], [72, 5, 1, "", "ones"], [72, 2, 1, "", "pdarray"], [72, 5, 1, "", "segarray"], [72, 5, 1, "", "zeros"]], "arkouda.segarray.GroupBy": [[72, 4, 1, "", "AND"], [72, 4, 1, "", "OR"], [72, 4, 1, "", "Reductions"], [72, 4, 1, "", "XOR"], [72, 4, 1, "", "aggregate"], [72, 4, 1, "", "all"], [72, 4, 1, "", "any"], [72, 4, 1, "", "argmax"], [72, 4, 1, "", "argmin"], [72, 4, 1, "", "attach"], [72, 4, 1, "", "broadcast"], [72, 4, 1, "", "build_from_components"], [72, 4, 1, "", "count"], [72, 3, 1, "", "dropna"], [72, 4, 1, "", "first"], [72, 4, 1, "", "from_return_msg"], [72, 4, 1, "", "head"], [72, 4, 1, "", "is_registered"], [72, 3, 1, "", "logger"], [72, 4, 1, "", "max"], [72, 4, 1, "", "mean"], [72, 4, 1, "", "median"], [72, 4, 1, "", "min"], [72, 4, 1, "", "mode"], [72, 4, 1, "", "most_common"], [72, 3, 1, "", "ngroups"], [72, 3, 1, "", "nkeys"], [72, 4, 1, "", "nunique"], [72, 4, 1, "", "objType"], [72, 3, 1, "", "permutation"], [72, 4, 1, "", "prod"], [72, 4, 1, "", "register"], [72, 4, 1, "", "sample"], [72, 3, 1, "", "segments"], [72, 4, 1, "id0", "size"], [72, 4, 1, "", "std"], [72, 4, 1, "", "sum"], [72, 4, 1, "", "tail"], [72, 4, 1, "", "to_hdf"], [72, 4, 1, "", "unique"], [72, 3, 1, "", "unique_keys"], [72, 4, 1, "", "unregister"], [72, 4, 1, "", "unregister_groupby_by_name"], [72, 4, 1, "", "update_hdf"], [72, 4, 1, "", "var"]], "arkouda.segarray.SegArray": [[72, 4, 1, "", "AND"], [72, 4, 1, "", "OR"], [72, 4, 1, "", "XOR"], [72, 4, 1, "", "aggregate"], [72, 4, 1, "", "all"], [72, 4, 1, "", "any"], [72, 4, 1, "", "append"], [72, 4, 1, "", "append_single"], [72, 4, 1, "", "argmax"], [72, 4, 1, "", "argmin"], [72, 4, 1, "", "attach"], [72, 4, 1, "", "concat"], [72, 4, 1, "", "copy"], [72, 3, 1, "", "dtype"], [72, 4, 1, "", "filter"], [72, 4, 1, "", "from_multi_array"], [72, 4, 1, "", "from_parts"], [72, 4, 1, "", "from_return_msg"], [72, 4, 1, "", "get_jth"], [72, 4, 1, "", "get_length_n"], [72, 4, 1, "", "get_ngrams"], [72, 4, 1, "", "get_prefixes"], [72, 4, 1, "", "get_suffixes"], [72, 6, 1, "", "grouping"], [72, 4, 1, "", "hash"], [72, 4, 1, "", "intersect"], [72, 4, 1, "", "is_registered"], [72, 4, 1, "", "load"], [72, 3, 1, "", "logger"], [72, 4, 1, "", "max"], [72, 4, 1, "", "mean"], [72, 4, 1, "", "min"], [72, 6, 1, "", "nbytes"], [72, 6, 1, "", "non_empty"], [72, 4, 1, "", "nunique"], [72, 3, 1, "", "objType"], [72, 4, 1, "", "prepend_single"], [72, 4, 1, "", "prod"], [72, 4, 1, "", "read_hdf"], [72, 4, 1, "", "register"], [72, 3, 1, "", "registered_name"], [72, 4, 1, "", "remove_repeats"], [72, 4, 1, "", "save"], [72, 3, 1, "", "segments"], [72, 4, 1, "", "set_jth"], [72, 4, 1, "", "setdiff"], [72, 4, 1, "", "setxor"], [72, 3, 1, "", "size"], [72, 4, 1, "", "sum"], [72, 4, 1, "", "to_hdf"], [72, 4, 1, "", "to_list"], [72, 4, 1, "", "to_ndarray"], [72, 4, 1, "", "to_parquet"], [72, 4, 1, "", "transfer"], [72, 4, 1, "", "union"], [72, 4, 1, "", "unique"], [72, 4, 1, "", "unregister"], [72, 4, 1, "", "unregister_segarray_by_name"], [72, 4, 1, "", "update_hdf"], [72, 3, 1, "", "valsize"], [72, 3, 1, "", "values"]], "arkouda.segarray.Strings": [[72, 3, 1, "", "BinOps"], [72, 4, 1, "", "astype"], [72, 4, 1, "", "attach"], [72, 4, 1, "", "cached_regex_patterns"], [72, 4, 1, "", "capitalize"], [72, 4, 1, "", "contains"], [72, 4, 1, "", "decode"], [72, 3, 1, "id1", "dtype"], [72, 4, 1, "", "encode"], [72, 4, 1, "", "endswith"], [72, 3, 1, "id2", "entry"], [72, 4, 1, "", "equals"], [72, 4, 1, "", "find_locations"], [72, 4, 1, "", "findall"], [72, 4, 1, "", "flatten"], [72, 4, 1, "", "from_parts"], [72, 4, 1, "", "from_return_msg"], [72, 4, 1, "", "fullmatch"], [72, 4, 1, "", "get_bytes"], [72, 4, 1, "", "get_lengths"], [72, 4, 1, "", "get_offsets"], [72, 4, 1, "", "get_prefixes"], [72, 4, 1, "", "get_suffixes"], [72, 4, 1, "", "group"], [72, 4, 1, "", "hash"], [72, 6, 1, "", "inferred_type"], [72, 4, 1, "", "info"], [72, 4, 1, "", "is_registered"], [72, 4, 1, "", "isalnum"], [72, 4, 1, "", "isalpha"], [72, 4, 1, "", "isdecimal"], [72, 4, 1, "", "isdigit"], [72, 4, 1, "", "isempty"], [72, 4, 1, "", "islower"], [72, 4, 1, "", "isspace"], [72, 4, 1, "", "istitle"], [72, 4, 1, "", "isupper"], [72, 3, 1, "id3", "logger"], [72, 4, 1, "", "lower"], [72, 4, 1, "", "lstick"], [72, 4, 1, "", "match"], [72, 3, 1, "", "nbytes"], [72, 3, 1, "", "ndim"], [72, 3, 1, "", "objType"], [72, 4, 1, "", "peel"], [72, 4, 1, "", "pretty_print_info"], [72, 4, 1, "", "purge_cached_regex_patterns"], [72, 4, 1, "", "regex_split"], [72, 4, 1, "", "register"], [72, 3, 1, "", "registered_name"], [72, 4, 1, "", "rpeel"], [72, 4, 1, "", "save"], [72, 4, 1, "", "search"], [72, 3, 1, "", "shape"], [72, 3, 1, "id4", "size"], [72, 4, 1, "", "split"], [72, 4, 1, "", "startswith"], [72, 4, 1, "", "stick"], [72, 4, 1, "", "strip"], [72, 4, 1, "", "sub"], [72, 4, 1, "", "subn"], [72, 4, 1, "", "title"], [72, 4, 1, "", "to_csv"], [72, 4, 1, "", "to_hdf"], [72, 4, 1, "", "to_list"], [72, 4, 1, "", "to_ndarray"], [72, 4, 1, "", "to_parquet"], [72, 4, 1, "", "transfer"], [72, 4, 1, "", "unregister"], [72, 4, 1, "", "unregister_strings_by_name"], [72, 4, 1, "", "update_hdf"], [72, 4, 1, "", "upper"]], "arkouda.segarray.pdarray": [[72, 3, 1, "", "BinOps"], [72, 3, 1, "", "OpEqOps"], [72, 4, 1, "", "all"], [72, 4, 1, "", "any"], [72, 4, 1, "", "argmax"], [72, 4, 1, "", "argmaxk"], [72, 4, 1, "", "argmin"], [72, 4, 1, "", "argmink"], [72, 4, 1, "", "astype"], [72, 4, 1, "", "attach"], [72, 4, 1, "", "bigint_to_uint_arrays"], [72, 4, 1, "", "clz"], [72, 4, 1, "", "corr"], [72, 4, 1, "", "cov"], [72, 4, 1, "", "ctz"], [72, 3, 1, "id5", "dtype"], [72, 4, 1, "", "equals"], [72, 4, 1, "", "fill"], [72, 4, 1, "", "flatten"], [72, 4, 1, "", "format_other"], [72, 6, 1, "", "inferred_type"], [72, 4, 1, "", "info"], [72, 4, 1, "", "is_registered"], [72, 4, 1, "", "is_sorted"], [72, 3, 1, "id6", "itemsize"], [72, 4, 1, "", "max"], [72, 6, 1, "", "max_bits"], [72, 4, 1, "", "maxk"], [72, 4, 1, "", "mean"], [72, 4, 1, "", "min"], [72, 4, 1, "", "mink"], [72, 3, 1, "id7", "name"], [72, 6, 1, "", "nbytes"], [72, 3, 1, "id8", "ndim"], [72, 3, 1, "", "objType"], [72, 4, 1, "", "opeq"], [72, 4, 1, "", "parity"], [72, 4, 1, "", "popcount"], [72, 4, 1, "", "pretty_print_info"], [72, 4, 1, "", "prod"], [72, 4, 1, "", "register"], [72, 3, 1, "", "registered_name"], [72, 4, 1, "", "reshape"], [72, 4, 1, "", "rotl"], [72, 4, 1, "", "rotr"], [72, 4, 1, "", "save"], [72, 6, 1, "id9", "shape"], [72, 3, 1, "id10", "size"], [72, 4, 1, "", "slice_bits"], [72, 4, 1, "", "std"], [72, 4, 1, "", "sum"], [72, 4, 1, "", "to_csv"], [72, 4, 1, "", "to_cuda"], [72, 4, 1, "", "to_hdf"], [72, 4, 1, "", "to_list"], [72, 4, 1, "", "to_ndarray"], [72, 4, 1, "", "to_parquet"], [72, 4, 1, "", "transfer"], [72, 4, 1, "", "unregister"], [72, 4, 1, "", "update_hdf"], [72, 4, 1, "", "value_counts"], [72, 4, 1, "", "var"]], "arkouda.series": [[73, 2, 1, "", "Series"]], "arkouda.series.Series": [[73, 4, 1, "", "add"], [73, 4, 1, "", "argmax"], [73, 4, 1, "", "argmin"], [73, 6, 1, "", "at"], [73, 4, 1, "", "attach"], [73, 4, 1, "", "concat"], [73, 4, 1, "", "diff"], [73, 4, 1, "", "dt"], [73, 6, 1, "", "dtype"], [73, 4, 1, "", "fillna"], [73, 4, 1, "", "from_return_msg"], [73, 4, 1, "", "has_repeat_labels"], [73, 4, 1, "", "hasnans"], [73, 4, 1, "", "head"], [73, 6, 1, "", "iat"], [73, 6, 1, "", "iloc"], [73, 4, 1, "", "is_registered"], [73, 4, 1, "", "isin"], [73, 4, 1, "", "isna"], [73, 4, 1, "", "isnull"], [73, 6, 1, "", "loc"], [73, 4, 1, "", "locate"], [73, 4, 1, "", "map"], [73, 4, 1, "", "max"], [73, 4, 1, "", "mean"], [73, 4, 1, "", "memory_usage"], [73, 4, 1, "", "min"], [73, 6, 1, "", "ndim"], [73, 4, 1, "", "notna"], [73, 4, 1, "", "notnull"], [73, 4, 1, "", "objType"], [73, 4, 1, "", "pdconcat"], [73, 4, 1, "", "prod"], [73, 4, 1, "", "register"], [73, 6, 1, "", "shape"], [73, 4, 1, "", "sort_index"], [73, 4, 1, "", "sort_values"], [73, 4, 1, "", "std"], [73, 4, 1, "", "str_acc"], [73, 4, 1, "", "sum"], [73, 4, 1, "", "tail"], [73, 4, 1, "", "to_dataframe"], [73, 4, 1, "", "to_list"], [73, 4, 1, "", "to_markdown"], [73, 4, 1, "", "to_ndarray"], [73, 4, 1, "", "to_pandas"], [73, 4, 1, "", "topn"], [73, 4, 1, "", "unregister"], [73, 4, 1, "", "validate_key"], [73, 4, 1, "", "validate_val"], [73, 4, 1, "", "value_counts"], [73, 4, 1, "", "var"]], "arkouda.sorting": [[74, 1, 1, "", "SortingAlgorithm"], [74, 5, 1, "", "argsort"], [74, 5, 1, "", "coargsort"], [74, 5, 1, "", "sort"]], "arkouda.sparrayclass": [[75, 5, 1, "", "create_sparray"], [75, 2, 1, "", "sparray"]], "arkouda.sparrayclass.sparray": [[75, 3, 1, "id0", "dtype"], [75, 4, 1, "", "fill_vals"], [75, 3, 1, "id1", "itemsize"], [75, 3, 1, "id2", "layout"], [75, 3, 1, "id3", "name"], [75, 3, 1, "id4", "ndim"], [75, 3, 1, "id5", "nnz"], [75, 3, 1, "id6", "shape"], [75, 3, 1, "id7", "size"], [75, 4, 1, "", "to_pdarray"]], "arkouda.sparsematrix": [[76, 5, 1, "", "create_sparse_matrix"], [76, 5, 1, "", "random_sparse_matrix"], [76, 5, 1, "", "sparse_matrix_matrix_mult"]], "arkouda.strings": [[77, 2, 1, "", "Strings"]], "arkouda.strings.Strings": [[77, 3, 1, "", "BinOps"], [77, 4, 1, "", "astype"], [77, 4, 1, "", "attach"], [77, 4, 1, "", "cached_regex_patterns"], [77, 4, 1, "", "capitalize"], [77, 4, 1, "", "contains"], [77, 4, 1, "", "decode"], [77, 3, 1, "id0", "dtype"], [77, 4, 1, "", "encode"], [77, 4, 1, "", "endswith"], [77, 3, 1, "id1", "entry"], [77, 4, 1, "", "equals"], [77, 4, 1, "", "find_locations"], [77, 4, 1, "", "findall"], [77, 4, 1, "", "flatten"], [77, 4, 1, "", "from_parts"], [77, 4, 1, "", "from_return_msg"], [77, 4, 1, "", "fullmatch"], [77, 4, 1, "", "get_bytes"], [77, 4, 1, "", "get_lengths"], [77, 4, 1, "", "get_offsets"], [77, 4, 1, "", "get_prefixes"], [77, 4, 1, "", "get_suffixes"], [77, 4, 1, "", "group"], [77, 4, 1, "", "hash"], [77, 6, 1, "", "inferred_type"], [77, 4, 1, "", "info"], [77, 4, 1, "", "is_registered"], [77, 4, 1, "", "isalnum"], [77, 4, 1, "", "isalpha"], [77, 4, 1, "", "isdecimal"], [77, 4, 1, "", "isdigit"], [77, 4, 1, "", "isempty"], [77, 4, 1, "", "islower"], [77, 4, 1, "", "isspace"], [77, 4, 1, "", "istitle"], [77, 4, 1, "", "isupper"], [77, 3, 1, "id2", "logger"], [77, 4, 1, "", "lower"], [77, 4, 1, "", "lstick"], [77, 4, 1, "", "match"], [77, 3, 1, "", "nbytes"], [77, 3, 1, "", "ndim"], [77, 3, 1, "", "objType"], [77, 4, 1, "", "peel"], [77, 4, 1, "", "pretty_print_info"], [77, 4, 1, "", "purge_cached_regex_patterns"], [77, 4, 1, "", "regex_split"], [77, 4, 1, "", "register"], [77, 3, 1, "", "registered_name"], [77, 4, 1, "", "rpeel"], [77, 4, 1, "", "save"], [77, 4, 1, "", "search"], [77, 3, 1, "", "shape"], [77, 3, 1, "id3", "size"], [77, 4, 1, "", "split"], [77, 4, 1, "", "startswith"], [77, 4, 1, "", "stick"], [77, 4, 1, "", "strip"], [77, 4, 1, "", "sub"], [77, 4, 1, "", "subn"], [77, 4, 1, "", "title"], [77, 4, 1, "", "to_csv"], [77, 4, 1, "", "to_hdf"], [77, 4, 1, "", "to_list"], [77, 4, 1, "", "to_ndarray"], [77, 4, 1, "", "to_parquet"], [77, 4, 1, "", "transfer"], [77, 4, 1, "", "unregister"], [77, 4, 1, "", "unregister_strings_by_name"], [77, 4, 1, "", "update_hdf"], [77, 4, 1, "", "upper"]], "arkouda.testing": [[78, 5, 1, "", "assert_almost_equal"], [78, 5, 1, "", "assert_almost_equivalent"], [78, 5, 1, "", "assert_arkouda_array_equal"], [78, 5, 1, "", "assert_arkouda_array_equivalent"], [78, 5, 1, "", "assert_arkouda_pdarray_equal"], [78, 5, 1, "", "assert_arkouda_segarray_equal"], [78, 5, 1, "", "assert_arkouda_strings_equal"], [78, 5, 1, "", "assert_attr_equal"], [78, 5, 1, "", "assert_categorical_equal"], [78, 5, 1, "", "assert_class_equal"], [78, 5, 1, "", "assert_contains_all"], [78, 5, 1, "", "assert_copy"], [78, 5, 1, "", "assert_dict_equal"], [78, 5, 1, "", "assert_equal"], [78, 5, 1, "", "assert_equivalent"], [78, 5, 1, "", "assert_frame_equal"], [78, 5, 1, "", "assert_frame_equivalent"], [78, 5, 1, "", "assert_index_equal"], [78, 5, 1, "", "assert_index_equivalent"], [78, 5, 1, "", "assert_is_sorted"], [78, 5, 1, "", "assert_series_equal"], [78, 5, 1, "", "assert_series_equivalent"]], "arkouda.timeclass": [[79, 2, 1, "", "Datetime"], [79, 7, 1, "", "RegistrationError"], [79, 2, 1, "", "Timedelta"], [79, 5, 1, "", "create_pdarray"], [79, 5, 1, "", "date_range"], [79, 5, 1, "", "from_series"], [79, 1, 1, "", "intTypes"], [79, 1, 1, "", "int_scalars"], [79, 5, 1, "", "isSupportedInt"], [79, 2, 1, "", "pdarray"], [79, 5, 1, "", "timedelta_range"]], "arkouda.timeclass.Datetime": [[79, 6, 1, "", "date"], [79, 6, 1, "", "day"], [79, 6, 1, "", "day_of_week"], [79, 6, 1, "", "day_of_year"], [79, 6, 1, "", "dayofweek"], [79, 6, 1, "", "dayofyear"], [79, 6, 1, "", "hour"], [79, 6, 1, "", "is_leap_year"], [79, 4, 1, "", "is_registered"], [79, 4, 1, "", "isocalendar"], [79, 6, 1, "", "microsecond"], [79, 6, 1, "", "millisecond"], [79, 6, 1, "", "minute"], [79, 6, 1, "", "month"], [79, 6, 1, "", "nanosecond"], [79, 4, 1, "", "register"], [79, 6, 1, "", "second"], [79, 3, 1, "", "special_objType"], [79, 4, 1, "", "sum"], [79, 3, 1, "", "supported_opeq"], [79, 3, 1, "", "supported_with_datetime"], [79, 3, 1, "", "supported_with_pdarray"], [79, 3, 1, "", "supported_with_r_datetime"], [79, 3, 1, "", "supported_with_r_pdarray"], [79, 3, 1, "", "supported_with_r_timedelta"], [79, 3, 1, "", "supported_with_timedelta"], [79, 4, 1, "", "to_pandas"], [79, 4, 1, "", "unregister"], [79, 6, 1, "", "week"], [79, 6, 1, "", "weekday"], [79, 6, 1, "", "weekofyear"], [79, 6, 1, "", "year"]], "arkouda.timeclass.Timedelta": [[79, 4, 1, "", "abs"], [79, 6, 1, "", "components"], [79, 6, 1, "", "days"], [79, 4, 1, "", "is_registered"], [79, 6, 1, "", "microseconds"], [79, 6, 1, "", "nanoseconds"], [79, 4, 1, "", "register"], [79, 6, 1, "", "seconds"], [79, 3, 1, "", "special_objType"], [79, 4, 1, "", "std"], [79, 4, 1, "", "sum"], [79, 3, 1, "", "supported_opeq"], [79, 3, 1, "", "supported_with_datetime"], [79, 3, 1, "", "supported_with_pdarray"], [79, 3, 1, "", "supported_with_r_datetime"], [79, 3, 1, "", "supported_with_r_pdarray"], [79, 3, 1, "", "supported_with_r_timedelta"], [79, 3, 1, "", "supported_with_timedelta"], [79, 4, 1, "", "to_pandas"], [79, 4, 1, "", "total_seconds"], [79, 4, 1, "", "unregister"]], "arkouda.timeclass.pdarray": [[79, 3, 1, "", "BinOps"], [79, 3, 1, "", "OpEqOps"], [79, 4, 1, "", "all"], [79, 4, 1, "", "any"], [79, 4, 1, "", "argmax"], [79, 4, 1, "", "argmaxk"], [79, 4, 1, "", "argmin"], [79, 4, 1, "", "argmink"], [79, 4, 1, "", "astype"], [79, 4, 1, "", "attach"], [79, 4, 1, "", "bigint_to_uint_arrays"], [79, 4, 1, "", "clz"], [79, 4, 1, "", "corr"], [79, 4, 1, "", "cov"], [79, 4, 1, "", "ctz"], [79, 3, 1, "id0", "dtype"], [79, 4, 1, "", "equals"], [79, 4, 1, "", "fill"], [79, 4, 1, "", "flatten"], [79, 4, 1, "", "format_other"], [79, 6, 1, "", "inferred_type"], [79, 4, 1, "", "info"], [79, 4, 1, "", "is_registered"], [79, 4, 1, "", "is_sorted"], [79, 3, 1, "id1", "itemsize"], [79, 4, 1, "", "max"], [79, 6, 1, "", "max_bits"], [79, 4, 1, "", "maxk"], [79, 4, 1, "", "mean"], [79, 4, 1, "", "min"], [79, 4, 1, "", "mink"], [79, 3, 1, "id2", "name"], [79, 6, 1, "", "nbytes"], [79, 3, 1, "id3", "ndim"], [79, 3, 1, "", "objType"], [79, 4, 1, "", "opeq"], [79, 4, 1, "", "parity"], [79, 4, 1, "", "popcount"], [79, 4, 1, "", "pretty_print_info"], [79, 4, 1, "", "prod"], [79, 4, 1, "", "register"], [79, 3, 1, "", "registered_name"], [79, 4, 1, "", "reshape"], [79, 4, 1, "", "rotl"], [79, 4, 1, "", "rotr"], [79, 4, 1, "", "save"], [79, 6, 1, "id4", "shape"], [79, 3, 1, "id5", "size"], [79, 4, 1, "", "slice_bits"], [79, 4, 1, "", "std"], [79, 4, 1, "", "sum"], [79, 4, 1, "", "to_csv"], [79, 4, 1, "", "to_cuda"], [79, 4, 1, "", "to_hdf"], [79, 4, 1, "", "to_list"], [79, 4, 1, "", "to_ndarray"], [79, 4, 1, "", "to_parquet"], [79, 4, 1, "", "transfer"], [79, 4, 1, "", "unregister"], [79, 4, 1, "", "update_hdf"], [79, 4, 1, "", "value_counts"], [79, 4, 1, "", "var"]], "arkouda.util": [[80, 2, 1, "", "BitVector"], [80, 5, 1, "", "BitVectorizer"], [80, 2, 1, "", "Datetime"], [80, 2, 1, "", "GroupBy"], [80, 2, 1, "", "IPv4"], [80, 1, 1, "", "Index"], [80, 2, 1, "", "SegArray"], [80, 2, 1, "", "Strings"], [80, 2, 1, "", "Timedelta"], [80, 5, 1, "", "arange"], [80, 5, 1, "", "attach"], [80, 5, 1, "", "attach_all"], [80, 5, 1, "", "broadcast"], [80, 5, 1, "", "broadcast_dims"], [80, 5, 1, "", "coargsort"], [80, 5, 1, "", "concatenate"], [80, 5, 1, "", "convert_bytes"], [80, 5, 1, "", "convert_if_categorical"], [80, 5, 1, "", "create_pdarray"], [80, 5, 1, "", "dtype"], [80, 5, 1, "", "enrich_inplace"], [80, 5, 1, "", "expand"], [80, 1, 1, "", "float_scalars"], [80, 5, 1, "", "generic_concat"], [80, 5, 1, "", "get_callback"], [80, 5, 1, "", "identity"], [80, 1, 1, "", "int_scalars"], [80, 5, 1, "", "invert_permutation"], [80, 5, 1, "", "is_float"], [80, 5, 1, "", "is_int"], [80, 5, 1, "", "is_numeric"], [80, 5, 1, "", "is_registered"], [80, 5, 1, "", "list_registry"], [80, 5, 1, "", "map"], [80, 5, 1, "", "most_common"], [80, 1, 1, "", "numeric_scalars"], [80, 2, 1, "", "pdarray"], [80, 5, 1, "", "register"], [80, 5, 1, "", "register_all"], [80, 5, 1, "", "report_mem"], [80, 5, 1, "", "sparse_sum_help"], [80, 5, 1, "", "unique"], [80, 5, 1, "", "unregister"], [80, 5, 1, "", "unregister_all"]], "arkouda.util.BitVector": [[80, 3, 1, "", "conserves"], [80, 4, 1, "", "format"], [80, 4, 1, "", "from_return_msg"], [80, 4, 1, "", "opeq"], [80, 4, 1, "", "register"], [80, 3, 1, "", "registered_name"], [80, 3, 1, "", "reverse"], [80, 3, 1, "", "special_objType"], [80, 4, 1, "", "to_list"], [80, 4, 1, "", "to_ndarray"], [80, 3, 1, "", "values"], [80, 3, 1, "", "width"]], "arkouda.util.Datetime": [[80, 6, 1, "", "date"], [80, 6, 1, "", "day"], [80, 6, 1, "", "day_of_week"], [80, 6, 1, "", "day_of_year"], [80, 6, 1, "", "dayofweek"], [80, 6, 1, "", "dayofyear"], [80, 6, 1, "", "hour"], [80, 6, 1, "", "is_leap_year"], [80, 4, 1, "", "is_registered"], [80, 4, 1, "", "isocalendar"], [80, 6, 1, "", "microsecond"], [80, 6, 1, "", "millisecond"], [80, 6, 1, "", "minute"], [80, 6, 1, "", "month"], [80, 6, 1, "", "nanosecond"], [80, 4, 1, "", "register"], [80, 6, 1, "", "second"], [80, 3, 1, "", "special_objType"], [80, 4, 1, "", "sum"], [80, 3, 1, "", "supported_opeq"], [80, 3, 1, "", "supported_with_datetime"], [80, 3, 1, "", "supported_with_pdarray"], [80, 3, 1, "", "supported_with_r_datetime"], [80, 3, 1, "", "supported_with_r_pdarray"], [80, 3, 1, "", "supported_with_r_timedelta"], [80, 3, 1, "", "supported_with_timedelta"], [80, 4, 1, "", "to_pandas"], [80, 4, 1, "", "unregister"], [80, 6, 1, "", "week"], [80, 6, 1, "", "weekday"], [80, 6, 1, "", "weekofyear"], [80, 6, 1, "", "year"]], "arkouda.util.GroupBy": [[80, 4, 1, "", "AND"], [80, 4, 1, "", "OR"], [80, 4, 1, "", "Reductions"], [80, 4, 1, "", "XOR"], [80, 4, 1, "", "aggregate"], [80, 4, 1, "", "all"], [80, 4, 1, "", "any"], [80, 4, 1, "", "argmax"], [80, 4, 1, "", "argmin"], [80, 4, 1, "", "attach"], [80, 4, 1, "", "broadcast"], [80, 4, 1, "", "build_from_components"], [80, 4, 1, "", "count"], [80, 3, 1, "", "dropna"], [80, 4, 1, "", "first"], [80, 4, 1, "", "from_return_msg"], [80, 4, 1, "", "head"], [80, 4, 1, "", "is_registered"], [80, 3, 1, "", "logger"], [80, 4, 1, "", "max"], [80, 4, 1, "", "mean"], [80, 4, 1, "", "median"], [80, 4, 1, "", "min"], [80, 4, 1, "", "mode"], [80, 4, 1, "", "most_common"], [80, 3, 1, "", "ngroups"], [80, 3, 1, "", "nkeys"], [80, 4, 1, "", "nunique"], [80, 4, 1, "", "objType"], [80, 3, 1, "", "permutation"], [80, 4, 1, "", "prod"], [80, 4, 1, "", "register"], [80, 4, 1, "", "sample"], [80, 3, 1, "", "segments"], [80, 4, 1, "id0", "size"], [80, 4, 1, "", "std"], [80, 4, 1, "", "sum"], [80, 4, 1, "", "tail"], [80, 4, 1, "", "to_hdf"], [80, 4, 1, "", "unique"], [80, 3, 1, "", "unique_keys"], [80, 4, 1, "", "unregister"], [80, 4, 1, "", "unregister_groupby_by_name"], [80, 4, 1, "", "update_hdf"], [80, 4, 1, "", "var"]], "arkouda.util.IPv4": [[80, 4, 1, "", "export_uint"], [80, 4, 1, "", "format"], [80, 4, 1, "", "normalize"], [80, 4, 1, "", "opeq"], [80, 4, 1, "", "register"], [80, 3, 1, "", "special_objType"], [80, 4, 1, "", "to_hdf"], [80, 4, 1, "", "to_list"], [80, 4, 1, "", "to_ndarray"], [80, 4, 1, "", "update_hdf"], [80, 3, 1, "", "values"]], "arkouda.util.SegArray": [[80, 4, 1, "", "AND"], [80, 4, 1, "", "OR"], [80, 4, 1, "", "XOR"], [80, 4, 1, "", "aggregate"], [80, 4, 1, "", "all"], [80, 4, 1, "", "any"], [80, 4, 1, "", "append"], [80, 4, 1, "", "append_single"], [80, 4, 1, "", "argmax"], [80, 4, 1, "", "argmin"], [80, 4, 1, "", "attach"], [80, 4, 1, "", "concat"], [80, 4, 1, "", "copy"], [80, 3, 1, "", "dtype"], [80, 4, 1, "", "filter"], [80, 4, 1, "", "from_multi_array"], [80, 4, 1, "", "from_parts"], [80, 4, 1, "", "from_return_msg"], [80, 4, 1, "", "get_jth"], [80, 4, 1, "", "get_length_n"], [80, 4, 1, "", "get_ngrams"], [80, 4, 1, "", "get_prefixes"], [80, 4, 1, "", "get_suffixes"], [80, 6, 1, "", "grouping"], [80, 4, 1, "", "hash"], [80, 4, 1, "", "intersect"], [80, 4, 1, "", "is_registered"], [80, 4, 1, "", "load"], [80, 3, 1, "", "logger"], [80, 4, 1, "", "max"], [80, 4, 1, "", "mean"], [80, 4, 1, "", "min"], [80, 6, 1, "", "nbytes"], [80, 6, 1, "", "non_empty"], [80, 4, 1, "", "nunique"], [80, 3, 1, "", "objType"], [80, 4, 1, "", "prepend_single"], [80, 4, 1, "", "prod"], [80, 4, 1, "", "read_hdf"], [80, 4, 1, "", "register"], [80, 3, 1, "", "registered_name"], [80, 4, 1, "", "remove_repeats"], [80, 4, 1, "", "save"], [80, 3, 1, "", "segments"], [80, 4, 1, "", "set_jth"], [80, 4, 1, "", "setdiff"], [80, 4, 1, "", "setxor"], [80, 3, 1, "", "size"], [80, 4, 1, "", "sum"], [80, 4, 1, "", "to_hdf"], [80, 4, 1, "", "to_list"], [80, 4, 1, "", "to_ndarray"], [80, 4, 1, "", "to_parquet"], [80, 4, 1, "", "transfer"], [80, 4, 1, "", "union"], [80, 4, 1, "", "unique"], [80, 4, 1, "", "unregister"], [80, 4, 1, "", "unregister_segarray_by_name"], [80, 4, 1, "", "update_hdf"], [80, 3, 1, "", "valsize"], [80, 3, 1, "", "values"]], "arkouda.util.Strings": [[80, 3, 1, "", "BinOps"], [80, 4, 1, "", "astype"], [80, 4, 1, "", "attach"], [80, 4, 1, "", "cached_regex_patterns"], [80, 4, 1, "", "capitalize"], [80, 4, 1, "", "contains"], [80, 4, 1, "", "decode"], [80, 3, 1, "id1", "dtype"], [80, 4, 1, "", "encode"], [80, 4, 1, "", "endswith"], [80, 3, 1, "id2", "entry"], [80, 4, 1, "", "equals"], [80, 4, 1, "", "find_locations"], [80, 4, 1, "", "findall"], [80, 4, 1, "", "flatten"], [80, 4, 1, "", "from_parts"], [80, 4, 1, "", "from_return_msg"], [80, 4, 1, "", "fullmatch"], [80, 4, 1, "", "get_bytes"], [80, 4, 1, "", "get_lengths"], [80, 4, 1, "", "get_offsets"], [80, 4, 1, "", "get_prefixes"], [80, 4, 1, "", "get_suffixes"], [80, 4, 1, "", "group"], [80, 4, 1, "", "hash"], [80, 6, 1, "", "inferred_type"], [80, 4, 1, "", "info"], [80, 4, 1, "", "is_registered"], [80, 4, 1, "", "isalnum"], [80, 4, 1, "", "isalpha"], [80, 4, 1, "", "isdecimal"], [80, 4, 1, "", "isdigit"], [80, 4, 1, "", "isempty"], [80, 4, 1, "", "islower"], [80, 4, 1, "", "isspace"], [80, 4, 1, "", "istitle"], [80, 4, 1, "", "isupper"], [80, 3, 1, "id3", "logger"], [80, 4, 1, "", "lower"], [80, 4, 1, "", "lstick"], [80, 4, 1, "", "match"], [80, 3, 1, "", "nbytes"], [80, 3, 1, "", "ndim"], [80, 3, 1, "", "objType"], [80, 4, 1, "", "peel"], [80, 4, 1, "", "pretty_print_info"], [80, 4, 1, "", "purge_cached_regex_patterns"], [80, 4, 1, "", "regex_split"], [80, 4, 1, "", "register"], [80, 3, 1, "", "registered_name"], [80, 4, 1, "", "rpeel"], [80, 4, 1, "", "save"], [80, 4, 1, "", "search"], [80, 3, 1, "", "shape"], [80, 3, 1, "id4", "size"], [80, 4, 1, "", "split"], [80, 4, 1, "", "startswith"], [80, 4, 1, "", "stick"], [80, 4, 1, "", "strip"], [80, 4, 1, "", "sub"], [80, 4, 1, "", "subn"], [80, 4, 1, "", "title"], [80, 4, 1, "", "to_csv"], [80, 4, 1, "", "to_hdf"], [80, 4, 1, "", "to_list"], [80, 4, 1, "", "to_ndarray"], [80, 4, 1, "", "to_parquet"], [80, 4, 1, "", "transfer"], [80, 4, 1, "", "unregister"], [80, 4, 1, "", "unregister_strings_by_name"], [80, 4, 1, "", "update_hdf"], [80, 4, 1, "", "upper"]], "arkouda.util.Timedelta": [[80, 4, 1, "", "abs"], [80, 6, 1, "", "components"], [80, 6, 1, "", "days"], [80, 4, 1, "", "is_registered"], [80, 6, 1, "", "microseconds"], [80, 6, 1, "", "nanoseconds"], [80, 4, 1, "", "register"], [80, 6, 1, "", "seconds"], [80, 3, 1, "", "special_objType"], [80, 4, 1, "", "std"], [80, 4, 1, "", "sum"], [80, 3, 1, "", "supported_opeq"], [80, 3, 1, "", "supported_with_datetime"], [80, 3, 1, "", "supported_with_pdarray"], [80, 3, 1, "", "supported_with_r_datetime"], [80, 3, 1, "", "supported_with_r_pdarray"], [80, 3, 1, "", "supported_with_r_timedelta"], [80, 3, 1, "", "supported_with_timedelta"], [80, 4, 1, "", "to_pandas"], [80, 4, 1, "", "total_seconds"], [80, 4, 1, "", "unregister"]], "arkouda.util.pdarray": [[80, 3, 1, "", "BinOps"], [80, 3, 1, "", "OpEqOps"], [80, 4, 1, "", "all"], [80, 4, 1, "", "any"], [80, 4, 1, "", "argmax"], [80, 4, 1, "", "argmaxk"], [80, 4, 1, "", "argmin"], [80, 4, 1, "", "argmink"], [80, 4, 1, "", "astype"], [80, 4, 1, "", "attach"], [80, 4, 1, "", "bigint_to_uint_arrays"], [80, 4, 1, "", "clz"], [80, 4, 1, "", "corr"], [80, 4, 1, "", "cov"], [80, 4, 1, "", "ctz"], [80, 3, 1, "id5", "dtype"], [80, 4, 1, "", "equals"], [80, 4, 1, "", "fill"], [80, 4, 1, "", "flatten"], [80, 4, 1, "", "format_other"], [80, 6, 1, "", "inferred_type"], [80, 4, 1, "", "info"], [80, 4, 1, "", "is_registered"], [80, 4, 1, "", "is_sorted"], [80, 3, 1, "id6", "itemsize"], [80, 4, 1, "", "max"], [80, 6, 1, "", "max_bits"], [80, 4, 1, "", "maxk"], [80, 4, 1, "", "mean"], [80, 4, 1, "", "min"], [80, 4, 1, "", "mink"], [80, 3, 1, "id7", "name"], [80, 6, 1, "", "nbytes"], [80, 3, 1, "id8", "ndim"], [80, 3, 1, "", "objType"], [80, 4, 1, "", "opeq"], [80, 4, 1, "", "parity"], [80, 4, 1, "", "popcount"], [80, 4, 1, "", "pretty_print_info"], [80, 4, 1, "", "prod"], [80, 4, 1, "", "register"], [80, 3, 1, "", "registered_name"], [80, 4, 1, "", "reshape"], [80, 4, 1, "", "rotl"], [80, 4, 1, "", "rotr"], [80, 4, 1, "", "save"], [80, 6, 1, "id9", "shape"], [80, 3, 1, "id10", "size"], [80, 4, 1, "", "slice_bits"], [80, 4, 1, "", "std"], [80, 4, 1, "", "sum"], [80, 4, 1, "", "to_csv"], [80, 4, 1, "", "to_cuda"], [80, 4, 1, "", "to_hdf"], [80, 4, 1, "", "to_list"], [80, 4, 1, "", "to_ndarray"], [80, 4, 1, "", "to_parquet"], [80, 4, 1, "", "transfer"], [80, 4, 1, "", "unregister"], [80, 4, 1, "", "update_hdf"], [80, 4, 1, "", "value_counts"], [80, 4, 1, "", "var"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:function", "6": "py:property", "7": "py:exception"}, "terms": {"": [0, 1, 2, 3, 5, 8, 9, 12, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 38, 39, 42, 47, 52, 54, 56, 57, 58, 59, 64, 67, 70, 71, 72, 73, 75, 77, 78, 79, 80, 82, 85, 86, 90, 99, 101, 102, 105, 106, 107, 109, 112, 113, 115, 116, 117, 119, 120, 122, 124, 125], "0": [0, 3, 4, 5, 6, 9, 12, 16, 17, 18, 19, 22, 23, 24, 26, 27, 29, 31, 33, 34, 38, 39, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 90, 91, 92, 97, 101, 102, 104, 105, 107, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125], "00": [22, 26, 83], "000": [26, 42], "00000000000000000": [22, 24, 26, 27, 42, 47, 48, 58, 59, 60, 69, 72, 79, 80, 112, 114, 115, 116, 117], "00000000000003": [24, 26, 42, 72, 80, 116], "00018361238254747651": 83, "0001_0d4865d7c9453adc6af6409568da326845c358b9_20230406_165330": 83, "0002": 83, "0002090000002681336": 83, "0009575499998391024": 83, "001": 70, "001326192548940973": 83, "0014_31de39be8b19c76d073a8999def6673a305c250d_20230405_145759_uncommit": 83, "0015_31de39be8b19c76d073a8999def6673a305c250d_20230405_145947_uncommit": 83, "00383609999971668": 83, "0039507749997937935": 83, "0040258999997604406": 83, "004057779999857303": 83, "004066600000442122": 83, "004131924999910552": 83, "004159775000061927": 83, "004246700000294368": 83, "0043372999998609885": 83, "0048064200000226265": 83, "005089474999749655": 83, "007168699999965611": 83, "01": [26, 42, 48, 60, 70, 79, 83, 86, 88], "011410423448327005": [26, 42, 48, 60, 114], "013": 117, "0197": 83, "02": 83, "020288899999286514": 83, "021728052940979934": [52, 64, 120], "024032100000113132": 83, "03": 83, "030785499755523249": [52, 64, 120], "04": [83, 105], "0441791878997098": [26, 42, 48, 52, 60, 64], "0472855509390593": 112, "04t12": 83, "04t16": 83, "05": [26, 78], "05309592737584": 112, "0532529435624589": [52, 64, 120], "0550596900172": 83, "055256829926011691": [52, 64, 120], "0598322696795694": [52, 64, 120], "05t15": 83, "06": 83, "0625": [22, 26], "07": 83, "07734942223993": 117, "08": [26, 78], "083130710959903542": [52, 64], "08505865366367038": [52, 64, 120], "085536923187668": 112, "0889": 83, "089433234324597599": [26, 42, 48, 60, 79], "09": [83, 101], "0954451150103321": [24, 26, 42, 72, 80, 116], "097392": 83, "0b10": [26, 42, 47, 59, 72, 79, 80], "0b100": 70, "0b101111111111111111111111111111111111111111111111111111111111111111": [26, 42, 47, 59, 72, 79, 80], "0d": [26, 42], "0e": [26, 42], "0j": [26, 42], "0x1": [26, 42], "0x100": [26, 42], "0x2233": [26, 42], "0x3322": [26, 42], "0x7f2cf23e10c0": [22, 26, 115], "0x7ff2fc1fc200": [26, 42], "0x7ff2fc1fce60": [26, 42], "0x7ff2fc1ff320": [26, 42], "1": [0, 1, 3, 4, 6, 8, 11, 12, 15, 17, 18, 19, 22, 23, 24, 26, 27, 29, 31, 33, 38, 39, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 95, 97, 101, 102, 103, 104, 105, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125], "10": [3, 4, 8, 17, 18, 22, 24, 26, 29, 42, 47, 48, 50, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 70, 72, 73, 74, 77, 79, 80, 82, 83, 90, 102, 104, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122], "100": [22, 26, 42, 47, 58, 59, 63, 70, 72, 73, 79, 80, 83, 90, 112], "1000": [17, 22, 26, 27, 31, 70, 110, 117], "10000": 19, "100000": 90, "100000000": 107, "100x40": [5, 9], "101": [26, 42, 56, 72, 77, 80], "1024": [1, 26, 42, 47, 59], "104": [26, 42, 56, 72, 77, 80], "105": [0, 19, 100], "106": [52, 64, 120], "1073741824": [22, 26, 115], "108": [24, 26, 42, 72, 80, 116], "10_000": [4, 26], "11": [3, 22, 26, 42, 47, 50, 54, 58, 59, 62, 72, 80, 83, 88, 90, 91, 112, 115, 117, 118], "110": [26, 42, 56, 72, 77, 80], "110680464442257309696": 3, "110680464442257309708": 3, "111": [22, 26, 42, 56, 72, 77, 80, 115], "11111111111111116": [24, 26, 42, 72, 80, 116], "114": [26, 42, 56, 72, 77, 80], "1153776854774361": [26, 42, 48, 60, 79], "116": [26, 42, 56, 72, 77, 80], "119": [26, 42, 56, 72, 77, 80], "12": [3, 22, 24, 26, 29, 42, 47, 50, 54, 56, 57, 58, 59, 62, 72, 77, 79, 80, 83, 99, 104, 105, 112, 116, 117, 118], "120": [26, 42, 47, 56, 59, 72, 77, 79, 80, 117], "121": [26, 42, 56, 72, 77, 80], "122": [26, 42, 56, 72, 77, 80], "123": [26, 42], "1234": [18, 22, 26, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 86], "1235": [18, 22, 26, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80], "1236": [18, 22, 26, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80], "12367222192448891": [26, 42, 48, 60, 114], "1237": [18, 22, 26, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80], "127": 84, "128": [18, 23, 26, 38, 39, 42, 54, 56, 72, 77, 80], "1284": [26, 42], "12gb": 105, "13": [3, 26, 42, 47, 50, 52, 58, 59, 62, 64, 80, 83, 101, 104, 112, 117, 118, 120], "13090": [26, 42], "1319566682702642": [52, 64, 120], "134": 112, "1344": [26, 42], "14": [3, 22, 24, 26, 42, 47, 50, 52, 56, 59, 62, 64, 70, 72, 77, 80, 83, 90, 91, 112, 116, 118, 120], "141571941375841": 17, "143": [26, 42, 47, 59, 72, 79, 80], "1436": 83, "15": [3, 18, 22, 26, 42, 47, 50, 52, 56, 57, 59, 62, 64, 72, 77, 79, 80, 117, 118, 120], "1514764800000000000": [26, 42, 48, 60, 79], "15461882265": 97, "158": 83, "1598310770203937": 112, "16": [22, 24, 26, 42, 47, 52, 58, 59, 64, 72, 80, 83, 84, 101, 102, 112, 116, 118, 120], "160": [26, 42, 47, 59], "1622479306453748": 112, "16400145561571539": [52, 64, 120], "166020696663385964564": 3, "166020696663385964574": 3, "1665150633720014": [52, 64, 120], "166666666666666": [26, 42, 47, 59], "17": [22, 26, 42, 47, 52, 57, 59, 64, 72, 79, 80, 83, 90, 117, 118, 120], "1701": [26, 42, 48, 60, 79, 114], "1723810583573375": [52, 64], "1723810583573377": [26, 42, 48, 60], "1798": [26, 42], "18": [22, 24, 26, 42, 47, 52, 59, 64, 72, 80, 83, 112, 116, 118, 120], "18446744073709551616": [26, 42, 47, 48, 59, 60, 72, 79, 80], "18446744073709551617": [26, 42, 47, 48, 59, 60, 72, 79, 80], "18446744073709551618": [26, 42, 47, 48, 59, 60, 72, 79, 80], "18446744073709551619": [26, 42, 47, 48, 59, 60, 72, 79, 80], "18446744073709551620": [26, 42, 47, 48, 59, 60, 72, 79, 80], "1864": [26, 42, 48, 60, 79], "1882": 83, "19": [26, 42, 47, 58, 59, 80, 118], "1923875335537315": [52, 64, 120], "196608": 83, "1_2___": [26, 33, 42, 56, 72, 77, 80, 125], "1d": [6, 10, 12, 16, 17, 26, 42, 50, 54, 62, 72, 73, 80, 82, 122, 123], "1e": [26, 70, 78], "1j": [26, 42], "1st": [26, 42, 47, 59], "1string": [26, 42, 56, 72, 77, 80], "2": [0, 3, 4, 8, 17, 18, 22, 23, 24, 26, 27, 29, 33, 38, 39, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 86, 90, 91, 92, 99, 101, 102, 103, 104, 105, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125], "20": [1, 3, 5, 9, 22, 26, 42, 47, 50, 52, 59, 62, 64, 86, 90, 104, 105, 112, 118, 120], "2000": 83, "20159494048757": [52, 64, 120], "2018": [26, 42, 48, 60, 79], "2020": 83, "2022": 102, "2023": [83, 101], "2048": [26, 42, 47, 59], "208": 83, "2080": 83, "20ghz": 83, "21": [3, 26, 42, 112], "210": 83, "21589865655358": 112, "22": [3, 26, 42, 112], "2200000000": 83, "2207999000": 83, "222": [22, 26, 115], "224": [26, 42], "2250": 83, "23": [3, 26, 42, 47, 59], "2312": [26, 42], "2324_pytest_benchmark_doc": 83, "236": 83, "24": [3, 26, 27, 42, 47, 59, 73, 83, 104, 112], "246": 83, "25": [3, 22, 24, 26, 27, 29, 42, 47, 48, 58, 59, 60, 72, 73, 79, 80, 112, 114, 116], "256": [26, 42, 47, 59, 83], "2561": 83, "26": [17, 83], "263": 83, "264": 83, "267": 83, "27": [22, 26, 42, 47, 59, 83, 90], "28": [58, 80], "281": 83, "2826": [26, 42], "290": [22, 26], "298": [22, 26], "2d": [5, 6, 9, 26, 42, 48, 60], "2j": [23, 26, 38, 39, 42], "2\u00b3x\u2087": [26, 42, 56, 72, 77, 80], "2\u00b3\u2087": [26, 42, 56, 72, 77, 80], "3": [3, 4, 17, 22, 24, 26, 27, 29, 33, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 69, 72, 73, 74, 77, 78, 79, 80, 82, 83, 90, 91, 92, 101, 102, 104, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 123, 125], "30": [3, 26, 27, 42, 58, 73, 80, 87], "3000": [26, 73], "30013431967121934": [26, 42, 48, 52, 60, 64], "3025850929940459": 112, "31": [86, 105], "317766166719343": [26, 69], "31962608": [26, 42], "31de39be8b19c76d073a8999def6673a305c250d": 83, "32": [22, 26, 29, 42, 47, 59, 71, 83, 90, 92], "3219280948873626": 112, "323": [26, 42], "324": [26, 42, 47, 59, 72, 79, 80, 117], "33": 112, "3304": 83, "3306": 83, "333": [22, 26, 115], "333333333333333": [24, 26, 42, 72, 80, 116], "33333333333333326": [24, 26, 42, 72, 80, 116], "33333333333333337": [24, 26, 42, 72, 80, 116], "33333333333333348": [24, 26, 42, 72, 80, 116], "33340274885464394": 17, "3340": [26, 42], "35": 90, "350": 83, "35000": 90, "353429832157099": [52, 64], "36": [70, 117], "3620": 83, "3673425816523577": [52, 64, 120], "36893488147419103233": 3, "37": 90, "3805": 83, "384": [26, 42, 47, 59], "3854": [26, 42], "38552048588998722": [52, 64, 120], "3866978126031091": [52, 64, 120], "3890560989306504": 112, "39": [22, 26, 83], "3d": [26, 42, 47, 59], "3dnowprefetch": 83, "3rd": [26, 42, 47, 59], "4": [3, 5, 9, 17, 18, 22, 24, 26, 27, 29, 33, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 69, 70, 72, 73, 74, 77, 78, 79, 80, 83, 90, 92, 101, 102, 104, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 123, 125], "40": [26, 42], "40000": [22, 26], "4097": 83, "40990997253631162": [52, 64], "4110385860243131": 112, "4142135623730951": [26, 42, 47, 59], "41619265571741659": [26, 42, 48, 60, 79], "4177": 83, "42": 118, "4231": 83, "4294967296": [26, 42], "4298": 83, "4328": 83, "4368": [26, 42], "44017172817806": 83, "4444": 83, "450": 112, "454368507659211": 112, "457": 19, "459": [22, 26], "46": [26, 73, 112], "4608": [26, 42, 47, 59], "4621": 83, "4657359027997265": [26, 69], "47108547995356098": [52, 64, 120], "47383036230759112": [26, 42, 48, 52, 60, 64], "478894913238722": 112, "48": [26, 27, 42, 73], "480": [26, 42], "4869": 83, "4875": 83, "4879818539586227": [52, 64], "4882": [26, 42], "4930614433405491": [26, 69], "494295836924771": 112, "5": [3, 17, 18, 19, 22, 24, 26, 27, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 69, 70, 72, 73, 74, 77, 78, 79, 80, 83, 90, 91, 92, 94, 102, 104, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 123], "50": [5, 9, 17, 83, 90], "500": [19, 84, 87], "5000": [22, 26], "512": [26, 42, 47, 59], "513": [26, 42], "51874393620990389": [26, 42, 48, 60, 79], "52": 90, "5246": 83, "5255": 83, "5275252316519465": [24, 26, 42, 72, 80, 116], "5306": 83, "5392023718621486": [52, 64], "5396": [26, 42], "54": 112, "5424399190667666": [52, 64, 120], "55": 70, "5541": 83, "5555": [19, 97, 124], "55555555555555536": [24, 26, 42, 72, 80, 116], "55555555555555558": [24, 26, 42, 72, 80, 116], "5571769623557188": 112, "56": [26, 42, 47, 59, 91], "5622": 83, "5652": 83, "567584107142031": [26, 42, 48, 52, 60, 64], "57": 83, "5728783400481925": 112, "57600036956445599": [26, 42, 48, 60, 79], "58": 83, "5801": 83, "5835189384561099": [26, 69], "5837": 83, "5910": [26, 42], "598150033144236": 112, "5____6___7": [26, 42, 56, 72, 77, 80], "5e": [26, 42, 83], "5h": [26, 42, 57, 79], "6": [3, 17, 22, 24, 26, 27, 29, 42, 47, 48, 50, 54, 55, 56, 57, 58, 59, 60, 62, 69, 70, 72, 74, 77, 79, 80, 83, 90, 101, 102, 104, 105, 107, 109, 111, 112, 114, 115, 116, 117, 118, 123], "60": [26, 42, 47, 59, 72, 79, 80, 117], "6051701859880918": 112, "6094379124341003": [26, 69], "61": [26, 42, 47, 59], "6125": 83, "62": [22, 26, 42, 47, 59, 83], "62511314008006458": [52, 64, 120], "63": [26, 42, 47, 59, 72, 79, 80, 119], "64": [20, 23, 26, 29, 38, 39, 42, 47, 48, 52, 59, 60, 64, 72, 79, 80, 82, 83, 114, 115, 119], "6438561897747253": 112, "6450": 83, "6465": 83, "647": 19, "64bit": 83, "65": [26, 42, 47, 59, 72, 79, 80], "6534654349920751": [52, 64], "6615356693784662": [26, 42, 48, 60, 79], "6666666666666665": [24, 26, 42, 72, 80, 116], "67": [22, 26], "68586185091150265": [26, 42, 48, 52, 60, 64], "6864": 83, "68894208386667544": [52, 64], "7": [3, 17, 22, 24, 26, 27, 42, 47, 48, 50, 52, 54, 55, 58, 59, 60, 62, 64, 69, 72, 73, 74, 79, 80, 90, 101, 102, 104, 109, 111, 112, 114, 115, 116, 118, 120, 123], "70710678": [26, 42], "7085325853376141": [52, 64, 120], "71": [26, 42, 47, 59, 72, 79, 80, 90], "710615785506533": 112, "7182818284590451": 112, "7208667145173608": [52, 64, 120], "7320508075688772": [26, 42, 47, 59], "7336": 83, "73618171558685619": [26, 42, 48, 60, 114], "75": [24, 26, 42, 48, 60, 72, 80, 114, 116], "75000": 90, "7544": 83, "7659": 83, "77": [22, 26], "770": [26, 42], "77000": 90, "77777777777777768": [24, 26, 42, 72, 80, 116], "77777777777777779": [24, 26, 42, 72, 80, 116], "7852": 83, "78523998586553": 112, "79": 83, "7912": 83, "7999999999999998": [24, 26, 42, 72, 80, 116], "7wjef": [26, 42, 48, 60], "8": [3, 17, 22, 24, 26, 29, 42, 47, 48, 50, 52, 54, 55, 56, 59, 60, 62, 64, 69, 72, 74, 77, 78, 79, 80, 83, 84, 85, 90, 91, 101, 102, 104, 105, 109, 111, 112, 114, 115, 116, 118, 119, 120], "80": 90, "8075": 83, "813": [26, 42], "8377304471659395": [26, 69], "8380": 83, "84": 90, "84010843172504": 112, "84375": [26, 42, 47, 59, 72, 79, 80, 117], "86": [22, 26], "8675309": [26, 42, 48, 60], "87": 83, "8722813232690143": [26, 42, 47, 59, 112], "8729704388729135": [52, 64], "875": [26, 73], "8750h": 83, "8755": [26, 42], "8797352989638163": [52, 64, 120], "88": 83, "8800": 83, "88281": [22, 26], "896": [26, 42, 47, 59], "9": [3, 18, 22, 24, 26, 29, 42, 47, 48, 50, 54, 55, 56, 58, 59, 60, 62, 72, 74, 77, 79, 80, 83, 90, 101, 102, 104, 109, 111, 112, 114, 115, 116, 117, 118], "90": 83, "9012": 83, "9160772326374946": [52, 64], "9177": 83, "92176432277231968": [52, 64], "92233720368547758085": 3, "92233720368547758090": 3, "92233720368547758091": 3, "92233720368547758095": 3, "931": 104, "9314718055994531": [26, 69], "934176000000015": 117, "9362": 19, "94": 83, "9437184": 83, "9442193396379165": 26, "945880905466208": 112, "96": [26, 42, 47, 59], "9602": 19, "9683": 19, "99": [22, 26, 70, 83, 115], "999": 70, "9991": 83, "99999": 0, "9999999999999982": [24, 26, 42, 72, 80, 116], "9999999999999998": [26, 42, 47, 59], "A": [1, 2, 10, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 42, 47, 48, 49, 50, 52, 54, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 86, 90, 96, 107, 109, 112, 113, 115, 117, 118, 119, 120, 122, 123, 125], "AND": [8, 24, 26, 42, 54, 72, 80, 108, 116], "And": [70, 119], "As": [0, 26, 42, 47, 56, 59, 67, 70, 72, 73, 75, 77, 79, 80, 86, 91, 93, 101, 102, 109, 112, 119, 122, 125], "At": [26, 42, 47, 59, 112], "Be": [0, 22, 26, 27, 29, 42, 47, 56, 59, 72, 77, 79, 80, 82], "But": [3, 26, 42, 50, 62, 123], "By": [18, 20, 21, 22, 24, 26, 27, 29, 42, 47, 50, 54, 56, 57, 59, 62, 72, 77, 78, 79, 80, 105, 116, 123], "For": [0, 2, 3, 4, 5, 9, 17, 18, 22, 24, 26, 29, 33, 42, 47, 48, 50, 52, 55, 56, 57, 58, 59, 60, 62, 64, 70, 72, 74, 77, 79, 80, 82, 83, 87, 90, 95, 97, 99, 101, 102, 103, 106, 109, 111, 114, 116, 117, 118, 119, 120, 121, 123, 125], "IN": 90, "If": [0, 1, 3, 4, 6, 10, 12, 13, 16, 17, 18, 19, 20, 22, 24, 26, 27, 29, 30, 33, 34, 42, 47, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 67, 70, 72, 73, 75, 77, 78, 79, 80, 82, 84, 85, 86, 87, 91, 92, 94, 97, 99, 101, 102, 103, 105, 106, 109, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125], "In": [18, 22, 24, 26, 29, 42, 47, 52, 56, 59, 64, 72, 77, 80, 82, 83, 84, 86, 87, 90, 97, 99, 100, 101, 103, 105, 109, 112, 116, 117, 118, 120, 121, 124, 125], "It": [0, 5, 20, 22, 26, 42, 47, 54, 58, 59, 71, 72, 78, 80, 82, 84, 85, 88, 90, 91, 92, 94, 97, 101, 102, 105, 115, 116, 121], "Its": [52, 64, 120], "NO": 83, "NOT": [8, 22, 26, 27, 29, 42, 47, 56, 59, 72, 77, 79, 80, 99, 109, 119], "No": [26, 42, 47, 59, 99, 105], "Not": [8, 26, 29, 42, 57, 73, 79, 80, 83, 115], "ONE": 92, "OR": [8, 24, 26, 42, 54, 72, 80, 86, 108, 116], "Of": [26, 42, 57, 79], "On": [18, 19, 26, 42, 124], "One": [22, 24, 26, 27, 42, 47, 58, 59, 72, 73, 80, 82, 90, 116, 122], "Ones": [26, 42, 48, 60, 72, 114], "Or": [4, 17, 26, 86, 100], "The": [0, 1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 38, 39, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 86, 90, 91, 92, 93, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125], "Then": [26, 42, 78], "There": [1, 24, 26, 29, 42, 80, 83, 90, 99, 100, 101, 102, 105, 114, 123], "These": [1, 22, 26, 42, 73, 90, 92, 95, 97, 109], "To": [0, 1, 22, 24, 26, 29, 42, 52, 57, 64, 70, 72, 79, 80, 82, 83, 84, 88, 91, 97, 99, 102, 103, 105, 113, 115, 117, 119, 120, 125], "Will": 83, "With": [24, 26, 42, 72, 80, 82, 103, 116, 118], "_": [3, 17, 24, 26, 29, 33, 42, 56, 72, 77, 80, 116, 125], "__": [26, 33, 42, 56, 72, 77, 80, 125], "__4___5____6___7": [26, 33, 42, 56, 72, 77, 80, 125], "___": [26, 42, 56, 72, 77, 80], "____": [26, 33, 42, 56, 72, 77, 80, 125], "__all__": 82, "__allsymbols__": [26, 28], "__array_function__": 5, "__debug__": [26, 42], "__dict__": 103, "__init__": [2, 26, 42], "__int__": 70, "__main__": [26, 42], "__new__": [26, 42], "__registeredsymbols__": [26, 28], "__str__": [22, 24, 26, 42, 70, 72, 73, 80], "_abstractbasetim": [26, 42, 57, 79, 80], "_array_interface_": [26, 42], "_as_parameter_": [26, 42], "_b3yc": [26, 42, 48, 60], "_base_unit": [26, 42, 57, 79, 80], "_basegenericalia": [26, 42], "_ctype": [26, 42], "_distn_infrastructur": 70, "_equal": [26, 78], "_equival": [26, 78], "_filter_arkouda_command": 25, "_final": [26, 42], "_genericalia": 42, "_get_grouping_kei": [24, 26, 42, 72, 80, 116], "_intern": [26, 42], "_length": [26, 42, 54, 72], "_local": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 92], "_locale0000": [22, 26], "_localn": [26, 42], "_segment": [26, 42, 54, 72, 92], "_specialgenericalia": [26, 42], "_type": [5, 6, 7, 9, 16], "_valu": [26, 42, 54, 72, 92], "_x": [22, 26], "_y": [22, 26], "a1": [31, 112], "a2": [26, 31, 42, 47, 59, 72, 79, 80, 112], "a_cpi": [26, 42, 47, 59, 72, 79, 80], "a_list": [26, 42], "a_max": 17, "a_min": 17, "a_tolist": [26, 42], "ab": [8, 26, 42, 57, 79, 80, 108, 112], "abc": [26, 27, 42, 91], "abil": 121, "abl": [82, 86, 92, 93, 99, 109], "abm": 83, "about": [18, 19, 26, 28, 29, 42, 47, 56, 57, 59, 72, 77, 79, 80, 82, 83, 87, 97, 103, 112, 125], "abov": [6, 26, 42, 47, 52, 59, 64, 70, 82, 83, 88, 90, 99, 101, 115, 120, 125], "abs_dt": 31, "absolut": [1, 8, 26, 42, 57, 78, 79, 80, 103, 112], "abstract": 25, "acceler": 85, "accept": [26, 42, 57, 73, 79, 80, 83, 122], "access": [1, 2, 19, 21, 26, 29, 42, 56, 71, 72, 73, 77, 80, 82, 90, 95, 99, 102, 108, 109, 120, 124], "access_channel": [19, 124], "access_token": [19, 124], "accessor": [26, 81], "accomod": [20, 26], "accomplish": [103, 109], "accord": [20, 22, 23, 24, 26, 27, 38, 39, 42, 58, 72, 73, 80, 115, 116, 119], "accordingli": [26, 42, 48, 60, 92, 114], "account": 105, "accur": 70, "accuraci": 70, "achiev": [3, 22, 26, 99], "aco": 8, "acosh": 8, "acquir": 82, "across": [5, 9, 21, 22, 26, 29, 42, 47, 57, 59, 72, 79, 80, 92, 101, 102, 109, 112, 117, 120], "act": [26, 42, 47, 52, 59, 64, 120], "action": 86, "activ": [21, 97, 99, 100, 101, 102, 116], "actual": [26, 31, 42, 91], "ad": [18, 20, 22, 26, 27, 29, 32, 42, 47, 54, 56, 59, 72, 77, 79, 80, 87, 89, 90, 94, 99, 100, 109, 124], "add": [0, 1, 8, 18, 22, 24, 26, 29, 42, 52, 54, 64, 72, 73, 80, 82, 86, 97, 99, 101, 102, 103, 105, 115, 116, 120], "addit": [1, 12, 22, 24, 26, 42, 52, 63, 64, 78, 80, 84, 92, 94, 101, 119, 120, 123, 124], "addition": [26, 42, 103, 110], "address": [0, 19, 20, 26, 80, 124], "adher": 92, "advanc": 100, "adx": 83, "ae": 83, "affect": [20, 26, 42, 52, 64, 80, 120], "after": [0, 4, 18, 22, 24, 26, 42, 49, 56, 61, 72, 77, 80, 86, 88, 99, 100, 115, 116, 120], "ag": 90, "again": [0, 26, 42, 88, 90, 91, 99, 101], "against": [18, 26, 42, 54, 56, 72, 77, 80, 83, 90, 109], "aggreg": [1, 21, 22, 24, 26, 42, 54, 58, 72, 80, 90, 108, 109, 116], "aggress": 109, "ahead": 21, "aid": [90, 92], "aim": 90, "ak": [0, 1, 3, 4, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 33, 38, 39, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 69, 72, 73, 74, 77, 78, 79, 80, 82, 87, 88, 90, 91, 97, 103, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125], "ak_arr": 90, "ak_arrai": [26, 42], "ak_data": [26, 29, 109], "ak_df": [22, 26, 63, 115], "ak_in1d": 90, "ak_in1dmult": 90, "ak_in1dmulti": 90, "ak_int": 90, "ak_intmult": 90, "ak_io_benchmark": 83, "aka": [71, 99], "akcast": 26, "akdata": [26, 29], "akint64": [26, 42, 48, 52, 60, 64], "aku": [26, 27, 65, 110], "algorithm": [15, 26, 42, 55, 58, 74, 80, 97, 111], "alia": [22, 26, 42, 50, 54, 57, 62, 72, 73, 79, 115], "alias": [26, 42, 57, 79], "alic": [22, 26, 115], "align": [26, 27, 42, 81, 117], "all": [0, 3, 5, 6, 9, 12, 17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 32, 33, 34, 42, 47, 48, 50, 52, 54, 56, 58, 59, 60, 62, 63, 64, 67, 72, 75, 77, 78, 79, 80, 82, 83, 86, 87, 88, 91, 92, 94, 97, 100, 101, 102, 103, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125], "all_occurr": [3, 26, 42, 50, 62], "all_scalar": [23, 26, 38, 39, 42, 48, 60, 72, 114], "allclos": [26, 70, 78], "alloc": [19, 26, 42, 99, 105], "allow": [0, 18, 20, 22, 24, 26, 27, 29, 32, 42, 47, 48, 52, 54, 56, 58, 59, 60, 64, 72, 73, 77, 78, 80, 83, 84, 90, 93, 95, 103, 105, 109, 116, 120], "allow_error": [22, 26, 27, 29, 42, 47, 56, 59, 72, 77, 79, 80, 109], "allow_list": [26, 27, 110], "allsymbol": [26, 28], "almost": [26, 42, 113, 115, 119, 125], "alnum": [26, 42, 56, 72, 77, 80], "alon": [113, 125], "along": [5, 9, 10, 12, 13, 15, 16, 17, 22, 24, 26, 42, 47, 48, 49, 57, 59, 60, 61, 72, 79, 80, 112, 114, 117, 123], "alongsid": [26, 29], "alpha": [26, 42, 56, 70, 72, 77, 80, 83, 107], "alphabet": [26, 42, 56, 72, 77, 80], "alphanumer": [26, 42, 56, 72, 77, 80], "alreadi": [0, 1, 18, 21, 22, 24, 26, 27, 29, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 87, 91, 92, 94, 99, 113, 116, 123], "also": [1, 3, 5, 17, 18, 20, 24, 26, 31, 42, 48, 50, 52, 54, 56, 60, 62, 64, 70, 72, 73, 77, 78, 80, 82, 85, 87, 90, 91, 93, 94, 95, 97, 100, 101, 102, 105, 109, 114, 118, 119, 120, 123], "alter": [26, 42], "altern": [1, 17, 22, 26, 42, 52, 64, 70, 73, 86, 87, 99, 102, 105, 120], "although": [5, 9, 26, 42], "alwai": [0, 12, 15, 24, 26, 27, 29, 42, 56, 57, 72, 77, 79, 80, 82, 91, 109, 112, 113, 115, 116, 119, 125], "amax": [26, 42], "amin": [26, 42], "among": [26, 42], "amount": [19, 22, 26, 42, 47, 59, 99, 103, 115, 125], "an": [0, 1, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 39, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 97, 100, 101, 105, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "anaconda": [1, 97, 99, 105, 106], "anaconda3": [99, 101, 102], "analog": [24, 26, 42, 57, 72, 79, 80, 116], "analyt": 96, "ani": [0, 3, 4, 17, 18, 21, 22, 24, 26, 27, 28, 29, 30, 42, 47, 48, 50, 52, 54, 56, 59, 60, 62, 64, 67, 72, 73, 75, 77, 78, 79, 80, 82, 83, 86, 88, 92, 94, 101, 102, 108, 112, 114, 115, 116, 117, 119, 120], "anim": [26, 73], "animal_1": [22, 26], "animal_2": [22, 26], "annot": [26, 42, 82, 99], "anoth": [0, 6, 7, 13, 22, 24, 26, 29, 42, 47, 56, 59, 72, 77, 79, 80, 82, 92, 97, 102, 105, 109, 115, 116, 118, 119, 121], "anyon": 0, "anyth": [0, 26, 42, 47, 59, 86], "anywai": [0, 114], "aom": [26, 42, 48, 60], "apart": 17, "api": [1, 5, 6, 8, 9, 12, 22, 24, 26, 42, 58, 72, 73, 80, 82, 96, 116, 119], "api_specif": [12, 26, 42, 58, 80], "apic": 83, "app": 105, "appear": [3, 18, 22, 24, 26, 27, 29, 42, 47, 50, 56, 59, 62, 72, 73, 77, 79, 80, 86, 116, 117], "append": [17, 18, 22, 24, 26, 27, 29, 42, 47, 50, 54, 56, 59, 62, 72, 73, 77, 79, 80, 92, 94, 108, 114, 116], "append_singl": [26, 42, 54, 72, 80, 121], "appli": [3, 8, 12, 16, 17, 22, 24, 26, 42, 72, 78, 80, 81, 82, 83, 112, 115, 116, 125], "applic": [24, 26, 80, 100, 109, 114, 116, 123], "apply_permut": [22, 26, 115], "appreci": 0, "approach": [26, 42, 103, 121], "appropri": [0, 22, 26, 29, 42, 78, 86, 93, 97, 99, 104, 109], "approv": [0, 100], "approxim": [17, 22, 26, 78], "ar": [0, 1, 3, 5, 8, 9, 12, 17, 18, 20, 21, 22, 24, 26, 27, 29, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 86, 87, 88, 90, 91, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125], "arang": [3, 6, 17, 22, 24, 26, 29, 42, 47, 48, 50, 52, 54, 58, 59, 60, 62, 63, 64, 72, 73, 79, 80, 82, 90, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 123], "arbitrari": [22, 26, 42, 115], "arbitrarili": [18, 26, 42, 50, 62, 123], "arccosin": 8, "arch": 83, "arch_cap": 83, "arch_string_raw": 83, "architectur": 83, "archiv": [26, 42, 101], "arcsin": 8, "arctang": 8, "area": [17, 26, 42, 70, 78, 83], "aren": [101, 102], "arg": [0, 3, 22, 24, 26, 27, 42, 48, 54, 57, 58, 60, 70, 72, 73, 79, 80, 82, 103, 114, 116], "arg1": 82, "argmax": [13, 22, 24, 26, 42, 47, 54, 59, 72, 73, 79, 80, 108, 112, 116, 117], "argmaxk": [26, 42, 47, 59, 72, 79, 80, 108, 112, 117], "argmin": [13, 22, 24, 26, 42, 47, 54, 59, 72, 73, 79, 80, 108, 112, 116, 117], "argmink": [26, 42, 47, 59, 72, 79, 80, 108, 112, 117], "argpars": 104, "argpartit": [26, 42], "args1": 3, "args2": 3, "argsort": [15, 18, 19, 22, 24, 26, 27, 42, 47, 52, 55, 59, 64, 72, 74, 80, 108, 111, 112, 113, 115, 116, 120, 125], "argument": [2, 3, 4, 15, 16, 17, 20, 21, 22, 24, 26, 29, 42, 47, 52, 54, 56, 58, 59, 64, 70, 72, 73, 77, 78, 80, 82, 103, 120, 122], "arithmet": [26, 42, 108, 119], "arkodua": [91, 92], "arkouda": [81, 83, 86, 88, 89, 93, 95, 100, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 123], "arkouda_arrow_path": 1, "arkouda_client_directori": [1, 71], "arkouda_client_mod": 1, "arkouda_client_timeout": 1, "arkouda_config_fil": [87, 103], "arkouda_develop": [1, 87], "arkouda_full_stack_test": 1, "arkouda_hdf5_path": 1, "arkouda_hom": 1, "arkouda_iconv_path": 1, "arkouda_idn2_path": 1, "arkouda_key_fil": 1, "arkouda_log_level": [1, 26, 42, 72], "arkouda_mem_alloc": 19, "arkouda_numlocal": 1, "arkouda_password": 1, "arkouda_print_passes_fil": 1, "arkouda_quick_compil": [1, 87, 102], "arkouda_root": 83, "arkouda_serv": [1, 19, 23, 26, 38, 39, 42, 84, 87, 88, 97, 99, 103, 124], "arkouda_server_aggregation_dst_buff_s": 1, "arkouda_server_aggregation_src_buff_s": 1, "arkouda_server_aggregation_yield_frequ": 1, "arkouda_server_connection_info": 1, "arkouda_server_host": 1, "arkouda_server_port": 1, "arkouda_server_user_modul": [1, 103], "arkouda_skip_check_dep": 1, "arkouda_supported_dtyp": [23, 26, 38, 39, 42], "arkouda_supported_int": [23, 26, 38, 39, 42], "arkouda_tunnel_serv": 1, "arkouda_typ": [22, 26, 27, 29, 42, 47, 56, 59, 72, 77, 79, 80], "arkouda_verbos": 1, "arkouda_vers": 92, "arkouda_zmq_path": 1, "arkoudalogg": [24, 26, 32, 42, 56, 72, 77, 80, 116], "arkoudavers": 0, "arm64": 102, "around": [0, 5, 9, 20, 26, 42, 70, 80, 86, 88], "arr": [4, 26, 29, 42, 49, 61], "arr1": 3, "arr2": [3, 26, 42, 50, 62], "arr_t": [26, 42], "arrai": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 29, 31, 33, 38, 39, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 69, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 91, 92, 97, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 125], "array_api": [26, 81], "array_dtyp": 82, "array_lik": 17, "array_nd": 82, "array_object": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 81], "arrays2": [26, 27], "arrays_and_dtyp": 7, "arraysetop": 123, "arraysetopsmsg": 82, "arrayview": [92, 119], "arri": [58, 80], "arriv": 21, "arrow": [1, 104], "artifact": 71, "artist": 117, "as_compon": [26, 42, 58, 80], "as_index": [22, 26, 115], "as_paramet": [26, 42], "as_perc": 19, "as_seri": [22, 26], "as_strid": [26, 42], "asarrai": [5, 6, 9, 17], "ascend": [13, 22, 24, 26, 27, 42, 47, 59, 72, 73, 79, 80, 110, 115, 117, 122], "ascii": 83, "asia": [26, 42, 57, 79], "asin": 8, "asinh": 8, "ask": 0, "assembl": [26, 42, 56, 72, 77, 80], "assert": [26, 78], "assert_": [26, 78], "assert_almost_equ": [26, 78], "assert_almost_equival": [26, 78], "assert_arkouda_array_equ": [26, 78], "assert_arkouda_array_equival": [26, 78], "assert_arkouda_pdarray_equ": [26, 78], "assert_arkouda_segarray_equ": [26, 78], "assert_arkouda_strings_equ": [26, 78], "assert_attr_equ": [26, 78], "assert_categorical_equ": [26, 78], "assert_class_equ": [26, 78], "assert_contains_al": [26, 78], "assert_copi": [26, 78], "assert_dict_equ": [26, 78], "assert_equ": [26, 78], "assert_equival": [26, 78], "assert_frame_equ": [26, 78], "assert_frame_equival": [26, 78], "assert_index_equ": [26, 78], "assert_index_equival": [26, 78], "assert_is_sort": [26, 78], "assert_series_equ": [26, 78], "assert_series_equival": [26, 78], "assertionerror": [26, 78], "asset": 97, "assig": 118, "assign": [0, 18, 22, 24, 26, 42, 72, 73, 80, 91, 92, 108, 113, 116, 121, 125], "assist": [0, 103], "associ": [0, 1, 22, 26, 29, 42, 52, 58, 64, 73, 80, 83, 86, 109, 120, 121, 122], "assum": [2, 13, 17, 22, 24, 26, 29, 42, 48, 50, 52, 60, 62, 64, 67, 72, 73, 75, 79, 80, 86, 91, 92, 93, 101, 102, 106, 109, 115, 116, 120, 122, 123], "assume_sort": [24, 26, 42, 72, 80, 116, 123], "assume_uniqu": [26, 42, 50, 62, 123], "assumpt": [18, 26, 42, 47, 48, 56, 59, 60, 72, 77, 79, 80, 109, 113, 119], "astyp": [7, 22, 26, 42, 47, 56, 59, 72, 77, 79, 80], "atan": 8, "atan2": 8, "atanh": 8, "atol": [26, 78], "atom": 21, "attach": [18, 20, 22, 24, 26, 27, 42, 47, 54, 56, 57, 58, 59, 72, 73, 77, 79, 80, 108, 116], "attach_al": [26, 42, 58, 80], "attach_pdarrai": [26, 42, 47, 59], "attahc": [26, 42, 47, 59, 72, 79, 80], "attempt": [18, 22, 24, 26, 27, 29, 42, 47, 54, 55, 56, 57, 59, 72, 73, 74, 77, 79, 80, 99, 109, 115, 116], "attent": 83, "attr": [26, 78], "attribut": [9, 18, 22, 27, 29, 47, 56, 57, 59, 67, 75, 77, 78, 109, 119], "attributeerror": [26, 42], "attributi": [67, 75], "augment": 100, "authent": [19, 71, 97, 124], "author": 0, "author_tim": 83, "auto": [70, 81, 86], "autoapi": [81, 104], "autoclass": 110, "autodoc": 104, "autofunct": [121, 125], "autom": [1, 86], "automat": [1, 3, 18, 26, 29, 42, 73, 92, 100, 109, 113, 122], "automethod": 125, "autopackagesummari": 104, "autosav": 83, "avail": [1, 19, 26, 29, 42, 47, 59, 70, 72, 79, 80, 83, 88, 92, 100, 105, 109, 117], "avail_mem": 19, "averag": [24, 26, 42, 47, 48, 59, 60, 72, 80, 83, 112, 116], "avoid": [0, 26, 42, 85, 88], "avx": 83, "avx2": 83, "awar": 0, "awk": 105, "ax": [0, 5, 9, 12, 16, 17, 22, 26, 42, 47, 57, 59, 70, 72, 79, 80, 112, 117], "axi": [10, 11, 12, 13, 15, 16, 17, 22, 26, 27, 42, 47, 49, 54, 55, 57, 59, 61, 63, 72, 73, 74, 79, 80, 111, 112, 115, 117, 121, 122], "axis1": [26, 42], "axis2": [26, 42], "b": [18, 19, 22, 24, 26, 27, 29, 31, 42, 47, 48, 50, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 68, 70, 72, 73, 74, 76, 77, 78, 79, 80, 90, 107, 111, 112, 115, 116, 117, 118, 119, 120, 123], "b_np": 117, "b_width": 117, "back": [20, 22, 24, 26, 42, 58, 72, 80, 85, 88, 109, 116], "backbon": 119, "backend": [22, 26, 73, 85, 99], "backward": [26, 42, 54, 58, 72, 80], "badvalu": 70, "balanc": [18, 26, 42, 56, 72, 77, 80], "bandwidth": [26, 42, 48, 60, 72, 109], "bar": 117, "barcontain": 117, "base": [0, 1, 2, 3, 5, 8, 14, 18, 20, 22, 23, 25, 26, 27, 29, 32, 38, 39, 42, 47, 55, 57, 58, 59, 65, 70, 72, 74, 79, 80, 86, 99, 102, 106, 109, 110, 111, 112, 113, 115, 119, 122, 125], "basetyp": [26, 42], "bash": [101, 102], "bashrc": [101, 102, 105], "basic": [19, 26, 27, 42, 47, 59, 71, 72, 79, 80, 86, 105, 119], "bear": [0, 86, 101, 102], "bebbxjhgm": [26, 42, 48, 60], "becaus": [18, 22, 26, 27, 29, 42, 48, 52, 54, 56, 60, 64, 72, 77, 78, 80, 87, 90, 91, 92, 93, 97, 109, 113, 114, 115, 121, 125], "becom": [26, 42], "been": [1, 18, 19, 22, 26, 29, 42, 47, 49, 50, 54, 56, 59, 61, 62, 72, 77, 80, 84, 85, 86, 99, 103, 112, 113, 114], "befor": [0, 12, 13, 17, 21, 26, 42, 49, 57, 61, 79, 83, 99, 100, 109], "begin": [0, 5, 9, 17, 26, 42, 56, 72, 77, 80, 118], "behav": [0, 26, 42], "behavior": [0, 5, 21, 22, 26, 42, 47, 48, 52, 59, 60, 64, 82, 112, 114, 115, 120, 125], "behaviour": [26, 42], "behind": [26, 42], "being": [21, 22, 26, 27, 29, 42, 47, 59, 72, 73, 78, 79, 80, 82, 90, 92, 93, 94, 100, 103, 109, 115, 118, 122], "believ": 86, "belong": [18, 26, 42, 113], "below": [6, 26, 42, 63, 70, 83, 84, 90, 101, 102, 104, 109, 115], "bench_decod": 83, "bench_encod": 83, "benchmark": [87, 89, 103, 104, 107], "benchmark_v2": 83, "benefici": [83, 94], "berkelei": [22, 26], "best": [0, 3, 70], "beta": [52, 64, 120], "better": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80], "between": [1, 6, 17, 18, 19, 22, 23, 26, 31, 38, 39, 42, 47, 48, 56, 57, 58, 59, 60, 72, 77, 79, 80, 83, 90, 103, 114, 117, 119, 125], "bewar": [26, 42], "beyond": [12, 26, 42, 47, 59, 90, 112], "bi_end": 3, "bi_start": 3, "bi_val": 3, "bia": 26, "big": [23, 26, 38, 39, 42], "biggest": 87, "bigint": [23, 26, 38, 39, 42, 47, 48, 59, 60, 72, 79, 80, 83, 109, 114, 119], "bigint_from_uint_arrai": [3, 26, 42, 47, 48, 59, 60, 72, 79, 80], "bigint_to_uint_arrai": [26, 42, 47, 48, 59, 60, 72, 79, 80], "bin": [26, 42, 47, 59, 63, 70, 72, 79, 80, 99, 101, 102, 105, 117], "binari": [20, 26, 42, 48, 60, 80, 101, 102, 112], "bind": 99, "binomi": [52, 64, 120], "binop": [18, 22, 26, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80], "bit": [0, 7, 18, 20, 23, 26, 29, 38, 39, 42, 47, 48, 54, 56, 59, 60, 72, 77, 79, 80, 83, 87, 109, 114, 115, 119], "bittyp": [23, 26, 38, 39, 42], "bitvector": [20, 26, 80], "bitwis": [8, 24, 26, 42, 72, 80, 116, 119], "bitwise_and": 8, "bitwise_invert": 8, "bitwise_left_shift": 8, "bitwise_or": 8, "bitwise_right_shift": 8, "bitwise_xor": 8, "black": [0, 104, 117], "block": [0, 18, 21, 26, 42, 50, 56, 62, 72, 73, 77, 80, 82, 90, 114], "blosc": [26, 29], "blue": [26, 27], "bmi1": 83, "bmi2": 83, "bob": [22, 26, 115], "bodi": 0, "bool": [3, 6, 7, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 38, 39, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 72, 73, 74, 77, 78, 79, 80, 83, 92, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125], "bool_": [18, 26, 42, 47, 48, 52, 56, 57, 59, 60, 64, 72, 77, 79, 80, 112, 114, 118, 119], "bool_onli": [22, 26], "bool_scalar": [18, 23, 26, 27, 38, 39, 42, 47, 56, 59, 72, 73, 77, 79, 80], "boolean": [3, 7, 8, 17, 18, 22, 23, 24, 26, 33, 38, 39, 42, 47, 50, 54, 56, 59, 62, 72, 73, 77, 79, 80, 90, 92, 113, 115, 116, 117, 118, 119, 121, 122, 123, 125], "boost": 99, "borrow": [26, 42, 82], "both": [3, 12, 19, 22, 24, 26, 27, 29, 31, 42, 47, 50, 52, 57, 59, 62, 64, 72, 78, 79, 80, 87, 90, 92, 93, 97, 99, 109, 113, 123, 125], "bottleneck": 85, "bottom": [26, 42, 47, 59, 72, 79, 80, 86], "bound": [26, 42, 47, 48, 52, 54, 57, 59, 60, 64, 72, 79, 80, 114], "boundari": [26, 42, 52, 57, 64, 79, 120], "box": [52, 64, 86, 120], "branch": [0, 83, 86, 99], "brand_raw": 83, "break": [26, 42], "brew": 102, "bring": 86, "broad": 0, "broadcast": [12, 22, 24, 26, 42, 47, 58, 59, 72, 80, 108, 112, 116], "broadcast_arrai": 12, "broadcast_dim": [26, 42, 58, 80], "broadcast_to": 12, "broadcast_to_shap": [26, 42, 47, 59], "brotli": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83, 94], "brown": 90, "browser": 99, "buffer": [1, 6, 22, 24, 26, 42, 70, 72, 73, 80], "bug": [26, 42, 86, 89], "build": [1, 24, 26, 42, 72, 80, 82, 83, 86, 89, 97, 100, 101, 105, 116, 124], "build_from_compon": [24, 26, 42, 72, 80, 108, 116], "built": [0, 18, 26, 42, 47, 56, 59, 72, 77, 79, 80, 84, 86, 87, 88, 97, 99, 101, 102, 103, 109, 113, 119, 125], "builtin": [26, 42, 47, 59, 72, 79, 80], "bump": [84, 101, 102], "bundl": [101, 102], "button": 86, "bydayofweek": 116, "bypass": [26, 42], "byte": [18, 22, 26, 27, 29, 31, 42, 47, 48, 54, 56, 58, 59, 60, 67, 70, 72, 73, 75, 77, 79, 80, 92, 97, 109, 113, 115, 119, 125], "bytearrai": 70, "byteord": [23, 26, 38, 39, 42], "bytes_attrib": [26, 42, 56, 72, 77, 80], "bytes_or_buff": [22, 24, 26, 42, 70, 72, 73, 80], "bytes_s": [26, 42, 56, 72, 77, 80], "bytesio": [26, 42], "byteswap": [26, 42], "c": [18, 22, 26, 27, 42, 48, 50, 54, 56, 58, 60, 62, 63, 72, 73, 77, 79, 80, 83, 85, 87, 101, 107, 115, 119, 123], "c1": 112, "c2": [18, 26, 42, 112], "c_contigu": [26, 42], "c_cpy": [18, 26, 42], "c_doubl": [26, 42], "c_int": [26, 42], "c_intp": [26, 42], "c_long": [26, 42], "c_long_array_2": [26, 42], "c_longlong": [26, 42], "c_short": [26, 42], "c_string": 92, "c_uint": [26, 42], "c_uint32": [26, 42], "c_uint64": [26, 42], "c_ulong": [26, 42], "c_void_p": [26, 42], "ca": [26, 42], "cach": [2, 18, 21, 26, 42, 56, 72, 77, 80], "cached_regex_pattern": [26, 42, 56, 72, 77, 80], "cachedaccessor": [2, 26], "calc_string_offset": [26, 29, 109], "calcul": [17, 22, 24, 26, 29, 42, 47, 50, 59, 62, 70, 72, 80, 83, 92, 109, 112, 116, 123], "calculu": [33, 125], "call": [4, 5, 9, 17, 18, 19, 20, 21, 22, 24, 26, 29, 42, 47, 48, 52, 54, 56, 59, 60, 64, 67, 70, 72, 73, 75, 77, 78, 79, 80, 82, 90, 94, 97, 99, 102, 103, 109, 112, 114, 115, 116, 119, 120, 124], "callabl": [4, 5, 20, 22, 26, 80, 115], "callback": [20, 26, 80], "caller": [22, 26, 73, 115], "came": [26, 42, 54, 72, 80], "can": [1, 3, 4, 5, 7, 9, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 38, 39, 42, 47, 48, 50, 52, 54, 56, 57, 59, 60, 62, 64, 70, 71, 72, 73, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 99, 100, 101, 102, 103, 104, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125], "can_cast": [7, 23, 26, 38, 39, 42], "cannot": [3, 12, 18, 20, 22, 24, 26, 27, 29, 42, 47, 48, 54, 56, 57, 59, 60, 72, 73, 77, 78, 79, 80, 94, 105, 109, 113, 116, 119], "capac": 119, "capit": [26, 42, 56, 72, 77, 80], "capitilz": [26, 42, 56, 72, 77, 80], "captur": [1, 33, 125], "care": 83, "carol": [22, 26, 115], "carrai": [26, 42], "carri": [26, 42, 57, 79, 80], "case": [17, 18, 19, 24, 26, 27, 29, 42, 47, 52, 56, 57, 59, 64, 70, 72, 73, 77, 79, 80, 83, 85, 90, 91, 92, 94, 99, 101, 103, 105, 112, 117, 120, 122], "cask": 102, "caskroom": [99, 102], "cast": [3, 5, 7, 17, 20, 23, 26, 38, 39, 42, 47, 48, 49, 56, 59, 60, 61, 72, 77, 79, 80, 82, 108, 109, 114, 125], "castabl": [26, 69], "castarrai": 82, "castmsg": 82, "cat": [18, 26, 29, 42, 105], "catch": 0, "categor": [22, 24, 26, 27, 29, 42, 50, 55, 58, 62, 72, 73, 74, 78, 80, 81, 108, 111, 112, 114, 115, 116, 117, 119, 122, 123], "categori": [0, 18, 26, 42, 55, 74, 78, 80, 86, 92, 108, 111, 113], "categorical_arrai": [18, 26, 42], "categorical_test": 0, "categoricaltest": 0, "cattwo": [18, 26, 42], "caus": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 97, 99], "caution": [18, 26, 42, 47, 48, 56, 59, 60, 72, 77, 79, 80, 109, 113, 119], "ccflag": 1, "cd": [84, 97, 99, 100, 101, 102, 104], "cdf": [52, 64, 70, 120], "cdot": [52, 64, 120], "ceg": [26, 42], "ceil": 8, "cell": [22, 26], "cento": 101, "central": [42, 70], "certain": [26, 42, 47, 59, 84, 103, 112], "cfg": [1, 26, 29, 87, 88, 103], "chang": [1, 20, 22, 26, 27, 29, 42, 47, 59, 72, 79, 80, 83, 86, 88, 97, 100, 101, 102, 104, 109, 112, 115], "channel": [19, 124], "chapel": [19, 21, 82, 85, 87, 92, 96, 97, 103, 104, 105, 106, 119, 124, 125], "chapel_vers": 97, "char": [26, 42, 56, 72, 77, 80, 81], "charact": [18, 19, 20, 25, 26, 42, 48, 56, 60, 72, 73, 77, 80, 103], "check": [0, 1, 3, 17, 18, 22, 24, 26, 27, 29, 42, 47, 54, 56, 58, 59, 70, 72, 77, 78, 79, 80, 82, 86, 87, 88, 100, 107, 113, 123, 124], "check_categor": [26, 78], "check_category_ord": [26, 78], "check_column_typ": [26, 78], "check_dtyp": [26, 78], "check_exact": [26, 78], "check_frame_typ": [26, 78], "check_index": [26, 78], "check_index_typ": [26, 78], "check_lik": [26, 78], "check_nam": [26, 78], "check_ord": [26, 78], "check_sam": [26, 78], "check_series_typ": [26, 78], "checker": [26, 42], "checkout": 88, "checkpoint": [26, 29], "chess": [52, 64, 120], "chi": 70, "chi2": 70, "chipset": 102, "choic": [26, 42, 48, 52, 60, 64, 79, 99, 108], "choos": [26, 42, 86, 102, 105, 112, 124], "chosen": [3, 26, 42, 47, 59, 112, 119, 121], "chpl": [1, 26, 29, 82, 87, 99, 100, 101, 102, 103], "chpl_comm": [84, 101, 102], "chpl_comm_remote_prefetch": 21, "chpl_debug_flag": 1, "chpl_develop": [87, 102], "chpl_flag": [1, 85], "chpl_gasnet_cfg_opt": 84, "chpl_gmp": [101, 102], "chpl_home": [84, 99, 101, 102], "chpl_llvm": [101, 102], "chpl_re2": [101, 102], "chpl_rt_oversubscrib": 84, "chpl_target_compil": 85, "chpl_target_cpu": 102, "chpl_test_timeout": 84, "chplconfig": 101, "chpldoc": [99, 101], "chunk": [5, 9, 18, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80], "chunk_info": [5, 9], "chunk_shap": [26, 29], "ci": [0, 100], "circl": 17, "circumst": [26, 42], "cl": [2, 26, 113], "clang": [85, 101], "class": [0, 48, 60, 78, 82, 83, 108, 109, 110, 113, 114, 115, 116, 120, 121, 122, 125], "classmethod": [18, 20, 26, 27, 42, 54, 72, 80, 113], "claus": 112, "clean": 99, "clear": [26, 42, 47, 59], "clflush": 83, "clflushopt": 83, "click": [86, 99, 100, 106], "client": [5, 9, 18, 22, 23, 26, 38, 39, 42, 47, 48, 56, 57, 59, 60, 72, 77, 78, 79, 80, 81, 93, 99, 101, 102, 103, 104, 105, 108, 113, 115, 119, 121, 125], "client_dtyp": [26, 29, 81], "clientgeneratedlog": [26, 32], "clip": [17, 26, 42], "clobber": 99, "clone": 106, "clongdoubl": [26, 42], "close": [0, 3, 17, 26, 42, 48, 57, 60, 79, 82, 90, 114], "closest": [26, 42], "clz": [26, 42, 47, 59, 72, 79, 80], "cm_version": 101, "cmake": [101, 104], "cmd": [26, 42, 82, 103], "cmd_filter": 19, "cmov": 83, "co": [8, 17, 24, 26, 42, 72, 80, 108, 112, 116], "coargsort": [22, 26, 42, 55, 74, 80, 108, 111, 113, 115, 125], "code": [1, 18, 26, 27, 29, 42, 55, 74, 78, 80, 86, 87, 90, 92, 100, 103, 108, 111, 113], "coeffici": [26, 42, 47, 59, 72, 79, 80], "col": [26, 63, 68, 76], "col1": [22, 26, 115], "col2": [22, 26, 115], "col2_i": [22, 26], "col2_x": [22, 26], "col3": [22, 26, 115], "col_a": [22, 26], "col_b": [22, 26], "col_c": [22, 26], "col_delim": [22, 26, 27, 29, 42, 47, 56, 59, 72, 77, 79, 80], "col_nam": [26, 29], "cola": 91, "colb": 91, "colc": 91, "collaps": [26, 42, 47, 56, 59, 72, 77, 79, 80], "collect": [18, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 65, 70, 72, 77, 79, 80, 101, 116], "collis": [18, 26, 42, 56, 72, 77, 80], "colnam": [22, 26], "colors2": [26, 27], "column": [3, 6, 18, 21, 22, 24, 26, 27, 29, 42, 47, 54, 55, 56, 59, 63, 68, 72, 73, 74, 76, 77, 78, 79, 80, 90, 91, 94, 95, 109, 111, 116, 121, 122], "column_data": 90, "column_delim": [26, 29, 109], "column_nam": 90, "columnar": 109, "com": [0, 101, 102], "combin": [17, 22, 26, 42, 56, 57, 58, 72, 77, 79, 80, 82, 88], "come": [24, 26, 42, 80, 88, 109, 114, 123], "comm_diagnost": [26, 81], "comma": [4, 26, 83, 91, 99], "command": [19, 25, 26, 42, 47, 59, 72, 79, 80, 82, 83, 84, 86, 88, 97, 99, 100, 102, 103, 104, 105, 124], "command_filt": [19, 25], "commandlin": 83, "commandmap": [19, 82, 103], "comment": [0, 87, 103], "commit": [0, 86], "commit_info": 83, "common": [0, 3, 12, 24, 26, 42, 48, 50, 60, 62, 72, 80, 105, 109, 116, 123, 125], "common_typ": [26, 42, 49, 61], "commonli": 90, "commun": [1, 21, 26, 42, 55, 74, 80, 86, 102, 111, 114], "compar": [18, 26, 27, 42, 47, 56, 59, 70, 72, 77, 78, 79, 80, 86, 107, 109], "compare_kei": [26, 78], "comparison": [83, 91, 113, 119, 121, 125], "compat": [8, 18, 22, 26, 42, 47, 54, 57, 58, 59, 72, 79, 80, 115, 116], "compatibleshap": [26, 42, 47, 59, 72, 79, 80], "compet": 1, "compil": [19, 26, 42, 56, 72, 77, 80, 85, 88, 89, 99, 101, 102, 103, 105], "complementari": [26, 42, 47, 59], "complet": [18, 19, 21, 22, 26, 42, 47, 54, 56, 59, 70, 72, 77, 79, 80, 82, 84, 86, 99, 124, 125], "complex": [3, 8, 26, 42, 97], "complex128": [23, 26, 38, 39, 42], "complex64": [23, 26, 38, 39, 42], "complexwarn": [26, 42], "compliant": [5, 6], "complic": [26, 42], "compon": [3, 18, 20, 22, 24, 26, 27, 28, 42, 47, 54, 56, 57, 58, 59, 72, 73, 77, 79, 80, 83, 92, 94, 116], "compos": [26, 42, 48, 56, 60, 72, 77, 80, 97, 109], "composit": [17, 26, 42, 56, 72, 77, 80], "composite_trapezoidal_rule_illustr": 17, "compress": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83, 118], "compris": 125, "comput": [5, 7, 8, 9, 16, 17, 18, 19, 22, 24, 26, 31, 42, 47, 54, 56, 57, 59, 69, 72, 77, 79, 80, 82, 90, 109, 112, 113, 115, 116, 117, 119, 123, 125], "computation": 90, "compute_join_s": 31, "concat": [12, 22, 26, 27, 42, 54, 72, 73, 80, 115, 122], "concaten": [12, 18, 22, 26, 42, 49, 50, 54, 56, 58, 61, 62, 72, 73, 77, 80, 82, 108, 121, 122, 125], "concept": 113, "concis": 86, "concret": [23, 26, 38, 39, 42], "concurr": [0, 109], "cond": 112, "conda": [97, 101, 102, 104], "conda_prefix": [97, 99], "condens": [26, 42, 54, 72, 80], "condit": [3, 13, 22, 26, 42, 47, 59, 70, 112], "conf": 105, "confid": 70, "config": [19, 82, 103], "configur": [0, 1, 26, 29, 42, 72, 82, 83, 90, 102, 105, 110, 115, 122], "confirm": [0, 26, 42, 86], "conflict": 0, "conform": 82, "conj": [8, 26, 42], "conjug": [8, 26, 42], "conjunct": [18, 26, 42, 109, 113, 125], "connect": [18, 19, 22, 26, 27, 42, 48, 56, 58, 60, 69, 71, 72, 73, 77, 80, 82, 87, 105, 108, 109, 115], "connect_url": [19, 97, 124], "connectionerror": [19, 124], "consecut": [17, 26, 42, 48, 60, 72, 73, 80, 114], "consensu": [0, 86], "consequ": 101, "conserv": [20, 26, 80], "consid": [18, 22, 26, 42, 50, 62, 73, 86, 99, 123, 125], "consider": [24, 26, 80, 123, 125], "consist": [0, 17, 22, 26, 42, 48, 60, 72, 90, 101, 102, 112, 114, 115], "consol": [26, 42, 72, 100], "const": 82, "constant": [17, 22, 24, 26, 42, 47, 59, 72, 79, 80, 108, 116], "constant_tsc": 83, "constant_valu": 17, "construct": [5, 6, 9, 18, 26, 42, 48, 54, 56, 60, 72, 77, 80, 82, 90, 108, 116, 118], "constructor": [18, 26, 42, 52, 54, 64, 72, 90, 113, 120], "consum": [26, 27, 42, 73], "conta": [26, 42, 56, 72, 77, 80], "contain": [3, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 33, 42, 47, 48, 50, 52, 54, 55, 56, 57, 59, 60, 62, 63, 64, 67, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 87, 88, 90, 91, 92, 97, 99, 103, 107, 108, 109, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 125], "content": [1, 91, 105, 109], "contigu": [18, 26, 31, 42, 56, 72, 77, 80], "continu": [0, 70, 86, 100], "contribut": [22, 26, 73], "contributor": 0, "control": [1, 20, 26, 42, 49, 61, 82, 119], "conveni": [26, 42, 72, 101, 102, 109], "convent": [18, 26, 42], "convers": [0, 18, 26, 42, 109, 113, 119, 125], "convert": [5, 6, 9, 18, 20, 22, 23, 26, 27, 38, 39, 42, 47, 48, 54, 56, 57, 58, 59, 60, 70, 72, 73, 77, 78, 79, 80, 91, 109, 113, 115, 119, 122, 123, 125], "convert_byt": [58, 80], "convert_categor": [22, 26, 29], "convert_if_categor": [26, 58, 80], "convert_int": [22, 26], "cool": 0, "coordin": 6, "copi": [5, 6, 7, 9, 12, 15, 22, 24, 26, 27, 29, 42, 47, 49, 52, 54, 55, 56, 59, 61, 64, 72, 74, 77, 78, 79, 80, 120], "copy_with": [26, 42], "copyto": [26, 42], "core": [22, 25, 26, 42, 83, 86, 115], "corr": [22, 26, 42, 47, 59, 72, 79, 80], "correct": [3, 16, 22, 26, 42, 87, 101, 105, 107, 115], "correctli": [22, 26, 105, 115], "correl": [22, 26, 42, 47, 59, 72, 79, 80], "correspond": [3, 5, 9, 17, 18, 19, 20, 22, 24, 26, 27, 29, 30, 31, 33, 42, 47, 48, 54, 56, 58, 59, 60, 71, 72, 73, 77, 79, 80, 92, 94, 109, 112, 113, 115, 116, 117, 118, 122, 125], "cosh": 8, "cosin": [8, 112], "cosort": 3, "cosorted": 3, "cost": [18, 26, 42, 113], "could": [5, 9, 26, 42, 47, 54, 56, 59, 63, 72, 77, 79, 80, 82, 87, 103, 125], "count": [14, 21, 22, 24, 26, 34, 42, 47, 54, 56, 59, 72, 73, 77, 79, 80, 83, 90, 108, 112, 116], "counter": 21, "counter_nam": 83, "counterpart": 82, "coupl": 87, "cours": [26, 42, 47, 59, 72, 79, 80], "cov": [26, 42, 47, 59, 72, 79, 80], "covari": [26, 42, 47, 59, 72, 79, 80], "cover": [26, 42], "coverag": [26, 29], "cp_name": [26, 29], "cpp": 99, "cpu": 83, "cpuid": 83, "cpuinfo_vers": 83, "cpuinfo_version_str": 83, "cpython": 83, "crash": [26, 42], "crazi": 1, "creat": [0, 6, 12, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 34, 38, 39, 42, 47, 48, 54, 56, 57, 59, 60, 63, 67, 68, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 86, 88, 92, 94, 97, 99, 101, 102, 103, 104, 105, 108, 109, 113, 115, 116, 117, 119, 120], "create_pdarrai": [26, 42, 72, 79, 80, 82], "create_sparrai": [67, 75], "create_sparse_matrix": [68, 76], "creation": [5, 9, 18, 26, 42, 86, 108], "creation_funct": [9, 81], "critic": [26, 32], "cross": [26, 42], "crucial": 87, "csc": [67, 75], "csr": [67, 75], "csv": [22, 26, 27, 29, 42, 47, 56, 59, 72, 77, 79, 80, 95, 109], "csv_output": [22, 26], "ctrl": 87, "ctype": [26, 42], "ctypeslib": [26, 42, 81], "ctz": [26, 42, 47, 59, 72, 79, 80], "cuda": [26, 42, 47, 59, 72, 79, 80], "cumprod": [26, 42, 108, 112], "cumsum": [26, 42, 108, 112], "cumul": [16, 26, 42, 63, 70, 107, 112], "cumulative_sum": 16, "curl": 101, "current": [0, 12, 17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 42, 47, 48, 49, 52, 56, 59, 60, 61, 64, 67, 71, 72, 75, 77, 79, 80, 85, 86, 87, 91, 92, 93, 94, 100, 101, 102, 106, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125], "current_arkouda_vers": 92, "curv": 17, "custom": [2, 26, 32, 82, 91, 99, 117], "customiz": 109, "cut": [85, 86, 88], "cwd": [26, 29, 42, 47, 59, 72, 79, 80], "cx16": 83, "cx8": 83, "cycl": [102, 104], "d": [0, 5, 9, 18, 22, 26, 27, 42, 48, 49, 50, 52, 54, 56, 57, 58, 60, 61, 62, 63, 64, 72, 73, 77, 79, 80, 82, 90, 107, 120, 123], "dai": [22, 26, 42, 57, 79, 80, 86, 115, 116], "dangl": [4, 26], "darwin": [71, 102], "dash": 86, "dask": [5, 9], "data": [2, 5, 6, 7, 9, 12, 18, 20, 22, 23, 24, 26, 27, 29, 38, 39, 42, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 70, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 90, 93, 95, 96, 108, 110, 111, 113, 114, 116, 121, 122, 124, 125], "data2": [58, 80], "data_a": [26, 42], "data_type_funct": [9, 81], "databas": [22, 26], "datafram": [2, 21, 26, 27, 29, 63, 65, 73, 78, 81, 93, 109, 122], "dataframegroupbi": [22, 26, 115], "datalimit": [22, 26, 115], "datapar": 102, "dataset": [18, 20, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 91, 92, 94, 95, 116, 125], "dataset_nam": [26, 29, 109], "datasetnam": [26, 29, 109], "datatyp": [23, 26, 38, 39, 42, 48, 60, 67, 69, 72, 75, 79, 80, 92], "date": [26, 42, 57, 79, 80, 86], "date_oper": [2, 26], "date_rang": [26, 42, 57, 79], "datefram": [22, 26, 115], "dateoffset": [26, 42, 57, 79], "datetim": [26, 29, 42, 48, 57, 60, 79, 80, 83], "datetime64": [17, 26, 42, 48, 57, 60, 79, 80], "datetimeaccessor": [2, 26], "datetimeindex": [26, 42, 57, 79, 80], "dateutil": 104, "datsetnam": [26, 29], "day_of_week": [26, 42, 57, 79, 80], "day_of_year": [26, 42, 57, 79, 80], "dayofweek": [26, 42, 57, 79, 80, 116], "dayofyear": [26, 42, 57, 79, 80], "dd": 86, "ddof": [24, 26, 42, 47, 57, 59, 72, 79, 80, 112, 116, 117], "de": 83, "deactiv": 99, "deal": [20, 26], "dealloc": [26, 42], "debandi99": 0, "debug": [26, 32, 84, 88], "decid": 0, "decim": [26, 42, 56, 72, 77, 80], "decod": [22, 24, 26, 42, 56, 70, 72, 73, 77, 80], "decompos": 12, "decor": [26, 42], "decreas": [17, 26, 42, 47, 48, 59, 60, 72, 79, 80, 87, 112, 114, 117], "dedup": [22, 26, 115], "dedupl": 108, "deep": [26, 42, 54, 72, 80, 115], "def": [4, 26, 82, 91, 103], "defalt": [26, 42, 47, 59, 72, 79, 80, 117], "default": [1, 3, 6, 12, 13, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 91, 92, 97, 101, 102, 103, 105, 107, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125], "default_log_format": [26, 42, 72], "default_rng": [22, 26, 52, 64, 120], "defaultt": [26, 32], "defin": [3, 5, 18, 20, 22, 23, 24, 25, 26, 27, 29, 32, 38, 39, 42, 47, 48, 54, 56, 57, 59, 60, 70, 72, 73, 77, 79, 80, 82, 86, 113, 114, 115, 116, 117, 119], "definit": [17, 26, 27], "degener": [12, 26, 42], "degrad": [26, 42, 47, 59, 112], "degre": [16, 24, 26, 42, 47, 59, 70, 72, 80, 112, 116], "degred": [26, 42, 47, 59, 112], "deleg": [26, 42, 48, 52, 60, 64, 72, 114, 117], "delet": [18, 19, 20, 22, 24, 26, 27, 29, 30, 42, 47, 49, 54, 56, 57, 59, 61, 72, 73, 77, 79, 80, 83, 88, 97, 116], "delete_directori": 30, "delimit": [22, 26, 27, 29, 30, 42, 47, 56, 59, 67, 72, 73, 75, 77, 79, 80, 83, 86, 91, 109, 125], "delimited_file_to_dict": 30, "delta": [24, 26, 31, 42, 47, 59, 72, 80, 112, 116], "demo": 90, "demonstr": [0, 82], "denomin": [26, 42, 47, 59], "denot": [22, 26, 27, 29, 42, 47, 56, 57, 59, 70, 72, 77, 79, 80], "dens": [3, 18, 24, 26, 42, 72, 80, 116], "densiti": [52, 64, 68, 70, 76, 120], "dep": [1, 99, 101, 102], "depend": [13, 22, 26, 29, 42, 47, 59, 92, 101, 102, 105, 106, 112, 121], "deprec": [18, 22, 24, 26, 27, 29, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 86, 92, 109, 116], "depth": [26, 42], "dequ": [26, 42, 48, 60, 72, 109], "deriv": [23, 26, 29, 30, 32, 38, 39, 42, 52, 56, 64, 72, 77, 80, 119, 120], "descend": [15, 22, 26, 42, 48, 60, 73, 114, 115, 122], "describ": [26, 42, 52, 64, 82, 86, 120], "descript": [26, 42, 83, 86, 90, 100, 108], "descriptor": [2, 26, 42, 56, 72, 77, 80], "design": [0, 26, 42, 52, 64, 86, 104, 109], "desir": [3, 17, 19, 20, 26, 42, 47, 48, 52, 59, 60, 64, 71, 72, 83, 84, 97, 100, 103, 112, 114, 119, 120, 124, 125], "despit": [26, 42], "destin": 12, "detail": [0, 12, 26, 28, 42, 47, 59, 70, 72, 79, 80, 83, 86, 99, 100, 101, 102, 104, 117, 124, 125], "detect": [22, 26, 29, 73, 92, 109], "determin": [7, 8, 12, 18, 22, 23, 24, 26, 27, 29, 38, 39, 42, 47, 49, 54, 56, 58, 59, 61, 72, 77, 79, 80, 86, 92, 103, 109, 113, 115, 116], "determinist": [18, 26, 42, 50, 62, 72, 73, 114], "dev": [0, 101, 102, 104], "devel": 101, "develop": [1, 18, 26, 42, 86, 87, 88, 100, 101, 102, 103, 106, 109], "deviat": [16, 24, 26, 42, 47, 48, 52, 57, 59, 60, 64, 70, 72, 79, 80, 112, 116, 117, 120], "devic": [5, 6, 9], "devicend": [26, 42, 47, 59, 72, 79, 80], "devicendarrai": [26, 42, 47, 59, 72, 79, 80], "devtoolset": 101, "df": [2, 22, 26, 70, 90, 115], "df1": [22, 26, 78], "df2": [22, 26, 78], "df_deep": 115, "df_shallow": 115, "diag": [26, 42], "diagnost": 21, "diagon": [6, 26, 42], "dic": [26, 78], "dict": [5, 18, 19, 22, 24, 26, 27, 28, 29, 30, 42, 52, 58, 64, 65, 72, 73, 78, 80, 115, 116, 120], "dict_to_delimited_fil": 30, "dictionari": [18, 19, 22, 24, 26, 29, 30, 42, 52, 56, 58, 64, 72, 77, 78, 80, 103, 109, 115, 116, 120], "did": [0, 19, 21], "diff": [17, 22, 26, 73, 117], "diffaggreg": [22, 26], "differ": [3, 5, 8, 17, 18, 19, 20, 22, 24, 26, 27, 29, 31, 42, 47, 48, 50, 54, 56, 57, 58, 59, 60, 62, 71, 72, 73, 77, 78, 79, 80, 83, 88, 90, 91, 92, 94, 101, 102, 108, 109, 114, 115, 116, 117, 123, 124], "differenc": [22, 26], "differenti": 70, "difficult": 103, "digit": [26, 42, 55, 56, 72, 74, 77, 80, 111], "dim": [26, 42], "dimens": [3, 5, 9, 12, 13, 16, 17, 18, 22, 26, 27, 29, 42, 47, 56, 57, 59, 67, 72, 75, 77, 79, 80, 90, 112, 113, 117, 119, 121], "dimension": [3, 5, 9, 17, 22, 26, 29, 42, 50, 62, 73, 119, 122, 123], "dir": 30, "direct": [3, 26, 42, 86, 92, 99], "directli": [5, 9, 17, 18, 22, 26, 42, 47, 55, 56, 59, 67, 72, 73, 74, 75, 77, 79, 80, 90, 99, 111, 113, 115, 119, 125], "directori": [18, 22, 24, 26, 27, 29, 30, 42, 47, 54, 56, 59, 71, 72, 77, 79, 80, 83, 84, 87, 88, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 116], "dirti": 83, "disabl": [26, 32, 84], "disable_gc": 83, "disableverbos": [26, 32], "disallow": [22, 24, 26, 42, 72, 80, 116], "discard": [3, 18, 26, 42, 113], "discard_empti": [26, 42, 54, 72, 80], "disconnect": [19, 26, 42, 47, 59, 72, 79, 80], "discourag": [26, 42, 113, 115, 119, 121, 125], "discov": 103, "discret": [17, 52, 64, 120], "discuss": 0, "disk": [22, 26, 27, 29, 42, 47, 56, 59, 72, 77, 79, 80, 125], "dispatch": [26, 78], "displai": [1, 20, 21, 22, 26, 27, 58, 63, 70, 73, 80, 99, 105, 115], "dist": 99, "distanc": 17, "distinct": [18, 22, 26, 42, 113], "distribut": [5, 9, 18, 20, 22, 24, 26, 27, 29, 42, 47, 48, 52, 54, 56, 59, 60, 63, 64, 68, 70, 72, 76, 77, 79, 80, 97, 101, 102, 109, 112, 113, 114, 116, 119, 120, 123], "distro": 101, "div": [26, 42, 47, 59], "divid": [8, 26, 42, 47, 59], "dividend": [26, 42, 47, 59], "divis": [8, 26, 42, 47, 59], "divisor": [24, 26, 42, 47, 59, 72, 80, 112, 116], "divmod": [26, 42, 47, 59], "dlpack": 6, "do": [1, 3, 17, 18, 19, 22, 24, 26, 27, 29, 42, 47, 52, 54, 56, 57, 59, 64, 72, 73, 77, 78, 79, 80, 83, 87, 88, 99, 101, 103, 104, 106, 112, 115, 116, 117, 120, 122], "doc": [0, 17, 22, 26, 73, 82, 99, 101], "docstr": [5, 8, 9, 82], "document": [0, 1, 26, 42, 70, 81, 82, 83, 87, 88, 90, 95, 102, 103], "doe": [18, 19, 22, 24, 26, 27, 29, 30, 42, 47, 48, 54, 56, 59, 60, 63, 70, 72, 73, 77, 78, 79, 80, 87, 90, 92, 94, 109, 113, 114, 115, 116, 119, 122, 124], "doesn": [0, 22, 26, 29, 42, 82, 86, 99], "dog": [22, 26, 73], "domain": 3, "don": [0, 3, 5, 9, 22, 26, 29, 42, 50, 56, 62, 72, 77, 80, 87, 88, 105], "done": [0, 22, 26, 42, 47, 57, 59, 72, 79, 80, 88, 99, 103, 112, 115, 117], "dot": [26, 42, 47, 59, 86], "doubl": [82, 100], "doubt": [0, 86], "down": [19, 85, 86, 88, 97, 99, 100, 103], "download": [97, 100, 101, 102, 106], "draft": 86, "draw": [26, 42, 48, 52, 60, 64, 120], "drawn": [26, 42, 48, 52, 60, 64, 114, 120], "drop": [22, 24, 26, 42, 47, 59, 72, 80, 86, 100, 112, 116], "drop_dupl": [22, 26, 115], "dropna": [22, 24, 26, 42, 72, 80, 108, 115, 116], "dt": [17, 23, 26, 31, 38, 39, 42, 73, 119], "dtype": [3, 4, 5, 6, 7, 9, 16, 18, 22, 24, 26, 27, 29, 31, 34, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 90, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 123], "dtypeobject": [23, 26, 38, 39, 42], "due": [18, 22, 26, 29, 42, 91, 94, 99, 109], "dump": [26, 42], "duplcat": [22, 26, 115], "duplic": [0, 3, 22, 26, 42, 50, 62, 115], "durat": [26, 42, 57, 79, 80], "dure": [0, 1, 26, 29, 42, 58, 80, 88, 90, 92, 93, 103, 104], "dx": 17, "dynam": [26, 42, 72], "e": [0, 1, 2, 3, 4, 8, 18, 20, 21, 22, 24, 26, 29, 42, 47, 48, 50, 52, 54, 56, 57, 59, 60, 62, 64, 72, 73, 77, 79, 80, 86, 87, 88, 97, 99, 101, 102, 104, 109, 112, 113, 114, 116, 117, 120, 121, 123, 124, 125], "each": [3, 4, 12, 14, 17, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 42, 47, 50, 52, 54, 56, 57, 58, 59, 62, 64, 67, 72, 73, 75, 77, 79, 80, 82, 83, 90, 92, 99, 103, 109, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 125], "eager": 104, "earli": [0, 21], "earlier": [58, 80, 90], "easi": [0, 26, 32, 83, 86, 90, 99], "easier": [26, 42], "easiest": 87, "easili": 90, "echo": [97, 99], "ecwo": [26, 42, 48, 60], "edg": [17, 26, 63, 117], "edgecolor": 117, "edit": 100, "effect": [22, 26, 42, 57, 79, 88, 123], "effici": [18, 22, 26, 27, 42, 47, 56, 59, 72, 77, 79, 80, 121, 125], "either": [0, 4, 13, 17, 18, 22, 24, 26, 28, 29, 42, 47, 48, 50, 52, 54, 59, 60, 62, 64, 72, 73, 79, 80, 82, 97, 103, 105, 109, 116, 120, 122, 123], "el7": 101, "el96": [26, 42, 48, 60], "elect": [92, 93], "element": [4, 5, 6, 8, 9, 10, 12, 13, 16, 17, 18, 22, 24, 26, 30, 31, 33, 42, 47, 48, 49, 50, 52, 54, 56, 57, 59, 60, 61, 62, 64, 67, 68, 72, 73, 75, 76, 77, 78, 79, 80, 82, 90, 103, 108, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125], "elementwis": [26, 42, 47, 59], "elementwise_funct": [9, 81], "elimin": [18, 26, 42, 94], "elk": [22, 26, 73], "ellips": 86, "ellipsi": [5, 6, 7, 9, 12, 13, 16, 17, 26, 42, 47, 48, 52, 58, 59, 60, 64, 72, 79, 80], "elo": [52, 64, 120], "els": [0, 22, 23, 26, 38, 39, 42, 47, 59, 72, 73, 79, 80, 82, 86, 117], "elsewher": [6, 26, 42, 47, 52, 59, 64, 112, 120], "emath": [44, 81], "empti": [3, 6, 20, 22, 24, 26, 29, 42, 47, 48, 50, 54, 56, 59, 60, 62, 72, 73, 77, 80, 99, 112, 114, 115, 117, 122], "empty_lik": 6, "en": [17, 82], "enabl": [3, 19, 26, 32, 42, 47, 59, 71, 72, 79, 80, 87, 99, 101, 103, 109, 124], "enableverbos": [26, 32], "encapsul": [26, 42, 48, 56, 60, 71, 72, 77, 80], "encod": [22, 24, 26, 42, 56, 70, 72, 73, 77, 80, 83, 125], "encoding_benchmark": 83, "encount": [0, 26, 29], "encourag": [100, 101, 102], "end": [3, 6, 17, 18, 22, 26, 31, 33, 42, 47, 48, 54, 56, 57, 59, 60, 72, 77, 79, 80, 85, 108, 113, 114, 118, 125], "endian": [23, 26, 38, 39, 42], "endpoint": [6, 17, 52, 64, 120], "endswith": [18, 26, 42, 56, 72, 77, 80, 108, 113, 125], "enlarg": [26, 42], "enough": [26, 42, 54, 56, 72, 77, 80, 82, 84, 92, 101, 102], "enrich_inplac": [58, 80], "ensur": [0, 3, 22, 26, 29, 42, 50, 62, 78, 86, 92, 99, 100, 102, 115, 119], "enter": [26, 73, 109, 122], "entir": [16, 22, 26, 42, 47, 54, 56, 57, 59, 72, 77, 79, 80, 83, 88, 112, 115, 117, 121], "entiti": [26, 42, 56, 72, 77, 80], "entri": [3, 6, 18, 22, 26, 27, 42, 47, 50, 56, 59, 62, 72, 73, 77, 78, 79, 80, 82, 83, 115, 123], "entropi": 70, "enum": [23, 26, 32, 38, 39, 42, 92], "enumer": [23, 26, 32, 38, 39, 42], "env": [1, 26, 42, 72, 87, 97, 99, 101, 102, 104], "env_nam": 104, "environ": [71, 83, 103, 104], "environmenterror": 71, "ep": 7, "epidemiologi": [52, 64, 120], "eql_kwarg": [26, 78], "equal": [8, 12, 17, 18, 22, 24, 26, 27, 31, 42, 47, 48, 52, 56, 59, 60, 64, 67, 68, 70, 72, 75, 76, 77, 78, 79, 80, 94, 114, 116, 117, 120, 121], "equal_level": [26, 27], "equiv": [26, 42, 49, 61, 78], "equival": [3, 18, 22, 24, 26, 27, 29, 42, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 70, 72, 74, 77, 78, 79, 80, 87, 90, 111, 112, 114, 123], "erm": 83, "err_msg": [26, 78], "error": [18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 32, 33, 42, 47, 48, 54, 56, 57, 59, 60, 67, 70, 72, 73, 75, 77, 79, 80, 92, 94, 105, 109, 112, 113, 115, 116, 117, 119, 124, 125], "errormod": 119, "especi": [0, 18, 22, 26, 42, 88, 99, 102, 113], "essenti": [22, 26, 42, 47, 54, 56, 59, 72, 77, 79, 80, 115], "estim": [17, 22, 24, 26, 42, 47, 59, 70, 72, 80, 112, 115, 116], "etc": [22, 26, 42, 73, 86, 101, 105], "ethan": 0, "eval": [97, 99], "evalu": [3, 17, 22, 26, 42, 47, 59, 72, 79, 80, 112, 117], "even": [18, 22, 24, 26, 42, 47, 59, 72, 80, 112, 115, 116, 124], "evenli": [6, 17, 26, 42, 48, 60, 114, 117], "event": [52, 64, 120], "everi": [0, 1, 3, 22, 26, 83, 115, 125], "everyth": [22, 26, 73, 85, 86], "evict": 21, "evolv": 86, "exact": [26, 78, 102], "exactli": [24, 26, 42, 57, 78, 79], "examin": [26, 42], "exampl": [0, 3, 4, 5, 9, 17, 18, 19, 22, 23, 24, 26, 27, 29, 33, 38, 39, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 69, 72, 73, 74, 77, 78, 79, 80, 83, 86, 92, 97, 102, 103, 105, 109, 111, 112, 114, 115, 116, 117, 119, 120, 123, 124, 125], "example_featur": 0, "exce": [18, 22, 23, 26, 38, 39, 42, 47, 48, 52, 56, 57, 58, 59, 60, 64, 72, 77, 79, 80, 109, 113, 114, 115, 119, 125], "excel": 86, "except": [0, 12, 17, 81, 82, 90, 101, 125], "exchang": 125, "exclud": [3, 24, 26, 42, 50, 62, 72, 80, 103, 116], "exclus": [1, 6, 26, 31, 42, 48, 50, 52, 60, 62, 64, 72, 80, 90, 114, 118, 120, 123], "execut": [1, 19, 21, 25, 26, 29, 42, 47, 56, 59, 72, 77, 80, 82, 84, 85, 87, 88, 91, 99, 100, 101, 103, 113, 124], "exhaust": [90, 92], "exhibit": [26, 42], "exist": [18, 19, 21, 22, 24, 26, 27, 29, 30, 42, 47, 48, 54, 56, 59, 60, 72, 73, 77, 79, 80, 92, 94, 99, 100, 114, 115, 116, 124], "exist_ok": [22, 26], "exit": [97, 105], "exp": [8, 26, 42, 48, 52, 60, 64, 70, 108, 112, 120], "expand": [12, 18, 22, 26, 27, 29, 42, 47, 54, 56, 58, 59, 72, 77, 79, 80, 109], "expand_dim": 12, "expandus": 71, "expans": 118, "expect": [0, 4, 22, 24, 26, 27, 29, 42, 47, 52, 56, 59, 64, 70, 72, 77, 79, 80, 83, 92, 101, 102, 109, 116, 119, 120], "expens": [18, 26, 42], "experi": [0, 109], "experiment": [4, 26, 42, 56, 72, 77, 80], "explan": [26, 42], "explicit": [92, 119], "explicitli": [1, 22, 26, 42, 50, 62, 103, 123], "explod": 101, "expm1": 8, "exponenti": [8, 52, 64, 108, 112], "export": [20, 26, 29, 80, 84, 87, 99, 101, 102, 105, 117], "export_uint": [20, 26, 80], "expos": [22, 24, 26, 42, 52, 64, 70, 72, 73, 80, 119, 120], "express": [3, 18, 26, 29, 42, 56, 72, 77, 80, 83, 108, 109, 113, 115, 118, 119], "extens": [2, 18, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 99, 100, 109], "extent": 83, "extern": [101, 102], "external_tool": [101, 102], "extra": [22, 26, 73], "extra_info": 83, "extract": 116, "extrem": [52, 64, 90, 92, 94, 120], "ey": [6, 26, 42], "f": [18, 22, 26, 42, 48, 52, 56, 60, 64, 70, 72, 77, 80, 82, 97, 101, 102, 104, 109, 112, 120], "f16c": 83, "f_contigu": [26, 42], "f_name": 90, "fa": [26, 42], "fac": [26, 42], "face": [26, 42, 54, 72, 80, 86, 119], "fact": 94, "factori": [26, 27, 42, 56, 72, 77, 80], "fail": [0, 5, 9, 22, 26, 29, 42, 86, 99, 109, 115, 119], "failur": [0, 26, 29, 99, 109], "fall": [0, 12, 58, 80], "fals": [3, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 38, 39, 42, 47, 48, 50, 52, 54, 56, 57, 58, 59, 60, 62, 64, 70, 72, 73, 77, 78, 79, 80, 83, 90, 107, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 123, 125], "famili": 83, "farrai": [26, 42], "fast": [1, 18, 26, 42, 56, 72, 77, 80], "faster": [3, 18, 26, 42, 50, 62, 87, 113, 123], "featur": [84, 85, 86, 87, 89, 99, 103, 108, 109, 116], "feder": [52, 64, 120], "feedback": 0, "feel": 0, "fetch": [86, 88], "few": 90, "fft": [42, 81], "fid": [26, 42], "fide": [52, 64, 120], "field": [20, 26, 42, 48, 56, 60, 72, 77, 80, 86, 109], "fig": 70, "figur": [26, 63, 88], "file": [0, 1, 17, 18, 19, 22, 24, 26, 27, 29, 30, 42, 47, 54, 56, 59, 71, 72, 73, 77, 79, 80, 82, 84, 87, 88, 93, 94, 97, 99, 100, 101, 102, 104, 105, 116, 125], "file_format": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80], "file_typ": [18, 20, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 116], "file_vers": 92, "filenam": [18, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83, 109, 116], "filename_cod": [26, 29], "fileno": [26, 42], "filenotfound": [26, 29], "filepath": 100, "filetyp": [26, 29, 109], "fill": [6, 22, 24, 26, 42, 47, 48, 52, 59, 60, 64, 72, 73, 79, 80, 83, 107, 114, 116, 120], "fill_val": [67, 75], "fill_valu": [6, 26, 42, 48, 60], "fill_values1": [26, 73], "fill_values2": [26, 73], "fill_values3": [26, 73], "fillna": [26, 73], "fillvalu": 3, "filname_cod": [26, 29], "filter": [0, 22, 25, 26, 42, 54, 72, 80, 109], "filter_by_rang": [22, 26], "filtered_df": [22, 26], "final": [26, 42, 82, 83, 86, 99], "find": [0, 3, 13, 18, 22, 24, 26, 34, 42, 47, 50, 56, 58, 59, 62, 71, 72, 73, 77, 79, 80, 83, 86, 89, 97, 101, 112, 116, 117, 123], "find_loc": [26, 34, 42, 56, 72, 77, 80, 125], "find_match": [33, 108, 125], "findal": [26, 34, 42, 56, 72, 77, 80, 125], "fine": [26, 42, 82], "finfo": 7, "finfo_object": 7, "finit": [8, 17], "firewal": 105, "first": [0, 3, 5, 9, 12, 13, 14, 16, 17, 22, 24, 26, 29, 30, 42, 47, 48, 49, 56, 58, 59, 60, 61, 70, 72, 73, 77, 78, 79, 80, 84, 88, 89, 90, 91, 92, 97, 99, 101, 103, 108, 109, 112, 114, 115, 116, 117, 122], "fishery": [52, 64, 120], "fit": [0, 26, 42, 70, 83, 86, 109], "five": [3, 26, 42, 50, 56, 62, 72, 77, 80, 114, 123], "fix": [0, 26, 42, 52, 57, 64, 70, 79, 86, 105, 120, 125], "fixed_len": [26, 29, 109], "flag": [20, 26, 29, 42, 63, 80, 83, 88, 103, 109, 124], "flake8": [0, 104], "flat": [26, 42, 56, 72, 77, 80, 125], "flatit": [26, 42], "flatten": [12, 13, 26, 31, 42, 47, 49, 54, 56, 59, 61, 72, 77, 79, 80, 108, 121], "flexibl": 92, "flip": [12, 26, 42], "float": [3, 6, 7, 8, 16, 17, 19, 22, 23, 24, 26, 29, 38, 39, 42, 47, 48, 52, 58, 59, 60, 64, 68, 70, 72, 76, 78, 79, 80, 109, 112, 114, 115, 116, 119, 120], "float32": [23, 26, 38, 39, 42], "float64": [4, 6, 22, 23, 24, 26, 27, 38, 39, 42, 47, 48, 50, 52, 55, 59, 60, 62, 64, 69, 72, 74, 78, 79, 80, 82, 83, 91, 92, 107, 111, 112, 114, 115, 116, 117, 119, 123], "float_": [26, 42], "float_scalar": [23, 26, 38, 39, 42, 47, 48, 52, 59, 60, 64, 80], "floor": [8, 26, 42, 47, 59], "floor_divid": [8, 26, 42, 47, 59], "floordivis": [26, 42, 47, 59], "fluid": [18, 20, 22, 24, 26, 27, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 116], "flush_l1d": 83, "fly": 21, "fma": 83, "fmod": [26, 42, 47, 59], "fname": 90, "fnc": [26, 42], "focus": 87, "folder": 99, "folk": 1, "follow": [0, 1, 3, 19, 26, 42, 47, 59, 72, 82, 83, 84, 86, 97, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 116, 119, 121, 123, 124, 125], "foo": [0, 2, 26], "foo_test": 0, "foopar": 0, "forc": [26, 42, 113, 115, 119, 125], "forget": [88, 105], "fork": [0, 99, 101, 102, 106], "form": [18, 23, 26, 27, 38, 39, 42, 47, 54, 56, 59, 70, 71, 72, 77, 79, 80, 86, 103], "format": [5, 9, 17, 18, 19, 20, 22, 26, 27, 28, 29, 42, 47, 54, 56, 59, 71, 72, 73, 77, 79, 80, 82, 90, 92, 93, 94, 100, 103, 115, 124, 125], "format_oth": [26, 42, 47, 59, 72, 79, 80], "former": [26, 42, 47, 56, 59, 72, 77, 79, 80, 125], "fortran": [26, 42, 119], "forward": [26, 42, 55, 74, 80, 105, 111, 121], "found": [1, 3, 13, 22, 26, 27, 29, 42, 47, 50, 56, 59, 62, 72, 77, 79, 80, 83, 90, 94, 101, 103, 105], "four": [3, 26, 42, 50, 56, 57, 62, 70, 72, 77, 79, 80, 114, 123], "fpu": 83, "frac": [17, 22, 24, 26, 42, 52, 64, 70, 72, 80, 116, 120], "fraction": [22, 24, 26, 42, 68, 72, 76, 80, 116], "frame": [22, 26, 73, 115, 122], "frameon": 70, "free": [26, 42, 47, 56, 59, 72, 77, 79, 80], "freedom": [16, 24, 26, 42, 47, 59, 70, 72, 80, 112, 116], "freez": 70, "freq": [26, 42, 57, 79], "frequenc": [1, 26, 42, 57, 79], "frequent": [26, 73, 103, 122], "friendli": [22, 26, 73], "from": [0, 3, 4, 5, 6, 9, 10, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 38, 39, 42, 47, 48, 49, 52, 54, 56, 58, 59, 60, 61, 63, 64, 68, 69, 70, 72, 73, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 90, 91, 92, 97, 99, 100, 101, 103, 105, 107, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125], "from_": [7, 23, 26, 38, 39, 42], "from_cod": [18, 26, 42, 108, 113], "from_dlpack": 6, "from_multi_arrai": [26, 42, 54, 72, 80], "from_panda": [22, 26], "from_part": [26, 42, 54, 56, 72, 77, 80], "from_return_msg": [18, 20, 22, 24, 26, 27, 42, 54, 56, 72, 73, 77, 80], "from_seri": [26, 42, 48, 60, 79], "frombuff": [26, 42], "fromencod": [26, 42, 56, 72, 77, 80], "fromfil": [26, 42], "fromright": [26, 42, 56, 72, 77, 80], "frontend": 99, "frozen": 70, "frozenset": [24, 26, 42, 72, 80], "frustrat": 88, "fsgsbase": 83, "fsspec": [22, 26, 73], "full": [6, 18, 26, 33, 42, 48, 56, 57, 60, 63, 70, 72, 77, 79, 80, 85, 87, 97, 100, 102, 106, 113, 114, 125], "full_lik": [6, 26, 42, 48, 60], "full_match_bool": 34, "full_match_ind": 34, "fulli": [26, 42], "fullmatch": [26, 42, 56, 72, 77, 80, 125], "fullnam": 83, "func": [4, 26, 42, 70], "funcion": 103, "functioanl": 121, "function": [0, 1, 9, 18, 56, 70, 73, 77, 83, 86, 87, 90, 91, 93, 94, 97, 103, 108, 109, 110, 113, 115, 116, 117, 119, 120, 121, 122, 123, 125], "furo": 104, "further": [26, 42, 101, 102, 106], "futur": [1, 20, 26, 29, 42, 56, 72, 77, 80, 109, 117], "fxsr": 83, "g": [2, 4, 18, 20, 22, 24, 26, 29, 42, 47, 54, 56, 57, 58, 59, 72, 73, 77, 79, 80, 87, 88, 90, 109, 112, 113, 114, 116, 117, 121, 124, 125], "gain": [82, 86], "gamma": [52, 64, 70], "garbag": [26, 42], "gasnet": [88, 89, 101, 102], "gasnet_masterip": 84, "gasnet_quiet": 84, "gasnet_route_output": 84, "gasnet_spawnfn": 84, "gasnet_workerip": 84, "gasnetsetup": 84, "gather": [83, 108], "gaussian": [52, 64, 120], "gawk": 101, "gb": [19, 22, 26, 27, 58, 73, 80, 105], "gb_key_nam": [22, 26], "gc": [22, 26, 73], "gcc": [83, 101], "gen_rang": 31, "gener": [17, 18, 19, 22, 23, 24, 25, 26, 31, 32, 38, 39, 42, 47, 48, 52, 57, 59, 60, 63, 64, 70, 71, 72, 73, 79, 80, 81, 82, 83, 87, 88, 90, 91, 92, 94, 99, 101, 105, 107, 108, 109, 112, 114, 116, 120, 122], "generate_histori": 19, "generate_token": 71, "generate_username_token_json": 71, "generic_concat": [26, 58, 80], "generic_mo": 70, "generic_msg": [26, 42, 82, 103], "genuineintel": 83, "get": [5, 8, 9, 10, 19, 21, 22, 23, 25, 26, 29, 38, 39, 42, 54, 72, 73, 80, 83, 86, 87, 88, 105, 109, 119], "get_arkouda_client_directori": 71, "get_array_rank": [26, 42, 48, 60, 72, 109, 114], "get_byt": [26, 42, 56, 72, 77, 80], "get_byteord": [23, 26, 38, 39, 42], "get_callback": [26, 58, 80], "get_column": [26, 29, 91, 95], "get_comm_diagnost": 21, "get_comm_diagnostics_amo": 21, "get_comm_diagnostics_cache_get_hit": 21, "get_comm_diagnostics_cache_get_miss": 21, "get_comm_diagnostics_cache_num_page_readahead": 21, "get_comm_diagnostics_cache_num_prefetch": 21, "get_comm_diagnostics_cache_prefetch_unus": 21, "get_comm_diagnostics_cache_prefetch_wait": 21, "get_comm_diagnostics_cache_put_hit": 21, "get_comm_diagnostics_cache_put_miss": 21, "get_comm_diagnostics_cache_readahead_unus": 21, "get_comm_diagnostics_cache_readahead_wait": 21, "get_comm_diagnostics_execute_on": 21, "get_comm_diagnostics_execute_on_fast": 21, "get_comm_diagnostics_execute_on_nb": 21, "get_comm_diagnostics_get": 21, "get_comm_diagnostics_get_nb": 21, "get_comm_diagnostics_put": 21, "get_comm_diagnostics_put_nb": 21, "get_comm_diagnostics_try_nb": 21, "get_comm_diagnostics_wait_nb": 21, "get_config": [0, 19], "get_dataset": [26, 29, 91, 95, 109], "get_directori": 30, "get_filetyp": [26, 29], "get_home_directori": 71, "get_jth": [26, 42, 54, 72, 80, 121], "get_length": [26, 42, 56, 72, 77, 80], "get_length_n": [26, 42, 54, 72, 80, 121], "get_level_valu": [26, 27], "get_match": 34, "get_max_array_rank": 19, "get_mem_avail": 19, "get_mem_statu": 19, "get_mem_us": 19, "get_ngram": [26, 42, 54, 72, 80, 121], "get_null_indic": [26, 29], "get_offset": [26, 42, 56, 72, 77, 80], "get_prefix": [26, 42, 54, 56, 72, 77, 80, 121], "get_server_byteord": [23, 26, 38, 39, 42], "get_server_command": 19, "get_suffix": [26, 42, 54, 56, 72, 77, 80, 121], "get_usernam": 71, "getarkoudalogg": [26, 42, 72], "getcwd": [22, 26], "getdefaultencod": [22, 24, 26, 42, 70, 72, 73, 80], "getfield": [26, 42], "getmodulenam": 103, "getsizeof": [26, 42], "getter": [26, 42, 56, 72, 77, 80], "ghi": 91, "ghpage": 99, "ghz": 83, "gib": 83, "git": [0, 88, 101, 102], "github": [0, 86, 88, 99, 100, 101, 102, 106], "gitk": 86, "give": [26, 42, 47, 59, 72, 73, 79, 80, 91, 99, 104, 122, 124], "given": [3, 6, 13, 16, 17, 18, 22, 24, 26, 29, 42, 47, 48, 50, 52, 56, 57, 58, 59, 60, 62, 64, 70, 72, 73, 77, 79, 80, 83, 104, 109, 113, 114, 115, 116, 117, 120, 125], "glob": [26, 29, 109], "global": [5, 9, 26, 42], "gmp": 102, "gnu": [85, 105], "go": [24, 26, 42, 72, 80, 86, 88, 101, 105, 114], "goal": 5, "goe": [26, 42, 48, 60], "good": [0, 26, 42, 86, 88], "googl": 125, "got": 88, "gottfri": [33, 125], "gpu": [26, 42, 47, 59, 72, 79, 80], "gram": [26, 42, 54, 72, 80], "granular": 21, "graph": [26, 63, 116], "graphic": 86, "greater": [8, 17, 26, 42, 48, 52, 60, 64, 114, 120], "greater_equ": 8, "greatli": [18, 26, 42, 50, 62, 72, 73, 114], "green": [26, 27, 86], "grep": [99, 105], "grid": [22, 26, 63, 73], "group": [1, 7, 18, 22, 24, 26, 33, 42, 54, 55, 56, 72, 73, 74, 77, 80, 83, 90, 92, 100, 108, 111, 113, 115, 116, 122, 123, 125], "group_ani": [24, 26, 42, 72, 80, 116], "group_argmaxima": [24, 26, 42, 72, 80, 116], "group_argminima": [24, 26, 42, 72, 80, 116], "group_maxima": [24, 26, 42, 72, 80, 116], "group_mean": [24, 26, 42, 72, 80, 116], "group_median": [24, 26, 42, 72, 80, 116], "group_minima": [24, 26, 42, 72, 80, 116], "group_num": [33, 125], "group_nuniqu": [24, 26, 42, 72, 80, 116], "group_product": [24, 26, 42, 72, 80, 116], "group_std": [24, 26, 42, 72, 80, 116], "group_sum": [24, 26, 42, 72, 80, 116], "group_var": [24, 26, 42, 72, 80, 116], "groupabl": [24, 26, 42, 50, 62, 72, 80, 116, 123], "groupable_element_typ": [24, 26, 42, 72, 73, 80, 122], "groupbi": [18, 22, 24, 26, 29, 42, 54, 56, 58, 72, 77, 80, 108, 113, 125], "groupby_reduction_typ": [24, 26], "groupbyclass": [22, 26, 42, 50, 62, 81, 115, 123], "grow": [26, 42, 47, 59, 112], "guarante": [18, 26, 42, 55, 56, 72, 74, 77, 80, 111, 120, 125], "guid": [26, 42, 82, 97, 99, 101, 102], "guidelin": [86, 125], "gumbel": [52, 64, 120], "gz": [97, 99, 101, 102], "gzip": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83, 94], "gzipfil": [26, 42], "h": [26, 42, 57, 63, 79, 80, 107, 117, 124], "h5": [26, 29, 42, 47, 59, 72, 79, 80, 109], "h5l": [26, 29], "h5py": [104, 109], "ha": [0, 5, 9, 18, 20, 22, 24, 26, 27, 29, 42, 47, 48, 50, 52, 54, 56, 57, 58, 59, 60, 62, 64, 72, 73, 77, 79, 80, 82, 84, 86, 87, 91, 92, 103, 109, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123], "had": [26, 42], "half": [3, 6, 52, 64, 120], "hand": [3, 68, 76, 86, 118], "handl": [18, 19, 21, 22, 26, 42, 56, 72, 77, 80, 82, 93, 109, 113, 115, 119], "handled_funct": 5, "handler": [21, 22, 24, 26, 42, 70, 72, 73, 80], "happen": [17, 82, 86], "hardwar": [26, 42], "has_non_float_nul": [26, 29, 109], "has_repeat_label": [26, 73], "hash": [18, 26, 29, 42, 54, 55, 56, 72, 74, 77, 80, 111], "hasnan": [26, 73], "have": [0, 1, 3, 5, 9, 12, 18, 21, 22, 24, 26, 27, 29, 42, 47, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 72, 73, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 99, 101, 102, 103, 104, 109, 112, 113, 114, 115, 116, 119, 120, 122], "hd15iqr": 83, "hdf5": [1, 18, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 91, 93, 94, 95, 99, 104, 109, 116, 125], "hdf5_output": [22, 26], "hdf_output": [22, 26], "head": [22, 24, 26, 42, 72, 73, 80, 86, 108, 116], "header": [22, 26, 27, 29, 42, 47, 56, 59, 72, 77, 79, 80, 109], "healthcheck": 19, "heapsort": [26, 42], "heavi": [26, 42, 48, 60], "hei": 86, "hello": [26, 42, 56, 72, 77, 80], "hello3": 102, "help": [0, 20, 26, 100, 103], "helper": [20, 26, 58, 80], "here": [1, 21, 26, 42, 56, 58, 72, 77, 80, 83, 84, 87, 88, 89, 90, 92, 94, 99, 101, 102, 103, 104, 105, 106, 124], "heroic": 85, "hex": [26, 42], "hexidecim": 71, "hierarch": 3, "high": [3, 20, 22, 26, 42, 47, 48, 52, 59, 60, 64, 72, 79, 80, 90, 114, 120], "higher": [26, 42], "highest": [22, 26, 42, 47, 48, 59, 60, 72, 79, 80], "highli": 101, "highlight": [1, 86, 90], "hist": 70, "hist_al": [26, 63], "hist_fil": 25, "histogram": [26, 63, 70, 108], "histogram2d": 117, "histori": [0, 19, 26, 81, 86], "historyaccessor": 25, "historyretriev": 25, "histtyp": 70, "hit": 87, "hog": 88, "hold": [26, 42, 70, 119], "hole": [26, 73], "home": [71, 99, 103], "homebrew": [87, 99], "homepag": 99, "homogen": [22, 26, 42, 115], "hong_kong": [26, 42, 57, 79], "horizont": [26, 42, 54, 72, 73, 80, 121, 122], "host": [19, 22, 26, 71, 73, 99], "hostnam": [1, 18, 19, 22, 26, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 87, 97, 107, 124], "hour": [26, 42, 57, 79, 80], "hous": 105, "how": [0, 5, 9, 18, 20, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 82, 83, 86, 91, 104, 116, 119], "howev": [24, 26, 42, 47, 59, 72, 80, 92, 99, 104, 105, 112, 113, 116], "hpe": 100, "ht": 83, "html": [12, 17, 22, 26, 42, 58, 73, 80, 82, 99], "htop": 105, "http": [0, 12, 17, 22, 26, 42, 58, 73, 80, 82, 101, 102], "human": [18, 26, 28, 42, 47, 56, 59, 72, 77, 79, 80], "hundr": 109, "hyperbol": 8, "hyperlink": 86, "hypervisor": 83, "hypothet": [24, 26, 31, 42, 47, 59, 72, 80, 112, 116], "hz_actual": 83, "hz_actual_friendli": 83, "hz_advertis": 83, "hz_advertised_friendli": 83, "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "i1": [26, 42], "i2": [26, 27, 42], "i7": 83, "i8": [26, 42], "i_cpi": [26, 27], "iat": [26, 73], "ibpb": 83, "ibr": 83, "ibv": 84, "iconv": [1, 99, 104], "id": [19, 26, 29, 83, 105, 116], "id_": [26, 29], "idea": [0, 86, 88, 91, 109], "ideal": [0, 86], "ident": [22, 26, 52, 58, 64, 70, 78, 80, 112, 119, 120], "identif": [26, 32], "identifi": [0, 3, 18, 26, 29, 42, 47, 59, 67, 72, 75, 79, 80, 100, 119], "idn2": [1, 99, 104], "idna": 83, "idx": [3, 22, 24, 26, 27, 42, 72, 80, 90, 116], "idx1": [58, 80], "idx2": [24, 26, 42, 58, 72, 80, 116], "ieee": [115, 119], "iff": [3, 18, 26, 27, 42, 47, 56, 57, 59, 72, 73, 77, 79, 80, 112, 117], "ignor": [12, 15, 22, 24, 26, 29, 42, 57, 72, 78, 79, 80, 109, 115, 119], "ignore_index": [22, 26], "iinfo": 7, "iinfo_object": 7, "illustr": [17, 26, 42], "iloc": [26, 73, 78], "imag": [8, 17, 26, 42], "imagin": [26, 42, 116], "imaginari": [8, 26, 42], "imit": [26, 29], "immun": [18, 20, 22, 24, 26, 27, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 116], "immut": [24, 26, 42, 72, 80], "imnotok": 19, "imok": 19, "impact": [18, 24, 26, 27, 29, 42, 47, 54, 59, 72, 79, 80, 85, 86, 88, 109, 116], "implement": [0, 5, 6, 8, 11, 18, 19, 20, 22, 25, 26, 42, 47, 50, 54, 56, 59, 62, 70, 71, 72, 73, 77, 80, 82, 91, 97, 112, 114, 124, 125], "implements_numpi": 5, "impli": [3, 26, 42, 78, 118], "implicit": 119, "import": [4, 17, 18, 20, 22, 26, 27, 29, 42, 56, 58, 63, 69, 70, 71, 72, 73, 77, 78, 80, 82, 86, 92, 97, 99, 100, 103, 115, 117, 124], "import_data": [26, 29, 93, 109], "importerror": [26, 42, 47, 59, 72, 79, 80], "impos": [26, 42, 57, 79], "improv": [18, 26, 42, 50, 62, 72, 73, 86, 87, 103, 114], "in1d": [18, 26, 42, 50, 62, 82, 90, 108, 113, 123, 125], "in1d_interv": 3, "inaccess": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80], "inadvert": [20, 26], "inappropri": 3, "includ": [0, 1, 3, 16, 22, 24, 26, 27, 28, 29, 42, 47, 48, 56, 57, 59, 60, 72, 73, 77, 79, 80, 83, 86, 91, 92, 97, 99, 101, 103, 109, 112, 114, 115, 116, 119, 121], "include_initi": 16, "includedelimit": [26, 42, 56, 72, 77, 80], "inclus": [3, 6, 22, 26, 42, 47, 48, 52, 57, 59, 60, 64, 72, 79, 80, 112, 114, 118, 120], "incompat": [26, 42, 47, 59, 101], "incorpor": 119, "increas": [26, 42, 47, 54, 59, 72, 80, 99, 105], "increment": [85, 86], "ind": 118, "independ": [26, 29, 42, 52, 64, 71, 109, 120], "index": [2, 3, 5, 6, 9, 13, 18, 20, 22, 24, 26, 29, 31, 33, 42, 47, 48, 50, 54, 56, 58, 59, 60, 62, 72, 73, 77, 78, 79, 80, 81, 83, 90, 99, 107, 108, 109, 112, 113, 114, 116, 117, 121, 122, 125], "index_label": [26, 73], "index_s": [83, 107], "index_valu": [26, 78], "indexerror": [26, 73], "indexing_funct": [9, 81], "indexof1d": [26, 42, 50, 62], "indic": [0, 3, 5, 7, 9, 10, 13, 14, 15, 18, 19, 20, 22, 24, 26, 27, 29, 31, 33, 34, 42, 47, 49, 50, 54, 55, 56, 57, 58, 59, 61, 62, 68, 72, 73, 74, 76, 77, 79, 80, 90, 92, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123], "indici": [33, 125], "indirect": [26, 42], "individu": [26, 42, 65, 84, 125], "ineffiec": 94, "infer": [6, 18, 22, 23, 24, 26, 27, 29, 38, 39, 42, 47, 48, 56, 59, 60, 72, 77, 79, 80, 92, 109], "inferred_typ": [18, 26, 27, 42, 47, 56, 59, 72, 77, 78, 79, 80], "infinit": [8, 24, 26, 42, 47, 59, 72, 80, 112, 116], "info": [0, 1, 18, 22, 26, 28, 32, 42, 47, 56, 59, 72, 77, 79, 80], "infoclass": [26, 81], "inform": [0, 1, 5, 8, 9, 18, 19, 24, 26, 28, 42, 47, 52, 56, 59, 64, 72, 77, 79, 80, 83, 86, 87, 88, 90, 91, 92, 94, 95, 97, 99, 101, 102, 103, 104, 113, 120, 121, 123, 125], "infrastructur": [1, 82], "ing": [26, 42, 56, 72, 77, 80], "ingest": [109, 125], "inherit": [24, 26, 42, 70, 72, 80, 116, 119], "ini": [0, 83], "init": [24, 26, 42, 72, 80, 102, 116], "initi": [6, 16, 18, 19, 21, 26, 42, 47, 48, 52, 59, 60, 64, 67, 72, 75, 79, 80, 83, 102, 107, 113, 114, 119, 120, 124], "initialdata": [22, 26, 115], "inner": [5, 9, 17, 22, 26, 31], "inplac": [22, 26, 42, 115], "input": [4, 6, 12, 13, 16, 17, 18, 20, 22, 24, 26, 27, 42, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 72, 73, 74, 77, 78, 79, 80, 82, 86, 109, 111, 112, 113, 116, 119, 122, 123], "insensit": [26, 27, 42, 47, 56, 59, 72, 77, 79, 80, 83], "insert": [12, 13, 26, 42, 56, 72, 77, 80, 82], "insid": [4, 26, 29, 42], "inspect": [103, 109], "inst": [26, 42], "instal": [1, 4, 26, 29, 42, 47, 59, 72, 79, 80, 87, 100, 105, 124], "instanc": [18, 20, 22, 23, 24, 26, 29, 38, 39, 42, 47, 48, 56, 57, 59, 60, 67, 70, 72, 73, 75, 77, 79, 80, 83, 94, 99, 100, 103, 109, 112, 115, 116, 117, 119], "instanti": [26, 42, 72, 82], "instantiateandregist": 82, "instead": [18, 20, 22, 24, 26, 29, 42, 47, 52, 56, 59, 64, 72, 77, 80, 83, 107, 109, 112, 113, 116, 120], "instruct": [1, 26, 42, 56, 72, 77, 80, 97, 99, 100, 101, 102, 104, 105, 106, 124], "int": [3, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 38, 39, 42, 47, 48, 49, 52, 54, 56, 57, 58, 59, 60, 61, 64, 67, 68, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 92, 109, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125], "int16": [23, 26, 38, 39, 42], "int32": [23, 26, 38, 39, 42], "int64": [3, 18, 20, 22, 23, 24, 26, 27, 29, 31, 33, 38, 39, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 68, 72, 74, 76, 77, 78, 79, 80, 82, 83, 90, 91, 92, 107, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 125], "int8": [23, 26, 38, 39, 42], "int_": [26, 42], "int_0": 17, "int_scalar": [18, 22, 23, 24, 26, 29, 38, 39, 42, 47, 48, 52, 54, 55, 56, 57, 58, 59, 60, 64, 67, 72, 74, 75, 77, 79, 80, 111, 112, 114, 116, 117, 119], "int_t": 17, "int_typ": [26, 42], "integ": [1, 5, 9, 10, 12, 17, 18, 20, 22, 23, 24, 26, 27, 29, 31, 38, 39, 42, 47, 48, 49, 52, 57, 59, 60, 61, 64, 70, 72, 78, 79, 80, 92, 108, 112, 113, 114, 115, 116, 119, 121, 123, 125], "integr": [0, 17, 24, 26, 29, 42, 47, 48, 52, 59, 60, 64, 72, 80, 86, 109, 114, 116], "intel": 83, "intend": [0, 18, 20, 22, 26, 42, 47, 54, 56, 59, 72, 77, 78, 79, 80, 91, 97, 101, 102, 110, 115, 122], "intens": [26, 42, 55, 74, 80, 90, 111, 114], "intention": [26, 42], "interact": [26, 42, 87, 91, 95, 96, 97, 102, 104], "interchang": [26, 42], "interest": 90, "interfac": [0, 26, 42, 86], "interleav": [18, 22, 26, 42, 50, 62, 72, 73, 114], "intermedi": 3, "intern": [1, 5, 9, 26, 31, 42, 47, 56, 59, 72, 77, 78, 79, 80, 82, 86], "interoper": 0, "interpret": [19, 22, 26, 29, 42, 70, 83, 109, 124], "interrupt": [26, 42], "intersect": [22, 24, 26, 42, 50, 54, 62, 72, 80, 90, 108, 123], "intersect1d": [18, 26, 42, 50, 54, 62, 72, 80, 82, 90, 108, 123], "intersect_df": [22, 26], "interv": [3, 6, 26, 42, 48, 52, 57, 60, 64, 70, 72, 79, 80, 114, 117, 120], "interval_lookup": 3, "introduc": 12, "introduct": 90, "introselect": [26, 42], "inttyp": [23, 26, 38, 39, 42, 79], "intx": [22, 26], "inv": [52, 64, 120], "invalid": [26, 29, 109], "invari": 1, "invers": [14, 22, 26, 42, 52, 58, 64, 70, 80, 115, 120], "inverse_indic": 14, "invert": [24, 26, 42, 50, 62, 72, 80, 123], "invert_permut": [22, 26, 58, 80], "invok": [26, 42, 48, 52, 60, 64, 99], "involv": [5, 9, 87, 106], "invpcid": 83, "invpcid_singl": 83, "io": [26, 81, 82, 83, 93, 94, 95], "io_compress": 83, "io_files_per_loc": 83, "io_only_delet": 83, "io_only_read": 83, "io_only_writ": 83, "io_path": 83, "io_util": [26, 81], "ior": [26, 42, 56, 72, 77, 80], "ip": [20, 26, 80], "ip2": [20, 26], "ip_address": [20, 26, 27, 110], "ipaddress": [20, 26, 80], "ipv4": [20, 26, 29, 80], "ipv6": [20, 26], "ipython": [19, 25, 97], "iqr": 83, "iqr_outli": 83, "is_cosort": 3, "is_float": [58, 80], "is_int": [58, 80], "is_ipv4": [20, 26], "is_ipv6": [20, 26], "is_leap_year": [26, 42, 57, 79, 80], "is_numer": [58, 80], "is_regist": [18, 20, 22, 24, 26, 27, 42, 47, 54, 56, 57, 58, 59, 72, 73, 77, 79, 80, 108, 116], "is_sort": [26, 42, 47, 59, 72, 79, 80, 108, 112, 117], "is_uniqu": [26, 27], "isaac": [33, 125], "isalnum": [26, 42, 56, 72, 77, 80], "isalpha": [26, 42, 56, 72, 77, 80], "isbool": 92, "isdecim": [26, 42, 56, 72, 77, 80], "isdigit": [26, 42, 56, 72, 77, 80], "isdisjoint": [24, 26], "isdtyp": 7, "isempti": [26, 42, 56, 72, 77, 80], "isf": 70, "isfinit": 8, "isin": [22, 26, 73], "isinf": 8, "isinst": [18, 26, 42, 48, 60, 82], "islow": [26, 42, 56, 72, 77, 80], "isn": 88, "isna": [18, 22, 26, 42, 73], "isnan": 8, "isnul": [26, 73], "isocalendar": [26, 42, 57, 79, 80], "isort": [0, 104], "isspac": [26, 42, 56, 72, 77, 80], "issu": [18, 21, 22, 24, 26, 42, 72, 80, 82, 86, 99, 105, 116, 121], "issubset": [24, 26], "issuperset": [24, 26], "issupportedbool": [23, 26, 38, 39, 42], "issupporteddtyp": [23, 26, 38, 39, 42], "issupportedfloat": [23, 26, 38, 39, 42], "issupportedint": [23, 26, 38, 39, 42, 72, 79], "issupportednumb": [23, 26, 38, 39, 42], "istitl": [26, 42, 56, 72, 77, 80], "isupp": [26, 42, 56, 72, 77, 80], "item": [3, 5, 9, 18, 22, 24, 26, 42, 47, 48, 50, 58, 59, 60, 62, 72, 73, 78, 79, 80, 113, 115, 116, 122, 123], "items": [23, 26, 38, 39, 42, 47, 48, 56, 59, 60, 67, 72, 75, 77, 79, 80, 108, 109, 119], "itemset": [26, 42], "iter": [22, 24, 26, 29, 42, 48, 55, 60, 72, 74, 78, 80, 83, 108, 109, 111], "iter1": [26, 78], "iter2": [26, 78], "ith": [18, 26, 42, 54, 56, 72, 77, 80], "its": [3, 8, 17, 18, 26, 27, 42, 47, 50, 54, 56, 59, 62, 72, 73, 77, 79, 80, 82, 86, 92, 101, 102, 112, 119, 121, 122, 125], "itself": [26, 42, 47, 52, 56, 59, 64, 72, 77, 78, 79, 80, 86, 120], "j": [26, 42, 54, 72, 80, 84, 85, 101, 102], "j16": 85, "jake": 90, "jane": 90, "john": 90, "join": [22, 26, 42, 54, 56, 72, 77, 80, 81, 108], "join_on_eq_with_dt": 31, "json": [18, 19, 26, 28, 42, 47, 56, 59, 71, 72, 77, 79, 80, 82, 104], "jump": [26, 42], "jupyt": [19, 25, 97, 104], "just": [26, 42, 87, 88, 119, 120], "k": [6, 26, 42, 47, 48, 52, 59, 60, 64, 70, 72, 79, 80, 83, 112, 117, 120], "kb": [19, 22, 26, 27, 58, 73, 80], "keep": [0, 3, 13, 16, 17, 22, 24, 26, 42, 47, 57, 59, 72, 79, 80, 90, 102, 105, 109, 112, 115, 116, 117], "keepdim": [13, 16, 17, 26, 42, 47, 57, 59, 72, 79, 80, 112, 117], "keepparti": [26, 42, 56, 72, 77, 80], "kei": [3, 18, 22, 24, 26, 27, 28, 29, 30, 42, 72, 73, 78, 80, 90, 92, 103, 105, 110, 115, 116, 122, 123], "kept": [22, 24, 26, 42, 54, 72, 80, 115, 116], "kextrememsg": 103, "key_": 92, "keyboardinterrupt": [26, 42], "keyerror": [26, 73], "keyfil": 1, "keynam": [58, 80], "keys1": 3, "keys2": 3, "keyword": [0, 17, 18, 22, 26, 42, 50, 52, 54, 62, 64, 70, 72, 73, 78, 80, 114, 120, 122, 123], "kind": [7, 23, 26, 38, 39, 42, 49, 61], "kitwar": 101, "know": [5, 9, 87, 97], "known": [0, 4, 26, 29, 42, 109], "kth": [26, 42], "kurt": 70, "kurtosi": 70, "kwarg": [17, 18, 22, 24, 26, 42, 48, 57, 58, 60, 65, 70, 72, 73, 78, 79, 80, 113, 114, 116], "kwd": 70, "l": [5, 9, 26, 29, 42, 57, 79, 80, 84, 86, 90, 91, 99, 109], "l1_data_cache_s": 83, "l1_instruction_cache_s": 83, "l2_cache_associ": 83, "l2_cache_line_s": 83, "l2_cache_s": 83, "l3_cache_s": 83, "l_name": 90, "label": [0, 18, 22, 24, 26, 27, 42, 63, 70, 72, 73, 78, 80, 113, 115, 116, 122], "lahf_lm": 83, "laid": 0, "lam": [52, 64, 120], "lambda": [4, 22, 26, 52, 64, 120], "lang": 101, "larg": [5, 9, 18, 26, 42, 50, 52, 62, 64, 83, 99, 112, 120, 123], "larger": [17, 18, 22, 24, 26, 42, 47, 48, 56, 59, 60, 72, 77, 79, 80, 86, 90, 109, 113, 116, 119], "largest": [26, 42, 47, 52, 59, 64, 73, 112, 120, 122], "last": [12, 13, 17, 22, 24, 26, 42, 47, 48, 55, 56, 59, 60, 72, 73, 74, 77, 78, 79, 80, 86, 103, 111, 115, 116, 122, 124], "late": 21, "later": [22, 26, 42, 47, 56, 59, 72, 77, 79, 80, 104], "latest": [12, 26, 42, 58, 80, 82, 97, 101, 102, 105], "latter": [19, 125], "launch": [82, 105, 108], "layer": 109, "layout": [26, 42, 67, 68, 75, 76], "lb": 70, "ld15iqr": 83, "ld_library_path": 1, "lead": [26, 42, 47, 56, 59, 72, 77, 79, 80], "learn": [26, 42, 57, 79, 82, 97], "least": [0, 20, 22, 24, 26, 42, 47, 54, 55, 56, 59, 72, 74, 77, 80, 111, 116], "leav": [0, 26, 42, 117], "left": [0, 3, 8, 13, 17, 20, 22, 26, 42, 47, 55, 56, 57, 59, 68, 70, 72, 74, 76, 77, 78, 79, 80, 111, 117], "left_align": 3, "left_df": [22, 26], "left_suffix": [22, 26], "legend": 70, "leibniz": [33, 125], "len": [24, 26, 42, 47, 54, 56, 59, 72, 77, 80, 112, 116, 118], "len_suffix": [26, 42, 54, 72], "length": [0, 3, 12, 18, 22, 24, 26, 27, 29, 31, 33, 34, 42, 47, 48, 50, 52, 54, 56, 59, 60, 62, 64, 71, 72, 73, 77, 79, 80, 83, 100, 107, 109, 112, 114, 116, 121, 122, 123, 125], "less": [8, 18, 22, 24, 26, 27, 42, 47, 52, 54, 56, 59, 64, 72, 77, 79, 80, 116, 120], "less_equ": 8, "lesser": 83, "let": 90, "letter": [26, 42, 56, 72, 77, 80], "level": [1, 26, 27, 32, 42, 50, 62, 72, 73, 78, 82, 83, 87, 91, 92, 99, 101, 102, 103, 106, 109, 122, 123], "levelnam": [26, 42, 72], "leverag": [85, 101], "lexicograph": [26, 42, 55, 74, 80, 86, 111], "lexsort": [26, 42], "lhdf5": 1, "lhdf5_hl": 1, "lib": [1, 26, 42, 81, 99, 105, 123], "libiconv": 104, "libidn2": 104, "librari": [0, 1, 26, 42, 82, 99, 105, 125], "libtic": 105, "libtinfow": 105, "licens": 101, "liconv": 1, "lidn2": 1, "lie": [18, 26, 42, 56, 72, 77, 80], "life": [102, 104], "like": [0, 2, 3, 5, 9, 20, 22, 24, 26, 42, 52, 57, 64, 72, 79, 80, 82, 84, 86, 87, 88, 90, 93, 97, 99, 103, 105, 109, 110, 115, 116, 118, 120, 122, 124, 125], "likelihood": [24, 26, 42, 47, 59, 72, 80, 112, 116], "lim": 118, "limit": [0, 4, 5, 17, 18, 26, 31, 42, 47, 48, 52, 56, 57, 59, 60, 64, 72, 77, 79, 80, 91, 94, 97, 105, 109, 113, 115, 119, 120], "linalg": [9, 42, 81], "line": [0, 17, 26, 30, 42, 72, 87, 91, 97, 100, 103, 124], "linear": 125, "linearli": [26, 42, 48, 57, 60, 79, 114], "lineno": [26, 42, 72], "link": [0, 1, 26, 29, 42, 57, 79, 86, 99, 101], "linkifi": 104, "linspac": [6, 17, 24, 26, 42, 48, 60, 70, 72, 80, 108, 112, 114, 116, 119], "linter": 0, "linux": [71, 83, 99, 105, 106], "linux64": 101, "linux_instal": 100, "list": [0, 3, 5, 6, 9, 12, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 42, 47, 48, 49, 50, 54, 56, 57, 58, 59, 60, 61, 62, 63, 67, 70, 72, 73, 75, 77, 79, 80, 82, 83, 84, 86, 87, 88, 90, 91, 95, 97, 103, 106, 109, 114, 115, 116, 117, 118, 119, 122, 123, 125], "list_registri": [26, 28, 42, 47, 59, 72, 79, 80], "list_symbol_t": [26, 28], "listen": [97, 124], "liter": [13, 26, 42, 49, 56, 58, 61, 70, 72, 77, 80, 113, 125], "littl": [23, 26, 38, 39, 42], "live": [101, 102], "ll": [87, 88, 99], "llvm": [101, 102, 105], "lm": 83, "ln": [52, 64, 105, 120], "lname": 90, "lnjcsdxd": [26, 42, 48, 60], "load": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 91, 92, 94, 95, 105, 109], "load_al": [18, 22, 26, 27, 29, 42, 47, 56, 59, 72, 77, 79, 80, 95], "load_checkpoint": [26, 29], "loc": [26, 52, 64, 70, 73, 120], "local": [0, 1, 5, 9, 18, 19, 21, 22, 24, 26, 27, 29, 42, 47, 54, 56, 57, 58, 59, 72, 73, 77, 79, 80, 83, 84, 92, 97, 99, 101, 102, 109, 114, 116, 122, 124], "locale_hostnam": 19, "locale_id": 19, "localhost": [19, 97, 124], "locat": [1, 13, 17, 24, 26, 27, 42, 47, 52, 56, 59, 64, 70, 71, 72, 73, 77, 79, 80, 83, 86, 88, 99, 105, 112, 116, 120, 122], "locationsinfo": 34, "lock": [26, 42], "log": [1, 8, 21, 24, 26, 32, 42, 48, 52, 56, 60, 63, 64, 69, 70, 72, 77, 80, 108, 112, 116, 120], "log10": 8, "log1p": 8, "log2": 8, "log_lvl": [26, 32], "log_msg": [26, 32], "logaddexp": 8, "logarithm": [8, 52, 64, 112, 120], "logcdf": 70, "logformat": [26, 42, 72], "logger": [18, 24, 26, 34, 42, 54, 56, 72, 77, 80, 81, 108, 116], "logic": [3, 8, 18, 26, 42, 48, 50, 52, 54, 56, 60, 62, 64, 72, 77, 80, 108, 114, 117, 123], "logical_and": 8, "logical_not": 8, "logical_or": 8, "logical_xor": 8, "logist": [52, 64, 108], "loglevel": [26, 32, 42, 72], "logmean": [26, 42, 48, 60], "lognorm": [26, 42, 48, 52, 60, 64, 108], "logpdf": 70, "logsf": 70, "logstd": [26, 42, 48, 60], "long": [26, 42, 54, 56, 72, 77, 80, 88], "longdoubl": [26, 42], "longer": [22, 26, 42, 48, 60, 92, 104, 115], "longnam": 70, "look": [0, 1, 26, 42, 82, 86, 87, 90, 103, 105, 109, 124], "lookahead": [18, 26, 42, 56, 72, 77, 80, 113, 125], "lookbehind": [18, 26, 42, 56, 72, 77, 80, 113, 125], "lookup": [3, 26, 27, 73], "loop": [1, 26, 42], "loos": 86, "lose": [26, 42], "loss": 121, "lost": [26, 42], "lot": 83, "love": 0, "low": [3, 20, 22, 26, 42, 47, 48, 52, 59, 60, 64, 72, 79, 80, 90, 109, 114, 120], "lower": [6, 22, 26, 42, 52, 56, 64, 72, 77, 80, 82, 92, 115, 120], "lower_bounds_inclus": 3, "lowercamelcas": 0, "lowercas": [26, 42, 48, 56, 60, 72, 77, 80], "lowest": [3, 22, 26, 42, 47, 48, 52, 59, 60, 64, 72, 79, 80, 120], "lp_c_uint": [26, 42], "lr": [26, 42, 48, 60], "ls_csv": [26, 29, 91, 95], "lst": [26, 73], "lstick": [26, 42, 56, 72, 77, 80, 125], "lt": 105, "lw": 70, "lz": [26, 42, 47, 59], "lz4": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83, 94], "lzmq": 1, "m": [0, 26, 27, 33, 42, 48, 54, 57, 60, 70, 72, 79, 80, 83, 99, 105, 125], "m1": 90, "m2": [26, 27, 90], "m4": 101, "ma": [42, 81], "mac": [99, 102], "mac_instal": 100, "machin": [19, 26, 42, 83, 84, 87, 100, 101, 102, 124], "machine_info": 83, "maco": [71, 101, 106], "macosx": 102, "made": [20, 22, 26, 42, 56, 72, 77, 80], "mai": [4, 18, 22, 23, 26, 27, 29, 38, 39, 42, 47, 48, 49, 50, 56, 59, 60, 61, 62, 72, 73, 77, 78, 79, 80, 82, 90, 92, 99, 102, 104, 105, 109, 113, 114, 115, 119], "main": [6, 83, 86, 92], "mainli": 1, "maintain": [13, 26, 27, 29, 42, 54, 72, 80, 93, 109], "major": [26, 42, 86, 91, 110, 115, 122], "make": [0, 1, 12, 18, 20, 22, 26, 29, 42, 52, 57, 64, 70, 73, 79, 80, 82, 83, 84, 85, 86, 88, 97, 99, 100, 101, 102, 103, 105, 113, 115, 120], "makebinari": 85, "makefil": [97, 99], "malform": [26, 42, 48, 60, 72, 109], "manag": [99, 101, 102, 104, 106], "mani": [3, 18, 22, 26, 42, 83, 100, 113, 116], "manipul": 0, "manipulation_funct": [9, 81], "manual": [26, 42, 82, 102, 104], "map": [3, 18, 19, 20, 22, 26, 27, 29, 30, 42, 52, 56, 58, 64, 72, 73, 77, 80, 115, 120, 125], "mapper": [22, 26, 115], "mark": 92, "markdown": [0, 21, 22, 26, 73], "mask": [22, 26, 42, 54, 56, 72, 73, 77, 80], "mass": [52, 64, 120], "master": [0, 86, 99], "match": [1, 6, 12, 18, 22, 24, 26, 27, 29, 34, 42, 47, 48, 54, 56, 57, 58, 59, 60, 72, 73, 77, 78, 79, 80, 81, 83, 108, 109, 112, 114, 116, 119, 122, 124], "match_bool": 34, "match_ind": 34, "match_typ": [33, 34, 108, 125], "matcher": [26, 81], "matchtyp": [33, 34, 125], "math": [4, 26, 33, 42, 125], "mathemat": 112, "mathjax": 104, "matlab": 118, "matmul": 11, "matplotlib": [26, 63, 70, 104, 117], "matric": [6, 58, 68, 76, 80], "matrix": [11, 22, 24, 26, 42, 58, 68, 72, 76, 80, 116], "matrix_transpos": 11, "matter": 87, "max": [7, 16, 22, 24, 26, 42, 47, 54, 56, 59, 72, 73, 77, 79, 80, 83, 108, 112, 116, 117], "max_bit": [26, 42, 47, 48, 59, 60, 67, 72, 75, 79, 80, 83, 109, 114, 119], "max_list_s": [26, 27, 110], "max_tim": 83, "maxbit": 83, "maxima": [24, 26, 42, 72, 80, 116], "maximum": [1, 13, 16, 17, 19, 22, 24, 26, 27, 42, 47, 48, 52, 58, 59, 60, 64, 72, 79, 80, 83, 109, 112, 114, 115, 116, 117], "maxk": [26, 42, 47, 59, 72, 79, 80, 103, 108, 112, 117], "maxkmsg": 103, "maxlen": [26, 42, 48, 60], "maxmum": [26, 42, 47, 59, 112], "maxsplit": [26, 34, 42, 56, 72, 77, 80], "maxtaskpar": 19, "maxtransferbyt": [5, 9, 18, 22, 26, 42, 47, 48, 56, 57, 59, 60, 72, 77, 78, 79, 80, 109, 113, 115, 119, 125], "mb": [19, 22, 26, 27, 58, 73, 80], "mca": 83, "mce": 83, "md": [99, 100, 101, 102], "mean": [16, 19, 22, 24, 26, 29, 42, 47, 48, 52, 54, 55, 56, 59, 60, 64, 70, 71, 72, 73, 74, 77, 79, 80, 83, 108, 109, 112, 116, 117, 120], "mean_shim": 16, "measur": [83, 107], "median": [22, 24, 26, 42, 52, 64, 70, 72, 80, 83, 108, 116, 120], "meet": 0, "megabyt": [22, 26, 115], "member": 0, "membership": [3, 24, 26, 42, 50, 62, 72, 80, 116, 123], "memori": [18, 19, 21, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 73, 77, 78, 79, 80, 84, 88, 89, 92, 97, 99, 101, 102, 105, 109, 113, 119], "memory_usag": [22, 26, 27, 73], "memory_usage_info": [22, 26], "memoryview": [26, 42, 56, 72, 77, 80], "mention": [0, 88], "menu": 100, "mere": [26, 42, 56, 72, 77, 80], "merg": [18, 22, 26, 42, 58, 80, 86], "mergesort": [26, 42], "meshgrid": 6, "messag": [1, 18, 19, 21, 22, 26, 27, 32, 42, 47, 48, 54, 56, 59, 60, 72, 77, 78, 79, 80, 82, 97, 100, 109], "messagearg": 82, "meta": 82, "metadata": [26, 29], "method": [2, 5, 18, 19, 20, 22, 24, 25, 26, 29, 42, 47, 48, 52, 54, 56, 57, 59, 60, 64, 70, 71, 72, 73, 77, 78, 79, 80, 82, 85, 90, 91, 108, 109, 113, 114, 116, 117, 119, 120], "mi": [18, 26, 27, 42, 57, 73, 79, 80], "mib": 83, "microsecond": [26, 42, 57, 79, 80], "microsoft": [83, 105], "midnight": [26, 42, 57, 79], "might": [26, 73, 99, 102, 103], "milli": 31, "million": [26, 42, 47, 59, 112], "millisecond": [26, 42, 57, 79, 80], "mimic": [52, 64, 120], "min": [7, 16, 22, 24, 26, 42, 47, 54, 59, 72, 73, 79, 80, 83, 108, 112, 116, 117], "min_round": 83, "min_tim": 83, "mind": [0, 90, 105], "mine": 88, "miniforg": 99, "minim": [5, 22, 26, 87, 88, 114, 115], "minima": [24, 26, 42, 72, 80, 116], "minimum": [13, 16, 17, 24, 26, 42, 47, 48, 59, 60, 72, 79, 80, 101, 112, 116, 117], "mink": [26, 42, 47, 59, 72, 79, 80, 103, 108, 112, 117], "minkmsg": 103, "minlen": [26, 42, 48, 60], "minor": 86, "minut": [26, 42, 57, 79, 80], "mismatch": [22, 24, 26, 42, 72, 80, 99, 116], "miss": [3, 18, 22, 26, 42, 73, 113], "mistak": 86, "mix": [26, 42, 56, 57, 72, 77, 79, 80, 83], "mixtur": [52, 64, 120], "mkdir": [22, 26], "mm": 86, "mmx": 83, "mod": [26, 42, 47, 59], "modal": [24, 26, 42, 72, 80, 116], "mode": [1, 17, 18, 20, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 73, 77, 79, 80, 108, 114, 116], "model": [83, 120], "modif": [18, 20, 22, 24, 26, 27, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 103, 115, 116], "modifi": [22, 26, 42, 87, 115], "modul": [26, 42, 82, 87, 88, 97, 109, 125], "modular": [26, 42, 47, 59, 88], "modulenotfounderror": [26, 42, 47, 59, 72, 79, 80], "moment": 70, "moment_typ": 70, "momtyp": 70, "monoton": [26, 42, 47, 59, 72, 79, 80, 112, 117], "month": [26, 42, 57, 79, 80, 86], "more": [0, 1, 3, 5, 8, 9, 12, 17, 18, 22, 24, 26, 27, 29, 42, 47, 56, 57, 59, 70, 72, 73, 77, 79, 80, 82, 83, 84, 86, 87, 88, 90, 92, 94, 95, 97, 99, 100, 101, 102, 104, 109, 113, 115, 116, 119, 121, 125], "most": [0, 1, 17, 20, 24, 26, 34, 42, 56, 72, 73, 77, 78, 80, 83, 85, 86, 90, 92, 97, 99, 102, 105, 109, 114, 116, 119, 122], "most_common": [24, 26, 42, 58, 72, 80, 108, 116], "mostli": [20, 26, 78, 80], "motion": 1, "movb": 83, "move": [12, 26, 42, 55, 58, 74, 80, 88, 90, 111, 114, 121], "moveaxi": 12, "movement": 114, "mpi": 109, "msb_left": [20, 26], "msgarg": 82, "msgtupl": 82, "msi": 83, "msr": 83, "mt": [5, 9], "mtrr": 83, "mu": [26, 42, 48, 52, 60, 64, 120], "much": [0, 3, 18, 22, 26, 29, 42, 47, 50, 54, 56, 59, 62, 72, 77, 79, 80, 85, 90, 92, 109, 113, 119, 123], "muller": [52, 64, 120], "multi": [3, 20, 24, 26, 29, 42, 50, 62, 72, 73, 80, 90, 99, 110, 114, 116, 119, 122, 123], "multia": [26, 42, 50, 62, 123], "multib": [26, 42, 50, 62, 123], "multidimension": [26, 42, 56, 72, 77, 80], "multiindex": [22, 26, 27, 73, 110, 122], "multipl": [3, 12, 17, 22, 26, 29, 42, 50, 54, 57, 62, 72, 79, 80, 83, 84, 90, 92, 94, 95, 103, 107, 109, 110, 112, 115], "multiplex": 112, "multipli": [8, 24, 26, 42, 52, 64, 68, 72, 76, 80, 82, 116, 120], "must": [1, 3, 4, 10, 12, 18, 19, 20, 22, 24, 26, 27, 29, 42, 47, 48, 49, 50, 52, 54, 56, 57, 59, 60, 61, 62, 63, 64, 69, 70, 72, 73, 77, 78, 79, 80, 82, 84, 87, 90, 91, 97, 101, 103, 109, 112, 114, 115, 116, 118, 119, 120, 122, 124, 125], "mutual": 1, "mv": [70, 87, 88], "mvsk": 70, "my": [26, 42, 56, 72, 77, 80, 87], "my_data": [22, 26], "my_data_locale0000": [22, 26], "my_dir": [22, 26], "my_path": [22, 26], "my_table_nam": [22, 26], "my_zero": [26, 42, 47, 59, 72, 79, 80], "myarrai": [5, 26, 42, 58, 80], "mydtyp": [26, 42, 47, 59, 67, 72, 75, 79, 80, 119], "mypi": [0, 104], "myst": 104, "n": [5, 9, 12, 17, 18, 22, 24, 26, 29, 42, 47, 48, 49, 52, 54, 56, 57, 59, 60, 61, 64, 72, 73, 77, 79, 80, 91, 102, 104, 107, 112, 113, 115, 116, 120, 122], "n_col": 6, "n_row": 6, "na": [18, 22, 26, 42, 73, 92], "na_cod": 92, "naiv": [26, 42, 57, 79], "name": [0, 1, 2, 3, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 32, 38, 39, 42, 47, 48, 52, 54, 56, 57, 58, 59, 60, 64, 67, 70, 72, 73, 75, 77, 78, 79, 80, 82, 83, 84, 86, 90, 91, 92, 94, 99, 100, 102, 103, 104, 108, 109, 110, 113, 114, 115, 116, 120, 122], "name_dict": [52, 64, 120], "name_prefix": [26, 29, 42, 47, 59, 72, 79, 80, 109], "name_prefix_local": [26, 29, 42, 47, 59, 72, 79, 80], "namedtupl": 14, "nameserv": 105, "namespac": [2, 5, 9, 26, 29], "namewidth": [20, 26], "nan": [8, 22, 24, 26, 42, 47, 58, 59, 72, 73, 80, 115, 116, 119], "nanosecond": [26, 42, 48, 57, 60, 79, 80], "nativ": [24, 26, 42, 72, 80, 93, 94, 102, 109, 116, 121], "natur": [8, 112], "navalu": [18, 26, 42, 113], "navig": [83, 86, 99, 100, 101, 102, 104], "nbin": 117, "nbyte": [18, 22, 26, 27, 42, 47, 48, 54, 56, 58, 59, 60, 72, 73, 77, 79, 80, 109], "ncx2": 70, "nd": [19, 26, 42, 47, 59, 82], "ndarrai": [5, 6, 9, 17, 18, 26, 42, 47, 48, 54, 56, 59, 60, 63, 72, 77, 78, 79, 80, 90, 109, 112, 113, 119, 121, 125], "ndarray_subclass": [26, 42], "ndim": [5, 9, 12, 18, 23, 26, 27, 29, 38, 39, 42, 47, 48, 55, 56, 59, 60, 67, 72, 73, 74, 75, 77, 79, 80, 82, 108, 112, 113, 114, 119], "nearest": [26, 42], "necessari": [0, 26, 42, 82, 86, 99, 105], "necessarili": [18, 26, 42, 56, 72, 73, 77, 80], "need": [0, 5, 18, 22, 26, 29, 42, 47, 54, 56, 59, 67, 72, 73, 75, 77, 79, 80, 82, 83, 86, 87, 88, 91, 99, 101, 102, 103, 105, 109, 115, 122], "neg": [6, 8, 22, 24, 26, 42, 47, 48, 52, 54, 59, 60, 64, 72, 80, 85, 114, 116, 118, 120], "negat": 8, "neglig": [18, 26, 42, 56, 72, 77, 80], "neither": [18, 26, 27, 42, 47, 48, 56, 57, 59, 60, 72, 77, 79, 80, 114], "nest": [5, 9, 26, 29, 42, 92, 109], "nestedsequ": 6, "never": [26, 42, 119], "new": [0, 4, 6, 12, 18, 21, 22, 23, 24, 26, 27, 29, 30, 32, 33, 34, 38, 39, 42, 47, 54, 56, 58, 59, 63, 67, 70, 72, 73, 75, 77, 79, 80, 82, 86, 87, 88, 100, 104, 115, 116, 119, 120, 122, 125], "new_arr": [26, 42], "new_categori": [18, 26, 42], "new_ord": [26, 42], "new_shap": [26, 42], "new_str": [26, 42, 56, 72, 77, 80], "newbyteord": [26, 42], "newbytord": [26, 42], "newer": 101, "newfig": [26, 63], "newli": [22, 26, 42], "newlin": [22, 26, 27, 29, 42, 47, 56, 59, 72, 77, 79, 80, 91], "newton": [33, 125], "next": [26, 42, 86, 88, 99, 103, 124], "ngram": [26, 42, 54, 72, 80, 108], "ngroup": [24, 26, 42, 72, 80, 108, 116], "nice": 0, "nightli": 1, "nkedqc": [26, 42, 48, 60], "nkei": [24, 26, 42, 72, 73, 80, 108, 116], "nl": [84, 97, 124], "nlevel": [18, 26, 27, 42, 108, 113], "nnz": [24, 26, 42, 67, 72, 75, 80], "node": [5, 9, 18, 22, 26, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83, 92, 107, 109], "node01": [97, 124], "non": [1, 3, 13, 18, 21, 22, 24, 26, 29, 34, 42, 47, 48, 50, 52, 55, 56, 59, 60, 62, 64, 67, 68, 70, 72, 73, 74, 75, 76, 77, 79, 80, 85, 109, 111, 112, 114, 116, 117, 118, 120], "non_empti": [26, 42, 54, 72, 80], "noncentr": 70, "none": [3, 4, 5, 6, 9, 10, 12, 13, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 34, 42, 47, 48, 49, 52, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 70, 72, 73, 75, 77, 78, 79, 80, 83, 101, 102, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 122, 124], "nonetyp": [26, 42], "nonexist": [22, 26, 115], "nonuniqueerror": 3, "nonzero": [13, 24, 26, 34, 42, 56, 72, 77, 80], "nopl": 83, "nor": [18, 26, 27, 42, 47, 48, 56, 59, 60, 72, 77, 79, 80, 114], "norepeat": [26, 42, 54, 72, 80], "normal": [18, 19, 20, 22, 24, 26, 42, 47, 48, 52, 57, 59, 60, 64, 72, 79, 80, 108, 112, 113, 115, 116], "not_alnum": [26, 42, 56, 72, 77, 80], "not_alpha": [26, 42, 56, 72, 77, 80], "not_decim": [26, 42, 56, 72, 77, 80], "not_digit": [26, 42, 56, 72, 77, 80], "not_empti": [26, 42, 56, 72, 77, 80], "not_equ": 8, "not_spac": [26, 42, 56, 72, 77, 80], "notabl": [17, 125], "note": [0, 1, 2, 3, 4, 5, 9, 15, 17, 18, 19, 20, 22, 24, 26, 27, 29, 30, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 84, 88, 90, 92, 94, 99, 102, 103, 105, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124], "notebook": [19, 25, 97], "notebookhistoryretriev": 25, "notic": [82, 90], "notifi": 92, "notimplementederror": 117, "notion": [5, 9], "notna": [22, 26, 73], "notnul": [26, 73], "nov": 83, "now": [18, 20, 22, 24, 26, 27, 42, 47, 54, 56, 57, 58, 59, 67, 68, 72, 73, 75, 76, 77, 79, 80, 87, 88, 91, 94, 99, 100, 101, 102, 116], "np": [4, 5, 8, 9, 17, 18, 22, 23, 24, 26, 31, 38, 39, 42, 47, 48, 49, 54, 56, 57, 58, 59, 60, 61, 63, 69, 70, 72, 73, 77, 78, 79, 80, 90, 109, 112, 113, 114, 115, 116, 117, 119], "np_arr": 90, "nparam": [26, 42], "nparrai": [26, 78], "null": [18, 22, 24, 26, 29, 42, 56, 72, 77, 80, 92, 109, 113, 125], "num": [6, 17, 19, 23, 26, 38, 39, 42, 72, 79], "num_command": [19, 25], "num_match": [26, 34, 42, 56, 72, 77, 80], "numarg": 70, "numba": [26, 42, 47, 59, 72, 79, 80], "number": [0, 1, 3, 6, 12, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 31, 34, 42, 47, 48, 52, 54, 56, 57, 58, 59, 60, 64, 67, 68, 70, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 86, 87, 88, 90, 92, 101, 103, 105, 107, 109, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124], "number_format_str": [23, 26, 38, 39, 42], "number_of_substit": [26, 42, 56, 72, 77, 80], "numbers2": [26, 27], "numer": [3, 22, 23, 26, 29, 38, 39, 42, 47, 48, 55, 58, 59, 60, 63, 73, 74, 80, 81, 92, 108, 109, 111, 113, 119, 122, 125], "numeric_and_bool_scalar": [23, 26, 38, 39, 42], "numeric_onli": [22, 26], "numeric_scalar": [23, 26, 38, 39, 42, 47, 48, 52, 58, 59, 60, 64, 72, 79, 80, 112, 114, 120], "numericdtyp": [23, 26, 38, 39, 42], "numid": 116, "numlocal": [18, 19, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 124], "numpi": [0, 4, 5, 6, 9, 17, 18, 20, 22, 23, 26, 27, 29, 31, 33, 34, 59, 60, 61, 62, 64, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 90, 91, 92, 94, 104, 107, 109, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 125], "numpu": 19, "numpy_funct": 5, "numpy_scalar": [23, 26, 38, 39, 42, 47, 57, 59, 72, 79, 80, 112, 117], "numpydoc": 82, "nuniqu": [22, 24, 26, 42, 54, 72, 80, 108, 116], "nx": 83, "o": [18, 22, 24, 26, 27, 42, 47, 48, 54, 56, 59, 60, 71, 72, 77, 79, 80, 106, 108, 116], "o0": 1, "o1": 1, "obj": [6, 26, 29, 42, 49, 58, 61, 78, 80], "object": [2, 3, 4, 5, 6, 9, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 38, 39, 42, 47, 48, 50, 54, 56, 57, 58, 59, 60, 62, 63, 70, 71, 72, 73, 77, 78, 79, 80, 82, 91, 92, 93, 94, 95, 105, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "objtyp": [18, 22, 24, 26, 27, 34, 42, 47, 54, 56, 59, 72, 73, 77, 79, 80, 92], "observ": [0, 26, 42, 47, 52, 59, 64, 112, 120], "obtain": [26, 34, 42, 56, 72, 77, 80], "occasion": 82, "occupi": [26, 42], "occur": [19, 22, 23, 24, 26, 29, 34, 38, 39, 42, 47, 49, 52, 56, 59, 61, 64, 72, 73, 77, 79, 80, 99, 116, 117, 120, 122], "occurr": [3, 14, 26, 34, 42, 47, 50, 56, 59, 62, 72, 77, 79, 80, 117], "odd": [26, 42, 47, 59], "oerror": 30, "off": [26, 42, 56, 72, 77, 80, 87], "offer": [110, 115, 122, 125], "offset": [18, 24, 26, 29, 42, 48, 56, 60, 72, 77, 80, 92, 109, 113, 123, 125], "offset_alias": [26, 42, 57, 79], "offset_attrib": [26, 42, 56, 72, 77, 80], "often": [18, 26, 42, 113, 117], "ok": [86, 100], "old": [18, 26, 42, 86], "older": [26, 27, 42, 47, 59, 72, 79, 80, 92, 101], "omiss": [26, 42], "omit": [26, 42, 47, 56, 57, 59, 72, 77, 79, 80, 83, 92, 117], "onc": [0, 22, 24, 26, 29, 42, 47, 56, 59, 72, 73, 77, 79, 80, 84, 85, 86, 88, 90, 91, 94, 99, 105, 116], "one": [0, 1, 2, 3, 4, 5, 6, 9, 12, 17, 18, 22, 24, 26, 27, 29, 30, 42, 47, 48, 50, 52, 54, 56, 59, 60, 62, 64, 67, 70, 72, 73, 75, 77, 79, 80, 82, 83, 86, 88, 90, 91, 92, 94, 97, 101, 102, 103, 104, 105, 109, 112, 113, 114, 115, 116, 120, 123], "one_two": [26, 42, 56, 72, 77, 80], "onelin": 86, "ones": [1, 6, 12, 19, 22, 26, 42, 48, 60, 72, 73, 80, 83, 87, 107, 108, 112, 114], "ones_lik": [6, 26, 42, 48, 60, 72, 108, 114], "onli": [3, 5, 9, 17, 18, 21, 22, 24, 26, 27, 29, 31, 33, 42, 47, 48, 50, 54, 55, 56, 58, 59, 60, 62, 67, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 87, 88, 90, 92, 94, 99, 103, 104, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125], "onlin": [86, 105], "onto": [22, 26, 42, 56, 72, 77, 80], "op": [18, 20, 22, 26, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83], "open": [0, 3, 6, 18, 22, 26, 27, 29, 30, 42, 47, 52, 54, 56, 57, 59, 64, 72, 73, 77, 79, 80, 100, 105, 120], "opeq": [20, 26, 42, 47, 59, 72, 79, 80], "opeqop": [26, 42, 47, 59, 72, 79, 80], "oper": [18, 19, 20, 21, 22, 24, 26, 27, 29, 42, 47, 54, 55, 56, 57, 59, 67, 71, 72, 74, 75, 77, 79, 80, 82, 83, 86, 93, 97, 104, 106, 107, 108, 111, 115, 116, 117, 118, 124], "opposit": [26, 42], "opt": [99, 101, 102], "optim": [26, 42, 87, 100], "option": [1, 3, 4, 6, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 31, 33, 42, 47, 48, 49, 50, 52, 54, 56, 57, 59, 60, 61, 62, 63, 64, 72, 73, 77, 78, 79, 80, 82, 83, 86, 92, 99, 100, 101, 104, 107, 109, 112, 114, 115, 116, 117, 120, 122, 123, 124, 125], "order": [0, 5, 9, 12, 13, 15, 17, 18, 20, 21, 22, 24, 26, 29, 42, 47, 48, 50, 54, 55, 56, 58, 59, 60, 62, 70, 72, 73, 74, 77, 78, 79, 80, 84, 92, 94, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 125], "org": [12, 17, 22, 26, 42, 58, 73, 80, 82], "organ": 100, "orient": [94, 113, 115, 119, 125], "orig": [26, 42, 56, 72, 77, 80], "orig_kei": [24, 26, 42, 72, 80, 116], "origin": [12, 18, 20, 22, 24, 26, 27, 29, 33, 42, 47, 50, 54, 56, 57, 59, 62, 72, 73, 77, 79, 80, 112, 113, 114, 115, 116, 125], "origin_indic": [26, 42, 54, 56, 72, 77, 80], "oserror": 30, "osxsav": 83, "other": [3, 6, 18, 20, 22, 24, 26, 27, 29, 42, 47, 48, 52, 54, 55, 56, 57, 59, 60, 64, 72, 74, 77, 79, 80, 83, 87, 88, 90, 109, 110, 111, 112, 113, 116, 120, 121, 123, 125], "other_df": [22, 26], "otherwis": [0, 3, 6, 13, 16, 18, 22, 23, 24, 26, 27, 29, 33, 38, 39, 42, 47, 48, 50, 52, 54, 56, 58, 59, 60, 62, 64, 70, 72, 73, 77, 79, 80, 106, 109, 113, 115, 116, 119, 120, 123, 125], "our": [0, 26, 42, 47, 59, 82, 83, 85, 86, 90, 92, 97, 99, 100, 105, 106, 109], "out": [0, 16, 19, 22, 26, 42, 54, 72, 80, 87, 88, 91, 92, 94, 99, 103, 117, 118], "outer": [5, 9, 22, 26, 118], "outlier": 83, "outlin": [86, 92], "outperform": [26, 42, 47, 59, 112], "output": [0, 1, 6, 13, 16, 17, 18, 20, 22, 24, 26, 27, 29, 42, 47, 49, 52, 54, 56, 59, 61, 64, 72, 73, 77, 78, 79, 80, 86, 90, 94, 97, 100, 109, 112, 116, 119, 120, 123, 124], "outsid": [0, 91, 103], "outstand": 0, "over": [3, 18, 22, 26, 29, 42, 47, 52, 54, 55, 56, 57, 59, 64, 72, 74, 77, 79, 80, 82, 107, 111, 112, 113, 115, 117, 119, 120, 121, 125], "overcom": [26, 42], "overflow": [18, 26, 42, 47, 56, 59, 72, 77, 79, 80, 109, 113, 119], "overlap": [3, 22, 26, 34, 42, 56, 72, 77, 80], "overload": [24, 26, 42, 72, 80, 116], "overnight": 88, "overrid": [18, 20, 26, 42, 47, 48, 56, 59, 60, 72, 77, 79, 80, 87, 109, 113, 119], "overridden": [26, 42, 48, 60, 71, 79], "overview": 83, "overwhelm": [26, 42, 48, 60, 72, 109], "overwrit": [18, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 116, 119], "overwritten": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 92, 94], "own": [0, 1, 26, 42, 57, 79, 80, 121, 125], "owndata": [26, 42], "owner": [26, 42], "p": [3, 26, 42, 47, 48, 52, 59, 60, 64, 72, 79, 80, 120], "packag": [101, 102, 104, 106], "pad": [17, 20, 26, 86], "pad_width": 17, "padchar": [20, 26], "pae": 83, "page": [17, 21, 81, 86, 99], "pai": 83, "pair": [26, 30, 31, 42, 54, 72, 80], "pairwis": [22, 26], "panda": [0, 18, 22, 26, 27, 29, 42, 48, 57, 60, 73, 78, 79, 80, 82, 93, 95, 104, 109, 110, 113, 115], "parallel": [85, 109, 119, 123], "parallel_start_test": 0, "param": [2, 18, 26, 27, 29, 42, 54, 56, 72, 77, 78, 80, 82, 83], "paramet": [0, 3, 4, 6, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 102, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125], "parameter": [52, 64, 120], "parameter_class": 19, "parametr": 17, "parent": [1, 22, 26, 34, 42], "parent_entry_nam": [33, 34], "pariti": [26, 42, 47, 59, 72, 79, 80], "parquet": [18, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83, 91, 93, 95, 109, 116], "parquet_output": [22, 26], "pars": [19, 20, 22, 26, 27, 42, 47, 59, 67, 72, 73, 75, 79, 80, 124], "parse_hdf_categor": [18, 26, 42], "parseabl": [26, 42, 48, 60, 72, 114], "parser": 104, "part": [0, 5, 8, 9, 26, 42, 54, 56, 72, 77, 80, 105], "parti": [99, 100], "partial": [26, 42], "particular": [5, 12, 22, 26, 42, 70, 73, 82, 103], "particularli": [101, 103], "partit": [26, 42, 56, 72, 77, 80], "paruqet": 94, "pass": [0, 1, 3, 4, 18, 20, 22, 24, 26, 29, 42, 47, 54, 56, 59, 72, 73, 77, 78, 79, 80, 86, 109, 115, 116, 122], "password": [1, 22, 26, 73, 105], "past": 88, "pat": 83, "path": [22, 26, 27, 29, 30, 42, 47, 59, 71, 72, 79, 80, 83, 88, 97, 99, 101, 102, 103, 105, 109], "path_prefix": [26, 29], "path_to_ark": 102, "path_to_arkouda": [100, 104], "path_to_chpl": 102, "pathlib": [22, 26, 30, 42, 71], "pattern": [26, 33, 34, 42, 56, 72, 77, 80, 86, 90, 116, 125], "payload": [26, 42], "pb": 19, "pcid": 83, "pclmulqdq": 83, "pct_avail_mem": 19, "pd": [18, 22, 26, 29, 42, 48, 57, 58, 60, 73, 78, 79, 80, 90, 109, 113, 115], "pd_categor": [26, 42], "pd_df": [22, 26, 90, 115], "pda": [24, 26, 42, 47, 48, 55, 57, 58, 59, 60, 72, 74, 79, 80, 82, 111, 112, 114, 117, 119, 123], "pda1": [26, 42, 47, 59], "pda2": [26, 42, 47, 59], "pdarrai": [3, 4, 6, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 33, 34, 38, 39, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 125], "pdarrayclass": [4, 18, 20, 22, 26, 27, 29, 31, 33, 34, 42, 48, 49, 50, 52, 54, 55, 56, 58, 60, 61, 62, 64, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80, 81, 115], "pdarraycr": [26, 42, 47, 59, 72, 79, 80, 81], "pdarraymanipul": [26, 42, 81], "pdarraysetop": [26, 42, 54, 72, 80, 81, 82], "pdarri": [26, 42, 47, 59, 72, 79, 80], "pdconcat": [26, 73, 122], "pdf": 70, "pdpe1gb": 83, "pdrrai": [26, 42, 48, 60, 72, 109], "peak": [26, 42], "pearson": [22, 26, 42, 47, 59, 72, 79, 80], "peel": [26, 42, 56, 72, 77, 80, 125], "pep8": [0, 100], "per": [1, 18, 19, 21, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83, 88, 92, 103, 109, 112, 116], "percent": [19, 70], "percent_transfer_limit": [58, 80], "percentag": [19, 58, 80], "percentil": 70, "perf_count": 83, "perform": [18, 21, 22, 24, 26, 27, 29, 31, 42, 47, 50, 52, 54, 56, 59, 62, 64, 72, 73, 77, 78, 79, 80, 83, 85, 86, 87, 90, 91, 93, 99, 108, 109, 112, 114, 115, 116, 119, 120], "perhap": [26, 42], "period": [26, 42, 57, 79], "perl": 101, "perm": [22, 26, 42, 55, 58, 74, 80, 111, 115], "perm_arri": [22, 26, 115], "perm_df": [22, 26, 115], "permiss": [18, 26, 27, 42, 47, 54, 56, 59, 72, 77, 79, 80], "permut": [12, 18, 22, 24, 26, 42, 52, 55, 56, 58, 64, 72, 74, 77, 80, 92, 108, 111, 113, 116, 123], "permute_dim": 12, "permute_sampl": [24, 26, 42, 72, 80, 116], "person": 0, "pexpect": 104, "pge": 83, "physic": [19, 33, 125], "physicalmemori": 19, "pi": [4, 17, 26, 52, 64, 120], "pickl": [26, 42], "piec": 87, "pierce314159": 0, "pig": [22, 26, 73], "pip": [101, 102], "pipe": 125, "pipelin": [109, 125], "place": [18, 20, 22, 24, 26, 27, 29, 32, 42, 47, 52, 54, 56, 57, 58, 59, 64, 71, 72, 73, 77, 79, 80, 84, 88, 112, 115, 116, 120], "plan": [105, 106, 117, 119], "platform": [26, 42, 71], "player": [52, 64, 120], "pleas": [0, 18, 20, 22, 24, 26, 27, 29, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 84, 86, 87, 90, 92, 94, 95, 99, 101, 102, 103, 113, 115, 116], "plot": [26, 70, 81, 109, 117], "plot_dist": [26, 63], "plt": [26, 63, 70, 117], "png": 17, "pni": 83, "point": [8, 17, 22, 26, 27, 31, 42, 47, 48, 52, 59, 60, 64, 67, 70, 72, 73, 75, 79, 80, 105, 114, 115, 119], "pointer": [26, 42], "poisson": [52, 64, 108], "polynomi": [42, 81], "popcnt": 83, "popcount": [26, 42, 47, 59, 72, 79, 80], "popul": [21, 24, 26, 30, 34, 42, 47, 59, 72, 79, 80, 112, 116], "port": [1, 18, 19, 22, 26, 29, 42, 47, 54, 56, 59, 72, 73, 77, 79, 80, 87, 97, 107, 124], "portion": 92, "portland": [22, 26], "pos_dt": 31, "posit": [6, 8, 12, 22, 24, 26, 33, 34, 42, 47, 56, 59, 72, 73, 77, 80, 116, 118, 122, 125], "position": [22, 26], "positon": [26, 42, 56, 72, 77, 80], "possess": [26, 42], "possibl": [0, 22, 26, 29, 42, 54, 56, 57, 70, 72, 77, 79, 80, 82, 83, 86, 90, 99, 105, 109, 125], "possibli": [26, 42, 82], "post": [0, 86], "postit": [26, 42, 56, 72, 77, 80], "potenti": [22, 26, 42, 47, 59, 72, 79, 80, 99], "pow": 8, "power": [8, 26, 42, 47, 59, 96, 118], "powershel": 105, "ppf": 70, "pr": [0, 86], "practic": [0, 24, 26, 42, 47, 59, 72, 80, 103, 112, 116], "pre": [18, 26, 42, 58, 80, 113], "preced": 70, "precis": [26, 29, 42, 78, 109, 119], "pred": 31, "predic": 31, "prefer": [0, 26, 42, 102, 104, 106, 120], "prefetch": 21, "prefix": [18, 22, 24, 26, 27, 29, 42, 47, 54, 56, 57, 59, 72, 77, 79, 80, 108, 116], "prefix_path": [18, 20, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 116], "prepar": [22, 24, 26, 42, 72, 80, 99, 116], "prepend": [12, 17, 26, 42, 47, 54, 56, 59, 72, 77, 80, 108], "prepend_singl": [26, 42, 54, 72, 80, 121], "prerequisit": [99, 101, 102], "present": [0, 3, 18, 20, 22, 26, 27, 29, 42, 47, 50, 54, 56, 59, 62, 72, 73, 77, 79, 80, 90, 92, 109, 117, 123], "preserv": [17, 22, 26, 42, 73, 122, 125], "pretti": 88, "pretty_print_info": [18, 26, 42, 47, 56, 59, 72, 77, 79, 80], "pretty_print_inform": [26, 28], "prev": 86, "prevent": [20, 26, 29, 42, 47, 54, 59, 72, 91, 92, 101, 121], "previou": [26, 42, 86, 88, 102], "previous": [18, 22, 24, 26, 27, 29, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 116], "primarili": 109, "print": [0, 1, 18, 19, 21, 22, 26, 28, 42, 47, 56, 59, 65, 72, 73, 77, 79, 80, 105, 124], "print_comm_diagnostics_t": 21, "print_empty_column": 21, "print_server_command": 19, "printabl": [26, 42, 48, 60], "printit": 0, "prior": [100, 103], "privat": [26, 42], "probabl": [18, 22, 24, 26, 42, 52, 56, 64, 70, 72, 77, 80, 116, 120], "problem": [0, 26, 42, 52, 64, 83, 107, 120], "problem_s": 83, "proc": [0, 82], "proce": [18, 26, 42, 47, 48, 56, 59, 60, 72, 77, 79, 80, 109, 113, 119], "procedur": [0, 82], "proceed": 99, "process": [19, 26, 28, 29, 42, 67, 72, 73, 75, 79, 80, 82, 89, 92, 97, 100, 105, 109, 121, 125], "processor": [19, 83], "prod": [16, 22, 24, 26, 42, 47, 54, 59, 72, 73, 79, 80, 108, 112, 116, 117], "produc": [18, 26, 42, 56, 72, 77, 78, 80, 113, 120], "product": [8, 11, 16, 24, 26, 42, 47, 48, 52, 59, 60, 64, 68, 72, 76, 80, 109, 112, 116, 120], "profil": 25, "program": [0, 18, 20, 21, 22, 24, 26, 27, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 97, 100, 116, 124], "progress": 102, "project": [0, 22, 26, 73, 83, 86, 99], "projectfiledir": 100, "promot": [5, 26, 42, 48, 60, 82], "promote_dtyp": [26, 42, 48, 60], "promote_to_common_dtyp": [26, 42, 48, 60], "proof": [20, 26], "proper": [26, 42, 54, 56, 58, 72, 77, 80], "properli": [0, 26, 42, 87, 92, 101, 102], "properti": [2, 5, 9, 18, 22, 26, 27, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 82, 92], "protect": [18, 26, 42, 47, 48, 56, 59, 60, 72, 77, 79, 80, 109, 113, 119], "provid": [0, 7, 17, 18, 22, 24, 26, 27, 29, 42, 47, 49, 52, 54, 56, 58, 59, 61, 64, 72, 73, 77, 78, 79, 80, 82, 83, 85, 90, 91, 92, 94, 95, 99, 101, 102, 104, 109, 112, 115, 116, 120, 121], "prune": 104, "pse": 83, "pse36": 83, "pseudo": 120, "pti": 83, "ptp": [26, 42], "public": [26, 42], "publish": 86, "pull": [26, 29, 42, 48, 60, 82, 86, 92, 114], "purg": [26, 42, 56, 72, 77, 80], "purge_cached_regex_pattern": [26, 42, 56, 72, 77, 80], "purpos": [26, 42, 83, 86, 110, 115, 122], "push": [86, 99, 100], "put": [21, 22, 24, 26, 42, 72, 80, 88, 116], "pv": [26, 42, 48, 60], "pwd": [101, 102], "pwe": [26, 42, 47, 59], "pwr": [26, 42, 47, 59], "py": [0, 1, 82, 83, 87, 103, 104, 107], "pyarray_resolvewritebackifcopi": [26, 42], "pyarrow": [104, 109], "pycharm": 0, "pydata": [22, 26, 73], "pyfiglet": 104, "pyinterpreterdirectori": 100, "pypi": [22, 26, 42, 73], "pyplot": [26, 63, 70, 117], "pytabl": 104, "pytest": [0, 89, 104], "python": [3, 4, 5, 9, 18, 19, 20, 25, 26, 42, 47, 48, 50, 56, 59, 60, 62, 71, 72, 73, 77, 79, 80, 83, 96, 99, 100, 105, 106, 108, 109, 112, 113, 114, 115, 118, 119, 123, 125], "python3": [83, 87, 99, 101], "python_build": 83, "python_compil": 83, "python_implement": 83, "python_implementation_vers": 83, "python_vers": 83, "pythonpath": [101, 102], "pyzmq": 104, "q": 70, "q1": 83, "q3": 83, "qualifi": [22, 26], "queri": [3, 26, 42, 50, 62, 109], "quetzal": [22, 26, 73], "quick": [19, 26, 42, 87], "quickli": [22, 26, 84, 115], "quicksort": [26, 42], "quickstart": [101, 102, 106], "quit": [0, 97], "quotient": [26, 42, 47, 59], "r": [0, 22, 26, 42, 56, 70, 72, 77, 80, 83, 86, 90, 101, 102, 107], "radix": [26, 42, 55, 74, 80, 111], "radixsortlsd": [26, 42, 55, 74, 80, 111], "rais": [3, 5, 9, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125], "ram": 99, "ran": [83, 87], "randint": [3, 4, 19, 24, 26, 42, 48, 50, 52, 55, 60, 62, 64, 72, 74, 79, 80, 90, 108, 111, 112, 114, 116, 117], "randn": [26, 63], "random": [22, 24, 26, 42, 48, 60, 63, 68, 70, 72, 76, 79, 80, 81, 83, 107, 108, 116], "random_sparse_matrix": [68, 76], "random_st": [22, 24, 26, 42, 70, 72, 80, 116], "random_strings_lognorm": [26, 42, 48, 60], "random_strings_uniform": [26, 42, 48, 60], "randomli": [22, 26, 52, 64, 120], "rang": [3, 12, 17, 18, 22, 26, 27, 29, 31, 42, 47, 48, 52, 54, 56, 57, 59, 60, 64, 68, 72, 73, 76, 77, 79, 80, 107, 109, 112, 114, 115, 117, 120, 122, 125], "rank": [18, 19, 26, 42, 47, 48, 50, 52, 56, 59, 60, 62, 64, 67, 72, 75, 77, 79, 80, 82, 108, 109, 113, 114, 118, 120, 123], "rare": [26, 42], "rasi": [18, 26, 42, 56, 72, 77, 80, 113], "rate": [52, 64, 83, 120], "rather": [5, 9, 18, 22, 26, 42, 56, 72, 77, 80], "ravel": [26, 42], "raw": [26, 42, 56, 72, 77, 80, 125], "rc": 102, "rdrand": 83, "rdrnd": 83, "rdseed": 83, "rdtscp": 83, "re": [0, 12, 18, 19, 22, 24, 26, 33, 42, 72, 80, 99, 116, 124, 125], "re2": [18, 26, 42, 56, 72, 77, 80, 99, 113, 125], "reach": 0, "reachabl": 124, "reactiv": 102, "read": [5, 9, 18, 21, 22, 26, 27, 29, 30, 42, 47, 56, 59, 72, 73, 77, 79, 80, 91, 92, 93, 94, 125], "read_": [26, 29], "read_all_test": 1, "read_csv": [22, 26, 29, 91, 95], "read_hdf": [26, 29, 42, 54, 72, 80, 95, 109], "read_nest": [26, 29, 109], "read_parquet": [26, 29, 95, 109], "read_path": [26, 29, 109], "read_tagged_data": [26, 29], "read_zarr": [26, 29], "readabl": [18, 26, 28, 29, 42, 47, 56, 59, 72, 77, 79, 80, 92, 109], "readahead": 21, "readalltest": 1, "readi": [0, 84, 86, 100, 101, 102], "readm": 1, "readthedoc": 82, "real": [0, 8, 26, 42, 48, 52, 60, 64, 82, 86, 92], "realist": [18, 26, 42, 56, 72, 77, 80], "realli": [0, 26, 42, 56, 72, 77, 80], "realloc": [26, 42], "rearrang": [26, 42], "reason": [86, 88, 101, 102], "rebas": 0, "rebuild": [24, 26, 42, 72, 80, 82, 85, 87, 88, 116], "rebuilt": 87, "rec": [42, 81], "recarrai": [26, 42], "receiv": [18, 19, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 109, 119, 124], "receive_arrai": [18, 22, 26, 42, 47, 54, 56, 59, 72, 77, 79, 80], "receive_datafram": [26, 29], "recent": [26, 42, 78, 86], "recommend": [0, 52, 64, 84, 88, 94, 101, 104, 105, 106, 115, 120, 121], "recompil": 88, "recomput": [18, 26, 29, 42], "reconnect": [26, 42, 47, 59, 72, 79, 80], "reconstitut": [18, 26, 42], "reconstruct": 14, "record": [26, 29], "recov": [26, 42], "recreat": [26, 42], "recurs": [26, 42, 48, 60, 72, 109], "recv_binari": [26, 42], "red": [17, 26, 27], "reduc": [22, 24, 26, 42, 72, 80, 87, 89, 116], "reduct": [24, 26, 42, 47, 59, 72, 80, 107, 108, 116, 117], "redund": [26, 42], "ref": 82, "refcheck": [26, 42], "refer": [0, 6, 17, 22, 24, 26, 42, 72, 73, 78, 80, 87, 90, 102, 104, 116], "referenc": [22, 26, 42], "reflect": [22, 26, 42, 102, 115, 121], "reformat": [0, 109], "regard": 101, "regardless": [26, 29, 42, 48, 60, 72, 78, 114], "regex": [18, 26, 42, 56, 72, 77, 80, 113, 125], "regex_max_captur": 1, "regex_split": [26, 42, 56, 72, 77, 80], "regist": [1, 5, 18, 20, 22, 24, 26, 27, 28, 42, 47, 54, 56, 57, 58, 59, 72, 73, 77, 79, 80, 82, 108, 116], "register_al": [26, 42, 58, 80], "registerablepiec": [18, 26, 42], "registercommand": 82, "registerd": [26, 73], "registered_nam": [18, 20, 26, 27, 42, 47, 54, 56, 59, 72, 77, 79, 80], "registeredsymbol": [26, 28], "registerfunct": 103, "registr": [19, 26, 42, 47, 56, 59, 72, 77, 79, 80, 82, 99], "registrationerror": [18, 20, 22, 24, 26, 27, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 116], "registri": [18, 22, 24, 26, 27, 28, 42, 47, 56, 57, 58, 59, 72, 73, 77, 79, 80, 116], "regular": [18, 26, 42, 56, 72, 77, 80, 108, 113], "reinterpret": [26, 42], "rel": [26, 78], "relat": [26, 42, 83, 86, 90], "releas": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83, 88, 89, 97, 101, 102, 120], "release_d": 97, "relev": [26, 42], "reli": [18, 26, 27, 42, 47, 54, 56, 59, 72, 77, 79, 80, 116], "reliabl": [26, 42], "remain": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 101, 109, 110, 115, 122], "remaind": [8, 26, 42, 47, 56, 59, 72, 77, 80], "remap": [18, 26, 42], "rememb": [88, 90], "remot": [21, 86, 101, 102, 124], "remov": [3, 12, 18, 22, 26, 27, 29, 42, 47, 49, 50, 54, 56, 59, 61, 62, 72, 77, 79, 80, 83, 87, 104, 115, 121], "remove_miss": [3, 26, 42, 50, 62], "remove_repeat": [26, 42, 54, 72, 80, 121], "renam": [22, 26], "reorder": [12, 26, 42], "rep": [26, 42], "rep_good": 83, "rep_msg": [18, 20, 22, 24, 26, 27, 42, 54, 56, 72, 77, 80, 103], "repack": [18, 20, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80], "repeat": [1, 12, 17, 18, 26, 42, 47, 54, 59, 72, 80, 113], "repetit": [12, 26, 42], "repl": [25, 26, 34, 42, 56, 72, 77, 80], "replac": [3, 22, 24, 26, 29, 34, 42, 47, 52, 54, 56, 59, 64, 72, 77, 79, 80, 84, 86, 92, 102, 103, 104, 116, 120], "repli": 82, "replic": [24, 26, 42, 72, 80, 116], "repmsg": [26, 42, 67, 72, 73, 75, 79, 80, 82], "repo": [100, 101, 102, 106], "repons": [26, 27], "report": [21, 24, 26, 88, 104], "report_mem": [58, 80], "repr": [22, 24, 26, 42, 70, 72, 73, 80], "repres": [18, 20, 23, 24, 26, 38, 39, 42, 48, 54, 56, 57, 60, 68, 70, 72, 73, 76, 77, 79, 80, 83, 92, 113, 114, 116, 125], "represent": [20, 22, 26, 42, 47, 59, 72, 79, 80], "reproduc": [0, 22, 24, 26, 42, 52, 64, 72, 80, 89, 116, 120], "request": [22, 24, 26, 30, 42, 47, 48, 56, 59, 60, 72, 77, 80, 82, 86, 114, 115, 116], "requir": [0, 3, 4, 5, 9, 16, 19, 21, 22, 24, 26, 27, 29, 31, 42, 47, 48, 59, 60, 72, 73, 79, 80, 84, 85, 87, 88, 92, 93, 94, 97, 99, 103, 109, 114, 115, 116], "requiredpiec": [18, 26, 42], "rerun": 99, "reset": 21, "reset_categori": [18, 26, 42], "reset_comm_diagnost": 21, "reset_index": [22, 26, 115], "reshap": [12, 17, 26, 42, 47, 49, 59, 61, 72, 79, 80, 108], "resid": [26, 42, 47, 56, 59, 67, 72, 75, 77, 79, 80, 119], "resili": [26, 42, 55, 74, 80, 111], "resiz": [26, 42], "resolv": [0, 23, 26, 38, 39, 42, 85, 105], "resolve_scalar_dtyp": [23, 26, 38, 39, 42], "respect": [22, 26, 42, 47, 48, 50, 57, 59, 60, 62, 70, 72, 78, 79, 86, 109, 114], "respons": [19, 22, 26, 42, 47, 56, 59, 72, 77, 79, 80, 82], "rest": [26, 42, 73], "restart": 105, "restor": [26, 29], "restrict": [5, 9, 26, 42], "result": [3, 4, 6, 7, 12, 13, 16, 17, 18, 21, 22, 24, 26, 27, 29, 31, 42, 47, 48, 50, 52, 54, 56, 57, 59, 60, 62, 63, 64, 67, 70, 72, 73, 75, 77, 78, 79, 80, 82, 83, 90, 91, 92, 93, 102, 109, 112, 114, 115, 116, 117, 119, 120, 121, 122, 125], "result_array_on": 31, "result_dtyp": [4, 26], "result_limit": 31, "result_typ": 7, "ret": 82, "retain": [26, 42, 47, 58, 59, 80, 112], "retain_index": [22, 26, 115], "retriev": [19, 25, 26, 28, 42, 47, 59, 71, 72, 73, 79, 80, 86], "return": [3, 4, 5, 6, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 38, 39, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 91, 93, 100, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125], "return_count": 117, "return_group": [24, 26, 80, 123], "return_group_origin": [33, 125], "return_indic": [24, 26, 42, 72, 80, 116, 123], "return_length": 31, "return_match_origin": [26, 33, 34, 42, 56, 72, 77, 80, 125], "return_multipl": [26, 42, 54, 72, 80], "return_num_sub": 34, "return_obj": [26, 29, 109], "return_origin": [26, 42, 54, 56, 72, 77, 80], "return_seg": [26, 34, 42, 56, 72, 77, 80], "return_valid": 119, "revarg": 3, "revers": [5, 9, 12, 17, 20, 21, 24, 26, 42, 72, 80], "review": 86, "revindic": 3, "revkei": 3, "rf": 99, "rh": 101, "right": [3, 8, 13, 17, 20, 22, 26, 42, 47, 55, 56, 57, 59, 68, 70, 72, 74, 76, 77, 78, 79, 80, 86, 100, 111, 115, 118, 124], "right_align": 3, "right_df": [22, 26], "right_suffix": [22, 26], "risk": 92, "rm": 99, "rng": [26, 42, 52, 57, 64, 79, 120], "role": 1, "roll": 12, "root": [8, 18, 20, 22, 24, 26, 27, 42, 47, 57, 59, 72, 73, 79, 80, 83, 92, 101, 109, 112, 116], "rot": [26, 42, 47, 59], "rotat": [26, 42, 47, 59, 72, 79, 80], "rotl": [26, 42, 47, 59, 72, 79, 80], "rotr": [26, 42, 47, 59, 72, 79, 80], "round": [8, 26, 42, 83], "rout": 105, "row": [3, 6, 21, 22, 24, 26, 27, 29, 42, 47, 49, 50, 54, 55, 56, 59, 61, 62, 68, 72, 73, 74, 76, 77, 78, 79, 80, 81, 90, 91, 109, 111, 115, 116, 121, 123], "row_numb": [24, 26, 42, 72, 80], "row_start": [24, 26, 42, 72, 80], "rpartit": [26, 42, 56, 72, 77, 80], "rpath": 99, "rpeel": [26, 42, 56, 72, 77, 80, 125], "rst": [26, 42], "rtol": [26, 78], "rtype": [26, 27], "rule": [5, 17, 23, 26, 38, 39, 42, 119], "run": [18, 19, 22, 26, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 87, 88, 90, 97, 99, 101, 102, 104, 105, 107, 109, 113, 119, 124], "runtim": [19, 26, 29, 42, 85, 100, 109], "runtimeerror": [18, 19, 22, 24, 26, 27, 28, 29, 33, 42, 47, 48, 50, 54, 56, 57, 59, 60, 62, 67, 72, 73, 75, 77, 79, 80, 109, 112, 113, 114, 116, 117, 119, 123, 124, 125], "runtimewarn": [26, 29, 109], "ruok": 19, "rv": 70, "rv_continu": 70, "rw": [26, 42, 48, 60], "rwovkbur": [26, 42, 48, 60], "s1": [26, 42, 112], "s2": [26, 27, 42, 56, 72, 73, 77, 80, 112], "s3": [22, 26, 42, 73], "s_cpy": [26, 42, 56, 72, 77, 80], "sa": [26, 42, 58, 80], "sacrific": 125, "safe": [26, 42, 49, 61, 86, 119], "safer": [26, 42], "sai": 124, "salari": 90, "same": [3, 4, 12, 17, 18, 20, 22, 24, 26, 27, 29, 42, 47, 48, 50, 52, 54, 55, 56, 57, 59, 60, 62, 64, 67, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 86, 90, 91, 92, 94, 100, 101, 102, 103, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 125], "same_kind": [26, 42, 49, 61], "sampl": [17, 22, 24, 26, 42, 48, 52, 60, 64, 72, 80, 108, 116, 120], "satisfi": [3, 22, 26, 29, 42], "save": [18, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83, 84, 86, 87, 92, 93, 94, 100, 109, 113, 116, 123], "save_al": [26, 27, 29, 42, 47, 59, 72, 79, 80, 95], "save_checkpoint": [26, 29], "save_offset": [26, 42, 56, 72, 77, 80], "saveusedmodul": [87, 88, 103], "sb": [26, 42, 58, 80], "scalar": [3, 5, 6, 9, 16, 17, 18, 22, 23, 26, 38, 39, 42, 47, 48, 54, 59, 60, 72, 73, 79, 80, 83, 107, 108, 113, 118, 122], "scalar_arrai": [26, 42, 48, 60], "scalardtyp": [23, 26, 38, 39, 42], "scale": [18, 26, 42, 50, 52, 62, 63, 64, 70, 85, 90, 96, 120, 123], "scaler": [26, 73, 122], "scan": 108, "scatter": [83, 108], "schema": 109, "scheme": 86, "scienc": 116, "scipi": [0, 26, 76, 81, 104], "scl": 101, "scope": [0, 103], "script": [82, 87, 102, 103, 107], "scroll": 99, "se": [24, 26, 42, 47, 59, 72, 80, 112, 116], "search": [3, 13, 18, 26, 33, 42, 50, 56, 62, 72, 77, 80, 100, 108, 113], "search_bool": 34, "search_ind": 34, "search_interv": 3, "searching_funct": [9, 81], "searchsort": [13, 26, 42], "sec": [26, 42, 57, 79, 80, 83], "second": [3, 5, 9, 19, 26, 30, 42, 48, 50, 56, 57, 58, 60, 62, 72, 73, 77, 78, 79, 80, 82, 83, 87, 90, 112, 114, 119, 122, 123, 124], "secret": 71, "section": [1, 26, 42, 83, 85, 86, 87, 88, 90, 92, 97, 99, 100, 104, 112], "secur": [26, 81], "see": [0, 1, 3, 5, 8, 9, 12, 17, 22, 24, 26, 42, 47, 52, 56, 57, 58, 59, 63, 64, 70, 72, 73, 77, 79, 80, 82, 83, 86, 87, 88, 97, 99, 103, 109, 112, 113, 116, 117, 119, 120, 121, 122, 123, 125], "seealso": [26, 27], "seed": [3, 22, 24, 26, 42, 48, 50, 52, 60, 62, 64, 70, 72, 79, 80, 83, 107, 114, 116, 120], "seen": [19, 124], "seg": [58, 80], "seg_a": [26, 42, 54, 72, 80], "seg_b": [26, 42, 54, 72, 80], "seg_suffix": [26, 42, 54, 72], "segarr": [26, 42, 54, 72, 80, 121], "segarrai": [3, 24, 26, 29, 42, 73, 78, 80, 81, 108, 109, 115, 116, 122], "segment": [3, 18, 22, 24, 26, 29, 31, 42, 54, 56, 58, 72, 77, 80, 92, 108, 109, 113, 116, 121, 123, 125], "segment_nam": [26, 42, 54, 72, 80], "segstr": [26, 42, 56, 72, 77, 80], "select": [13, 17, 19, 22, 24, 25, 26, 29, 42, 52, 54, 64, 72, 73, 80, 82, 86, 99, 100, 106, 115, 116, 120], "select_from": [3, 26, 42, 50, 62], "self": [18, 22, 26, 42, 47, 54, 56, 59, 72, 77, 79, 80, 109, 110, 113, 115, 119, 120, 122], "send": [18, 19, 22, 26, 29, 42, 47, 48, 54, 56, 59, 60, 72, 77, 79, 80, 82, 109, 115, 124], "send_arrai": [26, 29], "send_binari": [26, 42], "sens": [22, 26, 73], "sensit": [26, 42, 57, 79, 80], "sent": [26, 29, 42, 93], "sep": [26, 42, 83], "separ": [1, 5, 20, 22, 26, 27, 29, 30, 42, 47, 52, 56, 59, 64, 70, 72, 77, 79, 80, 83, 91, 92, 103, 109, 119, 120, 125], "seq": [26, 78], "sequenc": [3, 6, 17, 18, 20, 22, 26, 27, 42, 47, 48, 49, 50, 52, 54, 55, 58, 59, 60, 61, 62, 64, 67, 72, 74, 75, 78, 79, 80, 111, 114, 116, 117, 119, 120, 123, 125], "sequenti": [26, 29, 109], "seri": [2, 22, 26, 27, 42, 48, 57, 58, 60, 78, 79, 80, 81], "seriesdtyp": [23, 26, 38, 39, 42], "serv": 106, "server": [0, 1, 4, 5, 9, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 32, 33, 38, 39, 42, 47, 48, 52, 54, 56, 57, 59, 60, 64, 67, 71, 72, 73, 75, 77, 79, 80, 85, 87, 88, 100, 101, 102, 105, 107, 108, 112, 113, 114, 115, 116, 117, 119, 120, 121, 125], "server_util": [0, 1], "serverdaemon": 82, "serverhostnam": 19, "servermodul": [1, 26, 29, 87, 88, 103], "serverport": 19, "session": [26, 29, 87, 97], "set": [1, 3, 18, 20, 22, 24, 26, 27, 29, 32, 42, 47, 48, 50, 54, 55, 56, 57, 59, 60, 62, 71, 72, 73, 74, 77, 79, 80, 82, 83, 84, 86, 91, 92, 99, 100, 101, 102, 103, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 125], "set_categori": [18, 26, 42], "set_dtyp": [26, 27, 110], "set_funct": [9, 81], "set_jth": [26, 42, 54, 72, 80, 121], "set_xlim": 70, "setchplenv": [101, 102], "setdiff": [26, 42, 54, 72, 80, 121], "setdiff1d": [26, 42, 50, 54, 62, 72, 80, 82, 90, 108, 123], "setfield": [26, 42], "setflag": [26, 42], "setop": 108, "setup": [1, 99, 105], "setxor": [26, 42, 54, 72, 80, 121], "setxor1d": [26, 42, 50, 54, 62, 72, 80, 82, 90, 108, 123], "sever": [82, 90, 92, 100, 101, 102, 109, 112, 114], "sf": 70, "sh": [101, 102], "shallow": [24, 26, 115], "shape": [3, 5, 6, 9, 12, 17, 18, 22, 23, 26, 27, 29, 38, 39, 42, 47, 48, 49, 50, 52, 56, 58, 59, 60, 61, 62, 64, 67, 70, 72, 73, 75, 77, 79, 80, 108, 112, 113, 114, 119, 120], "shape_a": [26, 42], "share": [18, 22, 24, 26, 27, 42, 47, 54, 56, 59, 72, 77, 78, 79, 80, 86, 105, 116], "shell": [19, 25, 26, 29, 102, 109], "shellhistoryretriev": 25, "shift": [8, 12, 70], "ship": [99, 104], "short": [26, 42], "shorthand": [26, 42, 47, 56, 59, 72, 77, 79, 80], "should": [0, 1, 4, 5, 9, 17, 18, 22, 23, 24, 26, 29, 38, 39, 42, 47, 48, 56, 58, 59, 60, 67, 72, 73, 75, 77, 78, 79, 80, 82, 86, 87, 88, 90, 91, 92, 93, 97, 99, 101, 102, 104, 105, 109, 115, 116, 119, 124], "shouldn": [87, 88], "show": [22, 26, 29, 42, 63, 70, 78, 99, 109, 116, 117], "show_int": [20, 26], "shown": 124, "shrink": [26, 42], "shuffl": [52, 64, 108], "shut": [19, 97, 103], "shutdown": [19, 87, 88, 103], "side": [1, 13, 18, 19, 22, 24, 26, 27, 28, 29, 33, 42, 47, 48, 52, 54, 56, 57, 59, 60, 64, 67, 72, 73, 75, 77, 79, 80, 82, 86, 87, 97, 103, 105, 109, 112, 113, 116, 117, 118, 119, 120, 121, 124, 125], "sigma": [26, 42, 48, 52, 60, 64, 120], "sign": [8, 26, 29, 42, 47, 52, 59, 64, 109, 115, 119, 120], "signal": [26, 42], "signatur": [25, 82], "signific": [20, 26, 42, 47, 55, 59, 74, 80, 86, 103, 111, 112], "significantli": [18, 26, 42, 87, 113], "similar": [0, 26, 29, 42, 56, 72, 77, 80, 83, 90, 109, 119, 121, 125], "similarli": [26, 42, 83, 90], "simpl": [0, 26, 42, 90, 103, 117], "simplest": 83, "simpli": [18, 19, 22, 26, 42, 114], "simplifi": [0, 26, 42, 83], "simul": [101, 102], "simultan": [26, 42], "sin": [8, 17, 108, 112], "sinc": [1, 5, 26, 42, 88, 113, 115, 119, 125], "sine": [8, 112], "singl": [0, 2, 3, 4, 5, 9, 17, 18, 20, 22, 24, 26, 27, 29, 31, 42, 47, 48, 50, 52, 54, 56, 59, 60, 62, 64, 72, 77, 79, 80, 87, 88, 90, 92, 94, 99, 103, 107, 109, 114, 115, 116, 118, 120, 121, 123], "singleton": [12, 13, 16, 17, 26, 42, 47, 57, 59, 72, 79, 80, 112, 117], "sinh": 8, "siphash128": [18, 26, 42, 56, 72, 77, 80], "site": 99, "situat": [26, 42, 48, 60, 79], "six": [26, 42, 56, 67, 72, 75, 77, 79, 80], "size": [3, 5, 9, 12, 18, 21, 22, 23, 24, 26, 27, 29, 31, 38, 39, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 90, 93, 94, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125], "skew": [26, 70], "skip": [1, 24, 26, 29, 42, 56, 72, 77, 80, 101, 109, 116, 123], "skipna": [24, 26, 42, 72, 80, 116], "slice": [17, 18, 22, 26, 42, 47, 49, 59, 61, 72, 79, 80, 90, 108, 113, 115, 121, 125], "slice_bit": [26, 42, 47, 59, 72, 79, 80], "slightli": [22, 26, 29, 115], "slower": [18, 26, 42, 125], "small": [22, 26, 73, 92, 109], "smaller": [17, 26, 42, 73, 86, 91, 109], "smallest": [22, 24, 26, 42, 47, 59, 72, 73, 80, 112, 116, 122], "smallest_norm": 7, "smap": 83, "smemtrack": 1, "smep": 83, "smith": 90, "snappi": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83, 94, 99], "snapshot": [26, 29], "so": [0, 1, 15, 17, 18, 20, 22, 24, 26, 29, 42, 47, 52, 54, 56, 59, 64, 72, 73, 77, 79, 80, 83, 85, 86, 87, 88, 97, 103, 104, 105, 109, 112, 115, 116, 120, 122, 123], "socket": [19, 124], "softwar": 101, "some": [0, 3, 5, 18, 22, 26, 29, 42, 50, 62, 70, 84, 90, 94, 99, 113, 115, 121, 125], "some_dtyp": [26, 42], "someon": [0, 86], "someth": [26, 42, 86, 87, 105, 124], "sometim": [26, 42, 52, 64, 70, 103, 119], "somewhat": 85, "somewher": 82, "sort": [1, 3, 13, 15, 17, 18, 22, 24, 26, 42, 47, 50, 54, 56, 58, 59, 62, 72, 73, 77, 78, 79, 80, 81, 86, 100, 107, 108, 112, 113, 114, 116, 117, 123, 125], "sort_index": [22, 26, 73, 122], "sort_valu": [18, 22, 26, 42, 73, 115, 122], "sorted_df1": [22, 26, 115], "sorted_df2": [22, 26, 115], "sorter": [13, 26, 42], "sorting_funct": [9, 81], "sortingalgorithm": [26, 42, 55, 74, 80, 111], "sought": [26, 42, 56, 72, 77, 80], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 92, 97, 99, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125], "space": [0, 1, 3, 6, 17, 26, 42, 48, 50, 56, 57, 60, 62, 67, 72, 75, 77, 79, 80, 83, 99, 103, 114, 117, 125], "span": [26, 42, 56, 72, 77, 80], "sparrai": [67, 68, 75, 76], "sparrayclass": [26, 66, 68, 76, 81], "spars": [3, 24, 26, 42, 58, 67, 68, 72, 75, 76, 80, 116, 119], "sparse_matrix_matrix_mult": [68, 76], "sparse_sum_help": [58, 80], "sparsematrix": [26, 66, 81], "special": [20, 26, 42, 56, 66, 70, 72, 73, 77, 80, 81, 119, 122], "special_objtyp": [20, 26, 42, 57, 79, 80], "special_str": [26, 42, 56, 72, 77, 80], "specif": [0, 5, 9, 21, 22, 26, 29, 42, 52, 64, 70, 78, 88, 91, 92, 93, 101, 103, 108, 109, 115, 120], "specifi": [1, 3, 5, 6, 7, 9, 10, 12, 15, 17, 20, 22, 23, 24, 26, 27, 29, 30, 38, 39, 42, 47, 48, 49, 52, 54, 56, 57, 58, 59, 60, 61, 63, 64, 68, 70, 72, 73, 76, 77, 78, 79, 80, 82, 83, 87, 93, 109, 112, 114, 115, 116, 120], "speed": [18, 26, 42, 50, 62, 85, 89, 100, 103, 113, 114, 123], "spelt": [26, 42], "sphinx": [81, 99, 104], "splash": 1, "split": [26, 34, 42, 56, 72, 77, 80, 86, 108], "spread": 109, "sqrt": [8, 24, 26, 42, 47, 52, 59, 64, 72, 80, 112, 116, 120], "squar": [8, 24, 26, 42, 47, 52, 59, 64, 70, 72, 80, 112, 116, 120], "squash": 0, "squeez": [12, 26, 42], "src": [82, 103], "ss": 83, "ssbd": 83, "sse": 83, "sse2": 83, "sse4_1": 83, "sse4_2": 83, "ssegmentedstr": [26, 42, 56, 72, 77, 80], "ssh": 1, "ssse3": 83, "st": 82, "stabl": [15, 26, 42, 55, 74, 80, 111], "stack": [12, 26, 42, 49, 61, 125], "stale": 99, "standalon": [26, 42, 47, 57, 59, 72, 79, 80, 117], "standard": [0, 5, 16, 18, 24, 26, 42, 47, 48, 52, 57, 59, 60, 64, 70, 72, 79, 80, 82, 83, 84, 112, 116, 117, 120], "standard_exponenti": [52, 64, 108], "standard_gamma": [52, 64], "standard_norm": [26, 42, 48, 52, 60, 64, 108], "standardize_categori": [18, 26, 42], "start": [0, 3, 5, 6, 9, 18, 21, 22, 24, 26, 27, 31, 33, 34, 42, 47, 48, 54, 55, 56, 57, 59, 60, 72, 73, 74, 77, 79, 80, 92, 108, 111, 113, 114, 116, 118, 121, 125], "start_comm_diagnost": 21, "start_verbose_comm": 21, "startswith": [18, 26, 42, 56, 72, 77, 80, 108, 113, 125], "startup": [1, 97, 108], "stat": [26, 66, 81, 83], "state": [18, 26, 29, 42, 52, 56, 64, 72, 77, 80, 86, 120], "static": [18, 26, 27, 42, 47, 54, 56, 59, 72, 77, 79, 80, 116], "statist": [21, 24, 26, 42, 47, 59, 72, 80, 83, 108, 112, 116], "statistical_funct": [9, 81], "statu": 19, "std": [16, 22, 24, 26, 42, 47, 57, 59, 70, 72, 73, 79, 80, 108, 112, 116, 117], "stddev": 83, "stddev_outli": 83, "stderr": 100, "stdev": [52, 64, 120], "stdin": [26, 42], "stdout": 100, "step": [0, 6, 24, 26, 42, 80, 83, 84, 85, 88, 99, 103, 106, 123, 124], "stepfil": 70, "stibp": 83, "stick": [26, 42, 56, 72, 77, 80, 88, 125], "still": [26, 42, 92, 125], "stop": [6, 19, 21, 26, 42, 48, 60, 72, 80, 114, 118], "stop_comm_diagnost": 21, "stop_verbose_comm": 21, "storag": [22, 26, 42, 73, 83], "storage_opt": [22, 26, 73], "store": [5, 9, 13, 20, 21, 22, 24, 26, 27, 29, 42, 48, 52, 56, 60, 64, 71, 72, 77, 80, 82, 83, 91, 92, 95, 105, 109, 113, 114, 116, 121, 125], "store_path": [26, 29], "str": [2, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 42, 47, 48, 49, 52, 54, 56, 57, 58, 59, 60, 61, 63, 64, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 83, 91, 109, 112, 113, 114, 115, 116, 119, 120, 124, 125], "str_": [23, 26, 38, 39, 42], "str_acc": [26, 73], "str_scalar": [18, 23, 26, 34, 38, 39, 42, 56, 72, 77, 80, 113], "straight": 86, "strategi": [104, 105, 109], "stream": [5, 9, 52, 64, 87, 120], "streamhandl": [26, 42, 72], "strict": [22, 24, 26, 42, 70, 72, 73, 78, 80, 119], "strict_typ": [26, 29], "stricttyp": [26, 29, 109], "stride": [22, 26, 31, 42, 48, 60, 72, 80, 114, 115, 118], "stride_trick": [26, 42], "strides_a": [26, 42], "string": [0, 1, 3, 4, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 38, 39, 42, 47, 48, 50, 54, 55, 57, 58, 59, 60, 62, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 86, 103, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123], "string_oper": [2, 26], "stringa": [26, 42, 56, 72, 77, 80], "stringaccessor": [2, 26], "stringb": [26, 42, 56, 72, 77, 80], "stringc": [26, 42, 56, 72, 77, 80], "stringifi": [22, 26, 115], "strings0": [26, 42, 56, 72, 77, 80], "strings1": [26, 42, 56, 72, 77, 80], "strings2": [26, 42, 56, 72, 77, 80], "strings_arrai": [26, 42, 56, 72, 77, 80, 92], "strings_encodedecod": 83, "strings_end": [26, 42, 56, 72, 77, 80], "strings_pdarrai": [26, 42, 56, 72, 77, 80], "strings_start": [26, 42, 56, 72, 77, 80], "strip": [26, 42, 56, 72, 77, 80], "strive": 86, "structur": [18, 22, 26, 29, 42, 54, 72, 80, 90, 94, 115, 116, 119, 121, 125], "strucutur": 121, "stub": 104, "style": [0, 18, 20, 22, 24, 26, 27, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 115, 116, 119], "sub": [26, 34, 42, 54, 56, 72, 77, 80, 108, 125], "subclass": [5, 26, 42], "subdir": 101, "subdirectori": 82, "subdomain": [5, 9], "subject": [1, 26, 42, 47, 57, 59, 79], "subn": [26, 42, 56, 72, 77, 80, 125], "subok": [26, 42], "subplot": 70, "subsequ": [26, 42, 92], "subset": [5, 18, 19, 22, 25, 26, 42, 54, 72, 80, 103, 112, 115], "substanti": 86, "substitu": [26, 42, 56, 72, 77, 80], "substitut": [26, 34, 42, 56, 72, 77, 80, 97, 99], "substr": [18, 20, 26, 42, 56, 72, 77, 80, 108, 113], "subsystem": 105, "subtract": 8, "succeed": 119, "success": [18, 19, 22, 26, 27, 29, 31, 42, 47, 54, 56, 59, 72, 77, 79, 80, 119, 124], "successfulli": 102, "sudo": 105, "suffix": [22, 26, 29, 42, 54, 56, 72, 77, 80, 92, 108], "suggest": [26, 42, 88, 105], "suitabl": [13, 26, 42], "sum": [8, 16, 22, 24, 26, 42, 47, 52, 54, 57, 58, 59, 64, 72, 73, 79, 80, 108, 112, 116, 117, 120], "summar": [108, 109], "summari": [0, 22, 26], "super": 0, "supercomput": 96, "suppli": [24, 26, 29, 42, 47, 48, 54, 57, 59, 60, 72, 79, 80, 92, 94, 95, 114, 115, 117], "support": [0, 3, 4, 17, 18, 19, 20, 22, 23, 24, 26, 27, 29, 30, 38, 39, 42, 47, 48, 50, 54, 56, 57, 59, 60, 62, 67, 71, 72, 73, 75, 77, 79, 80, 82, 90, 93, 97, 99, 101, 102, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125], "supported_opeq": [26, 42, 57, 79, 80], "supported_scalar": [26, 73], "supported_with_datetim": [26, 42, 57, 79, 80], "supported_with_pdarrai": [26, 42, 57, 79, 80], "supported_with_r_datetim": [26, 42, 57, 79, 80], "supported_with_r_pdarrai": [26, 42, 57, 79, 80], "supported_with_r_timedelta": [26, 42, 57, 79, 80], "supported_with_timedelta": [26, 42, 57, 79, 80], "supportsbufferprotocol": 6, "suppress": [22, 26], "sure": [0, 22, 26, 27, 29, 42, 47, 56, 59, 72, 77, 79, 80, 86, 105], "surpris": 17, "surround": [0, 70], "surviv": [3, 70], "swap": [26, 42], "swapax": [26, 42], "switch": 103, "sy": [22, 23, 24, 26, 38, 39, 42, 70, 72, 73, 80], "symbol": [19, 26, 28, 42, 47, 54, 56, 59, 72, 77, 79, 80, 82, 119], "symentri": 82, "symlink": 105, "symmetr": [3, 24, 26, 42, 50, 54, 62, 72, 80, 90, 108, 123], "symmetric_differ": [24, 26], "symtab": 82, "symtabl": 19, "sync": 102, "synchron": [18, 26, 42, 100], "syntax": [26, 42, 118], "syscal": 83, "system": [1, 18, 26, 42, 47, 52, 56, 59, 64, 71, 72, 77, 79, 80, 82, 83, 99, 102, 103, 104, 105, 106, 109, 112, 113, 119, 120, 124], "systemerror": [26, 42], "t": [0, 3, 5, 9, 17, 22, 26, 29, 42, 47, 50, 56, 57, 59, 62, 72, 77, 79, 80, 82, 86, 87, 88, 99, 101, 102, 105, 107], "t1": [26, 31, 42], "t2": [26, 31, 42], "tab": [0, 86, 99, 100], "tabl": [3, 19, 21, 22, 26, 28, 42, 47, 54, 56, 59, 72, 73, 77, 80, 82, 83, 119], "tablefmt": [22, 26, 73], "tablul": [22, 26, 73], "tabul": [22, 26, 73, 104], "tag": [0, 26, 29, 32, 86, 88], "tag_data": [26, 29], "tagdata": [26, 29], "taht": 109, "tail": [22, 24, 26, 42, 48, 60, 72, 73, 80, 108, 116], "take": [0, 4, 10, 20, 24, 26, 32, 42, 47, 52, 59, 64, 70, 72, 80, 82, 84, 85, 87, 88, 90, 93, 109, 116, 120], "taken": [17, 86, 103], "tan": 8, "tangent": 8, "tanh": 8, "tar": [97, 99, 101, 102], "target": [21, 26, 30, 42, 48, 60, 72, 80, 83, 85, 86, 99, 109, 114, 118, 119], "task": [1, 19], "tb": 19, "tblgen": 105, "tcp": [19, 97, 124], "team": 86, "technic": [26, 29], "techniqu": 88, "tell": [26, 29, 42, 82, 83, 109], "temp_c": [22, 26], "temp_f": [22, 26], "temp_k": [22, 26], "temporarili": 99, "tend": 85, "tensor": [6, 24, 26, 42, 72, 80, 116], "tensordot": 11, "term": [3, 26, 42, 50, 62], "termin": [26, 29, 92, 97, 105, 124], "test": [3, 18, 21, 22, 26, 29, 42, 50, 62, 81, 84, 86, 87, 88, 90, 97, 103, 115, 123], "test_": 0, "test_command": 103, "test_data_url": 1, "testmsg": 103, "text": [26, 42, 86, 91, 109], "texttt": [52, 64, 120], "th": [5, 6, 9, 12, 17, 26, 42, 54, 72, 80, 112], "than": [3, 5, 9, 12, 17, 18, 22, 24, 26, 27, 29, 42, 47, 48, 50, 52, 54, 55, 56, 59, 60, 62, 64, 72, 73, 74, 77, 79, 80, 84, 86, 87, 94, 109, 111, 113, 114, 115, 116, 119, 120, 123, 125], "thei": [1, 12, 17, 18, 19, 20, 22, 24, 26, 27, 29, 42, 47, 54, 56, 57, 58, 59, 72, 73, 77, 78, 79, 80, 84, 86, 91, 92, 93, 100, 101, 102, 109, 113, 116, 122], "them": [1, 21, 22, 26, 29, 42, 50, 56, 62, 70, 72, 77, 80, 86, 101, 109, 115, 123], "themselv": [26, 42, 47, 59], "therefor": [26, 42, 92], "theta": [17, 52, 64], "thi": [0, 1, 4, 5, 6, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 32, 38, 39, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 99, 101, 102, 103, 105, 106, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125], "thin": [20, 26, 80], "thing": [0, 5, 9, 90], "third": [26, 42, 48, 60, 72, 80, 86, 99, 100, 114], "thirti": 3, "those": [0, 5, 9, 17, 26, 42, 55, 74, 80, 90, 101, 103, 111, 118], "though": [21, 22, 26, 90], "thousand": 109, "three": [3, 26, 42, 48, 50, 56, 57, 60, 62, 68, 72, 76, 77, 79, 80, 82, 99, 114, 118, 119, 123], "three_____four____f": [26, 42, 56, 72, 77, 80], "thresh": [22, 26], "threshold": 125, "thrift": 99, "through": [1, 26, 42, 78, 82, 84, 86, 97, 102], "throw": [12, 82], "thrown": [18, 22, 26, 27, 28, 29, 33, 42, 47, 48, 54, 56, 57, 59, 60, 67, 72, 73, 75, 77, 79, 80, 109, 112, 113, 117, 119, 125], "thu": [5, 9, 26, 29, 42, 48, 55, 60, 74, 80, 92, 93, 111, 121], "ti": [26, 42], "tiebreak": 3, "tile": [12, 26, 42], "time": [1, 18, 19, 22, 24, 26, 27, 29, 31, 42, 47, 52, 54, 56, 57, 59, 64, 72, 73, 77, 79, 80, 83, 85, 87, 88, 91, 92, 94, 103, 107, 109, 113, 116, 117, 120, 123, 125], "timeclass": [26, 29, 42, 81], "timedelta": [26, 29, 42, 48, 57, 60, 79, 80], "timedelta64": [17, 26, 42, 57, 79, 80], "timedelta_rang": [26, 42, 57, 79], "timedeltaindex": [26, 42, 57, 79, 80], "timeout": [1, 19, 124], "timer": 83, "times2": 82, "times_pi": [4, 26], "timeseri": [26, 42, 57, 79, 80], "timestamp": 31, "timezon": [26, 42, 57, 79], "timsort": [26, 42], "tip": [89, 99], "titl": [0, 26, 42, 56, 72, 77, 80, 86, 100], "titlecas": [26, 42, 56, 72, 77, 80], "tm": [26, 78, 83], "to_csv": [22, 26, 27, 29, 42, 47, 56, 59, 72, 77, 79, 80, 91, 95], "to_cuda": [26, 42, 47, 59, 72, 79, 80], "to_datafram": [26, 73], "to_datetim": [26, 42, 48, 60, 79], "to_devic": [5, 9], "to_dict": [26, 27], "to_hdf": [18, 20, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 92, 95, 108, 109, 116], "to_list": [3, 18, 20, 26, 27, 42, 47, 54, 56, 59, 72, 73, 77, 79, 80, 90, 109, 119], "to_markdown": [22, 26, 73], "to_ndarrai": [5, 9, 18, 20, 26, 27, 42, 47, 48, 54, 56, 57, 59, 60, 63, 72, 73, 77, 79, 80, 90, 108, 109, 113, 117, 119, 121, 125], "to_panda": [18, 22, 26, 27, 42, 57, 73, 79, 80, 90, 115, 122], "to_parqet": [26, 42, 47, 59, 72, 79, 80], "to_parquet": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 94, 95, 109], "to_pdarrai": [67, 75], "to_str": [18, 26, 42], "to_zarr": [26, 29], "tobyt": [26, 42], "todo": [26, 42], "toencod": [26, 42, 56, 72, 77, 80], "tofil": [26, 42], "togeth": [18, 22, 24, 26, 42, 56, 58, 72, 77, 80, 115, 116, 123], "toggl": [26, 42], "token": [1, 19, 71, 97, 124], "token_hex": 71, "token_str": 97, "token_valu": [19, 124], "toleft": [26, 42, 56, 72, 77, 80], "toler": [26, 78], "tolist": [5, 9, 26, 42], "too": [5, 9, 21, 85, 109], "tool": [0, 99, 101, 102], "toolset": 90, "top": [26, 73, 82, 87, 92, 99, 101, 102, 105, 106, 122], "topn": [26, 73, 122], "tostr": [26, 42], "total": [19, 22, 24, 26, 29, 42, 56, 72, 77, 80, 83, 109, 116], "total_mem": 19, "total_second": [26, 42, 57, 79, 80], "totestmsg": 103, "touch": 118, "toward": [26, 42, 48, 60, 70], "trace": [26, 42], "traceback": [26, 42, 78], "track": [0, 87, 94], "trail": [26, 42, 47, 56, 59, 72, 77, 79, 80], "trait": 25, "transfer": [18, 22, 26, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83, 109, 113, 115, 119, 121, 125], "transfer_r": 83, "transform": [26, 27, 52, 64, 120], "transit": 90, "transport": [26, 42], "transpos": [5, 9, 26, 42, 54, 72, 80, 109], "trapezoid": 17, "trapezoidal_rul": 17, "trapz": 17, "travers": [26, 42], "treat": [3, 20, 22, 23, 26, 38, 39, 42, 55, 74, 80, 83, 90, 111, 115], "trial": [83, 107], "trigger": 21, "tril": 6, "triu": 6, "trivial": 3, "troubl": [26, 42], "true": [1, 3, 6, 7, 13, 15, 17, 18, 19, 20, 22, 23, 24, 26, 27, 29, 31, 33, 34, 38, 39, 42, 47, 48, 50, 52, 54, 56, 57, 58, 59, 60, 62, 63, 64, 70, 72, 73, 77, 78, 79, 80, 83, 90, 102, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125], "true_dt": 31, "truli": [26, 42], "trunc": 8, "truncat": [8, 18, 20, 24, 26, 27, 29, 42, 47, 54, 56, 59, 70, 72, 77, 79, 80, 92, 94, 116], "try": [0, 23, 26, 27, 29, 38, 39, 42, 47, 59, 72, 79, 80, 99, 105], "tsc": 83, "tune": 1, "tunnel": 1, "tup": [26, 42, 49, 61], "tupl": [3, 5, 6, 7, 9, 12, 13, 14, 16, 17, 18, 20, 22, 24, 26, 27, 29, 31, 42, 47, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 67, 72, 73, 75, 77, 79, 80, 90, 109, 112, 113, 114, 115, 116, 117, 119, 122, 123], "turn": [23, 26, 38, 39, 42, 73, 87, 97, 122], "tutori": 105, "twenti": 3, "twice": [26, 42, 48, 60, 72, 109], "two": [3, 8, 11, 17, 18, 20, 22, 24, 26, 27, 31, 42, 47, 48, 50, 54, 56, 57, 58, 59, 60, 62, 68, 72, 73, 76, 77, 78, 79, 80, 82, 90, 91, 103, 109, 112, 114, 116, 123, 125], "twoarrayradixsort": [26, 42, 55, 74, 111], "txt": 1, "typ": [26, 42], "type": [2, 3, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 38, 39, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 93, 99, 104, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 122, 123, 124, 125], "typecheck": [26, 42, 82], "typecod": [26, 42], "typeerror": [3, 18, 20, 22, 24, 26, 27, 29, 31, 32, 42, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 72, 73, 74, 77, 79, 80, 82, 109, 111, 112, 113, 114, 116, 117, 120, 122, 123], "typeguard": 104, "typehint": 104, "typevar": 119, "typic": [0, 20, 26, 29, 42, 80, 82, 87, 88, 113], "tz": [26, 42, 57, 79], "tzg": [26, 42, 48, 60], "tzinfo": [26, 42, 57, 79], "u": [0, 20, 26, 42, 48, 57, 60, 72, 79, 80, 86, 100, 101, 102, 109], "u0": [22, 26, 27], "u0009": [26, 42, 56, 72, 77, 80], "u0009nu000bu000cu000d": [26, 42, 56, 72, 77, 80], "u000b": [26, 42, 56, 72, 77, 80], "u000c": [26, 42, 56, 72, 77, 80], "u000d": [26, 42, 56, 72, 77, 80], "u2": [26, 42], "u5": [26, 42, 56, 72, 77, 80], "ub": 70, "ubuntu": 105, "ui": [1, 23, 26, 38, 39, 42], "uic": [26, 42], "uint": [3, 22, 23, 26, 29, 38, 39, 42, 47, 48, 56, 59, 60, 72, 77, 79, 80, 91], "uint16": [23, 26, 38, 39, 42], "uint32": [23, 26, 29, 38, 39, 42, 109], "uint64": [3, 20, 23, 24, 26, 38, 39, 42, 47, 48, 52, 55, 58, 59, 60, 64, 72, 74, 79, 80, 83, 92, 107, 111, 112, 114, 115, 117, 119], "uint8": [23, 26, 38, 39, 42, 56, 72, 77, 80, 92, 117, 119, 125], "ultim": [26, 42], "unabl": [18, 20, 22, 24, 26, 27, 42, 47, 56, 57, 59, 72, 73, 77, 79, 80, 116], "unaffect": 83, "unbias": [24, 26, 42, 47, 59, 72, 80, 112, 116], "unchang": [18, 26, 42], "undefin": [26, 42, 48, 52, 60, 64, 114], "under": [0, 2, 17, 18, 20, 22, 24, 26, 27, 29, 42, 47, 48, 54, 56, 57, 59, 60, 72, 73, 77, 79, 80, 83, 86, 109, 113, 116, 119], "under_map": [26, 42, 56, 72, 77, 80], "under_split": [26, 42, 56, 72, 77, 80], "underflow": 119, "underli": [18, 20, 22, 24, 26, 27, 42, 52, 54, 57, 64, 72, 73, 78, 79, 80, 116, 120], "underneath": 86, "underscor": [5, 9], "undocu": [26, 42], "undoubl": 82, "unequ": 112, "uniform": [26, 42, 48, 52, 55, 60, 64, 74, 79, 80, 108, 109, 111, 112, 114], "uniformli": [26, 42, 48, 52, 60, 64, 68, 76, 114, 120], "uniniti": [26, 42, 47, 59], "uninterpret": 119, "union": [4, 6, 18, 19, 22, 24, 26, 28, 29, 31, 42, 47, 48, 49, 50, 52, 54, 59, 60, 61, 62, 64, 68, 72, 76, 79, 80, 90, 108, 109, 113, 114, 116, 117, 119, 122, 123], "union1d": [18, 26, 42, 50, 54, 62, 72, 80, 82, 90, 108, 123], "uniqu": [3, 12, 14, 18, 22, 24, 26, 27, 42, 47, 50, 54, 56, 59, 62, 72, 73, 77, 79, 80, 90, 92, 108, 109, 113, 116, 117, 118, 121, 122, 123, 125], "unique_al": 14, "unique_count": 14, "unique_invers": 14, "unique_kei": [24, 26, 42, 72, 80, 108, 116], "unique_key_idx": 92, "unique_valu": [14, 26, 42, 47, 59, 72, 79, 80, 117], "uniqueallresult": 14, "uniquecountsresult": 14, "uniqueinverseresult": 14, "unit": [0, 1, 19, 22, 26, 27, 42, 57, 58, 73, 78, 79, 80], "unknown": [22, 26, 27, 29, 42, 47, 48, 56, 59, 60, 72, 77, 79, 80], "unless": [1, 22, 24, 26, 29, 42, 52, 56, 64, 72, 77, 80, 116, 120], "unlik": [22, 26, 29, 42, 56, 57, 72, 77, 79, 80], "unlimit": [22, 26], "unnecessari": 88, "unord": [24, 26, 42, 54, 72, 80], "unpack": [26, 42, 56, 72, 77, 80, 97, 102, 125], "unpickl": [26, 42], "unregist": [18, 20, 22, 24, 26, 27, 42, 47, 54, 56, 57, 58, 59, 72, 73, 77, 79, 80, 108, 116], "unregister_al": [26, 42, 58, 80], "unregister_categorical_by_nam": [18, 26, 42], "unregister_dataframe_by_nam": [22, 26], "unregister_groupby_by_nam": [24, 26, 42, 72, 80, 108, 116], "unregister_pdarray_by_nam": [26, 42, 47, 59, 72, 79, 80], "unregister_segarray_by_nam": [26, 42, 54, 72, 80], "unregister_strings_by_nam": [26, 42, 56, 72, 77, 80], "unrel": 114, "unsaf": [26, 42, 49, 61], "unselect": 100, "unset": [87, 102], "unsign": [17, 115], "unsort": [22, 26, 115], "unspecifi": [26, 42], "unsqueez": 3, "unstack": 12, "unsupport": [24, 26, 29, 42, 55, 71, 74, 80, 109, 123], "unsupportedoper": 30, "unsupportedopt": 30, "unsur": 0, "until": [18, 20, 22, 24, 26, 27, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 88, 116], "unus": [18, 26, 29, 42, 49, 61, 109], "up": [1, 3, 18, 19, 22, 24, 26, 29, 42, 47, 50, 54, 56, 59, 62, 72, 77, 79, 80, 82, 84, 85, 88, 89, 99, 100, 101, 102, 103, 109, 112, 113, 114, 123, 125], "updat": [18, 20, 22, 24, 26, 27, 29, 42, 47, 54, 56, 57, 59, 63, 72, 73, 77, 79, 80, 94, 99, 101, 105, 109, 116], "update_hdf": [18, 20, 22, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80], "update_nrow": [22, 26], "upgrad": [99, 104], "upon": [26, 42, 56, 72, 77, 80, 102, 103, 106, 112], "upper": [6, 26, 42, 52, 56, 64, 72, 77, 80, 86, 120], "upper_bounds_exclus": 3, "upper_bounds_inclus": 3, "uppercamelcas": 0, "uppercas": [26, 42, 48, 56, 60, 72, 77, 80], "upstream": [86, 101, 102], "url": [1, 19, 22, 26, 73, 97, 99, 124], "us": [0, 1, 3, 4, 5, 6, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 38, 39, 42, 47, 48, 49, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 91, 92, 93, 94, 101, 102, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "usag": [5, 9, 22, 26, 27, 73, 89, 97, 107, 121, 124], "use_seri": [22, 26, 115], "usedmodul": [87, 88, 103], "usehash": [26, 42, 56, 72, 77, 80], "user": [0, 1, 18, 20, 22, 24, 26, 27, 29, 32, 42, 47, 48, 54, 56, 57, 58, 59, 60, 63, 67, 71, 72, 73, 75, 77, 79, 80, 83, 86, 89, 90, 92, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 109, 113, 116, 119], "user_defined_nam": [18, 20, 22, 24, 26, 27, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 116], "userdict": [22, 26, 65], "userid": [22, 26, 115, 116], "usernam": [22, 26, 71, 73, 115], "username_token": 71, "usual": [0, 22, 24, 26, 42, 72, 80, 116], "utf": [22, 26, 29, 42, 56, 72, 77, 80], "utf8proc": 99, "util": [0, 26, 29, 42, 81, 86, 99, 101, 102], "utility_funct": [9, 81], "v": [0, 24, 26, 42, 54, 56, 70, 72, 77, 80, 86, 100, 101, 107, 116], "v2": [24, 26, 42, 72, 80, 116], "v2022": 86, "v2023": 88, "val": [3, 23, 24, 26, 38, 39, 42, 54, 58, 68, 70, 72, 73, 76, 80, 116], "val1": [58, 80], "val2": [58, 80], "val_suffix": [26, 42, 54, 72], "valid": [3, 4, 18, 26, 29, 42, 47, 48, 56, 59, 60, 67, 70, 72, 73, 75, 77, 79, 80, 100, 109, 113, 119], "validate_kei": [26, 73], "validate_v": [26, 73], "vals1": [58, 80], "vals2": [58, 80], "valsiz": [26, 42, 54, 72, 80], "valu": [3, 4, 5, 6, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29, 30, 31, 42, 47, 48, 50, 52, 54, 56, 57, 58, 59, 60, 62, 64, 67, 68, 70, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 90, 92, 94, 102, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125], "valuabl": 103, "value_count": [26, 42, 47, 59, 72, 73, 79, 80, 108, 117, 122], "value_label": [26, 73], "value_nam": [26, 42, 54, 72, 80], "value_s": [83, 107], "valueerror": [3, 5, 9, 12, 18, 19, 22, 23, 24, 26, 27, 29, 30, 31, 38, 39, 42, 47, 48, 50, 52, 54, 55, 56, 59, 60, 62, 64, 67, 68, 72, 73, 74, 75, 76, 77, 79, 80, 109, 111, 112, 113, 114, 116, 117, 120, 122, 124], "values2": [24, 26, 42, 72, 80, 116], "vanish": [26, 42], "var": [0, 1, 16, 22, 24, 26, 42, 47, 59, 70, 72, 73, 79, 80, 82, 108, 112, 116, 117], "vari": [26, 42, 47, 59, 78, 90, 99, 102, 104, 106, 121], "variabl": [0, 23, 24, 26, 29, 31, 38, 39, 42, 47, 52, 54, 56, 59, 64, 70, 71, 72, 77, 80, 82, 83, 84, 101, 102, 103, 112, 116, 120, 121, 125], "varianc": [16, 24, 26, 42, 47, 52, 59, 64, 70, 72, 79, 80, 112, 116, 117, 120], "variat": 70, "varieti": [52, 64, 120], "variou": [1, 91], "vcxsrv": 105, "ve": [88, 99, 101, 102], "vecdot": 11, "vecentropi": 70, "vector": [6, 20, 24, 26, 42, 72, 80, 108, 116], "vendor_id_raw": 83, "venv": 99, "verbos": [1, 26, 28, 32], "veri": [0, 22, 26, 42, 90, 114, 115], "verifi": [0, 1, 22, 26, 93, 105, 109, 115], "versa": [109, 115], "version": [0, 18, 22, 26, 42, 50, 58, 62, 80, 83, 86, 92, 97, 99, 100, 101, 102, 104, 105, 123], "versu": [26, 29, 109], "vertic": [26, 42, 49, 54, 61, 72, 73, 80, 121], "verticl": [26, 73, 122], "via": [0, 1, 18, 21, 22, 24, 26, 42, 47, 48, 56, 59, 60, 72, 77, 79, 80, 99, 101, 102, 109, 113, 116, 118, 119, 120, 125], "vice": [109, 115], "view": [5, 9, 26, 42, 86, 90, 95, 99, 100, 106, 119], "virtual": 99, "visibl": [18, 19, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 124], "visit": [97, 101, 102], "visual": [26, 63], "vm": 105, "vme": 83, "void": [26, 42], "vstack": [26, 42, 49, 61], "vwhjex": [26, 42, 48, 60], "w": [18, 24, 26, 27, 33, 42, 47, 56, 57, 59, 72, 77, 79, 80, 116, 125], "wa": [0, 18, 19, 20, 22, 24, 26, 27, 29, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 87, 92, 93, 99, 102, 109, 116, 119], "wai": [4, 19, 26, 42, 52, 64, 83, 87, 92, 97, 100, 103, 112, 113, 114, 115, 119, 120, 125], "wait": 21, "walk": [82, 84, 97], "want": [0, 1, 22, 26, 42, 82, 97, 102, 104, 105, 115], "warmup": 83, "warn": [1, 4, 6, 8, 11, 12, 26, 29, 32, 42, 56, 72, 77, 80, 109], "we": [0, 1, 3, 5, 17, 22, 26, 27, 29, 42, 47, 52, 56, 58, 59, 64, 72, 77, 78, 80, 82, 83, 84, 86, 88, 90, 91, 94, 99, 100, 101, 102, 104, 105, 117, 119, 120], "web": [0, 86], "week": [26, 42, 57, 79, 80, 116], "weekdai": [26, 42, 57, 79, 80], "weekofyear": [26, 42, 57, 79, 80], "weight": [22, 24, 26, 42, 52, 64, 72, 80, 116, 120], "welcom": 0, "well": [20, 26, 42, 78, 83, 90, 104], "went": 124, "were": [3, 21, 24, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 87, 103, 116], "wget": 101, "what": [0, 23, 26, 38, 39, 42, 49, 54, 61, 72, 80, 82, 86, 87, 88, 103, 124], "wheel": 99, "when": [0, 1, 3, 13, 17, 18, 19, 20, 22, 24, 26, 27, 29, 42, 47, 50, 54, 56, 57, 58, 59, 62, 67, 72, 73, 75, 77, 78, 79, 80, 82, 83, 86, 87, 88, 90, 92, 94, 99, 100, 102, 103, 104, 105, 109, 112, 113, 115, 116, 119, 123], "whenev": 125, "where": [1, 3, 5, 9, 12, 13, 17, 18, 19, 21, 22, 24, 26, 27, 29, 30, 31, 42, 47, 48, 50, 52, 54, 56, 58, 59, 60, 62, 64, 71, 72, 77, 79, 80, 82, 83, 84, 85, 92, 97, 101, 102, 108, 109, 114, 116, 117, 118, 119, 120, 123, 124, 125], "wherea": 125, "wherev": 88, "whether": [6, 7, 12, 13, 15, 16, 17, 18, 22, 23, 24, 26, 27, 29, 31, 33, 38, 39, 42, 47, 50, 54, 56, 57, 59, 62, 72, 73, 77, 78, 79, 80, 90, 109, 112, 113, 117, 122, 123, 125], "which": [0, 3, 4, 6, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 72, 73, 74, 77, 78, 79, 80, 83, 85, 86, 88, 90, 99, 101, 102, 103, 107, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123, 124, 125], "whichev": 105, "whicn": [19, 124], "while": [3, 26, 29, 42, 55, 74, 80, 82, 88, 92, 94, 99, 105, 109, 111], "whitespac": [26, 29, 42, 56, 70, 72, 77, 80], "whl": 99, "who": [0, 101, 102], "whole": [21, 26, 42, 56, 72, 77, 80, 86], "whose": [6, 12, 22, 26, 42, 54, 56, 72, 73, 77, 80, 122], "why": 82, "wide": [52, 64, 120, 125], "width": [20, 26, 42, 80, 117, 125], "wiki": [0, 17], "wikipedia": 17, "window": [31, 71, 97, 106], "wise": [8, 18, 26, 42, 47, 49, 50, 59, 61, 62, 108, 123], "wish": 103, "within": [6, 12, 18, 19, 22, 24, 25, 26, 27, 29, 42, 47, 48, 52, 54, 56, 59, 60, 64, 72, 77, 79, 80, 83, 92, 94, 114, 115, 116, 120, 121], "without": [6, 18, 26, 29, 42, 47, 52, 59, 64, 72, 79, 80, 88, 99, 109, 115, 120], "won": 88, "word": [3, 52, 64, 120], "work": [0, 4, 18, 22, 26, 29, 42, 47, 56, 57, 59, 65, 72, 77, 79, 80, 87, 90, 92, 94, 100, 101, 102, 103, 109, 113, 115, 117, 118], "workflow": [0, 26, 29, 58, 80, 86, 100, 103, 109], "workhors": 116, "world": [26, 42, 52, 56, 64, 72, 77, 80, 120], "worri": 87, "wors": 87, "would": [13, 26, 29, 42, 58, 80, 84, 88, 93, 109, 112, 116], "wrap": [26, 42, 82], "wraparound": 83, "wrapper": [5, 6, 8, 9, 20, 26, 42, 78, 80, 119], "writ": 94, "write": [1, 5, 9, 18, 22, 26, 27, 29, 30, 32, 42, 47, 54, 56, 59, 72, 73, 77, 79, 80, 82, 83, 86, 91, 109], "write_fil": [26, 29, 109], "write_line_to_fil": 30, "write_log": [26, 32], "writeabl": [26, 42], "writebackifcopi": [26, 42], "writeln": 0, "written": [18, 22, 24, 26, 27, 29, 30, 32, 42, 47, 54, 56, 59, 72, 73, 77, 79, 80, 82, 91, 92, 93, 94, 95, 99, 109, 116, 119], "wrong": [26, 29, 124], "wrote": 0, "wsl": [99, 105], "wsl2": [83, 106], "wslconfig": 105, "wss": [26, 42, 48, 60], "wt": [22, 26, 73], "x": [0, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 29, 38, 39, 42, 47, 52, 54, 56, 58, 59, 63, 64, 69, 70, 72, 77, 79, 80, 82, 90, 105, 109, 112, 113, 115, 116, 119, 120, 125], "x00": [26, 42], "x01": [26, 42], "x02": [26, 42], "x03": [26, 42], "x1": [8, 11, 13], "x2": [8, 11, 13], "x410": 105, "x86": 101, "x86_64": [83, 101, 105], "xgetbv1": 83, "xlabel": [26, 63], "xlogi": [26, 69], "xor": [8, 22, 24, 26, 42, 47, 54, 59, 72, 79, 80, 108, 116], "xp": 17, "xsave": 83, "xsavec": 83, "xsaveopt": 83, "xserver": 105, "xtol": 70, "xtopologi": 83, "xv": [26, 42], "xvf": 101, "xy": 6, "xzf": [97, 102], "y": [17, 26, 42, 47, 59, 63, 69, 70, 72, 79, 80, 82, 84, 101], "yaml": 104, "yaml_fil": 104, "ye": 84, "year": [26, 42, 57, 79, 80], "yet": [3, 6, 8, 11, 26, 42, 54, 72, 80, 99, 109], "yhf": [26, 42, 48, 60], "yield": [1, 18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 115, 118], "yml": [97, 101, 102, 104], "you": [0, 1, 18, 20, 22, 24, 26, 27, 29, 42, 47, 54, 56, 57, 59, 72, 73, 77, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 97, 99, 100, 101, 102, 103, 104, 105, 106, 115, 116, 118], "your": [0, 1, 22, 26, 27, 29, 42, 47, 56, 59, 72, 77, 79, 80, 84, 85, 86, 88, 89, 97, 99, 100, 101, 102, 103, 104, 105, 106, 115, 124, 125], "your_fork": [101, 102], "your_machin": 97, "yum": 101, "yyyi": 86, "z": [26, 42, 48, 60], "zarr": [5, 9, 26, 29], "zarrai": [26, 29], "zarrmsg": [26, 29], "zero": [6, 13, 21, 24, 26, 29, 42, 47, 48, 59, 60, 67, 68, 70, 72, 75, 76, 79, 80, 86, 108, 114, 116, 118, 119], "zero_up": 3, "zerodivisionerror": [26, 42, 47, 48, 59, 60, 72, 80, 114], "zeromq": [99, 104], "zeros_lik": [6, 26, 42, 48, 60, 72, 108, 114], "zig": [52, 64, 120], "ziggurat": [52, 64, 120], "zip": 97, "zmq": [1, 99], "zmqchannel": [19, 124], "zone": [26, 42, 57, 79], "zsh": 102, "zshrc": 102, "zstd": [18, 22, 26, 27, 29, 42, 47, 54, 56, 59, 72, 77, 79, 80, 83, 94], "\u00b2": [26, 42, 56, 72, 77, 80]}, "titles": ["Contributing", "Environment Variables", "arkouda.accessor", "arkouda.alignment", "arkouda.apply", "arkouda.array_api.array_object", "arkouda.array_api.creation_functions", "arkouda.array_api.data_type_functions", "arkouda.array_api.elementwise_functions", "arkouda.array_api", "arkouda.array_api.indexing_functions", "arkouda.array_api.linalg", "arkouda.array_api.manipulation_functions", "arkouda.array_api.searching_functions", "arkouda.array_api.set_functions", "arkouda.array_api.sorting_functions", "arkouda.array_api.statistical_functions", "arkouda.array_api.utility_functions", "arkouda.categorical", "arkouda.client", "arkouda.client_dtypes", "arkouda.comm_diagnostics", "arkouda.dataframe", "arkouda.dtypes", "arkouda.groupbyclass", "arkouda.history", "arkouda", "arkouda.index", "arkouda.infoclass", "arkouda.io", "arkouda.io_util", "arkouda.join", "arkouda.logger", "arkouda.match", "arkouda.matcher", "arkouda.numeric", "arkouda.numpy.char", "arkouda.numpy.ctypeslib", "arkouda.numpy.dtypes.dtypes", "arkouda.numpy.dtypes", "arkouda.numpy.exceptions", "arkouda.numpy.fft", "arkouda.numpy", "arkouda.numpy.lib.emath", "arkouda.numpy.lib", "arkouda.numpy.linalg", "arkouda.numpy.ma", "arkouda.numpy.pdarrayclass", "arkouda.numpy.pdarraycreation", "arkouda.numpy.pdarraymanipulation", "arkouda.numpy.pdarraysetops", "arkouda.numpy.polynomial", "arkouda.numpy.random", "arkouda.numpy.rec", "arkouda.numpy.segarray", "arkouda.numpy.sorting", "arkouda.numpy.strings", "arkouda.numpy.timeclass", "arkouda.numpy.util", "arkouda.pdarrayclass", "arkouda.pdarraycreation", "arkouda.pdarraymanipulation", "arkouda.pdarraysetops", "arkouda.plotting", "arkouda.random", "arkouda.row", "arkouda.scipy", "arkouda.scipy.sparrayclass", "arkouda.scipy.sparsematrix", "arkouda.scipy.special", "arkouda.scipy.stats", "arkouda.security", "arkouda.segarray", "arkouda.series", "arkouda.sorting", "arkouda.sparrayclass", "arkouda.sparsematrix", "arkouda.strings", "arkouda.testing", "arkouda.timeclass", "arkouda.util", "API Reference", "Adding Your First Feature", "PyTest Benchmarks", "GASNet Development", "Reducing Memory Usage of Arkouda Builds", "Release Process", "Speeding up Arkouda Compilation", "Tips for Reproducing User Bugs", "Developer Documentation", "Examples", "CSV", "HDF5", "Import/Export", "Parquet", "File I/O", "Arkouda Documentation", "Quickstart", "Chapel API Reference", "Building the Server", "External Tools", "Linux", "MacOS", "Modular Server Builds", "Requirements", "Windows (WSL2)", "Installation", "Performance Testing", "Usage Guide", "Data I/O", "Indexs in Arkouda", "Sorting", "Arithmetic and Numeric Operations", "Categoricals", "Creating Arrays", "DataFrames in Arkouda", "GroupBy", "Summarizing Data", "Indexing and Assignment", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">pdarray</span></code> class", "Random in Arkouda", "SegArrays in Arkouda", "Series in Arkouda", "Array Set Operations", "Startup", "Strings in Arkouda"], "titleterms": {"3": [97, 124], "The": [83, 119], "access": 121, "accessor": 2, "ad": [0, 1, 82, 103], "add": 100, "align": 3, "all": 99, "alwai": 87, "an": 103, "anaconda": [101, 102, 104], "api": [81, 91, 92, 93, 94, 95, 98], "append": [115, 121], "appli": 4, "argsort": [107, 110], "argument": [83, 107], "arithmet": 112, "arkouda": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 90, 91, 92, 94, 96, 97, 99, 101, 102, 103, 110, 115, 120, 121, 122, 124, 125], "arrai": [90, 114, 121, 123], "array_api": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "array_object": 5, "arrow": 99, "assign": 118, "attribut": [5, 23, 26, 28, 38, 39, 42, 54, 55, 58, 71, 72, 74, 79, 80, 92], "basic": 90, "benchmark": 83, "between": 109, "black": 100, "bug": [0, 88], "build": [84, 85, 87, 88, 99, 102, 103], "cast": 119, "categor": [18, 92, 94, 113], "chang": 110, "chapel": [0, 1, 84, 98, 99, 100, 101, 102], "char": 36, "choic": 120, "class": [2, 5, 7, 9, 14, 18, 20, 22, 23, 24, 25, 26, 27, 32, 33, 34, 38, 39, 42, 47, 52, 54, 56, 57, 59, 64, 65, 67, 70, 72, 73, 75, 77, 79, 80, 119], "client": [1, 19, 82, 97, 109, 124], "client_dtyp": 20, "clone": [101, 102], "code": 0, "column": 115, "comm_diagnost": 21, "compil": [1, 87], "compress": 94, "concat": 110, "concaten": [114, 115], "conda": 99, "configur": [84, 92, 99, 100, 103], "connect": [97, 124], "constant": 114, "construct": 113, "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "contribut": 0, "convent": 0, "copi": 115, "core": 0, "count": [117, 122], "creat": [90, 114], "creation": [90, 120], "creation_funct": 6, "csv": 91, "ctypeslib": 37, "custom": 103, "data": [91, 92, 94, 109, 115, 117, 119], "data_type_funct": 7, "datafram": [22, 90, 91, 92, 94, 115], "dataset": 109, "dedupl": [115, 121], "depend": [1, 97, 99, 104], "descript": 117, "develop": [0, 84, 89, 104], "diff": 86, "differ": 121, "directori": 1, "disconnect": 97, "disk": 109, "distribut": [92, 99], "document": [89, 96, 99], "drop": 115, "dtype": [23, 38, 39, 110], "each": 100, "effici": 88, "element": [112, 121], "elementwise_funct": 8, "emath": 43, "environ": [1, 84, 87, 99, 101, 102], "exampl": [82, 90, 91], "except": [3, 26, 40, 42, 47, 59, 72, 79], "exponenti": 120, "export": [90, 93, 95, 109], "express": 125, "extern": 100, "featur": [0, 82, 110, 115, 120, 122], "fft": 41, "file": [83, 91, 92, 95, 103, 109], "filter": 115, "first": 82, "flag": 1, "flake8": 100, "flatten": 125, "format": [91, 95, 109], "from": [1, 102, 109], "full": [83, 88], "function": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 38, 39, 42, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 82, 95, 112], "gasnet": 84, "gather": [107, 118], "gener": [86, 95], "get": 99, "git": 86, "groupbi": [90, 92, 115, 116], "groupbyclass": 24, "guid": [106, 108], "hdf5": 92, "head": [115, 122], "header": 91, "highlight": 100, "histogram": 117, "histori": 25, "homebrew": 102, "i": [95, 109, 125], "import": [90, 93, 95, 109], "index": [27, 91, 92, 94, 110, 115, 118], "indexing_funct": 10, "individu": 99, "infoclass": 28, "instal": [97, 99, 101, 102, 104, 106], "instruct": 86, "integ": [118, 120], "integr": 122, "interact": 90, "interfac": 82, "intersect": 121, "io": 29, "io_util": 30, "isort": 100, "issu": 0, "iter": [113, 115, 119, 121, 125], "join": [31, 125], "json": 83, "l": 95, "languag": 100, "larg": 109, "launch": [97, 124], "legaci": 92, "lib": [43, 44], "linalg": [11, 45], "lint": 0, "linux": 101, "list": 104, "local": 100, "log": 86, "logger": 32, "logic": 118, "logist": 120, "lognorm": 120, "lookup": [110, 122], "ma": 46, "maco": 102, "makefil": 1, "manipulation_funct": 12, "manual": 99, "map": 90, "match": [33, 125], "matcher": 34, "memori": 85, "merg": 0, "metadata": 92, "method": [121, 125], "mode": [92, 94], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 47, 48, 49, 50, 54, 55, 56, 57, 58, 63, 65, 67, 68, 69, 70, 71, 73, 103], "modular": [87, 99, 103], "name": [107, 119], "new": 103, "next": [100, 101, 102], "ngram": 121, "normal": 120, "note": 86, "numer": [35, 112], "numpi": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "o": [95, 109, 125], "object": [90, 125], "onli": 0, "oper": [90, 112, 113, 119, 121, 123, 125], "output": 83, "outsid": 1, "overview": 106, "packag": [9, 23, 26, 39, 42, 52, 59, 60, 61, 62, 64, 72, 74, 75, 76, 77, 78, 79, 80, 99], "panda": [90, 122], "parquet": 94, "path": 1, "pdarrai": [90, 91, 92, 94, 118, 119], "pdarrayclass": [47, 59], "pdarraycr": [48, 60], "pdarraymanipul": [49, 61], "pdarraysetop": [50, 62], "perform": [107, 121, 125], "permut": [115, 120], "pip": [99, 100, 104], "plot": 63, "poisson": 120, "polynomi": 51, "posit": 107, "prefix": 121, "prepend": 121, "preprocess": 109, "process": [0, 86, 103], "pull": 0, "py": 99, "pycharm": 100, "pytest": 83, "python": [0, 1, 82, 90, 97, 101, 102, 104, 124], "python3": 0, "quickstart": 97, "random": [52, 64, 114, 120], "rank": 119, "read": [83, 95, 109], "rec": 53, "recommend": [99, 102], "reduc": [85, 107], "reduct": 112, "refer": [81, 91, 92, 93, 94, 98], "regular": [114, 125], "releas": [0, 86], "renam": 115, "report": 0, "repositori": [101, 102], "reproduc": 88, "request": 0, "requir": [104, 106], "reset": 115, "reshap": 119, "review": 0, "rhel": 101, "row": 65, "run": [0, 1, 83, 84, 100, 103], "save": [88, 103], "scalar": 112, "scan": [107, 112], "scatter": [107, 118], "schema": 92, "scipi": [66, 67, 68, 69, 70], "search": 125, "searching_funct": 13, "secur": 71, "segarrai": [54, 72, 92, 94, 121], "seri": [73, 122], "server": [82, 97, 99, 103, 109, 124], "set": [87, 90, 121, 123], "set_funct": 14, "setop": 121, "shuffl": 120, "shutdown": 97, "singl": 83, "size": 121, "slice": 118, "sort": [55, 74, 111, 115, 122], "sorting_funct": 15, "sourc": 102, "sparrayclass": [67, 75], "sparsematrix": [68, 76], "special": 69, "specif": [104, 121, 125], "specifi": 103, "speed": 87, "split": 125, "src": 1, "standard_exponenti": 120, "standard_norm": 120, "start": 99, "startup": 124, "stat": 70, "statist": 117, "statistical_funct": 16, "step": [86, 100, 101, 102], "stream": 107, "string": [56, 77, 91, 92, 94, 125], "sub": 121, "submodul": [9, 26, 39, 42, 44, 66], "substr": 125, "suffix": 121, "suit": 83, "summar": 117, "support": [91, 92, 94, 95, 109], "symmetr": 121, "syntax": 100, "system": 87, "tail": [115, 122], "team": 0, "test": [0, 1, 78, 83, 107], "timeclass": [57, 79], "tip": 88, "tool": 100, "troubleshoot": 99, "type": [91, 92, 94, 115, 119], "ubuntu": 101, "uniform": 120, "union": 121, "up": 87, "updat": [102, 104], "us": [87, 90, 97, 99, 100, 103, 104], "usag": [85, 108], "user": 88, "util": [58, 80], "utility_funct": 17, "valu": [117, 122], "variabl": [1, 87], "vector": 112, "vscode": 100, "where": 112, "window": 105, "wise": 112, "without": 91, "write": [0, 92, 94, 95], "wsl2": 105, "your": 82}})