Search.setIndex({"alltitles": {"API Reference": [[69, null], [79, "api-reference"], [80, "api-reference"], [81, "api-reference"], [82, "api-reference"]], "Access/Set Specific Elements in Sub-Array": [[109, "access-set-specific-elements-in-sub-array"]], "Add a local external tool": [[88, "add-a-local-external-tool"]], "Adding Functionality to the Arkouda Server": [[70, "adding-functionality-to-the-arkouda-server"]], "Adding Issues": [[0, "adding-issues"]], "Adding Python Functionality (Client Interface)": [[70, "adding-python-functionality-client-interface"]], "Adding Your First Feature": [[70, null]], "Adding a Module from Outside the Arkouda src Directory": [[1, "adding-a-module-from-outside-the-arkouda-src-directory"]], "Adding new modules into the build process": [[91, "adding-new-modules-into-the-build-process"]], "All Dependencies": [[87, "all-dependencies"]], "Anaconda": [[90, "anaconda"]], "Append": [[103, "append"]], "Append & Prepend": [[109, "append-prepend"]], "ArgSort": [[98, "argsort"]], "Argsort": [[95, "argsort"]], "Arithmetic and Numeric Operations": [[100, null]], "Arkouda Arrays": [[78, "arkouda-arrays"]], "Arkouda DataFrames": [[78, "arkouda-dataframes"]], "Arkouda Documentation": [[84, null]], "Arkouda Formatted File": [[79, "arkouda-formatted-file"]], "Array Set Operations": [[111, null]], "Arrow Install Troubleshooting": [[87, "arrow-install-troubleshooting"]], "Attributes": [[5, "attributes"], [25, "attributes"], [27, "attributes"], [39, "attributes"], [53, "attributes"], [54, "attributes"], [57, "attributes"], [64, "attributes"]], "Basic Interaction": [[78, "basic-interaction"]], "Benchmark Arguments": [[71, "benchmark-arguments"]], "Between client and server": [[97, "between-client-and-server"]], "Bug Reports": [[0, "bug-reports"]], "Build Arkouda": [[72, "build-arkouda"]], "Build Chapel with GASNet": [[72, "build-chapel-with-gasnet"]], "Build from Source (Recommended)": [[90, "build-from-source-recommended"]], "Build the Server": [[87, "build-the-server"]], "Building the Arkouda Documentation": [[87, "building-the-arkouda-documentation"]], "Building the Server": [[87, null]], "CSV": [[79, null]], "Categorical": [[80, "categorical"], [80, "id3"], [82, "categorical"]], "Categoricals": [[101, null]], "Change Dtype": [[98, "change-dtype"]], "Chapel": [[0, "chapel"]], "Chapel API Reference": [[86, null]], "Chapel Compiler Flags": [[1, "chapel-compiler-flags"]], "Chapel Installation": [[89, "chapel-installation"]], "Classes": [[2, "classes"], [5, "classes"], [7, "classes"], [9, "classes"], [14, "classes"], [18, "classes"], [20, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [36, "classes"], [39, "classes"], [45, "classes"], [46, "classes"], [51, "classes"], [53, "classes"], [55, "classes"], [56, "classes"], [60, "classes"], [61, "classes"], [63, "classes"], [65, "classes"]], "Clone Arkouda Repository": [[89, "clone-arkouda-repository"], [90, "clone-arkouda-repository"]], "Coding Conventions and Linting": [[0, "coding-conventions-and-linting"]], "Compilation / Makefile": [[1, "compilation-makefile"]], "Compression": [[82, "compression"]], "Concat": [[98, "concat"]], "Concatenate": [[103, "concatenate"]], "Concatenation": [[102, "concatenation"]], "Configuration for each tool": [[88, "configuration-for-each-tool"]], "Connect a Python 3 client": [[112, "connect-a-python-3-client"]], "Connect the Python 3 Client": [[85, "connect-the-python-3-client"]], "Constant": [[102, "constant"]], "Construction": [[101, "construction"]], "Contributing": [[0, null]], "Copy": [[103, "copy"]], "Core Development Team Only": [[0, "core-development-team-only"]], "Creating & Using a DataFrame": [[78, "creating-using-a-dataframe"]], "Creating Arrays": [[102, null]], "Creation": [[108, "creation"]], "Data Distribution": [[80, "data-distribution"]], "Data Formatting": [[79, "data-formatting"]], "Data I/O": [[97, null]], "Data Preprocessing": [[97, "data-preprocessing"]], "Data Schema": [[80, "data-schema"]], "Data Type": [[107, "data-type"]], "Data Types": [[103, "data-types"]], "DataFrame": [[79, "dataframe"], [80, "dataframe"], [82, "dataframe"]], "DataFrames": [[78, "dataframes"]], "DataFrames in Arkouda": [[103, null]], "Deduplication": [[103, "deduplication"], [109, "deduplication"]], "Dependencies": [[87, "dependencies"]], "Dependency Configuration": [[87, "dependency-configuration"]], "Dependency List": [[92, "dependency-list"]], "Dependency Paths": [[1, "dependency-paths"]], "Descriptive Statistics": [[105, "descriptive-statistics"]], "Developer Documentation": [[77, null]], "Developer Specific": [[92, "developer-specific"]], "Developing Arkouda": [[0, "developing-arkouda"]], "Diff the git logs": [[74, "diff-the-git-logs"]], "Distributable Package": [[87, "distributable-package"]], "Drop": [[103, "drop"]], "Element-wise Functions": [[100, "element-wise-functions"]], "Environment Configuration": [[72, "environment-configuration"]], "Environment Variables": [[1, null]], "Environment Variables to Always Set": [[75, "environment-variables-to-always-set"]], "Example": [[70, "example"], [70, "id1"]], "Example Files": [[79, "example-files"]], "Examples": [[78, null]], "Exceptions": [[3, "exceptions"], [25, "exceptions"], [39, "exceptions"], [46, "exceptions"]], "Export": [[81, "export"]], "Exporting pdarray Objects": [[78, "exporting-pdarray-objects"]], "Exporting to Pandas": [[78, "exporting-to-pandas"]], "External Tools": [[88, null]], "Feature Requests": [[0, "feature-requests"]], "Features": [[98, "features"], [103, "features"], [108, "features"], [110, "features"]], "File Configuration": [[80, "file-configuration"]], "File Formatting": [[79, "file-formatting"]], "File I/O": [[83, null]], "File Without Header": [[79, "file-without-header"]], "Filter": [[103, "filter"]], "Flattening": [[113, "flattening"]], "Functions": [[2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [17, "functions"], [19, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [23, "functions"], [25, "functions"], [27, "functions"], [28, "functions"], [29, "functions"], [30, "functions"], [31, "functions"], [36, "functions"], [39, "functions"], [44, "functions"], [45, "functions"], [46, "functions"], [47, "functions"], [48, "functions"], [49, "functions"], [51, "functions"], [53, "functions"], [54, "functions"], [56, "functions"], [57, "functions"], [58, "functions"], [59, "functions"], [61, "functions"], [62, "functions"], [64, "functions"], [68, "functions"]], "GASNet Development": [[72, null]], "Gather": [[95, "gather"]], "Gather/Scatter (pdarray)": [[106, "gather-scatter-pdarray"]], "General I/O API": [[83, "general-i-o-api"]], "Generating release notes": [[74, "generating-release-notes"]], "Getting Started": [[87, "getting-started"]], "GroupBy": [[78, "groupby"], [80, "groupby"], [80, "id5"], [103, "groupby"], [104, null]], "HDF5": [[80, null]], "Head/Tail": [[110, "head-tail"]], "Histogram": [[105, "histogram"]], "Homebrew": [[90, "homebrew"]], "I/O": [[113, "i-o"]], "Import": [[81, "import"]], "Import/Export": [[81, null], [97, "import-export"]], "Import/Export Support": [[83, "import-export-support"]], "Importing Pandas DataFrame": [[78, "importing-pandas-dataframe"]], "Index": [[79, "index"], [80, "index"], [82, "index"]], "Indexing and Assignment": [[106, null]], "Indexs in Arkouda": [[98, null]], "Individual Installs": [[87, "individual-installs"]], "Install Arkouda": [[85, "install-arkouda"]], "Install Chapel": [[90, "install-chapel"]], "Install Chapel (RHEL)": [[89, "install-chapel-rhel"]], "Install Chapel (Ubuntu)": [[89, "install-chapel-ubuntu"]], "Install Dependencies": [[85, "install-dependencies"]], "Install Guides": [[94, "install-guides"]], "Installation": [[94, null]], "Installing Dependencies Manually": [[87, "installing-dependencies-manually"]], "Installing/Updating Python Dependencies": [[92, "installing-updating-python-dependencies"]], "Integer": [[106, "integer"]], "Integer pdarray index": [[106, "integer-pdarray-index"]], "Intersect": [[109, "intersect"]], "Iteration": [[101, "iteration"], [103, "iteration"], [107, "iteration"], [109, "iteration"], [113, "iteration"]], "Large Datasets": [[97, "large-datasets"]], "Launch arkouda server": [[112, "launch-arkouda-server"]], "Launching the Server": [[85, "launching-the-server"]], "Legacy File Support": [[80, "legacy-file-support"]], "Linux": [[89, null]], "Logical indexing": [[106, "logical-indexing"]], "Lookup": [[98, "lookup"], [110, "lookup"], [110, "id1"]], "MacOS": [[90, null]], "Match Object": [[113, "match-object"]], "Merging Pull Requests": [[0, "merging-pull-requests"]], "MetaData Attributes": [[80, "metadata-attributes"]], "Modular Building": [[87, "modular-building"]], "Modular Server Builds": [[91, null]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [36, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"], [62, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"]], "NGrams": [[109, "ngrams"]], "Name": [[107, "name"]], "Named Arguments": [[95, "named-arguments"], [95, "named-arguments"], [95, "named-arguments"], [95, "named-arguments"], [95, "named-arguments"], [95, "named-arguments"]], "Next Steps": [[88, "next-steps"], [89, "next-steps"], [90, "next-steps"]], "Operation": [[109, "operation"]], "Operations": [[101, "operations"], [113, "operations"]], "Operators": [[107, "operators"]], "Overview": [[94, "overview"]], "Package Contents": [[9, "package-contents"], [25, "package-contents"], [39, "package-contents"], [51, "package-contents"], [68, "package-contents"]], "Pandas Integration": [[110, "pandas-integration"]], "Parquet": [[82, null]], "Performance": [[109, "performance"], [113, "performance"]], "Performance Testing": [[95, null]], "Permutations": [[103, "permutations"]], "Positional Arguments": [[95, "positional-arguments"], [95, "positional-arguments"], [95, "positional-arguments"], [95, "positional-arguments"], [95, "positional-arguments"], [95, "positional-arguments"]], "Prefix & Suffix": [[109, "prefix-suffix"]], "PyCharm External Tools": [[88, "pycharm-external-tools"]], "PyTest Benchmarks": [[71, null]], "Python Client": [[1, "python-client"]], "Python Dependencies": [[92, "python-dependencies"]], "Python Environment - Anaconda": [[90, "python-environment-anaconda"]], "Python Environment - Anaconda (Linux)": [[89, "python-environment-anaconda-linux"]], "Python Mapping": [[78, "python-mapping"]], "Python3": [[0, "python3"]], "Quickstart": [[85, null]], "Random": [[102, "random"]], "Random in Arkouda": [[108, null]], "Rank": [[107, "rank"]], "Read": [[83, "read"]], "Reading data from disk": [[97, "reading-data-from-disk"]], "Reading the JSON Output": [[71, "reading-the-json-output"]], "Reduce": [[95, "reduce"]], "Reducing Memory Usage of Arkouda Builds": [[73, null]], "Reductions": [[100, "reductions"]], "Regular": [[102, "regular"]], "Regular Expressions": [[113, "regular-expressions"]], "Release Process": [[0, "release-process"], [74, null]], "Rename Columns": [[103, "rename-columns"]], "Reproducing User Bugs Efficiently": [[76, "reproducing-user-bugs-efficiently"]], "Requirements": [[92, null], [94, "requirements"]], "Reset Indexes": [[103, "reset-indexes"]], "Reshape": [[107, "reshape"]], "Reviewing Pull Requests": [[0, "reviewing-pull-requests"]], "Run Arkouda": [[72, "run-arkouda"]], "Running": [[1, "running"]], "Running Single Files or Tests": [[71, "running-single-files-or-tests"]], "Running The Full Suite": [[71, "running-the-full-suite"]], "Running chapel tests": [[0, "running-chapel-tests"]], "Running python tests": [[0, "running-python-tests"]], "Running the external tools": [[88, "running-the-external-tools"]], "Saving Full Builds": [[76, "saving-full-builds"]], "Saving modules used in an Arkouda server run": [[91, "saving-modules-used-in-an-arkouda-server-run"]], "Scan": [[95, "scan"]], "Scans": [[100, "scans"]], "Scatter": [[95, "scatter"]], "SegArray": [[80, "segarray"], [80, "id4"], [82, "segarray"]], "SegArray SetOps": [[109, "segarray-setops"]], "SegArray Specific Methods": [[109, "segarray-specific-methods"]], "SegArrays in Arkouda": [[109, null]], "Series in Arkouda": [[110, null]], "Set Difference": [[109, "set-difference"]], "Shutdown/Disconnect": [[85, "shutdown-disconnect"]], "Slice": [[106, "slice"]], "Sorting": [[99, null], [103, "sorting"], [110, "sorting"]], "Specifying a custom configuration file": [[91, "specifying-a-custom-configuration-file"]], "Speeding up Arkouda Compilation": [[75, null]], "Splitting and joining": [[113, "splitting-and-joining"]], "Startup": [[112, null]], "Step-by-step instructions": [[74, "step-by-step-instructions"]], "Stream": [[95, "stream"]], "String-Specific Methods": [[113, "string-specific-methods"]], "Strings": [[79, "strings"], [80, "strings"], [80, "id2"], [82, "strings"]], "Strings in Arkouda": [[113, null]], "Sub-array of Size": [[109, "sub-array-of-size"]], "Submodules": [[9, "submodules"], [25, "submodules"], [39, "submodules"], [41, "submodules"], [61, "submodules"]], "Substring search": [[113, "substring-search"]], "Summarizing Data": [[105, null]], "Support Arkouda Data Types": [[79, "support-arkouda-data-types"]], "Supported Arkouda Data Types": [[80, "supported-arkouda-data-types"], [82, "supported-arkouda-data-types"]], "Supported File Formats": [[97, "supported-file-formats"]], "Supported File Formats:": [[83, null]], "Supported Write Modes": [[80, "supported-write-modes"], [82, "supported-write-modes"]], "Symmetric Difference": [[109, "symmetric-difference"]], "Tail/Head of Data": [[103, "tail-head-of-data"]], "Testing": [[0, "testing"], [1, "testing"]], "The pdarray class": [[107, null]], "Tips for Reproducing User Bugs": [[76, null]], "Type Casting": [[107, "type-casting"]], "Union": [[109, "union"]], "Updating Environment": [[90, "updating-environment"]], "Usage Guide": [[96, null]], "Using Anaconda": [[92, "using-anaconda"]], "Using Arkouda": [[85, "using-arkouda"]], "Using Environment Installed Dependencies (Recommended)": [[87, "using-environment-installed-dependencies-recommended"]], "Using Pip": [[88, "using-pip"], [92, "using-pip"]], "Using conda": [[87, "using-conda"]], "Using pip": [[87, "using-pip"]], "Using the Modular Build System": [[75, "using-the-modular-build-system"]], "VSCode Chapel Language Syntax Highlighter": [[88, "vscode-chapel-language-syntax-highlighter"]], "Value Counts": [[105, "value-counts"], [110, "value-counts"]], "Vector and Scalar Arithmetic": [[100, "vector-and-scalar-arithmetic"]], "Where": [[100, "where"]], "Windows (WSL2)": [[93, null]], "Write": [[83, "write"]], "Writing Pull Requests": [[0, "writing-pull-requests"]], "arkouda": [[25, null]], "arkouda.accessor": [[2, null]], "arkouda.alignment": [[3, null]], "arkouda.apply": [[4, null]], "arkouda.array_api": [[9, null]], "arkouda.array_api.array_object": [[5, null]], "arkouda.array_api.creation_functions": [[6, null]], "arkouda.array_api.data_type_functions": [[7, null]], "arkouda.array_api.elementwise_functions": [[8, null]], "arkouda.array_api.indexing_functions": [[10, null]], "arkouda.array_api.linalg": [[11, null]], "arkouda.array_api.manipulation_functions": [[12, null]], "arkouda.array_api.searching_functions": [[13, null]], "arkouda.array_api.set_functions": [[14, null]], "arkouda.array_api.sorting_functions": [[15, null]], "arkouda.array_api.statistical_functions": [[16, null]], "arkouda.array_api.utility_functions": [[17, null]], "arkouda.categorical": [[18, null]], "arkouda.client": [[19, null]], "arkouda.client_dtypes": [[20, null]], "arkouda.comm_diagnostics": [[21, null]], "arkouda.dataframe": [[22, null]], "arkouda.groupbyclass": [[23, null]], "arkouda.history": [[24, null]], "arkouda.index": [[26, null]], "arkouda.infoclass": [[27, null]], "arkouda.io": [[28, null]], "arkouda.io_util": [[29, null]], "arkouda.join": [[30, null]], "arkouda.logger": [[31, null]], "arkouda.match": [[32, null]], "arkouda.matcher": [[33, null]], "arkouda.numpy": [[39, null]], "arkouda.numpy.char": [[34, null]], "arkouda.numpy.ctypeslib": [[35, null]], "arkouda.numpy.dtypes": [[36, null]], "arkouda.numpy.exceptions": [[37, null]], "arkouda.numpy.fft": [[38, null]], "arkouda.numpy.lib": [[41, null]], "arkouda.numpy.lib.emath": [[40, null]], "arkouda.numpy.linalg": [[42, null]], "arkouda.numpy.ma": [[43, null]], "arkouda.numpy.manipulation_functions": [[44, null]], "arkouda.numpy.numeric": [[45, null]], "arkouda.numpy.pdarrayclass": [[46, null]], "arkouda.numpy.pdarraycreation": [[47, null]], "arkouda.numpy.pdarraymanipulation": [[48, null]], "arkouda.numpy.pdarraysetops": [[49, null]], "arkouda.numpy.polynomial": [[50, null]], "arkouda.numpy.random": [[51, null]], "arkouda.numpy.rec": [[52, null]], "arkouda.numpy.segarray": [[53, null]], "arkouda.numpy.sorting": [[54, null]], "arkouda.numpy.strings": [[55, null]], "arkouda.numpy.timeclass": [[56, null]], "arkouda.numpy.util": [[57, null]], "arkouda.numpy.utils": [[58, null]], "arkouda.plotting": [[59, null]], "arkouda.row": [[60, null]], "arkouda.scipy": [[61, null]], "arkouda.scipy.special": [[62, null]], "arkouda.scipy.stats": [[63, null]], "arkouda.security": [[64, null]], "arkouda.series": [[65, null]], "arkouda.sparrayclass": [[66, null]], "arkouda.sparsematrix": [[67, null]], "arkouda.testing": [[68, null]], "black": [[88, "black"]], "choice": [[108, "choice"]], "exponential": [[108, "exponential"]], "flake8": [[88, "flake8"]], "installing the chapel-py dependency": [[87, "installing-the-chapel-py-dependency"]], "installing the chapel-py dependency manually": [[87, "installing-the-chapel-py-dependency-manually"]], "integers": [[108, "integers"]], "isort": [[88, "isort"]], "logistic": [[108, "logistic"]], "lognormal": [[108, "lognormal"]], "ls Functionality": [[83, "ls-functionality"]], "normal": [[108, "normal"]], "pdarray": [[79, "pdarray"], [80, "pdarray"], [80, "id1"], [82, "pdarray"]], "pdarray Creation": [[78, "pdarray-creation"]], "pdarray Set operations": [[78, "pdarray-set-operations"]], "pdarrays": [[78, "pdarrays"]], "permutation": [[108, "permutation"]], "poisson": [[108, "poisson"]], "random": [[108, "random"]], "shuffle": [[108, "shuffle"]], "standard_exponential": [[108, "standard-exponential"]], "standard_normal": [[108, "standard-normal"]], "uniform": [[108, "uniform"]]}, "docnames": ["CONTRIBUTING_LINK", "ENVIRONMENT", "autoapi/arkouda/accessor/index", "autoapi/arkouda/alignment/index", "autoapi/arkouda/apply/index", "autoapi/arkouda/array_api/array_object/index", "autoapi/arkouda/array_api/creation_functions/index", "autoapi/arkouda/array_api/data_type_functions/index", "autoapi/arkouda/array_api/elementwise_functions/index", "autoapi/arkouda/array_api/index", "autoapi/arkouda/array_api/indexing_functions/index", "autoapi/arkouda/array_api/linalg/index", "autoapi/arkouda/array_api/manipulation_functions/index", "autoapi/arkouda/array_api/searching_functions/index", "autoapi/arkouda/array_api/set_functions/index", "autoapi/arkouda/array_api/sorting_functions/index", "autoapi/arkouda/array_api/statistical_functions/index", "autoapi/arkouda/array_api/utility_functions/index", "autoapi/arkouda/categorical/index", "autoapi/arkouda/client/index", "autoapi/arkouda/client_dtypes/index", "autoapi/arkouda/comm_diagnostics/index", "autoapi/arkouda/dataframe/index", "autoapi/arkouda/groupbyclass/index", "autoapi/arkouda/history/index", "autoapi/arkouda/index", "autoapi/arkouda/index/index", "autoapi/arkouda/infoclass/index", "autoapi/arkouda/io/index", "autoapi/arkouda/io_util/index", "autoapi/arkouda/join/index", "autoapi/arkouda/logger/index", "autoapi/arkouda/match/index", "autoapi/arkouda/matcher/index", "autoapi/arkouda/numpy/char/index", "autoapi/arkouda/numpy/ctypeslib/index", "autoapi/arkouda/numpy/dtypes/index", "autoapi/arkouda/numpy/exceptions/index", "autoapi/arkouda/numpy/fft/index", "autoapi/arkouda/numpy/index", "autoapi/arkouda/numpy/lib/emath/index", "autoapi/arkouda/numpy/lib/index", "autoapi/arkouda/numpy/linalg/index", "autoapi/arkouda/numpy/ma/index", "autoapi/arkouda/numpy/manipulation_functions/index", "autoapi/arkouda/numpy/numeric/index", "autoapi/arkouda/numpy/pdarrayclass/index", "autoapi/arkouda/numpy/pdarraycreation/index", "autoapi/arkouda/numpy/pdarraymanipulation/index", "autoapi/arkouda/numpy/pdarraysetops/index", "autoapi/arkouda/numpy/polynomial/index", "autoapi/arkouda/numpy/random/index", "autoapi/arkouda/numpy/rec/index", "autoapi/arkouda/numpy/segarray/index", "autoapi/arkouda/numpy/sorting/index", "autoapi/arkouda/numpy/strings/index", "autoapi/arkouda/numpy/timeclass/index", "autoapi/arkouda/numpy/util/index", "autoapi/arkouda/numpy/utils/index", "autoapi/arkouda/plotting/index", "autoapi/arkouda/row/index", "autoapi/arkouda/scipy/index", "autoapi/arkouda/scipy/special/index", "autoapi/arkouda/scipy/stats/index", "autoapi/arkouda/security/index", "autoapi/arkouda/series/index", "autoapi/arkouda/sparrayclass/index", "autoapi/arkouda/sparsematrix/index", "autoapi/arkouda/testing/index", "autoapi/index", "developer/ADDING_FEATURES", "developer/BENCHMARK", "developer/GASNET", "developer/MEMORY", "developer/RELEASE_PROCESS", "developer/TIPS", "developer/USER_BUGS", "developer/dev_menu", "examples", "file_io/CSV", "file_io/HDF5", "file_io/IMPORT_EXPORT", "file_io/PARQUET", "file_io/io_menu", "index", "quickstart", "server/index", "setup/BUILD", "setup/EXTERNAL_TOOLS", "setup/LINUX_INSTALL", "setup/MAC_INSTALL", "setup/MODULAR", "setup/REQUIREMENTS", "setup/WINDOWS_INSTALL", "setup/install_menu", "setup/testing", "usage", "usage/IO", "usage/Index", "usage/argsort", "usage/arithmetic", "usage/categorical", "usage/creation", "usage/dataframe", "usage/groupby", "usage/histogram", "usage/indexing", "usage/pdarray", "usage/random", "usage/segarray", "usage/series", "usage/setops", "usage/startup", "usage/strings"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["CONTRIBUTING_LINK.md", "ENVIRONMENT.md", "autoapi/arkouda/accessor/index.rst", "autoapi/arkouda/alignment/index.rst", "autoapi/arkouda/apply/index.rst", "autoapi/arkouda/array_api/array_object/index.rst", "autoapi/arkouda/array_api/creation_functions/index.rst", "autoapi/arkouda/array_api/data_type_functions/index.rst", "autoapi/arkouda/array_api/elementwise_functions/index.rst", "autoapi/arkouda/array_api/index.rst", "autoapi/arkouda/array_api/indexing_functions/index.rst", "autoapi/arkouda/array_api/linalg/index.rst", "autoapi/arkouda/array_api/manipulation_functions/index.rst", "autoapi/arkouda/array_api/searching_functions/index.rst", "autoapi/arkouda/array_api/set_functions/index.rst", "autoapi/arkouda/array_api/sorting_functions/index.rst", "autoapi/arkouda/array_api/statistical_functions/index.rst", "autoapi/arkouda/array_api/utility_functions/index.rst", "autoapi/arkouda/categorical/index.rst", "autoapi/arkouda/client/index.rst", "autoapi/arkouda/client_dtypes/index.rst", "autoapi/arkouda/comm_diagnostics/index.rst", "autoapi/arkouda/dataframe/index.rst", "autoapi/arkouda/groupbyclass/index.rst", "autoapi/arkouda/history/index.rst", "autoapi/arkouda/index.rst", "autoapi/arkouda/index/index.rst", "autoapi/arkouda/infoclass/index.rst", "autoapi/arkouda/io/index.rst", "autoapi/arkouda/io_util/index.rst", "autoapi/arkouda/join/index.rst", "autoapi/arkouda/logger/index.rst", "autoapi/arkouda/match/index.rst", "autoapi/arkouda/matcher/index.rst", "autoapi/arkouda/numpy/char/index.rst", "autoapi/arkouda/numpy/ctypeslib/index.rst", "autoapi/arkouda/numpy/dtypes/index.rst", "autoapi/arkouda/numpy/exceptions/index.rst", "autoapi/arkouda/numpy/fft/index.rst", "autoapi/arkouda/numpy/index.rst", "autoapi/arkouda/numpy/lib/emath/index.rst", "autoapi/arkouda/numpy/lib/index.rst", "autoapi/arkouda/numpy/linalg/index.rst", "autoapi/arkouda/numpy/ma/index.rst", "autoapi/arkouda/numpy/manipulation_functions/index.rst", "autoapi/arkouda/numpy/numeric/index.rst", "autoapi/arkouda/numpy/pdarrayclass/index.rst", "autoapi/arkouda/numpy/pdarraycreation/index.rst", "autoapi/arkouda/numpy/pdarraymanipulation/index.rst", "autoapi/arkouda/numpy/pdarraysetops/index.rst", "autoapi/arkouda/numpy/polynomial/index.rst", "autoapi/arkouda/numpy/random/index.rst", "autoapi/arkouda/numpy/rec/index.rst", "autoapi/arkouda/numpy/segarray/index.rst", "autoapi/arkouda/numpy/sorting/index.rst", "autoapi/arkouda/numpy/strings/index.rst", "autoapi/arkouda/numpy/timeclass/index.rst", "autoapi/arkouda/numpy/util/index.rst", "autoapi/arkouda/numpy/utils/index.rst", "autoapi/arkouda/plotting/index.rst", "autoapi/arkouda/row/index.rst", "autoapi/arkouda/scipy/index.rst", "autoapi/arkouda/scipy/special/index.rst", "autoapi/arkouda/scipy/stats/index.rst", "autoapi/arkouda/security/index.rst", "autoapi/arkouda/series/index.rst", "autoapi/arkouda/sparrayclass/index.rst", "autoapi/arkouda/sparsematrix/index.rst", "autoapi/arkouda/testing/index.rst", "autoapi/index.rst", "developer/ADDING_FEATURES.md", "developer/BENCHMARK.md", "developer/GASNET.md", "developer/MEMORY.md", "developer/RELEASE_PROCESS.md", "developer/TIPS.md", "developer/USER_BUGS.md", "developer/dev_menu.rst", "examples.rst", "file_io/CSV.md", "file_io/HDF5.md", "file_io/IMPORT_EXPORT.md", "file_io/PARQUET.md", "file_io/io_menu.rst", "index.rst", "quickstart.rst", "server/index.rst", "setup/BUILD.md", "setup/EXTERNAL_TOOLS.md", "setup/LINUX_INSTALL.md", "setup/MAC_INSTALL.md", "setup/MODULAR.md", "setup/REQUIREMENTS.md", "setup/WINDOWS_INSTALL.md", "setup/install_menu.rst", "setup/testing.rst", "usage.rst", "usage/IO.rst", "usage/Index.rst", "usage/argsort.rst", "usage/arithmetic.rst", "usage/categorical.rst", "usage/creation.rst", "usage/dataframe.rst", "usage/groupby.rst", "usage/histogram.rst", "usage/indexing.rst", "usage/pdarray.rst", "usage/random.rst", "usage/segarray.rst", "usage/series.rst", "usage/setops.rst", "usage/startup.rst", "usage/strings.rst"], "indexentries": {"a() (arkouda.scipy.stats.chi2 method)": [[63, "arkouda.scipy.stats.chi2.a", false]], "abs() (arkouda.numpy.timeclass.timedelta method)": [[56, "arkouda.numpy.timeclass.Timedelta.abs", false]], "abs() (arkouda.numpy.timedelta method)": [[39, "arkouda.numpy.Timedelta.abs", false]], "abs() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.abs", false], [25, "id481", false]], "abs() (in module arkouda)": [[25, "arkouda.abs", false], [100, "arkouda.abs", false]], "abs() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.abs", false]], "abs() (in module arkouda.numpy)": [[39, "arkouda.numpy.abs", false]], "abs() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.abs", false]], "acos() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.acos", false]], "acosh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.acosh", false]], "add() (arkouda.series method)": [[25, "arkouda.Series.add", false]], "add() (arkouda.series.series method)": [[65, "arkouda.series.Series.add", false]], "add() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.add", false]], "aggregate() (arkouda.groupby method)": [[25, "arkouda.GroupBy.aggregate", false], [25, "id136", false], [25, "id183", false], [25, "id230", false], [25, "id277", false], [104, "arkouda.GroupBy.aggregate", false]], "aggregate() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.aggregate", false]], "aggregate() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.aggregate", false]], "aggregate() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.aggregate", false]], "aggregate() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.aggregate", false]], "aggregate() (arkouda.segarray method)": [[25, "arkouda.SegArray.aggregate", false]], "akbool (class in arkouda)": [[25, "arkouda.akbool", false], [25, "id502", false]], "akbool (class in arkouda.numpy)": [[39, "arkouda.numpy.akbool", false]], "akcast() (in module arkouda)": [[25, "arkouda.akcast", false]], "akfloat64 (class in arkouda)": [[25, "arkouda.akfloat64", false]], "akint64 (class in arkouda)": [[25, "arkouda.akint64", false], [25, "id503", false]], "akint64 (class in arkouda.numpy)": [[39, "arkouda.numpy.akint64", false]], "akuint64 (class in arkouda)": [[25, "arkouda.akuint64", false], [25, "id505", false]], "akuint64 (class in arkouda.numpy)": [[39, "arkouda.numpy.akuint64", false]], "align() (in module arkouda.alignment)": [[3, "arkouda.alignment.align", false]], "all() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.all", false], [25, "id2", false]], "all() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.all", false]], "all() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.all", false]], "all() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.all", false]], "all() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.all", false]], "all() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.all", false]], "all() (arkouda.groupby method)": [[25, "arkouda.GroupBy.all", false], [25, "id137", false], [25, "id184", false], [25, "id231", false], [25, "id278", false], [104, "arkouda.GroupBy.all", false]], "all() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.all", false]], "all() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.all", false]], "all() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.all", false]], "all() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.all", false], [39, "id127", false], [39, "id196", false]], "all() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.all", false]], "all() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.all", false]], "all() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.all", false]], "all() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.all", false], [39, "id258", false]], "all() (arkouda.pdarray method)": [[25, "arkouda.pdarray.all", false], [25, "id551", false], [25, "id620", false], [105, "arkouda.pdarray.all", false]], "all() (arkouda.segarray method)": [[25, "arkouda.SegArray.all", false]], "all() (arkouda.str_ method)": [[25, "arkouda.str_.all", false]], "all() (in module arkouda)": [[100, "arkouda.all", false]], "all() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.all", false]], "all_scalars (class in arkouda)": [[25, "arkouda.all_scalars", false]], "all_scalars (class in arkouda.numpy)": [[39, "arkouda.numpy.all_scalars", false]], "all_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.all_scalars", false]], "allsymbols (in module arkouda)": [[25, "arkouda.AllSymbols", false]], "allsymbols (in module arkouda.infoclass)": [[27, "arkouda.infoclass.AllSymbols", false]], "and() (arkouda.groupby method)": [[25, "arkouda.GroupBy.AND", false], [25, "id132", false], [25, "id179", false], [25, "id226", false], [25, "id273", false], [104, "arkouda.GroupBy.AND", false]], "and() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.AND", false]], "and() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.AND", false]], "and() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.AND", false]], "and() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.AND", false]], "and() (arkouda.segarray method)": [[25, "arkouda.SegArray.AND", false]], "annotations (class in arkouda)": [[25, "arkouda.annotations", false]], "annotations (class in arkouda.numpy)": [[39, "arkouda.numpy.annotations", false]], "annotations (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.annotations", false]], "any() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.any", false], [25, "id3", false]], "any() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.any", false]], "any() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.any", false]], "any() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.any", false]], "any() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.any", false]], "any() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.any", false]], "any() (arkouda.groupby method)": [[25, "arkouda.GroupBy.any", false], [25, "id138", false], [25, "id185", false], [25, "id232", false], [25, "id279", false], [104, "arkouda.GroupBy.any", false]], "any() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.any", false]], "any() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.any", false]], "any() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.any", false]], "any() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.any", false], [39, "id128", false], [39, "id197", false]], "any() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.any", false]], "any() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.any", false]], "any() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.any", false]], "any() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.any", false], [39, "id259", false]], "any() (arkouda.pdarray method)": [[25, "arkouda.pdarray.any", false], [25, "id552", false], [25, "id621", false], [105, "arkouda.pdarray.any", false]], "any() (arkouda.segarray method)": [[25, "arkouda.SegArray.any", false]], "any() (arkouda.str_ method)": [[25, "arkouda.str_.any", false]], "any() (in module arkouda)": [[100, "arkouda.any", false]], "any() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.any", false]], "append() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.append", false], [25, "id4", false]], "append() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.append", false]], "append() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.append", false]], "append() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.append", false]], "append() (arkouda.segarray method)": [[25, "arkouda.SegArray.append", false]], "append_single() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.append_single", false]], "append_single() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.append_single", false]], "append_single() (arkouda.segarray method)": [[25, "arkouda.SegArray.append_single", false]], "apply() (in module arkouda)": [[25, "arkouda.apply", false]], "apply() (in module arkouda.apply)": [[4, "arkouda.apply.apply", false]], "apply_permutation() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.apply_permutation", false], [25, "id5", false]], "apply_permutation() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.apply_permutation", false]], "apply_permutation() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.apply_permutation", false]], "arange() (in module arkouda)": [[25, "arkouda.arange", false], [25, "id507", false], [25, "id508", false], [25, "id509", false], [102, "arkouda.arange", false]], "arange() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.arange", false]], "arange() (in module arkouda.numpy)": [[39, "arkouda.numpy.arange", false], [39, "id90", false]], "arange() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.arange", false]], "arccos() (in module arkouda)": [[25, "arkouda.arccos", false]], "arccos() (in module arkouda.numpy)": [[39, "arkouda.numpy.arccos", false]], "arccos() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.arccos", false]], "arccosh() (in module arkouda)": [[25, "arkouda.arccosh", false]], "arccosh() (in module arkouda.numpy)": [[39, "arkouda.numpy.arccosh", false]], "arccosh() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.arccosh", false]], "arcsin() (in module arkouda)": [[25, "arkouda.arcsin", false]], "arcsin() (in module arkouda.numpy)": [[39, "arkouda.numpy.arcsin", false]], "arcsin() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.arcsin", false]], "arcsinh() (in module arkouda)": [[25, "arkouda.arcsinh", false]], "arcsinh() (in module arkouda.numpy)": [[39, "arkouda.numpy.arcsinh", false]], "arcsinh() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.arcsinh", false]], "arctan() (in module arkouda)": [[25, "arkouda.arctan", false]], "arctan() (in module arkouda.numpy)": [[39, "arkouda.numpy.arctan", false]], "arctan() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.arctan", false]], "arctan2() (in module arkouda)": [[25, "arkouda.arctan2", false]], "arctan2() (in module arkouda.numpy)": [[39, "arkouda.numpy.arctan2", false]], "arctan2() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.arctan2", false]], "arctanh() (in module arkouda)": [[25, "arkouda.arctanh", false]], "arctanh() (in module arkouda.numpy)": [[39, "arkouda.numpy.arctanh", false]], "arctanh() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.arctanh", false]], "argmax() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.argmax", false]], "argmax() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.argmax", false]], "argmax() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.argmax", false]], "argmax() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.argmax", false]], "argmax() (arkouda.groupby method)": [[25, "arkouda.GroupBy.argmax", false], [25, "id139", false], [25, "id186", false], [25, "id233", false], [25, "id280", false], [104, "arkouda.GroupBy.argmax", false]], "argmax() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.argmax", false]], "argmax() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.argmax", false]], "argmax() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.argmax", false]], "argmax() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.argmax", false], [39, "id129", false], [39, "id198", false]], "argmax() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.argmax", false]], "argmax() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.argmax", false]], "argmax() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.argmax", false]], "argmax() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.argmax", false], [39, "id260", false]], "argmax() (arkouda.pdarray method)": [[25, "arkouda.pdarray.argmax", false], [25, "id553", false], [25, "id622", false], [105, "arkouda.pdarray.argmax", false]], "argmax() (arkouda.segarray method)": [[25, "arkouda.SegArray.argmax", false]], "argmax() (arkouda.series method)": [[25, "arkouda.Series.argmax", false]], "argmax() (arkouda.series.series method)": [[65, "arkouda.series.Series.argmax", false]], "argmax() (arkouda.str_ method)": [[25, "arkouda.str_.argmax", false]], "argmax() (in module arkouda)": [[100, "arkouda.argmax", false]], "argmax() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.argmax", false]], "argmaxk() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.argmaxk", false], [39, "id130", false], [39, "id199", false]], "argmaxk() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.argmaxk", false]], "argmaxk() (arkouda.pdarray method)": [[25, "arkouda.pdarray.argmaxk", false], [25, "id554", false], [25, "id623", false], [105, "arkouda.pdarray.argmaxk", false]], "argmaxk() (in module arkouda)": [[25, "arkouda.argmaxk", false], [100, "arkouda.argmaxk", false]], "argmaxk() (in module arkouda.numpy)": [[39, "arkouda.numpy.argmaxk", false]], "argmaxk() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.argmaxk", false]], "argmin() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.argmin", false]], "argmin() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.argmin", false]], "argmin() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.argmin", false]], "argmin() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.argmin", false]], "argmin() (arkouda.groupby method)": [[25, "arkouda.GroupBy.argmin", false], [25, "id140", false], [25, "id187", false], [25, "id234", false], [25, "id281", false], [104, "arkouda.GroupBy.argmin", false]], "argmin() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.argmin", false]], "argmin() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.argmin", false]], "argmin() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.argmin", false]], "argmin() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.argmin", false], [39, "id131", false], [39, "id200", false]], "argmin() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.argmin", false]], "argmin() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.argmin", false]], "argmin() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.argmin", false]], "argmin() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.argmin", false], [39, "id261", false]], "argmin() (arkouda.pdarray method)": [[25, "arkouda.pdarray.argmin", false], [25, "id555", false], [25, "id624", false], [105, "arkouda.pdarray.argmin", false]], "argmin() (arkouda.segarray method)": [[25, "arkouda.SegArray.argmin", false]], "argmin() (arkouda.series method)": [[25, "arkouda.Series.argmin", false]], "argmin() (arkouda.series.series method)": [[65, "arkouda.series.Series.argmin", false]], "argmin() (arkouda.str_ method)": [[25, "arkouda.str_.argmin", false]], "argmin() (in module arkouda)": [[100, "arkouda.argmin", false]], "argmin() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.argmin", false]], "argmink() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.argmink", false], [39, "id132", false], [39, "id201", false]], "argmink() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.argmink", false]], "argmink() (arkouda.pdarray method)": [[25, "arkouda.pdarray.argmink", false], [25, "id556", false], [25, "id625", false], [105, "arkouda.pdarray.argmink", false]], "argmink() (in module arkouda)": [[25, "arkouda.argmink", false], [100, "arkouda.argmink", false]], "argmink() (in module arkouda.numpy)": [[39, "arkouda.numpy.argmink", false]], "argmink() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.argmink", false]], "argsort() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.argsort", false]], "argsort() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.argsort", false], [25, "id6", false]], "argsort() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.argsort", false]], "argsort() (arkouda.index method)": [[25, "arkouda.Index.argsort", false]], "argsort() (arkouda.index.index method)": [[26, "arkouda.index.Index.argsort", false]], "argsort() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.argsort", false]], "argsort() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.argsort", false]], "argsort() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.argsort", false]], "argsort() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.argsort", false], [39, "id262", false]], "argsort() (arkouda.str_ method)": [[25, "arkouda.str_.argsort", false]], "argsort() (in module arkouda)": [[25, "arkouda.argsort", false], [25, "id510", false], [99, "arkouda.argsort", false]], "argsort() (in module arkouda.array_api.sorting_functions)": [[15, "arkouda.array_api.sorting_functions.argsort", false]], "argsort() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.argsort", false]], "argsort() (in module arkouda.index)": [[98, "arkouda.Index.argsort", false]], "argsort() (in module arkouda.multiindex)": [[98, "arkouda.MultiIndex.argsort", false]], "argsort() (in module arkouda.numpy)": [[39, "arkouda.numpy.argsort", false]], "argsort() (in module arkouda.numpy.sorting)": [[54, "arkouda.numpy.sorting.argsort", false]], "arkouda": [[25, "module-arkouda", false]], "arkouda.accessor": [[2, "module-arkouda.accessor", false]], "arkouda.alignment": [[3, "module-arkouda.alignment", false]], "arkouda.apply": [[4, "module-arkouda.apply", false]], "arkouda.array_api": [[9, "module-arkouda.array_api", false]], "arkouda.array_api.array_object": [[5, "module-arkouda.array_api.array_object", false]], "arkouda.array_api.creation_functions": [[6, "module-arkouda.array_api.creation_functions", false]], "arkouda.array_api.data_type_functions": [[7, "module-arkouda.array_api.data_type_functions", false]], "arkouda.array_api.elementwise_functions": [[8, "module-arkouda.array_api.elementwise_functions", false]], "arkouda.array_api.indexing_functions": [[10, "module-arkouda.array_api.indexing_functions", false]], "arkouda.array_api.linalg": [[11, "module-arkouda.array_api.linalg", false]], "arkouda.array_api.manipulation_functions": [[12, "module-arkouda.array_api.manipulation_functions", false]], "arkouda.array_api.searching_functions": [[13, "module-arkouda.array_api.searching_functions", false]], "arkouda.array_api.set_functions": [[14, "module-arkouda.array_api.set_functions", false]], "arkouda.array_api.sorting_functions": [[15, "module-arkouda.array_api.sorting_functions", false]], "arkouda.array_api.statistical_functions": [[16, "module-arkouda.array_api.statistical_functions", false]], "arkouda.array_api.utility_functions": [[17, "module-arkouda.array_api.utility_functions", false]], "arkouda.categorical": [[18, "module-arkouda.categorical", false]], "arkouda.client": [[19, "module-arkouda.client", false]], "arkouda.client_dtypes": [[20, "module-arkouda.client_dtypes", false]], "arkouda.comm_diagnostics": [[21, "module-arkouda.comm_diagnostics", false]], "arkouda.dataframe": [[22, "module-arkouda.dataframe", false]], "arkouda.groupbyclass": [[23, "module-arkouda.groupbyclass", false]], "arkouda.history": [[24, "module-arkouda.history", false]], "arkouda.index": [[26, "module-arkouda.index", false]], "arkouda.infoclass": [[27, "module-arkouda.infoclass", false]], "arkouda.io": [[28, "module-arkouda.io", false]], "arkouda.io_util": [[29, "module-arkouda.io_util", false]], "arkouda.join": [[30, "module-arkouda.join", false]], "arkouda.logger": [[31, "module-arkouda.logger", false]], "arkouda.match": [[32, "module-arkouda.match", false]], "arkouda.matcher": [[33, "module-arkouda.matcher", false]], "arkouda.numpy": [[39, "module-arkouda.numpy", false]], "arkouda.numpy.char": [[34, "module-arkouda.numpy.char", false]], "arkouda.numpy.ctypeslib": [[35, "module-arkouda.numpy.ctypeslib", false]], "arkouda.numpy.dtypes": [[36, "module-arkouda.numpy.dtypes", false]], "arkouda.numpy.exceptions": [[37, "module-arkouda.numpy.exceptions", false]], "arkouda.numpy.fft": [[38, "module-arkouda.numpy.fft", false]], "arkouda.numpy.lib": [[41, "module-arkouda.numpy.lib", false]], "arkouda.numpy.lib.emath": [[40, "module-arkouda.numpy.lib.emath", false]], "arkouda.numpy.linalg": [[42, "module-arkouda.numpy.linalg", false]], "arkouda.numpy.ma": [[43, "module-arkouda.numpy.ma", false]], "arkouda.numpy.manipulation_functions": [[44, "module-arkouda.numpy.manipulation_functions", false]], "arkouda.numpy.numeric": [[45, "module-arkouda.numpy.numeric", false]], "arkouda.numpy.pdarrayclass": [[46, "module-arkouda.numpy.pdarrayclass", false]], "arkouda.numpy.pdarraycreation": [[47, "module-arkouda.numpy.pdarraycreation", false]], "arkouda.numpy.pdarraymanipulation": [[48, "module-arkouda.numpy.pdarraymanipulation", false]], "arkouda.numpy.pdarraysetops": [[49, "module-arkouda.numpy.pdarraysetops", false]], "arkouda.numpy.polynomial": [[50, "module-arkouda.numpy.polynomial", false]], "arkouda.numpy.random": [[51, "module-arkouda.numpy.random", false]], "arkouda.numpy.rec": [[52, "module-arkouda.numpy.rec", false]], "arkouda.numpy.segarray": [[53, "module-arkouda.numpy.segarray", false]], "arkouda.numpy.sorting": [[54, "module-arkouda.numpy.sorting", false]], "arkouda.numpy.strings": [[55, "module-arkouda.numpy.strings", false]], "arkouda.numpy.timeclass": [[56, "module-arkouda.numpy.timeclass", false]], "arkouda.numpy.util": [[57, "module-arkouda.numpy.util", false]], "arkouda.numpy.utils": [[58, "module-arkouda.numpy.utils", false]], "arkouda.plotting": [[59, "module-arkouda.plotting", false]], "arkouda.row": [[60, "module-arkouda.row", false]], "arkouda.scipy": [[61, "module-arkouda.scipy", false]], "arkouda.scipy.special": [[62, "module-arkouda.scipy.special", false]], "arkouda.scipy.stats": [[63, "module-arkouda.scipy.stats", false]], "arkouda.security": [[64, "module-arkouda.security", false]], "arkouda.series": [[65, "module-arkouda.series", false]], "arkouda.sparrayclass": [[66, "module-arkouda.sparrayclass", false]], "arkouda.sparsematrix": [[67, "module-arkouda.sparsematrix", false]], "arkouda.testing": [[68, "module-arkouda.testing", false]], "arkouda_supported_bools (class in arkouda)": [[25, "arkouda.ARKOUDA_SUPPORTED_BOOLS", false]], "arkouda_supported_bools (class in arkouda.numpy)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_BOOLS", false]], "arkouda_supported_bools (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_BOOLS", false]], "arkouda_supported_dtypes (class in arkouda)": [[25, "arkouda.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (class in arkouda.numpy)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_floats (class in arkouda)": [[25, "arkouda.ARKOUDA_SUPPORTED_FLOATS", false]], "arkouda_supported_floats (class in arkouda.numpy)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_FLOATS", false]], "arkouda_supported_floats (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS", false]], "arkouda_supported_ints (class in arkouda)": [[25, "arkouda.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_ints (class in arkouda.numpy)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_ints (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_numbers (class in arkouda)": [[25, "arkouda.ARKOUDA_SUPPORTED_NUMBERS", false]], "arkouda_supported_numbers (class in arkouda.numpy)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_NUMBERS", false]], "arkouda_supported_numbers (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS", false]], "array (class in arkouda.array_api)": [[9, "arkouda.array_api.Array", false]], "array (class in arkouda.array_api.array_object)": [[5, "arkouda.array_api.array_object.Array", false]], "array() (in module arkouda)": [[25, "arkouda.array", false], [25, "id511", false], [25, "id512", false], [97, "arkouda.array", false]], "array() (in module arkouda.numpy)": [[39, "arkouda.numpy.array", false], [39, "id91", false]], "array() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.array", false]], "array_equal() (in module arkouda)": [[25, "arkouda.array_equal", false]], "array_equal() (in module arkouda.numpy)": [[39, "arkouda.numpy.array_equal", false]], "array_equal() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.array_equal", false]], "as_index (arkouda.dataframe.dataframegroupby attribute)": [[22, "arkouda.dataframe.DataFrameGroupBy.as_index", false]], "as_index (arkouda.dataframegroupby attribute)": [[25, "arkouda.DataFrameGroupBy.as_index", false]], "as_integer_ratio() (arkouda.akfloat64 method)": [[25, "arkouda.akfloat64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float16 method)": [[25, "arkouda.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float32 method)": [[25, "arkouda.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float64 method)": [[25, "arkouda.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.dtypes.float16 method)": [[36, "arkouda.numpy.dtypes.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.dtypes.float32 method)": [[36, "arkouda.numpy.dtypes.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.dtypes.float64 method)": [[36, "arkouda.numpy.dtypes.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float16 method)": [[39, "arkouda.numpy.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float32 method)": [[39, "arkouda.numpy.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float64 method)": [[39, "arkouda.numpy.float64.as_integer_ratio", false]], "asarray() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.asarray", false]], "asin() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.asin", false]], "asinh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.asinh", false]], "assert_almost_equal() (in module arkouda)": [[25, "arkouda.assert_almost_equal", false]], "assert_almost_equal() (in module arkouda.testing)": [[68, "arkouda.testing.assert_almost_equal", false]], "assert_almost_equivalent() (in module arkouda)": [[25, "arkouda.assert_almost_equivalent", false]], "assert_almost_equivalent() (in module arkouda.testing)": [[68, "arkouda.testing.assert_almost_equivalent", false]], "assert_arkouda_array_equal() (in module arkouda)": [[25, "arkouda.assert_arkouda_array_equal", false]], "assert_arkouda_array_equal() (in module arkouda.testing)": [[68, "arkouda.testing.assert_arkouda_array_equal", false]], "assert_arkouda_array_equivalent() (in module arkouda)": [[25, "arkouda.assert_arkouda_array_equivalent", false]], "assert_arkouda_array_equivalent() (in module arkouda.testing)": [[68, "arkouda.testing.assert_arkouda_array_equivalent", false]], "assert_arkouda_pdarray_equal() (in module arkouda)": [[25, "arkouda.assert_arkouda_pdarray_equal", false]], "assert_arkouda_pdarray_equal() (in module arkouda.testing)": [[68, "arkouda.testing.assert_arkouda_pdarray_equal", false]], "assert_arkouda_segarray_equal() (in module arkouda)": [[25, "arkouda.assert_arkouda_segarray_equal", false]], "assert_arkouda_segarray_equal() (in module arkouda.testing)": [[68, "arkouda.testing.assert_arkouda_segarray_equal", false]], "assert_arkouda_strings_equal() (in module arkouda)": [[25, "arkouda.assert_arkouda_strings_equal", false]], "assert_arkouda_strings_equal() (in module arkouda.testing)": [[68, "arkouda.testing.assert_arkouda_strings_equal", false]], "assert_attr_equal() (in module arkouda)": [[25, "arkouda.assert_attr_equal", false]], "assert_attr_equal() (in module arkouda.testing)": [[68, "arkouda.testing.assert_attr_equal", false]], "assert_categorical_equal() (in module arkouda)": [[25, "arkouda.assert_categorical_equal", false]], "assert_categorical_equal() (in module arkouda.testing)": [[68, "arkouda.testing.assert_categorical_equal", false]], "assert_class_equal() (in module arkouda)": [[25, "arkouda.assert_class_equal", false]], "assert_class_equal() (in module arkouda.testing)": [[68, "arkouda.testing.assert_class_equal", false]], "assert_contains_all() (in module arkouda)": [[25, "arkouda.assert_contains_all", false]], "assert_contains_all() (in module arkouda.testing)": [[68, "arkouda.testing.assert_contains_all", false]], "assert_copy() (in module arkouda)": [[25, "arkouda.assert_copy", false]], "assert_copy() (in module arkouda.testing)": [[68, "arkouda.testing.assert_copy", false]], "assert_dict_equal() (in module arkouda)": [[25, "arkouda.assert_dict_equal", false]], "assert_dict_equal() (in module arkouda.testing)": [[68, "arkouda.testing.assert_dict_equal", false]], "assert_equal() (in module arkouda)": [[25, "arkouda.assert_equal", false]], "assert_equal() (in module arkouda.testing)": [[68, "arkouda.testing.assert_equal", false]], "assert_equivalent() (in module arkouda)": [[25, "arkouda.assert_equivalent", false]], "assert_equivalent() (in module arkouda.testing)": [[68, "arkouda.testing.assert_equivalent", false]], "assert_frame_equal() (in module arkouda)": [[25, "arkouda.assert_frame_equal", false]], "assert_frame_equal() (in module arkouda.testing)": [[68, "arkouda.testing.assert_frame_equal", false]], "assert_frame_equivalent() (in module arkouda)": [[25, "arkouda.assert_frame_equivalent", false]], "assert_frame_equivalent() (in module arkouda.testing)": [[68, "arkouda.testing.assert_frame_equivalent", false]], "assert_index_equal() (in module arkouda)": [[25, "arkouda.assert_index_equal", false]], "assert_index_equal() (in module arkouda.testing)": [[68, "arkouda.testing.assert_index_equal", false]], "assert_index_equivalent() (in module arkouda)": [[25, "arkouda.assert_index_equivalent", false]], "assert_index_equivalent() (in module arkouda.testing)": [[68, "arkouda.testing.assert_index_equivalent", false]], "assert_is_sorted() (in module arkouda)": [[25, "arkouda.assert_is_sorted", false]], "assert_is_sorted() (in module arkouda.testing)": [[68, "arkouda.testing.assert_is_sorted", false]], "assert_series_equal() (in module arkouda)": [[25, "arkouda.assert_series_equal", false]], "assert_series_equal() (in module arkouda.testing)": [[68, "arkouda.testing.assert_series_equal", false]], "assert_series_equivalent() (in module arkouda)": [[25, "arkouda.assert_series_equivalent", false]], "assert_series_equivalent() (in module arkouda.testing)": [[68, "arkouda.testing.assert_series_equivalent", false]], "assign() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.assign", false], [25, "id7", false]], "assign() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.assign", false]], "astype() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.astype", false]], "astype() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.astype", false], [39, "id133", false], [39, "id202", false]], "astype() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.astype", false]], "astype() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.astype", false], [39, "id263", false]], "astype() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.astype", false], [39, "id21", false]], "astype() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.astype", false]], "astype() (arkouda.pdarray method)": [[25, "arkouda.pdarray.astype", false], [25, "id557", false], [25, "id626", false]], "astype() (arkouda.str_ method)": [[25, "arkouda.str_.astype", false]], "astype() (arkouda.strings method)": [[25, "arkouda.Strings.astype", false], [25, "id333", false], [25, "id411", false]], "astype() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.astype", false]], "at (arkouda.series property)": [[25, "arkouda.Series.at", false]], "at (arkouda.series.series property)": [[65, "arkouda.series.Series.at", false]], "atan() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.atan", false]], "atan2() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.atan2", false]], "atanh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.atanh", false]], "attach() (arkouda.categorical.categorical static method)": [[18, "arkouda.categorical.Categorical.attach", false]], "attach() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.attach", false], [25, "id8", false]], "attach() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.attach", false]], "attach() (arkouda.groupby method)": [[25, "arkouda.GroupBy.attach", false], [25, "id141", false], [25, "id188", false], [25, "id235", false], [25, "id282", false]], "attach() (arkouda.groupby static method)": [[104, "arkouda.GroupBy.attach", false]], "attach() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.attach", false]], "attach() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.attach", false]], "attach() (arkouda.numpy.pdarray static method)": [[39, "arkouda.numpy.pdarray.attach", false], [39, "id134", false], [39, "id203", false]], "attach() (arkouda.numpy.pdarrayclass.pdarray static method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.attach", false]], "attach() (arkouda.numpy.segarray class method)": [[39, "arkouda.numpy.SegArray.attach", false]], "attach() (arkouda.numpy.segarray.segarray class method)": [[53, "arkouda.numpy.segarray.SegArray.attach", false]], "attach() (arkouda.numpy.strings static method)": [[39, "arkouda.numpy.Strings.attach", false], [39, "id22", false]], "attach() (arkouda.numpy.strings.strings static method)": [[55, "arkouda.numpy.strings.Strings.attach", false]], "attach() (arkouda.pdarray static method)": [[25, "arkouda.pdarray.attach", false], [25, "id558", false], [25, "id627", false]], "attach() (arkouda.segarray class method)": [[25, "arkouda.SegArray.attach", false]], "attach() (arkouda.series method)": [[25, "arkouda.Series.attach", false]], "attach() (arkouda.series.series method)": [[65, "arkouda.series.Series.attach", false]], "attach() (arkouda.strings static method)": [[25, "arkouda.Strings.attach", false], [25, "id334", false], [25, "id412", false]], "attach() (in module arkouda)": [[25, "arkouda.attach", false]], "attach() (in module arkouda.numpy)": [[39, "arkouda.numpy.attach", false]], "attach() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.attach", false]], "attach_all() (in module arkouda)": [[25, "arkouda.attach_all", false]], "attach_all() (in module arkouda.numpy)": [[39, "arkouda.numpy.attach_all", false]], "attach_all() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.attach_all", false]], "attach_pdarray() (in module arkouda)": [[25, "arkouda.attach_pdarray", false]], "attach_pdarray() (in module arkouda.numpy)": [[39, "arkouda.numpy.attach_pdarray", false]], "attach_pdarray() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.attach_pdarray", false]], "b() (arkouda.scipy.stats.chi2 method)": [[63, "arkouda.scipy.stats.chi2.b", false]], "badvalue() (arkouda.scipy.stats.chi2 method)": [[63, "arkouda.scipy.stats.chi2.badvalue", false]], "base() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.base", false]], "base() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.base", false], [39, "id264", false]], "base() (arkouda.str_ method)": [[25, "arkouda.str_.base", false]], "bigint (class in arkouda)": [[25, "arkouda.bigint", false]], "bigint (class in arkouda.numpy)": [[39, "arkouda.numpy.bigint", false]], "bigint (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.bigint", false]], "bigint() (arkouda.dtype method)": [[25, "arkouda.DType.BIGINT", false]], "bigint() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.BIGINT", false]], "bigint() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.BIGINT", false]], "bigint_from_uint_arrays() (in module arkouda)": [[25, "arkouda.bigint_from_uint_arrays", false]], "bigint_from_uint_arrays() (in module arkouda.numpy)": [[39, "arkouda.numpy.bigint_from_uint_arrays", false]], "bigint_from_uint_arrays() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.bigint_from_uint_arrays", false]], "bigint_to_uint_arrays() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.bigint_to_uint_arrays", false], [39, "id135", false], [39, "id204", false]], "bigint_to_uint_arrays() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.bigint_to_uint_arrays", false]], "bigint_to_uint_arrays() (arkouda.pdarray method)": [[25, "arkouda.pdarray.bigint_to_uint_arrays", false], [25, "id559", false], [25, "id628", false]], "binops (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.BinOps", false]], "binops (arkouda.numpy.pdarray attribute)": [[39, "arkouda.numpy.pdarray.BinOps", false], [39, "id125", false], [39, "id194", false]], "binops (arkouda.numpy.pdarrayclass.pdarray attribute)": [[46, "arkouda.numpy.pdarrayclass.pdarray.BinOps", false]], "binops (arkouda.numpy.strings attribute)": [[39, "arkouda.numpy.Strings.BinOps", false], [39, "id20", false]], "binops (arkouda.numpy.strings.strings attribute)": [[55, "arkouda.numpy.strings.Strings.BinOps", false]], "binops (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.BinOps", false], [25, "id549", false], [25, "id618", false]], "binops (arkouda.strings attribute)": [[25, "arkouda.Strings.BinOps", false], [25, "id332", false], [25, "id410", false]], "bit_count() (arkouda.akint64 method)": [[25, "arkouda.akint64.bit_count", false], [25, "id504", false]], "bit_count() (arkouda.akuint64 method)": [[25, "arkouda.akuint64.bit_count", false], [25, "id506", false]], "bit_count() (arkouda.bittype method)": [[25, "arkouda.bitType.bit_count", false], [25, "id514", false]], "bit_count() (arkouda.int16 method)": [[25, "arkouda.int16.bit_count", false]], "bit_count() (arkouda.int32 method)": [[25, "arkouda.int32.bit_count", false]], "bit_count() (arkouda.int64 method)": [[25, "arkouda.int64.bit_count", false]], "bit_count() (arkouda.int8 method)": [[25, "arkouda.int8.bit_count", false]], "bit_count() (arkouda.numpy.akint64 method)": [[39, "arkouda.numpy.akint64.bit_count", false]], "bit_count() (arkouda.numpy.akuint64 method)": [[39, "arkouda.numpy.akuint64.bit_count", false]], "bit_count() (arkouda.numpy.bittype method)": [[39, "arkouda.numpy.bitType.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.bittype method)": [[36, "arkouda.numpy.dtypes.bitType.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int16 method)": [[36, "arkouda.numpy.dtypes.int16.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int32 method)": [[36, "arkouda.numpy.dtypes.int32.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int64 method)": [[36, "arkouda.numpy.dtypes.int64.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int8 method)": [[36, "arkouda.numpy.dtypes.int8.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint16 method)": [[36, "arkouda.numpy.dtypes.uint16.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint32 method)": [[36, "arkouda.numpy.dtypes.uint32.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint64 method)": [[36, "arkouda.numpy.dtypes.uint64.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint8 method)": [[36, "arkouda.numpy.dtypes.uint8.bit_count", false]], "bit_count() (arkouda.numpy.int16 method)": [[39, "arkouda.numpy.int16.bit_count", false]], "bit_count() (arkouda.numpy.int32 method)": [[39, "arkouda.numpy.int32.bit_count", false]], "bit_count() (arkouda.numpy.int64 method)": [[39, "arkouda.numpy.int64.bit_count", false], [39, "id97", false]], "bit_count() (arkouda.numpy.int8 method)": [[39, "arkouda.numpy.int8.bit_count", false]], "bit_count() (arkouda.numpy.uint16 method)": [[39, "arkouda.numpy.uint16.bit_count", false]], "bit_count() (arkouda.numpy.uint32 method)": [[39, "arkouda.numpy.uint32.bit_count", false]], "bit_count() (arkouda.numpy.uint64 method)": [[39, "arkouda.numpy.uint64.bit_count", false]], "bit_count() (arkouda.numpy.uint8 method)": [[39, "arkouda.numpy.uint8.bit_count", false]], "bit_count() (arkouda.uint16 method)": [[25, "arkouda.uint16.bit_count", false]], "bit_count() (arkouda.uint32 method)": [[25, "arkouda.uint32.bit_count", false]], "bit_count() (arkouda.uint64 method)": [[25, "arkouda.uint64.bit_count", false]], "bit_count() (arkouda.uint8 method)": [[25, "arkouda.uint8.bit_count", false]], "bits (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.bits", false]], "bits (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.iinfo_object.bits", false]], "bittype (class in arkouda)": [[25, "arkouda.bitType", false], [25, "id513", false]], "bittype (class in arkouda.numpy)": [[39, "arkouda.numpy.bitType", false]], "bittype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.bitType", false]], "bitvector (class in arkouda)": [[25, "arkouda.BitVector", false]], "bitvector (class in arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.BitVector", false]], "bitvectorizer() (in module arkouda)": [[25, "arkouda.BitVectorizer", false]], "bitvectorizer() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.BitVectorizer", false]], "bitwise_and() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_and", false]], "bitwise_invert() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_invert", false]], "bitwise_left_shift() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_left_shift", false]], "bitwise_or() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_or", false]], "bitwise_right_shift() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_right_shift", false]], "bitwise_xor() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_xor", false]], "bool() (arkouda.dtype method)": [[25, "arkouda.DType.BOOL", false]], "bool() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.BOOL", false]], "bool() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.BOOL", false]], "bool_ (class in arkouda)": [[25, "arkouda.bool_", false]], "bool_ (class in arkouda.numpy)": [[39, "arkouda.numpy.bool_", false]], "bool_ (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.bool_", false]], "bool_scalars (class in arkouda)": [[25, "arkouda.bool_scalars", false], [25, "id515", false]], "bool_scalars (class in arkouda.numpy)": [[39, "arkouda.numpy.bool_scalars", false]], "bool_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.bool_scalars", false]], "booldtype (class in arkouda)": [[25, "arkouda.BoolDType", false]], "booldtype (class in arkouda.numpy)": [[39, "arkouda.numpy.BoolDType", false]], "booldtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.BoolDType", false]], "broadcast() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.broadcast", false]], "broadcast() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.broadcast", false]], "broadcast() (arkouda.groupby method)": [[25, "arkouda.GroupBy.broadcast", false], [25, "id142", false], [25, "id189", false], [25, "id236", false], [25, "id283", false], [104, "arkouda.GroupBy.broadcast", false]], "broadcast() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.broadcast", false]], "broadcast() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.broadcast", false]], "broadcast() (in module arkouda)": [[25, "arkouda.broadcast", false], [25, "id516", false], [25, "id517", false]], "broadcast() (in module arkouda.groupbyclass)": [[23, "arkouda.groupbyclass.broadcast", false]], "broadcast() (in module arkouda.numpy)": [[39, "arkouda.numpy.broadcast", false]], "broadcast_arrays() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.broadcast_arrays", false]], "broadcast_dims() (in module arkouda)": [[25, "arkouda.broadcast_dims", false]], "broadcast_dims() (in module arkouda.numpy)": [[39, "arkouda.numpy.broadcast_dims", false]], "broadcast_dims() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.broadcast_dims", false]], "broadcast_to() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.broadcast_to", false]], "broadcast_to_shape() (in module arkouda)": [[25, "arkouda.broadcast_to_shape", false]], "broadcast_to_shape() (in module arkouda.numpy)": [[39, "arkouda.numpy.broadcast_to_shape", false]], "broadcast_to_shape() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.broadcast_to_shape", false]], "build_from_components() (arkouda.groupby method)": [[25, "arkouda.GroupBy.build_from_components", false], [25, "id143", false], [25, "id190", false], [25, "id237", false], [25, "id284", false]], "build_from_components() (arkouda.groupby static method)": [[104, "arkouda.GroupBy.build_from_components", false]], "build_from_components() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.build_from_components", false]], "build_from_components() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.build_from_components", false]], "bytedtype (class in arkouda)": [[25, "arkouda.ByteDType", false]], "bytedtype (class in arkouda.numpy)": [[39, "arkouda.numpy.ByteDType", false]], "bytedtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ByteDType", false]], "bytesdtype (class in arkouda)": [[25, "arkouda.BytesDType", false]], "bytesdtype (class in arkouda.numpy)": [[39, "arkouda.numpy.BytesDType", false]], "bytesdtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.BytesDType", false]], "byteswap() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.byteswap", false]], "byteswap() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.byteswap", false], [39, "id265", false]], "byteswap() (arkouda.str_ method)": [[25, "arkouda.str_.byteswap", false]], "cached_regex_patterns() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.cached_regex_patterns", false], [39, "id23", false]], "cached_regex_patterns() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.cached_regex_patterns", false]], "cached_regex_patterns() (arkouda.strings method)": [[25, "arkouda.Strings.cached_regex_patterns", false], [25, "id335", false], [25, "id413", false]], "cachedaccessor (class in arkouda)": [[25, "arkouda.CachedAccessor", false]], "cachedaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.CachedAccessor", false]], "can_cast() (in module arkouda)": [[25, "arkouda.can_cast", false]], "can_cast() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.can_cast", false]], "can_cast() (in module arkouda.numpy)": [[39, "arkouda.numpy.can_cast", false]], "can_cast() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.can_cast", false]], "capitalize() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.capitalize", false], [39, "id24", false]], "capitalize() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.capitalize", false]], "capitalize() (arkouda.strings method)": [[25, "arkouda.Strings.capitalize", false], [25, "id336", false], [25, "id414", false]], "cast() (in module arkouda)": [[25, "arkouda.cast", false], [107, "arkouda.cast", false]], "cast() (in module arkouda.numpy)": [[39, "arkouda.numpy.cast", false], [39, "id92", false]], "cast() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.cast", false]], "cast() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.cast", false]], "categorical (class in arkouda)": [[101, "arkouda.Categorical", false]], "categorical (class in arkouda.categorical)": [[18, "arkouda.categorical.Categorical", false]], "categories (arkouda.categorical attribute)": [[101, "arkouda.Categorical.categories", false]], "categories (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.categories", false]], "ceil() (in module arkouda)": [[25, "arkouda.ceil", false]], "ceil() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.ceil", false]], "ceil() (in module arkouda.numpy)": [[39, "arkouda.numpy.ceil", false]], "ceil() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.ceil", false]], "chi2 (class in arkouda.scipy.stats)": [[63, "arkouda.scipy.stats.chi2", false]], "chisquare() (in module arkouda)": [[25, "arkouda.chisquare", false]], "chisquare() (in module arkouda.scipy)": [[61, "arkouda.scipy.chisquare", false]], "choice() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.choice", false]], "choice() (in module arkouda.random.generator)": [[108, "arkouda.random.Generator.choice", false]], "choose() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.choose", false]], "choose() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.choose", false], [39, "id266", false]], "choose() (arkouda.str_ method)": [[25, "arkouda.str_.choose", false]], "chunk_info() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.chunk_info", false]], "chunk_info() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.chunk_info", false]], "clear() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.clear", false]], "clear() (arkouda.numpy.number_format_strings method)": [[39, "arkouda.numpy.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.numpy.seriesdtypes method)": [[39, "arkouda.numpy.SeriesDTypes.clear", false]], "clear() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.clear", false]], "clear() (in module arkouda)": [[25, "arkouda.clear", false]], "clear() (in module arkouda.numpy)": [[39, "arkouda.numpy.clear", false]], "clear() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.clear", false]], "clip() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.clip", false]], "clip() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.clip", false], [39, "id267", false]], "clip() (arkouda.str_ method)": [[25, "arkouda.str_.clip", false]], "clip() (in module arkouda)": [[25, "arkouda.clip", false]], "clip() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.clip", false]], "clip() (in module arkouda.numpy)": [[39, "arkouda.numpy.clip", false]], "clip() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.clip", false]], "clongdoubledtype (class in arkouda)": [[25, "arkouda.CLongDoubleDType", false]], "clongdoubledtype (class in arkouda.numpy)": [[39, "arkouda.numpy.CLongDoubleDType", false]], "clongdoubledtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.CLongDoubleDType", false]], "clz() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.clz", false], [39, "id136", false], [39, "id205", false]], "clz() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.clz", false]], "clz() (arkouda.pdarray method)": [[25, "arkouda.pdarray.clz", false], [25, "id560", false], [25, "id629", false]], "clz() (in module arkouda)": [[25, "arkouda.clz", false]], "clz() (in module arkouda.numpy)": [[39, "arkouda.numpy.clz", false]], "clz() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.clz", false]], "coargsort() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.coargsort", false], [25, "id9", false]], "coargsort() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.coargsort", false]], "coargsort() (in module arkouda)": [[25, "arkouda.coargsort", false], [25, "id518", false], [99, "arkouda.coargsort", false]], "coargsort() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.coargsort", false]], "coargsort() (in module arkouda.numpy)": [[39, "arkouda.numpy.coargsort", false]], "coargsort() (in module arkouda.numpy.sorting)": [[54, "arkouda.numpy.sorting.coargsort", false]], "codes (arkouda.categorical attribute)": [[101, "arkouda.Categorical.codes", false]], "codes (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.codes", false]], "columns (arkouda.dataframe property)": [[25, "arkouda.DataFrame.columns", false], [25, "id10", false]], "columns (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.columns", false]], "compiler_flag() (arkouda.annotations method)": [[25, "arkouda.annotations.compiler_flag", false]], "compiler_flag() (arkouda.numpy.annotations method)": [[39, "arkouda.numpy.annotations.compiler_flag", false]], "compiler_flag() (arkouda.numpy.dtypes.annotations method)": [[36, "arkouda.numpy.dtypes.annotations.compiler_flag", false]], "complex128 (class in arkouda)": [[25, "arkouda.complex128", false]], "complex128 (class in arkouda.numpy)": [[39, "arkouda.numpy.complex128", false]], "complex128 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.complex128", false]], "complex128() (arkouda.dtype method)": [[25, "arkouda.DType.COMPLEX128", false]], "complex128() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.COMPLEX128", false]], "complex128() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.COMPLEX128", false]], "complex128dtype (class in arkouda)": [[25, "arkouda.Complex128DType", false]], "complex128dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.Complex128DType", false]], "complex128dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.Complex128DType", false]], "complex64 (class in arkouda)": [[25, "arkouda.complex64", false]], "complex64 (class in arkouda.numpy)": [[39, "arkouda.numpy.complex64", false]], "complex64 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.complex64", false]], "complex64() (arkouda.dtype method)": [[25, "arkouda.DType.COMPLEX64", false]], "complex64() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.COMPLEX64", false]], "complex64() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.COMPLEX64", false]], "complex64dtype (class in arkouda)": [[25, "arkouda.Complex64DType", false]], "complex64dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.Complex64DType", false]], "complex64dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.Complex64DType", false]], "components (arkouda.numpy.timeclass.timedelta property)": [[56, "arkouda.numpy.timeclass.Timedelta.components", false]], "components (arkouda.numpy.timedelta property)": [[39, "arkouda.numpy.Timedelta.components", false]], "components (arkouda.timedelta property)": [[25, "arkouda.Timedelta.components", false], [25, "id482", false]], "compress() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.compress", false]], "compress() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.compress", false], [39, "id268", false]], "compress() (arkouda.str_ method)": [[25, "arkouda.str_.compress", false]], "compute_join_size() (in module arkouda.join)": [[30, "arkouda.join.compute_join_size", false]], "concat() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.concat", false], [25, "id11", false]], "concat() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.concat", false]], "concat() (arkouda.index method)": [[25, "arkouda.Index.concat", false]], "concat() (arkouda.index.index method)": [[26, "arkouda.index.Index.concat", false]], "concat() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.concat", false]], "concat() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.concat", false]], "concat() (arkouda.numpy.segarray class method)": [[39, "arkouda.numpy.SegArray.concat", false]], "concat() (arkouda.numpy.segarray.segarray class method)": [[53, "arkouda.numpy.segarray.SegArray.concat", false]], "concat() (arkouda.segarray class method)": [[25, "arkouda.SegArray.concat", false]], "concat() (arkouda.series method)": [[25, "arkouda.Series.concat", false]], "concat() (arkouda.series.series method)": [[65, "arkouda.series.Series.concat", false]], "concat() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.concat", false]], "concat() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.concat", false]], "concat() (in module arkouda.index)": [[98, "arkouda.Index.concat", false]], "concat() (in module arkouda.multiindex)": [[98, "arkouda.MultiIndex.concat", false]], "concatenate() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.concatenate", false]], "concatenate() (in module arkouda)": [[25, "arkouda.concatenate", false], [102, "arkouda.concatenate", false]], "concatenate() (in module arkouda.numpy)": [[39, "arkouda.numpy.concatenate", false], [39, "id93", false]], "concatenate() (in module arkouda.numpy.pdarraysetops)": [[49, "arkouda.numpy.pdarraysetops.concatenate", false]], "concatenate() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.concatenate", false]], "conj() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.conj", false]], "conj() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.conj", false], [39, "id269", false]], "conj() (arkouda.str_ method)": [[25, "arkouda.str_.conj", false]], "conj() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.conj", false]], "conjugate() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.conjugate", false]], "conjugate() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.conjugate", false], [39, "id270", false]], "conjugate() (arkouda.str_ method)": [[25, "arkouda.str_.conjugate", false]], "connect() (in module arkouda)": [[112, "arkouda.connect", false]], "connect() (in module arkouda.client)": [[19, "arkouda.client.connect", false]], "conserves (arkouda.bitvector attribute)": [[25, "arkouda.BitVector.conserves", false]], "conserves (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.conserves", false]], "contains() (arkouda.categorical method)": [[101, "arkouda.Categorical.contains", false]], "contains() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.contains", false]], "contains() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.contains", false], [39, "id25", false]], "contains() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.contains", false]], "contains() (arkouda.strings method)": [[25, "arkouda.Strings.contains", false], [25, "id337", false], [25, "id415", false]], "convert_bytes() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.convert_bytes", false]], "convert_if_categorical() (in module arkouda)": [[25, "arkouda.convert_if_categorical", false]], "convert_if_categorical() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.convert_if_categorical", false]], "copy() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.copy", false]], "copy() (arkouda.dtypes method)": [[25, "arkouda.DTypes.copy", false]], "copy() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.copy", false]], "copy() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.copy", false]], "copy() (arkouda.inttypes method)": [[25, "arkouda.intTypes.copy", false], [25, "id525", false]], "copy() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.copy", false]], "copy() (arkouda.numpy.dtypeobjects method)": [[39, "arkouda.numpy.DTypeObjects.copy", false]], "copy() (arkouda.numpy.dtypes method)": [[39, "arkouda.numpy.DTypes.copy", false]], "copy() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.copy", false]], "copy() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.copy", false]], "copy() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.copy", false]], "copy() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.copy", false]], "copy() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.copy", false]], "copy() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.copy", false]], "copy() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.copy", false]], "copy() (arkouda.numpy.inttypes method)": [[39, "arkouda.numpy.intTypes.copy", false], [39, "id99", false]], "copy() (arkouda.numpy.number_format_strings method)": [[39, "arkouda.numpy.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.numpy.numericdtypes method)": [[39, "arkouda.numpy.NumericDTypes.copy", false]], "copy() (arkouda.numpy.scalardtypes method)": [[39, "arkouda.numpy.ScalarDTypes.copy", false]], "copy() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.copy", false]], "copy() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.copy", false]], "copy() (arkouda.numpy.seriesdtypes method)": [[39, "arkouda.numpy.SeriesDTypes.copy", false]], "copy() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.copy", false], [39, "id271", false]], "copy() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.copy", false]], "copy() (arkouda.segarray method)": [[25, "arkouda.SegArray.copy", false]], "copy() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.copy", false]], "copy() (arkouda.str_ method)": [[25, "arkouda.str_.copy", false]], "copy() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.copy", false]], "corr() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.corr", false], [25, "id12", false]], "corr() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.corr", false]], "corr() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.corr", false], [39, "id137", false], [39, "id206", false]], "corr() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.corr", false]], "corr() (arkouda.pdarray method)": [[25, "arkouda.pdarray.corr", false], [25, "id561", false], [25, "id630", false]], "corr() (in module arkouda)": [[25, "arkouda.corr", false]], "corr() (in module arkouda.numpy)": [[39, "arkouda.numpy.corr", false]], "corr() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.corr", false]], "cos() (in module arkouda)": [[25, "arkouda.cos", false], [100, "arkouda.cos", false]], "cos() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.cos", false]], "cos() (in module arkouda.numpy)": [[39, "arkouda.numpy.cos", false]], "cos() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.cos", false]], "cosh() (in module arkouda)": [[25, "arkouda.cosh", false]], "cosh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.cosh", false]], "cosh() (in module arkouda.numpy)": [[39, "arkouda.numpy.cosh", false]], "cosh() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.cosh", false]], "count() (arkouda.arkouda_supported_bools method)": [[25, "arkouda.ARKOUDA_SUPPORTED_BOOLS.count", false]], "count() (arkouda.arkouda_supported_dtypes method)": [[25, "arkouda.ARKOUDA_SUPPORTED_DTYPES.count", false]], "count() (arkouda.arkouda_supported_floats method)": [[25, "arkouda.ARKOUDA_SUPPORTED_FLOATS.count", false]], "count() (arkouda.arkouda_supported_ints method)": [[25, "arkouda.ARKOUDA_SUPPORTED_INTS.count", false]], "count() (arkouda.arkouda_supported_numbers method)": [[25, "arkouda.ARKOUDA_SUPPORTED_NUMBERS.count", false]], "count() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.count", false], [25, "id13", false]], "count() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.count", false]], "count() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.count", false]], "count() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.count", false]], "count() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.count", false]], "count() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.count", false]], "count() (arkouda.groupby method)": [[25, "arkouda.GroupBy.count", false], [25, "id144", false], [25, "id191", false], [25, "id238", false], [25, "id285", false], [104, "arkouda.GroupBy.count", false]], "count() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.count", false]], "count() (arkouda.numpy.arkouda_supported_bools method)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_BOOLS.count", false]], "count() (arkouda.numpy.arkouda_supported_dtypes method)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.count", false]], "count() (arkouda.numpy.arkouda_supported_floats method)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_FLOATS.count", false]], "count() (arkouda.numpy.arkouda_supported_ints method)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_INTS.count", false]], "count() (arkouda.numpy.arkouda_supported_numbers method)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_NUMBERS.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_bools method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_BOOLS.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_floats method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_ints method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_numbers method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS.count", false]], "count() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.count", false]], "count_nonzero() (in module arkouda)": [[25, "arkouda.count_nonzero", false]], "count_nonzero() (in module arkouda.numpy)": [[39, "arkouda.numpy.count_nonzero", false]], "count_nonzero() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.count_nonzero", false]], "counts (arkouda.array_api.set_functions.uniqueallresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueAllResult.counts", false]], "counts (arkouda.array_api.set_functions.uniquecountsresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueCountsResult.counts", false]], "cov() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.cov", false], [39, "id138", false], [39, "id207", false]], "cov() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.cov", false]], "cov() (arkouda.pdarray method)": [[25, "arkouda.pdarray.cov", false], [25, "id562", false], [25, "id631", false]], "cov() (in module arkouda)": [[25, "arkouda.cov", false]], "cov() (in module arkouda.numpy)": [[39, "arkouda.numpy.cov", false]], "cov() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.cov", false]], "create_pdarray() (in module arkouda)": [[25, "arkouda.create_pdarray", false], [25, "id519", false], [25, "id520", false]], "create_pdarray() (in module arkouda.numpy)": [[39, "arkouda.numpy.create_pdarray", false], [39, "id94", false]], "critical (arkouda.logger.loglevel attribute)": [[31, "arkouda.logger.LogLevel.CRITICAL", false]], "critical (arkouda.loglevel attribute)": [[25, "arkouda.LogLevel.CRITICAL", false]], "ctz() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.ctz", false], [39, "id139", false], [39, "id208", false]], "ctz() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.ctz", false]], "ctz() (arkouda.pdarray method)": [[25, "arkouda.pdarray.ctz", false], [25, "id563", false], [25, "id632", false]], "ctz() (in module arkouda)": [[25, "arkouda.ctz", false]], "ctz() (in module arkouda.numpy)": [[39, "arkouda.numpy.ctz", false]], "ctz() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.ctz", false]], "cumprod() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.cumprod", false]], "cumprod() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.cumprod", false], [39, "id272", false]], "cumprod() (arkouda.str_ method)": [[25, "arkouda.str_.cumprod", false]], "cumprod() (in module arkouda)": [[25, "arkouda.cumprod", false], [100, "arkouda.cumprod", false]], "cumprod() (in module arkouda.numpy)": [[39, "arkouda.numpy.cumprod", false]], "cumprod() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.cumprod", false]], "cumsum() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.cumsum", false]], "cumsum() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.cumsum", false], [39, "id273", false]], "cumsum() (arkouda.str_ method)": [[25, "arkouda.str_.cumsum", false]], "cumsum() (in module arkouda)": [[25, "arkouda.cumsum", false], [100, "arkouda.cumsum", false]], "cumsum() (in module arkouda.numpy)": [[39, "arkouda.numpy.cumsum", false]], "cumsum() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.cumsum", false]], "cumulative_sum() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.cumulative_sum", false]], "data() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.data", false]], "data() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.data", false], [39, "id274", false]], "data() (arkouda.str_ method)": [[25, "arkouda.str_.data", false]], "dataframe (class in arkouda)": [[25, "arkouda.DataFrame", false], [25, "id0", false], [103, "arkouda.DataFrame", false]], "dataframe (class in arkouda.dataframe)": [[22, "arkouda.dataframe.DataFrame", false]], "dataframegroupby (class in arkouda)": [[25, "arkouda.DataFrameGroupBy", false]], "dataframegroupby (class in arkouda.dataframe)": [[22, "arkouda.dataframe.DataFrameGroupBy", false]], "date (arkouda.datetime property)": [[25, "arkouda.Datetime.date", false], [25, "id57", false], [25, "id90", false]], "date (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.date", false]], "date (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.date", false]], "date_operators() (in module arkouda)": [[25, "arkouda.date_operators", false]], "date_operators() (in module arkouda.accessor)": [[2, "arkouda.accessor.date_operators", false]], "date_range() (in module arkouda)": [[25, "arkouda.date_range", false], [25, "id521", false]], "date_range() (in module arkouda.numpy)": [[39, "arkouda.numpy.date_range", false]], "date_range() (in module arkouda.numpy.timeclass)": [[56, "arkouda.numpy.timeclass.date_range", false]], "datetime (class in arkouda)": [[25, "arkouda.Datetime", false], [25, "id56", false], [25, "id89", false]], "datetime (class in arkouda.numpy)": [[39, "arkouda.numpy.Datetime", false]], "datetime (class in arkouda.numpy.timeclass)": [[56, "arkouda.numpy.timeclass.Datetime", false]], "datetime64dtype (class in arkouda)": [[25, "arkouda.DateTime64DType", false]], "datetime64dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.DateTime64DType", false]], "datetime64dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.DateTime64DType", false]], "datetimeaccessor (class in arkouda)": [[25, "arkouda.DatetimeAccessor", false]], "datetimeaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.DatetimeAccessor", false]], "day (arkouda.datetime property)": [[25, "arkouda.Datetime.day", false], [25, "id58", false], [25, "id91", false]], "day (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.day", false]], "day (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.day", false]], "day_of_week (arkouda.datetime property)": [[25, "arkouda.Datetime.day_of_week", false], [25, "id59", false], [25, "id92", false]], "day_of_week (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.day_of_week", false]], "day_of_week (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.day_of_week", false]], "day_of_year (arkouda.datetime property)": [[25, "arkouda.Datetime.day_of_year", false], [25, "id60", false], [25, "id93", false]], "day_of_year (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.day_of_year", false]], "day_of_year (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.day_of_year", false]], "dayofweek (arkouda.datetime property)": [[25, "arkouda.Datetime.dayofweek", false], [25, "id61", false], [25, "id94", false]], "dayofweek (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.dayofweek", false]], "dayofweek (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.dayofweek", false]], "dayofyear (arkouda.datetime property)": [[25, "arkouda.Datetime.dayofyear", false], [25, "id62", false], [25, "id95", false]], "dayofyear (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.dayofyear", false]], "dayofyear (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.dayofyear", false]], "days (arkouda.numpy.timeclass.timedelta property)": [[56, "arkouda.numpy.timeclass.Timedelta.days", false]], "days (arkouda.numpy.timedelta property)": [[39, "arkouda.numpy.Timedelta.days", false]], "days (arkouda.timedelta property)": [[25, "arkouda.Timedelta.days", false], [25, "id483", false]], "debug (arkouda.logger.loglevel attribute)": [[31, "arkouda.logger.LogLevel.DEBUG", false]], "debug (arkouda.loglevel attribute)": [[25, "arkouda.LogLevel.DEBUG", false]], "decode() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.decode", false], [39, "id26", false]], "decode() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.decode", false]], "decode() (arkouda.strings method)": [[25, "arkouda.Strings.decode", false], [25, "id338", false], [25, "id416", false]], "deg2rad() (in module arkouda)": [[25, "arkouda.deg2rad", false]], "deg2rad() (in module arkouda.numpy)": [[39, "arkouda.numpy.deg2rad", false]], "deg2rad() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.deg2rad", false]], "delete() (in module arkouda)": [[25, "arkouda.delete", false]], "delete() (in module arkouda.numpy)": [[39, "arkouda.numpy.delete", false]], "delete() (in module arkouda.numpy.pdarraymanipulation)": [[48, "arkouda.numpy.pdarraymanipulation.delete", false]], "delete_directory() (in module arkouda.io_util)": [[29, "arkouda.io_util.delete_directory", false]], "delimited_file_to_dict() (in module arkouda.io_util)": [[29, "arkouda.io_util.delimited_file_to_dict", false]], "device (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.device", false]], "device (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.device", false]], "df (arkouda.dataframe.dataframegroupby attribute)": [[22, "arkouda.dataframe.DataFrameGroupBy.df", false]], "df (arkouda.dataframegroupby attribute)": [[25, "arkouda.DataFrameGroupBy.df", false]], "diagonal() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.diagonal", false]], "diagonal() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.diagonal", false], [39, "id275", false]], "diagonal() (arkouda.str_ method)": [[25, "arkouda.str_.diagonal", false]], "dict_to_delimited_file() (in module arkouda.io_util)": [[29, "arkouda.io_util.dict_to_delimited_file", false]], "diff() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.diff", false]], "diff() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.diff", false]], "diff() (arkouda.series method)": [[25, "arkouda.Series.diff", false]], "diff() (arkouda.series.series method)": [[65, "arkouda.series.Series.diff", false]], "diff() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.diff", false]], "diffaggregate (class in arkouda)": [[25, "arkouda.DiffAggregate", false]], "diffaggregate (class in arkouda.dataframe)": [[22, "arkouda.dataframe.DiffAggregate", false]], "difference() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.difference", false]], "difference() (arkouda.dtypes method)": [[25, "arkouda.DTypes.difference", false]], "difference() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.difference", false]], "difference() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.difference", false]], "difference() (arkouda.inttypes method)": [[25, "arkouda.intTypes.difference", false], [25, "id526", false]], "difference() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.difference", false]], "difference() (arkouda.numpy.dtypeobjects method)": [[39, "arkouda.numpy.DTypeObjects.difference", false]], "difference() (arkouda.numpy.dtypes method)": [[39, "arkouda.numpy.DTypes.difference", false]], "difference() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.difference", false]], "difference() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.difference", false]], "difference() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.difference", false]], "difference() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.difference", false]], "difference() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.difference", false]], "difference() (arkouda.numpy.inttypes method)": [[39, "arkouda.numpy.intTypes.difference", false], [39, "id100", false]], "difference() (arkouda.numpy.numericdtypes method)": [[39, "arkouda.numpy.NumericDTypes.difference", false]], "difference() (arkouda.numpy.scalardtypes method)": [[39, "arkouda.numpy.ScalarDTypes.difference", false]], "difference() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.difference", false]], "disableverbose() (in module arkouda)": [[25, "arkouda.disableVerbose", false]], "disableverbose() (in module arkouda.logger)": [[31, "arkouda.logger.disableVerbose", false]], "disconnect() (in module arkouda.client)": [[19, "arkouda.client.disconnect", false]], "divide() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.divide", false]], "divmod() (in module arkouda)": [[25, "arkouda.divmod", false]], "divmod() (in module arkouda.numpy)": [[39, "arkouda.numpy.divmod", false]], "divmod() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.divmod", false]], "dot() (in module arkouda)": [[25, "arkouda.dot", false]], "dot() (in module arkouda.numpy)": [[39, "arkouda.numpy.dot", false]], "dot() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.dot", false]], "drop() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.drop", false], [25, "id14", false]], "drop() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.drop", false]], "drop() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.drop", false]], "drop_duplicates() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.drop_duplicates", false], [25, "id15", false]], "drop_duplicates() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.drop_duplicates", false]], "drop_duplicates() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.drop_duplicates", false]], "dropna (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.dropna", false], [25, "id131", false], [25, "id178", false], [25, "id225", false], [25, "id272", false], [104, "arkouda.GroupBy.dropna", false]], "dropna (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.dropna", false]], "dropna (arkouda.numpy.groupby attribute)": [[39, "arkouda.numpy.GroupBy.dropna", false]], "dropna() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.dropna", false], [25, "id16", false]], "dropna() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.dropna", false]], "dt() (arkouda.series method)": [[25, "arkouda.Series.dt", false]], "dt() (arkouda.series.series method)": [[65, "arkouda.series.Series.dt", false]], "dtype (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.dtype", false]], "dtype (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.dtype", false]], "dtype (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.dtype", false]], "dtype (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.iinfo_object.dtype", false]], "dtype (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.dtype", false]], "dtype (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.dtype", false]], "dtype (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.dtype", false]], "dtype (arkouda.numpy.pdarray attribute)": [[39, "arkouda.numpy.pdarray.dtype", false], [39, "id112", false], [39, "id120", false], [39, "id140", false], [39, "id189", false], [39, "id209", false]], "dtype (arkouda.numpy.pdarrayclass.pdarray attribute)": [[46, "arkouda.numpy.pdarrayclass.pdarray.dtype", false], [46, "id0", false]], "dtype (arkouda.numpy.segarray attribute)": [[39, "arkouda.numpy.SegArray.dtype", false]], "dtype (arkouda.numpy.segarray.segarray attribute)": [[53, "arkouda.numpy.segarray.SegArray.dtype", false]], "dtype (arkouda.numpy.strings attribute)": [[39, "arkouda.numpy.Strings.dtype", false], [39, "id18", false], [39, "id27", false], [39, "id7", false]], "dtype (arkouda.numpy.strings.strings attribute)": [[55, "arkouda.numpy.strings.Strings.dtype", false], [55, "id0", false]], "dtype (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.dtype", false], [25, "id536", false], [25, "id544", false], [25, "id564", false], [25, "id613", false], [25, "id633", false], [107, "arkouda.pdarray.dtype", false]], "dtype (arkouda.segarray attribute)": [[25, "arkouda.SegArray.dtype", false]], "dtype (arkouda.series property)": [[25, "arkouda.Series.dtype", false]], "dtype (arkouda.series.series property)": [[65, "arkouda.series.Series.dtype", false]], "dtype (arkouda.strings attribute)": [[25, "arkouda.Strings.dtype", false], [25, "id319", false], [25, "id330", false], [25, "id339", false], [25, "id408", false], [25, "id417", false]], "dtype (class in arkouda)": [[25, "arkouda.DType", false]], "dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.DType", false]], "dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.DType", false]], "dtype() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.dtype", false]], "dtype() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.dtype", false], [39, "id276", false]], "dtype() (arkouda.str_ method)": [[25, "arkouda.str_.dtype", false]], "dtype() (in module arkouda)": [[25, "arkouda.dtype", false]], "dtype() (in module arkouda.numpy)": [[39, "arkouda.numpy.dtype", false]], "dtype() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.dtype", false]], "dtypeobjects (class in arkouda)": [[25, "arkouda.DTypeObjects", false]], "dtypeobjects (class in arkouda.numpy)": [[39, "arkouda.numpy.DTypeObjects", false]], "dtypeobjects (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.DTypeObjects", false]], "dtypes (arkouda.dataframe property)": [[25, "arkouda.DataFrame.dtypes", false], [25, "id17", false]], "dtypes (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.dtypes", false]], "dtypes (class in arkouda)": [[25, "arkouda.DTypes", false]], "dtypes (class in arkouda.numpy)": [[39, "arkouda.numpy.DTypes", false]], "dtypes (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.DTypes", false]], "dump() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.dump", false]], "dump() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.dump", false], [39, "id277", false]], "dump() (arkouda.str_ method)": [[25, "arkouda.str_.dump", false]], "dumps() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.dumps", false]], "dumps() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.dumps", false], [39, "id278", false]], "dumps() (arkouda.str_ method)": [[25, "arkouda.str_.dumps", false]], "empty (arkouda.dataframe property)": [[25, "arkouda.DataFrame.empty", false], [25, "id18", false]], "empty (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.empty", false]], "empty() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.empty", false]], "empty_like() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.empty_like", false]], "enableverbose() (in module arkouda)": [[25, "arkouda.enableVerbose", false]], "enableverbose() (in module arkouda.logger)": [[31, "arkouda.logger.enableVerbose", false]], "encode() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.encode", false], [39, "id28", false]], "encode() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.encode", false]], "encode() (arkouda.strings method)": [[25, "arkouda.Strings.encode", false], [25, "id340", false], [25, "id418", false]], "end() (arkouda.match.match method)": [[32, "arkouda.match.Match.end", false], [113, "arkouda.match.Match.end", false]], "endswith() (arkouda.categorical method)": [[101, "arkouda.Categorical.endswith", false]], "endswith() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.endswith", false]], "endswith() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.endswith", false], [39, "id29", false]], "endswith() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.endswith", false]], "endswith() (arkouda.strings method)": [[25, "arkouda.Strings.endswith", false], [25, "id341", false], [25, "id419", false]], "enrich_inplace() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.enrich_inplace", false]], "entry (arkouda.numpy.strings attribute)": [[39, "arkouda.numpy.Strings.entry", false], [39, "id13", false], [39, "id30", false], [39, "id8", false]], "entry (arkouda.numpy.strings.strings attribute)": [[55, "arkouda.numpy.strings.Strings.entry", false], [55, "id1", false]], "entry (arkouda.strings attribute)": [[25, "arkouda.Strings.entry", false], [25, "id320", false], [25, "id325", false], [25, "id342", false], [25, "id403", false], [25, "id420", false]], "enum (class in arkouda)": [[25, "arkouda.Enum", false]], "enum (class in arkouda.numpy)": [[39, "arkouda.numpy.Enum", false]], "enum (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.Enum", false]], "eps (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.eps", false]], "equal() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.equal", false]], "equal_levels() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.equal_levels", false]], "equal_levels() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.equal_levels", false]], "equals() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.equals", false]], "equals() (arkouda.index method)": [[25, "arkouda.Index.equals", false]], "equals() (arkouda.index.index method)": [[26, "arkouda.index.Index.equals", false]], "equals() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.equals", false], [39, "id141", false], [39, "id210", false]], "equals() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.equals", false]], "equals() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.equals", false], [39, "id31", false]], "equals() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.equals", false]], "equals() (arkouda.pdarray method)": [[25, "arkouda.pdarray.equals", false], [25, "id565", false], [25, "id634", false]], "equals() (arkouda.strings method)": [[25, "arkouda.Strings.equals", false], [25, "id343", false], [25, "id421", false]], "error (arkouda.logger.loglevel attribute)": [[31, "arkouda.logger.LogLevel.ERROR", false]], "error (arkouda.loglevel attribute)": [[25, "arkouda.LogLevel.ERROR", false]], "errormode (class in arkouda)": [[25, "arkouda.ErrorMode", false]], "errormode (class in arkouda.numpy)": [[39, "arkouda.numpy.ErrorMode", false]], "errormode (class in arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.ErrorMode", false]], "exp() (in module arkouda)": [[25, "arkouda.exp", false], [100, "arkouda.exp", false]], "exp() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.exp", false]], "exp() (in module arkouda.numpy)": [[39, "arkouda.numpy.exp", false]], "exp() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.exp", false]], "expand() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.expand", false]], "expand_dims() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.expand_dims", false]], "expm1() (in module arkouda)": [[25, "arkouda.expm1", false]], "expm1() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.expm1", false]], "expm1() (in module arkouda.numpy)": [[39, "arkouda.numpy.expm1", false]], "expm1() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.expm1", false]], "exponential() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.exponential", false]], "exponential() (in module arkouda.random.generator)": [[108, "arkouda.random.Generator.exponential", false]], "export() (in module arkouda)": [[25, "arkouda.export", false], [97, "arkouda.export", false]], "export() (in module arkouda.io)": [[28, "arkouda.io.export", false]], "export_uint() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.export_uint", false]], "export_uint() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.export_uint", false]], "eye() (in module arkouda)": [[25, "arkouda.eye", false]], "eye() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.eye", false]], "eye() (in module arkouda.numpy)": [[39, "arkouda.numpy.eye", false]], "eye() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.eye", false]], "factory() (arkouda.index static method)": [[25, "arkouda.Index.factory", false]], "factory() (arkouda.index.index static method)": [[26, "arkouda.index.Index.factory", false]], "fields (class in arkouda)": [[25, "arkouda.Fields", false]], "fields (class in arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.Fields", false]], "fill() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.fill", false]], "fill() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.fill", false], [39, "id142", false], [39, "id211", false]], "fill() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.fill", false]], "fill() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.fill", false], [39, "id279", false]], "fill() (arkouda.pdarray method)": [[25, "arkouda.pdarray.fill", false], [25, "id566", false], [25, "id635", false]], "fill() (arkouda.str_ method)": [[25, "arkouda.str_.fill", false]], "fillna() (arkouda.series method)": [[25, "arkouda.Series.fillna", false]], "fillna() (arkouda.series.series method)": [[65, "arkouda.series.Series.fillna", false]], "filter() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.filter", false]], "filter() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.filter", false]], "filter() (arkouda.segarray method)": [[25, "arkouda.SegArray.filter", false]], "filter_by_range() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.filter_by_range", false], [25, "id19", false]], "filter_by_range() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.filter_by_range", false]], "find() (in module arkouda.alignment)": [[3, "arkouda.alignment.find", false]], "find_locations() (arkouda.matcher.matcher method)": [[33, "arkouda.matcher.Matcher.find_locations", false]], "find_locations() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.find_locations", false], [39, "id32", false]], "find_locations() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.find_locations", false]], "find_locations() (arkouda.strings method)": [[25, "arkouda.Strings.find_locations", false], [25, "id344", false], [25, "id422", false]], "find_matches() (arkouda.match.match method)": [[32, "arkouda.match.Match.find_matches", false], [113, "arkouda.match.Match.find_matches", false]], "findall() (arkouda.matcher.matcher method)": [[33, "arkouda.matcher.Matcher.findall", false]], "findall() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.findall", false], [39, "id33", false]], "findall() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.findall", false]], "findall() (arkouda.strings method)": [[25, "arkouda.Strings.findall", false], [25, "id345", false], [25, "id423", false]], "finfo() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.finfo", false]], "finfo_object (class in arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.finfo_object", false]], "first() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.first", false]], "first() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.first", false]], "first() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.first", false]], "first() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.first", false]], "first() (arkouda.groupby method)": [[25, "arkouda.GroupBy.first", false], [25, "id145", false], [25, "id192", false], [25, "id239", false], [25, "id286", false], [104, "arkouda.GroupBy.first", false]], "first() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.first", false]], "first() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.first", false]], "flags() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.flags", false]], "flags() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.flags", false], [39, "id280", false]], "flags() (arkouda.str_ method)": [[25, "arkouda.str_.flags", false]], "flat() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.flat", false]], "flat() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.flat", false], [39, "id281", false]], "flat() (arkouda.str_ method)": [[25, "arkouda.str_.flat", false]], "flatten() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.flatten", false]], "flatten() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.flatten", false], [39, "id143", false], [39, "id212", false]], "flatten() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.flatten", false]], "flatten() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.flatten", false], [39, "id282", false]], "flatten() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.flatten", false], [39, "id34", false]], "flatten() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.flatten", false]], "flatten() (arkouda.pdarray method)": [[25, "arkouda.pdarray.flatten", false], [25, "id567", false], [25, "id636", false]], "flatten() (arkouda.str_ method)": [[25, "arkouda.str_.flatten", false]], "flatten() (arkouda.strings method)": [[25, "arkouda.Strings.flatten", false], [25, "id346", false], [25, "id424", false]], "flip() (in module arkouda)": [[25, "arkouda.flip", false]], "flip() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.flip", false]], "flip() (in module arkouda.numpy)": [[39, "arkouda.numpy.flip", false]], "flip() (in module arkouda.numpy.manipulation_functions)": [[44, "arkouda.numpy.manipulation_functions.flip", false]], "float() (arkouda.dtype method)": [[25, "arkouda.DType.FLOAT", false]], "float() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.FLOAT", false]], "float() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.FLOAT", false]], "float16 (class in arkouda)": [[25, "arkouda.float16", false]], "float16 (class in arkouda.numpy)": [[39, "arkouda.numpy.float16", false]], "float16 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.float16", false]], "float16dtype (class in arkouda)": [[25, "arkouda.Float16DType", false]], "float16dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.Float16DType", false]], "float16dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.Float16DType", false]], "float32 (class in arkouda)": [[25, "arkouda.float32", false]], "float32 (class in arkouda.numpy)": [[39, "arkouda.numpy.float32", false]], "float32 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.float32", false]], "float32() (arkouda.dtype method)": [[25, "arkouda.DType.FLOAT32", false]], "float32() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.FLOAT32", false]], "float32() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.FLOAT32", false]], "float32dtype (class in arkouda)": [[25, "arkouda.Float32DType", false]], "float32dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.Float32DType", false]], "float32dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.Float32DType", false]], "float64 (class in arkouda)": [[25, "arkouda.float64", false]], "float64 (class in arkouda.numpy)": [[39, "arkouda.numpy.float64", false]], "float64 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.float64", false]], "float64() (arkouda.dtype method)": [[25, "arkouda.DType.FLOAT64", false]], "float64() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.FLOAT64", false]], "float64() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.FLOAT64", false]], "float64dtype (class in arkouda)": [[25, "arkouda.Float64DType", false]], "float64dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.Float64DType", false]], "float64dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.Float64DType", false]], "float_scalars (class in arkouda)": [[25, "arkouda.float_scalars", false]], "float_scalars (class in arkouda.numpy)": [[39, "arkouda.numpy.float_scalars", false]], "float_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.float_scalars", false]], "floor() (in module arkouda)": [[25, "arkouda.floor", false]], "floor() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.floor", false]], "floor() (in module arkouda.numpy)": [[39, "arkouda.numpy.floor", false]], "floor() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.floor", false]], "floor_divide() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.floor_divide", false]], "fmod() (in module arkouda)": [[25, "arkouda.fmod", false]], "fmod() (in module arkouda.numpy)": [[39, "arkouda.numpy.fmod", false]], "fmod() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.fmod", false]], "format() (arkouda.bitvector method)": [[25, "arkouda.BitVector.format", false]], "format() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.format", false]], "format() (arkouda.client_dtypes.fields method)": [[20, "arkouda.client_dtypes.Fields.format", false]], "format() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.format", false]], "format() (arkouda.fields method)": [[25, "arkouda.Fields.format", false]], "format() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.format", false]], "format_other() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.format_other", false], [39, "id144", false], [39, "id213", false]], "format_other() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.format_other", false]], "format_other() (arkouda.pdarray method)": [[25, "arkouda.pdarray.format_other", false], [25, "id568", false], [25, "id637", false]], "from_codes() (arkouda.categorical class method)": [[101, "arkouda.Categorical.from_codes", false]], "from_codes() (arkouda.categorical.categorical class method)": [[18, "arkouda.categorical.Categorical.from_codes", false]], "from_dlpack() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.from_dlpack", false]], "from_multi_array() (arkouda.numpy.segarray class method)": [[39, "arkouda.numpy.SegArray.from_multi_array", false]], "from_multi_array() (arkouda.numpy.segarray.segarray class method)": [[53, "arkouda.numpy.segarray.SegArray.from_multi_array", false]], "from_multi_array() (arkouda.segarray class method)": [[25, "arkouda.SegArray.from_multi_array", false]], "from_pandas() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.from_pandas", false], [25, "id20", false]], "from_pandas() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.from_pandas", false]], "from_parts() (arkouda.numpy.segarray class method)": [[39, "arkouda.numpy.SegArray.from_parts", false]], "from_parts() (arkouda.numpy.segarray.segarray class method)": [[53, "arkouda.numpy.segarray.SegArray.from_parts", false]], "from_parts() (arkouda.numpy.strings static method)": [[39, "arkouda.numpy.Strings.from_parts", false], [39, "id35", false]], "from_parts() (arkouda.numpy.strings.strings static method)": [[55, "arkouda.numpy.strings.Strings.from_parts", false]], "from_parts() (arkouda.segarray class method)": [[25, "arkouda.SegArray.from_parts", false]], "from_parts() (arkouda.strings static method)": [[25, "arkouda.Strings.from_parts", false], [25, "id347", false], [25, "id425", false]], "from_return_msg() (arkouda.bitvector class method)": [[25, "arkouda.BitVector.from_return_msg", false]], "from_return_msg() (arkouda.categorical.categorical class method)": [[18, "arkouda.categorical.Categorical.from_return_msg", false]], "from_return_msg() (arkouda.client_dtypes.bitvector class method)": [[20, "arkouda.client_dtypes.BitVector.from_return_msg", false]], "from_return_msg() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.from_return_msg", false], [25, "id21", false]], "from_return_msg() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.from_return_msg", false]], "from_return_msg() (arkouda.groupby method)": [[25, "arkouda.GroupBy.from_return_msg", false], [25, "id146", false], [25, "id193", false], [25, "id240", false], [25, "id287", false]], "from_return_msg() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.from_return_msg", false]], "from_return_msg() (arkouda.index class method)": [[25, "arkouda.Index.from_return_msg", false]], "from_return_msg() (arkouda.index.index class method)": [[26, "arkouda.index.Index.from_return_msg", false]], "from_return_msg() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.from_return_msg", false]], "from_return_msg() (arkouda.numpy.segarray class method)": [[39, "arkouda.numpy.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.numpy.segarray.segarray class method)": [[53, "arkouda.numpy.segarray.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.numpy.strings static method)": [[39, "arkouda.numpy.Strings.from_return_msg", false], [39, "id36", false]], "from_return_msg() (arkouda.numpy.strings.strings static method)": [[55, "arkouda.numpy.strings.Strings.from_return_msg", false]], "from_return_msg() (arkouda.segarray class method)": [[25, "arkouda.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.series method)": [[25, "arkouda.Series.from_return_msg", false]], "from_return_msg() (arkouda.series.series method)": [[65, "arkouda.series.Series.from_return_msg", false]], "from_return_msg() (arkouda.strings static method)": [[25, "arkouda.Strings.from_return_msg", false], [25, "id348", false], [25, "id426", false]], "from_series() (in module arkouda)": [[25, "arkouda.from_series", false]], "from_series() (in module arkouda.numpy)": [[39, "arkouda.numpy.from_series", false], [39, "id95", false]], "from_series() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.from_series", false]], "fromhex() (arkouda.akfloat64 method)": [[25, "arkouda.akfloat64.fromhex", false]], "fromhex() (arkouda.float64 method)": [[25, "arkouda.float64.fromhex", false]], "fromhex() (arkouda.numpy.dtypes.float64 method)": [[36, "arkouda.numpy.dtypes.float64.fromhex", false]], "fromhex() (arkouda.numpy.float64 method)": [[39, "arkouda.numpy.float64.fromhex", false]], "fromkeys() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.fromkeys", false]], "fromkeys() (arkouda.numpy.number_format_strings method)": [[39, "arkouda.numpy.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.numpy.seriesdtypes method)": [[39, "arkouda.numpy.SeriesDTypes.fromkeys", false]], "fromkeys() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.fromkeys", false]], "full() (in module arkouda)": [[25, "arkouda.full", false]], "full() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.full", false]], "full() (in module arkouda.numpy)": [[39, "arkouda.numpy.full", false]], "full() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.full", false]], "full_like() (in module arkouda)": [[25, "arkouda.full_like", false]], "full_like() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.full_like", false]], "full_like() (in module arkouda.numpy)": [[39, "arkouda.numpy.full_like", false]], "full_like() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.full_like", false]], "full_match_bool (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.full_match_bool", false]], "full_match_ind (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.full_match_ind", false]], "fullmatch() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.fullmatch", false], [39, "id37", false]], "fullmatch() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.fullmatch", false]], "fullmatch() (arkouda.strings method)": [[25, "arkouda.Strings.fullmatch", false], [25, "id349", false], [25, "id427", false]], "gb (arkouda.dataframe.dataframegroupby attribute)": [[22, "arkouda.dataframe.DataFrameGroupBy.gb", false]], "gb (arkouda.dataframe.diffaggregate attribute)": [[22, "arkouda.dataframe.DiffAggregate.gb", false]], "gb (arkouda.dataframegroupby attribute)": [[25, "arkouda.DataFrameGroupBy.gb", false]], "gb (arkouda.diffaggregate attribute)": [[25, "arkouda.DiffAggregate.gb", false]], "gb_key_names (arkouda.dataframe.dataframegroupby attribute)": [[22, "arkouda.dataframe.DataFrameGroupBy.gb_key_names", false]], "gb_key_names (arkouda.dataframegroupby attribute)": [[25, "arkouda.DataFrameGroupBy.gb_key_names", false]], "gen_ranges() (in module arkouda.join)": [[30, "arkouda.join.gen_ranges", false]], "generate_history() (in module arkouda.client)": [[19, "arkouda.client.generate_history", false]], "generate_token() (in module arkouda.security)": [[64, "arkouda.security.generate_token", false]], "generate_username_token_json() (in module arkouda.security)": [[64, "arkouda.security.generate_username_token_json", false]], "generator (class in arkouda.numpy.random)": [[51, "arkouda.numpy.random.Generator", false]], "generator (class in arkouda.random)": [[108, "arkouda.random.Generator", false]], "generic_concat() (in module arkouda)": [[25, "arkouda.generic_concat", false]], "generic_concat() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.generic_concat", false]], "generic_moment() (arkouda.scipy.stats.chi2 method)": [[63, "arkouda.scipy.stats.chi2.generic_moment", false]], "get() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.get", false]], "get() (arkouda.numpy.number_format_strings method)": [[39, "arkouda.numpy.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.numpy.seriesdtypes method)": [[39, "arkouda.numpy.SeriesDTypes.get", false]], "get() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.get", false]], "get_arkouda_client_directory() (in module arkouda.security)": [[64, "arkouda.security.get_arkouda_client_directory", false]], "get_byteorder() (in module arkouda)": [[25, "arkouda.get_byteorder", false]], "get_byteorder() (in module arkouda.numpy)": [[39, "arkouda.numpy.get_byteorder", false]], "get_byteorder() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.get_byteorder", false]], "get_bytes() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.get_bytes", false], [39, "id38", false]], "get_bytes() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.get_bytes", false]], "get_bytes() (arkouda.strings method)": [[25, "arkouda.Strings.get_bytes", false], [25, "id350", false], [25, "id428", false]], "get_callback() (in module arkouda)": [[25, "arkouda.get_callback", false]], "get_callback() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.get_callback", false]], "get_columns() (in module arkouda)": [[25, "arkouda.get_columns", false]], "get_columns() (in module arkouda.io)": [[28, "arkouda.io.get_columns", false]], "get_comm_diagnostics() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics", false]], "get_comm_diagnostics_amo() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_amo", false]], "get_comm_diagnostics_cache_get_hits() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_get_hits", false]], "get_comm_diagnostics_cache_get_misses() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_get_misses", false]], "get_comm_diagnostics_cache_num_page_readaheads() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_num_page_readaheads", false]], "get_comm_diagnostics_cache_num_prefetches() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_num_prefetches", false]], "get_comm_diagnostics_cache_prefetch_unused() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_prefetch_unused", false]], "get_comm_diagnostics_cache_prefetch_waited() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_prefetch_waited", false]], "get_comm_diagnostics_cache_put_hits() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_put_hits", false]], "get_comm_diagnostics_cache_put_misses() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_put_misses", false]], "get_comm_diagnostics_cache_readahead_unused() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_readahead_unused", false]], "get_comm_diagnostics_cache_readahead_waited() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_readahead_waited", false]], "get_comm_diagnostics_execute_on() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_execute_on", false]], "get_comm_diagnostics_execute_on_fast() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_execute_on_fast", false]], "get_comm_diagnostics_execute_on_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_execute_on_nb", false]], "get_comm_diagnostics_get() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_get", false]], "get_comm_diagnostics_get_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_get_nb", false]], "get_comm_diagnostics_put() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_put", false]], "get_comm_diagnostics_put_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_put_nb", false]], "get_comm_diagnostics_try_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_try_nb", false]], "get_comm_diagnostics_wait_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_wait_nb", false]], "get_config() (in module arkouda.client)": [[19, "arkouda.client.get_config", false]], "get_datasets() (in module arkouda)": [[25, "arkouda.get_datasets", false], [97, "arkouda.get_datasets", false]], "get_datasets() (in module arkouda.io)": [[28, "arkouda.io.get_datasets", false]], "get_directory() (in module arkouda.io_util)": [[29, "arkouda.io_util.get_directory", false]], "get_filetype() (in module arkouda)": [[25, "arkouda.get_filetype", false]], "get_filetype() (in module arkouda.io)": [[28, "arkouda.io.get_filetype", false]], "get_home_directory() (in module arkouda.security)": [[64, "arkouda.security.get_home_directory", false]], "get_jth() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.get_jth", false]], "get_jth() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.get_jth", false]], "get_jth() (arkouda.segarray method)": [[25, "arkouda.SegArray.get_jth", false]], "get_length_n() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.get_length_n", false]], "get_length_n() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.get_length_n", false]], "get_length_n() (arkouda.segarray method)": [[25, "arkouda.SegArray.get_length_n", false]], "get_lengths() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.get_lengths", false], [39, "id39", false]], "get_lengths() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.get_lengths", false]], "get_lengths() (arkouda.strings method)": [[25, "arkouda.Strings.get_lengths", false], [25, "id351", false], [25, "id429", false]], "get_level_values() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.get_level_values", false]], "get_level_values() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.get_level_values", false]], "get_match() (arkouda.matcher.matcher method)": [[33, "arkouda.matcher.Matcher.get_match", false]], "get_max_array_rank() (in module arkouda.client)": [[19, "arkouda.client.get_max_array_rank", false]], "get_mem_avail() (in module arkouda.client)": [[19, "arkouda.client.get_mem_avail", false]], "get_mem_status() (in module arkouda.client)": [[19, "arkouda.client.get_mem_status", false]], "get_mem_used() (in module arkouda.client)": [[19, "arkouda.client.get_mem_used", false]], "get_ngrams() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.get_ngrams", false]], "get_ngrams() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.get_ngrams", false]], "get_ngrams() (arkouda.segarray method)": [[25, "arkouda.SegArray.get_ngrams", false]], "get_null_indices() (in module arkouda)": [[25, "arkouda.get_null_indices", false]], "get_null_indices() (in module arkouda.io)": [[28, "arkouda.io.get_null_indices", false]], "get_offsets() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.get_offsets", false], [39, "id40", false]], "get_offsets() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.get_offsets", false]], "get_offsets() (arkouda.strings method)": [[25, "arkouda.Strings.get_offsets", false], [25, "id352", false], [25, "id430", false]], "get_prefixes() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.get_prefixes", false], [39, "id41", false]], "get_prefixes() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.get_prefixes", false]], "get_prefixes() (arkouda.segarray method)": [[25, "arkouda.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.strings method)": [[25, "arkouda.Strings.get_prefixes", false], [25, "id353", false], [25, "id431", false]], "get_server_byteorder() (in module arkouda)": [[25, "arkouda.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.numpy)": [[39, "arkouda.numpy.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.get_server_byteorder", false]], "get_server_commands() (in module arkouda.client)": [[19, "arkouda.client.get_server_commands", false]], "get_suffixes() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.get_suffixes", false], [39, "id42", false]], "get_suffixes() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.get_suffixes", false]], "get_suffixes() (arkouda.segarray method)": [[25, "arkouda.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.strings method)": [[25, "arkouda.Strings.get_suffixes", false], [25, "id354", false], [25, "id432", false]], "get_username() (in module arkouda.security)": [[64, "arkouda.security.get_username", false]], "getarkoudalogger() (in module arkouda)": [[25, "arkouda.getArkoudaLogger", false]], "getarkoudalogger() (in module arkouda.numpy)": [[39, "arkouda.numpy.getArkoudaLogger", false]], "getfield() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.getfield", false]], "getfield() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.getfield", false], [39, "id283", false]], "getfield() (arkouda.str_ method)": [[25, "arkouda.str_.getfield", false]], "getmandatoryrelease() (arkouda.annotations method)": [[25, "arkouda.annotations.getMandatoryRelease", false]], "getmandatoryrelease() (arkouda.numpy.annotations method)": [[39, "arkouda.numpy.annotations.getMandatoryRelease", false]], "getmandatoryrelease() (arkouda.numpy.dtypes.annotations method)": [[36, "arkouda.numpy.dtypes.annotations.getMandatoryRelease", false]], "getoptionalrelease() (arkouda.annotations method)": [[25, "arkouda.annotations.getOptionalRelease", false]], "getoptionalrelease() (arkouda.numpy.annotations method)": [[39, "arkouda.numpy.annotations.getOptionalRelease", false]], "getoptionalrelease() (arkouda.numpy.dtypes.annotations method)": [[36, "arkouda.numpy.dtypes.annotations.getOptionalRelease", false]], "greater() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.greater", false]], "greater_equal() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.greater_equal", false]], "group() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.group", false]], "group() (arkouda.match.match method)": [[32, "arkouda.match.Match.group", false], [113, "arkouda.match.Match.group", false]], "group() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.group", false], [39, "id43", false]], "group() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.group", false]], "group() (arkouda.strings method)": [[25, "arkouda.Strings.group", false], [25, "id355", false], [25, "id433", false]], "groupby (class in arkouda)": [[25, "arkouda.GroupBy", false], [25, "id123", false], [25, "id170", false], [25, "id217", false], [25, "id264", false], [104, "arkouda.GroupBy", false]], "groupby (class in arkouda.groupbyclass)": [[23, "arkouda.groupbyclass.GroupBy", false]], "groupby (class in arkouda.numpy)": [[39, "arkouda.numpy.GroupBy", false]], "groupby() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.GroupBy", false], [25, "id1", false], [25, "arkouda.DataFrame.groupby", false], [25, "id22", false]], "groupby() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.GroupBy", false], [22, "arkouda.dataframe.DataFrame.groupby", false]], "groupby() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.groupby", false]], "groupby_reduction_types (class in arkouda)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES", false]], "groupby_reduction_types (class in arkouda.groupbyclass)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES", false]], "grouping (arkouda.numpy.segarray property)": [[39, "arkouda.numpy.SegArray.grouping", false]], "grouping (arkouda.numpy.segarray.segarray property)": [[53, "arkouda.numpy.segarray.SegArray.grouping", false]], "grouping (arkouda.segarray property)": [[25, "arkouda.SegArray.grouping", false]], "handled_functions (in module arkouda.array_api.array_object)": [[5, "arkouda.array_api.array_object.HANDLED_FUNCTIONS", false]], "has_repeat_labels() (arkouda.series method)": [[25, "arkouda.Series.has_repeat_labels", false]], "has_repeat_labels() (arkouda.series.series method)": [[65, "arkouda.series.Series.has_repeat_labels", false]], "hash() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.hash", false]], "hash() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.hash", false]], "hash() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.hash", false]], "hash() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.hash", false], [39, "id44", false]], "hash() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.hash", false]], "hash() (arkouda.segarray method)": [[25, "arkouda.SegArray.hash", false]], "hash() (arkouda.strings method)": [[25, "arkouda.Strings.hash", false], [25, "id356", false], [25, "id434", false]], "hash() (in module arkouda)": [[25, "arkouda.hash", false]], "hash() (in module arkouda.numpy)": [[39, "arkouda.numpy.hash", false]], "hash() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.hash", false]], "hasnans() (arkouda.series method)": [[25, "arkouda.Series.hasnans", false]], "hasnans() (arkouda.series.series method)": [[65, "arkouda.series.Series.hasnans", false]], "head() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.head", false], [25, "id23", false]], "head() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.head", false]], "head() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.head", false]], "head() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.head", false]], "head() (arkouda.groupby method)": [[25, "arkouda.GroupBy.head", false], [25, "id147", false], [25, "id194", false], [25, "id241", false], [25, "id288", false], [104, "arkouda.GroupBy.head", false]], "head() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.head", false]], "head() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.head", false]], "head() (arkouda.series method)": [[25, "arkouda.Series.head", false]], "head() (arkouda.series.series method)": [[65, "arkouda.series.Series.head", false]], "head() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.head", false]], "head() (in module arkouda.series)": [[110, "arkouda.Series.head", false]], "hex() (arkouda.akfloat64 method)": [[25, "arkouda.akfloat64.hex", false]], "hex() (arkouda.float64 method)": [[25, "arkouda.float64.hex", false]], "hex() (arkouda.numpy.dtypes.float64 method)": [[36, "arkouda.numpy.dtypes.float64.hex", false]], "hex() (arkouda.numpy.float64 method)": [[39, "arkouda.numpy.float64.hex", false]], "hist_all() (in module arkouda)": [[25, "arkouda.hist_all", false]], "hist_all() (in module arkouda.plotting)": [[59, "arkouda.plotting.hist_all", false]], "histogram() (in module arkouda)": [[25, "arkouda.histogram", false], [25, "id522", false], [105, "arkouda.histogram", false]], "histogram() (in module arkouda.numpy)": [[39, "arkouda.numpy.histogram", false]], "histogram() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.histogram", false]], "histogram2d() (in module arkouda)": [[25, "arkouda.histogram2d", false]], "histogram2d() (in module arkouda.numpy)": [[39, "arkouda.numpy.histogram2d", false]], "histogram2d() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.histogram2d", false]], "histogramdd() (in module arkouda)": [[25, "arkouda.histogramdd", false]], "histogramdd() (in module arkouda.numpy)": [[39, "arkouda.numpy.histogramdd", false]], "histogramdd() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.histogramdd", false]], "historyretriever (class in arkouda.history)": [[24, "arkouda.history.HistoryRetriever", false]], "hour (arkouda.datetime property)": [[25, "arkouda.Datetime.hour", false], [25, "id63", false], [25, "id96", false]], "hour (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.hour", false]], "hour (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.hour", false]], "iat (arkouda.series property)": [[25, "arkouda.Series.iat", false]], "iat (arkouda.series.series property)": [[65, "arkouda.series.Series.iat", false]], "identity() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.identity", false]], "ignore (arkouda.errormode attribute)": [[25, "arkouda.ErrorMode.ignore", false]], "ignore (arkouda.numpy.errormode attribute)": [[39, "arkouda.numpy.ErrorMode.ignore", false]], "ignore (arkouda.numpy.numeric.errormode attribute)": [[45, "arkouda.numpy.numeric.ErrorMode.ignore", false]], "iinfo() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.iinfo", false]], "iinfo_object (class in arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.iinfo_object", false]], "iloc (arkouda.series property)": [[25, "arkouda.Series.iloc", false]], "iloc (arkouda.series.series property)": [[65, "arkouda.series.Series.iloc", false]], "imag() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.imag", false]], "imag() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.imag", false], [39, "id284", false]], "imag() (arkouda.str_ method)": [[25, "arkouda.str_.imag", false]], "imag() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.imag", false]], "implements_numpy() (in module arkouda.array_api.array_object)": [[5, "arkouda.array_api.array_object.implements_numpy", false]], "import_data() (in module arkouda)": [[25, "arkouda.import_data", false], [97, "arkouda.import_data", false]], "import_data() (in module arkouda.io)": [[28, "arkouda.io.import_data", false]], "in1d() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.in1d", false]], "in1d() (in module arkouda)": [[25, "arkouda.in1d", false], [25, "id523", false], [111, "arkouda.in1d", false]], "in1d() (in module arkouda.numpy)": [[39, "arkouda.numpy.in1d", false]], "in1d() (in module arkouda.numpy.pdarraysetops)": [[49, "arkouda.numpy.pdarraysetops.in1d", false]], "in1d_intervals() (in module arkouda.alignment)": [[3, "arkouda.alignment.in1d_intervals", false]], "index (arkouda.dataframe property)": [[25, "arkouda.DataFrame.index", false], [25, "id24", false]], "index (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.index", false]], "index (arkouda.index property)": [[25, "arkouda.Index.index", false]], "index (arkouda.index.index property)": [[26, "arkouda.index.Index.index", false]], "index (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.index", false]], "index (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.index", false]], "index (class in arkouda)": [[25, "arkouda.Index", false], [98, "arkouda.Index", false]], "index (class in arkouda.index)": [[26, "arkouda.index.Index", false]], "index (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.Index", false]], "index() (arkouda.arkouda_supported_bools method)": [[25, "arkouda.ARKOUDA_SUPPORTED_BOOLS.index", false]], "index() (arkouda.arkouda_supported_dtypes method)": [[25, "arkouda.ARKOUDA_SUPPORTED_DTYPES.index", false]], "index() (arkouda.arkouda_supported_floats method)": [[25, "arkouda.ARKOUDA_SUPPORTED_FLOATS.index", false]], "index() (arkouda.arkouda_supported_ints method)": [[25, "arkouda.ARKOUDA_SUPPORTED_INTS.index", false]], "index() (arkouda.arkouda_supported_numbers method)": [[25, "arkouda.ARKOUDA_SUPPORTED_NUMBERS.index", false]], "index() (arkouda.numpy.arkouda_supported_bools method)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_BOOLS.index", false]], "index() (arkouda.numpy.arkouda_supported_dtypes method)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.index", false]], "index() (arkouda.numpy.arkouda_supported_floats method)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_FLOATS.index", false]], "index() (arkouda.numpy.arkouda_supported_ints method)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_INTS.index", false]], "index() (arkouda.numpy.arkouda_supported_numbers method)": [[39, "arkouda.numpy.ARKOUDA_SUPPORTED_NUMBERS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_bools method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_BOOLS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_floats method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_ints method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_numbers method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS.index", false]], "indexof1d() (in module arkouda)": [[25, "arkouda.indexof1d", false]], "indexof1d() (in module arkouda.numpy)": [[39, "arkouda.numpy.indexof1d", false]], "indexof1d() (in module arkouda.numpy.pdarraysetops)": [[49, "arkouda.numpy.pdarraysetops.indexof1d", false]], "indices (arkouda.array_api.set_functions.uniqueallresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueAllResult.indices", false]], "indices (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.indices", false]], "inferred_type (arkouda.categorical.categorical property)": [[18, "arkouda.categorical.Categorical.inferred_type", false]], "inferred_type (arkouda.index property)": [[25, "arkouda.Index.inferred_type", false]], "inferred_type (arkouda.index.index property)": [[26, "arkouda.index.Index.inferred_type", false]], "inferred_type (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.inferred_type", false]], "inferred_type (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.inferred_type", false]], "inferred_type (arkouda.numpy.pdarray property)": [[39, "arkouda.numpy.pdarray.inferred_type", false], [39, "id145", false], [39, "id214", false]], "inferred_type (arkouda.numpy.pdarrayclass.pdarray property)": [[46, "arkouda.numpy.pdarrayclass.pdarray.inferred_type", false]], "inferred_type (arkouda.numpy.strings property)": [[39, "arkouda.numpy.Strings.inferred_type", false], [39, "id45", false]], "inferred_type (arkouda.numpy.strings.strings property)": [[55, "arkouda.numpy.strings.Strings.inferred_type", false]], "inferred_type (arkouda.pdarray property)": [[25, "arkouda.pdarray.inferred_type", false], [25, "id569", false], [25, "id638", false]], "inferred_type (arkouda.strings property)": [[25, "arkouda.Strings.inferred_type", false], [25, "id357", false], [25, "id435", false]], "info (arkouda.dataframe property)": [[25, "arkouda.DataFrame.info", false], [25, "id25", false]], "info (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.info", false]], "info (arkouda.logger.loglevel attribute)": [[31, "arkouda.logger.LogLevel.INFO", false]], "info (arkouda.loglevel attribute)": [[25, "arkouda.LogLevel.INFO", false]], "info() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.info", false]], "info() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.info", false], [39, "id146", false], [39, "id215", false]], "info() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.info", false]], "info() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.info", false], [39, "id46", false]], "info() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.info", false]], "info() (arkouda.pdarray method)": [[25, "arkouda.pdarray.info", false], [25, "id570", false], [25, "id639", false]], "info() (arkouda.strings method)": [[25, "arkouda.Strings.info", false], [25, "id358", false], [25, "id436", false]], "information() (in module arkouda)": [[25, "arkouda.information", false]], "information() (in module arkouda.infoclass)": [[27, "arkouda.infoclass.information", false]], "int() (arkouda.dtype method)": [[25, "arkouda.DType.INT", false]], "int() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.INT", false]], "int() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.INT", false]], "int16 (class in arkouda)": [[25, "arkouda.int16", false]], "int16 (class in arkouda.numpy)": [[39, "arkouda.numpy.int16", false]], "int16 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.int16", false]], "int16() (arkouda.dtype method)": [[25, "arkouda.DType.INT16", false]], "int16() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.INT16", false]], "int16() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.INT16", false]], "int16dtype (class in arkouda)": [[25, "arkouda.Int16DType", false]], "int16dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.Int16DType", false]], "int16dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.Int16DType", false]], "int32 (class in arkouda)": [[25, "arkouda.int32", false]], "int32 (class in arkouda.numpy)": [[39, "arkouda.numpy.int32", false]], "int32 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.int32", false]], "int32() (arkouda.dtype method)": [[25, "arkouda.DType.INT32", false]], "int32() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.INT32", false]], "int32() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.INT32", false]], "int32dtype (class in arkouda)": [[25, "arkouda.Int32DType", false]], "int32dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.Int32DType", false]], "int32dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.Int32DType", false]], "int64 (class in arkouda)": [[25, "arkouda.int64", false]], "int64 (class in arkouda.numpy)": [[39, "arkouda.numpy.int64", false], [39, "id96", false]], "int64 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.int64", false]], "int64() (arkouda.dtype method)": [[25, "arkouda.DType.INT64", false]], "int64() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.INT64", false]], "int64() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.INT64", false]], "int64dtype (class in arkouda)": [[25, "arkouda.Int64DType", false]], "int64dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.Int64DType", false]], "int64dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.Int64DType", false]], "int8 (class in arkouda)": [[25, "arkouda.int8", false]], "int8 (class in arkouda.numpy)": [[39, "arkouda.numpy.int8", false]], "int8 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.int8", false]], "int8() (arkouda.dtype method)": [[25, "arkouda.DType.INT8", false]], "int8() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.INT8", false]], "int8() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.INT8", false]], "int8dtype (class in arkouda)": [[25, "arkouda.Int8DType", false]], "int8dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.Int8DType", false]], "int8dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.Int8DType", false]], "int_scalars (class in arkouda)": [[25, "arkouda.int_scalars", false]], "int_scalars (class in arkouda.numpy)": [[39, "arkouda.numpy.int_scalars", false], [39, "id107", false], [39, "id108", false]], "int_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.int_scalars", false]], "intdtype (class in arkouda)": [[25, "arkouda.IntDType", false]], "intdtype (class in arkouda.numpy)": [[39, "arkouda.numpy.IntDType", false]], "intdtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.IntDType", false]], "integers() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.integers", false]], "integers() (in module arkouda.random.generator)": [[108, "arkouda.random.Generator.integers", false]], "intersect() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.intersect", false]], "intersect() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.intersect", false]], "intersect() (arkouda.segarray method)": [[25, "arkouda.SegArray.intersect", false]], "intersect() (in module arkouda)": [[25, "arkouda.intersect", false]], "intersect() (in module arkouda.dataframe)": [[22, "arkouda.dataframe.intersect", false]], "intersect1d() (in module arkouda)": [[25, "arkouda.intersect1d", false], [111, "arkouda.intersect1d", false]], "intersect1d() (in module arkouda.numpy)": [[39, "arkouda.numpy.intersect1d", false]], "intersect1d() (in module arkouda.numpy.pdarraysetops)": [[49, "arkouda.numpy.pdarraysetops.intersect1d", false]], "intersection() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.intersection", false]], "intersection() (arkouda.dtypes method)": [[25, "arkouda.DTypes.intersection", false]], "intersection() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.intersection", false]], "intersection() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.intersection", false]], "intersection() (arkouda.inttypes method)": [[25, "arkouda.intTypes.intersection", false], [25, "id527", false]], "intersection() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.intersection", false]], "intersection() (arkouda.numpy.dtypeobjects method)": [[39, "arkouda.numpy.DTypeObjects.intersection", false]], "intersection() (arkouda.numpy.dtypes method)": [[39, "arkouda.numpy.DTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.intersection", false]], "intersection() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.intersection", false]], "intersection() (arkouda.numpy.inttypes method)": [[39, "arkouda.numpy.intTypes.intersection", false], [39, "id101", false]], "intersection() (arkouda.numpy.numericdtypes method)": [[39, "arkouda.numpy.NumericDTypes.intersection", false]], "intersection() (arkouda.numpy.scalardtypes method)": [[39, "arkouda.numpy.ScalarDTypes.intersection", false]], "intersection() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.intersection", false]], "interval_lookup() (in module arkouda.alignment)": [[3, "arkouda.alignment.interval_lookup", false]], "inttypes (class in arkouda)": [[25, "arkouda.intTypes", false], [25, "id524", false]], "inttypes (class in arkouda.numpy)": [[39, "arkouda.numpy.intTypes", false], [39, "id98", false]], "inttypes (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.intTypes", false]], "intx() (in module arkouda)": [[25, "arkouda.intx", false]], "intx() (in module arkouda.dataframe)": [[22, "arkouda.dataframe.intx", false]], "inverse_indices (arkouda.array_api.set_functions.uniqueallresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueAllResult.inverse_indices", false]], "inverse_indices (arkouda.array_api.set_functions.uniqueinverseresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueInverseResult.inverse_indices", false]], "invert_permutation() (in module arkouda)": [[25, "arkouda.invert_permutation", false]], "invert_permutation() (in module arkouda.dataframe)": [[22, "arkouda.dataframe.invert_permutation", false]], "invert_permutation() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.invert_permutation", false]], "ip_address() (in module arkouda)": [[25, "arkouda.ip_address", false]], "ip_address() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.ip_address", false]], "ipv4 (class in arkouda)": [[25, "arkouda.IPv4", false]], "ipv4 (class in arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.IPv4", false]], "is_cosorted() (in module arkouda.alignment)": [[3, "arkouda.alignment.is_cosorted", false]], "is_float() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.is_float", false]], "is_int() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.is_int", false]], "is_integer() (arkouda.akfloat64 method)": [[25, "arkouda.akfloat64.is_integer", false]], "is_integer() (arkouda.float16 method)": [[25, "arkouda.float16.is_integer", false]], "is_integer() (arkouda.float32 method)": [[25, "arkouda.float32.is_integer", false]], "is_integer() (arkouda.float64 method)": [[25, "arkouda.float64.is_integer", false]], "is_integer() (arkouda.numpy.dtypes.float16 method)": [[36, "arkouda.numpy.dtypes.float16.is_integer", false]], "is_integer() (arkouda.numpy.dtypes.float32 method)": [[36, "arkouda.numpy.dtypes.float32.is_integer", false]], "is_integer() (arkouda.numpy.dtypes.float64 method)": [[36, "arkouda.numpy.dtypes.float64.is_integer", false]], "is_integer() (arkouda.numpy.float16 method)": [[39, "arkouda.numpy.float16.is_integer", false]], "is_integer() (arkouda.numpy.float32 method)": [[39, "arkouda.numpy.float32.is_integer", false]], "is_integer() (arkouda.numpy.float64 method)": [[39, "arkouda.numpy.float64.is_integer", false]], "is_ipv4() (in module arkouda)": [[25, "arkouda.is_ipv4", false]], "is_ipv4() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.is_ipv4", false]], "is_ipv6() (in module arkouda)": [[25, "arkouda.is_ipv6", false]], "is_ipv6() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.is_ipv6", false]], "is_leap_year (arkouda.datetime property)": [[25, "arkouda.Datetime.is_leap_year", false], [25, "id64", false], [25, "id97", false]], "is_leap_year (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.is_leap_year", false]], "is_leap_year (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.is_leap_year", false]], "is_numeric() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.is_numeric", false]], "is_registered() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.is_registered", false]], "is_registered() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.is_registered", false], [25, "id26", false]], "is_registered() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.is_registered", false]], "is_registered() (arkouda.datetime method)": [[25, "arkouda.Datetime.is_registered", false], [25, "id65", false], [25, "id98", false]], "is_registered() (arkouda.groupby method)": [[25, "arkouda.GroupBy.is_registered", false], [25, "id148", false], [25, "id195", false], [25, "id242", false], [25, "id289", false], [104, "arkouda.GroupBy.is_registered", false]], "is_registered() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.is_registered", false]], "is_registered() (arkouda.index method)": [[25, "arkouda.Index.is_registered", false]], "is_registered() (arkouda.index.index method)": [[26, "arkouda.index.Index.is_registered", false]], "is_registered() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.is_registered", false]], "is_registered() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.is_registered", false]], "is_registered() (arkouda.numpy.datetime method)": [[39, "arkouda.numpy.Datetime.is_registered", false]], "is_registered() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.is_registered", false]], "is_registered() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.is_registered", false], [39, "id147", false], [39, "id216", false]], "is_registered() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.is_registered", false]], "is_registered() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.is_registered", false]], "is_registered() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.is_registered", false]], "is_registered() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.is_registered", false], [39, "id47", false]], "is_registered() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.is_registered", false]], "is_registered() (arkouda.numpy.timeclass.datetime method)": [[56, "arkouda.numpy.timeclass.Datetime.is_registered", false]], "is_registered() (arkouda.numpy.timeclass.timedelta method)": [[56, "arkouda.numpy.timeclass.Timedelta.is_registered", false]], "is_registered() (arkouda.numpy.timedelta method)": [[39, "arkouda.numpy.Timedelta.is_registered", false]], "is_registered() (arkouda.pdarray method)": [[25, "arkouda.pdarray.is_registered", false], [25, "id571", false], [25, "id640", false]], "is_registered() (arkouda.segarray method)": [[25, "arkouda.SegArray.is_registered", false]], "is_registered() (arkouda.series method)": [[25, "arkouda.Series.is_registered", false]], "is_registered() (arkouda.series.series method)": [[65, "arkouda.series.Series.is_registered", false]], "is_registered() (arkouda.strings method)": [[25, "arkouda.Strings.is_registered", false], [25, "id359", false], [25, "id437", false]], "is_registered() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.is_registered", false], [25, "id484", false]], "is_registered() (in module arkouda)": [[25, "arkouda.is_registered", false]], "is_registered() (in module arkouda.numpy)": [[39, "arkouda.numpy.is_registered", false]], "is_registered() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.is_registered", false]], "is_sorted() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.is_sorted", false], [39, "id148", false], [39, "id217", false]], "is_sorted() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.is_sorted", false]], "is_sorted() (arkouda.pdarray method)": [[25, "arkouda.pdarray.is_sorted", false], [25, "id572", false], [25, "id641", false], [105, "arkouda.pdarray.is_sorted", false]], "is_sorted() (in module arkouda)": [[100, "arkouda.is_sorted", false]], "is_unique (arkouda.index property)": [[25, "arkouda.Index.is_unique", false]], "is_unique (arkouda.index.index property)": [[26, "arkouda.index.Index.is_unique", false]], "isalnum() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.isalnum", false], [39, "id48", false]], "isalnum() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.isalnum", false]], "isalnum() (arkouda.strings method)": [[25, "arkouda.Strings.isalnum", false], [25, "id360", false], [25, "id438", false]], "isalpha() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.isalpha", false], [39, "id49", false]], "isalpha() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.isalpha", false]], "isalpha() (arkouda.strings method)": [[25, "arkouda.Strings.isalpha", false], [25, "id361", false], [25, "id439", false]], "isdecimal() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.isdecimal", false], [39, "id50", false]], "isdecimal() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.isdecimal", false]], "isdecimal() (arkouda.strings method)": [[25, "arkouda.Strings.isdecimal", false], [25, "id362", false], [25, "id440", false]], "isdigit() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.isdigit", false], [39, "id51", false]], "isdigit() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.isdigit", false]], "isdigit() (arkouda.strings method)": [[25, "arkouda.Strings.isdigit", false], [25, "id363", false], [25, "id441", false]], "isdisjoint() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.dtypes method)": [[25, "arkouda.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.isdisjoint", false]], "isdisjoint() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.isdisjoint", false]], "isdisjoint() (arkouda.inttypes method)": [[25, "arkouda.intTypes.isdisjoint", false], [25, "id528", false]], "isdisjoint() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypeobjects method)": [[39, "arkouda.numpy.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes method)": [[39, "arkouda.numpy.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.inttypes method)": [[39, "arkouda.numpy.intTypes.isdisjoint", false], [39, "id102", false]], "isdisjoint() (arkouda.numpy.numericdtypes method)": [[39, "arkouda.numpy.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.scalardtypes method)": [[39, "arkouda.numpy.ScalarDTypes.isdisjoint", false]], "isdisjoint() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.isdisjoint", false]], "isdtype() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.isdtype", false]], "isempty() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.isempty", false], [39, "id52", false]], "isempty() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.isempty", false]], "isempty() (arkouda.strings method)": [[25, "arkouda.Strings.isempty", false], [25, "id364", false], [25, "id442", false]], "isfinite() (in module arkouda)": [[25, "arkouda.isfinite", false]], "isfinite() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.isfinite", false]], "isfinite() (in module arkouda.numpy)": [[39, "arkouda.numpy.isfinite", false]], "isfinite() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.isfinite", false]], "isin() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.isin", false], [25, "id27", false]], "isin() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.isin", false]], "isin() (arkouda.series method)": [[25, "arkouda.Series.isin", false]], "isin() (arkouda.series.series method)": [[65, "arkouda.series.Series.isin", false]], "isinf() (in module arkouda)": [[25, "arkouda.isinf", false]], "isinf() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.isinf", false]], "isinf() (in module arkouda.numpy)": [[39, "arkouda.numpy.isinf", false]], "isinf() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.isinf", false]], "islower() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.islower", false], [39, "id53", false]], "islower() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.islower", false]], "islower() (arkouda.strings method)": [[25, "arkouda.Strings.islower", false], [25, "id365", false], [25, "id443", false]], "isna() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.isna", false]], "isna() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.isna", false], [25, "id28", false]], "isna() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.isna", false]], "isna() (arkouda.series method)": [[25, "arkouda.Series.isna", false]], "isna() (arkouda.series.series method)": [[65, "arkouda.series.Series.isna", false]], "isnan() (in module arkouda)": [[25, "arkouda.isnan", false], [25, "id534", false]], "isnan() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.isnan", false]], "isnan() (in module arkouda.numpy)": [[39, "arkouda.numpy.isnan", false]], "isnan() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.isnan", false]], "isnull() (arkouda.series method)": [[25, "arkouda.Series.isnull", false]], "isnull() (arkouda.series.series method)": [[65, "arkouda.series.Series.isnull", false]], "isocalendar() (arkouda.datetime method)": [[25, "arkouda.Datetime.isocalendar", false], [25, "id66", false], [25, "id99", false]], "isocalendar() (arkouda.numpy.datetime method)": [[39, "arkouda.numpy.Datetime.isocalendar", false]], "isocalendar() (arkouda.numpy.timeclass.datetime method)": [[56, "arkouda.numpy.timeclass.Datetime.isocalendar", false]], "isspace() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.isspace", false], [39, "id54", false]], "isspace() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.isspace", false]], "isspace() (arkouda.strings method)": [[25, "arkouda.Strings.isspace", false], [25, "id366", false], [25, "id444", false]], "issubset() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.issubset", false]], "issubset() (arkouda.dtypes method)": [[25, "arkouda.DTypes.issubset", false]], "issubset() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.issubset", false]], "issubset() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.issubset", false]], "issubset() (arkouda.inttypes method)": [[25, "arkouda.intTypes.issubset", false], [25, "id529", false]], "issubset() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.issubset", false]], "issubset() (arkouda.numpy.dtypeobjects method)": [[39, "arkouda.numpy.DTypeObjects.issubset", false]], "issubset() (arkouda.numpy.dtypes method)": [[39, "arkouda.numpy.DTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.issubset", false]], "issubset() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.issubset", false]], "issubset() (arkouda.numpy.inttypes method)": [[39, "arkouda.numpy.intTypes.issubset", false], [39, "id103", false]], "issubset() (arkouda.numpy.numericdtypes method)": [[39, "arkouda.numpy.NumericDTypes.issubset", false]], "issubset() (arkouda.numpy.scalardtypes method)": [[39, "arkouda.numpy.ScalarDTypes.issubset", false]], "issubset() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.issubset", false]], "issuperset() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.issuperset", false]], "issuperset() (arkouda.dtypes method)": [[25, "arkouda.DTypes.issuperset", false]], "issuperset() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.issuperset", false]], "issuperset() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.issuperset", false]], "issuperset() (arkouda.inttypes method)": [[25, "arkouda.intTypes.issuperset", false], [25, "id530", false]], "issuperset() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypeobjects method)": [[39, "arkouda.numpy.DTypeObjects.issuperset", false]], "issuperset() (arkouda.numpy.dtypes method)": [[39, "arkouda.numpy.DTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.issuperset", false]], "issuperset() (arkouda.numpy.inttypes method)": [[39, "arkouda.numpy.intTypes.issuperset", false], [39, "id104", false]], "issuperset() (arkouda.numpy.numericdtypes method)": [[39, "arkouda.numpy.NumericDTypes.issuperset", false]], "issuperset() (arkouda.numpy.scalardtypes method)": [[39, "arkouda.numpy.ScalarDTypes.issuperset", false]], "issuperset() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.issuperset", false]], "issupportedbool() (in module arkouda)": [[25, "arkouda.isSupportedBool", false]], "issupportedbool() (in module arkouda.numpy)": [[39, "arkouda.numpy.isSupportedBool", false]], "issupportedbool() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.isSupportedBool", false]], "issupporteddtype() (in module arkouda)": [[25, "arkouda.isSupportedDType", false]], "issupporteddtype() (in module arkouda.numpy)": [[39, "arkouda.numpy.isSupportedDType", false]], "issupporteddtype() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.isSupportedDType", false]], "issupportedfloat() (in module arkouda)": [[25, "arkouda.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.numpy)": [[39, "arkouda.numpy.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.isSupportedFloat", false]], "issupportedint() (in module arkouda)": [[25, "arkouda.isSupportedInt", false], [25, "id533", false]], "issupportedint() (in module arkouda.numpy)": [[39, "arkouda.numpy.isSupportedInt", false], [39, "id109", false], [39, "id110", false]], "issupportedint() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.isSupportedInt", false]], "issupportednumber() (in module arkouda)": [[25, "arkouda.isSupportedNumber", false]], "issupportednumber() (in module arkouda.numpy)": [[39, "arkouda.numpy.isSupportedNumber", false]], "issupportednumber() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.isSupportedNumber", false]], "istitle() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.istitle", false], [39, "id55", false]], "istitle() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.istitle", false]], "istitle() (arkouda.strings method)": [[25, "arkouda.Strings.istitle", false], [25, "id367", false], [25, "id445", false]], "isupper() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.isupper", false], [39, "id56", false]], "isupper() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.isupper", false]], "isupper() (arkouda.strings method)": [[25, "arkouda.Strings.isupper", false], [25, "id368", false], [25, "id446", false]], "item() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.item", false]], "item() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.item", false]], "item() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.item", false]], "item() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.item", false], [39, "id285", false]], "item() (arkouda.str_ method)": [[25, "arkouda.str_.item", false]], "items() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.items", false]], "items() (arkouda.numpy.number_format_strings method)": [[39, "arkouda.numpy.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.numpy.seriesdtypes method)": [[39, "arkouda.numpy.SeriesDTypes.items", false]], "items() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.items", false]], "itemset() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.itemset", false]], "itemset() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.itemset", false], [39, "id286", false]], "itemset() (arkouda.str_ method)": [[25, "arkouda.str_.itemset", false]], "itemsize (arkouda.numpy.pdarray attribute)": [[39, "arkouda.numpy.pdarray.itemsize", false], [39, "id113", false], [39, "id124", false], [39, "id149", false], [39, "id193", false], [39, "id218", false]], "itemsize (arkouda.numpy.pdarrayclass.pdarray attribute)": [[46, "arkouda.numpy.pdarrayclass.pdarray.itemsize", false], [46, "id1", false]], "itemsize (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.itemsize", false], [25, "id537", false], [25, "id548", false], [25, "id573", false], [25, "id617", false], [25, "id642", false], [107, "arkouda.pdarray.itemsize", false]], "itemsize() (arkouda.bigint method)": [[25, "arkouda.bigint.itemsize", false]], "itemsize() (arkouda.numpy.bigint method)": [[39, "arkouda.numpy.bigint.itemsize", false]], "itemsize() (arkouda.numpy.dtypes.bigint method)": [[36, "arkouda.numpy.dtypes.bigint.itemsize", false]], "itemsize() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.itemsize", false]], "itemsize() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.itemsize", false], [39, "id287", false]], "itemsize() (arkouda.str_ method)": [[25, "arkouda.str_.itemsize", false]], "join_on_eq_with_dt() (in module arkouda.join)": [[30, "arkouda.join.join_on_eq_with_dt", false]], "keys() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.keys", false]], "keys() (arkouda.numpy.number_format_strings method)": [[39, "arkouda.numpy.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.numpy.seriesdtypes method)": [[39, "arkouda.numpy.SeriesDTypes.keys", false]], "keys() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.keys", false]], "left_align() (in module arkouda.alignment)": [[3, "arkouda.alignment.left_align", false]], "len_suffix (in module arkouda)": [[25, "arkouda.LEN_SUFFIX", false]], "len_suffix (in module arkouda.numpy)": [[39, "arkouda.numpy.LEN_SUFFIX", false]], "len_suffix (in module arkouda.numpy.segarray)": [[53, "arkouda.numpy.segarray.LEN_SUFFIX", false]], "lengths (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.lengths", false]], "less() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.less", false]], "less_equal() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.less_equal", false]], "levels (arkouda.index.multiindex attribute)": [[26, "arkouda.index.MultiIndex.levels", false]], "levels (arkouda.multiindex attribute)": [[25, "arkouda.MultiIndex.levels", false]], "linspace() (in module arkouda)": [[25, "arkouda.linspace", false], [102, "arkouda.linspace", false]], "linspace() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.linspace", false]], "linspace() (in module arkouda.numpy)": [[39, "arkouda.numpy.linspace", false]], "linspace() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.linspace", false]], "list_registry() (in module arkouda)": [[25, "arkouda.list_registry", false]], "list_registry() (in module arkouda.infoclass)": [[27, "arkouda.infoclass.list_registry", false]], "list_symbol_table() (in module arkouda)": [[25, "arkouda.list_symbol_table", false]], "list_symbol_table() (in module arkouda.infoclass)": [[27, "arkouda.infoclass.list_symbol_table", false]], "load() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.load", false], [25, "id29", false]], "load() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.load", false]], "load() (arkouda.numpy.segarray class method)": [[39, "arkouda.numpy.SegArray.load", false]], "load() (arkouda.numpy.segarray.segarray class method)": [[53, "arkouda.numpy.segarray.SegArray.load", false]], "load() (arkouda.segarray class method)": [[25, "arkouda.SegArray.load", false]], "load() (in module arkouda)": [[25, "arkouda.load", false]], "load() (in module arkouda.io)": [[28, "arkouda.io.load", false]], "load_all() (in module arkouda)": [[25, "arkouda.load_all", false]], "load_all() (in module arkouda.io)": [[28, "arkouda.io.load_all", false]], "load_checkpoint() (in module arkouda)": [[25, "arkouda.load_checkpoint", false]], "load_checkpoint() (in module arkouda.io)": [[28, "arkouda.io.load_checkpoint", false]], "loc (arkouda.series property)": [[25, "arkouda.Series.loc", false]], "loc (arkouda.series.series property)": [[65, "arkouda.series.Series.loc", false]], "locate() (arkouda.series method)": [[25, "arkouda.Series.locate", false]], "locate() (arkouda.series.series method)": [[65, "arkouda.series.Series.locate", false]], "locate() (in module arkouda.series)": [[110, "arkouda.Series.locate", false], [110, "id0", false]], "locationsinfo (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.LocationsInfo", false]], "log() (in module arkouda)": [[25, "arkouda.log", false], [100, "arkouda.log", false]], "log() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.log", false]], "log() (in module arkouda.numpy)": [[39, "arkouda.numpy.log", false]], "log() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.log", false]], "log10() (in module arkouda)": [[25, "arkouda.log10", false]], "log10() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.log10", false]], "log10() (in module arkouda.numpy)": [[39, "arkouda.numpy.log10", false]], "log10() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.log10", false]], "log1p() (in module arkouda)": [[25, "arkouda.log1p", false]], "log1p() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.log1p", false]], "log1p() (in module arkouda.numpy)": [[39, "arkouda.numpy.log1p", false]], "log1p() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.log1p", false]], "log2() (in module arkouda)": [[25, "arkouda.log2", false]], "log2() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.log2", false]], "log2() (in module arkouda.numpy)": [[39, "arkouda.numpy.log2", false]], "log2() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.log2", false]], "logaddexp() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logaddexp", false]], "logger (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.logger", false]], "logger (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.logger", false], [25, "id130", false], [25, "id177", false], [25, "id224", false], [25, "id271", false], [104, "arkouda.GroupBy.logger", false]], "logger (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.logger", false]], "logger (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.logger", false]], "logger (arkouda.numpy.groupby attribute)": [[39, "arkouda.numpy.GroupBy.logger", false]], "logger (arkouda.numpy.segarray attribute)": [[39, "arkouda.numpy.SegArray.logger", false]], "logger (arkouda.numpy.segarray.segarray attribute)": [[53, "arkouda.numpy.segarray.SegArray.logger", false]], "logger (arkouda.numpy.strings attribute)": [[39, "arkouda.numpy.Strings.logger", false], [39, "id19", false], [39, "id57", false], [39, "id9", false]], "logger (arkouda.numpy.strings.strings attribute)": [[55, "arkouda.numpy.strings.Strings.logger", false], [55, "id2", false]], "logger (arkouda.segarray attribute)": [[25, "arkouda.SegArray.logger", false]], "logger (arkouda.strings attribute)": [[25, "arkouda.Strings.logger", false], [25, "id321", false], [25, "id331", false], [25, "id369", false], [25, "id409", false], [25, "id447", false]], "logical_and() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logical_and", false]], "logical_not() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logical_not", false]], "logical_or() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logical_or", false]], "logical_xor() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logical_xor", false]], "logistic() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.logistic", false]], "logistic() (in module arkouda.random.generator)": [[108, "arkouda.random.Generator.logistic", false]], "loglevel (class in arkouda)": [[25, "arkouda.LogLevel", false]], "loglevel (class in arkouda.logger)": [[31, "arkouda.logger.LogLevel", false]], "lognormal() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.lognormal", false]], "lognormal() (in module arkouda.random.generator)": [[108, "arkouda.random.Generator.lognormal", false]], "longdoubledtype (class in arkouda)": [[25, "arkouda.LongDoubleDType", false]], "longdoubledtype (class in arkouda.numpy)": [[39, "arkouda.numpy.LongDoubleDType", false]], "longdoubledtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.LongDoubleDType", false]], "longdtype (class in arkouda)": [[25, "arkouda.LongDType", false]], "longdtype (class in arkouda.numpy)": [[39, "arkouda.numpy.LongDType", false]], "longdtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.LongDType", false]], "longlongdtype (class in arkouda)": [[25, "arkouda.LongLongDType", false]], "longlongdtype (class in arkouda.numpy)": [[39, "arkouda.numpy.LongLongDType", false]], "longlongdtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.LongLongDType", false]], "lookup() (arkouda.index method)": [[25, "arkouda.Index.lookup", false]], "lookup() (arkouda.index.index method)": [[26, "arkouda.index.Index.lookup", false]], "lookup() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.lookup", false]], "lookup() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.lookup", false]], "lookup() (in module arkouda.alignment)": [[3, "arkouda.alignment.lookup", false]], "lookup() (in module arkouda.index)": [[98, "arkouda.Index.lookup", false]], "lookup() (in module arkouda.multiindex)": [[98, "arkouda.MultiIndex.lookup", false]], "lower() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.lower", false], [39, "id58", false]], "lower() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.lower", false]], "lower() (arkouda.strings method)": [[25, "arkouda.Strings.lower", false], [25, "id370", false], [25, "id448", false]], "ls() (in module arkouda)": [[25, "arkouda.ls", false]], "ls() (in module arkouda.io)": [[28, "arkouda.io.ls", false]], "ls_csv() (in module arkouda)": [[25, "arkouda.ls_csv", false]], "ls_csv() (in module arkouda.io)": [[28, "arkouda.io.ls_csv", false]], "lstick() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.lstick", false], [39, "id59", false]], "lstick() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.lstick", false]], "lstick() (arkouda.strings method)": [[25, "arkouda.Strings.lstick", false], [25, "id371", false], [25, "id449", false]], "mandatory() (arkouda.annotations method)": [[25, "arkouda.annotations.mandatory", false]], "mandatory() (arkouda.numpy.annotations method)": [[39, "arkouda.numpy.annotations.mandatory", false]], "mandatory() (arkouda.numpy.dtypes.annotations method)": [[36, "arkouda.numpy.dtypes.annotations.mandatory", false]], "map() (arkouda.index method)": [[25, "arkouda.Index.map", false]], "map() (arkouda.index.index method)": [[26, "arkouda.index.Index.map", false]], "map() (arkouda.series method)": [[25, "arkouda.Series.map", false]], "map() (arkouda.series.series method)": [[65, "arkouda.series.Series.map", false]], "map() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.map", false]], "match (class in arkouda.match)": [[32, "arkouda.match.Match", false]], "match() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.match", false], [39, "id60", false]], "match() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.match", false]], "match() (arkouda.strings method)": [[25, "arkouda.Strings.match", false], [25, "id372", false], [25, "id450", false]], "match_bool (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.match_bool", false]], "match_ind (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.match_ind", false]], "match_type() (arkouda.match.match method)": [[32, "arkouda.match.Match.match_type", false], [113, "arkouda.match.Match.match_type", false]], "matched() (arkouda.match.match method)": [[32, "arkouda.match.Match.matched", false], [113, "arkouda.match.Match.matched", false]], "matcher (class in arkouda.matcher)": [[33, "arkouda.matcher.Matcher", false]], "matmul() (in module arkouda)": [[25, "arkouda.matmul", false]], "matmul() (in module arkouda.array_api.linalg)": [[11, "arkouda.array_api.linalg.matmul", false]], "matmul() (in module arkouda.numpy)": [[39, "arkouda.numpy.matmul", false]], "matmul() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.matmul", false]], "matrix_transpose() (in module arkouda.array_api.linalg)": [[11, "arkouda.array_api.linalg.matrix_transpose", false]], "max (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.max", false]], "max (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.iinfo_object.max", false]], "max() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.max", false]], "max() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.max", false]], "max() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.max", false]], "max() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.max", false]], "max() (arkouda.groupby method)": [[25, "arkouda.GroupBy.max", false], [25, "id149", false], [25, "id196", false], [25, "id243", false], [25, "id290", false], [104, "arkouda.GroupBy.max", false]], "max() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.max", false]], "max() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.max", false]], "max() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.max", false]], "max() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.max", false], [39, "id150", false], [39, "id219", false]], "max() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.max", false]], "max() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.max", false]], "max() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.max", false]], "max() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.max", false], [39, "id288", false]], "max() (arkouda.pdarray method)": [[25, "arkouda.pdarray.max", false], [25, "id574", false], [25, "id643", false], [105, "arkouda.pdarray.max", false]], "max() (arkouda.segarray method)": [[25, "arkouda.SegArray.max", false]], "max() (arkouda.series method)": [[25, "arkouda.Series.max", false]], "max() (arkouda.series.series method)": [[65, "arkouda.series.Series.max", false]], "max() (arkouda.str_ method)": [[25, "arkouda.str_.max", false]], "max() (in module arkouda)": [[100, "arkouda.max", false]], "max() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.max", false]], "max_bits (arkouda.numpy.pdarray property)": [[39, "arkouda.numpy.pdarray.max_bits", false], [39, "id151", false], [39, "id220", false]], "max_bits (arkouda.numpy.pdarrayclass.pdarray property)": [[46, "arkouda.numpy.pdarrayclass.pdarray.max_bits", false]], "max_bits (arkouda.pdarray property)": [[25, "arkouda.pdarray.max_bits", false], [25, "id575", false], [25, "id644", false]], "max_list_size (arkouda.index attribute)": [[25, "arkouda.Index.max_list_size", false]], "max_list_size (arkouda.index.index attribute)": [[26, "arkouda.index.Index.max_list_size", false]], "maxk() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.maxk", false], [39, "id152", false], [39, "id221", false]], "maxk() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.maxk", false]], "maxk() (arkouda.pdarray method)": [[25, "arkouda.pdarray.maxk", false], [25, "id576", false], [25, "id645", false], [105, "arkouda.pdarray.maxk", false]], "maxk() (in module arkouda)": [[25, "arkouda.maxk", false], [100, "arkouda.maxk", false]], "maxk() (in module arkouda.numpy)": [[39, "arkouda.numpy.maxk", false]], "maxk() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.maxk", false]], "mean() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.mean", false]], "mean() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.mean", false]], "mean() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.mean", false]], "mean() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.mean", false]], "mean() (arkouda.groupby method)": [[25, "arkouda.GroupBy.mean", false], [25, "id150", false], [25, "id197", false], [25, "id244", false], [25, "id291", false], [104, "arkouda.GroupBy.mean", false]], "mean() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.mean", false]], "mean() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.mean", false]], "mean() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.mean", false]], "mean() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.mean", false], [39, "id153", false], [39, "id222", false]], "mean() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.mean", false]], "mean() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.mean", false]], "mean() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.mean", false]], "mean() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.mean", false], [39, "id289", false]], "mean() (arkouda.pdarray method)": [[25, "arkouda.pdarray.mean", false], [25, "id577", false], [25, "id646", false], [105, "arkouda.pdarray.mean", false]], "mean() (arkouda.segarray method)": [[25, "arkouda.SegArray.mean", false]], "mean() (arkouda.series method)": [[25, "arkouda.Series.mean", false]], "mean() (arkouda.series.series method)": [[65, "arkouda.series.Series.mean", false]], "mean() (arkouda.str_ method)": [[25, "arkouda.str_.mean", false]], "mean() (in module arkouda)": [[25, "arkouda.mean", false], [100, "arkouda.mean", false]], "mean() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.mean", false]], "mean() (in module arkouda.numpy)": [[39, "arkouda.numpy.mean", false]], "mean() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.mean", false]], "mean_shim() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.mean_shim", false]], "median() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.median", false]], "median() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.median", false]], "median() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.median", false]], "median() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.median", false]], "median() (arkouda.groupby method)": [[25, "arkouda.GroupBy.median", false], [25, "id151", false], [25, "id198", false], [25, "id245", false], [25, "id292", false], [104, "arkouda.GroupBy.median", false]], "median() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.median", false]], "median() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.median", false]], "median() (in module arkouda)": [[25, "arkouda.median", false]], "median() (in module arkouda.numpy)": [[39, "arkouda.numpy.median", false]], "median() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.median", false]], "memory_usage() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.memory_usage", false], [25, "id30", false]], "memory_usage() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.memory_usage", false]], "memory_usage() (arkouda.index method)": [[25, "arkouda.Index.memory_usage", false]], "memory_usage() (arkouda.index.index method)": [[26, "arkouda.index.Index.memory_usage", false]], "memory_usage() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.memory_usage", false]], "memory_usage() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.memory_usage", false]], "memory_usage() (arkouda.series method)": [[25, "arkouda.Series.memory_usage", false]], "memory_usage() (arkouda.series.series method)": [[65, "arkouda.series.Series.memory_usage", false]], "memory_usage_info() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.memory_usage_info", false], [25, "id31", false]], "memory_usage_info() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.memory_usage_info", false]], "merge() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.merge", false], [25, "id32", false]], "merge() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.merge", false]], "merge() (in module arkouda)": [[25, "arkouda.merge", false]], "merge() (in module arkouda.dataframe)": [[22, "arkouda.dataframe.merge", false]], "meshgrid() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.meshgrid", false]], "microsecond (arkouda.datetime property)": [[25, "arkouda.Datetime.microsecond", false], [25, "id100", false], [25, "id67", false]], "microsecond (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.microsecond", false]], "microsecond (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.microsecond", false]], "microseconds (arkouda.numpy.timeclass.timedelta property)": [[56, "arkouda.numpy.timeclass.Timedelta.microseconds", false]], "microseconds (arkouda.numpy.timedelta property)": [[39, "arkouda.numpy.Timedelta.microseconds", false]], "microseconds (arkouda.timedelta property)": [[25, "arkouda.Timedelta.microseconds", false], [25, "id485", false]], "millisecond (arkouda.datetime property)": [[25, "arkouda.Datetime.millisecond", false], [25, "id101", false], [25, "id68", false]], "millisecond (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.millisecond", false]], "millisecond (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.millisecond", false]], "min (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.min", false]], "min (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.iinfo_object.min", false]], "min() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.min", false]], "min() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.min", false]], "min() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.min", false]], "min() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.min", false]], "min() (arkouda.groupby method)": [[25, "arkouda.GroupBy.min", false], [25, "id152", false], [25, "id199", false], [25, "id246", false], [25, "id293", false], [104, "arkouda.GroupBy.min", false]], "min() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.min", false]], "min() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.min", false]], "min() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.min", false]], "min() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.min", false], [39, "id154", false], [39, "id223", false]], "min() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.min", false]], "min() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.min", false]], "min() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.min", false]], "min() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.min", false], [39, "id290", false]], "min() (arkouda.pdarray method)": [[25, "arkouda.pdarray.min", false], [25, "id578", false], [25, "id647", false], [105, "arkouda.pdarray.min", false]], "min() (arkouda.segarray method)": [[25, "arkouda.SegArray.min", false]], "min() (arkouda.series method)": [[25, "arkouda.Series.min", false]], "min() (arkouda.series.series method)": [[65, "arkouda.series.Series.min", false]], "min() (arkouda.str_ method)": [[25, "arkouda.str_.min", false]], "min() (in module arkouda)": [[100, "arkouda.min", false]], "min() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.min", false]], "mink() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.mink", false], [39, "id155", false], [39, "id224", false]], "mink() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.mink", false]], "mink() (arkouda.pdarray method)": [[25, "arkouda.pdarray.mink", false], [25, "id579", false], [25, "id648", false], [105, "arkouda.pdarray.mink", false]], "mink() (in module arkouda)": [[25, "arkouda.mink", false], [100, "arkouda.mink", false]], "mink() (in module arkouda.numpy)": [[39, "arkouda.numpy.mink", false]], "mink() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.mink", false]], "minute (arkouda.datetime property)": [[25, "arkouda.Datetime.minute", false], [25, "id102", false], [25, "id69", false]], "minute (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.minute", false]], "minute (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.minute", false]], "mod() (in module arkouda)": [[25, "arkouda.mod", false]], "mod() (in module arkouda.numpy)": [[39, "arkouda.numpy.mod", false]], "mod() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.mod", false]], "mode() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.mode", false]], "mode() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.mode", false]], "mode() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.mode", false]], "mode() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.mode", false]], "mode() (arkouda.groupby method)": [[25, "arkouda.GroupBy.mode", false], [25, "id153", false], [25, "id200", false], [25, "id247", false], [25, "id294", false], [104, "arkouda.GroupBy.mode", false]], "mode() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.mode", false]], "mode() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.mode", false]], "module": [[2, "module-arkouda.accessor", false], [3, "module-arkouda.alignment", false], [4, "module-arkouda.apply", false], [5, "module-arkouda.array_api.array_object", false], [6, "module-arkouda.array_api.creation_functions", false], [7, "module-arkouda.array_api.data_type_functions", false], [8, "module-arkouda.array_api.elementwise_functions", false], [9, "module-arkouda.array_api", false], [10, "module-arkouda.array_api.indexing_functions", false], [11, "module-arkouda.array_api.linalg", false], [12, "module-arkouda.array_api.manipulation_functions", false], [13, "module-arkouda.array_api.searching_functions", false], [14, "module-arkouda.array_api.set_functions", false], [15, "module-arkouda.array_api.sorting_functions", false], [16, "module-arkouda.array_api.statistical_functions", false], [17, "module-arkouda.array_api.utility_functions", false], [18, "module-arkouda.categorical", false], [19, "module-arkouda.client", false], [20, "module-arkouda.client_dtypes", false], [21, "module-arkouda.comm_diagnostics", false], [22, "module-arkouda.dataframe", false], [23, "module-arkouda.groupbyclass", false], [24, "module-arkouda.history", false], [25, "module-arkouda", false], [26, "module-arkouda.index", false], [27, "module-arkouda.infoclass", false], [28, "module-arkouda.io", false], [29, "module-arkouda.io_util", false], [30, "module-arkouda.join", false], [31, "module-arkouda.logger", false], [32, "module-arkouda.match", false], [33, "module-arkouda.matcher", false], [34, "module-arkouda.numpy.char", false], [35, "module-arkouda.numpy.ctypeslib", false], [36, "module-arkouda.numpy.dtypes", false], [37, "module-arkouda.numpy.exceptions", false], [38, "module-arkouda.numpy.fft", false], [39, "module-arkouda.numpy", false], [40, "module-arkouda.numpy.lib.emath", false], [41, "module-arkouda.numpy.lib", false], [42, "module-arkouda.numpy.linalg", false], [43, "module-arkouda.numpy.ma", false], [44, "module-arkouda.numpy.manipulation_functions", false], [45, "module-arkouda.numpy.numeric", false], [46, "module-arkouda.numpy.pdarrayclass", false], [47, "module-arkouda.numpy.pdarraycreation", false], [48, "module-arkouda.numpy.pdarraymanipulation", false], [49, "module-arkouda.numpy.pdarraysetops", false], [50, "module-arkouda.numpy.polynomial", false], [51, "module-arkouda.numpy.random", false], [52, "module-arkouda.numpy.rec", false], [53, "module-arkouda.numpy.segarray", false], [54, "module-arkouda.numpy.sorting", false], [55, "module-arkouda.numpy.strings", false], [56, "module-arkouda.numpy.timeclass", false], [57, "module-arkouda.numpy.util", false], [58, "module-arkouda.numpy.utils", false], [59, "module-arkouda.plotting", false], [60, "module-arkouda.row", false], [61, "module-arkouda.scipy", false], [62, "module-arkouda.scipy.special", false], [63, "module-arkouda.scipy.stats", false], [64, "module-arkouda.security", false], [65, "module-arkouda.series", false], [66, "module-arkouda.sparrayclass", false], [67, "module-arkouda.sparsematrix", false], [68, "module-arkouda.testing", false]], "moment_type() (arkouda.scipy.stats.chi2 method)": [[63, "arkouda.scipy.stats.chi2.moment_type", false]], "month (arkouda.datetime property)": [[25, "arkouda.Datetime.month", false], [25, "id103", false], [25, "id70", false]], "month (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.month", false]], "month (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.month", false]], "most_common() (arkouda.groupby method)": [[25, "arkouda.GroupBy.most_common", false], [25, "id154", false], [25, "id201", false], [25, "id248", false], [25, "id295", false], [104, "arkouda.GroupBy.most_common", false]], "most_common() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.most_common", false]], "most_common() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.most_common", false]], "most_common() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.most_common", false]], "moveaxis() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.moveaxis", false]], "msb_left (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.MSB_left", false]], "msb_left (arkouda.fields attribute)": [[25, "arkouda.Fields.MSB_left", false]], "mt (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.mT", false]], "mt (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.mT", false]], "multiindex (class in arkouda)": [[25, "arkouda.MultiIndex", false]], "multiindex (class in arkouda.index)": [[26, "arkouda.index.MultiIndex", false]], "multiply() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.multiply", false]], "name (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.name", false]], "name (arkouda.fields attribute)": [[25, "arkouda.Fields.name", false]], "name (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.name", false]], "name (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.name", false]], "name (arkouda.numpy.pdarray attribute)": [[39, "arkouda.numpy.pdarray.name", false], [39, "id114", false], [39, "id119", false], [39, "id156", false], [39, "id188", false], [39, "id225", false]], "name (arkouda.numpy.pdarrayclass.pdarray attribute)": [[46, "arkouda.numpy.pdarrayclass.pdarray.name", false], [46, "id2", false]], "name (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.name", false], [25, "id538", false], [25, "id543", false], [25, "id580", false], [25, "id612", false], [25, "id649", false], [107, "arkouda.pdarray.name", false]], "name() (arkouda.bigint method)": [[25, "arkouda.bigint.name", false]], "name() (arkouda.dtype method)": [[25, "arkouda.DType.name", false]], "name() (arkouda.numpy.bigint method)": [[39, "arkouda.numpy.bigint.name", false]], "name() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.name", false]], "name() (arkouda.numpy.dtypes.bigint method)": [[36, "arkouda.numpy.dtypes.bigint.name", false]], "name() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.name", false]], "name() (arkouda.scipy.stats.chi2 method)": [[63, "arkouda.scipy.stats.chi2.name", false]], "names (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.names", false]], "names (arkouda.fields attribute)": [[25, "arkouda.Fields.names", false]], "names (arkouda.index property)": [[25, "arkouda.Index.names", false]], "names (arkouda.index.index property)": [[26, "arkouda.index.Index.names", false]], "names (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.names", false]], "names (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.names", false]], "namewidth (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.namewidth", false]], "namewidth (arkouda.fields attribute)": [[25, "arkouda.Fields.namewidth", false]], "nanosecond (arkouda.datetime property)": [[25, "arkouda.Datetime.nanosecond", false], [25, "id104", false], [25, "id71", false]], "nanosecond (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.nanosecond", false]], "nanosecond (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.nanosecond", false]], "nanoseconds (arkouda.numpy.timeclass.timedelta property)": [[56, "arkouda.numpy.timeclass.Timedelta.nanoseconds", false]], "nanoseconds (arkouda.numpy.timedelta property)": [[39, "arkouda.numpy.Timedelta.nanoseconds", false]], "nanoseconds (arkouda.timedelta property)": [[25, "arkouda.Timedelta.nanoseconds", false], [25, "id486", false]], "nbytes (arkouda.categorical.categorical property)": [[18, "arkouda.categorical.Categorical.nbytes", false]], "nbytes (arkouda.numpy.pdarray property)": [[39, "arkouda.numpy.pdarray.nbytes", false], [39, "id157", false], [39, "id226", false]], "nbytes (arkouda.numpy.pdarrayclass.pdarray property)": [[46, "arkouda.numpy.pdarrayclass.pdarray.nbytes", false]], "nbytes (arkouda.numpy.segarray property)": [[39, "arkouda.numpy.SegArray.nbytes", false]], "nbytes (arkouda.numpy.segarray.segarray property)": [[53, "arkouda.numpy.segarray.SegArray.nbytes", false]], "nbytes (arkouda.numpy.strings attribute)": [[39, "arkouda.numpy.Strings.nbytes", false], [39, "id15", false]], "nbytes (arkouda.numpy.strings.strings attribute)": [[55, "arkouda.numpy.strings.Strings.nbytes", false]], "nbytes (arkouda.pdarray property)": [[25, "arkouda.pdarray.nbytes", false], [25, "id581", false], [25, "id650", false]], "nbytes (arkouda.segarray property)": [[25, "arkouda.SegArray.nbytes", false]], "nbytes (arkouda.strings attribute)": [[25, "arkouda.Strings.nbytes", false], [25, "id327", false], [25, "id405", false]], "nbytes() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.nbytes", false]], "nbytes() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.nbytes", false], [39, "id291", false]], "nbytes() (arkouda.str_ method)": [[25, "arkouda.str_.nbytes", false]], "ndim (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.ndim", false]], "ndim (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.ndim", false]], "ndim (arkouda.categorical attribute)": [[101, "arkouda.Categorical.ndim", false]], "ndim (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.ndim", false], [18, "id0", false]], "ndim (arkouda.index property)": [[25, "arkouda.Index.ndim", false]], "ndim (arkouda.index.index property)": [[26, "arkouda.index.Index.ndim", false]], "ndim (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.ndim", false]], "ndim (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.ndim", false]], "ndim (arkouda.numpy.pdarray attribute)": [[39, "arkouda.numpy.pdarray.ndim", false], [39, "id115", false], [39, "id122", false], [39, "id158", false], [39, "id191", false], [39, "id227", false]], "ndim (arkouda.numpy.pdarrayclass.pdarray attribute)": [[46, "arkouda.numpy.pdarrayclass.pdarray.ndim", false], [46, "id3", false]], "ndim (arkouda.numpy.strings attribute)": [[39, "arkouda.numpy.Strings.ndim", false], [39, "id16", false]], "ndim (arkouda.numpy.strings.strings attribute)": [[55, "arkouda.numpy.strings.Strings.ndim", false]], "ndim (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.ndim", false], [25, "id539", false], [25, "id546", false], [25, "id582", false], [25, "id615", false], [25, "id651", false], [107, "arkouda.pdarray.ndim", false]], "ndim (arkouda.series property)": [[25, "arkouda.Series.ndim", false]], "ndim (arkouda.series.series property)": [[65, "arkouda.series.Series.ndim", false]], "ndim (arkouda.strings attribute)": [[25, "arkouda.Strings.ndim", false], [25, "id328", false], [25, "id406", false]], "ndim() (arkouda.bigint method)": [[25, "arkouda.bigint.ndim", false]], "ndim() (arkouda.numpy.bigint method)": [[39, "arkouda.numpy.bigint.ndim", false]], "ndim() (arkouda.numpy.dtypes.bigint method)": [[36, "arkouda.numpy.dtypes.bigint.ndim", false]], "ndim() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.ndim", false]], "ndim() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.ndim", false], [39, "id292", false]], "ndim() (arkouda.str_ method)": [[25, "arkouda.str_.ndim", false]], "negative() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.negative", false]], "newbyteorder() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.newbyteorder", false]], "newbyteorder() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.newbyteorder", false], [39, "id293", false]], "newbyteorder() (arkouda.str_ method)": [[25, "arkouda.str_.newbyteorder", false]], "ngroups (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.ngroups", false], [25, "id128", false], [25, "id175", false], [25, "id222", false], [25, "id269", false], [104, "arkouda.GroupBy.ngroups", false]], "ngroups (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.ngroups", false]], "ngroups (arkouda.numpy.groupby attribute)": [[39, "arkouda.numpy.GroupBy.ngroups", false]], "nkeys (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.nkeys", false], [25, "id124", false], [25, "id171", false], [25, "id218", false], [25, "id265", false], [104, "arkouda.GroupBy.nkeys", false]], "nkeys (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.nkeys", false]], "nkeys (arkouda.numpy.groupby attribute)": [[39, "arkouda.numpy.GroupBy.nkeys", false]], "nlevels (arkouda.categorical attribute)": [[101, "arkouda.Categorical.nlevels", false]], "nlevels (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.nlevels", false], [18, "id1", false]], "nlevels (arkouda.index property)": [[25, "arkouda.Index.nlevels", false]], "nlevels (arkouda.index.index property)": [[26, "arkouda.index.Index.nlevels", false]], "nlevels (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.nlevels", false]], "nlevels (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.nlevels", false]], "non_empty (arkouda.numpy.segarray property)": [[39, "arkouda.numpy.SegArray.non_empty", false]], "non_empty (arkouda.numpy.segarray.segarray property)": [[53, "arkouda.numpy.segarray.SegArray.non_empty", false]], "non_empty (arkouda.segarray property)": [[25, "arkouda.SegArray.non_empty", false]], "nonuniqueerror": [[3, "arkouda.alignment.NonUniqueError", false]], "nonzero() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.nonzero", false]], "nonzero() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.nonzero", false], [39, "id294", false]], "nonzero() (arkouda.str_ method)": [[25, "arkouda.str_.nonzero", false]], "nonzero() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.nonzero", false]], "normal() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.normal", false]], "normal() (in module arkouda.random.generator)": [[108, "arkouda.random.Generator.normal", false]], "normalize() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.normalize", false]], "normalize() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.normalize", false]], "not_equal() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.not_equal", false]], "notebookhistoryretriever (class in arkouda.history)": [[24, "arkouda.history.NotebookHistoryRetriever", false]], "notna() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.notna", false], [25, "id33", false]], "notna() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.notna", false]], "notna() (arkouda.series method)": [[25, "arkouda.Series.notna", false]], "notna() (arkouda.series.series method)": [[65, "arkouda.series.Series.notna", false]], "notnull() (arkouda.series method)": [[25, "arkouda.Series.notnull", false]], "notnull() (arkouda.series.series method)": [[65, "arkouda.series.Series.notnull", false]], "num_matches (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.num_matches", false]], "numargs() (arkouda.scipy.stats.chi2 method)": [[63, "arkouda.scipy.stats.chi2.numargs", false]], "number_format_strings (class in arkouda)": [[25, "arkouda.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (class in arkouda.numpy)": [[39, "arkouda.numpy.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS", false]], "numeric_and_bool_scalars (class in arkouda)": [[25, "arkouda.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (class in arkouda.numpy)": [[39, "arkouda.numpy.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.numeric_and_bool_scalars", false]], "numeric_scalars (class in arkouda)": [[25, "arkouda.numeric_scalars", false]], "numeric_scalars (class in arkouda.numpy)": [[39, "arkouda.numpy.numeric_scalars", false]], "numeric_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.numeric_scalars", false]], "numericdtypes (class in arkouda)": [[25, "arkouda.NumericDTypes", false]], "numericdtypes (class in arkouda.numpy)": [[39, "arkouda.numpy.NumericDTypes", false]], "numericdtypes (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.NumericDTypes", false]], "numpy_scalars (class in arkouda)": [[25, "arkouda.numpy_scalars", false]], "numpy_scalars (class in arkouda.numpy)": [[39, "arkouda.numpy.numpy_scalars", false]], "numpy_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.numpy_scalars", false]], "nunique() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.nunique", false]], "nunique() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.nunique", false]], "nunique() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.nunique", false]], "nunique() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.nunique", false]], "nunique() (arkouda.groupby method)": [[25, "arkouda.GroupBy.nunique", false], [25, "id155", false], [25, "id202", false], [25, "id249", false], [25, "id296", false], [104, "arkouda.GroupBy.nunique", false]], "nunique() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.nunique", false]], "nunique() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.nunique", false]], "nunique() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.nunique", false]], "nunique() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.nunique", false]], "nunique() (arkouda.segarray method)": [[25, "arkouda.SegArray.nunique", false]], "objectdtype (class in arkouda)": [[25, "arkouda.ObjectDType", false]], "objectdtype (class in arkouda.numpy)": [[39, "arkouda.numpy.ObjectDType", false]], "objectdtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ObjectDType", false]], "objtype (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.objType", false]], "objtype (arkouda.index attribute)": [[25, "arkouda.Index.objType", false]], "objtype (arkouda.index.index attribute)": [[26, "arkouda.index.Index.objType", false]], "objtype (arkouda.index.multiindex attribute)": [[26, "arkouda.index.MultiIndex.objType", false]], "objtype (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.objType", false]], "objtype (arkouda.multiindex attribute)": [[25, "arkouda.MultiIndex.objType", false]], "objtype (arkouda.numpy.pdarray attribute)": [[39, "arkouda.numpy.pdarray.objType", false], [39, "id159", false], [39, "id228", false]], "objtype (arkouda.numpy.pdarrayclass.pdarray attribute)": [[46, "arkouda.numpy.pdarrayclass.pdarray.objType", false]], "objtype (arkouda.numpy.segarray attribute)": [[39, "arkouda.numpy.SegArray.objType", false]], "objtype (arkouda.numpy.segarray.segarray attribute)": [[53, "arkouda.numpy.segarray.SegArray.objType", false]], "objtype (arkouda.numpy.strings attribute)": [[39, "arkouda.numpy.Strings.objType", false], [39, "id61", false]], "objtype (arkouda.numpy.strings.strings attribute)": [[55, "arkouda.numpy.strings.Strings.objType", false]], "objtype (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.objType", false], [25, "id583", false], [25, "id652", false]], "objtype (arkouda.segarray attribute)": [[25, "arkouda.SegArray.objType", false]], "objtype (arkouda.strings attribute)": [[25, "arkouda.Strings.objType", false], [25, "id373", false], [25, "id451", false]], "objtype() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.objType", false], [25, "id34", false]], "objtype() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.objType", false]], "objtype() (arkouda.groupby method)": [[25, "arkouda.GroupBy.objType", false], [25, "id156", false], [25, "id203", false], [25, "id250", false], [25, "id297", false]], "objtype() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.objType", false]], "objtype() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.objType", false]], "objtype() (arkouda.series method)": [[25, "arkouda.Series.objType", false]], "objtype() (arkouda.series.series method)": [[65, "arkouda.series.Series.objType", false]], "ones() (in module arkouda)": [[25, "arkouda.ones", false], [25, "id535", false], [102, "arkouda.ones", false]], "ones() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.ones", false]], "ones() (in module arkouda.numpy)": [[39, "arkouda.numpy.ones", false], [39, "id111", false]], "ones() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.ones", false]], "ones_like() (in module arkouda)": [[25, "arkouda.ones_like", false], [102, "arkouda.ones_like", false]], "ones_like() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.ones_like", false]], "ones_like() (in module arkouda.numpy)": [[39, "arkouda.numpy.ones_like", false]], "ones_like() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.ones_like", false]], "opeq() (arkouda.bitvector method)": [[25, "arkouda.BitVector.opeq", false]], "opeq() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.opeq", false]], "opeq() (arkouda.client_dtypes.fields method)": [[20, "arkouda.client_dtypes.Fields.opeq", false]], "opeq() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.opeq", false]], "opeq() (arkouda.fields method)": [[25, "arkouda.Fields.opeq", false]], "opeq() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.opeq", false]], "opeq() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.opeq", false], [39, "id160", false], [39, "id229", false]], "opeq() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.opeq", false]], "opeq() (arkouda.pdarray method)": [[25, "arkouda.pdarray.opeq", false], [25, "id584", false], [25, "id653", false]], "opeqops (arkouda.numpy.pdarray attribute)": [[39, "arkouda.numpy.pdarray.OpEqOps", false], [39, "id126", false], [39, "id195", false]], "opeqops (arkouda.numpy.pdarrayclass.pdarray attribute)": [[46, "arkouda.numpy.pdarrayclass.pdarray.OpEqOps", false]], "opeqops (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.OpEqOps", false], [25, "id550", false], [25, "id619", false]], "optional() (arkouda.annotations method)": [[25, "arkouda.annotations.optional", false]], "optional() (arkouda.numpy.annotations method)": [[39, "arkouda.numpy.annotations.optional", false]], "optional() (arkouda.numpy.dtypes.annotations method)": [[36, "arkouda.numpy.dtypes.annotations.optional", false]], "or() (arkouda.groupby method)": [[25, "arkouda.GroupBy.OR", false], [25, "id133", false], [25, "id180", false], [25, "id227", false], [25, "id274", false], [104, "arkouda.GroupBy.OR", false]], "or() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.OR", false]], "or() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.OR", false]], "or() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.OR", false]], "or() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.OR", false]], "or() (arkouda.segarray method)": [[25, "arkouda.SegArray.OR", false]], "pad (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.pad", false]], "pad (arkouda.fields attribute)": [[25, "arkouda.Fields.pad", false]], "pad() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.pad", false]], "padchar (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.padchar", false]], "padchar (arkouda.fields attribute)": [[25, "arkouda.Fields.padchar", false]], "parent_entry_name (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.parent_entry_name", false]], "parity() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.parity", false], [39, "id161", false], [39, "id230", false]], "parity() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.parity", false]], "parity() (arkouda.pdarray method)": [[25, "arkouda.pdarray.parity", false], [25, "id585", false], [25, "id654", false]], "parity() (in module arkouda)": [[25, "arkouda.parity", false]], "parity() (in module arkouda.numpy)": [[39, "arkouda.numpy.parity", false]], "parity() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.parity", false]], "parse_hdf_categoricals() (arkouda.categorical.categorical static method)": [[18, "arkouda.categorical.Categorical.parse_hdf_categoricals", false]], "pdarray (class in arkouda)": [[25, "arkouda.pdarray", false], [25, "id542", false], [25, "id611", false], [107, "arkouda.pdarray", false]], "pdarray (class in arkouda.numpy)": [[39, "arkouda.numpy.pdarray", false], [39, "id118", false], [39, "id187", false]], "pdarray (class in arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.pdarray", false]], "pdconcat() (arkouda.series method)": [[25, "arkouda.Series.pdconcat", false]], "pdconcat() (arkouda.series.series method)": [[65, "arkouda.series.Series.pdconcat", false]], "pdconcat() (in module arkouda.series)": [[110, "arkouda.Series.pdconcat", false]], "peel() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.peel", false], [39, "id62", false]], "peel() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.peel", false]], "peel() (arkouda.strings method)": [[25, "arkouda.Strings.peel", false], [25, "id374", false], [25, "id452", false]], "permutation (arkouda.categorical attribute)": [[101, "arkouda.Categorical.permutation", false]], "permutation (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.permutation", false], [18, "id2", false]], "permutation (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.permutation", false], [25, "id126", false], [25, "id173", false], [25, "id220", false], [25, "id267", false], [104, "arkouda.GroupBy.permutation", false]], "permutation (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.permutation", false]], "permutation (arkouda.numpy.groupby attribute)": [[39, "arkouda.numpy.GroupBy.permutation", false]], "permutation() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.permutation", false]], "permutation() (in module arkouda.random.generator)": [[108, "arkouda.random.Generator.permutation", false]], "permute_dims() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.permute_dims", false]], "plot_dist() (in module arkouda)": [[25, "arkouda.plot_dist", false]], "plot_dist() (in module arkouda.plotting)": [[59, "arkouda.plotting.plot_dist", false]], "poisson() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.poisson", false]], "poisson() (in module arkouda.random.generator)": [[108, "arkouda.random.Generator.poisson", false]], "pop() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.pop", false]], "pop() (arkouda.numpy.number_format_strings method)": [[39, "arkouda.numpy.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.numpy.seriesdtypes method)": [[39, "arkouda.numpy.SeriesDTypes.pop", false]], "pop() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.pop", false]], "popcount() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.popcount", false], [39, "id162", false], [39, "id231", false]], "popcount() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.popcount", false]], "popcount() (arkouda.pdarray method)": [[25, "arkouda.pdarray.popcount", false], [25, "id586", false], [25, "id655", false]], "popcount() (in module arkouda)": [[25, "arkouda.popcount", false]], "popcount() (in module arkouda.numpy)": [[39, "arkouda.numpy.popcount", false]], "popcount() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.popcount", false]], "popitem() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.popitem", false]], "popitem() (arkouda.numpy.number_format_strings method)": [[39, "arkouda.numpy.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.numpy.seriesdtypes method)": [[39, "arkouda.numpy.SeriesDTypes.popitem", false]], "popitem() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.popitem", false]], "populated (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.populated", false]], "positive() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.positive", false]], "pow() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.pow", false]], "power() (in module arkouda)": [[25, "arkouda.power", false]], "power() (in module arkouda.numpy)": [[39, "arkouda.numpy.power", false]], "power() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.power", false]], "power_divergence() (in module arkouda)": [[25, "arkouda.power_divergence", false]], "power_divergence() (in module arkouda.scipy)": [[61, "arkouda.scipy.power_divergence", false]], "power_divergenceresult (class in arkouda)": [[25, "arkouda.Power_divergenceResult", false]], "power_divergenceresult (class in arkouda.scipy)": [[61, "arkouda.scipy.Power_divergenceResult", false]], "prepend_single() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.prepend_single", false]], "prepend_single() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.prepend_single", false]], "prepend_single() (arkouda.segarray method)": [[25, "arkouda.SegArray.prepend_single", false]], "pretty_print_info() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.pretty_print_info", false]], "pretty_print_info() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.pretty_print_info", false], [39, "id163", false], [39, "id232", false]], "pretty_print_info() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.pretty_print_info", false]], "pretty_print_info() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.pretty_print_info", false], [39, "id63", false]], "pretty_print_info() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.pretty_print_info", false]], "pretty_print_info() (arkouda.pdarray method)": [[25, "arkouda.pdarray.pretty_print_info", false], [25, "id587", false], [25, "id656", false]], "pretty_print_info() (arkouda.strings method)": [[25, "arkouda.Strings.pretty_print_info", false], [25, "id375", false], [25, "id453", false]], "pretty_print_information() (in module arkouda)": [[25, "arkouda.pretty_print_information", false]], "pretty_print_information() (in module arkouda.infoclass)": [[27, "arkouda.infoclass.pretty_print_information", false]], "print_comm_diagnostics_table() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.print_comm_diagnostics_table", false]], "print_server_commands() (in module arkouda.client)": [[19, "arkouda.client.print_server_commands", false]], "prod() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.prod", false]], "prod() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.prod", false]], "prod() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.prod", false]], "prod() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.prod", false]], "prod() (arkouda.groupby method)": [[25, "arkouda.GroupBy.prod", false], [25, "id157", false], [25, "id204", false], [25, "id251", false], [25, "id298", false], [104, "arkouda.GroupBy.prod", false]], "prod() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.prod", false]], "prod() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.prod", false]], "prod() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.prod", false]], "prod() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.prod", false], [39, "id164", false], [39, "id233", false]], "prod() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.prod", false]], "prod() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.prod", false]], "prod() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.prod", false]], "prod() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.prod", false], [39, "id295", false]], "prod() (arkouda.pdarray method)": [[25, "arkouda.pdarray.prod", false], [25, "id588", false], [25, "id657", false], [105, "arkouda.pdarray.prod", false]], "prod() (arkouda.segarray method)": [[25, "arkouda.SegArray.prod", false]], "prod() (arkouda.series method)": [[25, "arkouda.Series.prod", false]], "prod() (arkouda.series.series method)": [[65, "arkouda.series.Series.prod", false]], "prod() (arkouda.str_ method)": [[25, "arkouda.str_.prod", false]], "prod() (in module arkouda)": [[100, "arkouda.prod", false]], "prod() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.prod", false]], "promote_to_common_dtype() (in module arkouda)": [[25, "arkouda.promote_to_common_dtype", false]], "promote_to_common_dtype() (in module arkouda.numpy)": [[39, "arkouda.numpy.promote_to_common_dtype", false]], "promote_to_common_dtype() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.promote_to_common_dtype", false]], "properties (class in arkouda)": [[25, "arkouda.Properties", false]], "properties (class in arkouda.accessor)": [[2, "arkouda.accessor.Properties", false]], "ptp() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.ptp", false]], "ptp() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.ptp", false], [39, "id296", false]], "ptp() (arkouda.str_ method)": [[25, "arkouda.str_.ptp", false]], "purge_cached_regex_patterns() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.purge_cached_regex_patterns", false], [39, "id64", false]], "purge_cached_regex_patterns() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.purge_cached_regex_patterns", false]], "purge_cached_regex_patterns() (arkouda.strings method)": [[25, "arkouda.Strings.purge_cached_regex_patterns", false], [25, "id376", false], [25, "id454", false]], "put() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.put", false]], "put() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.put", false], [39, "id297", false]], "put() (arkouda.str_ method)": [[25, "arkouda.str_.put", false]], "putmask() (in module arkouda)": [[25, "arkouda.putmask", false]], "putmask() (in module arkouda.numpy)": [[39, "arkouda.numpy.putmask", false]], "putmask() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.putmask", false]], "pvalue (arkouda.power_divergenceresult attribute)": [[25, "arkouda.Power_divergenceResult.pvalue", false]], "pvalue (arkouda.scipy.power_divergenceresult attribute)": [[61, "arkouda.scipy.Power_divergenceResult.pvalue", false]], "rad2deg() (in module arkouda)": [[25, "arkouda.rad2deg", false]], "rad2deg() (in module arkouda.numpy)": [[39, "arkouda.numpy.rad2deg", false]], "rad2deg() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.rad2deg", false]], "randint() (in module arkouda)": [[25, "arkouda.randint", false], [102, "arkouda.randint", false]], "randint() (in module arkouda.numpy)": [[39, "arkouda.numpy.randint", false]], "randint() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.randint", false]], "randint() (in module arkouda.numpy.random)": [[51, "arkouda.numpy.random.randint", false]], "random() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.random", false]], "random() (in module arkouda.random.generator)": [[108, "arkouda.random.Generator.random", false]], "random_strings_lognormal() (in module arkouda)": [[25, "arkouda.random_strings_lognormal", false]], "random_strings_lognormal() (in module arkouda.numpy)": [[39, "arkouda.numpy.random_strings_lognormal", false]], "random_strings_lognormal() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.random_strings_lognormal", false]], "random_strings_uniform() (in module arkouda)": [[25, "arkouda.random_strings_uniform", false]], "random_strings_uniform() (in module arkouda.numpy)": [[39, "arkouda.numpy.random_strings_uniform", false]], "random_strings_uniform() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.random_strings_uniform", false]], "ravel() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.ravel", false]], "ravel() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.ravel", false], [39, "id298", false]], "ravel() (arkouda.str_ method)": [[25, "arkouda.str_.ravel", false]], "re (arkouda.match.match attribute)": [[32, "arkouda.match.Match.re", false]], "read() (in module arkouda)": [[25, "arkouda.read", false], [97, "arkouda.read", false]], "read() (in module arkouda.io)": [[28, "arkouda.io.read", false]], "read_csv() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.read_csv", false], [25, "id35", false]], "read_csv() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.read_csv", false]], "read_csv() (in module arkouda)": [[25, "arkouda.read_csv", false]], "read_csv() (in module arkouda.io)": [[28, "arkouda.io.read_csv", false]], "read_hdf() (arkouda.numpy.segarray class method)": [[39, "arkouda.numpy.SegArray.read_hdf", false]], "read_hdf() (arkouda.numpy.segarray.segarray class method)": [[53, "arkouda.numpy.segarray.SegArray.read_hdf", false]], "read_hdf() (arkouda.segarray class method)": [[25, "arkouda.SegArray.read_hdf", false]], "read_hdf() (in module arkouda)": [[25, "arkouda.read_hdf", false]], "read_hdf() (in module arkouda.io)": [[28, "arkouda.io.read_hdf", false]], "read_parquet() (in module arkouda)": [[25, "arkouda.read_parquet", false]], "read_parquet() (in module arkouda.io)": [[28, "arkouda.io.read_parquet", false]], "read_tagged_data() (in module arkouda)": [[25, "arkouda.read_tagged_data", false]], "read_tagged_data() (in module arkouda.io)": [[28, "arkouda.io.read_tagged_data", false]], "read_zarr() (in module arkouda)": [[25, "arkouda.read_zarr", false]], "read_zarr() (in module arkouda.io)": [[28, "arkouda.io.read_zarr", false]], "real() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.real", false]], "real() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.real", false], [39, "id299", false]], "real() (arkouda.str_ method)": [[25, "arkouda.str_.real", false]], "real() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.real", false]], "receive() (in module arkouda)": [[25, "arkouda.receive", false]], "receive() (in module arkouda.io)": [[28, "arkouda.io.receive", false]], "receive_dataframe() (in module arkouda)": [[25, "arkouda.receive_dataframe", false]], "receive_dataframe() (in module arkouda.io)": [[28, "arkouda.io.receive_dataframe", false]], "reductions() (arkouda.groupby method)": [[25, "arkouda.GroupBy.Reductions", false], [25, "id134", false], [25, "id181", false], [25, "id228", false], [25, "id275", false]], "reductions() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.Reductions", false]], "reductions() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.Reductions", false]], "regex_split() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.regex_split", false], [39, "id65", false]], "regex_split() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.regex_split", false]], "regex_split() (arkouda.strings method)": [[25, "arkouda.Strings.regex_split", false], [25, "id377", false], [25, "id455", false]], "register() (arkouda.bitvector method)": [[25, "arkouda.BitVector.register", false]], "register() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.register", false]], "register() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.register", false]], "register() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.register", false]], "register() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.register", false], [25, "id36", false]], "register() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.register", false]], "register() (arkouda.datetime method)": [[25, "arkouda.Datetime.register", false], [25, "id105", false], [25, "id72", false]], "register() (arkouda.groupby method)": [[25, "arkouda.GroupBy.register", false], [25, "id158", false], [25, "id205", false], [25, "id252", false], [25, "id299", false], [104, "arkouda.GroupBy.register", false]], "register() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.register", false]], "register() (arkouda.index method)": [[25, "arkouda.Index.register", false]], "register() (arkouda.index.index method)": [[26, "arkouda.index.Index.register", false]], "register() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.register", false]], "register() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.register", false]], "register() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.register", false]], "register() (arkouda.numpy.datetime method)": [[39, "arkouda.numpy.Datetime.register", false]], "register() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.register", false]], "register() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.register", false], [39, "id165", false], [39, "id234", false]], "register() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.register", false]], "register() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.register", false]], "register() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.register", false]], "register() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.register", false], [39, "id66", false]], "register() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.register", false]], "register() (arkouda.numpy.timeclass.datetime method)": [[56, "arkouda.numpy.timeclass.Datetime.register", false]], "register() (arkouda.numpy.timeclass.timedelta method)": [[56, "arkouda.numpy.timeclass.Timedelta.register", false]], "register() (arkouda.numpy.timedelta method)": [[39, "arkouda.numpy.Timedelta.register", false]], "register() (arkouda.pdarray method)": [[25, "arkouda.pdarray.register", false], [25, "id589", false], [25, "id658", false]], "register() (arkouda.segarray method)": [[25, "arkouda.SegArray.register", false]], "register() (arkouda.series method)": [[25, "arkouda.Series.register", false]], "register() (arkouda.series.series method)": [[65, "arkouda.series.Series.register", false]], "register() (arkouda.strings method)": [[25, "arkouda.Strings.register", false], [25, "id378", false], [25, "id456", false]], "register() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.register", false], [25, "id487", false]], "register() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.register", false]], "register_all() (in module arkouda)": [[25, "arkouda.register_all", false]], "register_all() (in module arkouda.numpy)": [[39, "arkouda.numpy.register_all", false]], "register_all() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.register_all", false]], "registerablepieces (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.RegisterablePieces", false]], "registered_name (arkouda.bitvector attribute)": [[25, "arkouda.BitVector.registered_name", false]], "registered_name (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.registered_name", false]], "registered_name (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.registered_name", false]], "registered_name (arkouda.index attribute)": [[25, "arkouda.Index.registered_name", false]], "registered_name (arkouda.index.index attribute)": [[26, "arkouda.index.Index.registered_name", false]], "registered_name (arkouda.index.multiindex attribute)": [[26, "arkouda.index.MultiIndex.registered_name", false]], "registered_name (arkouda.multiindex attribute)": [[25, "arkouda.MultiIndex.registered_name", false]], "registered_name (arkouda.numpy.pdarray attribute)": [[39, "arkouda.numpy.pdarray.registered_name", false], [39, "id166", false], [39, "id235", false]], "registered_name (arkouda.numpy.pdarrayclass.pdarray attribute)": [[46, "arkouda.numpy.pdarrayclass.pdarray.registered_name", false]], "registered_name (arkouda.numpy.segarray attribute)": [[39, "arkouda.numpy.SegArray.registered_name", false]], "registered_name (arkouda.numpy.segarray.segarray attribute)": [[53, "arkouda.numpy.segarray.SegArray.registered_name", false]], "registered_name (arkouda.numpy.strings attribute)": [[39, "arkouda.numpy.Strings.registered_name", false], [39, "id67", false]], "registered_name (arkouda.numpy.strings.strings attribute)": [[55, "arkouda.numpy.strings.Strings.registered_name", false]], "registered_name (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.registered_name", false], [25, "id590", false], [25, "id659", false]], "registered_name (arkouda.segarray attribute)": [[25, "arkouda.SegArray.registered_name", false]], "registered_name (arkouda.strings attribute)": [[25, "arkouda.Strings.registered_name", false], [25, "id379", false], [25, "id457", false]], "registeredsymbols (in module arkouda)": [[25, "arkouda.RegisteredSymbols", false]], "registeredsymbols (in module arkouda.infoclass)": [[27, "arkouda.infoclass.RegisteredSymbols", false]], "registrationerror": [[25, "arkouda.RegistrationError", false], [25, "id315", false], [25, "id316", false], [39, "arkouda.numpy.RegistrationError", false], [39, "id3", false], [39, "id4", false], [46, "arkouda.numpy.pdarrayclass.RegistrationError", false]], "remainder() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.remainder", false]], "remove_repeats() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.remove_repeats", false]], "remove_repeats() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.remove_repeats", false]], "remove_repeats() (arkouda.segarray method)": [[25, "arkouda.SegArray.remove_repeats", false]], "rename() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.rename", false], [25, "id37", false]], "rename() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.rename", false]], "rename() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.rename", false]], "repeat() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.repeat", false]], "repeat() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.repeat", false], [39, "id300", false]], "repeat() (arkouda.str_ method)": [[25, "arkouda.str_.repeat", false]], "repeat() (in module arkouda)": [[25, "arkouda.repeat", false]], "repeat() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.repeat", false]], "repeat() (in module arkouda.numpy)": [[39, "arkouda.numpy.repeat", false]], "repeat() (in module arkouda.numpy.manipulation_functions)": [[44, "arkouda.numpy.manipulation_functions.repeat", false]], "report_mem() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.report_mem", false]], "requiredpieces (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.RequiredPieces", false]], "reset_categories() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.reset_categories", false]], "reset_comm_diagnostics() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.reset_comm_diagnostics", false]], "reset_index() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.reset_index", false], [25, "id38", false]], "reset_index() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.reset_index", false]], "reset_index() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.reset_index", false]], "reshape() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.reshape", false]], "reshape() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.reshape", false], [39, "id167", false], [39, "id236", false]], "reshape() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.reshape", false]], "reshape() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.reshape", false], [39, "id301", false]], "reshape() (arkouda.pdarray method)": [[25, "arkouda.pdarray.reshape", false], [25, "id591", false], [25, "id660", false]], "reshape() (arkouda.str_ method)": [[25, "arkouda.str_.reshape", false]], "reshape() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.reshape", false]], "resize() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.resize", false]], "resize() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.resize", false], [39, "id302", false]], "resize() (arkouda.str_ method)": [[25, "arkouda.str_.resize", false]], "resolve_scalar_dtype() (in module arkouda)": [[25, "arkouda.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.numpy)": [[39, "arkouda.numpy.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.resolve_scalar_dtype", false]], "restore() (in module arkouda)": [[25, "arkouda.restore", false]], "restore() (in module arkouda.io)": [[28, "arkouda.io.restore", false]], "result_type() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.result_type", false]], "retrieve() (arkouda.history.historyretriever method)": [[24, "arkouda.history.HistoryRetriever.retrieve", false]], "retrieve() (arkouda.history.notebookhistoryretriever method)": [[24, "arkouda.history.NotebookHistoryRetriever.retrieve", false]], "retrieve() (arkouda.history.shellhistoryretriever method)": [[24, "arkouda.history.ShellHistoryRetriever.retrieve", false]], "return_validity (arkouda.errormode attribute)": [[25, "arkouda.ErrorMode.return_validity", false]], "return_validity (arkouda.numpy.errormode attribute)": [[39, "arkouda.numpy.ErrorMode.return_validity", false]], "return_validity (arkouda.numpy.numeric.errormode attribute)": [[45, "arkouda.numpy.numeric.ErrorMode.return_validity", false]], "reverse (arkouda.bitvector attribute)": [[25, "arkouda.BitVector.reverse", false]], "reverse (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.reverse", false]], "right_align() (in module arkouda.alignment)": [[3, "arkouda.alignment.right_align", false]], "roll() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.roll", false]], "rotl() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.rotl", false], [39, "id168", false], [39, "id237", false]], "rotl() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.rotl", false]], "rotl() (arkouda.pdarray method)": [[25, "arkouda.pdarray.rotl", false], [25, "id592", false], [25, "id661", false]], "rotl() (in module arkouda)": [[25, "arkouda.rotl", false]], "rotl() (in module arkouda.numpy)": [[39, "arkouda.numpy.rotl", false]], "rotl() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.rotl", false]], "rotr() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.rotr", false], [39, "id169", false], [39, "id238", false]], "rotr() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.rotr", false]], "rotr() (arkouda.pdarray method)": [[25, "arkouda.pdarray.rotr", false], [25, "id593", false], [25, "id662", false]], "rotr() (in module arkouda)": [[25, "arkouda.rotr", false]], "rotr() (in module arkouda.numpy)": [[39, "arkouda.numpy.rotr", false]], "rotr() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.rotr", false]], "round() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.round", false]], "round() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.round", false], [39, "id303", false]], "round() (arkouda.str_ method)": [[25, "arkouda.str_.round", false]], "round() (in module arkouda)": [[25, "arkouda.round", false]], "round() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.round", false]], "round() (in module arkouda.numpy)": [[39, "arkouda.numpy.round", false]], "round() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.round", false]], "row (class in arkouda)": [[25, "arkouda.Row", false]], "row (class in arkouda.row)": [[60, "arkouda.row.Row", false]], "rpeel() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.rpeel", false], [39, "id68", false]], "rpeel() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.rpeel", false]], "rpeel() (arkouda.strings method)": [[25, "arkouda.Strings.rpeel", false], [25, "id380", false], [25, "id458", false]], "ruok() (in module arkouda.client)": [[19, "arkouda.client.ruok", false]], "sample() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.sample", false], [25, "id39", false]], "sample() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.sample", false]], "sample() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.sample", false]], "sample() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.sample", false]], "sample() (arkouda.groupby method)": [[25, "arkouda.GroupBy.sample", false], [25, "id159", false], [25, "id206", false], [25, "id253", false], [25, "id300", false], [104, "arkouda.GroupBy.sample", false]], "sample() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.sample", false]], "sample() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.sample", false]], "save() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.save", false]], "save() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.save", false], [25, "id40", false]], "save() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.save", false]], "save() (arkouda.index method)": [[25, "arkouda.Index.save", false]], "save() (arkouda.index.index method)": [[26, "arkouda.index.Index.save", false]], "save() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.save", false], [39, "id170", false], [39, "id239", false]], "save() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.save", false]], "save() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.save", false]], "save() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.save", false]], "save() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.save", false], [39, "id69", false]], "save() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.save", false]], "save() (arkouda.pdarray method)": [[25, "arkouda.pdarray.save", false], [25, "id594", false], [25, "id663", false]], "save() (arkouda.segarray method)": [[25, "arkouda.SegArray.save", false]], "save() (arkouda.strings method)": [[25, "arkouda.Strings.save", false], [25, "id381", false], [25, "id459", false]], "save_all() (in module arkouda)": [[25, "arkouda.save_all", false]], "save_all() (in module arkouda.io)": [[28, "arkouda.io.save_all", false]], "save_checkpoint() (in module arkouda)": [[25, "arkouda.save_checkpoint", false]], "save_checkpoint() (in module arkouda.io)": [[28, "arkouda.io.save_checkpoint", false]], "scalar_array() (in module arkouda)": [[25, "arkouda.scalar_array", false]], "scalar_array() (in module arkouda.numpy)": [[39, "arkouda.numpy.scalar_array", false]], "scalar_array() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.scalar_array", false]], "scalardtypes (class in arkouda)": [[25, "arkouda.ScalarDTypes", false]], "scalardtypes (class in arkouda.numpy)": [[39, "arkouda.numpy.ScalarDTypes", false]], "scalardtypes (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ScalarDTypes", false]], "search() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.search", false], [39, "id70", false]], "search() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.search", false]], "search() (arkouda.strings method)": [[25, "arkouda.Strings.search", false], [25, "id382", false], [25, "id460", false]], "search_bool (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.search_bool", false]], "search_ind (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.search_ind", false]], "search_intervals() (in module arkouda.alignment)": [[3, "arkouda.alignment.search_intervals", false]], "searchsorted() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.searchsorted", false]], "searchsorted() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.searchsorted", false], [39, "id304", false]], "searchsorted() (arkouda.str_ method)": [[25, "arkouda.str_.searchsorted", false]], "searchsorted() (in module arkouda)": [[25, "arkouda.searchsorted", false]], "searchsorted() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.searchsorted", false]], "searchsorted() (in module arkouda.numpy)": [[39, "arkouda.numpy.searchsorted", false]], "searchsorted() (in module arkouda.numpy.sorting)": [[54, "arkouda.numpy.sorting.searchsorted", false]], "second (arkouda.datetime property)": [[25, "arkouda.Datetime.second", false], [25, "id106", false], [25, "id73", false]], "second (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.second", false]], "second (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.second", false]], "seconds (arkouda.numpy.timeclass.timedelta property)": [[56, "arkouda.numpy.timeclass.Timedelta.seconds", false]], "seconds (arkouda.numpy.timedelta property)": [[39, "arkouda.numpy.Timedelta.seconds", false]], "seconds (arkouda.timedelta property)": [[25, "arkouda.Timedelta.seconds", false], [25, "id488", false]], "seg_suffix (in module arkouda)": [[25, "arkouda.SEG_SUFFIX", false]], "seg_suffix (in module arkouda.numpy)": [[39, "arkouda.numpy.SEG_SUFFIX", false]], "seg_suffix (in module arkouda.numpy.segarray)": [[53, "arkouda.numpy.segarray.SEG_SUFFIX", false]], "segarray (class in arkouda)": [[25, "arkouda.SegArray", false]], "segarray (class in arkouda.numpy)": [[39, "arkouda.numpy.SegArray", false]], "segarray (class in arkouda.numpy.segarray)": [[53, "arkouda.numpy.segarray.SegArray", false]], "segarray() (in module arkouda)": [[25, "arkouda.segarray", false]], "segarray() (in module arkouda.numpy)": [[39, "arkouda.numpy.segarray", false]], "segarray() (in module arkouda.numpy.segarray)": [[53, "arkouda.numpy.segarray.segarray", false]], "segments (arkouda.categorical attribute)": [[101, "arkouda.Categorical.segments", false]], "segments (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.segments", false], [18, "id3", false]], "segments (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.segments", false], [25, "id129", false], [25, "id176", false], [25, "id223", false], [25, "id270", false], [104, "arkouda.GroupBy.segments", false]], "segments (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.segments", false]], "segments (arkouda.numpy.groupby attribute)": [[39, "arkouda.numpy.GroupBy.segments", false]], "segments (arkouda.numpy.segarray attribute)": [[39, "arkouda.numpy.SegArray.segments", false]], "segments (arkouda.numpy.segarray.segarray attribute)": [[53, "arkouda.numpy.segarray.SegArray.segments", false]], "segments (arkouda.segarray attribute)": [[25, "arkouda.SegArray.segments", false]], "separator (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.separator", false]], "separator (arkouda.fields attribute)": [[25, "arkouda.Fields.separator", false]], "series (arkouda.accessor.datetimeaccessor attribute)": [[2, "arkouda.accessor.DatetimeAccessor.series", false]], "series (arkouda.accessor.stringaccessor attribute)": [[2, "arkouda.accessor.StringAccessor.series", false]], "series (arkouda.datetimeaccessor attribute)": [[25, "arkouda.DatetimeAccessor.series", false]], "series (arkouda.stringaccessor attribute)": [[25, "arkouda.StringAccessor.series", false]], "series (class in arkouda)": [[25, "arkouda.Series", false], [110, "arkouda.Series", false]], "series (class in arkouda.series)": [[65, "arkouda.series.Series", false]], "seriesdtypes (class in arkouda)": [[25, "arkouda.SeriesDTypes", false]], "seriesdtypes (class in arkouda.numpy)": [[39, "arkouda.numpy.SeriesDTypes", false]], "seriesdtypes (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.SeriesDTypes", false]], "set_categories() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.set_categories", false]], "set_dtype() (arkouda.index method)": [[25, "arkouda.Index.set_dtype", false]], "set_dtype() (arkouda.index.index method)": [[26, "arkouda.index.Index.set_dtype", false]], "set_dtype() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.set_dtype", false]], "set_dtype() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.set_dtype", false]], "set_dtype() (in module arkouda.index)": [[98, "arkouda.Index.set_dtype", false]], "set_dtype() (in module arkouda.multiindex)": [[98, "arkouda.MultiIndex.set_dtype", false]], "set_jth() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.set_jth", false]], "set_jth() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.set_jth", false]], "set_jth() (arkouda.segarray method)": [[25, "arkouda.SegArray.set_jth", false]], "setdefault() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.setdefault", false]], "setdefault() (arkouda.numpy.number_format_strings method)": [[39, "arkouda.numpy.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.numpy.seriesdtypes method)": [[39, "arkouda.numpy.SeriesDTypes.setdefault", false]], "setdefault() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.setdefault", false]], "setdiff() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.setdiff", false]], "setdiff() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.setdiff", false]], "setdiff() (arkouda.segarray method)": [[25, "arkouda.SegArray.setdiff", false]], "setdiff1d() (in module arkouda)": [[25, "arkouda.setdiff1d", false], [111, "arkouda.setdiff1d", false]], "setdiff1d() (in module arkouda.numpy)": [[39, "arkouda.numpy.setdiff1d", false]], "setdiff1d() (in module arkouda.numpy.pdarraysetops)": [[49, "arkouda.numpy.pdarraysetops.setdiff1d", false]], "setfield() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.setfield", false]], "setfield() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.setfield", false], [39, "id305", false]], "setfield() (arkouda.str_ method)": [[25, "arkouda.str_.setfield", false]], "setflags() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.setflags", false]], "setflags() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.setflags", false], [39, "id306", false]], "setflags() (arkouda.str_ method)": [[25, "arkouda.str_.setflags", false]], "setxor() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.setxor", false]], "setxor() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.setxor", false]], "setxor() (arkouda.segarray method)": [[25, "arkouda.SegArray.setxor", false]], "setxor1d() (in module arkouda)": [[25, "arkouda.setxor1d", false], [111, "arkouda.setxor1d", false]], "setxor1d() (in module arkouda.numpy)": [[39, "arkouda.numpy.setxor1d", false]], "setxor1d() (in module arkouda.numpy.pdarraysetops)": [[49, "arkouda.numpy.pdarraysetops.setxor1d", false]], "shape (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.shape", false]], "shape (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.shape", false]], "shape (arkouda.categorical attribute)": [[101, "arkouda.Categorical.shape", false]], "shape (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.shape", false], [18, "id4", false]], "shape (arkouda.dataframe property)": [[25, "arkouda.DataFrame.shape", false], [25, "id41", false]], "shape (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.shape", false]], "shape (arkouda.index property)": [[25, "arkouda.Index.shape", false]], "shape (arkouda.index.index property)": [[26, "arkouda.index.Index.shape", false]], "shape (arkouda.numpy.pdarray attribute)": [[39, "arkouda.numpy.pdarray.shape", false], [39, "id123", false], [39, "id192", false]], "shape (arkouda.numpy.pdarray property)": [[39, "id116", false], [39, "id171", false], [39, "id240", false]], "shape (arkouda.numpy.pdarrayclass.pdarray attribute)": [[46, "arkouda.numpy.pdarrayclass.pdarray.shape", false]], "shape (arkouda.numpy.pdarrayclass.pdarray property)": [[46, "id4", false]], "shape (arkouda.numpy.strings attribute)": [[39, "arkouda.numpy.Strings.shape", false], [39, "id10", false], [39, "id17", false], [39, "id71", false]], "shape (arkouda.numpy.strings.strings attribute)": [[55, "arkouda.numpy.strings.Strings.shape", false], [55, "id3", false]], "shape (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.shape", false], [25, "id547", false], [25, "id616", false], [107, "arkouda.pdarray.shape", false]], "shape (arkouda.pdarray property)": [[25, "id540", false], [25, "id595", false], [25, "id664", false]], "shape (arkouda.series property)": [[25, "arkouda.Series.shape", false]], "shape (arkouda.series.series property)": [[65, "arkouda.series.Series.shape", false]], "shape (arkouda.strings attribute)": [[25, "arkouda.Strings.shape", false], [25, "id322", false], [25, "id329", false], [25, "id383", false], [25, "id407", false], [25, "id461", false]], "shape() (arkouda.bigint method)": [[25, "arkouda.bigint.shape", false]], "shape() (arkouda.numpy.bigint method)": [[39, "arkouda.numpy.bigint.shape", false]], "shape() (arkouda.numpy.dtypes.bigint method)": [[36, "arkouda.numpy.dtypes.bigint.shape", false]], "shape() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.shape", false]], "shape() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.shape", false], [39, "id307", false]], "shape() (arkouda.str_ method)": [[25, "arkouda.str_.shape", false]], "shape() (in module arkouda)": [[25, "arkouda.shape", false]], "shape() (in module arkouda.numpy)": [[39, "arkouda.numpy.shape", false]], "shape() (in module arkouda.numpy.utils)": [[58, "arkouda.numpy.utils.shape", false]], "shapes() (arkouda.scipy.stats.chi2 method)": [[63, "arkouda.scipy.stats.chi2.shapes", false]], "shellhistoryretriever (class in arkouda.history)": [[24, "arkouda.history.ShellHistoryRetriever", false]], "shortdtype (class in arkouda)": [[25, "arkouda.ShortDType", false]], "shortdtype (class in arkouda.numpy)": [[39, "arkouda.numpy.ShortDType", false]], "shortdtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ShortDType", false]], "show_int (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.show_int", false]], "show_int (arkouda.fields attribute)": [[25, "arkouda.Fields.show_int", false]], "shuffle() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.shuffle", false]], "shuffle() (in module arkouda.random.generator)": [[108, "arkouda.random.Generator.shuffle", false]], "shutdown() (in module arkouda.client)": [[19, "arkouda.client.shutdown", false]], "sign() (in module arkouda)": [[25, "arkouda.sign", false]], "sign() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.sign", false]], "sign() (in module arkouda.numpy)": [[39, "arkouda.numpy.sign", false]], "sign() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.sign", false]], "sin() (in module arkouda)": [[25, "arkouda.sin", false], [100, "arkouda.sin", false]], "sin() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.sin", false]], "sin() (in module arkouda.numpy)": [[39, "arkouda.numpy.sin", false]], "sin() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.sin", false]], "sinh() (in module arkouda)": [[25, "arkouda.sinh", false]], "sinh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.sinh", false]], "sinh() (in module arkouda.numpy)": [[39, "arkouda.numpy.sinh", false]], "sinh() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.sinh", false]], "size (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.size", false]], "size (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.size", false]], "size (arkouda.categorical attribute)": [[101, "arkouda.Categorical.size", false]], "size (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.size", false], [18, "id5", false]], "size (arkouda.dataframe property)": [[25, "arkouda.DataFrame.size", false], [25, "id42", false]], "size (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.size", false]], "size (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.size", false], [25, "id125", false], [25, "id172", false], [25, "id219", false], [25, "id266", false], [104, "arkouda.GroupBy.size", false]], "size (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.size", false]], "size (arkouda.numpy.groupby attribute)": [[39, "arkouda.numpy.GroupBy.size", false]], "size (arkouda.numpy.pdarray attribute)": [[39, "arkouda.numpy.pdarray.size", false], [39, "id117", false], [39, "id121", false], [39, "id172", false], [39, "id190", false], [39, "id241", false]], "size (arkouda.numpy.pdarrayclass.pdarray attribute)": [[46, "arkouda.numpy.pdarrayclass.pdarray.size", false], [46, "id5", false]], "size (arkouda.numpy.segarray attribute)": [[39, "arkouda.numpy.SegArray.size", false]], "size (arkouda.numpy.segarray.segarray attribute)": [[53, "arkouda.numpy.segarray.SegArray.size", false]], "size (arkouda.numpy.strings attribute)": [[39, "arkouda.numpy.Strings.size", false], [39, "id11", false], [39, "id14", false], [39, "id72", false]], "size (arkouda.numpy.strings.strings attribute)": [[55, "arkouda.numpy.strings.Strings.size", false], [55, "id4", false]], "size (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.size", false], [25, "id541", false], [25, "id545", false], [25, "id596", false], [25, "id614", false], [25, "id665", false], [107, "arkouda.pdarray.size", false]], "size (arkouda.segarray attribute)": [[25, "arkouda.SegArray.size", false]], "size (arkouda.strings attribute)": [[25, "arkouda.Strings.size", false], [25, "id323", false], [25, "id326", false], [25, "id384", false], [25, "id404", false], [25, "id462", false]], "size() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.size", false]], "size() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.size", false]], "size() (arkouda.groupby method)": [[25, "id122", false], [25, "id160", false], [25, "id207", false], [25, "id254", false], [25, "id301", false], [104, "id0", false]], "size() (arkouda.groupbyclass.groupby method)": [[23, "id0", false]], "size() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.size", false]], "size() (arkouda.numpy.groupby method)": [[39, "id0", false]], "size() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.size", false], [39, "id308", false]], "size() (arkouda.str_ method)": [[25, "arkouda.str_.size", false]], "skew() (in module arkouda)": [[25, "arkouda.skew", false]], "slice_bits() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.slice_bits", false], [39, "id173", false], [39, "id242", false]], "slice_bits() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.slice_bits", false]], "slice_bits() (arkouda.pdarray method)": [[25, "arkouda.pdarray.slice_bits", false], [25, "id597", false], [25, "id666", false]], "smallest_normal (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.smallest_normal", false]], "snapshot() (in module arkouda)": [[25, "arkouda.snapshot", false]], "snapshot() (in module arkouda.io)": [[28, "arkouda.io.snapshot", false]], "sort() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.sort", false]], "sort() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.sort", false], [39, "id309", false]], "sort() (arkouda.str_ method)": [[25, "arkouda.str_.sort", false]], "sort() (in module arkouda)": [[25, "arkouda.sort", false]], "sort() (in module arkouda.array_api.sorting_functions)": [[15, "arkouda.array_api.sorting_functions.sort", false]], "sort() (in module arkouda.numpy)": [[39, "arkouda.numpy.sort", false]], "sort() (in module arkouda.numpy.sorting)": [[54, "arkouda.numpy.sorting.sort", false]], "sort_index() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.sort_index", false], [25, "id43", false]], "sort_index() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.sort_index", false]], "sort_index() (arkouda.series method)": [[25, "arkouda.Series.sort_index", false]], "sort_index() (arkouda.series.series method)": [[65, "arkouda.series.Series.sort_index", false]], "sort_index() (in module arkouda.series)": [[110, "arkouda.Series.sort_index", false]], "sort_values() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.sort_values", false]], "sort_values() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.sort_values", false], [25, "id44", false]], "sort_values() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.sort_values", false]], "sort_values() (arkouda.series method)": [[25, "arkouda.Series.sort_values", false]], "sort_values() (arkouda.series.series method)": [[65, "arkouda.series.Series.sort_values", false]], "sort_values() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.sort_values", false]], "sort_values() (in module arkouda.series)": [[110, "arkouda.Series.sort_values", false]], "sortingalgorithm (in module arkouda)": [[25, "arkouda.SortingAlgorithm", false]], "sortingalgorithm (in module arkouda.numpy)": [[39, "arkouda.numpy.SortingAlgorithm", false]], "sortingalgorithm (in module arkouda.numpy.sorting)": [[54, "arkouda.numpy.sorting.SortingAlgorithm", false]], "sparse_sum_help() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.sparse_sum_help", false]], "special_objtype (arkouda.bitvector attribute)": [[25, "arkouda.BitVector.special_objType", false]], "special_objtype (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.special_objType", false]], "special_objtype (arkouda.client_dtypes.ipv4 attribute)": [[20, "arkouda.client_dtypes.IPv4.special_objType", false]], "special_objtype (arkouda.datetime attribute)": [[25, "arkouda.Datetime.special_objType", false], [25, "id107", false], [25, "id74", false]], "special_objtype (arkouda.ipv4 attribute)": [[25, "arkouda.IPv4.special_objType", false]], "special_objtype (arkouda.numpy.datetime attribute)": [[39, "arkouda.numpy.Datetime.special_objType", false]], "special_objtype (arkouda.numpy.timeclass.datetime attribute)": [[56, "arkouda.numpy.timeclass.Datetime.special_objType", false]], "special_objtype (arkouda.numpy.timeclass.timedelta attribute)": [[56, "arkouda.numpy.timeclass.Timedelta.special_objType", false]], "special_objtype (arkouda.numpy.timedelta attribute)": [[39, "arkouda.numpy.Timedelta.special_objType", false]], "special_objtype (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.special_objType", false], [25, "id489", false]], "split() (arkouda.matcher.matcher method)": [[33, "arkouda.matcher.Matcher.split", false]], "split() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.split", false], [39, "id73", false]], "split() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.split", false]], "split() (arkouda.strings method)": [[25, "arkouda.Strings.split", false], [25, "id385", false], [25, "id463", false]], "sqrt() (in module arkouda)": [[25, "arkouda.sqrt", false]], "sqrt() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.sqrt", false]], "sqrt() (in module arkouda.numpy)": [[39, "arkouda.numpy.sqrt", false]], "sqrt() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.sqrt", false]], "square() (in module arkouda)": [[25, "arkouda.square", false]], "square() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.square", false]], "square() (in module arkouda.numpy)": [[39, "arkouda.numpy.square", false]], "square() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.square", false]], "squeeze() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.squeeze", false]], "squeeze() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.squeeze", false], [39, "id310", false]], "squeeze() (arkouda.str_ method)": [[25, "arkouda.str_.squeeze", false]], "squeeze() (in module arkouda)": [[25, "arkouda.squeeze", false]], "squeeze() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.squeeze", false]], "squeeze() (in module arkouda.numpy)": [[39, "arkouda.numpy.squeeze", false]], "squeeze() (in module arkouda.numpy.manipulation_functions)": [[44, "arkouda.numpy.manipulation_functions.squeeze", false]], "stack() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.stack", false]], "standard_exponential() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.standard_exponential", false]], "standard_exponential() (in module arkouda.random.generator)": [[108, "arkouda.random.Generator.standard_exponential", false]], "standard_gamma() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.standard_gamma", false]], "standard_normal() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.standard_normal", false]], "standard_normal() (in module arkouda)": [[25, "arkouda.standard_normal", false]], "standard_normal() (in module arkouda.numpy)": [[39, "arkouda.numpy.standard_normal", false]], "standard_normal() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.standard_normal", false]], "standard_normal() (in module arkouda.numpy.random)": [[51, "arkouda.numpy.random.standard_normal", false]], "standard_normal() (in module arkouda.random.generator)": [[108, "arkouda.random.Generator.standard_normal", false]], "standardize_categories() (arkouda.categorical.categorical class method)": [[18, "arkouda.categorical.Categorical.standardize_categories", false]], "start() (arkouda.match.match method)": [[32, "arkouda.match.Match.start", false], [113, "arkouda.match.Match.start", false]], "start_comm_diagnostics() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.start_comm_diagnostics", false]], "start_verbose_comm() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.start_verbose_comm", false]], "starts (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.starts", false]], "startswith() (arkouda.categorical method)": [[101, "arkouda.Categorical.startswith", false]], "startswith() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.startswith", false]], "startswith() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.startswith", false], [39, "id74", false]], "startswith() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.startswith", false]], "startswith() (arkouda.strings method)": [[25, "arkouda.Strings.startswith", false], [25, "id386", false], [25, "id464", false]], "statistic (arkouda.power_divergenceresult attribute)": [[25, "arkouda.Power_divergenceResult.statistic", false]], "statistic (arkouda.scipy.power_divergenceresult attribute)": [[61, "arkouda.scipy.Power_divergenceResult.statistic", false]], "std() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.std", false]], "std() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.std", false]], "std() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.std", false]], "std() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.std", false]], "std() (arkouda.groupby method)": [[25, "arkouda.GroupBy.std", false], [25, "id161", false], [25, "id208", false], [25, "id255", false], [25, "id302", false], [104, "arkouda.GroupBy.std", false]], "std() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.std", false]], "std() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.std", false]], "std() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.std", false]], "std() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.std", false], [39, "id174", false], [39, "id243", false]], "std() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.std", false]], "std() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.std", false], [39, "id311", false]], "std() (arkouda.numpy.timeclass.timedelta method)": [[56, "arkouda.numpy.timeclass.Timedelta.std", false]], "std() (arkouda.numpy.timedelta method)": [[39, "arkouda.numpy.Timedelta.std", false]], "std() (arkouda.pdarray method)": [[25, "arkouda.pdarray.std", false], [25, "id598", false], [25, "id667", false], [105, "arkouda.pdarray.std", false]], "std() (arkouda.series method)": [[25, "arkouda.Series.std", false]], "std() (arkouda.series.series method)": [[65, "arkouda.series.Series.std", false]], "std() (arkouda.str_ method)": [[25, "arkouda.str_.std", false]], "std() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.std", false], [25, "id490", false]], "std() (in module arkouda)": [[25, "arkouda.std", false], [100, "arkouda.std", false]], "std() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.std", false]], "std() (in module arkouda.numpy)": [[39, "arkouda.numpy.std", false]], "std() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.std", false]], "stick() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.stick", false], [39, "id75", false]], "stick() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.stick", false]], "stick() (arkouda.strings method)": [[25, "arkouda.Strings.stick", false], [25, "id387", false], [25, "id465", false]], "stop_comm_diagnostics() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.stop_comm_diagnostics", false]], "stop_verbose_comm() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.stop_verbose_comm", false]], "str() (arkouda.dtype method)": [[25, "arkouda.DType.STR", false]], "str() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.STR", false]], "str() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.STR", false]], "str_ (class in arkouda)": [[25, "arkouda.str_", false]], "str_ (class in arkouda.numpy)": [[39, "arkouda.numpy.str_", false], [39, "id256", false]], "str_ (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.str_", false]], "str_acc() (arkouda.series method)": [[25, "arkouda.Series.str_acc", false]], "str_acc() (arkouda.series.series method)": [[65, "arkouda.series.Series.str_acc", false]], "str_scalars (class in arkouda)": [[25, "arkouda.str_scalars", false]], "str_scalars (class in arkouda.numpy)": [[39, "arkouda.numpy.str_scalars", false]], "str_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.str_scalars", false]], "strdtype (class in arkouda)": [[25, "arkouda.StrDType", false]], "strdtype (class in arkouda.numpy)": [[39, "arkouda.numpy.StrDType", false]], "strdtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.StrDType", false]], "strict (arkouda.errormode attribute)": [[25, "arkouda.ErrorMode.strict", false]], "strict (arkouda.numpy.errormode attribute)": [[39, "arkouda.numpy.ErrorMode.strict", false]], "strict (arkouda.numpy.numeric.errormode attribute)": [[45, "arkouda.numpy.numeric.ErrorMode.strict", false]], "strides() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.strides", false]], "strides() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.strides", false], [39, "id312", false]], "strides() (arkouda.str_ method)": [[25, "arkouda.str_.strides", false]], "string_operators() (in module arkouda)": [[25, "arkouda.string_operators", false]], "string_operators() (in module arkouda.accessor)": [[2, "arkouda.accessor.string_operators", false]], "stringaccessor (class in arkouda)": [[25, "arkouda.StringAccessor", false]], "stringaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.StringAccessor", false]], "strings (class in arkouda)": [[25, "arkouda.Strings", false], [25, "id324", false], [25, "id402", false]], "strings (class in arkouda.numpy)": [[39, "arkouda.numpy.Strings", false], [39, "id12", false]], "strings (class in arkouda.numpy.strings)": [[55, "arkouda.numpy.strings.Strings", false]], "strip() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.strip", false], [39, "id76", false]], "strip() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.strip", false]], "strip() (arkouda.strings method)": [[25, "arkouda.Strings.strip", false], [25, "id388", false], [25, "id466", false]], "sub() (arkouda.matcher.matcher method)": [[33, "arkouda.matcher.Matcher.sub", false]], "sub() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.sub", false], [39, "id77", false]], "sub() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.sub", false]], "sub() (arkouda.strings method)": [[25, "arkouda.Strings.sub", false], [25, "id389", false], [25, "id467", false]], "subn() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.subn", false], [39, "id78", false]], "subn() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.subn", false]], "subn() (arkouda.strings method)": [[25, "arkouda.Strings.subn", false], [25, "id390", false], [25, "id468", false]], "subtract() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.subtract", false]], "sum() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.sum", false]], "sum() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.sum", false]], "sum() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.sum", false]], "sum() (arkouda.datetime method)": [[25, "arkouda.Datetime.sum", false], [25, "id108", false], [25, "id75", false]], "sum() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.sum", false]], "sum() (arkouda.groupby method)": [[25, "arkouda.GroupBy.sum", false], [25, "id162", false], [25, "id209", false], [25, "id256", false], [25, "id303", false], [104, "arkouda.GroupBy.sum", false]], "sum() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.sum", false]], "sum() (arkouda.numpy.datetime method)": [[39, "arkouda.numpy.Datetime.sum", false]], "sum() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.sum", false]], "sum() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.sum", false]], "sum() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.sum", false], [39, "id175", false], [39, "id244", false]], "sum() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.sum", false]], "sum() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.sum", false]], "sum() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.sum", false]], "sum() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.sum", false], [39, "id313", false]], "sum() (arkouda.numpy.timeclass.datetime method)": [[56, "arkouda.numpy.timeclass.Datetime.sum", false]], "sum() (arkouda.numpy.timeclass.timedelta method)": [[56, "arkouda.numpy.timeclass.Timedelta.sum", false]], "sum() (arkouda.numpy.timedelta method)": [[39, "arkouda.numpy.Timedelta.sum", false]], "sum() (arkouda.pdarray method)": [[25, "arkouda.pdarray.sum", false], [25, "id599", false], [25, "id668", false], [105, "arkouda.pdarray.sum", false]], "sum() (arkouda.segarray method)": [[25, "arkouda.SegArray.sum", false]], "sum() (arkouda.series method)": [[25, "arkouda.Series.sum", false]], "sum() (arkouda.series.series method)": [[65, "arkouda.series.Series.sum", false]], "sum() (arkouda.str_ method)": [[25, "arkouda.str_.sum", false]], "sum() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.sum", false], [25, "id491", false]], "sum() (in module arkouda)": [[100, "arkouda.sum", false]], "sum() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.sum", false]], "supported_opeq (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_opeq", false], [25, "id109", false], [25, "id76", false]], "supported_opeq (arkouda.numpy.datetime attribute)": [[39, "arkouda.numpy.Datetime.supported_opeq", false]], "supported_opeq (arkouda.numpy.timeclass.datetime attribute)": [[56, "arkouda.numpy.timeclass.Datetime.supported_opeq", false]], "supported_opeq (arkouda.numpy.timeclass.timedelta attribute)": [[56, "arkouda.numpy.timeclass.Timedelta.supported_opeq", false]], "supported_opeq (arkouda.numpy.timedelta attribute)": [[39, "arkouda.numpy.Timedelta.supported_opeq", false]], "supported_opeq (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_opeq", false], [25, "id492", false]], "supported_with_datetime (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_with_datetime", false], [25, "id110", false], [25, "id77", false]], "supported_with_datetime (arkouda.numpy.datetime attribute)": [[39, "arkouda.numpy.Datetime.supported_with_datetime", false]], "supported_with_datetime (arkouda.numpy.timeclass.datetime attribute)": [[56, "arkouda.numpy.timeclass.Datetime.supported_with_datetime", false]], "supported_with_datetime (arkouda.numpy.timeclass.timedelta attribute)": [[56, "arkouda.numpy.timeclass.Timedelta.supported_with_datetime", false]], "supported_with_datetime (arkouda.numpy.timedelta attribute)": [[39, "arkouda.numpy.Timedelta.supported_with_datetime", false]], "supported_with_datetime (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_with_datetime", false], [25, "id493", false]], "supported_with_pdarray (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_with_pdarray", false], [25, "id111", false], [25, "id78", false]], "supported_with_pdarray (arkouda.numpy.datetime attribute)": [[39, "arkouda.numpy.Datetime.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.numpy.timeclass.datetime attribute)": [[56, "arkouda.numpy.timeclass.Datetime.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.numpy.timeclass.timedelta attribute)": [[56, "arkouda.numpy.timeclass.Timedelta.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.numpy.timedelta attribute)": [[39, "arkouda.numpy.Timedelta.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_with_pdarray", false], [25, "id494", false]], "supported_with_r_datetime (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_with_r_datetime", false], [25, "id112", false], [25, "id79", false]], "supported_with_r_datetime (arkouda.numpy.datetime attribute)": [[39, "arkouda.numpy.Datetime.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.numpy.timeclass.datetime attribute)": [[56, "arkouda.numpy.timeclass.Datetime.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.numpy.timeclass.timedelta attribute)": [[56, "arkouda.numpy.timeclass.Timedelta.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.numpy.timedelta attribute)": [[39, "arkouda.numpy.Timedelta.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_with_r_datetime", false], [25, "id495", false]], "supported_with_r_pdarray (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_with_r_pdarray", false], [25, "id113", false], [25, "id80", false]], "supported_with_r_pdarray (arkouda.numpy.datetime attribute)": [[39, "arkouda.numpy.Datetime.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.numpy.timeclass.datetime attribute)": [[56, "arkouda.numpy.timeclass.Datetime.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.numpy.timeclass.timedelta attribute)": [[56, "arkouda.numpy.timeclass.Timedelta.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.numpy.timedelta attribute)": [[39, "arkouda.numpy.Timedelta.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_with_r_pdarray", false], [25, "id496", false]], "supported_with_r_timedelta (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_with_r_timedelta", false], [25, "id114", false], [25, "id81", false]], "supported_with_r_timedelta (arkouda.numpy.datetime attribute)": [[39, "arkouda.numpy.Datetime.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.numpy.timeclass.datetime attribute)": [[56, "arkouda.numpy.timeclass.Datetime.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.numpy.timeclass.timedelta attribute)": [[56, "arkouda.numpy.timeclass.Timedelta.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.numpy.timedelta attribute)": [[39, "arkouda.numpy.Timedelta.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_with_r_timedelta", false], [25, "id497", false]], "supported_with_timedelta (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_with_timedelta", false], [25, "id115", false], [25, "id82", false]], "supported_with_timedelta (arkouda.numpy.datetime attribute)": [[39, "arkouda.numpy.Datetime.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.numpy.timeclass.datetime attribute)": [[56, "arkouda.numpy.timeclass.Datetime.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.numpy.timeclass.timedelta attribute)": [[56, "arkouda.numpy.timeclass.Timedelta.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.numpy.timedelta attribute)": [[39, "arkouda.numpy.Timedelta.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_with_timedelta", false], [25, "id498", false]], "swapaxes() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.swapaxes", false]], "swapaxes() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.swapaxes", false], [39, "id314", false]], "swapaxes() (arkouda.str_ method)": [[25, "arkouda.str_.swapaxes", false]], "symmetric_difference() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes method)": [[25, "arkouda.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.inttypes method)": [[25, "arkouda.intTypes.symmetric_difference", false], [25, "id531", false]], "symmetric_difference() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypeobjects method)": [[39, "arkouda.numpy.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes method)": [[39, "arkouda.numpy.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.inttypes method)": [[39, "arkouda.numpy.intTypes.symmetric_difference", false], [39, "id105", false]], "symmetric_difference() (arkouda.numpy.numericdtypes method)": [[39, "arkouda.numpy.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.scalardtypes method)": [[39, "arkouda.numpy.ScalarDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.symmetric_difference", false]], "t (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.T", false]], "t (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.T", false]], "t() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.T", false]], "t() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.T", false], [39, "id257", false]], "t() (arkouda.str_ method)": [[25, "arkouda.str_.T", false]], "tail() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.tail", false], [25, "id45", false]], "tail() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.tail", false]], "tail() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.tail", false]], "tail() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.tail", false]], "tail() (arkouda.groupby method)": [[25, "arkouda.GroupBy.tail", false], [25, "id163", false], [25, "id210", false], [25, "id257", false], [25, "id304", false], [104, "arkouda.GroupBy.tail", false]], "tail() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.tail", false]], "tail() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.tail", false]], "tail() (arkouda.series method)": [[25, "arkouda.Series.tail", false]], "tail() (arkouda.series.series method)": [[65, "arkouda.series.Series.tail", false]], "tail() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.tail", false]], "tail() (in module arkouda.series)": [[110, "arkouda.Series.tail", false]], "take() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.take", false]], "take() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.take", false], [39, "id315", false]], "take() (arkouda.str_ method)": [[25, "arkouda.str_.take", false]], "take() (in module arkouda.array_api.indexing_functions)": [[10, "arkouda.array_api.indexing_functions.take", false]], "tan() (in module arkouda)": [[25, "arkouda.tan", false]], "tan() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.tan", false]], "tan() (in module arkouda.numpy)": [[39, "arkouda.numpy.tan", false]], "tan() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.tan", false]], "tanh() (in module arkouda)": [[25, "arkouda.tanh", false]], "tanh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.tanh", false]], "tanh() (in module arkouda.numpy)": [[39, "arkouda.numpy.tanh", false]], "tanh() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.tanh", false]], "tensordot() (in module arkouda.array_api.linalg)": [[11, "arkouda.array_api.linalg.tensordot", false]], "tile() (in module arkouda)": [[25, "arkouda.tile", false]], "tile() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.tile", false]], "tile() (in module arkouda.numpy)": [[39, "arkouda.numpy.tile", false]], "tile() (in module arkouda.numpy.manipulation_functions)": [[44, "arkouda.numpy.manipulation_functions.tile", false]], "timedelta (class in arkouda)": [[25, "arkouda.Timedelta", false], [25, "id480", false]], "timedelta (class in arkouda.numpy)": [[39, "arkouda.numpy.Timedelta", false]], "timedelta (class in arkouda.numpy.timeclass)": [[56, "arkouda.numpy.timeclass.Timedelta", false]], "timedelta64dtype (class in arkouda)": [[25, "arkouda.TimeDelta64DType", false]], "timedelta64dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.TimeDelta64DType", false]], "timedelta64dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.TimeDelta64DType", false]], "timedelta_range() (in module arkouda)": [[25, "arkouda.timedelta_range", false], [25, "id682", false]], "timedelta_range() (in module arkouda.numpy)": [[39, "arkouda.numpy.timedelta_range", false]], "timedelta_range() (in module arkouda.numpy.timeclass)": [[56, "arkouda.numpy.timeclass.timedelta_range", false]], "title() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.title", false], [39, "id79", false]], "title() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.title", false]], "title() (arkouda.strings method)": [[25, "arkouda.Strings.title", false], [25, "id391", false], [25, "id469", false]], "to_csv() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.to_csv", false], [25, "id46", false]], "to_csv() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_csv", false]], "to_csv() (arkouda.index method)": [[25, "arkouda.Index.to_csv", false]], "to_csv() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_csv", false]], "to_csv() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.to_csv", false], [39, "id176", false], [39, "id245", false]], "to_csv() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.to_csv", false]], "to_csv() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.to_csv", false], [39, "id80", false]], "to_csv() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.to_csv", false]], "to_csv() (arkouda.pdarray method)": [[25, "arkouda.pdarray.to_csv", false], [25, "id600", false], [25, "id669", false]], "to_csv() (arkouda.strings method)": [[25, "arkouda.Strings.to_csv", false], [25, "id392", false], [25, "id470", false]], "to_csv() (in module arkouda)": [[25, "arkouda.to_csv", false]], "to_csv() (in module arkouda.io)": [[28, "arkouda.io.to_csv", false]], "to_cuda() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.to_cuda", false], [39, "id177", false], [39, "id246", false]], "to_cuda() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.to_cuda", false]], "to_cuda() (arkouda.pdarray method)": [[25, "arkouda.pdarray.to_cuda", false], [25, "id601", false], [25, "id670", false]], "to_dataframe() (arkouda.series method)": [[25, "arkouda.Series.to_dataframe", false]], "to_dataframe() (arkouda.series.series method)": [[65, "arkouda.series.Series.to_dataframe", false]], "to_device() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.to_device", false]], "to_device() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.to_device", false]], "to_dict() (arkouda.index method)": [[25, "arkouda.Index.to_dict", false]], "to_dict() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_dict", false]], "to_dict() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.to_dict", false]], "to_dict() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.to_dict", false]], "to_hdf() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_hdf", false]], "to_hdf() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.to_hdf", false]], "to_hdf() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.to_hdf", false], [25, "id47", false]], "to_hdf() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_hdf", false]], "to_hdf() (arkouda.groupby method)": [[25, "arkouda.GroupBy.to_hdf", false], [25, "id164", false], [25, "id211", false], [25, "id258", false], [25, "id305", false], [104, "arkouda.GroupBy.to_hdf", false]], "to_hdf() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.to_hdf", false]], "to_hdf() (arkouda.index method)": [[25, "arkouda.Index.to_hdf", false]], "to_hdf() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_hdf", false]], "to_hdf() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.to_hdf", false]], "to_hdf() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.to_hdf", false]], "to_hdf() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.to_hdf", false]], "to_hdf() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.to_hdf", false]], "to_hdf() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.to_hdf", false], [39, "id178", false], [39, "id247", false]], "to_hdf() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.to_hdf", false]], "to_hdf() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.to_hdf", false]], "to_hdf() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.to_hdf", false]], "to_hdf() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.to_hdf", false], [39, "id81", false]], "to_hdf() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.to_hdf", false]], "to_hdf() (arkouda.pdarray method)": [[25, "arkouda.pdarray.to_hdf", false], [25, "id602", false], [25, "id671", false]], "to_hdf() (arkouda.segarray method)": [[25, "arkouda.SegArray.to_hdf", false]], "to_hdf() (arkouda.strings method)": [[25, "arkouda.Strings.to_hdf", false], [25, "id393", false], [25, "id471", false]], "to_hdf() (in module arkouda)": [[25, "arkouda.to_hdf", false]], "to_hdf() (in module arkouda.io)": [[28, "arkouda.io.to_hdf", false]], "to_list() (arkouda.bitvector method)": [[25, "arkouda.BitVector.to_list", false]], "to_list() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_list", false]], "to_list() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.to_list", false]], "to_list() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.to_list", false]], "to_list() (arkouda.index method)": [[25, "arkouda.Index.to_list", false]], "to_list() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_list", false]], "to_list() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.to_list", false]], "to_list() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.to_list", false]], "to_list() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.to_list", false]], "to_list() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.to_list", false], [39, "id179", false], [39, "id248", false]], "to_list() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.to_list", false]], "to_list() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.to_list", false]], "to_list() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.to_list", false]], "to_list() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.to_list", false], [39, "id82", false]], "to_list() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.to_list", false]], "to_list() (arkouda.pdarray method)": [[25, "arkouda.pdarray.to_list", false], [25, "id603", false], [25, "id672", false]], "to_list() (arkouda.segarray method)": [[25, "arkouda.SegArray.to_list", false]], "to_list() (arkouda.series method)": [[25, "arkouda.Series.to_list", false]], "to_list() (arkouda.series.series method)": [[65, "arkouda.series.Series.to_list", false]], "to_list() (arkouda.strings method)": [[25, "arkouda.Strings.to_list", false], [25, "id394", false], [25, "id472", false]], "to_markdown() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.to_markdown", false], [25, "id48", false]], "to_markdown() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_markdown", false]], "to_markdown() (arkouda.series method)": [[25, "arkouda.Series.to_markdown", false]], "to_markdown() (arkouda.series.series method)": [[65, "arkouda.series.Series.to_markdown", false]], "to_ndarray() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.to_ndarray", false]], "to_ndarray() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.to_ndarray", false]], "to_ndarray() (arkouda.bitvector method)": [[25, "arkouda.BitVector.to_ndarray", false]], "to_ndarray() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_ndarray", false]], "to_ndarray() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.to_ndarray", false]], "to_ndarray() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.to_ndarray", false]], "to_ndarray() (arkouda.index method)": [[25, "arkouda.Index.to_ndarray", false]], "to_ndarray() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_ndarray", false]], "to_ndarray() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.to_ndarray", false]], "to_ndarray() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.to_ndarray", false]], "to_ndarray() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.to_ndarray", false]], "to_ndarray() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.to_ndarray", false], [39, "id180", false], [39, "id249", false]], "to_ndarray() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.to_ndarray", false]], "to_ndarray() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.to_ndarray", false], [39, "id83", false]], "to_ndarray() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.to_ndarray", false]], "to_ndarray() (arkouda.pdarray method)": [[25, "arkouda.pdarray.to_ndarray", false], [25, "id604", false], [25, "id673", false]], "to_ndarray() (arkouda.segarray method)": [[25, "arkouda.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.series method)": [[25, "arkouda.Series.to_ndarray", false]], "to_ndarray() (arkouda.series.series method)": [[65, "arkouda.series.Series.to_ndarray", false]], "to_ndarray() (arkouda.strings method)": [[25, "arkouda.Strings.to_ndarray", false], [25, "id395", false], [25, "id473", false]], "to_ndarray() (in module arkouda.categorical)": [[101, "arkouda.Categorical.to_ndarray", false]], "to_ndarray() (in module arkouda.pdarray)": [[97, "arkouda.pdarray.to_ndarray", false], [107, "arkouda.pdarray.to_ndarray", false]], "to_pandas() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_pandas", false]], "to_pandas() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.to_pandas", false], [25, "id49", false]], "to_pandas() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_pandas", false]], "to_pandas() (arkouda.datetime method)": [[25, "arkouda.Datetime.to_pandas", false], [25, "id116", false], [25, "id83", false]], "to_pandas() (arkouda.index method)": [[25, "arkouda.Index.to_pandas", false]], "to_pandas() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_pandas", false]], "to_pandas() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.to_pandas", false]], "to_pandas() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.to_pandas", false]], "to_pandas() (arkouda.numpy.datetime method)": [[39, "arkouda.numpy.Datetime.to_pandas", false]], "to_pandas() (arkouda.numpy.timeclass.datetime method)": [[56, "arkouda.numpy.timeclass.Datetime.to_pandas", false]], "to_pandas() (arkouda.numpy.timeclass.timedelta method)": [[56, "arkouda.numpy.timeclass.Timedelta.to_pandas", false]], "to_pandas() (arkouda.numpy.timedelta method)": [[39, "arkouda.numpy.Timedelta.to_pandas", false]], "to_pandas() (arkouda.series method)": [[25, "arkouda.Series.to_pandas", false]], "to_pandas() (arkouda.series.series method)": [[65, "arkouda.series.Series.to_pandas", false]], "to_pandas() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.to_pandas", false], [25, "id499", false]], "to_pandas() (in module arkouda.dataframe)": [[103, "arkouda.DataFrame.to_pandas", false]], "to_pandas() (in module arkouda.series)": [[110, "arkouda.Series.to_pandas", false]], "to_parquet() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_parquet", false]], "to_parquet() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.to_parquet", false], [25, "id50", false]], "to_parquet() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_parquet", false]], "to_parquet() (arkouda.index method)": [[25, "arkouda.Index.to_parquet", false]], "to_parquet() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_parquet", false]], "to_parquet() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.to_parquet", false], [39, "id181", false], [39, "id250", false]], "to_parquet() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.to_parquet", false]], "to_parquet() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.to_parquet", false]], "to_parquet() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.to_parquet", false]], "to_parquet() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.to_parquet", false], [39, "id84", false]], "to_parquet() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.to_parquet", false]], "to_parquet() (arkouda.pdarray method)": [[25, "arkouda.pdarray.to_parquet", false], [25, "id605", false], [25, "id674", false]], "to_parquet() (arkouda.segarray method)": [[25, "arkouda.SegArray.to_parquet", false]], "to_parquet() (arkouda.strings method)": [[25, "arkouda.Strings.to_parquet", false], [25, "id396", false], [25, "id474", false]], "to_parquet() (in module arkouda)": [[25, "arkouda.to_parquet", false]], "to_parquet() (in module arkouda.io)": [[28, "arkouda.io.to_parquet", false]], "to_strings() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_strings", false]], "to_zarr() (in module arkouda)": [[25, "arkouda.to_zarr", false]], "to_zarr() (in module arkouda.io)": [[28, "arkouda.io.to_zarr", false]], "tobytes() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.tobytes", false]], "tobytes() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.tobytes", false], [39, "id316", false]], "tobytes() (arkouda.str_ method)": [[25, "arkouda.str_.tobytes", false]], "tofile() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.tofile", false]], "tofile() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.tofile", false], [39, "id317", false]], "tofile() (arkouda.str_ method)": [[25, "arkouda.str_.tofile", false]], "tolist() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.tolist", false]], "tolist() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.tolist", false]], "tolist() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.tolist", false]], "tolist() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.tolist", false], [39, "id318", false]], "tolist() (arkouda.str_ method)": [[25, "arkouda.str_.tolist", false]], "topn() (arkouda.series method)": [[25, "arkouda.Series.topn", false]], "topn() (arkouda.series.series method)": [[65, "arkouda.series.Series.topn", false]], "topn() (in module arkouda.series)": [[110, "arkouda.Series.topn", false]], "tostring() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.tostring", false]], "tostring() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.tostring", false], [39, "id319", false]], "tostring() (arkouda.str_ method)": [[25, "arkouda.str_.tostring", false]], "total_seconds() (arkouda.numpy.timeclass.timedelta method)": [[56, "arkouda.numpy.timeclass.Timedelta.total_seconds", false]], "total_seconds() (arkouda.numpy.timedelta method)": [[39, "arkouda.numpy.Timedelta.total_seconds", false]], "total_seconds() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.total_seconds", false], [25, "id500", false]], "trace() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.trace", false]], "trace() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.trace", false], [39, "id320", false]], "trace() (arkouda.str_ method)": [[25, "arkouda.str_.trace", false]], "transfer() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.transfer", false]], "transfer() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.transfer", false], [25, "id51", false]], "transfer() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.transfer", false]], "transfer() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.transfer", false], [39, "id182", false], [39, "id251", false]], "transfer() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.transfer", false]], "transfer() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.transfer", false]], "transfer() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.transfer", false]], "transfer() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.transfer", false], [39, "id85", false]], "transfer() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.transfer", false]], "transfer() (arkouda.pdarray method)": [[25, "arkouda.pdarray.transfer", false], [25, "id606", false], [25, "id675", false]], "transfer() (arkouda.segarray method)": [[25, "arkouda.SegArray.transfer", false]], "transfer() (arkouda.strings method)": [[25, "arkouda.Strings.transfer", false], [25, "id397", false], [25, "id475", false]], "transpose() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.transpose", false]], "transpose() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.transpose", false]], "transpose() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.transpose", false]], "transpose() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.transpose", false], [39, "id321", false]], "transpose() (arkouda.str_ method)": [[25, "arkouda.str_.transpose", false]], "transpose() (in module arkouda)": [[25, "arkouda.transpose", false]], "transpose() (in module arkouda.numpy)": [[39, "arkouda.numpy.transpose", false]], "transpose() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.transpose", false]], "trapezoid() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.trapezoid", false]], "trapz() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.trapz", false]], "tril() (in module arkouda)": [[25, "arkouda.tril", false]], "tril() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.tril", false]], "tril() (in module arkouda.numpy)": [[39, "arkouda.numpy.tril", false]], "tril() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.tril", false]], "triu() (in module arkouda)": [[25, "arkouda.triu", false]], "triu() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.triu", false]], "triu() (in module arkouda.numpy)": [[39, "arkouda.numpy.triu", false]], "triu() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.triu", false]], "trunc() (in module arkouda)": [[25, "arkouda.trunc", false]], "trunc() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.trunc", false]], "trunc() (in module arkouda.numpy)": [[39, "arkouda.numpy.trunc", false]], "trunc() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.trunc", false]], "type() (arkouda.bigint method)": [[25, "arkouda.bigint.type", false]], "type() (arkouda.numpy.bigint method)": [[39, "arkouda.numpy.bigint.type", false]], "type() (arkouda.numpy.dtypes.bigint method)": [[36, "arkouda.numpy.dtypes.bigint.type", false]], "ubytedtype (class in arkouda)": [[25, "arkouda.UByteDType", false]], "ubytedtype (class in arkouda.numpy)": [[39, "arkouda.numpy.UByteDType", false]], "ubytedtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.UByteDType", false]], "uint() (arkouda.dtype method)": [[25, "arkouda.DType.UINT", false]], "uint() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.UINT", false]], "uint() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.UINT", false]], "uint16 (class in arkouda)": [[25, "arkouda.uint16", false]], "uint16 (class in arkouda.numpy)": [[39, "arkouda.numpy.uint16", false]], "uint16 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.uint16", false]], "uint16() (arkouda.dtype method)": [[25, "arkouda.DType.UINT16", false]], "uint16() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.UINT16", false]], "uint16() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.UINT16", false]], "uint16dtype (class in arkouda)": [[25, "arkouda.UInt16DType", false]], "uint16dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.UInt16DType", false]], "uint16dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.UInt16DType", false]], "uint32 (class in arkouda)": [[25, "arkouda.uint32", false]], "uint32 (class in arkouda.numpy)": [[39, "arkouda.numpy.uint32", false]], "uint32 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.uint32", false]], "uint32() (arkouda.dtype method)": [[25, "arkouda.DType.UINT32", false]], "uint32() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.UINT32", false]], "uint32() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.UINT32", false]], "uint32dtype (class in arkouda)": [[25, "arkouda.UInt32DType", false]], "uint32dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.UInt32DType", false]], "uint32dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.UInt32DType", false]], "uint64 (class in arkouda)": [[25, "arkouda.uint64", false]], "uint64 (class in arkouda.numpy)": [[39, "arkouda.numpy.uint64", false]], "uint64 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.uint64", false]], "uint64() (arkouda.dtype method)": [[25, "arkouda.DType.UINT64", false]], "uint64() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.UINT64", false]], "uint64() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.UINT64", false]], "uint64dtype (class in arkouda)": [[25, "arkouda.UInt64DType", false]], "uint64dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.UInt64DType", false]], "uint64dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.UInt64DType", false]], "uint8 (class in arkouda)": [[25, "arkouda.uint8", false]], "uint8 (class in arkouda.numpy)": [[39, "arkouda.numpy.uint8", false]], "uint8 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.uint8", false]], "uint8() (arkouda.dtype method)": [[25, "arkouda.DType.UINT8", false]], "uint8() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.UINT8", false]], "uint8() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.UINT8", false]], "uint8dtype (class in arkouda)": [[25, "arkouda.UInt8DType", false]], "uint8dtype (class in arkouda.numpy)": [[39, "arkouda.numpy.UInt8DType", false]], "uint8dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.UInt8DType", false]], "uintdtype (class in arkouda)": [[25, "arkouda.UIntDType", false]], "uintdtype (class in arkouda.numpy)": [[39, "arkouda.numpy.UIntDType", false]], "uintdtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.UIntDType", false]], "ulongdtype (class in arkouda)": [[25, "arkouda.ULongDType", false]], "ulongdtype (class in arkouda.numpy)": [[39, "arkouda.numpy.ULongDType", false]], "ulongdtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ULongDType", false]], "ulonglongdtype (class in arkouda)": [[25, "arkouda.ULongLongDType", false]], "ulonglongdtype (class in arkouda.numpy)": [[39, "arkouda.numpy.ULongLongDType", false]], "ulonglongdtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ULongLongDType", false]], "uniform() (arkouda.numpy.random.generator method)": [[51, "arkouda.numpy.random.Generator.uniform", false]], "uniform() (in module arkouda)": [[25, "arkouda.uniform", false]], "uniform() (in module arkouda.numpy)": [[39, "arkouda.numpy.uniform", false]], "uniform() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.uniform", false]], "uniform() (in module arkouda.numpy.random)": [[51, "arkouda.numpy.random.uniform", false]], "uniform() (in module arkouda.random.generator)": [[108, "arkouda.random.Generator.uniform", false]], "union (class in arkouda)": [[25, "arkouda.Union", false]], "union (class in arkouda.numpy)": [[39, "arkouda.numpy.Union", false]], "union (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.Union", false]], "union() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.union", false]], "union() (arkouda.dtypes method)": [[25, "arkouda.DTypes.union", false]], "union() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.union", false]], "union() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.union", false]], "union() (arkouda.inttypes method)": [[25, "arkouda.intTypes.union", false], [25, "id532", false]], "union() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.union", false]], "union() (arkouda.numpy.dtypeobjects method)": [[39, "arkouda.numpy.DTypeObjects.union", false]], "union() (arkouda.numpy.dtypes method)": [[39, "arkouda.numpy.DTypes.union", false]], "union() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.union", false]], "union() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.union", false]], "union() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.union", false]], "union() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.union", false]], "union() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.union", false]], "union() (arkouda.numpy.inttypes method)": [[39, "arkouda.numpy.intTypes.union", false], [39, "id106", false]], "union() (arkouda.numpy.numericdtypes method)": [[39, "arkouda.numpy.NumericDTypes.union", false]], "union() (arkouda.numpy.scalardtypes method)": [[39, "arkouda.numpy.ScalarDTypes.union", false]], "union() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.union", false]], "union() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.union", false]], "union() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.union", false]], "union() (arkouda.segarray method)": [[25, "arkouda.SegArray.union", false]], "union1d() (in module arkouda)": [[25, "arkouda.union1d", false], [111, "arkouda.union1d", false]], "union1d() (in module arkouda.numpy)": [[39, "arkouda.numpy.union1d", false]], "union1d() (in module arkouda.numpy.pdarraysetops)": [[49, "arkouda.numpy.pdarraysetops.union1d", false]], "unique() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.unique", false]], "unique() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.unique", false]], "unique() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.unique", false]], "unique() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.unique", false]], "unique() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.unique", false]], "unique() (arkouda.groupby method)": [[25, "arkouda.GroupBy.unique", false], [25, "id165", false], [25, "id212", false], [25, "id259", false], [25, "id306", false], [104, "arkouda.GroupBy.unique", false]], "unique() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.unique", false]], "unique() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.unique", false]], "unique() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.unique", false]], "unique() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.unique", false]], "unique() (arkouda.segarray method)": [[25, "arkouda.SegArray.unique", false]], "unique() (in module arkouda)": [[25, "arkouda.unique", false], [25, "id683", false], [111, "arkouda.unique", false]], "unique() (in module arkouda.groupbyclass)": [[23, "arkouda.groupbyclass.unique", false]], "unique_all() (in module arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.unique_all", false]], "unique_counts() (in module arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.unique_counts", false]], "unique_inverse() (in module arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.unique_inverse", false]], "unique_keys (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.unique_keys", false], [25, "id127", false], [25, "id174", false], [25, "id221", false], [25, "id268", false], [104, "arkouda.GroupBy.unique_keys", false]], "unique_keys (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.unique_keys", false]], "unique_keys (arkouda.numpy.groupby attribute)": [[39, "arkouda.numpy.GroupBy.unique_keys", false]], "unique_values() (in module arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.unique_values", false]], "uniqueallresult (class in arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.UniqueAllResult", false]], "uniquecountsresult (class in arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.UniqueCountsResult", false]], "uniqueinverseresult (class in arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.UniqueInverseResult", false]], "unregister() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.unregister", false]], "unregister() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.unregister", false], [25, "id52", false]], "unregister() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.unregister", false]], "unregister() (arkouda.datetime method)": [[25, "arkouda.Datetime.unregister", false], [25, "id117", false], [25, "id84", false]], "unregister() (arkouda.groupby method)": [[25, "arkouda.GroupBy.unregister", false], [25, "id166", false], [25, "id213", false], [25, "id260", false], [25, "id307", false], [104, "arkouda.GroupBy.unregister", false]], "unregister() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.unregister", false]], "unregister() (arkouda.index method)": [[25, "arkouda.Index.unregister", false]], "unregister() (arkouda.index.index method)": [[26, "arkouda.index.Index.unregister", false]], "unregister() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.unregister", false]], "unregister() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.unregister", false]], "unregister() (arkouda.numpy.datetime method)": [[39, "arkouda.numpy.Datetime.unregister", false]], "unregister() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.unregister", false]], "unregister() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.unregister", false], [39, "id183", false], [39, "id252", false]], "unregister() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.unregister", false]], "unregister() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.unregister", false]], "unregister() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.unregister", false]], "unregister() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.unregister", false], [39, "id86", false]], "unregister() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.unregister", false]], "unregister() (arkouda.numpy.timeclass.datetime method)": [[56, "arkouda.numpy.timeclass.Datetime.unregister", false]], "unregister() (arkouda.numpy.timeclass.timedelta method)": [[56, "arkouda.numpy.timeclass.Timedelta.unregister", false]], "unregister() (arkouda.numpy.timedelta method)": [[39, "arkouda.numpy.Timedelta.unregister", false]], "unregister() (arkouda.pdarray method)": [[25, "arkouda.pdarray.unregister", false], [25, "id607", false], [25, "id676", false]], "unregister() (arkouda.segarray method)": [[25, "arkouda.SegArray.unregister", false]], "unregister() (arkouda.series method)": [[25, "arkouda.Series.unregister", false]], "unregister() (arkouda.series.series method)": [[65, "arkouda.series.Series.unregister", false]], "unregister() (arkouda.strings method)": [[25, "arkouda.Strings.unregister", false], [25, "id398", false], [25, "id476", false]], "unregister() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.unregister", false], [25, "id501", false]], "unregister() (in module arkouda)": [[25, "arkouda.unregister", false]], "unregister() (in module arkouda.numpy)": [[39, "arkouda.numpy.unregister", false]], "unregister() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.unregister", false]], "unregister_all() (in module arkouda)": [[25, "arkouda.unregister_all", false]], "unregister_all() (in module arkouda.numpy)": [[39, "arkouda.numpy.unregister_all", false]], "unregister_all() (in module arkouda.numpy.util)": [[57, "arkouda.numpy.util.unregister_all", false]], "unregister_categorical_by_name() (arkouda.categorical.categorical static method)": [[18, "arkouda.categorical.Categorical.unregister_categorical_by_name", false]], "unregister_dataframe_by_name() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.unregister_dataframe_by_name", false], [25, "id53", false]], "unregister_dataframe_by_name() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.unregister_dataframe_by_name", false]], "unregister_groupby_by_name() (arkouda.groupby method)": [[25, "arkouda.GroupBy.unregister_groupby_by_name", false], [25, "id167", false], [25, "id214", false], [25, "id261", false], [25, "id308", false]], "unregister_groupby_by_name() (arkouda.groupby static method)": [[104, "arkouda.GroupBy.unregister_groupby_by_name", false]], "unregister_groupby_by_name() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.unregister_groupby_by_name", false]], "unregister_groupby_by_name() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.unregister_groupby_by_name", false]], "unregister_pdarray_by_name() (in module arkouda)": [[25, "arkouda.unregister_pdarray_by_name", false]], "unregister_pdarray_by_name() (in module arkouda.numpy)": [[39, "arkouda.numpy.unregister_pdarray_by_name", false]], "unregister_pdarray_by_name() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.unregister_pdarray_by_name", false]], "unregister_segarray_by_name() (arkouda.numpy.segarray static method)": [[39, "arkouda.numpy.SegArray.unregister_segarray_by_name", false]], "unregister_segarray_by_name() (arkouda.numpy.segarray.segarray static method)": [[53, "arkouda.numpy.segarray.SegArray.unregister_segarray_by_name", false]], "unregister_segarray_by_name() (arkouda.segarray static method)": [[25, "arkouda.SegArray.unregister_segarray_by_name", false]], "unregister_strings_by_name() (arkouda.numpy.strings static method)": [[39, "arkouda.numpy.Strings.unregister_strings_by_name", false], [39, "id87", false]], "unregister_strings_by_name() (arkouda.numpy.strings.strings static method)": [[55, "arkouda.numpy.strings.Strings.unregister_strings_by_name", false]], "unregister_strings_by_name() (arkouda.strings static method)": [[25, "arkouda.Strings.unregister_strings_by_name", false], [25, "id399", false], [25, "id477", false]], "unsqueeze() (in module arkouda.alignment)": [[3, "arkouda.alignment.unsqueeze", false]], "unstack() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.unstack", false]], "update() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.update", false]], "update() (arkouda.numpy.number_format_strings method)": [[39, "arkouda.numpy.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.numpy.seriesdtypes method)": [[39, "arkouda.numpy.SeriesDTypes.update", false]], "update() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.update", false]], "update_hdf() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.update_hdf", false]], "update_hdf() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.update_hdf", false]], "update_hdf() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.update_hdf", false], [25, "id54", false]], "update_hdf() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.update_hdf", false]], "update_hdf() (arkouda.groupby method)": [[25, "arkouda.GroupBy.update_hdf", false], [25, "id168", false], [25, "id215", false], [25, "id262", false], [25, "id309", false]], "update_hdf() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.update_hdf", false]], "update_hdf() (arkouda.index method)": [[25, "arkouda.Index.update_hdf", false]], "update_hdf() (arkouda.index.index method)": [[26, "arkouda.index.Index.update_hdf", false]], "update_hdf() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.update_hdf", false]], "update_hdf() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.update_hdf", false]], "update_hdf() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.update_hdf", false]], "update_hdf() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.update_hdf", false]], "update_hdf() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.update_hdf", false], [39, "id184", false], [39, "id253", false]], "update_hdf() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.update_hdf", false]], "update_hdf() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.update_hdf", false]], "update_hdf() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.update_hdf", false]], "update_hdf() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.update_hdf", false], [39, "id88", false]], "update_hdf() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.update_hdf", false]], "update_hdf() (arkouda.pdarray method)": [[25, "arkouda.pdarray.update_hdf", false], [25, "id608", false], [25, "id677", false]], "update_hdf() (arkouda.segarray method)": [[25, "arkouda.SegArray.update_hdf", false]], "update_hdf() (arkouda.strings method)": [[25, "arkouda.Strings.update_hdf", false], [25, "id400", false], [25, "id478", false]], "update_hdf() (in module arkouda)": [[25, "arkouda.update_hdf", false]], "update_hdf() (in module arkouda.io)": [[28, "arkouda.io.update_hdf", false]], "update_nrows() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.update_nrows", false], [25, "id55", false]], "update_nrows() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.update_nrows", false]], "upper() (arkouda.numpy.strings method)": [[39, "arkouda.numpy.Strings.upper", false], [39, "id89", false]], "upper() (arkouda.numpy.strings.strings method)": [[55, "arkouda.numpy.strings.Strings.upper", false]], "upper() (arkouda.strings method)": [[25, "arkouda.Strings.upper", false], [25, "id401", false], [25, "id479", false]], "username_tokenizer (in module arkouda.security)": [[64, "arkouda.security.username_tokenizer", false]], "ushortdtype (class in arkouda)": [[25, "arkouda.UShortDType", false]], "ushortdtype (class in arkouda.numpy)": [[39, "arkouda.numpy.UShortDType", false]], "ushortdtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.UShortDType", false]], "val_suffix (in module arkouda)": [[25, "arkouda.VAL_SUFFIX", false]], "val_suffix (in module arkouda.numpy)": [[39, "arkouda.numpy.VAL_SUFFIX", false]], "val_suffix (in module arkouda.numpy.segarray)": [[53, "arkouda.numpy.segarray.VAL_SUFFIX", false]], "validate_key() (arkouda.series method)": [[25, "arkouda.Series.validate_key", false]], "validate_key() (arkouda.series.series method)": [[65, "arkouda.series.Series.validate_key", false]], "validate_val() (arkouda.series method)": [[25, "arkouda.Series.validate_val", false]], "validate_val() (arkouda.series.series method)": [[65, "arkouda.series.Series.validate_val", false]], "valsize (arkouda.numpy.segarray attribute)": [[39, "arkouda.numpy.SegArray.valsize", false]], "valsize (arkouda.numpy.segarray.segarray attribute)": [[53, "arkouda.numpy.segarray.SegArray.valsize", false]], "valsize (arkouda.segarray attribute)": [[25, "arkouda.SegArray.valsize", false]], "value() (arkouda.dtype method)": [[25, "arkouda.DType.value", false]], "value() (arkouda.numpy.dtype method)": [[39, "arkouda.numpy.DType.value", false]], "value() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.value", false]], "value_counts() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.value_counts", false], [39, "id185", false], [39, "id254", false]], "value_counts() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.value_counts", false]], "value_counts() (arkouda.pdarray method)": [[25, "arkouda.pdarray.value_counts", false], [25, "id609", false], [25, "id678", false]], "value_counts() (arkouda.series method)": [[25, "arkouda.Series.value_counts", false]], "value_counts() (arkouda.series.series method)": [[65, "arkouda.series.Series.value_counts", false]], "value_counts() (in module arkouda)": [[25, "arkouda.value_counts", false], [105, "arkouda.value_counts", false]], "value_counts() (in module arkouda.numpy)": [[39, "arkouda.numpy.value_counts", false]], "value_counts() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.value_counts", false]], "value_counts() (in module arkouda.series)": [[110, "arkouda.Series.value_counts", false]], "values (arkouda.array_api.set_functions.uniqueallresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueAllResult.values", false]], "values (arkouda.array_api.set_functions.uniquecountsresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueCountsResult.values", false]], "values (arkouda.array_api.set_functions.uniqueinverseresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueInverseResult.values", false]], "values (arkouda.bitvector attribute)": [[25, "arkouda.BitVector.values", false]], "values (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.values", false]], "values (arkouda.client_dtypes.ipv4 attribute)": [[20, "arkouda.client_dtypes.IPv4.values", false]], "values (arkouda.dataframe.diffaggregate attribute)": [[22, "arkouda.dataframe.DiffAggregate.values", false]], "values (arkouda.diffaggregate attribute)": [[25, "arkouda.DiffAggregate.values", false]], "values (arkouda.ipv4 attribute)": [[25, "arkouda.IPv4.values", false]], "values (arkouda.numpy.segarray attribute)": [[39, "arkouda.numpy.SegArray.values", false]], "values (arkouda.numpy.segarray.segarray attribute)": [[53, "arkouda.numpy.segarray.SegArray.values", false]], "values (arkouda.segarray attribute)": [[25, "arkouda.SegArray.values", false]], "values() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.values", false]], "values() (arkouda.numpy.number_format_strings method)": [[39, "arkouda.numpy.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.numpy.seriesdtypes method)": [[39, "arkouda.numpy.SeriesDTypes.values", false]], "values() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.values", false]], "var() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.var", false]], "var() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.var", false]], "var() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.var", false]], "var() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.var", false]], "var() (arkouda.groupby method)": [[25, "arkouda.GroupBy.var", false], [25, "id169", false], [25, "id216", false], [25, "id263", false], [25, "id310", false], [104, "arkouda.GroupBy.var", false]], "var() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.var", false]], "var() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.var", false]], "var() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.var", false]], "var() (arkouda.numpy.pdarray method)": [[39, "arkouda.numpy.pdarray.var", false], [39, "id186", false], [39, "id255", false]], "var() (arkouda.numpy.pdarrayclass.pdarray method)": [[46, "arkouda.numpy.pdarrayclass.pdarray.var", false]], "var() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.var", false], [39, "id322", false]], "var() (arkouda.pdarray method)": [[25, "arkouda.pdarray.var", false], [25, "id610", false], [25, "id679", false], [105, "arkouda.pdarray.var", false]], "var() (arkouda.series method)": [[25, "arkouda.Series.var", false]], "var() (arkouda.series.series method)": [[65, "arkouda.series.Series.var", false]], "var() (arkouda.str_ method)": [[25, "arkouda.str_.var", false]], "var() (in module arkouda)": [[25, "arkouda.var", false], [100, "arkouda.var", false]], "var() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.var", false]], "var() (in module arkouda.numpy)": [[39, "arkouda.numpy.var", false]], "var() (in module arkouda.numpy.pdarrayclass)": [[46, "arkouda.numpy.pdarrayclass.var", false]], "vecdot() (in module arkouda)": [[25, "arkouda.vecdot", false]], "vecdot() (in module arkouda.array_api.linalg)": [[11, "arkouda.array_api.linalg.vecdot", false]], "vecdot() (in module arkouda.numpy)": [[39, "arkouda.numpy.vecdot", false]], "vecdot() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.vecdot", false]], "vecentropy() (arkouda.scipy.stats.chi2 method)": [[63, "arkouda.scipy.stats.chi2.vecentropy", false]], "view() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.view", false]], "view() (arkouda.numpy.str_ method)": [[39, "arkouda.numpy.str_.view", false], [39, "id323", false]], "view() (arkouda.str_ method)": [[25, "arkouda.str_.view", false]], "voiddtype (class in arkouda)": [[25, "arkouda.VoidDType", false]], "voiddtype (class in arkouda.numpy)": [[39, "arkouda.numpy.VoidDType", false]], "voiddtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.VoidDType", false]], "vstack() (in module arkouda)": [[25, "arkouda.vstack", false]], "vstack() (in module arkouda.numpy)": [[39, "arkouda.numpy.vstack", false]], "vstack() (in module arkouda.numpy.pdarraymanipulation)": [[48, "arkouda.numpy.pdarraymanipulation.vstack", false]], "warn (arkouda.logger.loglevel attribute)": [[31, "arkouda.logger.LogLevel.WARN", false]], "warn (arkouda.loglevel attribute)": [[25, "arkouda.LogLevel.WARN", false]], "week (arkouda.datetime property)": [[25, "arkouda.Datetime.week", false], [25, "id118", false], [25, "id85", false]], "week (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.week", false]], "week (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.week", false]], "weekday (arkouda.datetime property)": [[25, "arkouda.Datetime.weekday", false], [25, "id119", false], [25, "id86", false]], "weekday (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.weekday", false]], "weekday (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.weekday", false]], "weekofyear (arkouda.datetime property)": [[25, "arkouda.Datetime.weekofyear", false], [25, "id120", false], [25, "id87", false]], "weekofyear (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.weekofyear", false]], "weekofyear (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.weekofyear", false]], "where() (in module arkouda)": [[25, "arkouda.where", false], [100, "arkouda.where", false]], "where() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.where", false]], "where() (in module arkouda.numpy)": [[39, "arkouda.numpy.where", false]], "where() (in module arkouda.numpy.numeric)": [[45, "arkouda.numpy.numeric.where", false]], "width (arkouda.bitvector attribute)": [[25, "arkouda.BitVector.width", false]], "width (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.width", false]], "write_line_to_file() (in module arkouda.io_util)": [[29, "arkouda.io_util.write_line_to_file", false]], "write_log() (in module arkouda)": [[25, "arkouda.write_log", false]], "write_log() (in module arkouda.logger)": [[31, "arkouda.logger.write_log", false]], "xlogy() (in module arkouda)": [[25, "arkouda.xlogy", false]], "xlogy() (in module arkouda.scipy.special)": [[62, "arkouda.scipy.special.xlogy", false]], "xor() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.xor", false]], "xor() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.xor", false]], "xor() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.xor", false]], "xor() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.xor", false]], "xor() (arkouda.groupby method)": [[25, "arkouda.GroupBy.XOR", false], [25, "id135", false], [25, "id182", false], [25, "id229", false], [25, "id276", false], [104, "arkouda.GroupBy.XOR", false]], "xor() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.XOR", false]], "xor() (arkouda.numpy.groupby method)": [[39, "arkouda.numpy.GroupBy.XOR", false]], "xor() (arkouda.numpy.segarray method)": [[39, "arkouda.numpy.SegArray.XOR", false]], "xor() (arkouda.numpy.segarray.segarray method)": [[53, "arkouda.numpy.segarray.SegArray.XOR", false]], "xor() (arkouda.segarray method)": [[25, "arkouda.SegArray.XOR", false]], "xtol() (arkouda.scipy.stats.chi2 method)": [[63, "arkouda.scipy.stats.chi2.xtol", false]], "year (arkouda.datetime property)": [[25, "arkouda.Datetime.year", false], [25, "id121", false], [25, "id88", false]], "year (arkouda.numpy.datetime property)": [[39, "arkouda.numpy.Datetime.year", false]], "year (arkouda.numpy.timeclass.datetime property)": [[56, "arkouda.numpy.timeclass.Datetime.year", false]], "zero_up() (in module arkouda.alignment)": [[3, "arkouda.alignment.zero_up", false]], "zeros() (in module arkouda)": [[25, "arkouda.zeros", false], [25, "id684", false], [102, "arkouda.zeros", false]], "zeros() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.zeros", false]], "zeros() (in module arkouda.numpy)": [[39, "arkouda.numpy.zeros", false], [39, "id324", false]], "zeros() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.zeros", false]], "zeros_like() (in module arkouda)": [[25, "arkouda.zeros_like", false], [102, "arkouda.zeros_like", false]], "zeros_like() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.zeros_like", false]], "zeros_like() (in module arkouda.numpy)": [[39, "arkouda.numpy.zeros_like", false]], "zeros_like() (in module arkouda.numpy.pdarraycreation)": [[47, "arkouda.numpy.pdarraycreation.zeros_like", false]]}, "objects": {"": [[25, 0, 0, "-", "arkouda"]], "arkouda": [[25, 1, 1, "", "ARKOUDA_SUPPORTED_BOOLS"], [25, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [25, 1, 1, "", "ARKOUDA_SUPPORTED_FLOATS"], [25, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [25, 1, 1, "", "ARKOUDA_SUPPORTED_NUMBERS"], [25, 3, 1, "", "AllSymbols"], [25, 1, 1, "", "BitVector"], [25, 5, 1, "", "BitVectorizer"], [25, 1, 1, "", "BoolDType"], [25, 1, 1, "", "ByteDType"], [25, 1, 1, "", "BytesDType"], [25, 1, 1, "", "CLongDoubleDType"], [25, 1, 1, "", "CachedAccessor"], [101, 1, 1, "", "Categorical"], [25, 1, 1, "", "Complex128DType"], [25, 1, 1, "", "Complex64DType"], [25, 1, 1, "", "DType"], [25, 1, 1, "", "DTypeObjects"], [25, 1, 1, "", "DTypes"], [103, 1, 1, "", "DataFrame"], [25, 1, 1, "", "DataFrameGroupBy"], [25, 1, 1, "", "DateTime64DType"], [25, 1, 1, "id89", "Datetime"], [25, 1, 1, "", "DatetimeAccessor"], [25, 1, 1, "", "DiffAggregate"], [25, 1, 1, "", "Enum"], [25, 1, 1, "", "ErrorMode"], [25, 1, 1, "", "Fields"], [25, 1, 1, "", "Float16DType"], [25, 1, 1, "", "Float32DType"], [25, 1, 1, "", "Float64DType"], [25, 1, 1, "", "GROUPBY_REDUCTION_TYPES"], [104, 1, 1, "", "GroupBy"], [25, 1, 1, "", "IPv4"], [98, 1, 1, "", "Index"], [25, 1, 1, "", "Int16DType"], [25, 1, 1, "", "Int32DType"], [25, 1, 1, "", "Int64DType"], [25, 1, 1, "", "Int8DType"], [25, 1, 1, "", "IntDType"], [25, 3, 1, "", "LEN_SUFFIX"], [25, 1, 1, "", "LogLevel"], [25, 1, 1, "", "LongDType"], [25, 1, 1, "", "LongDoubleDType"], [25, 1, 1, "", "LongLongDType"], [25, 1, 1, "", "MultiIndex"], [25, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [25, 1, 1, "", "NumericDTypes"], [25, 1, 1, "", "ObjectDType"], [25, 1, 1, "", "Power_divergenceResult"], [25, 1, 1, "", "Properties"], [25, 3, 1, "", "RegisteredSymbols"], [25, 7, 1, "id316", "RegistrationError"], [25, 1, 1, "", "Row"], [25, 3, 1, "", "SEG_SUFFIX"], [25, 1, 1, "", "ScalarDTypes"], [25, 1, 1, "", "SegArray"], [110, 1, 1, "", "Series"], [25, 1, 1, "", "SeriesDTypes"], [25, 1, 1, "", "ShortDType"], [25, 3, 1, "", "SortingAlgorithm"], [25, 1, 1, "", "StrDType"], [25, 1, 1, "", "StringAccessor"], [25, 1, 1, "id402", "Strings"], [25, 1, 1, "", "TimeDelta64DType"], [25, 1, 1, "id480", "Timedelta"], [25, 1, 1, "", "UByteDType"], [25, 1, 1, "", "UInt16DType"], [25, 1, 1, "", "UInt32DType"], [25, 1, 1, "", "UInt64DType"], [25, 1, 1, "", "UInt8DType"], [25, 1, 1, "", "UIntDType"], [25, 1, 1, "", "ULongDType"], [25, 1, 1, "", "ULongLongDType"], [25, 1, 1, "", "UShortDType"], [25, 1, 1, "", "Union"], [25, 3, 1, "", "VAL_SUFFIX"], [25, 1, 1, "", "VoidDType"], [100, 5, 1, "", "abs"], [2, 0, 0, "-", "accessor"], [25, 1, 1, "id502", "akbool"], [25, 5, 1, "", "akcast"], [25, 1, 1, "", "akfloat64"], [25, 1, 1, "id503", "akint64"], [25, 1, 1, "id505", "akuint64"], [3, 0, 0, "-", "alignment"], [100, 5, 1, "", "all"], [25, 1, 1, "", "all_scalars"], [25, 1, 1, "", "annotations"], [100, 5, 1, "", "any"], [25, 5, 1, "", "apply"], [4, 0, 0, "-", "apply"], [102, 5, 1, "", "arange"], [25, 5, 1, "", "arccos"], [25, 5, 1, "", "arccosh"], [25, 5, 1, "", "arcsin"], [25, 5, 1, "", "arcsinh"], [25, 5, 1, "", "arctan"], [25, 5, 1, "", "arctan2"], [25, 5, 1, "", "arctanh"], [100, 5, 1, "", "argmax"], [100, 5, 1, "", "argmaxk"], [100, 5, 1, "", "argmin"], [100, 5, 1, "", "argmink"], [99, 5, 1, "", "argsort"], [97, 5, 1, "", "array"], [9, 0, 0, "-", "array_api"], [25, 5, 1, "", "array_equal"], [25, 5, 1, "", "assert_almost_equal"], [25, 5, 1, "", "assert_almost_equivalent"], [25, 5, 1, "", "assert_arkouda_array_equal"], [25, 5, 1, "", "assert_arkouda_array_equivalent"], [25, 5, 1, "", "assert_arkouda_pdarray_equal"], [25, 5, 1, "", "assert_arkouda_segarray_equal"], [25, 5, 1, "", "assert_arkouda_strings_equal"], [25, 5, 1, "", "assert_attr_equal"], [25, 5, 1, "", "assert_categorical_equal"], [25, 5, 1, "", "assert_class_equal"], [25, 5, 1, "", "assert_contains_all"], [25, 5, 1, "", "assert_copy"], [25, 5, 1, "", "assert_dict_equal"], [25, 5, 1, "", "assert_equal"], [25, 5, 1, "", "assert_equivalent"], [25, 5, 1, "", "assert_frame_equal"], [25, 5, 1, "", "assert_frame_equivalent"], [25, 5, 1, "", "assert_index_equal"], [25, 5, 1, "", "assert_index_equivalent"], [25, 5, 1, "", "assert_is_sorted"], [25, 5, 1, "", "assert_series_equal"], [25, 5, 1, "", "assert_series_equivalent"], [25, 5, 1, "", "attach"], [25, 5, 1, "", "attach_all"], [25, 5, 1, "", "attach_pdarray"], [25, 1, 1, "", "bigint"], [25, 5, 1, "", "bigint_from_uint_arrays"], [25, 1, 1, "id513", "bitType"], [25, 1, 1, "", "bool_"], [25, 1, 1, "id515", "bool_scalars"], [25, 5, 1, "id517", "broadcast"], [25, 5, 1, "", "broadcast_dims"], [25, 5, 1, "", "broadcast_to_shape"], [25, 5, 1, "", "can_cast"], [107, 5, 1, "", "cast"], [18, 0, 0, "-", "categorical"], [25, 5, 1, "", "ceil"], [25, 5, 1, "", "chisquare"], [25, 5, 1, "", "clear"], [19, 0, 0, "-", "client"], [20, 0, 0, "-", "client_dtypes"], [25, 5, 1, "", "clip"], [25, 5, 1, "", "clz"], [99, 5, 1, "", "coargsort"], [21, 0, 0, "-", "comm_diagnostics"], [25, 1, 1, "", "complex128"], [25, 1, 1, "", "complex64"], [102, 5, 1, "", "concatenate"], [112, 5, 1, "", "connect"], [25, 5, 1, "", "convert_if_categorical"], [25, 5, 1, "", "corr"], [100, 5, 1, "", "cos"], [25, 5, 1, "", "cosh"], [25, 5, 1, "", "count_nonzero"], [25, 5, 1, "", "cov"], [25, 5, 1, "id520", "create_pdarray"], [25, 5, 1, "", "ctz"], [100, 5, 1, "", "cumprod"], [100, 5, 1, "", "cumsum"], [22, 0, 0, "-", "dataframe"], [25, 5, 1, "", "date_operators"], [25, 5, 1, "id521", "date_range"], [25, 5, 1, "", "deg2rad"], [25, 5, 1, "", "delete"], [25, 5, 1, "", "disableVerbose"], [25, 5, 1, "", "divmod"], [25, 5, 1, "", "dot"], [25, 5, 1, "", "dtype"], [25, 5, 1, "", "enableVerbose"], [100, 5, 1, "", "exp"], [25, 5, 1, "", "expm1"], [97, 5, 1, "", "export"], [25, 5, 1, "", "eye"], [25, 5, 1, "", "flip"], [25, 1, 1, "", "float16"], [25, 1, 1, "", "float32"], [25, 1, 1, "", "float64"], [25, 1, 1, "", "float_scalars"], [25, 5, 1, "", "floor"], [25, 5, 1, "", "fmod"], [25, 5, 1, "", "from_series"], [25, 5, 1, "", "full"], [25, 5, 1, "", "full_like"], [25, 5, 1, "", "generic_concat"], [25, 5, 1, "", "getArkoudaLogger"], [25, 5, 1, "", "get_byteorder"], [25, 5, 1, "", "get_callback"], [25, 5, 1, "", "get_columns"], [97, 5, 1, "", "get_datasets"], [25, 5, 1, "", "get_filetype"], [25, 5, 1, "", "get_null_indices"], [25, 5, 1, "", "get_server_byteorder"], [23, 0, 0, "-", "groupbyclass"], [25, 5, 1, "", "hash"], [25, 5, 1, "", "hist_all"], [105, 5, 1, "", "histogram"], [25, 5, 1, "", "histogram2d"], [25, 5, 1, "", "histogramdd"], [24, 0, 0, "-", "history"], [97, 5, 1, "", "import_data"], [111, 5, 1, "", "in1d"], [26, 0, 0, "-", "index"], [25, 5, 1, "", "indexof1d"], [27, 0, 0, "-", "infoclass"], [25, 5, 1, "", "information"], [25, 1, 1, "", "int16"], [25, 1, 1, "", "int32"], [25, 1, 1, "", "int64"], [25, 1, 1, "", "int8"], [25, 1, 1, "id524", "intTypes"], [25, 1, 1, "", "int_scalars"], [25, 5, 1, "", "intersect"], [111, 5, 1, "", "intersect1d"], [25, 5, 1, "", "intx"], [25, 5, 1, "", "invert_permutation"], [28, 0, 0, "-", "io"], [29, 0, 0, "-", "io_util"], [25, 5, 1, "", "ip_address"], [25, 5, 1, "", "isSupportedBool"], [25, 5, 1, "", "isSupportedDType"], [25, 5, 1, "", "isSupportedFloat"], [25, 5, 1, "id533", "isSupportedInt"], [25, 5, 1, "", "isSupportedNumber"], [25, 5, 1, "", "is_ipv4"], [25, 5, 1, "", "is_ipv6"], [25, 5, 1, "", "is_registered"], [100, 5, 1, "", "is_sorted"], [25, 5, 1, "", "isfinite"], [25, 5, 1, "", "isinf"], [25, 5, 1, "id534", "isnan"], [30, 0, 0, "-", "join"], [102, 5, 1, "", "linspace"], [25, 5, 1, "", "list_registry"], [25, 5, 1, "", "list_symbol_table"], [25, 5, 1, "", "load"], [25, 5, 1, "", "load_all"], [25, 5, 1, "", "load_checkpoint"], [100, 5, 1, "", "log"], [25, 5, 1, "", "log10"], [25, 5, 1, "", "log1p"], [25, 5, 1, "", "log2"], [31, 0, 0, "-", "logger"], [25, 5, 1, "", "ls"], [25, 5, 1, "", "ls_csv"], [32, 0, 0, "-", "match"], [33, 0, 0, "-", "matcher"], [25, 5, 1, "", "matmul"], [100, 5, 1, "", "max"], [100, 5, 1, "", "maxk"], [100, 5, 1, "", "mean"], [25, 5, 1, "", "median"], [25, 5, 1, "", "merge"], [100, 5, 1, "", "min"], [100, 5, 1, "", "mink"], [25, 5, 1, "", "mod"], [25, 1, 1, "", "numeric_and_bool_scalars"], [25, 1, 1, "", "numeric_scalars"], [39, 0, 0, "-", "numpy"], [25, 1, 1, "", "numpy_scalars"], [102, 5, 1, "", "ones"], [102, 5, 1, "", "ones_like"], [25, 5, 1, "", "parity"], [107, 1, 1, "", "pdarray"], [25, 5, 1, "", "plot_dist"], [59, 0, 0, "-", "plotting"], [25, 5, 1, "", "popcount"], [25, 5, 1, "", "power"], [25, 5, 1, "", "power_divergence"], [25, 5, 1, "", "pretty_print_information"], [100, 5, 1, "", "prod"], [25, 5, 1, "", "promote_to_common_dtype"], [25, 5, 1, "", "putmask"], [25, 5, 1, "", "rad2deg"], [102, 5, 1, "", "randint"], [25, 5, 1, "", "random_strings_lognormal"], [25, 5, 1, "", "random_strings_uniform"], [97, 5, 1, "", "read"], [25, 5, 1, "", "read_csv"], [25, 5, 1, "", "read_hdf"], [25, 5, 1, "", "read_parquet"], [25, 5, 1, "", "read_tagged_data"], [25, 5, 1, "", "read_zarr"], [25, 5, 1, "", "receive"], [25, 5, 1, "", "receive_dataframe"], [25, 5, 1, "", "register_all"], [25, 5, 1, "", "repeat"], [25, 5, 1, "", "resolve_scalar_dtype"], [25, 5, 1, "", "restore"], [25, 5, 1, "", "rotl"], [25, 5, 1, "", "rotr"], [25, 5, 1, "", "round"], [60, 0, 0, "-", "row"], [25, 5, 1, "", "save_all"], [25, 5, 1, "", "save_checkpoint"], [25, 5, 1, "", "scalar_array"], [61, 0, 0, "-", "scipy"], [25, 5, 1, "", "searchsorted"], [64, 0, 0, "-", "security"], [25, 5, 1, "", "segarray"], [65, 0, 0, "-", "series"], [111, 5, 1, "", "setdiff1d"], [111, 5, 1, "", "setxor1d"], [25, 5, 1, "", "shape"], [25, 5, 1, "", "sign"], [100, 5, 1, "", "sin"], [25, 5, 1, "", "sinh"], [25, 5, 1, "", "skew"], [25, 5, 1, "", "snapshot"], [25, 5, 1, "", "sort"], [66, 0, 0, "-", "sparrayclass"], [67, 0, 0, "-", "sparsematrix"], [25, 5, 1, "", "sqrt"], [25, 5, 1, "", "square"], [25, 5, 1, "", "squeeze"], [25, 5, 1, "", "standard_normal"], [100, 5, 1, "", "std"], [25, 1, 1, "", "str_"], [25, 1, 1, "", "str_scalars"], [25, 5, 1, "", "string_operators"], [100, 5, 1, "", "sum"], [25, 5, 1, "", "tan"], [25, 5, 1, "", "tanh"], [68, 0, 0, "-", "testing"], [25, 5, 1, "", "tile"], [25, 5, 1, "id682", "timedelta_range"], [25, 5, 1, "", "to_csv"], [25, 5, 1, "", "to_hdf"], [25, 5, 1, "", "to_parquet"], [25, 5, 1, "", "to_zarr"], [25, 5, 1, "", "transpose"], [25, 5, 1, "", "tril"], [25, 5, 1, "", "triu"], [25, 5, 1, "", "trunc"], [25, 1, 1, "", "uint16"], [25, 1, 1, "", "uint32"], [25, 1, 1, "", "uint64"], [25, 1, 1, "", "uint8"], [25, 5, 1, "", "uniform"], [111, 5, 1, "", "union1d"], [111, 5, 1, "", "unique"], [25, 5, 1, "", "unregister"], [25, 5, 1, "", "unregister_all"], [25, 5, 1, "", "unregister_pdarray_by_name"], [25, 5, 1, "", "update_hdf"], [105, 5, 1, "", "value_counts"], [100, 5, 1, "", "var"], [25, 5, 1, "", "vecdot"], [25, 5, 1, "", "vstack"], [100, 5, 1, "", "where"], [25, 5, 1, "", "write_log"], [25, 5, 1, "", "xlogy"], [102, 5, 1, "", "zeros"], [102, 5, 1, "", "zeros_like"]], "arkouda.ARKOUDA_SUPPORTED_BOOLS": [[25, 2, 1, "", "count"], [25, 2, 1, "", "index"]], "arkouda.ARKOUDA_SUPPORTED_DTYPES": [[25, 2, 1, "", "count"], [25, 2, 1, "", "index"]], "arkouda.ARKOUDA_SUPPORTED_FLOATS": [[25, 2, 1, "", "count"], [25, 2, 1, "", "index"]], "arkouda.ARKOUDA_SUPPORTED_INTS": [[25, 2, 1, "", "count"], [25, 2, 1, "", "index"]], "arkouda.ARKOUDA_SUPPORTED_NUMBERS": [[25, 2, 1, "", "count"], [25, 2, 1, "", "index"]], "arkouda.BitVector": [[25, 4, 1, "", "conserves"], [25, 2, 1, "", "format"], [25, 2, 1, "", "from_return_msg"], [25, 2, 1, "", "opeq"], [25, 2, 1, "", "register"], [25, 4, 1, "", "registered_name"], [25, 4, 1, "", "reverse"], [25, 4, 1, "", "special_objType"], [25, 2, 1, "", "to_list"], [25, 2, 1, "", "to_ndarray"], [25, 4, 1, "", "values"], [25, 4, 1, "", "width"]], "arkouda.Categorical": [[101, 4, 1, "", "categories"], [101, 4, 1, "", "codes"], [101, 2, 1, "", "contains"], [101, 2, 1, "", "endswith"], [101, 2, 1, "", "from_codes"], [101, 4, 1, "", "ndim"], [101, 4, 1, "", "nlevels"], [101, 4, 1, "", "permutation"], [101, 4, 1, "", "segments"], [101, 4, 1, "", "shape"], [101, 4, 1, "", "size"], [101, 2, 1, "", "startswith"], [101, 5, 1, "", "to_ndarray"]], "arkouda.DType": [[25, 2, 1, "", "BIGINT"], [25, 2, 1, "", "BOOL"], [25, 2, 1, "", "COMPLEX128"], [25, 2, 1, "", "COMPLEX64"], [25, 2, 1, "", "FLOAT"], [25, 2, 1, "", "FLOAT32"], [25, 2, 1, "", "FLOAT64"], [25, 2, 1, "", "INT"], [25, 2, 1, "", "INT16"], [25, 2, 1, "", "INT32"], [25, 2, 1, "", "INT64"], [25, 2, 1, "", "INT8"], [25, 2, 1, "", "STR"], [25, 2, 1, "", "UINT"], [25, 2, 1, "", "UINT16"], [25, 2, 1, "", "UINT32"], [25, 2, 1, "", "UINT64"], [25, 2, 1, "", "UINT8"], [25, 2, 1, "", "name"], [25, 2, 1, "", "value"]], "arkouda.DTypeObjects": [[25, 2, 1, "", "copy"], [25, 2, 1, "", "difference"], [25, 2, 1, "", "intersection"], [25, 2, 1, "", "isdisjoint"], [25, 2, 1, "", "issubset"], [25, 2, 1, "", "issuperset"], [25, 2, 1, "", "symmetric_difference"], [25, 2, 1, "", "union"]], "arkouda.DTypes": [[25, 2, 1, "", "copy"], [25, 2, 1, "", "difference"], [25, 2, 1, "", "intersection"], [25, 2, 1, "", "isdisjoint"], [25, 2, 1, "", "issubset"], [25, 2, 1, "", "issuperset"], [25, 2, 1, "", "symmetric_difference"], [25, 2, 1, "", "union"]], "arkouda.DataFrame": [[25, 2, 1, "id1", "GroupBy"], [25, 2, 1, "id2", "all"], [25, 2, 1, "id3", "any"], [25, 2, 1, "id4", "append"], [103, 5, 1, "", "apply_permutation"], [103, 5, 1, "", "argsort"], [25, 2, 1, "id7", "assign"], [25, 2, 1, "id8", "attach"], [103, 5, 1, "", "coargsort"], [25, 6, 1, "id10", "columns"], [103, 5, 1, "", "concat"], [103, 5, 1, "", "copy"], [25, 2, 1, "id12", "corr"], [25, 2, 1, "id13", "count"], [103, 5, 1, "", "drop"], [103, 5, 1, "", "drop_duplicates"], [25, 2, 1, "id16", "dropna"], [25, 6, 1, "id17", "dtypes"], [25, 6, 1, "id18", "empty"], [25, 2, 1, "id19", "filter_by_range"], [25, 2, 1, "id20", "from_pandas"], [25, 2, 1, "id21", "from_return_msg"], [103, 5, 1, "", "groupby"], [103, 5, 1, "", "head"], [25, 6, 1, "id24", "index"], [25, 6, 1, "id25", "info"], [25, 2, 1, "id26", "is_registered"], [25, 2, 1, "id27", "isin"], [25, 2, 1, "id28", "isna"], [25, 2, 1, "id29", "load"], [25, 2, 1, "id30", "memory_usage"], [25, 2, 1, "id31", "memory_usage_info"], [25, 2, 1, "id32", "merge"], [25, 2, 1, "id33", "notna"], [25, 2, 1, "id34", "objType"], [25, 2, 1, "id35", "read_csv"], [25, 2, 1, "id36", "register"], [103, 5, 1, "", "rename"], [103, 5, 1, "", "reset_index"], [25, 2, 1, "id39", "sample"], [25, 2, 1, "id40", "save"], [25, 6, 1, "id41", "shape"], [25, 6, 1, "id42", "size"], [25, 2, 1, "id43", "sort_index"], [103, 5, 1, "", "sort_values"], [103, 5, 1, "", "tail"], [25, 2, 1, "id46", "to_csv"], [25, 2, 1, "id47", "to_hdf"], [25, 2, 1, "id48", "to_markdown"], [103, 5, 1, "", "to_pandas"], [25, 2, 1, "id50", "to_parquet"], [25, 2, 1, "id51", "transfer"], [25, 2, 1, "id52", "unregister"], [25, 2, 1, "id53", "unregister_dataframe_by_name"], [25, 2, 1, "id54", "update_hdf"], [25, 2, 1, "id55", "update_nrows"]], "arkouda.DataFrameGroupBy": [[25, 2, 1, "", "all"], [25, 2, 1, "", "any"], [25, 2, 1, "", "argmax"], [25, 2, 1, "", "argmin"], [25, 4, 1, "", "as_index"], [25, 2, 1, "", "broadcast"], [25, 2, 1, "", "count"], [25, 4, 1, "", "df"], [25, 2, 1, "", "diff"], [25, 2, 1, "", "first"], [25, 4, 1, "", "gb"], [25, 4, 1, "", "gb_key_names"], [25, 2, 1, "", "head"], [25, 2, 1, "", "max"], [25, 2, 1, "", "mean"], [25, 2, 1, "", "median"], [25, 2, 1, "", "min"], [25, 2, 1, "", "mode"], [25, 2, 1, "", "nunique"], [25, 2, 1, "", "prod"], [25, 2, 1, "", "sample"], [25, 2, 1, "", "size"], [25, 2, 1, "", "std"], [25, 2, 1, "", "sum"], [25, 2, 1, "", "tail"], [25, 2, 1, "", "unique"], [25, 2, 1, "", "var"], [25, 2, 1, "", "xor"]], "arkouda.Datetime": [[25, 6, 1, "id90", "date"], [25, 6, 1, "id91", "day"], [25, 6, 1, "id92", "day_of_week"], [25, 6, 1, "id93", "day_of_year"], [25, 6, 1, "id94", "dayofweek"], [25, 6, 1, "id95", "dayofyear"], [25, 6, 1, "id96", "hour"], [25, 6, 1, "id97", "is_leap_year"], [25, 2, 1, "id98", "is_registered"], [25, 2, 1, "id99", "isocalendar"], [25, 6, 1, "id100", "microsecond"], [25, 6, 1, "id101", "millisecond"], [25, 6, 1, "id102", "minute"], [25, 6, 1, "id103", "month"], [25, 6, 1, "id104", "nanosecond"], [25, 2, 1, "id105", "register"], [25, 6, 1, "id106", "second"], [25, 4, 1, "id107", "special_objType"], [25, 2, 1, "id108", "sum"], [25, 4, 1, "id109", "supported_opeq"], [25, 4, 1, "id110", "supported_with_datetime"], [25, 4, 1, "id111", "supported_with_pdarray"], [25, 4, 1, "id112", "supported_with_r_datetime"], [25, 4, 1, "id113", "supported_with_r_pdarray"], [25, 4, 1, "id114", "supported_with_r_timedelta"], [25, 4, 1, "id115", "supported_with_timedelta"], [25, 2, 1, "id116", "to_pandas"], [25, 2, 1, "id117", "unregister"], [25, 6, 1, "id118", "week"], [25, 6, 1, "id119", "weekday"], [25, 6, 1, "id120", "weekofyear"], [25, 6, 1, "id121", "year"]], "arkouda.DatetimeAccessor": [[25, 4, 1, "", "series"]], "arkouda.DiffAggregate": [[25, 2, 1, "", "all"], [25, 2, 1, "", "any"], [25, 2, 1, "", "argmax"], [25, 2, 1, "", "argmin"], [25, 2, 1, "", "count"], [25, 2, 1, "", "first"], [25, 4, 1, "", "gb"], [25, 2, 1, "", "max"], [25, 2, 1, "", "mean"], [25, 2, 1, "", "median"], [25, 2, 1, "", "min"], [25, 2, 1, "", "mode"], [25, 2, 1, "", "nunique"], [25, 2, 1, "", "prod"], [25, 2, 1, "", "std"], [25, 2, 1, "", "sum"], [25, 2, 1, "", "unique"], [25, 4, 1, "", "values"], [25, 2, 1, "", "var"], [25, 2, 1, "", "xor"]], "arkouda.ErrorMode": [[25, 4, 1, "", "ignore"], [25, 4, 1, "", "return_validity"], [25, 4, 1, "", "strict"]], "arkouda.Fields": [[25, 4, 1, "", "MSB_left"], [25, 2, 1, "", "format"], [25, 4, 1, "", "name"], [25, 4, 1, "", "names"], [25, 4, 1, "", "namewidth"], [25, 2, 1, "", "opeq"], [25, 4, 1, "", "pad"], [25, 4, 1, "", "padchar"], [25, 4, 1, "", "separator"], [25, 4, 1, "", "show_int"]], "arkouda.GROUPBY_REDUCTION_TYPES": [[25, 2, 1, "", "copy"], [25, 2, 1, "", "difference"], [25, 2, 1, "", "intersection"], [25, 2, 1, "", "isdisjoint"], [25, 2, 1, "", "issubset"], [25, 2, 1, "", "issuperset"], [25, 2, 1, "", "symmetric_difference"], [25, 2, 1, "", "union"]], "arkouda.GroupBy": [[104, 2, 1, "", "AND"], [104, 2, 1, "", "OR"], [25, 2, 1, "id275", "Reductions"], [104, 2, 1, "", "XOR"], [104, 2, 1, "", "aggregate"], [104, 2, 1, "", "all"], [104, 2, 1, "", "any"], [104, 2, 1, "", "argmax"], [104, 2, 1, "", "argmin"], [104, 2, 1, "", "attach"], [104, 2, 1, "", "broadcast"], [104, 2, 1, "", "build_from_components"], [104, 2, 1, "", "count"], [104, 4, 1, "", "dropna"], [104, 2, 1, "", "first"], [25, 2, 1, "id287", "from_return_msg"], [104, 2, 1, "", "head"], [104, 2, 1, "", "is_registered"], [104, 4, 1, "", "logger"], [104, 2, 1, "", "max"], [104, 2, 1, "", "mean"], [104, 2, 1, "", "median"], [104, 2, 1, "", "min"], [104, 2, 1, "", "mode"], [104, 2, 1, "", "most_common"], [104, 4, 1, "", "ngroups"], [104, 4, 1, "", "nkeys"], [104, 2, 1, "", "nunique"], [25, 2, 1, "id297", "objType"], [104, 4, 1, "", "permutation"], [104, 2, 1, "", "prod"], [104, 2, 1, "", "register"], [104, 2, 1, "", "sample"], [104, 4, 1, "", "segments"], [104, 2, 1, "id0", "size"], [104, 2, 1, "", "std"], [104, 2, 1, "", "sum"], [104, 2, 1, "", "tail"], [104, 2, 1, "", "to_hdf"], [104, 2, 1, "", "unique"], [104, 4, 1, "", "unique_keys"], [104, 2, 1, "", "unregister"], [104, 2, 1, "", "unregister_groupby_by_name"], [25, 2, 1, "id309", "update_hdf"], [104, 2, 1, "", "var"]], "arkouda.IPv4": [[25, 2, 1, "", "export_uint"], [25, 2, 1, "", "format"], [25, 2, 1, "", "normalize"], [25, 2, 1, "", "opeq"], [25, 2, 1, "", "register"], [25, 4, 1, "", "special_objType"], [25, 2, 1, "", "to_hdf"], [25, 2, 1, "", "to_list"], [25, 2, 1, "", "to_ndarray"], [25, 2, 1, "", "update_hdf"], [25, 4, 1, "", "values"]], "arkouda.Index": [[98, 5, 1, "", "argsort"], [98, 5, 1, "", "concat"], [25, 2, 1, "", "equals"], [25, 2, 1, "", "factory"], [25, 2, 1, "", "from_return_msg"], [25, 6, 1, "", "index"], [25, 6, 1, "", "inferred_type"], [25, 2, 1, "", "is_registered"], [25, 6, 1, "", "is_unique"], [98, 5, 1, "", "lookup"], [25, 2, 1, "", "map"], [25, 4, 1, "", "max_list_size"], [25, 2, 1, "", "memory_usage"], [25, 6, 1, "", "names"], [25, 6, 1, "", "ndim"], [25, 6, 1, "", "nlevels"], [25, 4, 1, "", "objType"], [25, 2, 1, "", "register"], [25, 4, 1, "", "registered_name"], [25, 2, 1, "", "save"], [98, 5, 1, "", "set_dtype"], [25, 6, 1, "", "shape"], [25, 2, 1, "", "to_csv"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "to_hdf"], [25, 2, 1, "", "to_list"], [25, 2, 1, "", "to_ndarray"], [25, 2, 1, "", "to_pandas"], [25, 2, 1, "", "to_parquet"], [25, 2, 1, "", "unregister"], [25, 2, 1, "", "update_hdf"]], "arkouda.LogLevel": [[25, 4, 1, "", "CRITICAL"], [25, 4, 1, "", "DEBUG"], [25, 4, 1, "", "ERROR"], [25, 4, 1, "", "INFO"], [25, 4, 1, "", "WARN"]], "arkouda.MultiIndex": [[98, 5, 1, "", "argsort"], [98, 5, 1, "", "concat"], [25, 6, 1, "", "dtype"], [25, 2, 1, "", "equal_levels"], [25, 2, 1, "", "get_level_values"], [25, 6, 1, "", "index"], [25, 6, 1, "", "inferred_type"], [25, 2, 1, "", "is_registered"], [25, 4, 1, "", "levels"], [98, 5, 1, "", "lookup"], [25, 2, 1, "", "memory_usage"], [25, 6, 1, "", "name"], [25, 6, 1, "", "names"], [25, 6, 1, "", "ndim"], [25, 6, 1, "", "nlevels"], [25, 4, 1, "", "objType"], [25, 2, 1, "", "register"], [25, 4, 1, "", "registered_name"], [98, 5, 1, "", "set_dtype"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "to_hdf"], [25, 2, 1, "", "to_list"], [25, 2, 1, "", "to_ndarray"], [25, 2, 1, "", "to_pandas"], [25, 2, 1, "", "unregister"], [25, 2, 1, "", "update_hdf"]], "arkouda.NUMBER_FORMAT_STRINGS": [[25, 2, 1, "", "clear"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "fromkeys"], [25, 2, 1, "", "get"], [25, 2, 1, "", "items"], [25, 2, 1, "", "keys"], [25, 2, 1, "", "pop"], [25, 2, 1, "", "popitem"], [25, 2, 1, "", "setdefault"], [25, 2, 1, "", "update"], [25, 2, 1, "", "values"]], "arkouda.NumericDTypes": [[25, 2, 1, "", "copy"], [25, 2, 1, "", "difference"], [25, 2, 1, "", "intersection"], [25, 2, 1, "", "isdisjoint"], [25, 2, 1, "", "issubset"], [25, 2, 1, "", "issuperset"], [25, 2, 1, "", "symmetric_difference"], [25, 2, 1, "", "union"]], "arkouda.Power_divergenceResult": [[25, 4, 1, "", "pvalue"], [25, 4, 1, "", "statistic"]], "arkouda.ScalarDTypes": [[25, 2, 1, "", "copy"], [25, 2, 1, "", "difference"], [25, 2, 1, "", "intersection"], [25, 2, 1, "", "isdisjoint"], [25, 2, 1, "", "issubset"], [25, 2, 1, "", "issuperset"], [25, 2, 1, "", "symmetric_difference"], [25, 2, 1, "", "union"]], "arkouda.SegArray": [[25, 2, 1, "", "AND"], [25, 2, 1, "", "OR"], [25, 2, 1, "", "XOR"], [25, 2, 1, "", "aggregate"], [25, 2, 1, "", "all"], [25, 2, 1, "", "any"], [25, 2, 1, "", "append"], [25, 2, 1, "", "append_single"], [25, 2, 1, "", "argmax"], [25, 2, 1, "", "argmin"], [25, 2, 1, "", "attach"], [25, 2, 1, "", "concat"], [25, 2, 1, "", "copy"], [25, 4, 1, "", "dtype"], [25, 2, 1, "", "filter"], [25, 2, 1, "", "from_multi_array"], [25, 2, 1, "", "from_parts"], [25, 2, 1, "", "from_return_msg"], [25, 2, 1, "", "get_jth"], [25, 2, 1, "", "get_length_n"], [25, 2, 1, "", "get_ngrams"], [25, 2, 1, "", "get_prefixes"], [25, 2, 1, "", "get_suffixes"], [25, 6, 1, "", "grouping"], [25, 2, 1, "", "hash"], [25, 2, 1, "", "intersect"], [25, 2, 1, "", "is_registered"], [25, 2, 1, "", "load"], [25, 4, 1, "", "logger"], [25, 2, 1, "", "max"], [25, 2, 1, "", "mean"], [25, 2, 1, "", "min"], [25, 6, 1, "", "nbytes"], [25, 6, 1, "", "non_empty"], [25, 2, 1, "", "nunique"], [25, 4, 1, "", "objType"], [25, 2, 1, "", "prepend_single"], [25, 2, 1, "", "prod"], [25, 2, 1, "", "read_hdf"], [25, 2, 1, "", "register"], [25, 4, 1, "", "registered_name"], [25, 2, 1, "", "remove_repeats"], [25, 2, 1, "", "save"], [25, 4, 1, "", "segments"], [25, 2, 1, "", "set_jth"], [25, 2, 1, "", "setdiff"], [25, 2, 1, "", "setxor"], [25, 4, 1, "", "size"], [25, 2, 1, "", "sum"], [25, 2, 1, "", "to_hdf"], [25, 2, 1, "", "to_list"], [25, 2, 1, "", "to_ndarray"], [25, 2, 1, "", "to_parquet"], [25, 2, 1, "", "transfer"], [25, 2, 1, "", "union"], [25, 2, 1, "", "unique"], [25, 2, 1, "", "unregister"], [25, 2, 1, "", "unregister_segarray_by_name"], [25, 2, 1, "", "update_hdf"], [25, 4, 1, "", "valsize"], [25, 4, 1, "", "values"]], "arkouda.Series": [[25, 2, 1, "", "add"], [25, 2, 1, "", "argmax"], [25, 2, 1, "", "argmin"], [25, 6, 1, "", "at"], [25, 2, 1, "", "attach"], [25, 2, 1, "", "concat"], [25, 2, 1, "", "diff"], [25, 2, 1, "", "dt"], [25, 6, 1, "", "dtype"], [25, 2, 1, "", "fillna"], [25, 2, 1, "", "from_return_msg"], [25, 2, 1, "", "has_repeat_labels"], [25, 2, 1, "", "hasnans"], [110, 5, 1, "", "head"], [25, 6, 1, "", "iat"], [25, 6, 1, "", "iloc"], [25, 2, 1, "", "is_registered"], [25, 2, 1, "", "isin"], [25, 2, 1, "", "isna"], [25, 2, 1, "", "isnull"], [25, 6, 1, "", "loc"], [110, 5, 1, "id0", "locate"], [25, 2, 1, "", "map"], [25, 2, 1, "", "max"], [25, 2, 1, "", "mean"], [25, 2, 1, "", "memory_usage"], [25, 2, 1, "", "min"], [25, 6, 1, "", "ndim"], [25, 2, 1, "", "notna"], [25, 2, 1, "", "notnull"], [25, 2, 1, "", "objType"], [110, 5, 1, "", "pdconcat"], [25, 2, 1, "", "prod"], [25, 2, 1, "", "register"], [25, 6, 1, "", "shape"], [110, 5, 1, "", "sort_index"], [110, 5, 1, "", "sort_values"], [25, 2, 1, "", "std"], [25, 2, 1, "", "str_acc"], [25, 2, 1, "", "sum"], [110, 5, 1, "", "tail"], [25, 2, 1, "", "to_dataframe"], [25, 2, 1, "", "to_list"], [25, 2, 1, "", "to_markdown"], [25, 2, 1, "", "to_ndarray"], [110, 5, 1, "", "to_pandas"], [110, 5, 1, "", "topn"], [25, 2, 1, "", "unregister"], [25, 2, 1, "", "validate_key"], [25, 2, 1, "", "validate_val"], [110, 5, 1, "", "value_counts"], [25, 2, 1, "", "var"]], "arkouda.SeriesDTypes": [[25, 2, 1, "", "clear"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "fromkeys"], [25, 2, 1, "", "get"], [25, 2, 1, "", "items"], [25, 2, 1, "", "keys"], [25, 2, 1, "", "pop"], [25, 2, 1, "", "popitem"], [25, 2, 1, "", "setdefault"], [25, 2, 1, "", "update"], [25, 2, 1, "", "values"]], "arkouda.StringAccessor": [[25, 4, 1, "", "series"]], "arkouda.Strings": [[25, 4, 1, "id410", "BinOps"], [25, 2, 1, "id411", "astype"], [25, 2, 1, "id412", "attach"], [25, 2, 1, "id413", "cached_regex_patterns"], [25, 2, 1, "id414", "capitalize"], [25, 2, 1, "id415", "contains"], [25, 2, 1, "id416", "decode"], [25, 4, 1, "id417", "dtype"], [25, 2, 1, "id418", "encode"], [25, 2, 1, "id419", "endswith"], [25, 4, 1, "id420", "entry"], [25, 2, 1, "id421", "equals"], [25, 2, 1, "id422", "find_locations"], [25, 2, 1, "id423", "findall"], [25, 2, 1, "id424", "flatten"], [25, 2, 1, "id425", "from_parts"], [25, 2, 1, "id426", "from_return_msg"], [25, 2, 1, "id427", "fullmatch"], [25, 2, 1, "id428", "get_bytes"], [25, 2, 1, "id429", "get_lengths"], [25, 2, 1, "id430", "get_offsets"], [25, 2, 1, "id431", "get_prefixes"], [25, 2, 1, "id432", "get_suffixes"], [25, 2, 1, "id433", "group"], [25, 2, 1, "id434", "hash"], [25, 6, 1, "id435", "inferred_type"], [25, 2, 1, "id436", "info"], [25, 2, 1, "id437", "is_registered"], [25, 2, 1, "id438", "isalnum"], [25, 2, 1, "id439", "isalpha"], [25, 2, 1, "id440", "isdecimal"], [25, 2, 1, "id441", "isdigit"], [25, 2, 1, "id442", "isempty"], [25, 2, 1, "id443", "islower"], [25, 2, 1, "id444", "isspace"], [25, 2, 1, "id445", "istitle"], [25, 2, 1, "id446", "isupper"], [25, 4, 1, "id447", "logger"], [25, 2, 1, "id448", "lower"], [25, 2, 1, "id449", "lstick"], [25, 2, 1, "id450", "match"], [25, 4, 1, "id405", "nbytes"], [25, 4, 1, "id406", "ndim"], [25, 4, 1, "id451", "objType"], [25, 2, 1, "id452", "peel"], [25, 2, 1, "id453", "pretty_print_info"], [25, 2, 1, "id454", "purge_cached_regex_patterns"], [25, 2, 1, "id455", "regex_split"], [25, 2, 1, "id456", "register"], [25, 4, 1, "id457", "registered_name"], [25, 2, 1, "id458", "rpeel"], [25, 2, 1, "id459", "save"], [25, 2, 1, "id460", "search"], [25, 4, 1, "id461", "shape"], [25, 4, 1, "id462", "size"], [25, 2, 1, "id463", "split"], [25, 2, 1, "id464", "startswith"], [25, 2, 1, "id465", "stick"], [25, 2, 1, "id466", "strip"], [25, 2, 1, "id467", "sub"], [25, 2, 1, "id468", "subn"], [25, 2, 1, "id469", "title"], [25, 2, 1, "id470", "to_csv"], [25, 2, 1, "id471", "to_hdf"], [25, 2, 1, "id472", "to_list"], [25, 2, 1, "id473", "to_ndarray"], [25, 2, 1, "id474", "to_parquet"], [25, 2, 1, "id475", "transfer"], [25, 2, 1, "id476", "unregister"], [25, 2, 1, "id477", "unregister_strings_by_name"], [25, 2, 1, "id478", "update_hdf"], [25, 2, 1, "id479", "upper"]], "arkouda.Timedelta": [[25, 2, 1, "id481", "abs"], [25, 6, 1, "id482", "components"], [25, 6, 1, "id483", "days"], [25, 2, 1, "id484", "is_registered"], [25, 6, 1, "id485", "microseconds"], [25, 6, 1, "id486", "nanoseconds"], [25, 2, 1, "id487", "register"], [25, 6, 1, "id488", "seconds"], [25, 4, 1, "id489", "special_objType"], [25, 2, 1, "id490", "std"], [25, 2, 1, "id491", "sum"], [25, 4, 1, "id492", "supported_opeq"], [25, 4, 1, "id493", "supported_with_datetime"], [25, 4, 1, "id494", "supported_with_pdarray"], [25, 4, 1, "id495", "supported_with_r_datetime"], [25, 4, 1, "id496", "supported_with_r_pdarray"], [25, 4, 1, "id497", "supported_with_r_timedelta"], [25, 4, 1, "id498", "supported_with_timedelta"], [25, 2, 1, "id499", "to_pandas"], [25, 2, 1, "id500", "total_seconds"], [25, 2, 1, "id501", "unregister"]], "arkouda.accessor": [[2, 1, 1, "", "CachedAccessor"], [2, 1, 1, "", "DatetimeAccessor"], [2, 1, 1, "", "Properties"], [2, 1, 1, "", "StringAccessor"], [2, 5, 1, "", "date_operators"], [2, 5, 1, "", "string_operators"]], "arkouda.accessor.DatetimeAccessor": [[2, 4, 1, "", "series"]], "arkouda.accessor.StringAccessor": [[2, 4, 1, "", "series"]], "arkouda.akfloat64": [[25, 2, 1, "", "as_integer_ratio"], [25, 2, 1, "", "fromhex"], [25, 2, 1, "", "hex"], [25, 2, 1, "", "is_integer"]], "arkouda.akint64": [[25, 2, 1, "id504", "bit_count"]], "arkouda.akuint64": [[25, 2, 1, "id506", "bit_count"]], "arkouda.alignment": [[3, 7, 1, "", "NonUniqueError"], [3, 5, 1, "", "align"], [3, 5, 1, "", "find"], [3, 5, 1, "", "in1d_intervals"], [3, 5, 1, "", "interval_lookup"], [3, 5, 1, "", "is_cosorted"], [3, 5, 1, "", "left_align"], [3, 5, 1, "", "lookup"], [3, 5, 1, "", "right_align"], [3, 5, 1, "", "search_intervals"], [3, 5, 1, "", "unsqueeze"], [3, 5, 1, "", "zero_up"]], "arkouda.annotations": [[25, 2, 1, "", "compiler_flag"], [25, 2, 1, "", "getMandatoryRelease"], [25, 2, 1, "", "getOptionalRelease"], [25, 2, 1, "", "mandatory"], [25, 2, 1, "", "optional"]], "arkouda.apply": [[4, 5, 1, "", "apply"]], "arkouda.array_api": [[9, 1, 1, "", "Array"], [5, 0, 0, "-", "array_object"], [6, 0, 0, "-", "creation_functions"], [7, 0, 0, "-", "data_type_functions"], [8, 0, 0, "-", "elementwise_functions"], [10, 0, 0, "-", "indexing_functions"], [11, 0, 0, "-", "linalg"], [12, 0, 0, "-", "manipulation_functions"], [13, 0, 0, "-", "searching_functions"], [14, 0, 0, "-", "set_functions"], [15, 0, 0, "-", "sorting_functions"], [16, 0, 0, "-", "statistical_functions"], [17, 0, 0, "-", "utility_functions"]], "arkouda.array_api.Array": [[9, 6, 1, "", "T"], [9, 2, 1, "", "chunk_info"], [9, 6, 1, "", "device"], [9, 6, 1, "", "dtype"], [9, 2, 1, "", "item"], [9, 6, 1, "", "mT"], [9, 6, 1, "", "ndim"], [9, 6, 1, "", "shape"], [9, 6, 1, "", "size"], [9, 2, 1, "", "to_device"], [9, 2, 1, "", "to_ndarray"], [9, 2, 1, "", "tolist"], [9, 2, 1, "", "transpose"]], "arkouda.array_api.array_object": [[5, 1, 1, "", "Array"], [5, 3, 1, "", "HANDLED_FUNCTIONS"], [5, 5, 1, "", "implements_numpy"]], "arkouda.array_api.array_object.Array": [[5, 6, 1, "", "T"], [5, 2, 1, "", "chunk_info"], [5, 6, 1, "", "device"], [5, 6, 1, "", "dtype"], [5, 2, 1, "", "item"], [5, 6, 1, "", "mT"], [5, 6, 1, "", "ndim"], [5, 6, 1, "", "shape"], [5, 6, 1, "", "size"], [5, 2, 1, "", "to_device"], [5, 2, 1, "", "to_ndarray"], [5, 2, 1, "", "tolist"], [5, 2, 1, "", "transpose"]], "arkouda.array_api.creation_functions": [[6, 5, 1, "", "arange"], [6, 5, 1, "", "asarray"], [6, 5, 1, "", "empty"], [6, 5, 1, "", "empty_like"], [6, 5, 1, "", "eye"], [6, 5, 1, "", "from_dlpack"], [6, 5, 1, "", "full"], [6, 5, 1, "", "full_like"], [6, 5, 1, "", "linspace"], [6, 5, 1, "", "meshgrid"], [6, 5, 1, "", "ones"], [6, 5, 1, "", "ones_like"], [6, 5, 1, "", "tril"], [6, 5, 1, "", "triu"], [6, 5, 1, "", "zeros"], [6, 5, 1, "", "zeros_like"]], "arkouda.array_api.data_type_functions": [[7, 5, 1, "", "astype"], [7, 5, 1, "", "can_cast"], [7, 5, 1, "", "finfo"], [7, 1, 1, "", "finfo_object"], [7, 5, 1, "", "iinfo"], [7, 1, 1, "", "iinfo_object"], [7, 5, 1, "", "isdtype"], [7, 5, 1, "", "result_type"]], "arkouda.array_api.data_type_functions.finfo_object": [[7, 4, 1, "", "bits"], [7, 4, 1, "", "dtype"], [7, 4, 1, "", "eps"], [7, 4, 1, "", "max"], [7, 4, 1, "", "min"], [7, 4, 1, "", "smallest_normal"]], "arkouda.array_api.data_type_functions.iinfo_object": [[7, 4, 1, "", "bits"], [7, 4, 1, "", "dtype"], [7, 4, 1, "", "max"], [7, 4, 1, "", "min"]], "arkouda.array_api.elementwise_functions": [[8, 5, 1, "", "abs"], [8, 5, 1, "", "acos"], [8, 5, 1, "", "acosh"], [8, 5, 1, "", "add"], [8, 5, 1, "", "asin"], [8, 5, 1, "", "asinh"], [8, 5, 1, "", "atan"], [8, 5, 1, "", "atan2"], [8, 5, 1, "", "atanh"], [8, 5, 1, "", "bitwise_and"], [8, 5, 1, "", "bitwise_invert"], [8, 5, 1, "", "bitwise_left_shift"], [8, 5, 1, "", "bitwise_or"], [8, 5, 1, "", "bitwise_right_shift"], [8, 5, 1, "", "bitwise_xor"], [8, 5, 1, "", "ceil"], [8, 5, 1, "", "conj"], [8, 5, 1, "", "cos"], [8, 5, 1, "", "cosh"], [8, 5, 1, "", "divide"], [8, 5, 1, "", "equal"], [8, 5, 1, "", "exp"], [8, 5, 1, "", "expm1"], [8, 5, 1, "", "floor"], [8, 5, 1, "", "floor_divide"], [8, 5, 1, "", "greater"], [8, 5, 1, "", "greater_equal"], [8, 5, 1, "", "imag"], [8, 5, 1, "", "isfinite"], [8, 5, 1, "", "isinf"], [8, 5, 1, "", "isnan"], [8, 5, 1, "", "less"], [8, 5, 1, "", "less_equal"], [8, 5, 1, "", "log"], [8, 5, 1, "", "log10"], [8, 5, 1, "", "log1p"], [8, 5, 1, "", "log2"], [8, 5, 1, "", "logaddexp"], [8, 5, 1, "", "logical_and"], [8, 5, 1, "", "logical_not"], [8, 5, 1, "", "logical_or"], [8, 5, 1, "", "logical_xor"], [8, 5, 1, "", "multiply"], [8, 5, 1, "", "negative"], [8, 5, 1, "", "not_equal"], [8, 5, 1, "", "positive"], [8, 5, 1, "", "pow"], [8, 5, 1, "", "real"], [8, 5, 1, "", "remainder"], [8, 5, 1, "", "round"], [8, 5, 1, "", "sign"], [8, 5, 1, "", "sin"], [8, 5, 1, "", "sinh"], [8, 5, 1, "", "sqrt"], [8, 5, 1, "", "square"], [8, 5, 1, "", "subtract"], [8, 5, 1, "", "tan"], [8, 5, 1, "", "tanh"], [8, 5, 1, "", "trunc"]], "arkouda.array_api.indexing_functions": [[10, 5, 1, "", "take"]], "arkouda.array_api.linalg": [[11, 5, 1, "", "matmul"], [11, 5, 1, "", "matrix_transpose"], [11, 5, 1, "", "tensordot"], [11, 5, 1, "", "vecdot"]], "arkouda.array_api.manipulation_functions": [[12, 5, 1, "", "broadcast_arrays"], [12, 5, 1, "", "broadcast_to"], [12, 5, 1, "", "concat"], [12, 5, 1, "", "expand_dims"], [12, 5, 1, "", "flip"], [12, 5, 1, "", "moveaxis"], [12, 5, 1, "", "permute_dims"], [12, 5, 1, "", "repeat"], [12, 5, 1, "", "reshape"], [12, 5, 1, "", "roll"], [12, 5, 1, "", "squeeze"], [12, 5, 1, "", "stack"], [12, 5, 1, "", "tile"], [12, 5, 1, "", "unstack"]], "arkouda.array_api.searching_functions": [[13, 5, 1, "", "argmax"], [13, 5, 1, "", "argmin"], [13, 5, 1, "", "nonzero"], [13, 5, 1, "", "searchsorted"], [13, 5, 1, "", "where"]], "arkouda.array_api.set_functions": [[14, 1, 1, "", "UniqueAllResult"], [14, 1, 1, "", "UniqueCountsResult"], [14, 1, 1, "", "UniqueInverseResult"], [14, 5, 1, "", "unique_all"], [14, 5, 1, "", "unique_counts"], [14, 5, 1, "", "unique_inverse"], [14, 5, 1, "", "unique_values"]], "arkouda.array_api.set_functions.UniqueAllResult": [[14, 4, 1, "", "counts"], [14, 4, 1, "", "indices"], [14, 4, 1, "", "inverse_indices"], [14, 4, 1, "", "values"]], "arkouda.array_api.set_functions.UniqueCountsResult": [[14, 4, 1, "", "counts"], [14, 4, 1, "", "values"]], "arkouda.array_api.set_functions.UniqueInverseResult": [[14, 4, 1, "", "inverse_indices"], [14, 4, 1, "", "values"]], "arkouda.array_api.sorting_functions": [[15, 5, 1, "", "argsort"], [15, 5, 1, "", "sort"]], "arkouda.array_api.statistical_functions": [[16, 5, 1, "", "cumulative_sum"], [16, 5, 1, "", "max"], [16, 5, 1, "", "mean"], [16, 5, 1, "", "mean_shim"], [16, 5, 1, "", "min"], [16, 5, 1, "", "prod"], [16, 5, 1, "", "std"], [16, 5, 1, "", "sum"], [16, 5, 1, "", "var"]], "arkouda.array_api.utility_functions": [[17, 5, 1, "", "all"], [17, 5, 1, "", "any"], [17, 5, 1, "", "clip"], [17, 5, 1, "", "diff"], [17, 5, 1, "", "pad"], [17, 5, 1, "", "trapezoid"], [17, 5, 1, "", "trapz"]], "arkouda.bigint": [[25, 2, 1, "", "itemsize"], [25, 2, 1, "", "name"], [25, 2, 1, "", "ndim"], [25, 2, 1, "", "shape"], [25, 2, 1, "", "type"]], "arkouda.bitType": [[25, 2, 1, "id514", "bit_count"]], "arkouda.categorical": [[18, 1, 1, "", "Categorical"]], "arkouda.categorical.Categorical": [[18, 4, 1, "", "BinOps"], [18, 4, 1, "", "RegisterablePieces"], [18, 4, 1, "", "RequiredPieces"], [18, 2, 1, "", "argsort"], [18, 2, 1, "", "attach"], [18, 4, 1, "", "categories"], [18, 4, 1, "", "codes"], [18, 2, 1, "", "concatenate"], [18, 2, 1, "", "contains"], [18, 4, 1, "", "dtype"], [18, 2, 1, "", "endswith"], [18, 2, 1, "", "equals"], [18, 2, 1, "", "from_codes"], [18, 2, 1, "", "from_return_msg"], [18, 2, 1, "", "group"], [18, 2, 1, "", "hash"], [18, 2, 1, "", "in1d"], [18, 6, 1, "", "inferred_type"], [18, 2, 1, "", "info"], [18, 2, 1, "", "is_registered"], [18, 2, 1, "", "isna"], [18, 4, 1, "", "logger"], [18, 6, 1, "", "nbytes"], [18, 4, 1, "id0", "ndim"], [18, 4, 1, "id1", "nlevels"], [18, 4, 1, "", "objType"], [18, 2, 1, "", "parse_hdf_categoricals"], [18, 4, 1, "id2", "permutation"], [18, 2, 1, "", "pretty_print_info"], [18, 2, 1, "", "register"], [18, 4, 1, "", "registered_name"], [18, 2, 1, "", "reset_categories"], [18, 2, 1, "", "save"], [18, 4, 1, "id3", "segments"], [18, 2, 1, "", "set_categories"], [18, 4, 1, "id4", "shape"], [18, 4, 1, "id5", "size"], [18, 2, 1, "", "sort_values"], [18, 2, 1, "", "standardize_categories"], [18, 2, 1, "", "startswith"], [18, 2, 1, "", "to_hdf"], [18, 2, 1, "", "to_list"], [18, 2, 1, "", "to_ndarray"], [18, 2, 1, "", "to_pandas"], [18, 2, 1, "", "to_parquet"], [18, 2, 1, "", "to_strings"], [18, 2, 1, "", "transfer"], [18, 2, 1, "", "unique"], [18, 2, 1, "", "unregister"], [18, 2, 1, "", "unregister_categorical_by_name"], [18, 2, 1, "", "update_hdf"]], "arkouda.client": [[19, 5, 1, "", "connect"], [19, 5, 1, "", "disconnect"], [19, 5, 1, "", "generate_history"], [19, 5, 1, "", "get_config"], [19, 5, 1, "", "get_max_array_rank"], [19, 5, 1, "", "get_mem_avail"], [19, 5, 1, "", "get_mem_status"], [19, 5, 1, "", "get_mem_used"], [19, 5, 1, "", "get_server_commands"], [19, 5, 1, "", "print_server_commands"], [19, 5, 1, "", "ruok"], [19, 5, 1, "", "shutdown"]], "arkouda.client_dtypes": [[20, 1, 1, "", "BitVector"], [20, 5, 1, "", "BitVectorizer"], [20, 1, 1, "", "Fields"], [20, 1, 1, "", "IPv4"], [20, 5, 1, "", "ip_address"], [20, 5, 1, "", "is_ipv4"], [20, 5, 1, "", "is_ipv6"]], "arkouda.client_dtypes.BitVector": [[20, 4, 1, "", "conserves"], [20, 2, 1, "", "format"], [20, 2, 1, "", "from_return_msg"], [20, 2, 1, "", "opeq"], [20, 2, 1, "", "register"], [20, 4, 1, "", "registered_name"], [20, 4, 1, "", "reverse"], [20, 4, 1, "", "special_objType"], [20, 2, 1, "", "to_list"], [20, 2, 1, "", "to_ndarray"], [20, 4, 1, "", "values"], [20, 4, 1, "", "width"]], "arkouda.client_dtypes.Fields": [[20, 4, 1, "", "MSB_left"], [20, 2, 1, "", "format"], [20, 4, 1, "", "name"], [20, 4, 1, "", "names"], [20, 4, 1, "", "namewidth"], [20, 2, 1, "", "opeq"], [20, 4, 1, "", "pad"], [20, 4, 1, "", "padchar"], [20, 4, 1, "", "separator"], [20, 4, 1, "", "show_int"]], "arkouda.client_dtypes.IPv4": [[20, 2, 1, "", "export_uint"], [20, 2, 1, "", "format"], [20, 2, 1, "", "normalize"], [20, 2, 1, "", "opeq"], [20, 2, 1, "", "register"], [20, 4, 1, "", "special_objType"], [20, 2, 1, "", "to_hdf"], [20, 2, 1, "", "to_list"], [20, 2, 1, "", "to_ndarray"], [20, 2, 1, "", "update_hdf"], [20, 4, 1, "", "values"]], "arkouda.comm_diagnostics": [[21, 5, 1, "", "get_comm_diagnostics"], [21, 5, 1, "", "get_comm_diagnostics_amo"], [21, 5, 1, "", "get_comm_diagnostics_cache_get_hits"], [21, 5, 1, "", "get_comm_diagnostics_cache_get_misses"], [21, 5, 1, "", "get_comm_diagnostics_cache_num_page_readaheads"], [21, 5, 1, "", "get_comm_diagnostics_cache_num_prefetches"], [21, 5, 1, "", "get_comm_diagnostics_cache_prefetch_unused"], [21, 5, 1, "", "get_comm_diagnostics_cache_prefetch_waited"], [21, 5, 1, "", "get_comm_diagnostics_cache_put_hits"], [21, 5, 1, "", "get_comm_diagnostics_cache_put_misses"], [21, 5, 1, "", "get_comm_diagnostics_cache_readahead_unused"], [21, 5, 1, "", "get_comm_diagnostics_cache_readahead_waited"], [21, 5, 1, "", "get_comm_diagnostics_execute_on"], [21, 5, 1, "", "get_comm_diagnostics_execute_on_fast"], [21, 5, 1, "", "get_comm_diagnostics_execute_on_nb"], [21, 5, 1, "", "get_comm_diagnostics_get"], [21, 5, 1, "", "get_comm_diagnostics_get_nb"], [21, 5, 1, "", "get_comm_diagnostics_put"], [21, 5, 1, "", "get_comm_diagnostics_put_nb"], [21, 5, 1, "", "get_comm_diagnostics_try_nb"], [21, 5, 1, "", "get_comm_diagnostics_wait_nb"], [21, 5, 1, "", "print_comm_diagnostics_table"], [21, 5, 1, "", "reset_comm_diagnostics"], [21, 5, 1, "", "start_comm_diagnostics"], [21, 5, 1, "", "start_verbose_comm"], [21, 5, 1, "", "stop_comm_diagnostics"], [21, 5, 1, "", "stop_verbose_comm"]], "arkouda.dataframe": [[22, 1, 1, "", "DataFrame"], [22, 1, 1, "", "DataFrameGroupBy"], [22, 1, 1, "", "DiffAggregate"], [22, 5, 1, "", "intersect"], [22, 5, 1, "", "intx"], [22, 5, 1, "", "invert_permutation"], [22, 5, 1, "", "merge"]], "arkouda.dataframe.DataFrame": [[22, 2, 1, "", "GroupBy"], [22, 2, 1, "", "all"], [22, 2, 1, "", "any"], [22, 2, 1, "", "append"], [22, 2, 1, "", "apply_permutation"], [22, 2, 1, "", "argsort"], [22, 2, 1, "", "assign"], [22, 2, 1, "", "attach"], [22, 2, 1, "", "coargsort"], [22, 6, 1, "", "columns"], [22, 2, 1, "", "concat"], [22, 2, 1, "", "corr"], [22, 2, 1, "", "count"], [22, 2, 1, "", "drop"], [22, 2, 1, "", "drop_duplicates"], [22, 2, 1, "", "dropna"], [22, 6, 1, "", "dtypes"], [22, 6, 1, "", "empty"], [22, 2, 1, "", "filter_by_range"], [22, 2, 1, "", "from_pandas"], [22, 2, 1, "", "from_return_msg"], [22, 2, 1, "", "groupby"], [22, 2, 1, "", "head"], [22, 6, 1, "", "index"], [22, 6, 1, "", "info"], [22, 2, 1, "", "is_registered"], [22, 2, 1, "", "isin"], [22, 2, 1, "", "isna"], [22, 2, 1, "", "load"], [22, 2, 1, "", "memory_usage"], [22, 2, 1, "", "memory_usage_info"], [22, 2, 1, "", "merge"], [22, 2, 1, "", "notna"], [22, 2, 1, "", "objType"], [22, 2, 1, "", "read_csv"], [22, 2, 1, "", "register"], [22, 2, 1, "", "rename"], [22, 2, 1, "", "reset_index"], [22, 2, 1, "", "sample"], [22, 2, 1, "", "save"], [22, 6, 1, "", "shape"], [22, 6, 1, "", "size"], [22, 2, 1, "", "sort_index"], [22, 2, 1, "", "sort_values"], [22, 2, 1, "", "tail"], [22, 2, 1, "", "to_csv"], [22, 2, 1, "", "to_hdf"], [22, 2, 1, "", "to_markdown"], [22, 2, 1, "", "to_pandas"], [22, 2, 1, "", "to_parquet"], [22, 2, 1, "", "transfer"], [22, 2, 1, "", "unregister"], [22, 2, 1, "", "unregister_dataframe_by_name"], [22, 2, 1, "", "update_hdf"], [22, 2, 1, "", "update_nrows"]], "arkouda.dataframe.DataFrameGroupBy": [[22, 2, 1, "", "all"], [22, 2, 1, "", "any"], [22, 2, 1, "", "argmax"], [22, 2, 1, "", "argmin"], [22, 4, 1, "", "as_index"], [22, 2, 1, "", "broadcast"], [22, 2, 1, "", "count"], [22, 4, 1, "", "df"], [22, 2, 1, "", "diff"], [22, 2, 1, "", "first"], [22, 4, 1, "", "gb"], [22, 4, 1, "", "gb_key_names"], [22, 2, 1, "", "head"], [22, 2, 1, "", "max"], [22, 2, 1, "", "mean"], [22, 2, 1, "", "median"], [22, 2, 1, "", "min"], [22, 2, 1, "", "mode"], [22, 2, 1, "", "nunique"], [22, 2, 1, "", "prod"], [22, 2, 1, "", "sample"], [22, 2, 1, "", "size"], [22, 2, 1, "", "std"], [22, 2, 1, "", "sum"], [22, 2, 1, "", "tail"], [22, 2, 1, "", "unique"], [22, 2, 1, "", "var"], [22, 2, 1, "", "xor"]], "arkouda.dataframe.DiffAggregate": [[22, 2, 1, "", "all"], [22, 2, 1, "", "any"], [22, 2, 1, "", "argmax"], [22, 2, 1, "", "argmin"], [22, 2, 1, "", "count"], [22, 2, 1, "", "first"], [22, 4, 1, "", "gb"], [22, 2, 1, "", "max"], [22, 2, 1, "", "mean"], [22, 2, 1, "", "median"], [22, 2, 1, "", "min"], [22, 2, 1, "", "mode"], [22, 2, 1, "", "nunique"], [22, 2, 1, "", "prod"], [22, 2, 1, "", "std"], [22, 2, 1, "", "sum"], [22, 2, 1, "", "unique"], [22, 4, 1, "", "values"], [22, 2, 1, "", "var"], [22, 2, 1, "", "xor"]], "arkouda.float16": [[25, 2, 1, "", "as_integer_ratio"], [25, 2, 1, "", "is_integer"]], "arkouda.float32": [[25, 2, 1, "", "as_integer_ratio"], [25, 2, 1, "", "is_integer"]], "arkouda.float64": [[25, 2, 1, "", "as_integer_ratio"], [25, 2, 1, "", "fromhex"], [25, 2, 1, "", "hex"], [25, 2, 1, "", "is_integer"]], "arkouda.groupbyclass": [[23, 1, 1, "", "GROUPBY_REDUCTION_TYPES"], [23, 1, 1, "", "GroupBy"], [23, 5, 1, "", "broadcast"], [23, 5, 1, "", "unique"]], "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES": [[23, 2, 1, "", "copy"], [23, 2, 1, "", "difference"], [23, 2, 1, "", "intersection"], [23, 2, 1, "", "isdisjoint"], [23, 2, 1, "", "issubset"], [23, 2, 1, "", "issuperset"], [23, 2, 1, "", "symmetric_difference"], [23, 2, 1, "", "union"]], "arkouda.groupbyclass.GroupBy": [[23, 2, 1, "", "AND"], [23, 2, 1, "", "OR"], [23, 2, 1, "", "Reductions"], [23, 2, 1, "", "XOR"], [23, 2, 1, "", "aggregate"], [23, 2, 1, "", "all"], [23, 2, 1, "", "any"], [23, 2, 1, "", "argmax"], [23, 2, 1, "", "argmin"], [23, 2, 1, "", "attach"], [23, 2, 1, "", "broadcast"], [23, 2, 1, "", "build_from_components"], [23, 2, 1, "", "count"], [23, 4, 1, "", "dropna"], [23, 2, 1, "", "first"], [23, 2, 1, "", "from_return_msg"], [23, 2, 1, "", "head"], [23, 2, 1, "", "is_registered"], [23, 4, 1, "", "logger"], [23, 2, 1, "", "max"], [23, 2, 1, "", "mean"], [23, 2, 1, "", "median"], [23, 2, 1, "", "min"], [23, 2, 1, "", "mode"], [23, 2, 1, "", "most_common"], [23, 4, 1, "", "ngroups"], [23, 4, 1, "", "nkeys"], [23, 2, 1, "", "nunique"], [23, 2, 1, "", "objType"], [23, 4, 1, "", "permutation"], [23, 2, 1, "", "prod"], [23, 2, 1, "", "register"], [23, 2, 1, "", "sample"], [23, 4, 1, "", "segments"], [23, 2, 1, "id0", "size"], [23, 2, 1, "", "std"], [23, 2, 1, "", "sum"], [23, 2, 1, "", "tail"], [23, 2, 1, "", "to_hdf"], [23, 2, 1, "", "unique"], [23, 4, 1, "", "unique_keys"], [23, 2, 1, "", "unregister"], [23, 2, 1, "", "unregister_groupby_by_name"], [23, 2, 1, "", "update_hdf"], [23, 2, 1, "", "var"]], "arkouda.history": [[24, 1, 1, "", "HistoryRetriever"], [24, 1, 1, "", "NotebookHistoryRetriever"], [24, 1, 1, "", "ShellHistoryRetriever"]], "arkouda.history.HistoryRetriever": [[24, 2, 1, "", "retrieve"]], "arkouda.history.NotebookHistoryRetriever": [[24, 2, 1, "", "retrieve"]], "arkouda.history.ShellHistoryRetriever": [[24, 2, 1, "", "retrieve"]], "arkouda.index": [[26, 1, 1, "", "Index"], [26, 1, 1, "", "MultiIndex"]], "arkouda.index.Index": [[26, 2, 1, "", "argsort"], [26, 2, 1, "", "concat"], [26, 2, 1, "", "equals"], [26, 2, 1, "", "factory"], [26, 2, 1, "", "from_return_msg"], [26, 6, 1, "", "index"], [26, 6, 1, "", "inferred_type"], [26, 2, 1, "", "is_registered"], [26, 6, 1, "", "is_unique"], [26, 2, 1, "", "lookup"], [26, 2, 1, "", "map"], [26, 4, 1, "", "max_list_size"], [26, 2, 1, "", "memory_usage"], [26, 6, 1, "", "names"], [26, 6, 1, "", "ndim"], [26, 6, 1, "", "nlevels"], [26, 4, 1, "", "objType"], [26, 2, 1, "", "register"], [26, 4, 1, "", "registered_name"], [26, 2, 1, "", "save"], [26, 2, 1, "", "set_dtype"], [26, 6, 1, "", "shape"], [26, 2, 1, "", "to_csv"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "to_hdf"], [26, 2, 1, "", "to_list"], [26, 2, 1, "", "to_ndarray"], [26, 2, 1, "", "to_pandas"], [26, 2, 1, "", "to_parquet"], [26, 2, 1, "", "unregister"], [26, 2, 1, "", "update_hdf"]], "arkouda.index.MultiIndex": [[26, 2, 1, "", "argsort"], [26, 2, 1, "", "concat"], [26, 6, 1, "", "dtype"], [26, 2, 1, "", "equal_levels"], [26, 2, 1, "", "get_level_values"], [26, 6, 1, "", "index"], [26, 6, 1, "", "inferred_type"], [26, 2, 1, "", "is_registered"], [26, 4, 1, "", "levels"], [26, 2, 1, "", "lookup"], [26, 2, 1, "", "memory_usage"], [26, 6, 1, "", "name"], [26, 6, 1, "", "names"], [26, 6, 1, "", "ndim"], [26, 6, 1, "", "nlevels"], [26, 4, 1, "", "objType"], [26, 2, 1, "", "register"], [26, 4, 1, "", "registered_name"], [26, 2, 1, "", "set_dtype"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "to_hdf"], [26, 2, 1, "", "to_list"], [26, 2, 1, "", "to_ndarray"], [26, 2, 1, "", "to_pandas"], [26, 2, 1, "", "unregister"], [26, 2, 1, "", "update_hdf"]], "arkouda.infoclass": [[27, 3, 1, "", "AllSymbols"], [27, 3, 1, "", "RegisteredSymbols"], [27, 5, 1, "", "information"], [27, 5, 1, "", "list_registry"], [27, 5, 1, "", "list_symbol_table"], [27, 5, 1, "", "pretty_print_information"]], "arkouda.int16": [[25, 2, 1, "", "bit_count"]], "arkouda.int32": [[25, 2, 1, "", "bit_count"]], "arkouda.int64": [[25, 2, 1, "", "bit_count"]], "arkouda.int8": [[25, 2, 1, "", "bit_count"]], "arkouda.intTypes": [[25, 2, 1, "id525", "copy"], [25, 2, 1, "id526", "difference"], [25, 2, 1, "id527", "intersection"], [25, 2, 1, "id528", "isdisjoint"], [25, 2, 1, "id529", "issubset"], [25, 2, 1, "id530", "issuperset"], [25, 2, 1, "id531", "symmetric_difference"], [25, 2, 1, "id532", "union"]], "arkouda.io": [[28, 5, 1, "", "export"], [28, 5, 1, "", "get_columns"], [28, 5, 1, "", "get_datasets"], [28, 5, 1, "", "get_filetype"], [28, 5, 1, "", "get_null_indices"], [28, 5, 1, "", "import_data"], [28, 5, 1, "", "load"], [28, 5, 1, "", "load_all"], [28, 5, 1, "", "load_checkpoint"], [28, 5, 1, "", "ls"], [28, 5, 1, "", "ls_csv"], [28, 5, 1, "", "read"], [28, 5, 1, "", "read_csv"], [28, 5, 1, "", "read_hdf"], [28, 5, 1, "", "read_parquet"], [28, 5, 1, "", "read_tagged_data"], [28, 5, 1, "", "read_zarr"], [28, 5, 1, "", "receive"], [28, 5, 1, "", "receive_dataframe"], [28, 5, 1, "", "restore"], [28, 5, 1, "", "save_all"], [28, 5, 1, "", "save_checkpoint"], [28, 5, 1, "", "snapshot"], [28, 5, 1, "", "to_csv"], [28, 5, 1, "", "to_hdf"], [28, 5, 1, "", "to_parquet"], [28, 5, 1, "", "to_zarr"], [28, 5, 1, "", "update_hdf"]], "arkouda.io_util": [[29, 5, 1, "", "delete_directory"], [29, 5, 1, "", "delimited_file_to_dict"], [29, 5, 1, "", "dict_to_delimited_file"], [29, 5, 1, "", "get_directory"], [29, 5, 1, "", "write_line_to_file"]], "arkouda.join": [[30, 5, 1, "", "compute_join_size"], [30, 5, 1, "", "gen_ranges"], [30, 5, 1, "", "join_on_eq_with_dt"]], "arkouda.logger": [[31, 1, 1, "", "LogLevel"], [31, 5, 1, "", "disableVerbose"], [31, 5, 1, "", "enableVerbose"], [31, 5, 1, "", "write_log"]], "arkouda.logger.LogLevel": [[31, 4, 1, "", "CRITICAL"], [31, 4, 1, "", "DEBUG"], [31, 4, 1, "", "ERROR"], [31, 4, 1, "", "INFO"], [31, 4, 1, "", "WARN"]], "arkouda.match": [[32, 1, 1, "", "Match"]], "arkouda.match.Match": [[113, 2, 1, "", "end"], [113, 2, 1, "", "find_matches"], [113, 2, 1, "", "group"], [113, 2, 1, "", "match_type"], [113, 2, 1, "", "matched"], [32, 4, 1, "", "re"], [113, 2, 1, "", "start"]], "arkouda.matcher": [[33, 1, 1, "", "Matcher"]], "arkouda.matcher.Matcher": [[33, 4, 1, "", "LocationsInfo"], [33, 2, 1, "", "find_locations"], [33, 2, 1, "", "findall"], [33, 4, 1, "", "full_match_bool"], [33, 4, 1, "", "full_match_ind"], [33, 2, 1, "", "get_match"], [33, 4, 1, "", "indices"], [33, 4, 1, "", "lengths"], [33, 4, 1, "", "logger"], [33, 4, 1, "", "match_bool"], [33, 4, 1, "", "match_ind"], [33, 4, 1, "", "num_matches"], [33, 4, 1, "", "objType"], [33, 4, 1, "", "parent_entry_name"], [33, 4, 1, "", "populated"], [33, 4, 1, "", "search_bool"], [33, 4, 1, "", "search_ind"], [33, 2, 1, "", "split"], [33, 4, 1, "", "starts"], [33, 2, 1, "", "sub"]], "arkouda.numpy": [[39, 1, 1, "", "ARKOUDA_SUPPORTED_BOOLS"], [39, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [39, 1, 1, "", "ARKOUDA_SUPPORTED_FLOATS"], [39, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [39, 1, 1, "", "ARKOUDA_SUPPORTED_NUMBERS"], [39, 1, 1, "", "BoolDType"], [39, 1, 1, "", "ByteDType"], [39, 1, 1, "", "BytesDType"], [39, 1, 1, "", "CLongDoubleDType"], [39, 1, 1, "", "Complex128DType"], [39, 1, 1, "", "Complex64DType"], [39, 1, 1, "", "DType"], [39, 1, 1, "", "DTypeObjects"], [39, 1, 1, "", "DTypes"], [39, 1, 1, "", "DateTime64DType"], [39, 1, 1, "", "Datetime"], [39, 1, 1, "", "Enum"], [39, 1, 1, "", "ErrorMode"], [39, 1, 1, "", "Float16DType"], [39, 1, 1, "", "Float32DType"], [39, 1, 1, "", "Float64DType"], [39, 1, 1, "", "GroupBy"], [39, 1, 1, "", "Int16DType"], [39, 1, 1, "", "Int32DType"], [39, 1, 1, "", "Int64DType"], [39, 1, 1, "", "Int8DType"], [39, 1, 1, "", "IntDType"], [39, 3, 1, "", "LEN_SUFFIX"], [39, 1, 1, "", "LongDType"], [39, 1, 1, "", "LongDoubleDType"], [39, 1, 1, "", "LongLongDType"], [39, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [39, 1, 1, "", "NumericDTypes"], [39, 1, 1, "", "ObjectDType"], [39, 7, 1, "id4", "RegistrationError"], [39, 3, 1, "", "SEG_SUFFIX"], [39, 1, 1, "", "ScalarDTypes"], [39, 1, 1, "", "SegArray"], [39, 1, 1, "", "SeriesDTypes"], [39, 1, 1, "", "ShortDType"], [39, 3, 1, "", "SortingAlgorithm"], [39, 1, 1, "", "StrDType"], [39, 1, 1, "id12", "Strings"], [39, 1, 1, "", "TimeDelta64DType"], [39, 1, 1, "", "Timedelta"], [39, 1, 1, "", "UByteDType"], [39, 1, 1, "", "UInt16DType"], [39, 1, 1, "", "UInt32DType"], [39, 1, 1, "", "UInt64DType"], [39, 1, 1, "", "UInt8DType"], [39, 1, 1, "", "UIntDType"], [39, 1, 1, "", "ULongDType"], [39, 1, 1, "", "ULongLongDType"], [39, 1, 1, "", "UShortDType"], [39, 1, 1, "", "Union"], [39, 3, 1, "", "VAL_SUFFIX"], [39, 1, 1, "", "VoidDType"], [39, 5, 1, "", "abs"], [39, 1, 1, "", "akbool"], [39, 1, 1, "", "akint64"], [39, 1, 1, "", "akuint64"], [39, 1, 1, "", "all_scalars"], [39, 1, 1, "", "annotations"], [39, 5, 1, "id90", "arange"], [39, 5, 1, "", "arccos"], [39, 5, 1, "", "arccosh"], [39, 5, 1, "", "arcsin"], [39, 5, 1, "", "arcsinh"], [39, 5, 1, "", "arctan"], [39, 5, 1, "", "arctan2"], [39, 5, 1, "", "arctanh"], [39, 5, 1, "", "argmaxk"], [39, 5, 1, "", "argmink"], [39, 5, 1, "", "argsort"], [39, 5, 1, "id91", "array"], [39, 5, 1, "", "array_equal"], [39, 5, 1, "", "attach"], [39, 5, 1, "", "attach_all"], [39, 5, 1, "", "attach_pdarray"], [39, 1, 1, "", "bigint"], [39, 5, 1, "", "bigint_from_uint_arrays"], [39, 1, 1, "", "bitType"], [39, 1, 1, "", "bool_"], [39, 1, 1, "", "bool_scalars"], [39, 5, 1, "", "broadcast"], [39, 5, 1, "", "broadcast_dims"], [39, 5, 1, "", "broadcast_to_shape"], [39, 5, 1, "", "can_cast"], [39, 5, 1, "id92", "cast"], [39, 5, 1, "", "ceil"], [34, 0, 0, "-", "char"], [39, 5, 1, "", "clear"], [39, 5, 1, "", "clip"], [39, 5, 1, "", "clz"], [39, 5, 1, "", "coargsort"], [39, 1, 1, "", "complex128"], [39, 1, 1, "", "complex64"], [39, 5, 1, "id93", "concatenate"], [39, 5, 1, "", "corr"], [39, 5, 1, "", "cos"], [39, 5, 1, "", "cosh"], [39, 5, 1, "", "count_nonzero"], [39, 5, 1, "", "cov"], [39, 5, 1, "id94", "create_pdarray"], [35, 0, 0, "-", "ctypeslib"], [39, 5, 1, "", "ctz"], [39, 5, 1, "", "cumprod"], [39, 5, 1, "", "cumsum"], [39, 5, 1, "", "date_range"], [39, 5, 1, "", "deg2rad"], [39, 5, 1, "", "delete"], [39, 5, 1, "", "divmod"], [39, 5, 1, "", "dot"], [39, 5, 1, "", "dtype"], [36, 0, 0, "-", "dtypes"], [37, 0, 0, "-", "exceptions"], [39, 5, 1, "", "exp"], [39, 5, 1, "", "expm1"], [39, 5, 1, "", "eye"], [38, 0, 0, "-", "fft"], [39, 5, 1, "", "flip"], [39, 1, 1, "", "float16"], [39, 1, 1, "", "float32"], [39, 1, 1, "", "float64"], [39, 1, 1, "", "float_scalars"], [39, 5, 1, "", "floor"], [39, 5, 1, "", "fmod"], [39, 5, 1, "id95", "from_series"], [39, 5, 1, "", "full"], [39, 5, 1, "", "full_like"], [39, 5, 1, "", "getArkoudaLogger"], [39, 5, 1, "", "get_byteorder"], [39, 5, 1, "", "get_server_byteorder"], [39, 5, 1, "", "hash"], [39, 5, 1, "", "histogram"], [39, 5, 1, "", "histogram2d"], [39, 5, 1, "", "histogramdd"], [39, 5, 1, "", "in1d"], [39, 5, 1, "", "indexof1d"], [39, 1, 1, "", "int16"], [39, 1, 1, "", "int32"], [39, 1, 1, "id96", "int64"], [39, 1, 1, "", "int8"], [39, 1, 1, "id98", "intTypes"], [39, 1, 1, "id108", "int_scalars"], [39, 5, 1, "", "intersect1d"], [39, 5, 1, "", "isSupportedBool"], [39, 5, 1, "", "isSupportedDType"], [39, 5, 1, "", "isSupportedFloat"], [39, 5, 1, "id110", "isSupportedInt"], [39, 5, 1, "", "isSupportedNumber"], [39, 5, 1, "", "is_registered"], [39, 5, 1, "", "isfinite"], [39, 5, 1, "", "isinf"], [39, 5, 1, "", "isnan"], [41, 0, 0, "-", "lib"], [42, 0, 0, "-", "linalg"], [39, 5, 1, "", "linspace"], [39, 5, 1, "", "log"], [39, 5, 1, "", "log10"], [39, 5, 1, "", "log1p"], [39, 5, 1, "", "log2"], [43, 0, 0, "-", "ma"], [44, 0, 0, "-", "manipulation_functions"], [39, 5, 1, "", "matmul"], [39, 5, 1, "", "maxk"], [39, 5, 1, "", "mean"], [39, 5, 1, "", "median"], [39, 5, 1, "", "mink"], [39, 5, 1, "", "mod"], [45, 0, 0, "-", "numeric"], [39, 1, 1, "", "numeric_and_bool_scalars"], [39, 1, 1, "", "numeric_scalars"], [39, 1, 1, "", "numpy_scalars"], [39, 5, 1, "id111", "ones"], [39, 5, 1, "", "ones_like"], [39, 5, 1, "", "parity"], [39, 1, 1, "id187", "pdarray"], [46, 0, 0, "-", "pdarrayclass"], [47, 0, 0, "-", "pdarraycreation"], [48, 0, 0, "-", "pdarraymanipulation"], [49, 0, 0, "-", "pdarraysetops"], [50, 0, 0, "-", "polynomial"], [39, 5, 1, "", "popcount"], [39, 5, 1, "", "power"], [39, 5, 1, "", "promote_to_common_dtype"], [39, 5, 1, "", "putmask"], [39, 5, 1, "", "rad2deg"], [39, 5, 1, "", "randint"], [51, 0, 0, "-", "random"], [39, 5, 1, "", "random_strings_lognormal"], [39, 5, 1, "", "random_strings_uniform"], [52, 0, 0, "-", "rec"], [39, 5, 1, "", "register_all"], [39, 5, 1, "", "repeat"], [39, 5, 1, "", "resolve_scalar_dtype"], [39, 5, 1, "", "rotl"], [39, 5, 1, "", "rotr"], [39, 5, 1, "", "round"], [39, 5, 1, "", "scalar_array"], [39, 5, 1, "", "searchsorted"], [53, 0, 0, "-", "segarray"], [39, 5, 1, "", "setdiff1d"], [39, 5, 1, "", "setxor1d"], [39, 5, 1, "", "shape"], [39, 5, 1, "", "sign"], [39, 5, 1, "", "sin"], [39, 5, 1, "", "sinh"], [39, 5, 1, "", "sort"], [54, 0, 0, "-", "sorting"], [39, 5, 1, "", "sqrt"], [39, 5, 1, "", "square"], [39, 5, 1, "", "squeeze"], [39, 5, 1, "", "standard_normal"], [39, 5, 1, "", "std"], [39, 1, 1, "id256", "str_"], [39, 1, 1, "", "str_scalars"], [55, 0, 0, "-", "strings"], [39, 5, 1, "", "tan"], [39, 5, 1, "", "tanh"], [39, 5, 1, "", "tile"], [56, 0, 0, "-", "timeclass"], [39, 5, 1, "", "timedelta_range"], [39, 5, 1, "", "transpose"], [39, 5, 1, "", "tril"], [39, 5, 1, "", "triu"], [39, 5, 1, "", "trunc"], [39, 1, 1, "", "uint16"], [39, 1, 1, "", "uint32"], [39, 1, 1, "", "uint64"], [39, 1, 1, "", "uint8"], [39, 5, 1, "", "uniform"], [39, 5, 1, "", "union1d"], [39, 5, 1, "", "unregister"], [39, 5, 1, "", "unregister_all"], [39, 5, 1, "", "unregister_pdarray_by_name"], [57, 0, 0, "-", "util"], [58, 0, 0, "-", "utils"], [39, 5, 1, "", "value_counts"], [39, 5, 1, "", "var"], [39, 5, 1, "", "vecdot"], [39, 5, 1, "", "vstack"], [39, 5, 1, "", "where"], [39, 5, 1, "id324", "zeros"], [39, 5, 1, "", "zeros_like"]], "arkouda.numpy.ARKOUDA_SUPPORTED_BOOLS": [[39, 2, 1, "", "count"], [39, 2, 1, "", "index"]], "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES": [[39, 2, 1, "", "count"], [39, 2, 1, "", "index"]], "arkouda.numpy.ARKOUDA_SUPPORTED_FLOATS": [[39, 2, 1, "", "count"], [39, 2, 1, "", "index"]], "arkouda.numpy.ARKOUDA_SUPPORTED_INTS": [[39, 2, 1, "", "count"], [39, 2, 1, "", "index"]], "arkouda.numpy.ARKOUDA_SUPPORTED_NUMBERS": [[39, 2, 1, "", "count"], [39, 2, 1, "", "index"]], "arkouda.numpy.DType": [[39, 2, 1, "", "BIGINT"], [39, 2, 1, "", "BOOL"], [39, 2, 1, "", "COMPLEX128"], [39, 2, 1, "", "COMPLEX64"], [39, 2, 1, "", "FLOAT"], [39, 2, 1, "", "FLOAT32"], [39, 2, 1, "", "FLOAT64"], [39, 2, 1, "", "INT"], [39, 2, 1, "", "INT16"], [39, 2, 1, "", "INT32"], [39, 2, 1, "", "INT64"], [39, 2, 1, "", "INT8"], [39, 2, 1, "", "STR"], [39, 2, 1, "", "UINT"], [39, 2, 1, "", "UINT16"], [39, 2, 1, "", "UINT32"], [39, 2, 1, "", "UINT64"], [39, 2, 1, "", "UINT8"], [39, 2, 1, "", "name"], [39, 2, 1, "", "value"]], "arkouda.numpy.DTypeObjects": [[39, 2, 1, "", "copy"], [39, 2, 1, "", "difference"], [39, 2, 1, "", "intersection"], [39, 2, 1, "", "isdisjoint"], [39, 2, 1, "", "issubset"], [39, 2, 1, "", "issuperset"], [39, 2, 1, "", "symmetric_difference"], [39, 2, 1, "", "union"]], "arkouda.numpy.DTypes": [[39, 2, 1, "", "copy"], [39, 2, 1, "", "difference"], [39, 2, 1, "", "intersection"], [39, 2, 1, "", "isdisjoint"], [39, 2, 1, "", "issubset"], [39, 2, 1, "", "issuperset"], [39, 2, 1, "", "symmetric_difference"], [39, 2, 1, "", "union"]], "arkouda.numpy.Datetime": [[39, 6, 1, "", "date"], [39, 6, 1, "", "day"], [39, 6, 1, "", "day_of_week"], [39, 6, 1, "", "day_of_year"], [39, 6, 1, "", "dayofweek"], [39, 6, 1, "", "dayofyear"], [39, 6, 1, "", "hour"], [39, 6, 1, "", "is_leap_year"], [39, 2, 1, "", "is_registered"], [39, 2, 1, "", "isocalendar"], [39, 6, 1, "", "microsecond"], [39, 6, 1, "", "millisecond"], [39, 6, 1, "", "minute"], [39, 6, 1, "", "month"], [39, 6, 1, "", "nanosecond"], [39, 2, 1, "", "register"], [39, 6, 1, "", "second"], [39, 4, 1, "", "special_objType"], [39, 2, 1, "", "sum"], [39, 4, 1, "", "supported_opeq"], [39, 4, 1, "", "supported_with_datetime"], [39, 4, 1, "", "supported_with_pdarray"], [39, 4, 1, "", "supported_with_r_datetime"], [39, 4, 1, "", "supported_with_r_pdarray"], [39, 4, 1, "", "supported_with_r_timedelta"], [39, 4, 1, "", "supported_with_timedelta"], [39, 2, 1, "", "to_pandas"], [39, 2, 1, "", "unregister"], [39, 6, 1, "", "week"], [39, 6, 1, "", "weekday"], [39, 6, 1, "", "weekofyear"], [39, 6, 1, "", "year"]], "arkouda.numpy.ErrorMode": [[39, 4, 1, "", "ignore"], [39, 4, 1, "", "return_validity"], [39, 4, 1, "", "strict"]], "arkouda.numpy.GroupBy": [[39, 2, 1, "", "AND"], [39, 2, 1, "", "OR"], [39, 2, 1, "", "Reductions"], [39, 2, 1, "", "XOR"], [39, 2, 1, "", "aggregate"], [39, 2, 1, "", "all"], [39, 2, 1, "", "any"], [39, 2, 1, "", "argmax"], [39, 2, 1, "", "argmin"], [39, 2, 1, "", "attach"], [39, 2, 1, "", "broadcast"], [39, 2, 1, "", "build_from_components"], [39, 2, 1, "", "count"], [39, 4, 1, "", "dropna"], [39, 2, 1, "", "first"], [39, 2, 1, "", "from_return_msg"], [39, 2, 1, "", "head"], [39, 2, 1, "", "is_registered"], [39, 4, 1, "", "logger"], [39, 2, 1, "", "max"], [39, 2, 1, "", "mean"], [39, 2, 1, "", "median"], [39, 2, 1, "", "min"], [39, 2, 1, "", "mode"], [39, 2, 1, "", "most_common"], [39, 4, 1, "", "ngroups"], [39, 4, 1, "", "nkeys"], [39, 2, 1, "", "nunique"], [39, 2, 1, "", "objType"], [39, 4, 1, "", "permutation"], [39, 2, 1, "", "prod"], [39, 2, 1, "", "register"], [39, 2, 1, "", "sample"], [39, 4, 1, "", "segments"], [39, 2, 1, "id0", "size"], [39, 2, 1, "", "std"], [39, 2, 1, "", "sum"], [39, 2, 1, "", "tail"], [39, 2, 1, "", "to_hdf"], [39, 2, 1, "", "unique"], [39, 4, 1, "", "unique_keys"], [39, 2, 1, "", "unregister"], [39, 2, 1, "", "unregister_groupby_by_name"], [39, 2, 1, "", "update_hdf"], [39, 2, 1, "", "var"]], "arkouda.numpy.NUMBER_FORMAT_STRINGS": [[39, 2, 1, "", "clear"], [39, 2, 1, "", "copy"], [39, 2, 1, "", "fromkeys"], [39, 2, 1, "", "get"], [39, 2, 1, "", "items"], [39, 2, 1, "", "keys"], [39, 2, 1, "", "pop"], [39, 2, 1, "", "popitem"], [39, 2, 1, "", "setdefault"], [39, 2, 1, "", "update"], [39, 2, 1, "", "values"]], "arkouda.numpy.NumericDTypes": [[39, 2, 1, "", "copy"], [39, 2, 1, "", "difference"], [39, 2, 1, "", "intersection"], [39, 2, 1, "", "isdisjoint"], [39, 2, 1, "", "issubset"], [39, 2, 1, "", "issuperset"], [39, 2, 1, "", "symmetric_difference"], [39, 2, 1, "", "union"]], "arkouda.numpy.ScalarDTypes": [[39, 2, 1, "", "copy"], [39, 2, 1, "", "difference"], [39, 2, 1, "", "intersection"], [39, 2, 1, "", "isdisjoint"], [39, 2, 1, "", "issubset"], [39, 2, 1, "", "issuperset"], [39, 2, 1, "", "symmetric_difference"], [39, 2, 1, "", "union"]], "arkouda.numpy.SegArray": [[39, 2, 1, "", "AND"], [39, 2, 1, "", "OR"], [39, 2, 1, "", "XOR"], [39, 2, 1, "", "aggregate"], [39, 2, 1, "", "all"], [39, 2, 1, "", "any"], [39, 2, 1, "", "append"], [39, 2, 1, "", "append_single"], [39, 2, 1, "", "argmax"], [39, 2, 1, "", "argmin"], [39, 2, 1, "", "attach"], [39, 2, 1, "", "concat"], [39, 2, 1, "", "copy"], [39, 4, 1, "", "dtype"], [39, 2, 1, "", "filter"], [39, 2, 1, "", "from_multi_array"], [39, 2, 1, "", "from_parts"], [39, 2, 1, "", "from_return_msg"], [39, 2, 1, "", "get_jth"], [39, 2, 1, "", "get_length_n"], [39, 2, 1, "", "get_ngrams"], [39, 2, 1, "", "get_prefixes"], [39, 2, 1, "", "get_suffixes"], [39, 6, 1, "", "grouping"], [39, 2, 1, "", "hash"], [39, 2, 1, "", "intersect"], [39, 2, 1, "", "is_registered"], [39, 2, 1, "", "load"], [39, 4, 1, "", "logger"], [39, 2, 1, "", "max"], [39, 2, 1, "", "mean"], [39, 2, 1, "", "min"], [39, 6, 1, "", "nbytes"], [39, 6, 1, "", "non_empty"], [39, 2, 1, "", "nunique"], [39, 4, 1, "", "objType"], [39, 2, 1, "", "prepend_single"], [39, 2, 1, "", "prod"], [39, 2, 1, "", "read_hdf"], [39, 2, 1, "", "register"], [39, 4, 1, "", "registered_name"], [39, 2, 1, "", "remove_repeats"], [39, 2, 1, "", "save"], [39, 4, 1, "", "segments"], [39, 2, 1, "", "set_jth"], [39, 2, 1, "", "setdiff"], [39, 2, 1, "", "setxor"], [39, 4, 1, "", "size"], [39, 2, 1, "", "sum"], [39, 2, 1, "", "to_hdf"], [39, 2, 1, "", "to_list"], [39, 2, 1, "", "to_ndarray"], [39, 2, 1, "", "to_parquet"], [39, 2, 1, "", "transfer"], [39, 2, 1, "", "union"], [39, 2, 1, "", "unique"], [39, 2, 1, "", "unregister"], [39, 2, 1, "", "unregister_segarray_by_name"], [39, 2, 1, "", "update_hdf"], [39, 4, 1, "", "valsize"], [39, 4, 1, "", "values"]], "arkouda.numpy.SeriesDTypes": [[39, 2, 1, "", "clear"], [39, 2, 1, "", "copy"], [39, 2, 1, "", "fromkeys"], [39, 2, 1, "", "get"], [39, 2, 1, "", "items"], [39, 2, 1, "", "keys"], [39, 2, 1, "", "pop"], [39, 2, 1, "", "popitem"], [39, 2, 1, "", "setdefault"], [39, 2, 1, "", "update"], [39, 2, 1, "", "values"]], "arkouda.numpy.Strings": [[39, 4, 1, "id20", "BinOps"], [39, 2, 1, "id21", "astype"], [39, 2, 1, "id22", "attach"], [39, 2, 1, "id23", "cached_regex_patterns"], [39, 2, 1, "id24", "capitalize"], [39, 2, 1, "id25", "contains"], [39, 2, 1, "id26", "decode"], [39, 4, 1, "id27", "dtype"], [39, 2, 1, "id28", "encode"], [39, 2, 1, "id29", "endswith"], [39, 4, 1, "id30", "entry"], [39, 2, 1, "id31", "equals"], [39, 2, 1, "id32", "find_locations"], [39, 2, 1, "id33", "findall"], [39, 2, 1, "id34", "flatten"], [39, 2, 1, "id35", "from_parts"], [39, 2, 1, "id36", "from_return_msg"], [39, 2, 1, "id37", "fullmatch"], [39, 2, 1, "id38", "get_bytes"], [39, 2, 1, "id39", "get_lengths"], [39, 2, 1, "id40", "get_offsets"], [39, 2, 1, "id41", "get_prefixes"], [39, 2, 1, "id42", "get_suffixes"], [39, 2, 1, "id43", "group"], [39, 2, 1, "id44", "hash"], [39, 6, 1, "id45", "inferred_type"], [39, 2, 1, "id46", "info"], [39, 2, 1, "id47", "is_registered"], [39, 2, 1, "id48", "isalnum"], [39, 2, 1, "id49", "isalpha"], [39, 2, 1, "id50", "isdecimal"], [39, 2, 1, "id51", "isdigit"], [39, 2, 1, "id52", "isempty"], [39, 2, 1, "id53", "islower"], [39, 2, 1, "id54", "isspace"], [39, 2, 1, "id55", "istitle"], [39, 2, 1, "id56", "isupper"], [39, 4, 1, "id57", "logger"], [39, 2, 1, "id58", "lower"], [39, 2, 1, "id59", "lstick"], [39, 2, 1, "id60", "match"], [39, 4, 1, "id15", "nbytes"], [39, 4, 1, "id16", "ndim"], [39, 4, 1, "id61", "objType"], [39, 2, 1, "id62", "peel"], [39, 2, 1, "id63", "pretty_print_info"], [39, 2, 1, "id64", "purge_cached_regex_patterns"], [39, 2, 1, "id65", "regex_split"], [39, 2, 1, "id66", "register"], [39, 4, 1, "id67", "registered_name"], [39, 2, 1, "id68", "rpeel"], [39, 2, 1, "id69", "save"], [39, 2, 1, "id70", "search"], [39, 4, 1, "id71", "shape"], [39, 4, 1, "id72", "size"], [39, 2, 1, "id73", "split"], [39, 2, 1, "id74", "startswith"], [39, 2, 1, "id75", "stick"], [39, 2, 1, "id76", "strip"], [39, 2, 1, "id77", "sub"], [39, 2, 1, "id78", "subn"], [39, 2, 1, "id79", "title"], [39, 2, 1, "id80", "to_csv"], [39, 2, 1, "id81", "to_hdf"], [39, 2, 1, "id82", "to_list"], [39, 2, 1, "id83", "to_ndarray"], [39, 2, 1, "id84", "to_parquet"], [39, 2, 1, "id85", "transfer"], [39, 2, 1, "id86", "unregister"], [39, 2, 1, "id87", "unregister_strings_by_name"], [39, 2, 1, "id88", "update_hdf"], [39, 2, 1, "id89", "upper"]], "arkouda.numpy.Timedelta": [[39, 2, 1, "", "abs"], [39, 6, 1, "", "components"], [39, 6, 1, "", "days"], [39, 2, 1, "", "is_registered"], [39, 6, 1, "", "microseconds"], [39, 6, 1, "", "nanoseconds"], [39, 2, 1, "", "register"], [39, 6, 1, "", "seconds"], [39, 4, 1, "", "special_objType"], [39, 2, 1, "", "std"], [39, 2, 1, "", "sum"], [39, 4, 1, "", "supported_opeq"], [39, 4, 1, "", "supported_with_datetime"], [39, 4, 1, "", "supported_with_pdarray"], [39, 4, 1, "", "supported_with_r_datetime"], [39, 4, 1, "", "supported_with_r_pdarray"], [39, 4, 1, "", "supported_with_r_timedelta"], [39, 4, 1, "", "supported_with_timedelta"], [39, 2, 1, "", "to_pandas"], [39, 2, 1, "", "total_seconds"], [39, 2, 1, "", "unregister"]], "arkouda.numpy.akint64": [[39, 2, 1, "", "bit_count"]], "arkouda.numpy.akuint64": [[39, 2, 1, "", "bit_count"]], "arkouda.numpy.annotations": [[39, 2, 1, "", "compiler_flag"], [39, 2, 1, "", "getMandatoryRelease"], [39, 2, 1, "", "getOptionalRelease"], [39, 2, 1, "", "mandatory"], [39, 2, 1, "", "optional"]], "arkouda.numpy.bigint": [[39, 2, 1, "", "itemsize"], [39, 2, 1, "", "name"], [39, 2, 1, "", "ndim"], [39, 2, 1, "", "shape"], [39, 2, 1, "", "type"]], "arkouda.numpy.bitType": [[39, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes": [[36, 1, 1, "", "ARKOUDA_SUPPORTED_BOOLS"], [36, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [36, 1, 1, "", "ARKOUDA_SUPPORTED_FLOATS"], [36, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [36, 1, 1, "", "ARKOUDA_SUPPORTED_NUMBERS"], [36, 1, 1, "", "BoolDType"], [36, 1, 1, "", "ByteDType"], [36, 1, 1, "", "BytesDType"], [36, 1, 1, "", "CLongDoubleDType"], [36, 1, 1, "", "Complex128DType"], [36, 1, 1, "", "Complex64DType"], [36, 1, 1, "", "DType"], [36, 1, 1, "", "DTypeObjects"], [36, 1, 1, "", "DTypes"], [36, 1, 1, "", "DateTime64DType"], [36, 1, 1, "", "Enum"], [36, 1, 1, "", "Float16DType"], [36, 1, 1, "", "Float32DType"], [36, 1, 1, "", "Float64DType"], [36, 1, 1, "", "Int16DType"], [36, 1, 1, "", "Int32DType"], [36, 1, 1, "", "Int64DType"], [36, 1, 1, "", "Int8DType"], [36, 1, 1, "", "IntDType"], [36, 1, 1, "", "LongDType"], [36, 1, 1, "", "LongDoubleDType"], [36, 1, 1, "", "LongLongDType"], [36, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [36, 1, 1, "", "NumericDTypes"], [36, 1, 1, "", "ObjectDType"], [36, 1, 1, "", "ScalarDTypes"], [36, 1, 1, "", "SeriesDTypes"], [36, 1, 1, "", "ShortDType"], [36, 1, 1, "", "StrDType"], [36, 1, 1, "", "TimeDelta64DType"], [36, 1, 1, "", "UByteDType"], [36, 1, 1, "", "UInt16DType"], [36, 1, 1, "", "UInt32DType"], [36, 1, 1, "", "UInt64DType"], [36, 1, 1, "", "UInt8DType"], [36, 1, 1, "", "UIntDType"], [36, 1, 1, "", "ULongDType"], [36, 1, 1, "", "ULongLongDType"], [36, 1, 1, "", "UShortDType"], [36, 1, 1, "", "Union"], [36, 1, 1, "", "VoidDType"], [36, 1, 1, "", "all_scalars"], [36, 1, 1, "", "annotations"], [36, 1, 1, "", "bigint"], [36, 1, 1, "", "bitType"], [36, 1, 1, "", "bool_"], [36, 1, 1, "", "bool_scalars"], [36, 5, 1, "", "can_cast"], [36, 5, 1, "", "cast"], [36, 1, 1, "", "complex128"], [36, 1, 1, "", "complex64"], [36, 5, 1, "", "dtype"], [36, 1, 1, "", "float16"], [36, 1, 1, "", "float32"], [36, 1, 1, "", "float64"], [36, 1, 1, "", "float_scalars"], [36, 5, 1, "", "get_byteorder"], [36, 5, 1, "", "get_server_byteorder"], [36, 1, 1, "", "int16"], [36, 1, 1, "", "int32"], [36, 1, 1, "", "int64"], [36, 1, 1, "", "int8"], [36, 1, 1, "", "intTypes"], [36, 1, 1, "", "int_scalars"], [36, 5, 1, "", "isSupportedBool"], [36, 5, 1, "", "isSupportedDType"], [36, 5, 1, "", "isSupportedFloat"], [36, 5, 1, "", "isSupportedInt"], [36, 5, 1, "", "isSupportedNumber"], [36, 1, 1, "", "numeric_and_bool_scalars"], [36, 1, 1, "", "numeric_scalars"], [36, 1, 1, "", "numpy_scalars"], [36, 5, 1, "", "resolve_scalar_dtype"], [36, 1, 1, "", "str_"], [36, 1, 1, "", "str_scalars"], [36, 1, 1, "", "uint16"], [36, 1, 1, "", "uint32"], [36, 1, 1, "", "uint64"], [36, 1, 1, "", "uint8"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_BOOLS": [[36, 2, 1, "", "count"], [36, 2, 1, "", "index"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES": [[36, 2, 1, "", "count"], [36, 2, 1, "", "index"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS": [[36, 2, 1, "", "count"], [36, 2, 1, "", "index"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS": [[36, 2, 1, "", "count"], [36, 2, 1, "", "index"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS": [[36, 2, 1, "", "count"], [36, 2, 1, "", "index"]], "arkouda.numpy.dtypes.DType": [[36, 2, 1, "", "BIGINT"], [36, 2, 1, "", "BOOL"], [36, 2, 1, "", "COMPLEX128"], [36, 2, 1, "", "COMPLEX64"], [36, 2, 1, "", "FLOAT"], [36, 2, 1, "", "FLOAT32"], [36, 2, 1, "", "FLOAT64"], [36, 2, 1, "", "INT"], [36, 2, 1, "", "INT16"], [36, 2, 1, "", "INT32"], [36, 2, 1, "", "INT64"], [36, 2, 1, "", "INT8"], [36, 2, 1, "", "STR"], [36, 2, 1, "", "UINT"], [36, 2, 1, "", "UINT16"], [36, 2, 1, "", "UINT32"], [36, 2, 1, "", "UINT64"], [36, 2, 1, "", "UINT8"], [36, 2, 1, "", "name"], [36, 2, 1, "", "value"]], "arkouda.numpy.dtypes.DTypeObjects": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.dtypes.DTypes": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS": [[36, 2, 1, "", "clear"], [36, 2, 1, "", "copy"], [36, 2, 1, "", "fromkeys"], [36, 2, 1, "", "get"], [36, 2, 1, "", "items"], [36, 2, 1, "", "keys"], [36, 2, 1, "", "pop"], [36, 2, 1, "", "popitem"], [36, 2, 1, "", "setdefault"], [36, 2, 1, "", "update"], [36, 2, 1, "", "values"]], "arkouda.numpy.dtypes.NumericDTypes": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.dtypes.ScalarDTypes": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.dtypes.SeriesDTypes": [[36, 2, 1, "", "clear"], [36, 2, 1, "", "copy"], [36, 2, 1, "", "fromkeys"], [36, 2, 1, "", "get"], [36, 2, 1, "", "items"], [36, 2, 1, "", "keys"], [36, 2, 1, "", "pop"], [36, 2, 1, "", "popitem"], [36, 2, 1, "", "setdefault"], [36, 2, 1, "", "update"], [36, 2, 1, "", "values"]], "arkouda.numpy.dtypes.annotations": [[36, 2, 1, "", "compiler_flag"], [36, 2, 1, "", "getMandatoryRelease"], [36, 2, 1, "", "getOptionalRelease"], [36, 2, 1, "", "mandatory"], [36, 2, 1, "", "optional"]], "arkouda.numpy.dtypes.bigint": [[36, 2, 1, "", "itemsize"], [36, 2, 1, "", "name"], [36, 2, 1, "", "ndim"], [36, 2, 1, "", "shape"], [36, 2, 1, "", "type"]], "arkouda.numpy.dtypes.bitType": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.float16": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes.float32": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes.float64": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "fromhex"], [36, 2, 1, "", "hex"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes.int16": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.int32": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.int64": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.int8": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.intTypes": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.dtypes.str_": [[36, 2, 1, "", "T"], [36, 2, 1, "", "all"], [36, 2, 1, "", "any"], [36, 2, 1, "", "argmax"], [36, 2, 1, "", "argmin"], [36, 2, 1, "", "argsort"], [36, 2, 1, "", "astype"], [36, 2, 1, "", "base"], [36, 2, 1, "", "byteswap"], [36, 2, 1, "", "choose"], [36, 2, 1, "", "clip"], [36, 2, 1, "", "compress"], [36, 2, 1, "", "conj"], [36, 2, 1, "", "conjugate"], [36, 2, 1, "", "copy"], [36, 2, 1, "", "cumprod"], [36, 2, 1, "", "cumsum"], [36, 2, 1, "", "data"], [36, 2, 1, "", "diagonal"], [36, 2, 1, "", "dtype"], [36, 2, 1, "", "dump"], [36, 2, 1, "", "dumps"], [36, 2, 1, "", "fill"], [36, 2, 1, "", "flags"], [36, 2, 1, "", "flat"], [36, 2, 1, "", "flatten"], [36, 2, 1, "", "getfield"], [36, 2, 1, "", "imag"], [36, 2, 1, "", "item"], [36, 2, 1, "", "itemset"], [36, 2, 1, "", "itemsize"], [36, 2, 1, "", "max"], [36, 2, 1, "", "mean"], [36, 2, 1, "", "min"], [36, 2, 1, "", "nbytes"], [36, 2, 1, "", "ndim"], [36, 2, 1, "", "newbyteorder"], [36, 2, 1, "", "nonzero"], [36, 2, 1, "", "prod"], [36, 2, 1, "", "ptp"], [36, 2, 1, "", "put"], [36, 2, 1, "", "ravel"], [36, 2, 1, "", "real"], [36, 2, 1, "", "repeat"], [36, 2, 1, "", "reshape"], [36, 2, 1, "", "resize"], [36, 2, 1, "", "round"], [36, 2, 1, "", "searchsorted"], [36, 2, 1, "", "setfield"], [36, 2, 1, "", "setflags"], [36, 2, 1, "", "shape"], [36, 2, 1, "", "size"], [36, 2, 1, "", "sort"], [36, 2, 1, "", "squeeze"], [36, 2, 1, "", "std"], [36, 2, 1, "", "strides"], [36, 2, 1, "", "sum"], [36, 2, 1, "", "swapaxes"], [36, 2, 1, "", "take"], [36, 2, 1, "", "tobytes"], [36, 2, 1, "", "tofile"], [36, 2, 1, "", "tolist"], [36, 2, 1, "", "tostring"], [36, 2, 1, "", "trace"], [36, 2, 1, "", "transpose"], [36, 2, 1, "", "var"], [36, 2, 1, "", "view"]], "arkouda.numpy.dtypes.uint16": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.uint32": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.uint64": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.uint8": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.float16": [[39, 2, 1, "", "as_integer_ratio"], [39, 2, 1, "", "is_integer"]], "arkouda.numpy.float32": [[39, 2, 1, "", "as_integer_ratio"], [39, 2, 1, "", "is_integer"]], "arkouda.numpy.float64": [[39, 2, 1, "", "as_integer_ratio"], [39, 2, 1, "", "fromhex"], [39, 2, 1, "", "hex"], [39, 2, 1, "", "is_integer"]], "arkouda.numpy.int16": [[39, 2, 1, "", "bit_count"]], "arkouda.numpy.int32": [[39, 2, 1, "", "bit_count"]], "arkouda.numpy.int64": [[39, 2, 1, "id97", "bit_count"]], "arkouda.numpy.int8": [[39, 2, 1, "", "bit_count"]], "arkouda.numpy.intTypes": [[39, 2, 1, "id99", "copy"], [39, 2, 1, "id100", "difference"], [39, 2, 1, "id101", "intersection"], [39, 2, 1, "id102", "isdisjoint"], [39, 2, 1, "id103", "issubset"], [39, 2, 1, "id104", "issuperset"], [39, 2, 1, "id105", "symmetric_difference"], [39, 2, 1, "id106", "union"]], "arkouda.numpy.lib": [[40, 0, 0, "-", "emath"]], "arkouda.numpy.manipulation_functions": [[44, 5, 1, "", "flip"], [44, 5, 1, "", "repeat"], [44, 5, 1, "", "squeeze"], [44, 5, 1, "", "tile"]], "arkouda.numpy.numeric": [[45, 1, 1, "", "ErrorMode"], [45, 5, 1, "", "abs"], [45, 5, 1, "", "arccos"], [45, 5, 1, "", "arccosh"], [45, 5, 1, "", "arcsin"], [45, 5, 1, "", "arcsinh"], [45, 5, 1, "", "arctan"], [45, 5, 1, "", "arctan2"], [45, 5, 1, "", "arctanh"], [45, 5, 1, "", "array_equal"], [45, 5, 1, "", "cast"], [45, 5, 1, "", "ceil"], [45, 5, 1, "", "clip"], [45, 5, 1, "", "cos"], [45, 5, 1, "", "cosh"], [45, 5, 1, "", "count_nonzero"], [45, 5, 1, "", "cumprod"], [45, 5, 1, "", "cumsum"], [45, 5, 1, "", "deg2rad"], [45, 5, 1, "", "exp"], [45, 5, 1, "", "expm1"], [45, 5, 1, "", "eye"], [45, 5, 1, "", "floor"], [45, 5, 1, "", "hash"], [45, 5, 1, "", "histogram"], [45, 5, 1, "", "histogram2d"], [45, 5, 1, "", "histogramdd"], [45, 5, 1, "", "isfinite"], [45, 5, 1, "", "isinf"], [45, 5, 1, "", "isnan"], [45, 5, 1, "", "log"], [45, 5, 1, "", "log10"], [45, 5, 1, "", "log1p"], [45, 5, 1, "", "log2"], [45, 5, 1, "", "matmul"], [45, 5, 1, "", "median"], [45, 5, 1, "", "putmask"], [45, 5, 1, "", "rad2deg"], [45, 5, 1, "", "round"], [45, 5, 1, "", "sign"], [45, 5, 1, "", "sin"], [45, 5, 1, "", "sinh"], [45, 5, 1, "", "square"], [45, 5, 1, "", "tan"], [45, 5, 1, "", "tanh"], [45, 5, 1, "", "transpose"], [45, 5, 1, "", "tril"], [45, 5, 1, "", "triu"], [45, 5, 1, "", "trunc"], [45, 5, 1, "", "value_counts"], [45, 5, 1, "", "vecdot"], [45, 5, 1, "", "where"]], "arkouda.numpy.numeric.ErrorMode": [[45, 4, 1, "", "ignore"], [45, 4, 1, "", "return_validity"], [45, 4, 1, "", "strict"]], "arkouda.numpy.pdarray": [[39, 4, 1, "id194", "BinOps"], [39, 4, 1, "id195", "OpEqOps"], [39, 2, 1, "id196", "all"], [39, 2, 1, "id197", "any"], [39, 2, 1, "id198", "argmax"], [39, 2, 1, "id199", "argmaxk"], [39, 2, 1, "id200", "argmin"], [39, 2, 1, "id201", "argmink"], [39, 2, 1, "id202", "astype"], [39, 2, 1, "id203", "attach"], [39, 2, 1, "id204", "bigint_to_uint_arrays"], [39, 2, 1, "id205", "clz"], [39, 2, 1, "id206", "corr"], [39, 2, 1, "id207", "cov"], [39, 2, 1, "id208", "ctz"], [39, 4, 1, "id209", "dtype"], [39, 2, 1, "id210", "equals"], [39, 2, 1, "id211", "fill"], [39, 2, 1, "id212", "flatten"], [39, 2, 1, "id213", "format_other"], [39, 6, 1, "id214", "inferred_type"], [39, 2, 1, "id215", "info"], [39, 2, 1, "id216", "is_registered"], [39, 2, 1, "id217", "is_sorted"], [39, 4, 1, "id218", "itemsize"], [39, 2, 1, "id219", "max"], [39, 6, 1, "id220", "max_bits"], [39, 2, 1, "id221", "maxk"], [39, 2, 1, "id222", "mean"], [39, 2, 1, "id223", "min"], [39, 2, 1, "id224", "mink"], [39, 4, 1, "id225", "name"], [39, 6, 1, "id226", "nbytes"], [39, 4, 1, "id227", "ndim"], [39, 4, 1, "id228", "objType"], [39, 2, 1, "id229", "opeq"], [39, 2, 1, "id230", "parity"], [39, 2, 1, "id231", "popcount"], [39, 2, 1, "id232", "pretty_print_info"], [39, 2, 1, "id233", "prod"], [39, 2, 1, "id234", "register"], [39, 4, 1, "id235", "registered_name"], [39, 2, 1, "id236", "reshape"], [39, 2, 1, "id237", "rotl"], [39, 2, 1, "id238", "rotr"], [39, 2, 1, "id239", "save"], [39, 6, 1, "id240", "shape"], [39, 4, 1, "id241", "size"], [39, 2, 1, "id242", "slice_bits"], [39, 2, 1, "id243", "std"], [39, 2, 1, "id244", "sum"], [39, 2, 1, "id245", "to_csv"], [39, 2, 1, "id246", "to_cuda"], [39, 2, 1, "id247", "to_hdf"], [39, 2, 1, "id248", "to_list"], [39, 2, 1, "id249", "to_ndarray"], [39, 2, 1, "id250", "to_parquet"], [39, 2, 1, "id251", "transfer"], [39, 2, 1, "id252", "unregister"], [39, 2, 1, "id253", "update_hdf"], [39, 2, 1, "id254", "value_counts"], [39, 2, 1, "id255", "var"]], "arkouda.numpy.pdarrayclass": [[46, 7, 1, "", "RegistrationError"], [46, 5, 1, "", "argmaxk"], [46, 5, 1, "", "argmink"], [46, 5, 1, "", "attach_pdarray"], [46, 5, 1, "", "broadcast_to_shape"], [46, 5, 1, "", "clear"], [46, 5, 1, "", "clz"], [46, 5, 1, "", "corr"], [46, 5, 1, "", "cov"], [46, 5, 1, "", "ctz"], [46, 5, 1, "", "divmod"], [46, 5, 1, "", "dot"], [46, 5, 1, "", "fmod"], [46, 5, 1, "", "maxk"], [46, 5, 1, "", "mean"], [46, 5, 1, "", "mink"], [46, 5, 1, "", "mod"], [46, 5, 1, "", "parity"], [46, 1, 1, "", "pdarray"], [46, 5, 1, "", "popcount"], [46, 5, 1, "", "power"], [46, 5, 1, "", "rotl"], [46, 5, 1, "", "rotr"], [46, 5, 1, "", "sqrt"], [46, 5, 1, "", "std"], [46, 5, 1, "", "unregister_pdarray_by_name"], [46, 5, 1, "", "var"]], "arkouda.numpy.pdarrayclass.pdarray": [[46, 4, 1, "", "BinOps"], [46, 4, 1, "", "OpEqOps"], [46, 2, 1, "", "all"], [46, 2, 1, "", "any"], [46, 2, 1, "", "argmax"], [46, 2, 1, "", "argmaxk"], [46, 2, 1, "", "argmin"], [46, 2, 1, "", "argmink"], [46, 2, 1, "", "astype"], [46, 2, 1, "", "attach"], [46, 2, 1, "", "bigint_to_uint_arrays"], [46, 2, 1, "", "clz"], [46, 2, 1, "", "corr"], [46, 2, 1, "", "cov"], [46, 2, 1, "", "ctz"], [46, 4, 1, "id0", "dtype"], [46, 2, 1, "", "equals"], [46, 2, 1, "", "fill"], [46, 2, 1, "", "flatten"], [46, 2, 1, "", "format_other"], [46, 6, 1, "", "inferred_type"], [46, 2, 1, "", "info"], [46, 2, 1, "", "is_registered"], [46, 2, 1, "", "is_sorted"], [46, 4, 1, "id1", "itemsize"], [46, 2, 1, "", "max"], [46, 6, 1, "", "max_bits"], [46, 2, 1, "", "maxk"], [46, 2, 1, "", "mean"], [46, 2, 1, "", "min"], [46, 2, 1, "", "mink"], [46, 4, 1, "id2", "name"], [46, 6, 1, "", "nbytes"], [46, 4, 1, "id3", "ndim"], [46, 4, 1, "", "objType"], [46, 2, 1, "", "opeq"], [46, 2, 1, "", "parity"], [46, 2, 1, "", "popcount"], [46, 2, 1, "", "pretty_print_info"], [46, 2, 1, "", "prod"], [46, 2, 1, "", "register"], [46, 4, 1, "", "registered_name"], [46, 2, 1, "", "reshape"], [46, 2, 1, "", "rotl"], [46, 2, 1, "", "rotr"], [46, 2, 1, "", "save"], [46, 6, 1, "id4", "shape"], [46, 4, 1, "id5", "size"], [46, 2, 1, "", "slice_bits"], [46, 2, 1, "", "std"], [46, 2, 1, "", "sum"], [46, 2, 1, "", "to_csv"], [46, 2, 1, "", "to_cuda"], [46, 2, 1, "", "to_hdf"], [46, 2, 1, "", "to_list"], [46, 2, 1, "", "to_ndarray"], [46, 2, 1, "", "to_parquet"], [46, 2, 1, "", "transfer"], [46, 2, 1, "", "unregister"], [46, 2, 1, "", "update_hdf"], [46, 2, 1, "", "value_counts"], [46, 2, 1, "", "var"]], "arkouda.numpy.pdarraycreation": [[47, 5, 1, "", "arange"], [47, 5, 1, "", "array"], [47, 5, 1, "", "bigint_from_uint_arrays"], [47, 5, 1, "", "from_series"], [47, 5, 1, "", "full"], [47, 5, 1, "", "full_like"], [47, 5, 1, "", "linspace"], [47, 5, 1, "", "ones"], [47, 5, 1, "", "ones_like"], [47, 5, 1, "", "promote_to_common_dtype"], [47, 5, 1, "", "randint"], [47, 5, 1, "", "random_strings_lognormal"], [47, 5, 1, "", "random_strings_uniform"], [47, 5, 1, "", "scalar_array"], [47, 5, 1, "", "standard_normal"], [47, 5, 1, "", "uniform"], [47, 5, 1, "", "zeros"], [47, 5, 1, "", "zeros_like"]], "arkouda.numpy.pdarraymanipulation": [[48, 5, 1, "", "delete"], [48, 5, 1, "", "vstack"]], "arkouda.numpy.pdarraysetops": [[49, 5, 1, "", "concatenate"], [49, 5, 1, "", "in1d"], [49, 5, 1, "", "indexof1d"], [49, 5, 1, "", "intersect1d"], [49, 5, 1, "", "setdiff1d"], [49, 5, 1, "", "setxor1d"], [49, 5, 1, "", "union1d"]], "arkouda.numpy.random": [[51, 1, 1, "", "Generator"], [51, 5, 1, "", "randint"], [51, 5, 1, "", "standard_normal"], [51, 5, 1, "", "uniform"]], "arkouda.numpy.random.Generator": [[51, 2, 1, "", "choice"], [51, 2, 1, "", "exponential"], [51, 2, 1, "", "integers"], [51, 2, 1, "", "logistic"], [51, 2, 1, "", "lognormal"], [51, 2, 1, "", "normal"], [51, 2, 1, "", "permutation"], [51, 2, 1, "", "poisson"], [51, 2, 1, "", "random"], [51, 2, 1, "", "shuffle"], [51, 2, 1, "", "standard_exponential"], [51, 2, 1, "", "standard_gamma"], [51, 2, 1, "", "standard_normal"], [51, 2, 1, "", "uniform"]], "arkouda.numpy.segarray": [[53, 3, 1, "", "LEN_SUFFIX"], [53, 3, 1, "", "SEG_SUFFIX"], [53, 1, 1, "", "SegArray"], [53, 3, 1, "", "VAL_SUFFIX"], [53, 5, 1, "", "segarray"]], "arkouda.numpy.segarray.SegArray": [[53, 2, 1, "", "AND"], [53, 2, 1, "", "OR"], [53, 2, 1, "", "XOR"], [53, 2, 1, "", "aggregate"], [53, 2, 1, "", "all"], [53, 2, 1, "", "any"], [53, 2, 1, "", "append"], [53, 2, 1, "", "append_single"], [53, 2, 1, "", "argmax"], [53, 2, 1, "", "argmin"], [53, 2, 1, "", "attach"], [53, 2, 1, "", "concat"], [53, 2, 1, "", "copy"], [53, 4, 1, "", "dtype"], [53, 2, 1, "", "filter"], [53, 2, 1, "", "from_multi_array"], [53, 2, 1, "", "from_parts"], [53, 2, 1, "", "from_return_msg"], [53, 2, 1, "", "get_jth"], [53, 2, 1, "", "get_length_n"], [53, 2, 1, "", "get_ngrams"], [53, 2, 1, "", "get_prefixes"], [53, 2, 1, "", "get_suffixes"], [53, 6, 1, "", "grouping"], [53, 2, 1, "", "hash"], [53, 2, 1, "", "intersect"], [53, 2, 1, "", "is_registered"], [53, 2, 1, "", "load"], [53, 4, 1, "", "logger"], [53, 2, 1, "", "max"], [53, 2, 1, "", "mean"], [53, 2, 1, "", "min"], [53, 6, 1, "", "nbytes"], [53, 6, 1, "", "non_empty"], [53, 2, 1, "", "nunique"], [53, 4, 1, "", "objType"], [53, 2, 1, "", "prepend_single"], [53, 2, 1, "", "prod"], [53, 2, 1, "", "read_hdf"], [53, 2, 1, "", "register"], [53, 4, 1, "", "registered_name"], [53, 2, 1, "", "remove_repeats"], [53, 2, 1, "", "save"], [53, 4, 1, "", "segments"], [53, 2, 1, "", "set_jth"], [53, 2, 1, "", "setdiff"], [53, 2, 1, "", "setxor"], [53, 4, 1, "", "size"], [53, 2, 1, "", "sum"], [53, 2, 1, "", "to_hdf"], [53, 2, 1, "", "to_list"], [53, 2, 1, "", "to_ndarray"], [53, 2, 1, "", "to_parquet"], [53, 2, 1, "", "transfer"], [53, 2, 1, "", "union"], [53, 2, 1, "", "unique"], [53, 2, 1, "", "unregister"], [53, 2, 1, "", "unregister_segarray_by_name"], [53, 2, 1, "", "update_hdf"], [53, 4, 1, "", "valsize"], [53, 4, 1, "", "values"]], "arkouda.numpy.sorting": [[54, 3, 1, "", "SortingAlgorithm"], [54, 5, 1, "", "argsort"], [54, 5, 1, "", "coargsort"], [54, 5, 1, "", "searchsorted"], [54, 5, 1, "", "sort"]], "arkouda.numpy.str_": [[39, 2, 1, "id257", "T"], [39, 2, 1, "id258", "all"], [39, 2, 1, "id259", "any"], [39, 2, 1, "id260", "argmax"], [39, 2, 1, "id261", "argmin"], [39, 2, 1, "id262", "argsort"], [39, 2, 1, "id263", "astype"], [39, 2, 1, "id264", "base"], [39, 2, 1, "id265", "byteswap"], [39, 2, 1, "id266", "choose"], [39, 2, 1, "id267", "clip"], [39, 2, 1, "id268", "compress"], [39, 2, 1, "id269", "conj"], [39, 2, 1, "id270", "conjugate"], [39, 2, 1, "id271", "copy"], [39, 2, 1, "id272", "cumprod"], [39, 2, 1, "id273", "cumsum"], [39, 2, 1, "id274", "data"], [39, 2, 1, "id275", "diagonal"], [39, 2, 1, "id276", "dtype"], [39, 2, 1, "id277", "dump"], [39, 2, 1, "id278", "dumps"], [39, 2, 1, "id279", "fill"], [39, 2, 1, "id280", "flags"], [39, 2, 1, "id281", "flat"], [39, 2, 1, "id282", "flatten"], [39, 2, 1, "id283", "getfield"], [39, 2, 1, "id284", "imag"], [39, 2, 1, "id285", "item"], [39, 2, 1, "id286", "itemset"], [39, 2, 1, "id287", "itemsize"], [39, 2, 1, "id288", "max"], [39, 2, 1, "id289", "mean"], [39, 2, 1, "id290", "min"], [39, 2, 1, "id291", "nbytes"], [39, 2, 1, "id292", "ndim"], [39, 2, 1, "id293", "newbyteorder"], [39, 2, 1, "id294", "nonzero"], [39, 2, 1, "id295", "prod"], [39, 2, 1, "id296", "ptp"], [39, 2, 1, "id297", "put"], [39, 2, 1, "id298", "ravel"], [39, 2, 1, "id299", "real"], [39, 2, 1, "id300", "repeat"], [39, 2, 1, "id301", "reshape"], [39, 2, 1, "id302", "resize"], [39, 2, 1, "id303", "round"], [39, 2, 1, "id304", "searchsorted"], [39, 2, 1, "id305", "setfield"], [39, 2, 1, "id306", "setflags"], [39, 2, 1, "id307", "shape"], [39, 2, 1, "id308", "size"], [39, 2, 1, "id309", "sort"], [39, 2, 1, "id310", "squeeze"], [39, 2, 1, "id311", "std"], [39, 2, 1, "id312", "strides"], [39, 2, 1, "id313", "sum"], [39, 2, 1, "id314", "swapaxes"], [39, 2, 1, "id315", "take"], [39, 2, 1, "id316", "tobytes"], [39, 2, 1, "id317", "tofile"], [39, 2, 1, "id318", "tolist"], [39, 2, 1, "id319", "tostring"], [39, 2, 1, "id320", "trace"], [39, 2, 1, "id321", "transpose"], [39, 2, 1, "id322", "var"], [39, 2, 1, "id323", "view"]], "arkouda.numpy.strings": [[55, 1, 1, "", "Strings"]], "arkouda.numpy.strings.Strings": [[55, 4, 1, "", "BinOps"], [55, 2, 1, "", "astype"], [55, 2, 1, "", "attach"], [55, 2, 1, "", "cached_regex_patterns"], [55, 2, 1, "", "capitalize"], [55, 2, 1, "", "contains"], [55, 2, 1, "", "decode"], [55, 4, 1, "id0", "dtype"], [55, 2, 1, "", "encode"], [55, 2, 1, "", "endswith"], [55, 4, 1, "id1", "entry"], [55, 2, 1, "", "equals"], [55, 2, 1, "", "find_locations"], [55, 2, 1, "", "findall"], [55, 2, 1, "", "flatten"], [55, 2, 1, "", "from_parts"], [55, 2, 1, "", "from_return_msg"], [55, 2, 1, "", "fullmatch"], [55, 2, 1, "", "get_bytes"], [55, 2, 1, "", "get_lengths"], [55, 2, 1, "", "get_offsets"], [55, 2, 1, "", "get_prefixes"], [55, 2, 1, "", "get_suffixes"], [55, 2, 1, "", "group"], [55, 2, 1, "", "hash"], [55, 6, 1, "", "inferred_type"], [55, 2, 1, "", "info"], [55, 2, 1, "", "is_registered"], [55, 2, 1, "", "isalnum"], [55, 2, 1, "", "isalpha"], [55, 2, 1, "", "isdecimal"], [55, 2, 1, "", "isdigit"], [55, 2, 1, "", "isempty"], [55, 2, 1, "", "islower"], [55, 2, 1, "", "isspace"], [55, 2, 1, "", "istitle"], [55, 2, 1, "", "isupper"], [55, 4, 1, "id2", "logger"], [55, 2, 1, "", "lower"], [55, 2, 1, "", "lstick"], [55, 2, 1, "", "match"], [55, 4, 1, "", "nbytes"], [55, 4, 1, "", "ndim"], [55, 4, 1, "", "objType"], [55, 2, 1, "", "peel"], [55, 2, 1, "", "pretty_print_info"], [55, 2, 1, "", "purge_cached_regex_patterns"], [55, 2, 1, "", "regex_split"], [55, 2, 1, "", "register"], [55, 4, 1, "", "registered_name"], [55, 2, 1, "", "rpeel"], [55, 2, 1, "", "save"], [55, 2, 1, "", "search"], [55, 4, 1, "id3", "shape"], [55, 4, 1, "id4", "size"], [55, 2, 1, "", "split"], [55, 2, 1, "", "startswith"], [55, 2, 1, "", "stick"], [55, 2, 1, "", "strip"], [55, 2, 1, "", "sub"], [55, 2, 1, "", "subn"], [55, 2, 1, "", "title"], [55, 2, 1, "", "to_csv"], [55, 2, 1, "", "to_hdf"], [55, 2, 1, "", "to_list"], [55, 2, 1, "", "to_ndarray"], [55, 2, 1, "", "to_parquet"], [55, 2, 1, "", "transfer"], [55, 2, 1, "", "unregister"], [55, 2, 1, "", "unregister_strings_by_name"], [55, 2, 1, "", "update_hdf"], [55, 2, 1, "", "upper"]], "arkouda.numpy.timeclass": [[56, 1, 1, "", "Datetime"], [56, 1, 1, "", "Timedelta"], [56, 5, 1, "", "date_range"], [56, 5, 1, "", "timedelta_range"]], "arkouda.numpy.timeclass.Datetime": [[56, 6, 1, "", "date"], [56, 6, 1, "", "day"], [56, 6, 1, "", "day_of_week"], [56, 6, 1, "", "day_of_year"], [56, 6, 1, "", "dayofweek"], [56, 6, 1, "", "dayofyear"], [56, 6, 1, "", "hour"], [56, 6, 1, "", "is_leap_year"], [56, 2, 1, "", "is_registered"], [56, 2, 1, "", "isocalendar"], [56, 6, 1, "", "microsecond"], [56, 6, 1, "", "millisecond"], [56, 6, 1, "", "minute"], [56, 6, 1, "", "month"], [56, 6, 1, "", "nanosecond"], [56, 2, 1, "", "register"], [56, 6, 1, "", "second"], [56, 4, 1, "", "special_objType"], [56, 2, 1, "", "sum"], [56, 4, 1, "", "supported_opeq"], [56, 4, 1, "", "supported_with_datetime"], [56, 4, 1, "", "supported_with_pdarray"], [56, 4, 1, "", "supported_with_r_datetime"], [56, 4, 1, "", "supported_with_r_pdarray"], [56, 4, 1, "", "supported_with_r_timedelta"], [56, 4, 1, "", "supported_with_timedelta"], [56, 2, 1, "", "to_pandas"], [56, 2, 1, "", "unregister"], [56, 6, 1, "", "week"], [56, 6, 1, "", "weekday"], [56, 6, 1, "", "weekofyear"], [56, 6, 1, "", "year"]], "arkouda.numpy.timeclass.Timedelta": [[56, 2, 1, "", "abs"], [56, 6, 1, "", "components"], [56, 6, 1, "", "days"], [56, 2, 1, "", "is_registered"], [56, 6, 1, "", "microseconds"], [56, 6, 1, "", "nanoseconds"], [56, 2, 1, "", "register"], [56, 6, 1, "", "seconds"], [56, 4, 1, "", "special_objType"], [56, 2, 1, "", "std"], [56, 2, 1, "", "sum"], [56, 4, 1, "", "supported_opeq"], [56, 4, 1, "", "supported_with_datetime"], [56, 4, 1, "", "supported_with_pdarray"], [56, 4, 1, "", "supported_with_r_datetime"], [56, 4, 1, "", "supported_with_r_pdarray"], [56, 4, 1, "", "supported_with_r_timedelta"], [56, 4, 1, "", "supported_with_timedelta"], [56, 2, 1, "", "to_pandas"], [56, 2, 1, "", "total_seconds"], [56, 2, 1, "", "unregister"]], "arkouda.numpy.uint16": [[39, 2, 1, "", "bit_count"]], "arkouda.numpy.uint32": [[39, 2, 1, "", "bit_count"]], "arkouda.numpy.uint64": [[39, 2, 1, "", "bit_count"]], "arkouda.numpy.uint8": [[39, 2, 1, "", "bit_count"]], "arkouda.numpy.util": [[57, 3, 1, "", "Index"], [57, 5, 1, "", "attach"], [57, 5, 1, "", "attach_all"], [57, 5, 1, "", "broadcast_dims"], [57, 5, 1, "", "concatenate"], [57, 5, 1, "", "convert_bytes"], [57, 5, 1, "", "convert_if_categorical"], [57, 5, 1, "", "enrich_inplace"], [57, 5, 1, "", "expand"], [57, 5, 1, "", "generic_concat"], [57, 5, 1, "", "get_callback"], [57, 5, 1, "", "identity"], [57, 5, 1, "", "invert_permutation"], [57, 5, 1, "", "is_float"], [57, 5, 1, "", "is_int"], [57, 5, 1, "", "is_numeric"], [57, 5, 1, "", "is_registered"], [57, 5, 1, "", "map"], [57, 5, 1, "", "most_common"], [57, 5, 1, "", "register"], [57, 5, 1, "", "register_all"], [57, 5, 1, "", "report_mem"], [57, 5, 1, "", "sparse_sum_help"], [57, 5, 1, "", "unregister"], [57, 5, 1, "", "unregister_all"]], "arkouda.numpy.utils": [[58, 5, 1, "", "shape"]], "arkouda.pdarray": [[25, 4, 1, "id618", "BinOps"], [25, 4, 1, "id619", "OpEqOps"], [105, 2, 1, "", "all"], [105, 2, 1, "", "any"], [105, 2, 1, "", "argmax"], [105, 2, 1, "", "argmaxk"], [105, 2, 1, "", "argmin"], [105, 2, 1, "", "argmink"], [25, 2, 1, "id626", "astype"], [25, 2, 1, "id627", "attach"], [25, 2, 1, "id628", "bigint_to_uint_arrays"], [25, 2, 1, "id629", "clz"], [25, 2, 1, "id630", "corr"], [25, 2, 1, "id631", "cov"], [25, 2, 1, "id632", "ctz"], [107, 4, 1, "", "dtype"], [25, 2, 1, "id634", "equals"], [25, 2, 1, "id635", "fill"], [25, 2, 1, "id636", "flatten"], [25, 2, 1, "id637", "format_other"], [25, 6, 1, "id638", "inferred_type"], [25, 2, 1, "id639", "info"], [25, 2, 1, "id640", "is_registered"], [105, 2, 1, "", "is_sorted"], [107, 4, 1, "", "itemsize"], [105, 2, 1, "", "max"], [25, 6, 1, "id644", "max_bits"], [105, 2, 1, "", "maxk"], [105, 2, 1, "", "mean"], [105, 2, 1, "", "min"], [105, 2, 1, "", "mink"], [107, 4, 1, "", "name"], [25, 6, 1, "id650", "nbytes"], [107, 4, 1, "", "ndim"], [25, 4, 1, "id652", "objType"], [25, 2, 1, "id653", "opeq"], [25, 2, 1, "id654", "parity"], [25, 2, 1, "id655", "popcount"], [25, 2, 1, "id656", "pretty_print_info"], [105, 2, 1, "", "prod"], [25, 2, 1, "id658", "register"], [25, 4, 1, "id659", "registered_name"], [25, 2, 1, "id660", "reshape"], [25, 2, 1, "id661", "rotl"], [25, 2, 1, "id662", "rotr"], [25, 2, 1, "id663", "save"], [107, 4, 1, "", "shape"], [107, 4, 1, "", "size"], [25, 2, 1, "id666", "slice_bits"], [105, 2, 1, "", "std"], [105, 2, 1, "", "sum"], [25, 2, 1, "id669", "to_csv"], [25, 2, 1, "id670", "to_cuda"], [25, 2, 1, "id671", "to_hdf"], [25, 2, 1, "id672", "to_list"], [107, 5, 1, "", "to_ndarray"], [25, 2, 1, "id674", "to_parquet"], [25, 2, 1, "id675", "transfer"], [25, 2, 1, "id676", "unregister"], [25, 2, 1, "id677", "update_hdf"], [25, 2, 1, "id678", "value_counts"], [105, 2, 1, "", "var"]], "arkouda.plotting": [[59, 5, 1, "", "hist_all"], [59, 5, 1, "", "plot_dist"]], "arkouda.random": [[108, 1, 1, "", "Generator"]], "arkouda.random.Generator": [[108, 5, 1, "", "choice"], [108, 5, 1, "", "exponential"], [108, 5, 1, "", "integers"], [108, 5, 1, "", "logistic"], [108, 5, 1, "", "lognormal"], [108, 5, 1, "", "normal"], [108, 5, 1, "", "permutation"], [108, 5, 1, "", "poisson"], [108, 5, 1, "", "random"], [108, 5, 1, "", "shuffle"], [108, 5, 1, "", "standard_exponential"], [108, 5, 1, "", "standard_normal"], [108, 5, 1, "", "uniform"]], "arkouda.row": [[60, 1, 1, "", "Row"]], "arkouda.scipy": [[61, 1, 1, "", "Power_divergenceResult"], [61, 5, 1, "", "chisquare"], [61, 5, 1, "", "power_divergence"], [62, 0, 0, "-", "special"], [63, 0, 0, "-", "stats"]], "arkouda.scipy.Power_divergenceResult": [[61, 4, 1, "", "pvalue"], [61, 4, 1, "", "statistic"]], "arkouda.scipy.special": [[62, 5, 1, "", "xlogy"]], "arkouda.scipy.stats": [[63, 1, 1, "", "chi2"]], "arkouda.scipy.stats.chi2": [[63, 2, 1, "", "a"], [63, 2, 1, "", "b"], [63, 2, 1, "", "badvalue"], [63, 2, 1, "", "generic_moment"], [63, 2, 1, "", "moment_type"], [63, 2, 1, "", "name"], [63, 2, 1, "", "numargs"], [63, 2, 1, "", "shapes"], [63, 2, 1, "", "vecentropy"], [63, 2, 1, "", "xtol"]], "arkouda.security": [[64, 5, 1, "", "generate_token"], [64, 5, 1, "", "generate_username_token_json"], [64, 5, 1, "", "get_arkouda_client_directory"], [64, 5, 1, "", "get_home_directory"], [64, 5, 1, "", "get_username"], [64, 3, 1, "", "username_tokenizer"]], "arkouda.series": [[65, 1, 1, "", "Series"]], "arkouda.series.Series": [[65, 2, 1, "", "add"], [65, 2, 1, "", "argmax"], [65, 2, 1, "", "argmin"], [65, 6, 1, "", "at"], [65, 2, 1, "", "attach"], [65, 2, 1, "", "concat"], [65, 2, 1, "", "diff"], [65, 2, 1, "", "dt"], [65, 6, 1, "", "dtype"], [65, 2, 1, "", "fillna"], [65, 2, 1, "", "from_return_msg"], [65, 2, 1, "", "has_repeat_labels"], [65, 2, 1, "", "hasnans"], [65, 2, 1, "", "head"], [65, 6, 1, "", "iat"], [65, 6, 1, "", "iloc"], [65, 2, 1, "", "is_registered"], [65, 2, 1, "", "isin"], [65, 2, 1, "", "isna"], [65, 2, 1, "", "isnull"], [65, 6, 1, "", "loc"], [65, 2, 1, "", "locate"], [65, 2, 1, "", "map"], [65, 2, 1, "", "max"], [65, 2, 1, "", "mean"], [65, 2, 1, "", "memory_usage"], [65, 2, 1, "", "min"], [65, 6, 1, "", "ndim"], [65, 2, 1, "", "notna"], [65, 2, 1, "", "notnull"], [65, 2, 1, "", "objType"], [65, 2, 1, "", "pdconcat"], [65, 2, 1, "", "prod"], [65, 2, 1, "", "register"], [65, 6, 1, "", "shape"], [65, 2, 1, "", "sort_index"], [65, 2, 1, "", "sort_values"], [65, 2, 1, "", "std"], [65, 2, 1, "", "str_acc"], [65, 2, 1, "", "sum"], [65, 2, 1, "", "tail"], [65, 2, 1, "", "to_dataframe"], [65, 2, 1, "", "to_list"], [65, 2, 1, "", "to_markdown"], [65, 2, 1, "", "to_ndarray"], [65, 2, 1, "", "to_pandas"], [65, 2, 1, "", "topn"], [65, 2, 1, "", "unregister"], [65, 2, 1, "", "validate_key"], [65, 2, 1, "", "validate_val"], [65, 2, 1, "", "value_counts"], [65, 2, 1, "", "var"]], "arkouda.str_": [[25, 2, 1, "", "T"], [25, 2, 1, "", "all"], [25, 2, 1, "", "any"], [25, 2, 1, "", "argmax"], [25, 2, 1, "", "argmin"], [25, 2, 1, "", "argsort"], [25, 2, 1, "", "astype"], [25, 2, 1, "", "base"], [25, 2, 1, "", "byteswap"], [25, 2, 1, "", "choose"], [25, 2, 1, "", "clip"], [25, 2, 1, "", "compress"], [25, 2, 1, "", "conj"], [25, 2, 1, "", "conjugate"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "cumprod"], [25, 2, 1, "", "cumsum"], [25, 2, 1, "", "data"], [25, 2, 1, "", "diagonal"], [25, 2, 1, "", "dtype"], [25, 2, 1, "", "dump"], [25, 2, 1, "", "dumps"], [25, 2, 1, "", "fill"], [25, 2, 1, "", "flags"], [25, 2, 1, "", "flat"], [25, 2, 1, "", "flatten"], [25, 2, 1, "", "getfield"], [25, 2, 1, "", "imag"], [25, 2, 1, "", "item"], [25, 2, 1, "", "itemset"], [25, 2, 1, "", "itemsize"], [25, 2, 1, "", "max"], [25, 2, 1, "", "mean"], [25, 2, 1, "", "min"], [25, 2, 1, "", "nbytes"], [25, 2, 1, "", "ndim"], [25, 2, 1, "", "newbyteorder"], [25, 2, 1, "", "nonzero"], [25, 2, 1, "", "prod"], [25, 2, 1, "", "ptp"], [25, 2, 1, "", "put"], [25, 2, 1, "", "ravel"], [25, 2, 1, "", "real"], [25, 2, 1, "", "repeat"], [25, 2, 1, "", "reshape"], [25, 2, 1, "", "resize"], [25, 2, 1, "", "round"], [25, 2, 1, "", "searchsorted"], [25, 2, 1, "", "setfield"], [25, 2, 1, "", "setflags"], [25, 2, 1, "", "shape"], [25, 2, 1, "", "size"], [25, 2, 1, "", "sort"], [25, 2, 1, "", "squeeze"], [25, 2, 1, "", "std"], [25, 2, 1, "", "strides"], [25, 2, 1, "", "sum"], [25, 2, 1, "", "swapaxes"], [25, 2, 1, "", "take"], [25, 2, 1, "", "tobytes"], [25, 2, 1, "", "tofile"], [25, 2, 1, "", "tolist"], [25, 2, 1, "", "tostring"], [25, 2, 1, "", "trace"], [25, 2, 1, "", "transpose"], [25, 2, 1, "", "var"], [25, 2, 1, "", "view"]], "arkouda.testing": [[68, 5, 1, "", "assert_almost_equal"], [68, 5, 1, "", "assert_almost_equivalent"], [68, 5, 1, "", "assert_arkouda_array_equal"], [68, 5, 1, "", "assert_arkouda_array_equivalent"], [68, 5, 1, "", "assert_arkouda_pdarray_equal"], [68, 5, 1, "", "assert_arkouda_segarray_equal"], [68, 5, 1, "", "assert_arkouda_strings_equal"], [68, 5, 1, "", "assert_attr_equal"], [68, 5, 1, "", "assert_categorical_equal"], [68, 5, 1, "", "assert_class_equal"], [68, 5, 1, "", "assert_contains_all"], [68, 5, 1, "", "assert_copy"], [68, 5, 1, "", "assert_dict_equal"], [68, 5, 1, "", "assert_equal"], [68, 5, 1, "", "assert_equivalent"], [68, 5, 1, "", "assert_frame_equal"], [68, 5, 1, "", "assert_frame_equivalent"], [68, 5, 1, "", "assert_index_equal"], [68, 5, 1, "", "assert_index_equivalent"], [68, 5, 1, "", "assert_is_sorted"], [68, 5, 1, "", "assert_series_equal"], [68, 5, 1, "", "assert_series_equivalent"]], "arkouda.uint16": [[25, 2, 1, "", "bit_count"]], "arkouda.uint32": [[25, 2, 1, "", "bit_count"]], "arkouda.uint64": [[25, 2, 1, "", "bit_count"]], "arkouda.uint8": [[25, 2, 1, "", "bit_count"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:attribute", "5": "py:function", "6": "py:property", "7": "py:exception"}, "terms": {"": [0, 1, 2, 3, 5, 8, 9, 12, 15, 16, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 36, 39, 44, 45, 46, 51, 53, 55, 56, 57, 63, 64, 65, 68, 70, 73, 74, 78, 87, 89, 90, 93, 94, 95, 97, 100, 101, 103, 104, 105, 107, 108, 110, 112, 113], "0": [0, 3, 4, 5, 6, 9, 12, 16, 17, 18, 19, 22, 23, 25, 26, 28, 30, 32, 33, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 68, 70, 71, 72, 78, 79, 80, 85, 88, 89, 90, 92, 93, 95, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113], "00": [22, 25, 71], "00000000000000000": [22, 23, 25, 26, 39, 45, 46, 47, 57, 62, 100, 102, 103, 104, 105], "00000000000003": [23, 25, 39, 104], "00018361238254747651": 71, "0001_0d4865d7c9453adc6af6409568da326845c358b9_20230406_165330": 71, "0002": 71, "0002090000002681336": 71, "0009575499998391024": 71, "001": 63, "001326192548940973": 71, "0014_31de39be8b19c76d073a8999def6673a305c250d_20230405_145759_uncommit": 71, "0015_31de39be8b19c76d073a8999def6673a305c250d_20230405_145947_uncommit": 71, "00383609999971668": 71, "0039507749997937935": 71, "0040258999997604406": 71, "004057779999857303": 71, "004066600000442122": 71, "004131924999910552": 71, "004159775000061927": 71, "004246700000294368": 71, "0043372999998609885": 71, "0048064200000226265": 71, "005089474999749655": 71, "007168699999965611": 71, "01": [25, 39, 47, 63, 71, 74, 76], "011410423448327005": [25, 39, 47, 102], "013": 105, "0197": 71, "02": 71, "020288899999286514": 71, "021728052940979934": [51, 108], "024032100000113132": 71, "03": 71, "030785499755523249": [51, 108], "03960235520756414": [25, 61], "04": [71, 93], "04380595350226197": [25, 61], "0441791878997098": [25, 39, 47, 51], "0472855509390593": [25, 39, 45, 100], "04t12": 71, "04t16": 71, "05": [25, 68], "05309592737584": [25, 39, 45, 100], "0532529435624589": [51, 108], "0550596900172": 71, "055256829926011691": [51, 108], "0598322696795694": [51, 108], "05t15": 71, "06": 71, "0625": [22, 25], "07": 71, "07734942223993": 105, "08": [25, 68], "083130710959903542": 51, "08505865366367038": [51, 108], "085536923187668": [25, 39, 45, 100], "0889": 71, "089433234324597599": [25, 39, 47], "09": [71, 89], "0954451150103321": [23, 25, 39, 104], "097392": 71, "0986122886681098": [25, 39, 45], "0b10": [25, 39, 46], "0b100": [25, 36, 39, 63], "0b101111111111111111111111111111111111111111111111111111111111111111": [25, 39, 46], "0x1": [25, 36, 39], "0x1p": [25, 36, 39], "0x7f2cf23e10c0": [22, 25, 103], "1": [0, 1, 3, 4, 6, 8, 11, 12, 15, 17, 18, 19, 22, 23, 24, 25, 26, 28, 30, 32, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 83, 85, 88, 89, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113], "10": [3, 4, 8, 17, 18, 22, 23, 25, 28, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 59, 61, 63, 65, 70, 71, 78, 90, 92, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110], "100": [22, 25, 39, 45, 46, 57, 59, 63, 65, 71, 78, 100], "1000": [17, 22, 25, 26, 30, 63, 98, 105], "10000": 19, "100000": 78, "100000000": 95, "1000000000000001": [25, 39, 45], "100x40": [5, 9], "101": [25, 39, 55], "1024": [1, 25, 39, 46], "104": [25, 39, 55], "105": [0, 19, 88], "106": [51, 108], "1073741824": [22, 25, 103], "1074": [25, 36, 39], "108": [23, 25, 39, 104], "109302162163285": [25, 61], "10_000": [4, 25], "11": [3, 22, 25, 36, 39, 45, 46, 48, 49, 53, 54, 57, 71, 76, 78, 79, 100, 103, 105, 106], "110": [25, 39, 55], "110680464442257309696": 3, "110680464442257309708": 3, "111": [22, 25, 39, 55, 103], "11111111111111116": [23, 25, 39, 104], "114": [25, 39, 55], "1153776854774361": [25, 39, 47], "116": [25, 39, 55], "119": [25, 39, 55], "12": [3, 22, 23, 25, 28, 39, 45, 46, 48, 49, 53, 54, 55, 56, 57, 61, 71, 87, 92, 93, 100, 104, 105, 106], "120": [25, 39, 46, 55, 105], "121": [25, 39, 55], "122": [25, 39, 55], "1234": [18, 22, 25, 28, 39, 46, 53, 55, 74], "1235": [18, 22, 25, 28, 39, 46, 53, 55], "1236": [18, 22, 25, 28, 39, 46, 53, 55], "12367222192448891": [25, 39, 47, 102], "1237": [18, 22, 25, 28, 39, 46, 53, 55], "127": [25, 36, 39, 72], "128": [18, 25, 36, 39, 45, 53, 55], "12gb": 93, "13": [3, 25, 39, 45, 46, 49, 51, 54, 57, 71, 88, 89, 92, 100, 105, 106, 108], "1319566682702642": [51, 108], "134": [25, 39, 45, 100], "14": [3, 22, 23, 25, 39, 45, 46, 49, 51, 54, 55, 63, 71, 78, 79, 100, 104, 106, 108], "141571941375841": 17, "14159": [25, 36, 39, 45], "143": [25, 39, 46], "1436": 71, "15": [3, 18, 22, 25, 39, 45, 46, 49, 51, 54, 55, 56, 105, 106, 108], "1514764800000000000": [25, 39, 47], "15461882265": 85, "158": 71, "1598310770203937": [25, 39, 45, 100], "16": [22, 23, 25, 36, 39, 45, 46, 51, 57, 71, 72, 89, 90, 100, 104, 106, 108], "160": [25, 39, 46], "1622479306453748": [25, 39, 45, 100], "16400145561571539": [51, 108], "166020696663385964564": 3, "166020696663385964574": 3, "1665150633720014": [51, 108], "166666666666666": [25, 39, 46], "17": [22, 25, 39, 45, 46, 51, 56, 71, 78, 105, 106, 108], "1701": [25, 39, 47, 102], "1723810583573375": 51, "1723810583573377": [25, 39, 47], "18": [22, 23, 25, 39, 45, 46, 51, 71, 100, 104, 106, 108], "18446744073709551616": [25, 39, 46, 47], "18446744073709551617": [25, 39, 46, 47], "18446744073709551618": [25, 39, 46, 47], "18446744073709551619": [25, 39, 46, 47], "18446744073709551620": [25, 39, 46, 47], "1864": [25, 39, 47], "1882": 71, "18_446_744_073_709_551_615": [25, 36, 39], "19": [25, 39, 45, 46, 57, 106], "1923875335537315": [51, 108], "196608": 71, "1_2___": [25, 32, 39, 55, 113], "1d": [6, 10, 12, 16, 17, 25, 39, 45, 49, 53, 65, 70, 110, 111], "1e": [25, 63, 68], "1st": [25, 39, 46], "1string": [25, 39, 55], "2": [0, 3, 4, 8, 17, 18, 22, 23, 24, 25, 26, 28, 32, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 68, 70, 71, 72, 74, 78, 79, 80, 87, 88, 89, 90, 91, 92, 93, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113], "20": [1, 3, 5, 9, 22, 25, 39, 45, 46, 49, 51, 54, 61, 74, 78, 92, 93, 100, 106, 108], "2000": 71, "2000000000000002": [25, 39, 45], "20159494048757": [51, 108], "2018": [25, 39, 47], "2020": 71, "2022": 90, "2023": [71, 89], "2024": [25, 61], "2047": [25, 36, 39], "2048": [25, 39, 46], "208": 71, "2080": 71, "20ghz": 71, "21": [3, 25, 39, 45, 100], "210": 71, "21589865655358": [25, 39, 45, 100], "22": [3, 25, 36, 39, 45, 100], "2200000000": 71, "2207999000": 71, "222": [22, 25, 103], "2250": 71, "23": [3, 25, 36, 39, 45, 46], "2324_pytest_benchmark_doc": 71, "236": 71, "24": [3, 25, 26, 39, 45, 46, 65, 71, 92, 100], "246": 71, "25": [3, 22, 23, 25, 26, 28, 36, 39, 45, 46, 47, 57, 65, 88, 92, 100, 102, 104], "255": [25, 36, 39], "256": [25, 39, 46, 71], "2561": 71, "26": [17, 25, 39, 45, 71], "263": 71, "264": 71, "267": 71, "27": [0, 22, 25, 39, 45, 46, 71, 78], "28": 57, "281": 71, "290": [22, 25], "298": [22, 25], "2_147_483_647": [25, 36, 39], "2_147_483_648": [25, 36, 39], "2d": [5, 6, 9, 25, 39, 47], "2j": [25, 36, 39], "2\u00b3x\u2087": [25, 39, 55], "2\u00b3\u2087": [25, 39, 55], "3": [3, 4, 17, 22, 23, 24, 25, 26, 28, 32, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 68, 70, 71, 78, 79, 80, 89, 90, 92, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111, 113], "30": [3, 25, 26, 57, 61, 65, 75], "3000": [25, 65], "3000000000000007": [25, 39, 45], "30013431967121934": [25, 39, 47, 51], "3025850929940459": [25, 39, 45, 100], "31": [74, 93], "317766166719343": [25, 62], "31de39be8b19c76d073a8999def6673a305c250d": 71, "32": [22, 25, 28, 36, 39, 45, 46, 64, 71, 78, 80], "3219280948873626": [25, 39, 45, 100], "324": [25, 36, 39, 46, 105], "32_767": [25, 36, 39], "32_768": [25, 36, 39], "33": [25, 39, 45, 100], "3304": 71, "3306": 71, "333": [22, 25, 103], "333333333333333": [23, 25, 39, 104], "33333333333333326": [23, 25, 39, 104], "33333333333333337": [23, 25, 39, 104], "33333333333333348": [23, 25, 39, 104], "333333333333334": [25, 61], "33340274885464394": 17, "34": 0, "35": 78, "350": 71, "35000": 78, "353429832157099": 51, "36": [25, 36, 39, 45, 63, 105], "3620": 71, "3673425816523577": [51, 108], "36893488147419103233": 3, "37": 78, "3805": 71, "384": [25, 39, 46], "38552048588998722": [51, 108], "3862943611198906": [25, 39, 45], "3866978126031091": [51, 108], "3890560989306504": [25, 39, 45, 100], "39": [22, 25, 71], "3d": [25, 39, 46], "3dnowprefetch": 71, "3rd": [25, 39, 46], "3w": [25, 36, 39], "4": [3, 5, 9, 17, 18, 22, 23, 24, 25, 26, 28, 32, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 62, 63, 65, 68, 71, 78, 80, 89, 90, 92, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111, 113], "40000": [22, 25], "4000000000000004": [25, 39, 45], "4097": 71, "40990997253631162": 51, "4110385860243131": [25, 39, 45, 100], "4142135623730951": [25, 39, 46], "41619265571741659": [25, 39, 47], "4177": 71, "42": 106, "4231": 71, "4298": 71, "4328": 71, "44017172817806": 71, "4444": 71, "45": [25, 39, 45], "450": [25, 39, 45, 100], "454368507659211": [25, 39, 45, 100], "457": 19, "459": [22, 25], "46": [25, 39, 45, 65, 100], "4608": [25, 39, 46], "4621": 71, "4657359027997265": [25, 62], "47108547995356098": [51, 108], "47383036230759112": [25, 39, 47, 51], "478894913238722": [25, 39, 45, 100], "48": [25, 26, 65], "4869": 71, "4875": 71, "4879818539586227": 51, "49": [25, 39, 45], "4930614433405491": [25, 62], "494295836924771": [25, 39, 45, 100], "4_294_967_295": [25, 36, 39], "5": [3, 17, 18, 19, 22, 23, 25, 26, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 61, 62, 63, 65, 68, 71, 78, 79, 80, 82, 88, 90, 92, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111], "50": [5, 9, 17, 71, 78], "500": [19, 72, 75], "5000": [22, 25], "512": [25, 39, 46], "51874393620990389": [25, 39, 47], "52": [25, 36, 39, 78], "5246": 71, "5255": 71, "5275252316519465": [23, 25, 39, 104], "53": [25, 39, 45], "5306": 71, "5392023718621486": 51, "54": [25, 39, 45, 100], "5424399190667666": [51, 108], "55": [25, 39, 45, 63], "5541": 71, "5555": [19, 85, 112], "55555555555555536": [23, 25, 39, 104], "55555555555555558": [23, 25, 39, 104], "5571769623557188": [25, 39, 45, 100], "56": [25, 39, 46, 79], "5622": 71, "5652": 71, "567584107142031": [25, 39, 47, 51], "57": 71, "5728783400481925": [25, 39, 45, 100], "57600036956445599": [25, 39, 47], "58": 71, "5801": 71, "5835189384561099": [25, 62], "5837": 71, "598150033144236": [25, 39, 45, 100], "5____6___7": [25, 39, 55], "5e": [25, 36, 39, 71], "5h": [25, 39, 56], "6": [3, 17, 22, 23, 24, 25, 26, 28, 39, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 62, 63, 71, 78, 89, 90, 92, 93, 95, 97, 99, 100, 102, 103, 104, 105, 106, 111], "60": [25, 39, 46, 105], "6000000000000001": [25, 39, 45], "600000000000001": [25, 39, 45], "6051701859880918": [25, 39, 45, 100], "6094379124341003": [25, 39, 45, 62], "61": [25, 39, 46], "6125": 71, "62": [22, 25, 39, 46, 71], "62511314008006458": [51, 108], "63": [25, 39, 45, 46, 107], "64": [20, 25, 28, 36, 39, 45, 46, 47, 51, 70, 71, 102, 103, 107], "6438561897747253": [25, 39, 45, 100], "6450": 71, "6465": 71, "647": 19, "64bit": 71, "65": [25, 39, 46], "6534654349920751": 51, "65_535": [25, 36, 39], "6615356693784662": [25, 39, 47], "6666666666666665": [23, 25, 39, 104], "67": [0, 22, 25], "68586185091150265": [25, 39, 47, 51], "6864": 71, "68894208386667544": 51, "69314718055994529": [25, 39, 45], "7": [3, 17, 22, 23, 25, 26, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 57, 62, 65, 78, 89, 90, 92, 97, 99, 100, 102, 103, 104, 106, 108, 111], "7085325853376141": [51, 108], "71": [25, 39, 46, 78], "710615785506533": [25, 39, 45, 100], "7182818284590451": [25, 39, 45, 100], "7208667145173608": [51, 108], "7320508075688772": [25, 39, 46], "7336": 71, "73618171558685619": [25, 39, 47, 102], "75": [23, 25, 39, 47, 102, 104], "75000": 78, "7544": 71, "7659": 71, "77": [22, 25], "77000": 78, "77777777777777768": [23, 25, 39, 104], "77777777777777779": [23, 25, 39, 104], "7852": 71, "78523998586553": [25, 39, 45, 100], "79": 71, "7912": 71, "7999999999999998": [23, 25, 39, 104], "7wjef": [25, 39, 47], "8": [3, 17, 22, 23, 25, 28, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 61, 62, 68, 71, 72, 73, 78, 79, 89, 90, 92, 93, 97, 99, 100, 102, 103, 104, 106, 107, 108], "80": 78, "8000000000000007": [25, 39, 45], "8075": 71, "81": [25, 39, 45], "8377304471659395": [25, 62], "8380": 71, "84": 78, "84010843172504": [25, 39, 45, 100], "84375": [25, 39, 46, 105], "86": [22, 25], "8675309": [25, 39, 47], "87": 71, "8722813232690143": [25, 39, 46, 100], "8729704388729135": 51, "875": [25, 65], "8750h": 71, "8797352989638163": [51, 108], "88": 71, "8800": 71, "88281": [22, 25], "896": [25, 39, 46], "9": [3, 18, 22, 23, 25, 28, 39, 44, 45, 46, 47, 48, 49, 53, 54, 55, 57, 71, 78, 89, 90, 92, 97, 99, 100, 102, 103, 104, 105, 106], "90": 71, "9012": 71, "9160772326374946": 51, "9177": 71, "92176432277231968": 51, "921f9f01b866ep": [25, 36, 39], "9223372036854775807": [25, 36, 39], "92233720368547758085": 3, "92233720368547758090": 3, "92233720368547758091": 3, "92233720368547758095": 3, "931": 92, "9314718055994531": [25, 62], "934176000000015": 105, "9362": 19, "94": 71, "9437184": 71, "9442193396379165": 25, "945880905466208": [25, 39, 45, 100], "96": [25, 39, 46], "9602": 19, "9683": 19, "984375": [25, 36, 39], "99": [22, 25, 63, 71, 103], "999": 63, "9991": 71, "99999": 0, "9999999999999982": [23, 25, 39, 104], "9999999999999998": [25, 39, 46], "999999999999ap": [25, 36, 39], "9_223_372_036_854_775_807": [25, 36, 39], "9_223_372_036_854_775_808": [25, 36, 39], "A": [1, 2, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 55, 57, 59, 63, 64, 65, 74, 78, 84, 95, 97, 100, 101, 103, 105, 106, 107, 108, 110, 111, 113], "AND": [8, 23, 25, 39, 53, 96, 104], "And": [63, 107], "As": [0, 25, 39, 45, 46, 55, 63, 74, 79, 81, 89, 90, 97, 100, 107, 113], "At": [25, 39, 45, 46, 100], "Be": [0, 22, 25, 26, 28, 39, 46, 55, 70], "But": [3, 25, 39, 49, 111], "By": [18, 20, 21, 22, 23, 25, 26, 28, 39, 44, 45, 46, 49, 53, 55, 56, 68, 93, 104, 111], "For": [0, 2, 3, 4, 5, 9, 17, 18, 22, 23, 25, 28, 32, 36, 39, 45, 46, 47, 49, 51, 54, 55, 56, 57, 63, 70, 71, 75, 78, 83, 85, 87, 89, 90, 91, 94, 97, 99, 102, 104, 105, 106, 107, 108, 109, 111, 113], "IN": 78, "If": [0, 1, 3, 4, 6, 10, 12, 13, 16, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 32, 33, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 63, 65, 68, 70, 72, 73, 74, 75, 79, 80, 82, 85, 87, 89, 90, 91, 93, 94, 97, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113], "In": [18, 22, 23, 25, 28, 36, 39, 45, 46, 51, 55, 70, 71, 72, 74, 75, 78, 85, 87, 88, 89, 91, 93, 97, 100, 104, 105, 106, 108, 109, 112, 113], "It": [0, 5, 20, 22, 25, 39, 46, 53, 57, 64, 68, 70, 72, 73, 76, 78, 79, 80, 82, 85, 89, 90, 93, 103, 104, 109], "Its": [51, 108], "NO": 71, "NOT": [8, 22, 25, 26, 28, 39, 45, 46, 55, 87, 97, 107], "No": [25, 39, 46, 87, 93], "Not": [8, 25, 28, 39, 45, 56, 65, 71, 103], "ONE": 80, "OR": [8, 23, 25, 39, 53, 74, 96, 104], "Of": [25, 39, 56], "On": [18, 19, 112], "One": [22, 23, 25, 26, 39, 46, 57, 65, 70, 78, 104, 110], "Ones": [25, 39, 47, 102], "Or": [4, 17, 25, 74, 88], "The": [0, 1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 68, 70, 72, 74, 78, 79, 80, 81, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113], "Then": [25, 68], "There": [1, 23, 25, 28, 36, 39, 45, 71, 78, 87, 88, 89, 90, 93, 102, 111], "These": [1, 22, 25, 36, 39, 65, 78, 80, 83, 85, 97], "To": [0, 1, 22, 23, 25, 28, 36, 39, 45, 51, 56, 63, 70, 71, 72, 76, 79, 85, 87, 90, 91, 93, 101, 103, 105, 107, 108, 113], "Will": 71, "With": [23, 25, 39, 45, 70, 91, 104, 106], "_": [3, 17, 23, 25, 28, 32, 39, 55, 104, 113], "__": [25, 32, 39, 55, 113], "__4___5____6___7": [25, 32, 39, 55, 113], "___": [25, 39, 55], "____": [25, 32, 39, 55, 113], "__all__": 70, "__allsymbols__": [25, 27], "__array_function__": 5, "__dict__": 91, "__init__": [2, 25], "__int__": [25, 36, 39, 63], "__registeredsymbols__": [25, 27], "__str__": [22, 23, 25, 36, 39, 63, 65], "_abstractbasetim": [25, 39, 56], "_array_object": 5, "_b3yc": [25, 39, 47], "_base_unit": [25, 39, 56], "_distn_infrastructur": 63, "_equal": [25, 68], "_equival": [25, 68], "_filter_arkouda_command": 24, "_final": [25, 36, 39], "_genericalia": [25, 36, 39], "_get_grouping_kei": [23, 25, 39, 104], "_ilocindex": [25, 65], "_length": [25, 39, 53], "_local": [18, 22, 25, 26, 28, 39, 46, 53, 55, 80], "_locale0000": [22, 25], "_locindex": [25, 65], "_segment": [25, 39, 53, 80], "_type": [5, 6, 7, 9, 16], "_valu": [25, 39, 53, 80], "_x": [22, 25], "_y": [22, 25], "a1": [25, 30, 39, 45, 100], "a2": [25, 30, 39, 45, 46, 100], "a_cpi": [25, 39, 46], "a_max": 17, "a_min": 17, "ab": [8, 25, 39, 45, 56, 96, 100], "abc": [25, 26, 36, 39, 79], "abil": 109, "abl": [70, 74, 80, 81, 87, 97], "abm": 71, "about": [18, 19, 25, 27, 28, 39, 46, 55, 56, 70, 71, 75, 85, 91, 100, 113], "abov": [6, 25, 36, 39, 45, 46, 51, 63, 70, 71, 76, 78, 87, 89, 103, 108, 113], "abs_dt": 30, "absolut": [1, 8, 25, 36, 39, 45, 56, 68, 91, 100], "abstract": 24, "acceler": 73, "accept": [25, 39, 45, 56, 65, 71, 110], "access": [1, 2, 19, 21, 25, 28, 39, 55, 64, 65, 70, 78, 83, 87, 90, 96, 97, 108, 112], "access_channel": [19, 112], "access_token": [19, 112], "accessor": [25, 69], "accomod": [20, 25], "accomplish": [91, 97], "accord": [20, 22, 23, 25, 26, 36, 39, 45, 57, 65, 103, 104, 107], "accordingli": [25, 39, 47, 80, 102], "account": 93, "accur": 63, "accuraci": 63, "achiev": [3, 22, 25, 87], "aco": 8, "acosh": 8, "acquir": 70, "across": [0, 5, 9, 21, 22, 25, 28, 39, 46, 56, 80, 89, 90, 97, 100, 105, 108], "act": [25, 39, 46, 51, 108], "action": 74, "activ": [21, 85, 87, 88, 89, 90, 104], "actual": [25, 30, 36, 39, 44, 79], "ad": [18, 20, 22, 25, 26, 28, 31, 36, 39, 45, 46, 53, 55, 75, 77, 78, 82, 87, 88, 97, 112], "add": [0, 1, 8, 18, 22, 23, 25, 28, 39, 51, 53, 65, 70, 74, 85, 87, 89, 90, 91, 93, 103, 104, 108], "addit": [1, 12, 22, 23, 25, 36, 39, 45, 51, 59, 68, 72, 80, 82, 89, 107, 108, 111, 112], "addition": [91, 98], "address": [0, 19, 20, 25, 112], "adher": 80, "advanc": 88, "adversari": [25, 39, 45], "adx": 71, "ae": 71, "affect": [20, 25, 51, 108], "after": [0, 4, 18, 22, 23, 25, 39, 44, 48, 55, 74, 76, 87, 88, 103, 104, 108], "ag": 78, "again": [0, 76, 78, 79, 87, 89], "against": [18, 25, 39, 53, 55, 65, 71, 78, 97], "aggreg": [1, 21, 22, 23, 25, 39, 53, 57, 78, 96, 97, 104], "aggress": 97, "ahead": 21, "aid": [78, 80], "aim": 78, "ak": [0, 1, 3, 4, 5, 9, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 32, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 68, 70, 75, 76, 78, 79, 85, 91, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113], "ak_arr": 78, "ak_data": [25, 28, 97], "ak_df": [22, 25, 59, 103], "ak_in1d": 78, "ak_in1dmult": 78, "ak_in1dmulti": 78, "ak_int": 78, "ak_int64": [25, 39, 45], "ak_intmult": 78, "ak_io_benchmark": 71, "aka": [64, 87], "akbool": [25, 39], "akcast": 25, "akdata": [25, 28], "akfloat64": 25, "akint64": [25, 39, 47, 51], "akstat": [25, 61], "aku": [25, 26, 60, 98], "akuint64": [25, 39], "algorithm": [15, 25, 39, 45, 54, 57, 85, 99], "alia": [22, 25, 36, 39, 49, 53, 56, 65, 103], "alias": [25, 36, 39, 56], "alic": [22, 25, 103], "align": [25, 26, 36, 39, 45, 65, 69, 105, 110], "all": [0, 3, 5, 6, 9, 12, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 31, 32, 33, 36, 39, 44, 45, 46, 47, 49, 51, 53, 55, 57, 59, 65, 68, 70, 71, 74, 75, 76, 79, 80, 82, 85, 88, 89, 90, 91, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113], "all_occurr": [3, 25, 39, 49], "all_scalar": [25, 36, 39, 47, 58, 102], "allclos": [25, 63, 68], "alloc": [19, 87, 93], "allow": [0, 18, 20, 22, 23, 25, 26, 28, 31, 39, 45, 46, 47, 51, 53, 55, 57, 61, 65, 68, 71, 72, 78, 81, 83, 91, 93, 97, 104, 108], "allow_error": [22, 25, 26, 28, 39, 46, 55, 97], "allow_list": [25, 26, 98], "allsymbol": [25, 27], "almost": [101, 103, 107, 113], "alnum": [25, 39, 55], "alon": [101, 113], "along": [5, 9, 10, 12, 13, 15, 16, 17, 22, 23, 25, 39, 44, 45, 46, 47, 48, 56, 65, 100, 102, 105, 110, 111], "alongsid": [25, 28], "alpha": [25, 39, 55, 63, 71, 95], "alphabet": [25, 39, 55], "alphanumer": [25, 39, 55], "alreadi": [0, 1, 18, 21, 22, 23, 25, 26, 28, 39, 45, 46, 53, 55, 56, 65, 75, 79, 80, 82, 87, 101, 104, 111], "also": [1, 3, 5, 17, 18, 20, 23, 25, 30, 36, 39, 45, 47, 49, 51, 53, 55, 63, 65, 68, 70, 73, 75, 78, 79, 81, 82, 83, 85, 88, 89, 90, 93, 97, 102, 106, 107, 108, 111], "altern": [1, 17, 22, 25, 51, 63, 65, 74, 75, 87, 90, 93, 108], "although": [5, 9], "alwai": [0, 12, 15, 23, 25, 26, 28, 36, 39, 55, 56, 70, 79, 97, 100, 101, 103, 104, 107, 113], "amount": [19, 22, 25, 39, 46, 87, 91, 103, 113], "an": [0, 1, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 60, 63, 64, 65, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 85, 88, 89, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "anaconda": [1, 85, 87, 93, 94], "anaconda3": [87, 89, 90], "analog": [23, 25, 36, 39, 56, 104], "analyt": 84, "angl": [25, 39, 45], "ani": [0, 3, 4, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 36, 39, 45, 46, 47, 49, 51, 53, 55, 65, 68, 70, 71, 74, 76, 80, 82, 89, 90, 96, 100, 102, 103, 104, 105, 107, 108], "anim": [25, 65], "animal_1": [22, 25], "animal_2": [22, 25], "annot": [25, 36, 39, 70, 87], "anoth": [0, 6, 7, 13, 22, 23, 25, 28, 36, 39, 45, 46, 55, 70, 80, 85, 90, 93, 97, 103, 104, 106, 107, 109], "anyon": 0, "anyth": [0, 25, 36, 39, 46, 74], "anywai": [0, 102], "aom": [25, 39, 47], "apart": 17, "api": [1, 5, 6, 8, 9, 12, 22, 23, 25, 36, 39, 57, 65, 70, 84, 104, 107], "api_specif": [12, 25, 39, 57], "apic": 71, "app": 93, "appear": [3, 18, 22, 23, 25, 26, 28, 39, 46, 49, 55, 65, 74, 104, 105], "append": [17, 18, 22, 23, 25, 26, 28, 39, 46, 49, 53, 55, 80, 82, 96, 102, 104], "append_singl": [25, 39, 53], "appli": [3, 8, 12, 16, 17, 22, 23, 25, 39, 45, 68, 69, 70, 71, 100, 103, 104, 113], "applic": [23, 25, 39, 45, 88, 97, 102, 104, 111], "apply_permut": [22, 25, 103], "appreci": 0, "approach": [91, 109], "appropri": [0, 22, 25, 28, 68, 74, 81, 85, 87, 92, 97], "approv": [0, 88], "approxim": [17, 22, 25, 68], "ar": [0, 1, 3, 5, 8, 9, 12, 17, 18, 20, 21, 22, 23, 25, 26, 28, 36, 39, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 63, 64, 65, 68, 71, 72, 74, 75, 76, 78, 79, 80, 82, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113], "arang": [3, 6, 17, 22, 23, 25, 28, 39, 44, 45, 46, 47, 49, 51, 53, 57, 59, 65, 70, 78, 96, 97, 100, 102, 103, 104, 105, 106, 107, 108, 111], "arbitrari": [22, 25, 103], "arbitrarili": [18, 25, 39, 49, 111], "arcco": [25, 39, 45], "arccosh": [25, 39, 45], "arccosin": 8, "arch": 71, "arch_cap": 71, "arch_string_raw": 71, "architectur": 71, "archiv": 89, "arcsin": [8, 25, 39, 45], "arcsinh": [25, 39, 45], "arctan": [25, 39, 45], "arctan2": [25, 39, 45], "arctang": 8, "arctanh": [25, 39, 45], "area": [17, 25, 63, 68, 71], "aren": [89, 90], "arg": [0, 3, 22, 23, 25, 26, 36, 39, 47, 53, 56, 57, 63, 65, 70, 91, 102, 104], "arg1": 70, "argmax": [13, 22, 23, 25, 36, 39, 46, 53, 65, 96, 100, 104, 105], "argmaxk": [25, 39, 46, 96, 100, 105], "argmin": [13, 22, 23, 25, 36, 39, 46, 53, 65, 96, 100, 104, 105], "argmink": [25, 39, 46, 96, 100, 105], "argpars": 92, "args1": 3, "args2": 3, "argsort": [15, 18, 19, 22, 23, 25, 26, 36, 39, 46, 51, 54, 96, 99, 100, 101, 103, 104, 108, 113], "argument": [2, 3, 4, 15, 16, 17, 20, 21, 22, 23, 25, 28, 36, 39, 44, 45, 46, 51, 53, 55, 57, 63, 65, 68, 70, 91, 108, 110], "arithmet": [96, 107], "arkodua": [79, 80], "arkouda": [69, 71, 74, 76, 77, 81, 83, 88, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 111], "arkouda_arrow_path": 1, "arkouda_client_directori": [1, 64], "arkouda_client_mod": 1, "arkouda_client_timeout": 1, "arkouda_config_fil": [75, 91], "arkouda_develop": [1, 75], "arkouda_full_stack_test": 1, "arkouda_hdf5_path": 1, "arkouda_hom": 1, "arkouda_iconv_path": 1, "arkouda_idn2_path": 1, "arkouda_key_fil": 1, "arkouda_log_level": [1, 25, 39], "arkouda_mem_alloc": 19, "arkouda_numlocal": 1, "arkouda_password": 1, "arkouda_print_passes_fil": 1, "arkouda_quick_compil": [1, 75, 90], "arkouda_root": 71, "arkouda_serv": [1, 19, 25, 36, 39, 72, 75, 76, 85, 87, 91, 112], "arkouda_server_aggregation_dst_buff_s": 1, "arkouda_server_aggregation_src_buff_s": 1, "arkouda_server_aggregation_yield_frequ": 1, "arkouda_server_connection_info": 1, "arkouda_server_host": 1, "arkouda_server_port": 1, "arkouda_server_user_modul": [1, 91], "arkouda_skip_check_dep": 1, "arkouda_supported_bool": [25, 36, 39], "arkouda_supported_dtyp": [25, 36, 39], "arkouda_supported_float": [25, 36, 39], "arkouda_supported_int": [25, 36, 39], "arkouda_supported_numb": [25, 36, 39], "arkouda_tunnel_serv": 1, "arkouda_typ": [22, 25, 26, 28, 39, 46, 55], "arkouda_verbos": 1, "arkouda_vers": 80, "arkouda_zmq_path": 1, "arkoudalogg": [23, 25, 31, 39, 55, 104], "arkoudavers": 0, "arm64": 90, "around": [0, 5, 9, 20, 25, 36, 39, 63, 74, 76], "arr": [4, 25, 28, 39, 48], "arr1": 3, "arr2": [3, 25, 39, 49], "arrai": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 28, 30, 32, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 68, 70, 71, 79, 80, 85, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 113], "array_api": [25, 69], "array_dtyp": 70, "array_equ": [25, 39, 45], "array_lik": 17, "array_nd": 70, "array_object": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 69], "arrays2": [25, 26], "arrays_and_dtyp": 7, "arraysetop": 111, "arraysetopsmsg": 70, "arrayview": [80, 107], "arri": 57, "arriv": 21, "arrow": [1, 92], "artifact": 64, "artist": [25, 39, 45, 105], "as_compon": [25, 39, 57], "as_index": [22, 25, 103], "as_integer_ratio": [25, 36, 39], "as_perc": 19, "as_seri": [22, 25], "asarrai": [5, 6, 9, 17], "ascend": [13, 22, 23, 25, 26, 39, 45, 46, 54, 65, 98, 103, 105, 110], "ascii": 71, "asia": [25, 39, 56], "asin": 8, "asinh": 8, "ask": 0, "assembl": [25, 39, 55], "assert": [25, 68], "assert_": [25, 68], "assert_almost_equ": [25, 68], "assert_almost_equival": [25, 68], "assert_arkouda_array_equ": [25, 68], "assert_arkouda_array_equival": [25, 68], "assert_arkouda_pdarray_equ": [25, 68], "assert_arkouda_segarray_equ": [25, 68], "assert_arkouda_strings_equ": [25, 68], "assert_attr_equ": [25, 68], "assert_categorical_equ": [25, 68], "assert_class_equ": [25, 68], "assert_contains_al": [25, 68], "assert_copi": [25, 68], "assert_dict_equ": [25, 68], "assert_equ": [25, 68], "assert_equival": [25, 68], "assert_frame_equ": [25, 68], "assert_frame_equival": [25, 68], "assert_index_equ": [25, 68], "assert_index_equival": [25, 68], "assert_is_sort": [25, 68], "assert_series_equ": [25, 68], "assert_series_equival": [25, 68], "assertionerror": [25, 68], "asset": 85, "assig": 106, "assign": [0, 18, 22, 23, 25, 39, 65, 79, 80, 96, 101, 104, 109, 110, 113], "assist": [0, 91], "associ": [0, 1, 22, 25, 28, 39, 51, 57, 65, 71, 74, 97, 108, 109, 110], "assum": [2, 13, 17, 22, 23, 25, 28, 39, 45, 47, 49, 51, 65, 74, 79, 80, 81, 89, 90, 94, 97, 103, 104, 108, 110, 111], "assume_sort": [23, 25, 39, 104, 111], "assume_uniqu": [25, 39, 49, 111], "assumpt": [18, 25, 39, 46, 47, 55, 97, 101, 107], "astyp": [7, 22, 25, 36, 39, 46, 55], "atan": 8, "atan2": 8, "atanh": 8, "atol": [25, 68], "atom": 21, "attach": [18, 20, 22, 23, 25, 26, 39, 46, 53, 55, 56, 57, 65, 96, 104], "attach_al": [25, 39, 57], "attach_pdarrai": [25, 39, 46], "attahc": [25, 39, 46], "attempt": [18, 22, 23, 25, 26, 28, 39, 46, 53, 54, 55, 56, 65, 87, 97, 103, 104], "attent": 71, "attr": [25, 68], "attribut": [9, 18, 22, 26, 28, 36, 46, 55, 56, 68, 97, 107], "augment": 88, "authent": [19, 64, 85, 112], "author": 0, "author_tim": 71, "auto": [63, 69, 74], "autoapi": [69, 92], "autoclass": 98, "autodoc": 92, "autofunct": 113, "autom": [1, 74], "automat": [1, 3, 18, 25, 28, 65, 80, 88, 97, 101, 110], "autopackagesummari": 92, "autosav": 71, "avail": [1, 19, 25, 28, 39, 46, 63, 71, 76, 80, 88, 93, 97, 105], "avail_mem": 19, "averag": [23, 25, 39, 46, 47, 71, 100, 104], "avoid": [0, 73, 76], "avx": 71, "avx2": 71, "awar": 0, "awk": 93, "ax": [0, 5, 9, 12, 16, 17, 22, 25, 39, 44, 45, 46, 56, 63, 100, 105], "axi": [10, 11, 12, 13, 15, 16, 17, 22, 25, 26, 39, 44, 45, 46, 48, 53, 54, 56, 59, 65, 99, 100, 103, 105, 109, 110], "b": [18, 19, 22, 23, 25, 26, 28, 30, 36, 39, 44, 45, 46, 47, 49, 51, 53, 54, 55, 57, 59, 63, 65, 68, 78, 95, 99, 100, 103, 104, 105, 106, 107, 108, 111], "b_np": [25, 39, 45, 105], "b_width": [25, 39, 45, 105], "back": [20, 22, 23, 25, 39, 45, 57, 73, 76, 97, 104], "backbon": 107, "backend": [22, 25, 65, 73, 87], "backward": [25, 39, 53, 57], "badvalu": 63, "balanc": [18, 25, 39, 55], "bandwidth": [25, 39, 47, 97], "bar": [25, 39, 45, 105], "barcontain": [25, 39, 45, 105], "base": [0, 1, 2, 3, 5, 8, 14, 18, 20, 22, 24, 25, 26, 28, 31, 36, 39, 45, 46, 54, 56, 57, 60, 61, 63, 65, 74, 87, 90, 94, 97, 98, 99, 100, 101, 103, 107, 110, 113], "bash": [89, 90], "bashrc": [89, 90, 93], "basic": [19, 25, 26, 39, 46, 64, 74, 93, 107], "bear": [0, 74, 89, 90], "bebbxjhgm": [25, 39, 47], "becaus": [18, 22, 25, 26, 28, 39, 45, 47, 51, 53, 55, 68, 75, 78, 79, 80, 81, 85, 97, 101, 102, 103, 109, 113], "becom": [25, 36, 39, 45], "been": [1, 18, 19, 22, 25, 28, 39, 45, 46, 48, 49, 53, 55, 72, 73, 74, 87, 91, 100, 101, 102], "befor": [0, 12, 13, 17, 21, 25, 39, 44, 45, 48, 54, 56, 71, 87, 88, 97], "begin": [0, 5, 9, 17, 25, 39, 55, 106], "behav": 0, "behavior": [0, 5, 21, 22, 25, 39, 44, 46, 47, 51, 70, 100, 102, 103, 108, 113], "being": [21, 22, 25, 26, 28, 39, 45, 46, 65, 68, 70, 78, 80, 81, 82, 88, 91, 97, 103, 106, 110], "believ": 74, "belong": [18, 101], "below": [5, 6, 25, 39, 45, 59, 63, 71, 72, 78, 89, 90, 92, 97, 103], "bench_decod": 71, "bench_encod": 71, "benchmark": [75, 77, 91, 92, 95], "benchmark_v2": 71, "benefici": [71, 82], "berkelei": [22, 25], "best": [0, 3, 63], "beta": [51, 108], "better": [18, 22, 25, 26, 28, 39, 46, 53, 55], "between": [1, 6, 17, 18, 19, 22, 25, 30, 36, 39, 45, 46, 47, 55, 56, 57, 71, 78, 91, 102, 105, 107, 113], "beyond": [12, 25, 39, 46, 78, 100], "bi": [25, 39, 45], "bi_end": 3, "bi_start": 3, "bi_val": 3, "bia": 25, "big": [25, 36, 39], "biggest": 75, "bigint": [25, 36, 39, 45, 46, 47, 54, 71, 97, 102, 107], "bigint_from_uint_arrai": [3, 25, 39, 46, 47], "bigint_to_uint_arrai": [25, 39, 46, 47], "bin": [25, 39, 45, 46, 59, 63, 87, 89, 90, 93, 105], "binari": [20, 25, 39, 47, 89, 90, 100], "bind": 87, "binomi": [51, 108], "binop": [18, 22, 25, 28, 39, 46, 53, 55], "bit": [0, 7, 18, 20, 25, 28, 36, 39, 45, 46, 47, 53, 55, 71, 75, 97, 102, 103, 107], "bit_count": [25, 36, 39], "bittyp": [25, 36, 39], "bitvector": [20, 25], "bitwis": [8, 23, 25, 39, 104, 107], "bitwise_and": 8, "bitwise_invert": 8, "bitwise_left_shift": 8, "bitwise_or": 8, "bitwise_right_shift": 8, "bitwise_xor": 8, "black": [0, 25, 39, 45, 92, 105], "block": [0, 18, 21, 25, 39, 49, 55, 70, 78, 102], "blosc": [25, 28], "blue": [25, 26], "bmi1": 71, "bmi2": 71, "bob": [22, 25, 103], "bodi": 0, "bool": [3, 6, 7, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 36, 39, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 65, 68, 71, 80, 95, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113], "bool_": [18, 25, 36, 39, 45, 46, 47, 51, 55, 56, 100, 102, 106, 107], "bool_onli": [22, 25], "bool_scalar": [18, 25, 26, 36, 39, 44, 46, 55, 65], "booldtyp": [25, 36, 39], "boolean": [3, 7, 8, 17, 18, 22, 23, 25, 32, 36, 39, 45, 46, 49, 53, 55, 65, 78, 80, 101, 103, 104, 105, 106, 107, 109, 111, 113], "boost": 87, "borrow": 70, "both": [3, 12, 19, 22, 23, 25, 26, 28, 30, 36, 39, 45, 46, 49, 51, 56, 68, 75, 78, 80, 81, 85, 87, 97, 101, 111, 113], "bottleneck": 73, "bottom": [25, 39, 46, 74], "bound": [25, 39, 46, 47, 51, 53, 56, 102], "boundari": [25, 39, 51, 56, 108], "box": [51, 74, 108], "branch": [0, 71, 74, 87], "brand_raw": 71, "brew": 90, "bring": 74, "broad": 0, "broadcast": [12, 22, 23, 25, 39, 44, 45, 46, 57, 96, 100, 104], "broadcast_arrai": 12, "broadcast_dim": [25, 39, 57], "broadcast_to": 12, "broadcast_to_shap": [25, 39, 46], "brotli": [18, 22, 25, 26, 28, 39, 46, 53, 55, 71, 82], "brown": 78, "browser": 87, "buffer": [1, 6, 22, 23, 25, 36, 39, 63, 65], "bufferobject": [25, 36, 39], "bug": [74, 77], "build": [1, 23, 25, 36, 39, 70, 71, 74, 77, 85, 88, 89, 93, 104, 112], "build_from_compon": [23, 25, 39, 96, 104], "built": [0, 18, 25, 36, 39, 46, 55, 72, 74, 75, 76, 85, 87, 89, 90, 91, 97, 101, 107, 113], "builtin": [25, 36, 39, 46], "bump": [72, 89, 90], "bundl": [89, 90], "button": 74, "bydayofweek": 104, "byte": [18, 22, 25, 26, 28, 30, 36, 39, 46, 47, 53, 55, 57, 63, 65, 80, 85, 97, 101, 103, 107, 113], "bytearrai": [25, 36, 39, 63], "bytedtyp": [25, 36, 39], "byteord": [25, 36, 39], "bytes_attrib": [25, 39, 55], "bytes_or_buff": [22, 23, 25, 36, 39, 63, 65], "bytes_s": [25, 39, 55], "bytesdtyp": [25, 36, 39], "byteswap": [25, 36, 39], "c": [18, 22, 25, 26, 36, 39, 44, 47, 49, 53, 55, 57, 59, 65, 71, 73, 75, 89, 95, 103, 107, 111], "c1": [25, 39, 45, 100], "c2": [18, 25, 39, 45, 100], "c_cpy": 18, "c_string": 80, "cach": [2, 18, 21, 25, 39, 55], "cached_regex_pattern": [25, 39, 55], "cachedaccessor": [2, 25], "calc_string_offset": [25, 28, 97], "calcul": [17, 22, 23, 25, 28, 39, 46, 49, 63, 71, 80, 97, 100, 104, 111], "calculu": [32, 113], "call": [4, 5, 9, 17, 18, 19, 20, 21, 22, 23, 25, 28, 39, 44, 46, 47, 51, 53, 55, 63, 65, 68, 70, 78, 82, 85, 87, 90, 91, 97, 100, 102, 103, 104, 107, 108, 112], "callabl": [4, 5, 20, 22, 25, 103], "callback": [20, 25], "caller": [22, 25, 65, 103], "came": [25, 39, 53], "can": [1, 3, 4, 5, 7, 9, 17, 18, 20, 21, 22, 23, 25, 26, 28, 36, 39, 45, 46, 47, 49, 51, 53, 54, 55, 56, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 93, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113], "can_cast": [7, 25, 36, 39], "cancel": [25, 39, 45], "cannot": [3, 12, 18, 20, 22, 23, 25, 26, 28, 36, 39, 45, 46, 47, 53, 55, 56, 65, 68, 82, 93, 97, 101, 104, 107], "canon": [25, 36, 39], "capac": [39, 45, 107], "capit": [25, 39, 55], "capitilz": [25, 39, 55], "captur": [1, 32, 113], "care": 71, "carol": [22, 25, 103], "carri": [25, 39, 56], "case": [17, 18, 19, 23, 25, 26, 28, 36, 39, 45, 46, 51, 55, 56, 63, 65, 71, 73, 78, 79, 80, 82, 87, 89, 91, 93, 100, 105, 108, 110], "cask": 90, "caskroom": [87, 90], "cast": [3, 5, 7, 17, 20, 25, 36, 39, 45, 46, 47, 48, 55, 70, 96, 97, 102, 113], "castabl": [25, 62], "castarrai": 70, "castmsg": 70, "cat": [18, 25, 28, 93], "catch": 0, "categor": [22, 23, 25, 26, 28, 39, 44, 45, 49, 54, 57, 65, 68, 69, 96, 99, 100, 102, 103, 104, 105, 107, 110, 111], "categori": [0, 18, 25, 39, 54, 68, 74, 80, 96, 99, 101], "categorical_arrai": 18, "categorical_test": 0, "categoricaltest": 0, "cattwo": 18, "caus": [18, 22, 25, 26, 28, 39, 46, 53, 55, 85, 87], "caution": [18, 25, 39, 46, 47, 55, 97, 101, 107], "ccflag": 1, "cd": [72, 85, 87, 88, 89, 90, 92], "cdf": [51, 63, 108], "cdot": [51, 108], "cdoubl": [25, 36, 39], "ceil": [8, 25, 39, 45], "cell": [22, 25], "cento": 89, "central": [25, 36, 39, 63], "certain": [25, 39, 46, 72, 91, 100], "cfg": [1, 25, 28, 75, 76, 91], "cfloat": [25, 36, 39], "chang": [1, 20, 22, 25, 26, 28, 36, 39, 46, 71, 74, 76, 85, 88, 89, 90, 92, 97, 100, 103], "channel": [19, 112], "chapel": [19, 21, 39, 45, 70, 73, 75, 80, 84, 85, 91, 92, 93, 94, 107, 112, 113], "chapel_vers": 85, "char": [25, 36, 39, 55, 69], "charact": [18, 19, 20, 24, 25, 36, 39, 47, 55, 65, 91], "check": [0, 1, 3, 17, 18, 22, 23, 25, 26, 28, 36, 39, 45, 46, 53, 55, 57, 63, 65, 68, 70, 74, 75, 76, 88, 95, 101, 111, 112], "check_categor": [25, 68], "check_category_ord": [25, 68], "check_column_typ": [25, 68], "check_dtyp": [25, 68], "check_exact": [25, 68], "check_frame_typ": [25, 68], "check_index": [25, 68], "check_index_typ": [25, 68], "check_lik": [25, 68], "check_nam": [25, 68], "check_ord": [25, 68], "check_sam": [25, 68], "check_series_typ": [25, 68], "checker": [25, 36, 39], "checkout": 76, "checkpoint": [25, 28], "chess": [51, 108], "chi": [25, 61, 63], "chi2": 63, "chipset": 90, "chisquar": [25, 61], "choic": [25, 39, 47, 51, 87, 96], "choos": [25, 36, 39, 45, 74, 90, 93, 100, 112], "chosen": [3, 25, 39, 45, 46, 100, 107, 109], "chpl": [1, 25, 28, 70, 75, 87, 88, 89, 90, 91], "chpl_comm": [72, 89, 90], "chpl_comm_remote_prefetch": 21, "chpl_debug_flag": 1, "chpl_develop": [75, 90], "chpl_flag": [1, 73], "chpl_gasnet_cfg_opt": 72, "chpl_gmp": [89, 90], "chpl_home": [72, 87, 89, 90], "chpl_llvm": [89, 90], "chpl_re2": [89, 90], "chpl_rt_oversubscrib": 72, "chpl_target_compil": 73, "chpl_target_cpu": 90, "chpl_test_timeout": 72, "chplconfig": 89, "chpldoc": [87, 89], "chunk": [5, 9, 18, 25, 26, 28, 39, 46, 53, 55], "chunk_info": [5, 9], "chunk_shap": [25, 28], "ci": [0, 88], "circl": [17, 25, 39, 45], "cl": [2, 25, 101], "clang": [73, 89], "class": [0, 47, 68, 70, 71, 96, 97, 98, 101, 102, 103, 104, 108, 109, 110, 113], "classmethod": [18, 20, 25, 26, 39, 53, 101], "claus": [25, 39, 45, 100], "clean": 87, "clear": [25, 36, 39, 46], "clear_histori": 24, "clflush": 71, "clflushopt": 71, "click": [74, 87, 88, 94], "client": [5, 9, 18, 22, 25, 36, 39, 46, 47, 55, 56, 68, 69, 81, 87, 89, 90, 91, 92, 93, 96, 101, 103, 107, 109, 113], "client_dtyp": [25, 28, 69], "clientgeneratedlog": [25, 31], "clip": [17, 25, 36, 39, 45], "clobber": 87, "clone": 94, "clongdoubledtyp": [25, 36, 39], "close": [0, 3, 17, 25, 39, 47, 56, 70, 78, 102], "clz": [25, 39, 46], "cm_version": 89, "cmake": [89, 92], "cmd": [70, 91], "cmd_filter": 19, "cmov": 71, "co": [8, 17, 23, 25, 39, 45, 96, 100, 104], "coargsort": [22, 25, 39, 54, 96, 99, 101, 103, 113], "code": [1, 18, 25, 26, 28, 36, 39, 54, 61, 68, 74, 75, 78, 80, 88, 91, 96, 99, 101], "codepoint": [25, 36, 39], "coeffici": [25, 39, 46], "col": [25, 39, 45, 59], "col1": [22, 25, 103], "col2": [22, 25, 103], "col2_i": [22, 25], "col2_x": [22, 25], "col3": [22, 25, 103], "col_a": [22, 25], "col_b": [22, 25], "col_c": [22, 25], "col_delim": [22, 25, 26, 28, 39, 46, 55], "col_nam": [25, 28], "cola": 79, "colb": 79, "colc": 79, "collaps": [25, 39, 46, 55], "collect": [18, 22, 23, 25, 26, 28, 36, 39, 46, 53, 55, 60, 63, 89, 104], "collis": [18, 25, 39, 45, 55], "colnam": [22, 25], "colors2": [25, 26], "column": [3, 6, 18, 21, 22, 23, 25, 26, 28, 39, 46, 53, 54, 55, 59, 65, 68, 78, 79, 82, 83, 97, 99, 104, 109, 110], "column_data": 78, "column_delim": [25, 28, 97], "column_nam": 78, "columnar": 97, "com": [0, 25, 61, 89, 90], "combin": [17, 22, 25, 39, 55, 56, 57, 70, 76], "come": [23, 25, 39, 45, 76, 97, 102, 111], "comm_diagnost": [25, 69], "comma": [4, 25, 71, 79, 87], "command": [19, 24, 25, 39, 46, 70, 71, 72, 74, 76, 85, 87, 88, 90, 91, 92, 93, 112], "command_filt": [19, 24], "commandlin": 71, "commandmap": [19, 70, 91], "comment": [0, 75, 91], "commit": [0, 74], "commit_info": 71, "common": [0, 3, 12, 23, 25, 39, 47, 49, 93, 97, 104, 111, 113], "common_typ": [25, 39, 48], "commonli": 78, "commun": [1, 21, 25, 39, 54, 74, 90, 99, 102], "compar": [18, 25, 26, 36, 39, 45, 46, 55, 63, 68, 74, 95, 97], "compare_kei": [25, 68], "comparison": [71, 79, 101, 107, 109, 113], "compat": [8, 18, 22, 25, 36, 39, 46, 53, 56, 57, 103, 104], "compatibleshap": [25, 39, 46], "compet": 1, "compil": [19, 25, 39, 55, 73, 76, 77, 87, 89, 90, 91, 93], "compiler_flag": [25, 36, 39], "complementari": [25, 39, 46], "complet": [18, 19, 21, 22, 25, 39, 46, 53, 55, 63, 70, 72, 74, 87, 112, 113], "complex": [3, 8, 25, 36, 39, 85], "complex128": [25, 36, 39], "complex128dtyp": [25, 36, 39], "complex64": [25, 36, 39], "complex64dtyp": [25, 36, 39], "complex_": [25, 36, 39], "complexflo": [25, 36, 39], "compliant": [5, 6], "compon": [3, 18, 20, 22, 23, 25, 26, 27, 39, 46, 53, 55, 56, 57, 65, 71, 80, 82, 104], "compos": [25, 36, 39, 47, 55, 85, 97], "composit": [17, 25, 39, 55], "composite_trapezoidal_rule_illustr": 17, "compress": [18, 22, 25, 26, 28, 36, 39, 46, 53, 55, 71, 106], "compris": 113, "comput": [5, 7, 8, 9, 16, 17, 18, 19, 22, 23, 25, 30, 36, 39, 45, 46, 53, 55, 56, 61, 62, 70, 78, 97, 100, 101, 103, 104, 105, 107, 111, 113], "computation": 78, "compute_join_s": 30, "concat": [12, 22, 25, 26, 39, 53, 65, 103], "concaten": [12, 18, 22, 25, 39, 48, 49, 53, 55, 57, 65, 70, 96, 109, 110, 113], "concept": 101, "concis": 74, "concret": [25, 36, 39], "concurr": [0, 97], "cond": [25, 39, 45, 100], "conda": [85, 89, 90, 92], "conda_prefix": [85, 87], "condens": [25, 39, 53], "condit": [3, 13, 22, 25, 39, 45, 46, 63, 100], "conf": 93, "confid": 63, "config": [19, 70, 91], "configur": [0, 1, 25, 28, 39, 70, 71, 78, 90, 93, 98, 103, 110], "confirm": [0, 74], "conflict": 0, "conform": [25, 39, 45, 70], "conj": [8, 25, 36, 39], "conjug": [8, 25, 36, 39], "conjunct": [18, 97, 101, 113], "connect": [18, 19, 22, 25, 26, 39, 44, 47, 55, 57, 61, 62, 64, 65, 70, 75, 93, 96, 97, 103], "connect_url": [19, 85, 112], "connectionerror": [19, 112], "consecut": [17, 25, 39, 47, 65, 102], "consensu": [0, 74], "consequ": 89, "conserv": [20, 25], "consid": [18, 22, 25, 39, 45, 49, 65, 74, 87, 111, 113], "consider": [23, 25, 111, 113], "consist": [0, 17, 22, 25, 39, 45, 47, 78, 89, 90, 100, 102, 103], "consol": [25, 39, 88], "const": 70, "constant": [17, 22, 23, 25, 39, 46, 96, 104], "constant_tsc": 71, "constant_valu": 17, "construct": [5, 6, 9, 18, 25, 39, 44, 47, 53, 55, 70, 78, 96, 104, 106], "constructor": [18, 25, 36, 39, 51, 53, 78, 101, 108], "consum": [25, 26, 65], "conta": [25, 39, 55], "contain": [3, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 32, 36, 39, 45, 46, 47, 49, 51, 53, 54, 55, 56, 59, 65, 68, 69, 70, 71, 75, 76, 78, 79, 80, 85, 87, 91, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113], "content": [1, 79, 93, 97], "contigu": [18, 25, 30, 39, 55], "continu": [0, 63, 74, 88], "contribut": [22, 25, 65], "contributor": [0, 25, 61], "control": [1, 20, 25, 39, 45, 48, 70, 107], "conveni": [25, 39, 89, 90, 97], "convent": 18, "convers": [0, 18, 97, 101, 107, 113], "convert": [5, 6, 9, 18, 20, 22, 25, 26, 36, 39, 45, 46, 47, 53, 55, 56, 57, 63, 65, 68, 79, 97, 101, 103, 107, 110, 111, 113], "convert_byt": 57, "convert_categor": [22, 25, 28], "convert_if_categor": [25, 57], "convert_int": [22, 25], "cool": 0, "coordin": [6, 25, 39, 45], "copi": [5, 6, 7, 9, 12, 15, 22, 23, 25, 26, 28, 36, 39, 44, 45, 46, 48, 51, 53, 54, 55, 68, 108], "core": [22, 24, 25, 71, 74, 103], "corr": [22, 25, 39, 46], "correct": [3, 16, 22, 25, 75, 89, 93, 95, 103], "correctli": [22, 25, 93, 103], "correl": [22, 25, 39, 46], "correspond": [3, 5, 9, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 30, 32, 36, 39, 45, 46, 47, 53, 54, 55, 57, 58, 61, 64, 65, 80, 82, 97, 100, 101, 103, 104, 105, 106, 110, 113], "cosh": [8, 25, 39, 45], "cosin": [8, 25, 39, 45, 100], "cosort": 3, "cosorted": 3, "cost": [18, 101], "could": [5, 9, 25, 39, 46, 53, 55, 59, 70, 75, 91, 113], "count": [14, 21, 22, 23, 25, 33, 36, 39, 45, 46, 53, 55, 65, 71, 78, 96, 100, 104], "count_nonzero": [25, 39, 45], "counter": 21, "counter_nam": 71, "counterpart": 70, "coupl": 75, "cours": [25, 39, 46], "cov": [25, 39, 46], "covari": [25, 39, 46], "coverag": [25, 28], "cp_name": [25, 28], "cpp": 87, "cpu": 71, "cpuid": 71, "cpuinfo_vers": 71, "cpuinfo_version_str": 71, "cpython": 71, "crazi": 1, "creat": [0, 6, 12, 18, 20, 21, 22, 23, 25, 26, 28, 29, 33, 36, 39, 45, 46, 47, 53, 55, 56, 59, 63, 65, 69, 70, 71, 74, 76, 80, 82, 85, 87, 89, 90, 91, 92, 93, 96, 97, 101, 103, 104, 105, 107, 108], "create_pdarrai": [25, 39, 70], "creation": [5, 9, 18, 74, 96], "creation_funct": [9, 69], "cressi": [25, 61], "critic": [25, 31], "crucial": 75, "cryptograph": [25, 39, 45], "csingl": [25, 36, 39], "csv": [22, 25, 26, 28, 39, 46, 55, 83, 97], "csv_output": [22, 25], "ctrl": 75, "ctypeslib": [39, 69], "ctz": [25, 39, 46], "cuda": [25, 39, 46], "cumprod": [25, 36, 39, 45, 96, 100], "cumsum": [25, 36, 39, 45, 96, 100], "cumul": [16, 25, 39, 45, 59, 63, 95, 100], "cumulative_sum": 16, "curl": 89, "current": [0, 12, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 36, 39, 45, 46, 47, 48, 51, 54, 55, 64, 73, 74, 75, 79, 80, 81, 82, 88, 89, 90, 94, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113], "current_arkouda_vers": 80, "curv": 17, "custom": [2, 25, 31, 70, 79, 87, 105], "customiz": 97, "cut": [73, 74, 76], "cwd": [25, 28, 39, 46], "cx16": 71, "cx8": 71, "cycl": [90, 92], "d": [0, 5, 9, 18, 22, 25, 26, 36, 39, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 65, 70, 78, 95, 108, 111], "dai": [22, 25, 39, 56, 74, 103, 104], "dangl": [4, 25], "darwin": [64, 90], "dash": 74, "dask": [5, 9], "data": [2, 5, 6, 7, 9, 12, 18, 20, 22, 23, 25, 26, 28, 36, 39, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 59, 63, 65, 68, 70, 71, 78, 81, 83, 84, 96, 98, 99, 101, 102, 104, 109, 110, 112, 113], "data2": 57, "data_type_funct": [9, 69], "databas": [22, 25], "datafram": [2, 21, 25, 26, 28, 59, 60, 65, 68, 69, 81, 97, 110], "dataframegroupbi": [22, 25, 103], "datalimit": [22, 25, 103], "datapar": 90, "dataset": [18, 20, 22, 23, 25, 26, 28, 39, 46, 53, 55, 79, 80, 82, 83, 104, 113], "dataset_nam": [25, 28, 97], "datasetnam": [25, 28, 97], "datatyp": [25, 36, 39, 45, 47, 62, 80], "date": [25, 39, 56, 74], "date_oper": [2, 25], "date_rang": [25, 39, 56], "datefram": [22, 25, 103], "dateoffset": [25, 39, 56], "datetim": [25, 28, 39, 47, 56, 71], "datetime64": [17, 25, 39, 47, 56], "datetime64dtyp": [25, 36, 39], "datetimeaccessor": [2, 25], "datetimeindex": [25, 39, 56], "dateutil": 92, "datsetnam": [25, 28], "day_of_week": [25, 39, 56], "day_of_year": [25, 39, 56], "dayofweek": [25, 39, 56, 104], "dayofyear": [25, 39, 56], "dd": 74, "ddof": [23, 25, 39, 46, 56, 61, 100, 104, 105], "de": 71, "deactiv": 87, "deal": [20, 25], "debandi99": 0, "debug": [25, 31, 72, 76], "decid": 0, "decim": [25, 39, 55], "decod": [22, 23, 25, 36, 39, 55, 63, 65], "decompos": 12, "decreas": [17, 25, 39, 46, 47, 75, 100, 102, 105], "dedup": [22, 25, 103], "dedupl": 96, "deep": [25, 39, 53, 103], "def": [4, 25, 70, 79, 91], "defalt": [25, 39, 46, 105], "default": [1, 3, 6, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 61, 63, 64, 65, 68, 71, 73, 79, 80, 85, 89, 90, 91, 93, 95, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113], "default_log_format": [25, 39], "default_rng": [22, 25, 51, 108], "defaultt": [25, 31], "defin": [3, 5, 18, 20, 22, 23, 24, 25, 26, 28, 31, 36, 39, 45, 46, 47, 53, 55, 56, 63, 65, 70, 74, 101, 102, 103, 104, 105, 107], "definit": [17, 25, 26], "deg2rad": [25, 39, 45], "degener": [12, 25, 39, 44], "degrad": [25, 39, 46, 100], "degre": [16, 23, 25, 39, 45, 46, 61, 63, 100, 104], "degred": [25, 39, 46, 100], "deleg": [25, 39, 45, 47, 51, 102, 105], "delet": [18, 19, 20, 22, 23, 25, 26, 28, 29, 39, 46, 48, 53, 55, 56, 65, 71, 76, 85, 104], "delete_directori": 29, "delimit": [22, 25, 26, 28, 29, 39, 46, 55, 65, 71, 74, 79, 97, 113], "delimited_file_to_dict": 29, "delta": [23, 25, 30, 39, 46, 61, 100, 104], "demo": 78, "demonstr": [0, 70], "denom": [25, 39, 45], "denomin": [25, 36, 39, 45, 46], "denot": [22, 25, 26, 28, 39, 46, 55, 56, 63], "dens": [3, 18, 23, 25, 39, 104], "densiti": [51, 63, 108], "dep": [1, 87, 89, 90], "depend": [13, 22, 25, 28, 39, 46, 80, 89, 90, 93, 94, 100, 109], "deprec": [18, 22, 23, 25, 26, 28, 39, 46, 53, 55, 56, 65, 74, 80, 97, 104], "dequ": [25, 39, 47, 97], "deriv": [25, 28, 29, 31, 36, 39, 45, 51, 55, 107, 108], "descend": [15, 22, 25, 39, 47, 65, 102, 103, 110], "describ": [51, 70, 74, 108], "descript": [71, 74, 78, 88, 96], "descriptor": [2, 25, 36, 39, 55], "design": [0, 25, 36, 39, 51, 74, 92, 97], "desir": [3, 17, 19, 20, 25, 39, 44, 45, 46, 47, 51, 64, 71, 72, 85, 88, 91, 100, 102, 107, 108, 112, 113], "destin": 12, "detail": [0, 12, 25, 27, 36, 39, 45, 46, 63, 71, 74, 87, 88, 89, 90, 92, 105, 112, 113], "detect": [22, 25, 28, 65, 80, 97], "determin": [7, 8, 12, 18, 22, 23, 25, 26, 28, 36, 39, 45, 46, 48, 53, 55, 57, 74, 80, 91, 97, 101, 103, 104], "determinist": [18, 25, 39, 49, 65, 102], "dev": [0, 5, 89, 90, 92], "devel": 89, "develop": [1, 18, 74, 75, 76, 88, 89, 90, 91, 94, 97], "deviat": [16, 23, 25, 39, 46, 47, 51, 56, 63, 100, 104, 105, 108], "devic": [5, 6, 9], "devicend": [25, 39, 46], "devicendarrai": [25, 39, 46], "devtoolset": 89, "df": [2, 22, 25, 63, 78, 103], "df1": [22, 25, 68], "df2": [22, 25, 68], "df_deep": 103, "df_shallow": 103, "diag": [25, 39, 45], "diagnost": 21, "diagon": [6, 25, 36, 39, 45], "dic": [25, 68], "dict": [5, 18, 19, 22, 23, 25, 26, 27, 28, 29, 36, 39, 51, 57, 60, 65, 68, 103, 104, 108], "dict_to_delimited_fil": 29, "dictionari": [18, 19, 22, 23, 25, 28, 29, 36, 39, 51, 55, 57, 68, 91, 97, 103, 104, 108], "did": [0, 19, 21], "diff": [17, 22, 25, 39, 45, 65, 105], "diffaggreg": [22, 25], "differ": [3, 5, 8, 17, 18, 19, 20, 22, 23, 25, 26, 28, 30, 36, 39, 44, 45, 46, 47, 49, 53, 55, 56, 57, 64, 65, 68, 71, 76, 78, 79, 80, 82, 89, 90, 96, 97, 102, 103, 104, 105, 111, 112], "differenc": [22, 25], "differenti": 63, "difficult": 91, "digit": [25, 39, 54, 55, 99], "dim": [25, 39, 45], "dimens": [3, 5, 9, 12, 13, 16, 17, 18, 22, 25, 26, 28, 36, 39, 44, 45, 46, 54, 55, 56, 58, 78, 100, 101, 105, 107, 109], "dimension": [3, 5, 9, 17, 22, 25, 28, 39, 44, 45, 49, 65, 107, 110, 111], "dir": 29, "direct": [3, 74, 80, 87], "directli": [5, 9, 17, 18, 22, 25, 39, 46, 54, 55, 65, 78, 87, 99, 101, 103, 107, 113], "directori": [18, 22, 23, 25, 26, 28, 29, 39, 46, 53, 55, 64, 71, 72, 75, 76, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 104], "dirti": 71, "disabl": [25, 31, 72], "disable_gc": 71, "disableverbos": [25, 31], "disallow": [22, 23, 25, 39, 104], "discard": [3, 18, 101], "discard_empti": [25, 39, 53], "disconnect": [19, 25, 39, 46], "discourag": [101, 103, 107, 109, 113], "discov": 91, "discret": [17, 51, 108], "discuss": 0, "disk": [22, 25, 26, 28, 39, 46, 55, 113], "dispatch": [25, 68], "displai": [1, 20, 21, 22, 25, 26, 57, 59, 63, 87, 93, 103], "dist": 87, "distanc": 17, "distinct": [18, 22, 25, 101], "distribut": [5, 9, 18, 20, 22, 23, 25, 26, 28, 39, 46, 47, 51, 53, 55, 59, 63, 85, 89, 90, 97, 100, 101, 102, 104, 107, 108, 111], "distro": 89, "div": [25, 39, 46], "diverg": [25, 61], "divid": [8, 25, 39, 46], "dividend": [25, 39, 46], "divis": [8, 25, 39, 46], "divisor": [23, 25, 39, 46, 100, 104], "divmod": [25, 39, 46], "dlpack": 6, "do": [1, 3, 17, 18, 19, 22, 23, 25, 26, 28, 39, 45, 46, 51, 53, 55, 56, 68, 71, 75, 76, 87, 89, 91, 92, 94, 100, 103, 104, 105, 108], "doc": [0, 17, 22, 25, 61, 65, 70, 87, 89], "docstr": [5, 8, 9, 70], "document": [0, 1, 63, 69, 70, 71, 75, 76, 78, 83, 90, 91], "doe": [18, 19, 22, 23, 25, 26, 28, 29, 36, 39, 45, 46, 47, 53, 55, 59, 63, 65, 68, 75, 78, 80, 82, 97, 101, 102, 103, 104, 107, 110, 112], "doesn": [0, 22, 25, 28, 39, 45, 70, 74, 87], "dog": [22, 25, 65], "domain": 3, "don": [0, 3, 5, 9, 22, 25, 28, 36, 39, 49, 55, 75, 76, 93], "done": [0, 22, 25, 39, 46, 56, 76, 87, 91, 100, 103, 105], "dot": [25, 39, 45, 46, 74], "doubl": [25, 36, 39, 70, 88], "doubt": [0, 74], "down": [19, 73, 74, 76, 85, 87, 88, 91], "download": [85, 88, 89, 90, 94], "draft": 74, "draw": [25, 39, 47, 51, 108], "drawn": [25, 39, 47, 51, 102, 108], "drop": [22, 23, 25, 36, 39, 46, 74, 88, 100, 104], "drop_dupl": [22, 25, 103], "dropna": [22, 23, 25, 39, 96, 103, 104], "dt": [17, 25, 30, 36, 39, 45, 65, 107], "dtype": [3, 4, 5, 6, 7, 9, 16, 18, 19, 22, 23, 25, 26, 28, 30, 33, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 65, 68, 69, 70, 71, 78, 95, 96, 97, 100, 102, 103, 104, 105, 106, 107, 108, 111], "dtypeobject": [25, 36, 39], "due": [18, 22, 25, 28, 79, 82, 87, 97], "dump": [25, 36, 39], "duplcat": [22, 25, 103], "duplic": [0, 3, 22, 25, 39, 49, 103], "durat": [25, 39, 56], "dure": [0, 1, 25, 28, 57, 76, 78, 80, 81, 91, 92], "dx": 17, "dynam": [25, 39], "e": [0, 1, 2, 3, 4, 8, 18, 20, 21, 22, 23, 25, 28, 36, 39, 45, 46, 47, 49, 51, 53, 54, 55, 56, 65, 74, 75, 76, 85, 87, 89, 90, 92, 97, 100, 101, 102, 104, 105, 108, 109, 111, 112, 113], "each": [3, 4, 12, 14, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 44, 45, 46, 49, 51, 53, 55, 56, 57, 65, 70, 71, 78, 80, 87, 91, 97, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 113], "eager": 92, "earli": [0, 21], "earlier": [57, 78], "easi": [0, 25, 31, 71, 74, 78, 87], "easiest": 75, "easili": 78, "echo": [85, 87], "ecwo": [25, 39, 47], "edg": [17, 25, 39, 45, 59, 105], "edgecolor": [25, 39, 45, 105], "edit": 88, "effect": [22, 25, 39, 56, 76, 111], "effici": [18, 22, 25, 26, 39, 46, 55, 109, 113], "either": [0, 4, 13, 17, 18, 22, 23, 25, 27, 28, 36, 39, 45, 46, 47, 49, 51, 53, 65, 70, 85, 91, 93, 97, 104, 108, 110, 111], "el7": 89, "el96": [25, 39, 47], "elect": [80, 81], "element": [4, 5, 6, 8, 9, 10, 12, 13, 16, 17, 18, 22, 23, 25, 29, 30, 32, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 58, 65, 68, 70, 78, 91, 96, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113], "elementwis": [25, 39, 46], "elementwise_funct": [9, 69], "elimin": [18, 82], "elk": [22, 25, 65], "ellips": 74, "ellipsi": [5, 6, 7, 9, 12, 13, 16, 17, 25, 39, 44, 45, 46, 47, 51, 57], "elo": [51, 108], "els": [0, 22, 25, 36, 39, 46, 65, 70, 74, 105], "elsewher": [6, 25, 39, 45, 46, 51, 100, 108], "emath": [41, 69], "emploi": [25, 39, 45], "empti": [3, 6, 20, 22, 23, 25, 28, 36, 39, 45, 46, 47, 49, 53, 55, 65, 87, 100, 102, 103, 105, 110], "empty_lik": 6, "en": [17, 25, 61, 70], "enabl": [3, 19, 25, 31, 39, 46, 64, 75, 87, 89, 91, 97, 112], "enableverbos": [25, 31], "encapsul": [25, 39, 47, 55, 64], "encod": [22, 23, 25, 36, 39, 55, 63, 65, 71, 113], "encoding_benchmark": 71, "encount": [0, 25, 28], "encourag": [88, 89, 90], "end": [3, 6, 17, 18, 22, 25, 30, 32, 39, 45, 46, 47, 53, 55, 56, 73, 96, 101, 102, 106, 113], "endian": [25, 36, 39], "endpoint": [6, 17, 51, 108], "endswith": [18, 25, 39, 55, 96, 101], "enforc": [25, 39, 45], "engin": [25, 39, 45], "enough": [25, 36, 39, 53, 55, 70, 72, 80, 89, 90], "enrich_inplac": 57, "ensur": [0, 3, 22, 25, 28, 39, 45, 49, 68, 74, 80, 87, 88, 90, 103, 107], "enter": [25, 65, 97, 110], "entir": [16, 22, 25, 39, 45, 46, 53, 55, 56, 71, 76, 100, 103, 105, 109], "entiti": [25, 39, 55], "entri": [3, 6, 18, 22, 25, 26, 39, 44, 45, 46, 49, 55, 65, 68, 70, 71, 103, 111], "entropi": 63, "enum": [25, 31, 36, 39, 45, 80], "enumer": [25, 31, 36, 39, 45], "env": [1, 25, 39, 75, 85, 87, 89, 90, 92], "env_nam": 92, "environ": [64, 71, 91, 92], "environmenterror": 64, "ep": 7, "epidemiologi": [51, 108], "eql_kwarg": [25, 68], "equal": [8, 12, 17, 18, 22, 23, 25, 26, 30, 36, 39, 45, 46, 47, 51, 55, 63, 68, 82, 102, 104, 105, 108, 109], "equal_level": [25, 26], "equal_nan": [25, 39, 45], "equiv": [25, 39, 48, 68], "equival": [3, 18, 22, 23, 25, 26, 28, 39, 45, 46, 47, 48, 49, 54, 55, 56, 57, 63, 68, 75, 78, 99, 100, 102, 111], "erm": 71, "err_msg": [25, 68], "error": [18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 31, 32, 36, 39, 45, 46, 47, 53, 55, 56, 63, 65, 80, 82, 93, 97, 100, 101, 103, 104, 105, 107, 112, 113], "errormod": [25, 39, 45, 107], "especi": [0, 18, 22, 25, 76, 87, 90, 101], "essenti": [22, 25, 39, 46, 53, 55, 103], "estim": [17, 22, 23, 25, 39, 46, 63, 100, 103, 104], "etc": [22, 25, 39, 45, 65, 74, 89, 93], "ethan": 0, "eval": [85, 87], "evalu": [3, 17, 22, 25, 39, 46, 100, 105], "even": [18, 22, 23, 25, 36, 39, 45, 46, 100, 103, 104, 112], "evenli": [6, 17, 25, 39, 45, 47, 102, 105], "event": [51, 108], "everi": [0, 1, 3, 22, 25, 71, 103, 113], "everyth": [22, 25, 65, 73, 74], "everywher": [25, 39, 45], "evict": 21, "evolv": 74, "exact": [25, 68, 90], "exactli": [23, 25, 36, 39, 56, 68], "exampl": [0, 3, 4, 5, 9, 17, 18, 19, 22, 23, 24, 25, 26, 28, 32, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 68, 71, 74, 80, 85, 90, 91, 93, 97, 99, 100, 102, 103, 104, 105, 107, 108, 111, 112, 113], "example_featur": 0, "exce": [18, 22, 25, 36, 39, 46, 47, 51, 55, 56, 57, 97, 101, 102, 103, 107, 113], "excel": 74, "except": [0, 12, 17, 44, 45, 69, 70, 78, 89, 113], "exchang": 113, "exclud": [3, 23, 25, 39, 49, 91, 104], "exclus": [1, 6, 25, 30, 39, 47, 49, 51, 78, 102, 106, 108, 111], "execut": [1, 19, 21, 24, 25, 28, 39, 46, 55, 70, 72, 73, 75, 76, 79, 87, 88, 89, 91, 101, 112], "exhaust": [78, 80], "exist": [18, 19, 21, 22, 23, 25, 26, 28, 29, 39, 46, 47, 53, 55, 65, 80, 82, 87, 88, 102, 103, 104, 112], "exist_ok": [22, 25], "exit": [85, 93], "exp": [8, 25, 39, 45, 47, 51, 63, 96, 100, 108], "expand": [12, 18, 22, 25, 26, 28, 39, 46, 53, 55, 57, 97], "expand_dim": 12, "expandus": 64, "expans": 106, "expect": [0, 4, 22, 23, 25, 26, 28, 39, 46, 51, 55, 61, 63, 71, 80, 89, 90, 97, 104, 107, 108], "expens": 18, "experi": [0, 97], "experiment": [4, 25, 39, 55], "explicit": [80, 107], "explicitli": [1, 22, 25, 39, 49, 91, 111], "explod": 89, "expm1": [8, 25, 39, 45], "expon": [25, 36, 39], "exponenti": [8, 25, 39, 45, 51, 96, 100], "export": [20, 25, 28, 39, 45, 72, 75, 87, 89, 90, 93, 105], "export_uint": [20, 25], "expos": [22, 23, 25, 36, 39, 51, 63, 65, 107, 108], "express": [3, 18, 25, 28, 39, 55, 71, 96, 97, 101, 103, 106, 107], "extens": [2, 18, 25, 26, 28, 39, 46, 53, 55, 87, 88, 97], "extent": 71, "extern": [89, 90], "external_tool": [89, 90], "extra": [22, 25, 65], "extra_info": 71, "extract": 104, "extrem": [51, 78, 80, 82, 108], "ey": [6, 25, 39, 45, 58], "f": [18, 22, 25, 36, 39, 45, 47, 51, 55, 63, 70, 85, 89, 90, 92, 97, 100, 108], "f16c": 71, "f_exp": [25, 61], "f_name": 78, "f_ob": [25, 61], "face": [25, 39, 53, 74, 107], "fact": 82, "factori": [25, 26, 39, 55], "fail": [0, 5, 9, 22, 25, 28, 39, 45, 74, 87, 97, 103, 107], "failur": [0, 25, 28, 87, 97], "fall": [0, 12, 57], "fals": [3, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 36, 39, 45, 46, 47, 49, 51, 53, 55, 56, 57, 63, 65, 68, 71, 78, 95, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 113], "famili": 71, "fast": [1, 18, 25, 36, 39, 55], "faster": [3, 18, 25, 39, 49, 75, 101, 111], "featur": [25, 36, 39, 72, 73, 74, 75, 77, 87, 91, 96, 97, 104], "feder": [51, 108], "feedback": 0, "feel": 0, "fetch": [74, 76], "few": [25, 39, 45, 78], "ffffp10": [25, 36, 39], "fft": [39, 69], "fide": [51, 108], "field": [20, 25, 36, 39, 47, 55, 74, 97], "fig": 63, "figur": [25, 59, 76], "file": [0, 1, 17, 18, 19, 22, 23, 25, 26, 28, 29, 39, 46, 53, 55, 64, 65, 70, 72, 75, 76, 81, 82, 85, 87, 88, 89, 90, 92, 93, 104, 113], "file_format": [18, 22, 25, 26, 28, 39, 46, 53, 55], "file_typ": [18, 20, 22, 23, 25, 26, 28, 39, 46, 53, 55, 104], "file_vers": 80, "filenam": [18, 22, 23, 25, 26, 28, 39, 46, 53, 55, 71, 97, 104], "filename_cod": [25, 28], "filenotfound": [25, 28], "filepath": 88, "filetyp": [25, 28, 97], "fill": [6, 22, 23, 25, 36, 39, 46, 47, 51, 65, 71, 95, 102, 104, 108], "fill_valu": [6, 25, 39, 47], "fill_values1": [25, 65], "fill_values2": [25, 65], "fill_values3": [25, 65], "fillna": [25, 65], "fillvalu": 3, "filname_cod": [25, 28], "filter": [0, 22, 24, 25, 39, 53, 97], "filter_by_rang": [22, 25], "filtered_df": [22, 25], "final": [70, 71, 74, 87], "find": [0, 3, 13, 18, 22, 23, 25, 33, 39, 46, 49, 54, 55, 57, 64, 65, 71, 74, 77, 85, 89, 100, 104, 105, 111], "find_loc": [25, 33, 39, 55], "find_match": [32, 96, 113], "findal": [25, 33, 39, 55], "fine": 70, "finfo": 7, "finfo_object": 7, "finit": [8, 17, 25, 36, 39, 45], "firewal": 93, "first": [0, 3, 5, 9, 12, 13, 14, 16, 17, 22, 23, 25, 28, 29, 36, 39, 45, 46, 47, 48, 54, 55, 57, 63, 65, 68, 72, 76, 77, 78, 79, 80, 85, 87, 89, 91, 96, 97, 100, 102, 103, 104, 105, 110], "fishery": [51, 108], "fit": [0, 25, 36, 39, 44, 63, 71, 74, 97], "five": [3, 25, 39, 49, 55, 102, 111], "fix": [0, 25, 39, 45, 51, 56, 63, 74, 93, 108, 113], "fixed_len": [25, 28, 97], "flag": [20, 25, 28, 36, 39, 59, 71, 76, 91, 97, 112], "flake8": [0, 92], "flat": [25, 36, 39, 44, 55, 113], "flatten": [12, 13, 25, 30, 36, 39, 44, 46, 48, 53, 55, 96, 109], "flexibl": 80, "flip": [12, 25, 39, 44], "float": [0, 3, 6, 7, 8, 16, 17, 19, 22, 23, 25, 28, 36, 39, 45, 46, 47, 51, 57, 63, 68, 97, 100, 102, 103, 104, 107, 108], "float16": [25, 36, 39], "float16dtyp": [25, 36, 39], "float32": [25, 36, 39], "float32dtyp": [25, 36, 39], "float64": [4, 6, 22, 23, 25, 26, 36, 39, 45, 46, 47, 49, 51, 54, 61, 62, 68, 70, 71, 79, 80, 95, 99, 100, 102, 103, 104, 105, 107, 111], "float64dtyp": [25, 36, 39], "float_": [25, 36, 39], "float_scalar": [25, 36, 39, 46, 47, 51], "floor": [8, 25, 39, 45, 46], "floor_divid": [8, 25, 39, 46], "floordivis": [25, 39, 46], "fluid": [18, 20, 22, 23, 25, 26, 39, 46, 53, 55, 56, 65, 104], "flush_l1d": 71, "fly": 21, "fma": 71, "fmod": [25, 39, 46], "fname": 78, "focus": 75, "folder": 87, "folk": 1, "follow": [0, 1, 3, 19, 25, 36, 39, 45, 46, 61, 70, 71, 72, 74, 85, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 104, 107, 109, 111, 112, 113], "foo": [0, 2, 25], "foo_test": 0, "foopar": 0, "forc": [25, 36, 39, 101, 103, 107, 113], "forget": [76, 93], "fork": [0, 87, 89, 90, 94], "form": [18, 25, 26, 36, 39, 45, 46, 53, 55, 63, 64, 74, 91], "format": [0, 5, 9, 17, 18, 19, 20, 22, 25, 26, 27, 28, 36, 39, 46, 53, 55, 64, 65, 70, 78, 80, 81, 82, 88, 91, 103, 112, 113], "format_oth": [25, 39, 46], "former": [25, 39, 46, 55, 113], "fortran": 107, "forward": [25, 39, 54, 93, 99, 109], "found": [1, 3, 5, 13, 22, 25, 26, 28, 36, 39, 46, 49, 54, 55, 65, 71, 78, 82, 89, 91, 93], "four": [3, 25, 39, 49, 55, 56, 63, 102, 111], "fpu": 71, "frac": [17, 22, 23, 25, 39, 51, 63, 104, 108], "fraction": [22, 23, 25, 39, 104], "frame": [22, 25, 103], "frameon": 63, "free": [25, 39, 46, 55], "freedom": [16, 23, 25, 39, 46, 61, 63, 100, 104], "freeman": [25, 61], "freez": 63, "freq": [25, 39, 56], "frequenc": [1, 25, 39, 56, 61], "frequent": 91, "friendli": [22, 25, 65], "from": [0, 3, 4, 5, 6, 9, 10, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 36, 39, 44, 45, 46, 47, 48, 51, 53, 55, 57, 59, 61, 62, 63, 65, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 85, 87, 88, 89, 91, 93, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113], "from_": [7, 25, 36, 39], "from_cod": [18, 96, 101], "from_dlpack": 6, "from_multi_arrai": [25, 39, 53], "from_panda": [22, 25], "from_part": [25, 39, 53, 55], "from_return_msg": [18, 20, 22, 23, 25, 26, 39, 53, 55, 65], "from_seri": [25, 39, 47], "fromencod": [25, 39, 55], "fromhex": [25, 36, 39], "fromkei": [25, 36, 39], "fromright": [25, 39, 55], "frontend": 87, "frozen": 63, "frozenset": [23, 25, 36, 39], "frustrat": 76, "fsgsbase": 71, "fsspec": [22, 25, 65], "full": [6, 18, 25, 32, 39, 45, 47, 55, 56, 59, 63, 73, 75, 85, 88, 90, 94, 101, 102, 113], "full_lik": [6, 25, 39, 47], "full_match_bool": 33, "full_match_ind": 33, "fullmatch": [25, 39, 55, 113], "fullnam": 71, "func": [4, 25, 63], "funcion": 91, "functioanl": 109, "function": [0, 1, 9, 18, 55, 63, 65, 71, 74, 75, 78, 79, 81, 82, 85, 91, 96, 97, 98, 101, 103, 104, 105, 107, 108, 109, 110, 111, 113], "furo": 92, "further": [89, 90, 94], "futur": [1, 20, 25, 28, 39, 55, 65, 97, 105], "fxsr": 71, "g": [2, 4, 18, 20, 22, 23, 25, 28, 36, 39, 45, 46, 53, 55, 56, 57, 65, 75, 76, 78, 97, 100, 101, 102, 104, 105, 109, 112, 113], "gain": [70, 74], "gamma": [51, 63], "gasnet": [76, 77, 89, 90], "gasnet_masterip": 72, "gasnet_quiet": 72, "gasnet_route_output": 72, "gasnet_spawnfn": 72, "gasnet_workerip": 72, "gasnetsetup": 72, "gather": [71, 96], "gaussian": [51, 108], "gawk": 89, "gb": [19, 22, 25, 26, 57, 65, 93], "gb_key_nam": [22, 25], "gc": [22, 25, 65], "gcc": [71, 89], "gen_rang": 30, "gener": [17, 18, 19, 22, 23, 24, 25, 30, 31, 36, 39, 45, 46, 47, 51, 56, 59, 61, 63, 64, 65, 69, 70, 71, 75, 76, 78, 79, 80, 82, 87, 89, 93, 95, 96, 97, 100, 102, 104, 108, 110], "generate_histori": 19, "generate_token": 64, "generate_username_token_json": 64, "generic_concat": [25, 57], "generic_mo": 63, "generic_msg": [70, 91], "gentyp": [25, 36, 39], "genuineintel": 71, "get": [5, 8, 9, 10, 19, 21, 22, 24, 25, 28, 36, 39, 45, 53, 65, 71, 74, 75, 76, 93, 97, 107], "get_arkouda_client_directori": 64, "get_array_rank": [25, 39, 47, 97, 102], "get_byt": [25, 39, 55], "get_byteord": [25, 36, 39], "get_callback": [25, 57], "get_column": [25, 28, 79, 83], "get_comm_diagnost": 21, "get_comm_diagnostics_amo": 21, "get_comm_diagnostics_cache_get_hit": 21, "get_comm_diagnostics_cache_get_miss": 21, "get_comm_diagnostics_cache_num_page_readahead": 21, "get_comm_diagnostics_cache_num_prefetch": 21, "get_comm_diagnostics_cache_prefetch_unus": 21, "get_comm_diagnostics_cache_prefetch_wait": 21, "get_comm_diagnostics_cache_put_hit": 21, "get_comm_diagnostics_cache_put_miss": 21, "get_comm_diagnostics_cache_readahead_unus": 21, "get_comm_diagnostics_cache_readahead_wait": 21, "get_comm_diagnostics_execute_on": 21, "get_comm_diagnostics_execute_on_fast": 21, "get_comm_diagnostics_execute_on_nb": 21, "get_comm_diagnostics_get": 21, "get_comm_diagnostics_get_nb": 21, "get_comm_diagnostics_put": 21, "get_comm_diagnostics_put_nb": 21, "get_comm_diagnostics_try_nb": 21, "get_comm_diagnostics_wait_nb": 21, "get_config": [0, 19], "get_dataset": [25, 28, 79, 83, 97], "get_directori": 29, "get_filetyp": [25, 28], "get_home_directori": 64, "get_jth": [25, 39, 53], "get_length": [25, 39, 55], "get_length_n": [25, 39, 53], "get_level_valu": [25, 26], "get_match": 33, "get_max_array_rank": 19, "get_mem_avail": 19, "get_mem_statu": 19, "get_mem_us": 19, "get_ngram": [25, 39, 53], "get_null_indic": [25, 28], "get_offset": [25, 39, 55], "get_prefix": [25, 39, 53, 55], "get_server_byteord": [25, 36, 39], "get_server_command": 19, "get_suffix": [25, 39, 53, 55], "get_usernam": 64, "getarkoudalogg": [25, 39], "getcwd": [22, 25], "getdefaultencod": [22, 23, 25, 36, 39, 63, 65], "getfield": [25, 36, 39], "getmandatoryreleas": [25, 36, 39], "getmodulenam": 91, "getoptionalreleas": [25, 36, 39], "getter": [25, 39, 55], "ghi": 79, "ghpage": 87, "ghz": 71, "gib": 71, "git": [0, 76, 89, 90], "github": [0, 25, 61, 74, 76, 87, 88, 89, 90, 94], "gitignor": 0, "gitk": 74, "give": [25, 39, 45, 46, 58, 65, 79, 87, 92, 112], "given": [3, 6, 13, 16, 17, 18, 22, 23, 25, 28, 36, 39, 44, 45, 46, 47, 49, 51, 54, 55, 56, 57, 63, 65, 71, 92, 97, 101, 102, 103, 104, 105, 108, 113], "glob": [25, 28, 97], "global": [5, 9], "gmp": 90, "gnu": [73, 93], "go": [23, 25, 39, 74, 76, 89, 93, 102], "goal": 5, "goe": [25, 39, 47], "good": [0, 74, 76], "googl": 113, "got": 76, "gottfri": [32, 113], "gpu": [25, 39, 46], "gram": [25, 39, 53], "granular": 21, "graph": [25, 59, 104], "graphic": 74, "greater": [8, 17, 25, 39, 47, 51, 102, 108], "greater_equ": 8, "greatli": [18, 25, 39, 49, 102], "green": [25, 26, 74], "grep": [87, 93], "grid": [22, 25, 59, 65], "group": [1, 7, 18, 22, 23, 25, 32, 39, 53, 54, 55, 65, 71, 78, 80, 88, 96, 99, 101, 103, 104, 110, 111, 113], "group_ani": [23, 25, 39, 104], "group_argmaxima": [23, 25, 39, 104], "group_argminima": [23, 25, 39, 104], "group_maxima": [23, 25, 39, 104], "group_mean": [23, 25, 39, 104], "group_median": [23, 25, 39, 104], "group_minima": [23, 25, 39, 104], "group_num": [32, 113], "group_nuniqu": [23, 25, 39, 104], "group_product": [23, 25, 39, 104], "group_std": [23, 25, 39, 104], "group_sum": [23, 25, 39, 104], "group_var": [23, 25, 39, 104], "groupabl": [23, 25, 39, 45, 49, 104, 111], "groupable_element_typ": [23, 25, 39, 65, 110], "groupbi": [18, 22, 23, 25, 28, 39, 53, 55, 57, 96, 101, 113], "groupby_reduction_typ": [23, 25], "groupbyclass": [22, 25, 39, 45, 49, 69, 103, 111], "grow": [25, 39, 46, 100], "guarante": [18, 25, 39, 54, 55, 65, 99, 108, 110, 113], "guid": [70, 85, 87, 89, 90], "guidelin": [74, 113], "gumbel": [51, 108], "gz": [85, 87, 89, 90], "gzip": [18, 22, 25, 26, 28, 39, 46, 53, 55, 71, 82], "h": [24, 25, 36, 39, 45, 56, 59, 95, 105, 112], "h5": [25, 28, 39, 46, 97], "h5l": [25, 28], "h5py": [92, 97], "ha": [0, 5, 9, 18, 20, 22, 23, 25, 26, 28, 36, 39, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 65, 70, 72, 74, 75, 79, 80, 91, 97, 100, 101, 102, 103, 104, 106, 107, 108, 111], "half": [3, 6, 25, 36, 39, 51, 108], "hand": [3, 74, 106], "handl": [18, 19, 21, 22, 25, 39, 45, 55, 70, 81, 97, 101, 103, 107], "handled_funct": 5, "handler": [21, 22, 23, 25, 36, 39, 63, 65], "happen": [17, 70, 74], "has_non_float_nul": [25, 28, 97], "has_repeat_label": [25, 65], "hash": [18, 25, 28, 39, 45, 53, 54, 55, 99], "hasnan": [25, 65], "have": [0, 1, 3, 5, 9, 12, 18, 21, 22, 23, 25, 26, 28, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 55, 56, 57, 59, 62, 65, 68, 70, 72, 73, 74, 75, 76, 78, 79, 80, 82, 87, 89, 90, 91, 92, 97, 100, 101, 102, 103, 104, 107, 108, 110], "hd15iqr": 71, "hdf5": [1, 18, 22, 23, 25, 26, 28, 39, 46, 53, 55, 79, 81, 82, 83, 87, 92, 97, 104, 113], "hdf5_output": [22, 25], "hdf_output": [22, 25], "head": [22, 23, 25, 39, 65, 74, 96, 104], "header": [22, 25, 26, 28, 39, 46, 55, 97], "healthcheck": 19, "heavi": [25, 39, 47], "hei": 74, "hello": [25, 39, 45, 55], "hello3": 90, "help": [0, 20, 25, 88, 91], "helper": [20, 25, 57], "henc": [25, 39, 45], "here": [1, 5, 21, 25, 39, 55, 57, 71, 72, 75, 76, 77, 78, 80, 82, 87, 89, 90, 91, 92, 93, 94, 112], "heroic": 73, "hex": [25, 36, 39], "hexadecim": [25, 36, 39], "hexidecim": 64, "hi": [25, 39, 45], "hierarch": 3, "high": [3, 20, 22, 25, 39, 45, 46, 47, 51, 78, 102, 108], "higher": [25, 39, 45], "highest": [22, 25, 39, 46, 47], "highli": 89, "highlight": [1, 74, 78], "hist": [25, 39, 45, 63], "hist_al": [25, 59], "hist_fil": 24, "histogram": [25, 39, 45, 59, 63, 96], "histogram2d": [25, 39, 45, 105], "histogramdd": [25, 39, 45], "histori": [0, 19, 25, 69, 74], "historyaccessor": 24, "historyretriev": 24, "histtyp": 63, "hit": 75, "hog": 76, "hold": [39, 45, 63, 107], "hole": [25, 65], "home": [64, 87, 91], "homebrew": [75, 87], "homepag": 87, "homogen": [22, 25, 103], "hong_kong": [25, 39, 56], "horizont": [25, 39, 53, 65, 109, 110], "host": [19, 22, 25, 64, 65, 87], "hostnam": [1, 18, 19, 22, 25, 28, 39, 46, 53, 55, 75, 85, 95, 112], "hour": [25, 39, 56], "hous": 93, "how": [0, 5, 9, 18, 20, 22, 25, 26, 28, 39, 45, 46, 53, 55, 70, 71, 74, 79, 92, 104, 107], "howev": [23, 25, 39, 45, 46, 80, 87, 92, 93, 100, 101, 104], "hpe": 88, "ht": 71, "html": [5, 12, 17, 22, 25, 39, 57, 61, 65, 70, 87], "htop": 93, "http": [0, 5, 12, 17, 22, 25, 39, 57, 61, 65, 70, 89, 90], "human": [18, 25, 27, 39, 46, 55], "hundr": 97, "hyperbol": [8, 25, 39, 45], "hyperlink": 74, "hypervisor": 71, "hypothet": [23, 25, 30, 39, 46, 100, 104], "hz_actual": 71, "hz_actual_friendli": 71, "hz_advertis": 71, "hz_advertised_friendli": 71, "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "i2": [25, 26], "i7": 71, "i_cpi": [25, 26], "iat": [25, 65], "ibpb": 71, "ibr": 71, "ibv": 72, "iconv": [1, 87, 92], "id": [19, 25, 28, 71, 93, 104], "id_": [25, 28], "idea": [0, 74, 76, 79, 97], "ideal": [0, 74], "ident": [22, 25, 36, 39, 45, 51, 57, 63, 68, 100, 107, 108], "identif": [25, 31], "identifi": [0, 3, 18, 25, 28, 39, 46, 88, 107], "idn2": [1, 87, 92], "idna": 71, "idx": [3, 22, 23, 25, 26, 39, 78, 104], "idx1": 57, "idx2": [23, 25, 39, 57, 104], "ieee": [103, 107], "iff": [3, 18, 25, 26, 39, 46, 55, 56, 65, 100, 105], "ignor": [12, 15, 22, 23, 25, 28, 36, 39, 45, 56, 68, 97, 103, 107], "ignore_index": [22, 25], "iinfo": 7, "iinfo_object": 7, "illustr": 17, "iloc": [25, 65, 68], "imag": [8, 17, 25, 36, 39], "imagin": 104, "imaginari": [8, 25, 36, 39], "imit": [25, 28], "immun": [18, 20, 22, 23, 25, 26, 39, 46, 53, 55, 56, 65, 104], "immut": [23, 25, 36, 39], "imnotok": 19, "imok": 19, "impact": [18, 23, 25, 26, 28, 39, 46, 53, 73, 74, 76, 97, 104], "implement": [0, 5, 6, 8, 11, 18, 19, 20, 22, 24, 25, 36, 39, 45, 46, 49, 53, 55, 63, 64, 65, 70, 79, 85, 100, 102, 112, 113], "implements_numpi": 5, "impli": [3, 25, 68, 106], "implicit": 107, "import": [4, 17, 18, 20, 22, 24, 25, 26, 28, 39, 44, 45, 55, 57, 58, 59, 61, 62, 63, 64, 65, 68, 70, 74, 80, 85, 87, 88, 91, 103, 105, 112], "import_data": [25, 28, 81, 97], "importerror": [25, 39, 46], "impos": [25, 39, 56], "improv": [18, 25, 39, 49, 74, 75, 91, 102], "in1d": [18, 25, 39, 49, 70, 78, 96, 101, 111, 113], "in1d_interv": 3, "inaccess": [18, 22, 25, 26, 28, 39, 46, 53, 55], "inadvert": [20, 25], "inappropri": 3, "includ": [0, 1, 3, 16, 22, 23, 25, 26, 27, 28, 39, 45, 46, 47, 55, 56, 65, 71, 74, 79, 80, 85, 87, 89, 91, 97, 100, 102, 103, 104, 107, 109], "include_initi": 16, "includedelimit": [25, 39, 55], "inclus": [3, 6, 22, 25, 39, 45, 46, 47, 51, 56, 100, 102, 106, 108], "incompat": [25, 39, 45, 46, 89], "incorpor": 107, "increas": [25, 39, 46, 53, 87, 93], "increment": [73, 74], "ind": 106, "independ": [25, 28, 51, 64, 97, 108], "index": [2, 3, 5, 6, 9, 13, 18, 20, 22, 23, 25, 28, 30, 32, 36, 39, 46, 47, 49, 53, 54, 55, 57, 65, 68, 69, 71, 78, 87, 95, 96, 97, 100, 101, 102, 104, 105, 109, 110, 113], "index_label": [25, 65], "index_s": [71, 95], "index_valu": [25, 68], "indexerror": [25, 65], "indexing_funct": [9, 69], "indexof1d": [25, 39, 49], "indic": [0, 3, 5, 7, 9, 10, 13, 14, 15, 18, 19, 20, 22, 23, 25, 26, 28, 30, 32, 33, 39, 45, 46, 48, 49, 53, 54, 55, 56, 57, 65, 78, 80, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111], "indici": [32, 113], "individu": [25, 60, 72, 113], "ineffiec": 82, "inf": [25, 39, 45], "infer": [6, 18, 22, 23, 25, 26, 28, 36, 39, 46, 47, 55, 80, 97], "inferred_typ": [18, 25, 26, 39, 46, 55, 68], "infin": [25, 36, 39], "infinit": [8, 23, 25, 39, 45, 46, 100, 104], "info": [0, 1, 18, 22, 25, 27, 31, 39, 46, 55], "infoclass": [25, 69], "inform": [0, 1, 5, 8, 9, 18, 19, 23, 25, 27, 36, 39, 46, 51, 55, 71, 74, 75, 76, 78, 79, 80, 82, 83, 85, 87, 89, 90, 91, 92, 101, 108, 109, 111, 113], "infrastructur": [1, 70], "ing": [25, 39, 55], "ingest": [97, 113], "inherit": [23, 25, 39, 63, 104, 107], "ini": [0, 71], "init": [23, 25, 39, 90, 104], "initi": [6, 16, 18, 19, 21, 25, 36, 39, 46, 47, 51, 71, 90, 95, 101, 102, 107, 108, 112], "initialdata": [22, 25, 103], "inner": [5, 9, 17, 22, 25, 30], "inplac": [22, 25, 103], "input": [4, 6, 12, 13, 16, 17, 18, 20, 22, 23, 25, 26, 36, 39, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 65, 68, 70, 74, 97, 99, 100, 101, 104, 107, 111], "insensit": [25, 26, 39, 46, 55, 71], "insert": [12, 13, 25, 36, 39, 54, 55, 70], "insid": [4, 25, 28], "inspect": [91, 97], "inst": [25, 36, 39], "instal": [1, 4, 25, 28, 39, 46, 75, 88, 93, 112], "instanc": [18, 20, 22, 23, 25, 28, 36, 39, 46, 47, 55, 56, 63, 65, 71, 82, 87, 88, 91, 97, 100, 103, 104, 105, 107], "instanti": [25, 36, 39, 70], "instantiateandregist": 70, "instead": [18, 20, 22, 23, 25, 28, 39, 46, 51, 55, 71, 95, 97, 100, 101, 104, 108], "instruct": [1, 25, 39, 55, 85, 87, 88, 89, 90, 92, 93, 94, 112], "int": [3, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 32, 33, 36, 39, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 70, 80, 97, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113], "int16": [25, 36, 39], "int16dtyp": [25, 36, 39], "int32": [25, 36, 39], "int32dtyp": [25, 36, 39], "int64": [3, 18, 20, 22, 23, 25, 26, 28, 30, 32, 36, 39, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 68, 70, 71, 78, 79, 80, 95, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 113], "int64dtyp": [25, 36, 39], "int8": [25, 36, 39], "int8dtyp": [25, 36, 39], "int_": [25, 36, 39], "int_0": 17, "int_scalar": [18, 22, 23, 25, 28, 36, 39, 45, 46, 47, 51, 53, 54, 55, 56, 57, 99, 100, 102, 104, 105, 107], "int_t": 17, "intc": [25, 36, 39], "intdtyp": [25, 36, 39], "integ": [1, 5, 9, 10, 12, 17, 18, 20, 22, 23, 25, 26, 28, 30, 36, 39, 45, 46, 47, 48, 51, 54, 56, 63, 68, 80, 96, 100, 101, 102, 103, 104, 107, 109, 111, 113], "integr": [0, 17, 23, 25, 28, 36, 39, 46, 47, 51, 74, 97, 102, 104], "intel": 71, "intend": [0, 18, 20, 22, 25, 39, 45, 46, 53, 55, 68, 79, 85, 89, 90, 98, 103, 110], "intens": [25, 39, 54, 78, 99, 102], "intention": [25, 36, 39], "interact": [75, 79, 83, 84, 85, 90, 92], "interest": 78, "interfac": [0, 74], "interleav": [18, 22, 25, 39, 49, 102], "intermedi": 3, "intern": [1, 5, 9, 25, 30, 36, 39, 46, 55, 68, 70, 74], "interoper": 0, "interpret": [19, 22, 25, 28, 36, 39, 63, 71, 97, 112], "intersect": [22, 23, 25, 36, 39, 49, 53, 78, 96, 111], "intersect1d": [18, 25, 39, 49, 53, 70, 78, 96, 111], "intersect_df": [22, 25], "interv": [3, 6, 25, 39, 45, 47, 51, 56, 63, 102, 105, 108], "interval_lookup": 3, "intp": [25, 36, 39], "intptr_t": [25, 36, 39], "introduc": 12, "introduct": 78, "inttyp": [25, 36, 39], "intx": [22, 25], "inv": [51, 108], "invalid": [25, 28, 97], "invari": 1, "invers": [14, 22, 25, 39, 45, 51, 57, 63, 103, 108], "inverse_indic": 14, "invert": [23, 25, 39, 49, 111], "invert_permut": [22, 25, 57], "invok": [25, 39, 47, 51, 87], "involv": [5, 9, 75, 94], "invpcid": 71, "invpcid_singl": 71, "io": [25, 69, 70, 71, 81, 82, 83], "io_compress": 71, "io_files_per_loc": 71, "io_only_delet": 71, "io_only_read": 71, "io_only_writ": 71, "io_path": 71, "io_util": [25, 69], "ior": [25, 39, 55], "ip": [20, 25], "ip2": [20, 25], "ip_address": [20, 25, 26, 98], "ipaddress": [20, 25], "ipv4": [20, 25, 28], "ipv6": [20, 25], "ipython": [19, 24, 85], "iqr": 71, "iqr_outli": 71, "is_cosort": 3, "is_float": 57, "is_int": 57, "is_integ": [25, 36, 39], "is_ipv4": [20, 25], "is_ipv6": [20, 25], "is_leap_year": [25, 39, 56], "is_numer": 57, "is_regist": [18, 20, 22, 23, 25, 26, 39, 46, 53, 55, 56, 57, 65, 96, 104], "is_sort": [25, 39, 46, 96, 100, 105], "is_uniqu": [25, 26], "isaac": [32, 113], "isalnum": [25, 39, 55], "isalpha": [25, 39, 55], "isbool": 80, "isdecim": [25, 39, 55], "isdigit": [25, 39, 55], "isdisjoint": [23, 25, 36, 39], "isdtyp": 7, "isempti": [25, 39, 55], "isf": 63, "isfinit": [8, 25, 39, 45], "isin": [22, 25, 65], "isinf": [8, 25, 39, 45], "isinst": [18, 25, 39, 47, 70], "islow": [25, 39, 55], "isn": [25, 39, 45, 76], "isna": [18, 22, 25, 65], "isnan": [8, 25, 39, 45], "isnul": [25, 65], "isocalendar": [25, 39, 56], "isort": [0, 92], "isspac": [25, 39, 55], "issu": [18, 21, 22, 23, 25, 39, 70, 74, 87, 93, 104, 109], "issubset": [23, 25, 36, 39], "issuperset": [23, 25, 36, 39], "issupportedbool": [25, 36, 39], "issupporteddtyp": [25, 36, 39], "issupportedfloat": [25, 36, 39], "issupportedint": [25, 36, 39], "issupportednumb": [25, 36, 39], "istitl": [25, 39, 55], "isupp": [25, 39, 55], "item": [3, 5, 9, 18, 22, 23, 25, 36, 39, 46, 47, 49, 57, 65, 68, 101, 103, 104, 110, 111], "items": [25, 36, 39, 46, 47, 55, 96, 97, 107], "itemset": [25, 36, 39], "iter": [22, 23, 25, 28, 36, 39, 47, 54, 68, 71, 96, 97, 99], "iter1": [25, 68], "iter2": [25, 68], "ith": [18, 25, 39, 53, 55], "its": [3, 8, 17, 18, 25, 26, 36, 39, 45, 46, 49, 53, 55, 65, 70, 74, 80, 89, 90, 100, 107, 109, 110, 113], "itself": [25, 39, 46, 51, 55, 68, 74, 108], "j": [25, 39, 53, 72, 73, 89, 90], "j16": 73, "jake": 78, "jane": 78, "john": 78, "join": [22, 25, 39, 53, 55, 69, 96], "join_on_eq_with_dt": 30, "json": [18, 19, 25, 27, 39, 46, 55, 64, 70, 92], "jupyt": [19, 24, 85, 92], "just": [25, 39, 45, 75, 76, 107, 108], "k": [6, 25, 36, 39, 46, 47, 51, 63, 71, 100, 105, 108], "kb": [19, 22, 25, 26, 57, 65], "keep": [0, 3, 13, 16, 17, 22, 23, 25, 39, 46, 56, 78, 90, 93, 97, 100, 103, 104, 105], "keepdim": [13, 16, 17, 25, 39, 46, 56, 100, 105], "keepparti": [25, 39, 55], "kei": [3, 18, 22, 23, 25, 26, 27, 28, 29, 36, 39, 45, 65, 68, 78, 80, 91, 93, 98, 103, 104, 110, 111], "kept": [22, 23, 25, 39, 53, 103, 104], "kextrememsg": 91, "key_": 80, "keyerror": [25, 36, 39, 65], "keyfil": 1, "keynam": 57, "keys1": 3, "keys2": 3, "keyword": [0, 17, 18, 22, 25, 36, 39, 49, 51, 53, 63, 65, 68, 102, 108, 110, 111], "kind": [7, 25, 36, 39, 48], "kitwar": 89, "know": [5, 9, 75, 85], "known": [0, 4, 25, 28, 39, 45, 97], "kurt": 63, "kurtosi": 63, "kwarg": [17, 18, 22, 23, 25, 36, 39, 47, 56, 57, 60, 63, 65, 68, 101, 102, 104], "kwd": 63, "l": [5, 9, 25, 28, 36, 39, 56, 72, 74, 78, 79, 87, 97], "l1_data_cache_s": 71, "l1_instruction_cache_s": 71, "l2_cache_associ": 71, "l2_cache_line_s": 71, "l2_cache_s": 71, "l3_cache_s": 71, "l_name": 78, "label": [0, 18, 22, 23, 25, 26, 39, 59, 63, 65, 68, 101, 103, 104, 110], "lack": [25, 36, 39], "lahf_lm": 71, "laid": 0, "lam": [51, 108], "lambda": [4, 22, 25, 51, 61, 108], "lambda_": [25, 61], "lang": 89, "larg": [5, 9, 18, 25, 36, 39, 49, 51, 71, 87, 100, 108, 111], "larger": [17, 18, 22, 23, 25, 39, 46, 47, 55, 74, 78, 97, 101, 104, 107], "largest": [25, 39, 46, 51, 100, 108], "last": [12, 13, 17, 22, 23, 25, 36, 39, 46, 47, 54, 55, 65, 68, 74, 91, 99, 103, 104, 110, 112], "late": 21, "later": [22, 25, 39, 46, 55, 92], "latest": [5, 12, 25, 39, 57, 70, 85, 89, 90, 93], "latter": [19, 113], "launch": [70, 93, 96], "layer": 97, "lb": 63, "ld15iqr": 71, "ld_library_path": 1, "lead": [25, 39, 46, 55], "learn": [25, 39, 56, 70, 85], "least": [0, 20, 22, 23, 25, 36, 39, 46, 53, 54, 55, 99, 104], "leav": [0, 25, 39, 45, 105], "left": [0, 3, 8, 13, 17, 20, 22, 25, 39, 45, 46, 54, 55, 56, 63, 68, 99, 105], "left_align": 3, "left_df": [22, 25], "left_suffix": [22, 25], "legend": 63, "legitim": [25, 39, 45], "leibniz": [32, 113], "len": [23, 25, 39, 46, 53, 55, 100, 104, 106], "len_suffix": [25, 39, 53], "length": [0, 3, 12, 18, 22, 23, 25, 26, 28, 30, 32, 33, 36, 39, 44, 46, 47, 49, 51, 53, 55, 58, 64, 65, 71, 88, 95, 97, 100, 102, 104, 109, 110, 111, 113], "less": [8, 18, 22, 23, 25, 26, 39, 46, 51, 53, 55, 104, 108], "less_equ": 8, "lesser": 71, "let": 78, "letter": [25, 39, 55], "level": [1, 25, 26, 31, 39, 49, 65, 68, 70, 71, 75, 79, 80, 87, 89, 90, 91, 94, 97, 110, 111], "levelnam": [25, 39], "leverag": [73, 89], "lexicograph": [25, 39, 54, 74, 99], "lhdf5": 1, "lhdf5_hl": 1, "lib": [1, 39, 69, 87, 93, 111], "libiconv": 92, "libidn2": 92, "librari": [0, 1, 70, 87, 93, 113], "libtic": 93, "libtinfow": 93, "licens": 89, "liconv": 1, "lidn2": 1, "lie": [18, 25, 39, 45, 55], "life": [90, 92], "lifo": [25, 36, 39], "like": [0, 2, 3, 5, 9, 20, 22, 23, 25, 36, 39, 51, 54, 56, 70, 72, 74, 75, 76, 78, 81, 85, 87, 91, 93, 97, 98, 103, 104, 106, 108, 110, 112, 113], "likelihood": [23, 25, 39, 46, 61, 100, 104], "lim": 106, "limit": [0, 4, 5, 17, 18, 25, 30, 39, 45, 46, 47, 51, 55, 56, 79, 82, 85, 93, 97, 101, 103, 107, 108], "linalg": [9, 39, 69], "line": [0, 17, 25, 29, 39, 75, 79, 85, 88, 91, 112], "linear": [25, 39, 45, 113], "linearli": [25, 39, 47, 56, 102], "lineno": [25, 39], "link": [0, 1, 25, 28, 39, 56, 74, 87, 89], "linkifi": 92, "linspac": [6, 17, 23, 25, 39, 45, 47, 63, 96, 100, 102, 104, 107], "linter": 0, "linux": [25, 36, 39, 64, 71, 87, 93, 94], "linux64": 89, "linux_instal": 88, "list": [0, 3, 5, 6, 9, 12, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 36, 39, 45, 46, 47, 48, 49, 53, 55, 56, 57, 59, 63, 65, 70, 71, 72, 74, 75, 76, 78, 79, 83, 85, 91, 94, 97, 102, 103, 104, 105, 106, 107, 110, 111, 113], "list_registri": [25, 27, 39, 46], "list_symbol_t": [25, 27], "listen": [85, 112], "liter": [13, 25, 36, 39, 48, 54, 55, 57, 63, 65, 101, 113], "littl": [25, 36, 39], "live": [89, 90], "ll": [75, 76, 87], "llvm": [89, 90, 93], "lm": 71, "ln": [51, 93, 108], "lname": 78, "lnjcsdxd": [25, 39, 47], "lo": [25, 39, 45], "load": [18, 22, 25, 26, 28, 39, 46, 53, 55, 79, 80, 82, 83, 93, 97], "load_al": [18, 22, 25, 26, 28, 39, 46, 55, 83], "load_checkpoint": [25, 28], "loc": [25, 51, 63, 65, 108], "local": [0, 1, 5, 9, 18, 19, 21, 22, 23, 25, 26, 28, 39, 46, 53, 55, 56, 57, 65, 71, 72, 80, 85, 87, 89, 90, 97, 102, 104, 110, 112], "locale_hostnam": 19, "locale_id": 19, "localhost": [19, 85, 112], "locat": [1, 13, 17, 23, 25, 26, 39, 45, 46, 51, 54, 55, 63, 64, 65, 71, 74, 76, 87, 93, 100, 104, 108, 110], "locationsinfo": 33, "log": [1, 8, 21, 23, 25, 31, 39, 45, 47, 51, 55, 59, 61, 62, 63, 96, 100, 104, 108], "log10": [8, 25, 39, 45], "log1p": [8, 25, 39, 45], "log2": [8, 25, 39, 45], "log_lvl": [25, 31], "log_msg": [25, 31], "logaddexp": 8, "logarithm": [8, 25, 39, 45, 51, 100, 108], "logcdf": 63, "logformat": [25, 39], "logger": [18, 23, 25, 33, 39, 53, 55, 69, 96, 104], "logic": [3, 8, 18, 25, 39, 45, 47, 49, 51, 53, 55, 96, 102, 105, 111], "logical_and": 8, "logical_not": 8, "logical_or": 8, "logical_xor": 8, "logist": [51, 96], "loglevel": [25, 31, 39], "logmean": [25, 39, 47], "lognorm": [25, 39, 47, 51, 96], "logpdf": 63, "logsf": 63, "logstd": [25, 39, 47], "long": [25, 36, 39, 53, 55, 76], "longdoubledtyp": [25, 36, 39], "longdtyp": [25, 36, 39], "longer": [22, 25, 39, 47, 80, 92, 103], "longlongdtyp": [25, 36, 39], "longnam": 63, "look": [0, 1, 25, 65, 70, 74, 75, 78, 91, 93, 97, 110, 112], "lookahead": [18, 25, 39, 55, 101, 113], "lookbehind": [18, 25, 39, 55, 101, 113], "lookup": [3, 25, 26, 65], "loop": 1, "loos": 74, "loss": 109, "lot": 71, "love": 0, "low": [3, 20, 22, 25, 39, 45, 46, 47, 51, 78, 97, 102, 108], "lower": [6, 22, 25, 39, 45, 51, 55, 70, 80, 103, 108], "lower_bounds_inclus": 3, "lowercamelcas": 0, "lowercas": [25, 39, 47, 55], "lowest": [3, 22, 25, 39, 46, 47, 51, 108], "lr": [25, 39, 47], "ls_csv": [25, 28, 79, 83], "lst": [25, 65], "lstick": [25, 39, 55], "lt": 93, "lw": 63, "lz": [25, 39, 46], "lz4": [18, 22, 25, 26, 28, 39, 46, 53, 55, 71, 82], "lzmq": 1, "m": [0, 25, 26, 32, 36, 39, 45, 47, 53, 56, 63, 71, 87, 93, 113], "m1": 78, "m2": [25, 26, 78], "m4": 89, "ma": [39, 69], "mac": [87, 90], "mac_instal": 88, "machin": [19, 71, 72, 75, 88, 89, 90, 112], "machine_info": 71, "maco": [64, 89, 94], "macosx": 90, "made": [20, 22, 25, 36, 39, 55], "mai": [4, 18, 22, 25, 26, 28, 36, 39, 45, 46, 47, 48, 49, 55, 68, 70, 78, 80, 87, 90, 92, 93, 97, 101, 102, 103, 107], "main": [6, 25, 39, 45, 71, 74, 80], "mainli": 1, "maintain": [13, 25, 26, 28, 39, 53, 54, 81, 97], "major": [74, 79, 98, 103, 110], "make": [0, 1, 12, 18, 20, 22, 25, 28, 39, 45, 51, 56, 63, 65, 70, 71, 72, 73, 74, 76, 85, 87, 88, 89, 90, 91, 93, 101, 103, 108], "makebinari": 73, "makefil": [85, 87], "malform": [25, 39, 47, 97], "manag": [87, 89, 90, 92, 94], "mandatori": [25, 36, 39], "mani": [3, 18, 22, 25, 71, 88, 101, 104], "manipul": 0, "manipulation_funct": [9, 39, 69], "mantissa": [25, 36, 39], "manual": [25, 39, 44, 70, 90, 92], "map": [3, 18, 19, 20, 22, 25, 26, 28, 29, 36, 39, 51, 55, 57, 65, 103, 108, 113], "mapper": [22, 25, 103], "mark": 80, "markdown": [0, 21, 22, 25, 65], "mask": [22, 25, 39, 45, 53, 55, 65], "mass": [51, 108], "master": [0, 74, 87], "match": [1, 6, 12, 18, 22, 23, 25, 26, 28, 33, 39, 45, 46, 47, 53, 55, 56, 57, 65, 68, 69, 71, 96, 97, 100, 102, 104, 107, 110, 112], "match_bool": 33, "match_ind": 33, "match_typ": [32, 33, 96, 113], "matcher": [25, 69], "matchtyp": [32, 33, 113], "math": [4, 25, 32, 113], "mathemat": 100, "mathjax": 92, "matlab": 106, "matmul": [11, 25, 39, 45], "matplotlib": [25, 39, 45, 59, 63, 92, 105], "matric": [6, 25, 39, 45, 57], "matrix": [11, 22, 23, 25, 39, 45, 57, 104], "matrix_transpos": 11, "matter": 75, "max": [7, 16, 22, 23, 25, 36, 39, 44, 45, 46, 53, 55, 65, 71, 96, 100, 104, 105], "max_bit": [25, 39, 46, 47, 71, 97, 102, 107], "max_list_s": [25, 26, 98], "max_tim": 71, "maxbit": 71, "maxima": [23, 25, 39, 104], "maximum": [1, 13, 16, 17, 19, 22, 23, 25, 26, 39, 46, 47, 51, 57, 71, 97, 100, 102, 103, 104, 105], "maxk": [25, 39, 46, 91, 96, 100, 105], "maxkmsg": 91, "maxlen": [25, 39, 47], "maxmum": [25, 39, 46, 100], "maxsplit": [25, 33, 39, 55], "maxtaskpar": 19, "maxtransferbyt": [5, 9, 18, 22, 25, 39, 46, 47, 55, 56, 68, 97, 101, 103, 107, 113], "mb": [19, 22, 25, 26, 57, 65], "mca": 71, "mce": 71, "md": [87, 88, 89, 90], "mean": [16, 19, 22, 23, 25, 28, 36, 39, 45, 46, 47, 51, 53, 54, 55, 63, 64, 65, 71, 96, 97, 100, 104, 105, 108], "mean_shim": 16, "measur": [71, 95], "median": [22, 23, 25, 39, 45, 51, 63, 71, 96, 104, 108], "meet": 0, "megabyt": [22, 25, 103], "member": [0, 25, 36, 39], "membership": [3, 23, 25, 39, 49, 65, 104, 111], "memori": [18, 19, 21, 22, 25, 26, 28, 39, 46, 53, 55, 65, 68, 72, 76, 77, 80, 85, 87, 89, 90, 93, 97, 101, 107], "memory_usag": [22, 25, 26, 65], "memory_usage_info": [22, 25], "memoryview": [25, 36, 39, 55], "mention": [0, 76], "menu": 88, "mere": [25, 39, 55], "merg": [18, 22, 25, 57, 74], "meshgrid": 6, "messag": [1, 18, 19, 21, 22, 25, 26, 31, 39, 46, 47, 53, 55, 68, 70, 85, 88, 97], "messagearg": 70, "meta": 70, "metadata": [25, 28], "method": [2, 5, 9, 18, 19, 20, 22, 23, 24, 25, 28, 36, 39, 45, 46, 47, 51, 53, 55, 56, 63, 64, 65, 68, 70, 73, 78, 79, 96, 97, 101, 102, 104, 105, 107, 108], "mi": [18, 25, 26, 39, 56, 65], "mib": 71, "microsecond": [25, 39, 56], "microsoft": [71, 93], "middl": [25, 39, 45], "midnight": [25, 39, 56], "might": [25, 65, 87, 90, 91], "milli": 30, "million": [25, 39, 45, 46, 100], "millisecond": [25, 39, 56], "mimic": [51, 108], "min": [7, 16, 22, 23, 25, 36, 39, 45, 46, 53, 65, 71, 96, 100, 104, 105], "min_round": 71, "min_tim": 71, "mind": [0, 78, 93], "mine": 76, "miniforg": 87, "minim": [5, 22, 25, 75, 76, 102, 103], "minima": [23, 25, 39, 104], "minimum": [13, 16, 17, 23, 25, 39, 46, 47, 89, 100, 104, 105], "mink": [25, 39, 46, 91, 96, 100, 105], "minkmsg": 91, "minlen": [25, 39, 47], "minor": 74, "minu": [25, 39, 45], "minut": [25, 39, 56], "mismatch": [22, 23, 25, 39, 87, 104], "miss": [3, 18, 22, 25, 65, 101], "mistak": 74, "mix": [25, 39, 55, 56, 71], "mixtur": [51, 108], "mkdir": [22, 25], "mm": 74, "mmx": 71, "mod": [25, 39, 46, 61], "modal": [23, 25, 39, 104], "mode": [1, 17, 18, 20, 22, 23, 25, 26, 28, 39, 46, 53, 55, 65, 96, 102, 104], "model": [71, 108], "modif": [18, 20, 22, 23, 25, 26, 39, 46, 53, 55, 56, 65, 91, 103, 104], "modifi": [22, 25, 61, 75, 103], "modul": [25, 70, 75, 76, 85, 97, 113], "modular": [25, 39, 46, 76], "modulenotfounderror": [25, 39, 46], "moment": 63, "moment_typ": 63, "momtyp": 63, "monoton": [25, 39, 46, 100, 105], "month": [25, 39, 56, 74], "more": [0, 1, 3, 5, 8, 9, 12, 17, 18, 22, 23, 25, 26, 28, 36, 39, 45, 46, 54, 55, 56, 63, 65, 70, 71, 72, 74, 75, 76, 78, 80, 82, 83, 85, 87, 88, 89, 90, 92, 97, 101, 103, 104, 107, 109, 113], "most": [0, 1, 17, 20, 23, 25, 33, 39, 55, 68, 71, 73, 74, 78, 80, 85, 87, 90, 93, 97, 102, 104, 107], "most_common": [23, 25, 39, 57, 96, 104], "mostli": [20, 25, 68], "motion": 1, "movb": 71, "move": [12, 25, 39, 54, 57, 76, 78, 99, 102, 109], "moveaxi": 12, "movement": 102, "mpi": 97, "msb_left": [20, 25], "msgarg": 70, "msgtupl": 70, "msi": 71, "msr": 71, "mt": [5, 9], "mtrr": 71, "mu": [25, 39, 47, 51, 108], "much": [0, 3, 18, 22, 25, 28, 39, 46, 49, 53, 55, 73, 78, 80, 97, 101, 107, 111], "muller": [51, 108], "multi": [3, 20, 23, 25, 28, 39, 45, 49, 65, 78, 87, 98, 102, 104, 107, 111], "multia": [25, 39, 49, 111], "multib": [25, 39, 49, 111], "multidimension": [25, 39, 45, 55], "multiindex": [22, 25, 26, 65, 98, 110], "multipl": [3, 12, 17, 22, 25, 28, 39, 45, 49, 53, 56, 71, 72, 78, 80, 82, 83, 91, 95, 97, 98, 100, 103], "multiplex": 100, "multipli": [8, 23, 25, 39, 51, 70, 104, 108], "must": [1, 3, 4, 10, 12, 18, 19, 20, 22, 23, 25, 26, 28, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 59, 62, 63, 65, 68, 70, 72, 75, 78, 79, 85, 89, 91, 97, 100, 102, 103, 104, 106, 107, 108, 110, 112, 113], "mutual": 1, "mv": [63, 75, 76], "mvsk": 63, "my": [25, 39, 55, 75], "my_data": [22, 25], "my_data_locale0000": [22, 25], "my_dir": [22, 25], "my_path": [22, 25], "my_table_nam": [22, 25], "my_zero": [25, 39, 46], "myarrai": [5, 25, 39, 57], "mydtyp": [25, 39, 46, 107], "mypi": [0, 92], "myst": 92, "n": [5, 9, 12, 17, 18, 22, 23, 25, 28, 39, 45, 46, 47, 48, 51, 53, 55, 56, 65, 79, 90, 92, 95, 100, 101, 103, 104, 108, 110], "n_col": 6, "n_row": 6, "na": [18, 22, 25, 65, 80], "na_cod": 80, "naiv": [25, 39, 56], "name": [0, 1, 2, 3, 18, 19, 20, 22, 23, 25, 26, 27, 28, 31, 36, 39, 46, 47, 51, 53, 55, 56, 57, 63, 65, 68, 70, 71, 72, 74, 78, 79, 80, 82, 87, 88, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 108, 110], "name_dict": [51, 108], "name_prefix": [25, 28, 39, 46, 97], "name_prefix_local": [25, 28, 39, 46], "namedtupl": 14, "nameserv": 93, "namespac": [2, 5, 9, 25, 28], "namewidth": [20, 25], "nan": [8, 22, 23, 25, 36, 39, 45, 46, 57, 65, 103, 104, 107], "nanosecond": [25, 39, 47, 56], "nativ": [23, 25, 36, 39, 81, 82, 90, 97, 104, 109], "natur": [8, 25, 39, 45, 100], "navalu": [18, 101], "navig": [71, 74, 87, 88, 89, 90, 92], "nbin": [25, 39, 45, 105], "nbyte": [18, 22, 25, 26, 36, 39, 46, 47, 53, 55, 57, 65, 97], "ncx2": 63, "nd": [19, 25, 39, 45, 46, 70], "ndarrai": [5, 6, 9, 17, 18, 25, 36, 39, 46, 47, 53, 55, 59, 65, 68, 78, 97, 100, 101, 107, 109, 113], "ndim": [5, 9, 12, 18, 25, 26, 28, 36, 39, 44, 46, 47, 54, 55, 65, 70, 96, 100, 101, 102, 107], "nearest": [25, 39, 45], "necessari": [0, 70, 74, 87, 93], "necessarili": [18, 25, 39, 55, 65], "need": [0, 5, 18, 22, 25, 28, 39, 45, 46, 53, 55, 65, 70, 71, 74, 75, 76, 79, 87, 89, 90, 91, 93, 97, 103, 110], "neg": [6, 8, 22, 23, 25, 39, 45, 46, 47, 51, 53, 73, 102, 104, 106, 108], "negat": 8, "neglig": [18, 25, 39, 55], "neither": [18, 25, 26, 39, 45, 46, 47, 55, 56, 102], "nest": [5, 9, 25, 28, 80, 97], "nestedsequ": 6, "never": [39, 45, 107], "new": [0, 4, 6, 12, 18, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 36, 39, 44, 45, 46, 53, 55, 57, 59, 63, 65, 70, 74, 75, 76, 88, 92, 103, 104, 107, 108, 110, 113], "new_categori": 18, "new_dtyp": [25, 36, 39], "new_ord": [25, 36, 39], "new_str": [25, 39, 55], "newbyteord": [25, 36, 39], "newer": 89, "newfig": [25, 59], "newli": [22, 25], "newlin": [22, 25, 26, 28, 39, 46, 55, 79], "newton": [32, 113], "next": [74, 76, 87, 91, 112], "neyman": [25, 61], "ngram": [25, 39, 53, 96], "ngroup": [23, 25, 39, 96, 104], "nice": 0, "nightli": 1, "nkedqc": [25, 39, 47], "nkei": [23, 25, 39, 65, 96, 104], "nl": [72, 85, 112], "nlevel": [18, 25, 26, 96, 101], "nnz": [23, 25, 39], "node": [5, 9, 18, 22, 25, 28, 39, 46, 53, 55, 71, 80, 95, 97], "node01": [85, 112], "non": [1, 3, 13, 18, 21, 22, 23, 25, 28, 33, 39, 45, 46, 47, 49, 51, 54, 55, 63, 65, 73, 97, 99, 100, 102, 104, 105, 106, 108], "non_empti": [25, 39, 53], "noncentr": 63, "none": [3, 4, 5, 6, 9, 10, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 36, 39, 44, 45, 46, 47, 48, 51, 53, 55, 56, 57, 59, 60, 61, 63, 65, 68, 71, 89, 90, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 110, 112], "nonexist": [22, 25, 103], "nonuniqueerror": 3, "nonzero": [13, 23, 25, 33, 36, 39, 45, 55], "nopl": 71, "nor": [18, 25, 26, 39, 45, 46, 47, 55, 102], "norepeat": [25, 39, 53], "normal": [18, 19, 20, 22, 23, 25, 39, 46, 47, 51, 56, 96, 100, 101, 103, 104], "not_alnum": [25, 39, 55], "not_alpha": [25, 39, 55], "not_decim": [25, 39, 55], "not_digit": [25, 39, 55], "not_empti": [25, 39, 55], "not_equ": 8, "not_spac": [25, 39, 55], "notabl": [17, 113], "note": [0, 1, 2, 3, 4, 5, 9, 15, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 39, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 59, 61, 63, 64, 65, 68, 70, 72, 76, 78, 80, 82, 87, 90, 91, 93, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112], "notebook": [19, 24, 85], "notebookhistoryretriev": 24, "notic": [70, 78], "notifi": 80, "notimplementederror": [25, 39, 45, 105], "notion": [5, 9], "notna": [22, 25, 65], "notnul": [25, 65], "nov": 71, "now": [18, 20, 22, 23, 25, 26, 39, 45, 46, 53, 55, 56, 57, 65, 75, 76, 79, 82, 87, 88, 89, 90, 104], "np": [4, 5, 8, 9, 17, 18, 22, 23, 25, 30, 36, 39, 45, 46, 47, 48, 53, 55, 56, 57, 59, 62, 63, 65, 68, 78, 97, 100, 101, 102, 103, 104, 105, 107], "np_arr": 78, "nparrai": [25, 68], "null": [18, 22, 23, 25, 28, 36, 39, 55, 80, 97, 101, 113], "num": [6, 17, 19, 25, 36, 39, 45], "num_command": [19, 24], "num_match": [25, 33, 39, 55], "numarg": 63, "numba": [25, 39, 46], "number": [0, 1, 3, 6, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 33, 36, 39, 44, 45, 46, 47, 51, 53, 55, 56, 57, 63, 65, 68, 71, 72, 74, 75, 76, 78, 80, 89, 91, 93, 95, 97, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112], "number_format_str": [25, 36, 39], "number_of_substit": [25, 39, 55], "numbers2": [25, 26], "numer": [3, 22, 25, 28, 36, 39, 46, 47, 54, 57, 59, 69, 80, 96, 97, 99, 101, 107, 113], "numeric_and_bool_scalar": [25, 36, 39], "numeric_onli": [22, 25], "numeric_scalar": [25, 36, 39, 44, 45, 46, 47, 51, 57, 100, 102, 108], "numericdtyp": [25, 36, 39], "numid": 104, "numlocal": [18, 19, 22, 25, 26, 28, 39, 46, 53, 55, 112], "numpi": [0, 4, 5, 6, 9, 17, 18, 20, 22, 25, 26, 28, 30, 32, 33, 61, 62, 63, 65, 68, 69, 70, 71, 78, 79, 80, 82, 92, 95, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 113], "numpu": 19, "numpy_funct": 5, "numpy_scalar": [25, 36, 39, 46, 56, 100, 105], "numpydoc": 70, "nuniqu": [22, 23, 25, 39, 53, 96, 104], "nx": [25, 39, 45, 71], "ny": [25, 39, 45], "o": [18, 22, 23, 25, 26, 39, 46, 47, 53, 55, 64, 94, 96, 104], "o0": 1, "o1": 1, "obj": [6, 25, 28, 36, 39, 48, 57, 68], "object": [2, 3, 4, 5, 6, 9, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 32, 33, 36, 39, 45, 46, 47, 49, 53, 55, 56, 57, 59, 63, 64, 65, 68, 70, 79, 80, 81, 82, 83, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "objectdtyp": [25, 36, 39], "objtyp": [18, 22, 23, 25, 26, 33, 39, 46, 53, 55, 65, 80], "observ": [0, 25, 39, 46, 51, 61, 100, 108], "obtain": [25, 33, 39, 55], "occasion": 70, "occur": [19, 22, 23, 25, 28, 33, 36, 39, 45, 46, 48, 51, 55, 87, 104, 105, 108], "occurr": [3, 14, 25, 33, 36, 39, 45, 46, 49, 55, 105], "odd": [25, 39, 45, 46], "oerror": 29, "off": [25, 39, 55, 75], "offer": [98, 103, 110, 113], "offset": [18, 23, 25, 28, 39, 47, 55, 80, 97, 101, 111, 113], "offset_alias": [25, 39, 56], "offset_attrib": [25, 39, 55], "often": [18, 101, 105], "ok": [74, 88], "old": [18, 74], "older": [25, 26, 39, 46, 80, 89], "omit": [25, 39, 46, 55, 56, 71, 80, 105], "onc": [0, 22, 23, 25, 28, 39, 46, 55, 65, 72, 73, 74, 76, 78, 79, 82, 87, 93, 104], "one": [0, 1, 2, 3, 4, 5, 6, 9, 12, 17, 18, 22, 23, 25, 26, 28, 29, 36, 39, 44, 45, 46, 47, 49, 51, 53, 54, 55, 63, 65, 70, 71, 74, 76, 78, 79, 80, 82, 85, 89, 90, 91, 92, 93, 97, 100, 101, 102, 103, 104, 108, 111], "one_two": [25, 39, 55], "onelin": 74, "ones": [1, 6, 12, 19, 22, 25, 36, 39, 45, 47, 65, 71, 75, 95, 96, 100, 102], "ones_lik": [6, 25, 39, 47, 96, 102], "onli": [3, 5, 9, 17, 18, 21, 22, 23, 25, 26, 28, 30, 32, 39, 45, 46, 47, 49, 53, 54, 55, 57, 65, 68, 70, 71, 73, 75, 76, 78, 80, 82, 87, 91, 92, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113], "onlin": [5, 74, 93], "onto": [22, 25, 39, 55], "op": [18, 20, 22, 25, 28, 39, 46, 53, 55, 71], "open": [0, 3, 6, 18, 22, 25, 26, 28, 29, 39, 46, 51, 53, 55, 56, 65, 88, 93, 108], "opeq": [20, 25, 39, 46], "opeqop": [25, 39, 46], "oper": [18, 19, 20, 21, 22, 23, 25, 26, 28, 39, 46, 53, 54, 55, 56, 64, 70, 71, 74, 81, 85, 92, 94, 95, 96, 99, 103, 104, 105, 106, 112], "opposit": [25, 36, 39], "opt": [87, 89, 90], "optim": [25, 65, 75, 88], "option": [1, 3, 4, 6, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 32, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 55, 56, 59, 65, 68, 70, 71, 74, 80, 87, 88, 89, 92, 95, 97, 100, 102, 103, 104, 105, 108, 110, 111, 112, 113], "order": [0, 5, 9, 12, 13, 15, 17, 18, 20, 21, 22, 23, 25, 28, 36, 39, 44, 45, 46, 47, 49, 53, 54, 55, 57, 61, 63, 65, 68, 72, 80, 82, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 113], "ordin": [25, 39, 45], "org": [12, 17, 22, 25, 39, 57, 61, 65, 70], "organ": 88, "orient": [82, 101, 103, 107, 113], "orig": [25, 39, 55], "orig_kei": [23, 25, 39, 104], "origin": [12, 18, 20, 22, 23, 25, 26, 28, 32, 36, 39, 45, 46, 49, 53, 55, 56, 65, 100, 101, 102, 103, 104, 110, 113], "origin_indic": [25, 39, 53, 55], "oserror": 29, "osxsav": 71, "other": [3, 6, 18, 20, 22, 23, 25, 26, 28, 36, 39, 45, 46, 47, 51, 53, 54, 55, 56, 71, 75, 76, 78, 97, 98, 99, 100, 101, 104, 108, 109, 111, 113], "other_df": [22, 25], "otherwis": [0, 3, 6, 13, 16, 18, 22, 23, 25, 26, 28, 32, 36, 39, 46, 47, 49, 51, 53, 55, 57, 63, 65, 94, 97, 101, 103, 104, 107, 108, 111, 113], "our": [0, 25, 39, 46, 70, 71, 73, 74, 78, 80, 85, 87, 88, 93, 94, 97], "out": [0, 16, 19, 22, 25, 36, 39, 45, 53, 75, 76, 79, 80, 82, 87, 91, 105, 106], "outer": [5, 9, 22, 25, 106], "outlier": 71, "outlin": [74, 80], "outperform": [25, 39, 46, 100], "output": [0, 1, 6, 13, 16, 17, 18, 20, 22, 23, 25, 26, 28, 39, 44, 45, 46, 48, 51, 53, 55, 65, 68, 74, 78, 82, 85, 88, 97, 100, 104, 107, 108, 111, 112], "outsid": [0, 25, 39, 45, 79, 91], "outstand": 0, "over": [3, 18, 22, 25, 28, 39, 45, 46, 51, 53, 54, 55, 56, 70, 95, 99, 100, 101, 103, 105, 107, 108, 109, 113], "overflow": [18, 25, 39, 45, 46, 55, 97, 101, 107], "overflowerror": [25, 36, 39], "overlap": [3, 22, 25, 33, 39, 55], "overload": [23, 25, 39, 104], "overnight": 76, "overrid": [18, 20, 25, 39, 46, 47, 55, 75, 97, 101, 107], "overridden": [25, 39, 47, 64], "overview": 71, "overwhelm": [25, 39, 47, 97], "overwrit": [18, 22, 23, 25, 26, 28, 39, 45, 46, 53, 55, 104, 107], "overwritten": [18, 22, 25, 26, 28, 39, 45, 46, 53, 55, 80, 82], "own": [0, 1, 25, 39, 56, 109, 113], "p": [3, 25, 39, 46, 47, 51, 61, 108], "packag": [89, 90, 92, 94], "pad": [17, 20, 25, 74], "pad_width": 17, "padchar": [20, 25], "pae": 71, "page": [17, 21, 69, 74, 87], "pai": 71, "pair": [25, 29, 30, 36, 39, 45, 53], "pairwis": [22, 25, 39, 45], "panda": [0, 18, 22, 25, 26, 28, 39, 47, 56, 65, 68, 70, 81, 83, 92, 97, 98, 101, 103], "parallel": [73, 97, 107, 111], "parallel_start_test": 0, "param": [2, 18, 25, 26, 28, 36, 39, 53, 55, 68, 70, 71], "paramet": [0, 3, 4, 6, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 68, 70, 90, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113], "parameter": [51, 108], "parameter_class": 19, "parametr": 17, "parent": [1, 22, 25, 33], "parent_entry_nam": [32, 33], "pariti": [25, 39, 46], "parquet": [18, 22, 23, 25, 26, 28, 39, 46, 53, 55, 71, 79, 81, 83, 97, 104], "parquet_output": [22, 25], "pars": [19, 20, 22, 25, 26, 39, 46, 65, 112], "parse_hdf_categor": 18, "parseabl": [25, 39, 47, 102], "parser": 92, "part": [0, 5, 8, 9, 25, 36, 39, 53, 55, 93], "parti": [87, 88], "particular": [5, 12, 22, 25, 39, 44, 63, 65, 70, 91], "particularli": [89, 91], "partit": [25, 39, 55], "paruqet": 82, "pass": [0, 1, 3, 4, 18, 20, 22, 23, 25, 28, 39, 45, 46, 53, 55, 65, 68, 74, 97, 103, 104, 110], "password": [1, 22, 25, 65, 93], "past": 76, "pat": 71, "path": [22, 25, 26, 28, 29, 39, 46, 64, 71, 76, 85, 87, 89, 90, 91, 93, 97], "path_prefix": [25, 28], "path_to_ark": 90, "path_to_arkouda": [88, 92], "path_to_chpl": 90, "pathlib": [22, 25, 29, 64], "pattern": [25, 32, 33, 39, 55, 74, 78, 104, 113], "pb": 19, "pcid": 71, "pclmulqdq": 71, "pct_avail_mem": 19, "pd": [18, 22, 25, 28, 39, 47, 56, 57, 65, 68, 78, 97, 101, 103], "pd_df": [22, 25, 78, 103], "pda": [23, 25, 39, 45, 46, 47, 54, 56, 57, 70, 99, 100, 102, 105, 107, 111], "pda1": [25, 39, 46], "pda2": [25, 39, 46], "pda_a": [25, 39, 45], "pda_b": [25, 39, 45], "pdaleft": [25, 39, 45], "pdaright": [25, 39, 45], "pdarrai": [3, 4, 5, 6, 9, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 32, 33, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 61, 62, 65, 68, 70, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 113], "pdarrayclass": [4, 18, 20, 22, 25, 26, 28, 30, 32, 33, 39, 44, 45, 47, 48, 49, 51, 53, 54, 55, 57, 58, 62, 65, 69, 103], "pdarraycr": [25, 39, 46, 69], "pdarraymanipul": [39, 69], "pdarraysetop": [25, 39, 53, 69, 70], "pdarri": [25, 39, 46], "pdconcat": [25, 65, 110], "pdf": 63, "pdpe1gb": 71, "pdrrai": [25, 39, 45, 47, 97], "pearson": [22, 25, 39, 46, 61], "peel": [25, 39, 55], "pep8": [0, 88], "per": [1, 18, 19, 21, 22, 23, 25, 26, 28, 39, 46, 53, 55, 71, 76, 80, 91, 97, 100, 104], "percent": [19, 63], "percent_transfer_limit": 57, "percentag": [19, 57], "percentil": 63, "perf_count": 71, "perform": [18, 21, 22, 23, 25, 26, 28, 30, 39, 45, 46, 49, 51, 53, 55, 65, 68, 71, 73, 74, 75, 78, 79, 81, 87, 96, 97, 100, 102, 103, 104, 107, 108], "period": [25, 39, 56], "perl": 89, "perm": [22, 25, 39, 54, 57, 99, 103], "perm_arri": [22, 25, 103], "perm_df": [22, 25, 103], "permiss": [18, 25, 26, 39, 46, 53, 55], "permut": [12, 18, 22, 23, 25, 39, 45, 51, 54, 55, 57, 80, 96, 99, 101, 104, 111], "permute_dim": 12, "permute_sampl": [23, 25, 39, 104], "person": 0, "pexpect": 92, "pge": 71, "physic": [19, 32, 113], "physicalmemori": 19, "pi": [4, 17, 25, 39, 45, 51, 108], "piec": 75, "pierce314159": 0, "pig": [22, 25, 65], "pip": [89, 90], "pipe": 113, "pipelin": [97, 113], "place": [18, 20, 22, 23, 25, 26, 28, 31, 39, 46, 51, 53, 55, 56, 57, 64, 65, 72, 76, 100, 103, 104, 108], "placement": [25, 39, 45], "plan": [93, 94, 105, 107], "platform": [25, 36, 39, 64], "player": [51, 108], "pleas": [0, 18, 20, 22, 23, 25, 26, 28, 36, 39, 46, 53, 55, 56, 65, 72, 74, 75, 78, 80, 82, 83, 87, 89, 90, 91, 101, 103, 104], "plot": [25, 39, 45, 63, 69, 97, 105], "plot_dist": [25, 59], "plt": [25, 39, 45, 59, 63, 105], "plu": [25, 39, 45], "png": 17, "pni": 71, "point": [8, 17, 22, 25, 26, 30, 36, 39, 45, 46, 47, 51, 54, 63, 65, 93, 102, 103, 107], "pointer": [25, 36, 39], "poisson": [51, 96], "polynomi": [39, 69], "pop": [25, 36, 39], "popcnt": 71, "popcount": [25, 36, 39, 46], "popitem": [25, 36, 39], "popul": [21, 23, 25, 29, 33, 39, 46, 100, 104], "port": [1, 18, 19, 22, 25, 28, 39, 46, 53, 55, 65, 75, 85, 95, 112], "portion": 80, "portland": [22, 25], "pos_dt": 30, "posit": [6, 8, 12, 22, 23, 25, 32, 33, 36, 39, 45, 46, 55, 65, 104, 106, 110, 113], "position": [22, 25], "positon": [25, 39, 55], "possibl": [0, 22, 25, 28, 36, 39, 45, 53, 55, 56, 63, 70, 71, 74, 78, 87, 93, 97, 113], "possibli": 70, "post": [0, 74], "postit": [25, 39, 55], "potenti": [22, 25, 39, 46, 87], "pow": 8, "power": [8, 25, 39, 46, 61, 84, 106], "power_diverg": [25, 61], "power_divergenceresult": [25, 61], "powershel": 93, "ppf": 63, "pr": [0, 74], "practic": [0, 23, 25, 39, 46, 91, 100, 104], "pre": [18, 57, 101], "preced": [25, 36, 39, 63], "precis": [25, 28, 36, 39, 45, 68, 97, 107], "pred": 30, "predic": 30, "prefer": [0, 90, 92, 94, 108], "prefetch": 21, "prefix": [18, 22, 23, 25, 26, 28, 39, 46, 53, 55, 56, 96, 104], "prefix_path": [18, 20, 22, 23, 25, 26, 28, 39, 46, 53, 55, 104], "prepar": [22, 23, 25, 39, 87, 104], "prepend": [12, 17, 25, 39, 44, 46, 53, 55, 96], "prepend_singl": [25, 39, 53], "prerequisit": [87, 89, 90], "present": [0, 3, 18, 20, 22, 25, 26, 28, 36, 39, 44, 45, 46, 49, 53, 55, 65, 78, 80, 97, 105, 111], "preserv": [17, 22, 25, 39, 44, 54, 65, 110, 113], "pretti": 76, "pretty_print_info": [18, 25, 39, 46, 55], "pretty_print_inform": [25, 27], "prev": 74, "prevent": [20, 25, 28, 39, 46, 53, 79, 80, 89, 109], "previou": [74, 76, 90], "previous": [18, 22, 23, 25, 26, 28, 39, 46, 53, 55, 56, 65, 104], "primarili": 97, "print": [0, 1, 18, 19, 21, 22, 25, 27, 39, 46, 55, 60, 65, 93, 112], "print_comm_diagnostics_t": 21, "print_empty_column": 21, "print_server_command": 19, "printabl": [25, 39, 47], "printit": 0, "prior": [88, 91], "probabl": [18, 22, 23, 25, 39, 51, 55, 63, 104, 108], "problem": [0, 51, 71, 95, 108], "problem_s": 71, "proc": [0, 70], "proce": [18, 25, 39, 45, 46, 47, 55, 97, 101, 107], "procedur": [0, 70], "proceed": 87, "process": [19, 25, 27, 28, 39, 65, 70, 77, 80, 85, 88, 93, 97, 109, 113], "processor": [19, 71], "prod": [16, 22, 23, 25, 36, 39, 46, 53, 65, 96, 100, 104, 105], "produc": [18, 25, 39, 55, 65, 68, 101, 108], "product": [8, 11, 16, 23, 25, 39, 45, 46, 47, 51, 97, 100, 104, 108], "profil": 24, "program": [0, 18, 20, 21, 22, 23, 25, 26, 39, 46, 53, 55, 56, 65, 85, 88, 104, 112], "progress": 90, "project": [0, 22, 25, 65, 71, 74, 87], "projectfiledir": 88, "promot": [5, 25, 39, 44, 47, 70], "promote_dtyp": [25, 39, 47], "promote_to_common_dtyp": [25, 39, 47], "proof": [20, 25], "proper": [25, 39, 45, 53, 55, 57], "properli": [0, 75, 80, 89, 90], "properti": [2, 5, 9, 18, 22, 25, 26, 39, 46, 53, 55, 56, 65, 70, 80], "protect": [18, 25, 39, 46, 47, 55, 97, 101, 107], "provid": [0, 7, 17, 18, 22, 23, 25, 26, 28, 36, 39, 46, 48, 51, 53, 55, 57, 65, 68, 70, 71, 73, 78, 79, 80, 82, 83, 87, 89, 90, 92, 97, 100, 103, 104, 108, 109], "prune": 92, "pse": 71, "pse36": 71, "pseudo": 108, "pti": 71, "ptp": [25, 36, 39], "publish": 74, "pull": [25, 28, 39, 47, 70, 74, 80, 102], "purg": [25, 39, 55], "purge_cached_regex_pattern": [25, 39, 55], "purpos": [71, 74, 98, 103, 110], "push": [74, 87, 88], "put": [21, 22, 23, 25, 36, 39, 76, 104], "putmask": [25, 39, 45], "pv": [25, 39, 47], "pvalu": [25, 61], "pwd": [89, 90], "pwe": [25, 39, 46], "pwr": [25, 39, 46], "py": [0, 1, 70, 71, 75, 91, 92, 95], "pyarrow": [92, 97], "pycharm": 0, "pydata": [22, 25, 65], "pydoc": 5, "pyfiglet": 92, "pyinterpreterdirectori": 88, "pypi": [22, 25, 65], "pyplot": [25, 39, 45, 59, 63, 105], "pytabl": 92, "pytest": [0, 77, 92], "python": [3, 4, 5, 9, 18, 19, 20, 24, 25, 36, 39, 46, 47, 49, 55, 64, 65, 71, 84, 87, 88, 93, 94, 96, 97, 100, 101, 102, 103, 106, 107, 111, 113], "python3": [71, 75, 87, 89], "python_build": 71, "python_compil": 71, "python_implement": 71, "python_implementation_vers": 71, "python_vers": 71, "pythonpath": [89, 90], "pyzmq": 92, "q": 63, "q1": 71, "q3": 71, "qualifi": [22, 25], "queri": [3, 25, 39, 49, 97], "quetzal": [22, 25, 65], "quick": [19, 75], "quickli": [22, 25, 72, 103], "quickstart": [89, 90, 94], "quit": [0, 85], "quotient": [25, 39, 46], "r": [0, 22, 25, 39, 55, 63, 71, 74, 78, 89, 90, 95], "rad2deg": [25, 39, 45], "radian": [25, 39, 45], "radix": [25, 39, 54, 99], "radixsortlsd": [25, 39, 54, 99], "rai": [25, 39, 45], "rais": [3, 5, 9, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 64, 65, 70, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113], "ram": 87, "ran": [71, 75], "randint": [3, 4, 19, 23, 25, 39, 45, 47, 49, 51, 54, 78, 96, 99, 100, 102, 104, 105], "randn": [25, 59], "random": [22, 23, 25, 39, 47, 59, 63, 69, 71, 95, 96, 104], "random_st": [22, 23, 25, 39, 63, 104], "random_strings_lognorm": [25, 39, 47], "random_strings_uniform": [25, 39, 47], "randomli": [22, 25, 51, 108], "rang": [3, 12, 17, 18, 22, 25, 26, 28, 30, 39, 45, 46, 47, 51, 53, 55, 56, 65, 95, 97, 100, 102, 103, 105, 108, 110, 113], "rank": [18, 19, 25, 39, 45, 46, 47, 49, 51, 55, 70, 96, 97, 101, 102, 106, 108, 111], "rasi": [18, 25, 39, 55, 101], "rate": [51, 71, 108], "rather": [5, 9, 18, 22, 25, 39, 44, 55], "ratio": [25, 36, 39], "ravel": [25, 36, 39], "raw": [25, 39, 55, 113], "rc": 90, "rdrand": 71, "rdrnd": 71, "rdseed": 71, "rdtscp": 71, "re": [0, 12, 18, 19, 22, 23, 25, 32, 39, 87, 104, 112, 113], "re2": [18, 25, 39, 55, 87, 101, 113], "reach": 0, "reachabl": 112, "reactiv": 90, "read": [5, 9, 18, 21, 22, 25, 26, 28, 29, 39, 46, 55, 61, 65, 79, 80, 81, 82, 113], "read_": [25, 28], "read_all_test": 1, "read_csv": [22, 25, 28, 79, 83], "read_hdf": [25, 28, 39, 53, 83, 97], "read_nest": [25, 28, 97], "read_parquet": [25, 28, 83, 97], "read_path": [25, 28, 97], "read_tagged_data": [25, 28], "read_zarr": [25, 28], "readabl": [18, 25, 27, 28, 39, 46, 55, 80, 97], "readahead": 21, "readalltest": 1, "readi": [0, 72, 74, 88, 89, 90], "readlin": 24, "readm": 1, "readthedoc": 70, "real": [0, 8, 25, 36, 39, 47, 51, 70, 74, 80], "realist": [18, 25, 39, 55], "realli": [0, 25, 39, 55], "reason": [74, 76, 89, 90], "rebas": 0, "rebuild": [23, 25, 39, 70, 73, 75, 76, 104], "rebuilt": 75, "rec": [39, 69], "receiv": [18, 19, 22, 25, 26, 28, 39, 46, 53, 55, 97, 107, 112], "receive_arrai": [18, 22, 25, 39, 46, 53, 55], "receive_datafram": [25, 28], "recent": [25, 68, 74], "recogn": [25, 36, 39], "recommend": [0, 25, 39, 45, 51, 72, 76, 82, 89, 92, 93, 94, 103, 108, 109], "recompil": 76, "recomput": [18, 25, 28], "reconnect": [25, 39, 46], "reconstitut": 18, "reconstruct": 14, "record": [25, 28], "recurs": [25, 39, 47, 97], "red": [17, 25, 26], "reduc": [22, 23, 25, 39, 75, 77, 104], "reduct": [23, 25, 39, 46, 95, 96, 104, 105], "redund": [25, 36, 39], "ref": 70, "refer": [0, 6, 17, 22, 23, 25, 39, 61, 65, 68, 75, 78, 90, 92, 104], "referenc": [22, 25], "reflect": [22, 25, 90, 103, 109], "reformat": [0, 97], "regard": 89, "regardless": [25, 28, 39, 47, 68, 102], "regex": [18, 25, 39, 55, 101, 113], "regex_max_captur": 1, "regex_split": [25, 39, 55], "regist": [1, 5, 18, 20, 22, 23, 25, 26, 27, 39, 46, 53, 55, 56, 57, 65, 70, 96, 104], "register_al": [25, 39, 57], "registerablepiec": 18, "registercommand": 70, "registerd": [25, 65], "registered_nam": [18, 20, 25, 26, 39, 46, 53, 55], "registeredsymbol": [25, 27], "registerfunct": 91, "registr": [19, 25, 39, 46, 55, 70, 87], "registrationerror": [18, 20, 22, 23, 25, 26, 39, 46, 53, 55, 56, 65, 104], "registri": [18, 22, 23, 25, 26, 27, 39, 46, 55, 56, 57, 65, 104], "regular": [18, 25, 39, 55, 96, 101], "rel": [25, 68], "relat": [71, 74, 78], "releas": [18, 22, 25, 26, 28, 36, 39, 46, 53, 55, 71, 76, 77, 85, 89, 90, 108], "release_d": 85, "reli": [18, 25, 26, 39, 46, 53, 55, 104], "remain": [18, 22, 25, 26, 28, 39, 45, 46, 53, 55, 89, 97, 98, 103, 110], "remaind": [8, 25, 39, 46, 55], "remap": 18, "rememb": [76, 78], "remot": [21, 74, 89, 90, 112], "remov": [3, 12, 18, 22, 25, 26, 28, 36, 39, 44, 46, 48, 49, 53, 55, 71, 75, 92, 103, 109], "remove_miss": [3, 25, 39, 49], "remove_repeat": [25, 39, 53], "renam": [22, 25], "reorder": [12, 25, 39, 44], "rep": [25, 39, 44], "rep_good": 71, "rep_msg": [18, 20, 22, 23, 25, 26, 39, 53, 55, 91], "repack": [18, 20, 22, 23, 25, 26, 28, 39, 46, 53, 55], "repeat": [1, 12, 17, 18, 25, 36, 39, 44, 46, 53, 101], "repetit": [12, 25, 39, 44], "repl": [24, 25, 33, 39, 55], "replac": [3, 22, 23, 25, 28, 33, 36, 39, 46, 51, 53, 55, 72, 74, 80, 90, 91, 92, 104, 108], "repli": 70, "replic": [23, 25, 39, 44, 104], "repmsg": [25, 39, 65, 70], "repo": [88, 89, 90, 94], "repons": [25, 26], "report": [21, 23, 25, 36, 39, 76, 92], "report_mem": 57, "repr": [22, 23, 25, 36, 39, 63, 65], "repres": [18, 20, 23, 25, 36, 39, 47, 53, 55, 56, 63, 65, 71, 80, 101, 102, 104, 113], "represent": [20, 22, 25, 36, 39, 46], "reproduc": [0, 22, 23, 25, 39, 51, 77, 104, 108], "request": [22, 23, 25, 29, 39, 46, 47, 55, 70, 74, 102, 103, 104], "requir": [0, 3, 4, 5, 9, 16, 19, 21, 22, 23, 25, 26, 28, 30, 39, 46, 47, 65, 72, 73, 75, 76, 80, 81, 82, 85, 87, 91, 97, 102, 103, 104], "requiredpiec": 18, "rerun": 87, "reserv": [25, 65], "reset": 21, "reset_categori": 18, "reset_comm_diagnost": 21, "reset_index": [22, 25, 103], "reshap": [12, 17, 25, 36, 39, 44, 45, 46, 48, 96], "resid": [25, 39, 46, 55, 107], "resili": [25, 39, 54, 99], "resiz": [25, 36, 39], "resolv": [0, 25, 36, 39, 73, 93], "resolve_scalar_dtyp": [25, 36, 39], "respect": [22, 25, 39, 45, 46, 47, 49, 56, 63, 68, 74, 97, 102], "respons": [19, 22, 25, 39, 46, 55, 70], "rest": [25, 65], "restart": 93, "restor": [25, 28], "restrict": [5, 9], "result": [3, 4, 6, 7, 12, 13, 16, 17, 18, 21, 22, 23, 25, 26, 28, 30, 36, 39, 44, 45, 46, 47, 49, 51, 53, 55, 56, 59, 61, 63, 65, 68, 70, 71, 78, 79, 80, 81, 90, 97, 100, 102, 103, 104, 105, 107, 108, 109, 110, 113], "result_array_on": 30, "result_dtyp": [4, 25], "result_limit": 30, "result_typ": 7, "ret": 70, "retain": [25, 39, 45, 46, 57, 100], "retain_index": [22, 25, 103], "retriev": [19, 24, 25, 27, 39, 46, 64, 65, 74], "return": [3, 4, 5, 6, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 70, 79, 81, 88, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113], "return_count": [25, 39, 45, 105], "return_group": [23, 25, 111], "return_group_origin": [32, 113], "return_indic": [23, 25, 39, 104, 111], "return_length": 30, "return_match_origin": [25, 32, 33, 39, 55, 113], "return_multipl": [25, 39, 53], "return_num_sub": 33, "return_obj": [25, 28, 97], "return_origin": [25, 39, 53, 55], "return_seg": [25, 33, 39, 55], "return_valid": [25, 39, 45, 107], "revarg": 3, "revers": [5, 9, 12, 17, 20, 21, 23, 25, 39, 44, 45], "review": 74, "revindic": 3, "revkei": 3, "rf": 87, "rh": 89, "right": [3, 8, 13, 17, 20, 22, 25, 39, 46, 54, 55, 56, 63, 68, 74, 88, 99, 103, 106, 112], "right_align": 3, "right_df": [22, 25], "right_suffix": [22, 25], "risk": [25, 39, 45, 80], "rm": 87, "rng": [25, 39, 51, 56, 108], "role": 1, "roll": 12, "root": [8, 18, 20, 22, 23, 25, 26, 39, 46, 56, 65, 71, 80, 89, 97, 100, 104], "rot": [25, 39, 46], "rotat": [25, 39, 45, 46], "rotl": [25, 39, 46], "rotr": [25, 39, 46], "round": [8, 25, 36, 39, 45, 71], "rout": 93, "row": [3, 6, 21, 22, 23, 25, 26, 28, 39, 45, 46, 48, 49, 53, 54, 55, 65, 68, 69, 78, 79, 97, 99, 103, 104, 109, 111], "row_numb": [23, 25, 39], "row_start": [23, 25, 39], "rpartit": [25, 39, 55], "rpath": 87, "rpeel": [25, 39, 55], "rtol": [25, 68], "rtype": [25, 26], "ruff": 0, "rule": [5, 17, 25, 36, 39, 45, 107], "run": [18, 19, 22, 25, 28, 39, 45, 46, 53, 55, 75, 76, 78, 85, 87, 89, 90, 92, 93, 95, 97, 101, 107, 112], "runtim": [19, 25, 28, 36, 39, 73, 88, 97], "runtimeerror": [18, 19, 22, 23, 25, 26, 27, 28, 32, 39, 45, 46, 47, 49, 53, 55, 56, 65, 97, 100, 101, 102, 104, 105, 107, 111, 112, 113], "runtimewarn": [25, 28, 97], "ruok": 19, "rv": 63, "rv_continu": 63, "rw": [25, 39, 47], "rwovkbur": [25, 39, 47], "s1": [25, 39, 45, 100], "s2": [25, 26, 39, 45, 55, 65, 100], "s3": [22, 25, 65], "s_cpy": [25, 39, 55], "sa": [25, 39, 57], "sacrific": 113, "safe": [25, 39, 45, 48, 74, 107], "sai": 112, "salari": 78, "same": [3, 4, 12, 17, 18, 20, 22, 23, 25, 26, 28, 36, 39, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 64, 65, 68, 70, 74, 78, 79, 80, 82, 88, 89, 90, 91, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 113], "same_kind": [25, 39, 48], "sampl": [17, 22, 23, 25, 39, 45, 47, 51, 96, 104, 108], "satisfi": [3, 22, 25, 28], "save": [18, 22, 23, 25, 26, 28, 39, 46, 53, 55, 71, 72, 74, 75, 80, 81, 82, 88, 97, 101, 104, 111], "save_al": [25, 26, 28, 39, 46, 83], "save_checkpoint": [25, 28], "save_offset": [25, 39, 55], "saveusedmodul": [75, 76, 91], "sb": [25, 39, 57], "scalar": [3, 5, 6, 9, 16, 17, 18, 22, 25, 36, 39, 45, 46, 47, 53, 54, 65, 71, 95, 96, 101, 106, 110], "scalar_arrai": [25, 39, 47], "scalardtyp": [25, 36, 39], "scale": [18, 25, 39, 49, 51, 59, 61, 63, 73, 78, 84, 108, 111], "scan": 96, "scatter": [71, 96], "schema": 97, "scheme": 74, "scienc": 104, "scipi": [0, 25, 69, 92], "scl": 89, "scope": [0, 91], "script": [70, 75, 90, 91, 95], "scroll": 87, "se": [23, 25, 39, 46, 100, 104], "search": [3, 13, 18, 25, 32, 39, 49, 55, 88, 96, 101], "search_bool": 33, "search_ind": 33, "search_interv": 3, "searching_funct": [9, 69], "searchsort": [13, 25, 36, 39, 54], "sec": [25, 39, 56, 71], "second": [3, 5, 9, 19, 25, 29, 39, 45, 47, 49, 55, 56, 57, 65, 68, 70, 71, 75, 78, 100, 102, 107, 110, 111, 112], "secret": 64, "section": [1, 25, 39, 45, 71, 73, 74, 75, 76, 78, 80, 85, 87, 88, 92, 100], "secur": [25, 39, 45, 69], "see": [0, 1, 3, 5, 8, 9, 12, 17, 22, 23, 25, 36, 39, 45, 46, 51, 55, 56, 57, 59, 63, 65, 70, 71, 74, 75, 76, 85, 87, 91, 97, 100, 101, 104, 105, 107, 108, 109, 110, 111, 113], "seealso": [25, 26], "seed": [3, 22, 23, 25, 39, 47, 49, 51, 63, 71, 95, 102, 104, 108], "seen": [19, 112], "seg": 57, "seg_a": [25, 39, 53], "seg_b": [25, 39, 53], "seg_suffix": [25, 39, 53], "segarr": [25, 39, 53, 109], "segarrai": [3, 23, 25, 28, 39, 45, 65, 68, 69, 96, 97, 103, 104, 110], "segment": [3, 18, 22, 23, 25, 28, 30, 39, 53, 55, 57, 80, 96, 97, 101, 104, 109, 111, 113], "segment_nam": [25, 39, 53], "segstr": [25, 39, 55], "select": [13, 17, 19, 22, 23, 24, 25, 28, 39, 51, 53, 65, 70, 74, 87, 88, 94, 103, 104, 108], "select_from": [3, 25, 39, 49], "self": [18, 22, 25, 39, 46, 53, 55, 97, 98, 101, 103, 107, 108, 110], "send": [18, 19, 22, 25, 28, 39, 46, 47, 53, 55, 70, 97, 103, 112], "send_arrai": [25, 28], "sens": [22, 25, 65], "sensit": [25, 39, 56], "sent": [25, 28, 81], "sep": 71, "separ": [1, 5, 20, 22, 25, 26, 28, 29, 39, 46, 51, 55, 63, 65, 71, 79, 80, 91, 97, 107, 108, 110, 113], "seq": [25, 68], "sequenc": [3, 6, 17, 18, 20, 22, 25, 26, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 57, 68, 99, 102, 104, 105, 107, 108, 111, 113], "sequenti": [25, 28, 97], "seri": [2, 22, 25, 26, 39, 47, 56, 57, 68, 69], "seriesdtyp": [25, 36, 39], "serv": 94, "server": [0, 1, 4, 5, 9, 18, 19, 20, 22, 23, 25, 26, 27, 28, 31, 32, 36, 39, 45, 46, 47, 51, 53, 55, 56, 64, 65, 73, 75, 76, 88, 89, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 113], "server_util": [0, 1], "serverdaemon": 70, "serverhostnam": 19, "servermodul": [1, 25, 28, 75, 76, 91], "serverport": 19, "session": [25, 28, 75, 85], "set": [1, 3, 18, 20, 22, 23, 25, 26, 28, 31, 36, 39, 45, 46, 47, 49, 53, 54, 55, 56, 64, 65, 70, 71, 72, 74, 79, 80, 87, 88, 89, 90, 91, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 113], "set_categori": 18, "set_dtyp": [25, 26, 98], "set_funct": [9, 69], "set_jth": [25, 39, 53], "set_xlim": 63, "setchplenv": [89, 90], "setdefault": [25, 36, 39], "setdiff": [25, 39, 53], "setdiff1d": [25, 39, 49, 53, 70, 78, 96, 111], "setfield": [25, 36, 39], "setflag": [25, 36, 39], "setop": 96, "setup": [1, 87, 93], "setxor": [25, 39, 53], "setxor1d": [25, 39, 49, 53, 70, 78, 96, 111], "sever": [70, 78, 80, 88, 89, 90, 97, 100, 102], "sf": 63, "sh": [89, 90], "shallow": [23, 25, 36, 39, 103], "shape": [3, 5, 6, 9, 12, 17, 18, 22, 25, 26, 28, 36, 39, 44, 45, 46, 47, 48, 49, 51, 54, 55, 57, 58, 63, 65, 96, 100, 101, 102, 107, 108], "share": [18, 22, 23, 25, 26, 39, 46, 53, 55, 68, 74, 93, 104], "shell": [19, 24, 25, 28, 90, 97], "shellhistoryretriev": 24, "shift": [8, 12, 63], "ship": [87, 92], "short": [25, 36, 39], "shortdtyp": [25, 36, 39], "shorthand": [25, 36, 39, 46, 55], "should": [0, 1, 4, 5, 9, 17, 18, 22, 23, 25, 28, 36, 39, 45, 46, 47, 54, 55, 57, 65, 68, 70, 74, 75, 76, 78, 79, 80, 81, 85, 87, 89, 90, 92, 93, 97, 103, 104, 107, 112], "shouldn": [75, 76], "show": [22, 25, 28, 39, 45, 59, 63, 68, 87, 97, 104, 105], "show_int": [20, 25], "shown": 112, "shuffl": [51, 96], "shut": [19, 85, 91], "shutdown": [19, 75, 76, 91], "side": [1, 13, 18, 19, 22, 23, 25, 26, 27, 28, 32, 39, 46, 47, 51, 53, 54, 55, 56, 65, 70, 74, 75, 85, 91, 93, 97, 100, 101, 104, 105, 106, 107, 108, 109, 112, 113], "sigma": [25, 39, 47, 51, 108], "sign": [8, 25, 28, 36, 39, 45, 46, 51, 97, 103, 107, 108], "signal": [25, 36, 39], "signatur": [24, 70], "signedinteg": [25, 36, 39], "signific": [20, 25, 39, 45, 46, 54, 74, 91, 99, 100], "significantli": [18, 75, 101], "similar": [0, 25, 28, 39, 45, 55, 71, 78, 97, 107, 109, 113], "similarli": [71, 78], "simpl": [0, 78, 91, 105], "simplest": 71, "simpli": [18, 19, 22, 25, 39, 45, 102], "simplifi": [0, 71], "simul": [89, 90], "sin": [8, 17, 25, 39, 45, 96, 100], "sinc": [1, 5, 25, 39, 45, 76, 101, 103, 107, 113], "sine": [8, 25, 39, 45, 100], "singl": [0, 2, 3, 4, 5, 9, 17, 18, 20, 22, 23, 25, 26, 28, 30, 36, 39, 45, 46, 47, 49, 51, 53, 54, 55, 65, 75, 76, 78, 80, 82, 87, 91, 95, 97, 102, 103, 104, 106, 108, 109, 111], "singlecomplex": [25, 36, 39], "singleton": [12, 13, 16, 17, 25, 39, 46, 56, 100, 105], "sinh": [8, 25, 39, 45], "siphash": [25, 39, 45], "siphash128": [18, 25, 39, 55], "site": 87, "situat": [25, 39, 47], "six": [25, 39, 55], "size": [3, 5, 9, 12, 18, 21, 22, 23, 25, 26, 28, 30, 36, 39, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 63, 65, 68, 71, 78, 81, 82, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113], "skew": [25, 63], "skip": [0, 1, 23, 25, 28, 36, 39, 55, 89, 97, 104, 111], "skipna": [23, 25, 39, 104], "slice": [17, 18, 22, 25, 39, 46, 48, 78, 96, 101, 103, 109, 113], "slice_bit": [25, 39, 46], "slightli": [22, 25, 28, 103], "slower": [18, 113], "small": [22, 25, 39, 45, 65, 80, 97], "smaller": [17, 25, 65, 74, 79, 97], "smallest": [22, 23, 25, 39, 46, 100, 104], "smallest_norm": 7, "smap": 71, "smemtrack": 1, "smep": 71, "smith": 78, "snappi": [18, 22, 25, 26, 28, 39, 46, 53, 55, 71, 82, 87], "snapshot": [25, 28], "so": [0, 1, 15, 17, 18, 20, 22, 23, 25, 28, 39, 44, 45, 46, 51, 53, 55, 71, 73, 74, 75, 76, 85, 91, 92, 93, 97, 100, 103, 104, 108, 111], "socket": [19, 112], "softwar": 89, "some": [0, 3, 5, 18, 22, 25, 28, 39, 49, 63, 72, 78, 82, 87, 101, 103, 109, 113], "someon": [0, 74], "someth": [74, 75, 93, 112], "sometim": [51, 63, 91, 107], "somewhat": 73, "somewher": 70, "sort": [1, 3, 13, 15, 17, 18, 22, 23, 25, 36, 39, 45, 46, 49, 53, 55, 57, 65, 68, 69, 74, 88, 95, 96, 100, 101, 102, 104, 105, 111, 113], "sort_index": [22, 25, 65, 110], "sort_valu": [18, 22, 25, 65, 103, 110], "sorted_df1": [22, 25, 103], "sorted_df2": [22, 25, 103], "sorter": [13, 25, 39, 54], "sorting_funct": [9, 69], "sortingalgorithm": [25, 39, 54, 99], "sought": [25, 39, 55], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 68, 72, 80, 85, 87, 89, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113], "space": [0, 1, 3, 6, 17, 25, 39, 45, 47, 49, 55, 56, 71, 87, 91, 102, 105, 113], "span": [25, 39, 55], "sparrayclass": [25, 69], "spars": [3, 23, 25, 39, 57, 104, 107], "sparse_sum_help": 57, "sparsematrix": [25, 69], "special": [20, 25, 36, 39, 55, 61, 63, 69, 107], "special_objtyp": [20, 25, 39, 56], "special_str": [25, 39, 55], "specif": [0, 5, 9, 21, 22, 25, 28, 36, 39, 51, 63, 68, 76, 79, 80, 81, 89, 91, 96, 97, 103, 108], "specifi": [1, 3, 5, 6, 7, 9, 10, 12, 15, 17, 20, 22, 23, 25, 26, 28, 29, 36, 39, 44, 45, 46, 47, 48, 51, 53, 55, 56, 57, 59, 63, 65, 68, 70, 71, 75, 81, 97, 100, 102, 103, 104, 108], "speed": [18, 25, 39, 49, 73, 77, 88, 91, 101, 102, 111], "sphinx": [69, 87, 92], "splash": 1, "split": [25, 33, 39, 55, 74, 96], "spread": 97, "sqrt": [8, 23, 25, 39, 46, 51, 100, 104, 108], "squar": [8, 23, 25, 39, 45, 46, 51, 61, 63, 100, 104, 108], "squared_test": [25, 61], "squash": 0, "squeez": [12, 25, 36, 39, 44], "src": [70, 91], "ss": 71, "ssbd": 71, "sse": 71, "sse2": 71, "sse4_1": 71, "sse4_2": 71, "ssegmentedstr": [25, 39, 55], "ssh": 1, "ssse3": 71, "st": 70, "stabl": [15, 25, 39, 54, 99], "stack": [12, 25, 39, 48, 65, 110, 113], "stale": 87, "standalon": [25, 39, 46, 56, 105], "standard": [0, 5, 16, 18, 23, 25, 39, 45, 46, 47, 51, 56, 63, 70, 71, 72, 100, 104, 105, 108], "standard_exponenti": [51, 96], "standard_gamma": 51, "standard_norm": [25, 39, 47, 51, 96], "standardize_categori": 18, "start": [0, 3, 5, 6, 9, 18, 21, 22, 23, 25, 26, 30, 32, 33, 36, 39, 45, 46, 47, 53, 54, 55, 56, 65, 80, 96, 99, 101, 102, 104, 106, 109, 113], "start_comm_diagnost": 21, "start_verbose_comm": 21, "startswith": [18, 25, 39, 55, 96, 101], "startup": [1, 85, 96], "stat": [25, 61, 69, 71], "state": [18, 25, 28, 39, 51, 55, 74, 108], "static": [18, 25, 26, 39, 46, 53, 55, 104], "statist": [21, 23, 25, 39, 46, 61, 71, 96, 100, 104], "statistical_funct": [9, 69], "statu": 19, "std": [16, 22, 23, 25, 36, 39, 46, 56, 63, 65, 96, 100, 104, 105], "stddev": 71, "stddev_outli": 71, "stderr": 88, "stdev": [51, 108], "stdout": 88, "step": [0, 6, 23, 25, 36, 39, 71, 72, 73, 76, 87, 91, 94, 111, 112], "stepfil": 63, "stibp": 71, "stick": [25, 39, 55, 76], "still": [80, 113], "stop": [6, 19, 21, 25, 36, 39, 47, 102, 106], "stop_comm_diagnost": 21, "stop_verbose_comm": 21, "storag": [22, 25, 65, 71], "storage_opt": [22, 25, 65], "store": [5, 9, 13, 20, 21, 22, 23, 25, 26, 28, 36, 39, 47, 51, 55, 64, 70, 71, 79, 80, 83, 93, 97, 101, 102, 104, 109, 113], "store_path": [25, 28], "str": [2, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 45, 46, 47, 48, 51, 53, 55, 56, 57, 59, 63, 64, 65, 68, 71, 79, 97, 100, 101, 102, 103, 104, 107, 108, 112, 113], "str_": [25, 36, 39, 45], "str_acc": [25, 65], "str_scalar": [18, 25, 33, 36, 39, 55, 101], "straight": 74, "strategi": [92, 93, 97], "strdtype": [25, 36, 39], "stream": [5, 9, 51, 75, 108], "streamhandl": [25, 39], "strict": [22, 23, 25, 36, 39, 45, 63, 65, 68, 107], "strict_typ": [25, 28], "stricttyp": [25, 28, 97], "stride": [22, 25, 30, 36, 39, 47, 102, 103, 106], "string": [0, 1, 3, 4, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 36, 39, 44, 45, 46, 47, 49, 53, 54, 56, 57, 58, 61, 63, 64, 65, 68, 69, 70, 71, 74, 91, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111], "string_oper": [2, 25], "stringa": [25, 39, 55], "stringaccessor": [2, 25], "stringb": [25, 39, 55], "stringc": [25, 39, 55], "stringifi": [22, 25, 103], "strings0": [25, 39, 55], "strings1": [25, 39, 55], "strings2": [25, 39, 55], "strings_arrai": [25, 39, 55, 80], "strings_encodedecod": 71, "strings_end": [25, 39, 55], "strings_pdarrai": [25, 39, 55], "strings_start": [25, 39, 55], "strip": [25, 36, 39, 55], "strive": 74, "strongli": [25, 39, 45], "structur": [18, 22, 25, 28, 39, 53, 78, 82, 103, 104, 107, 109, 113], "strucutur": 109, "stub": 92, "style": [0, 18, 20, 22, 23, 25, 26, 39, 46, 53, 55, 56, 65, 103, 104, 107], "sub": [25, 33, 36, 39, 53, 55, 96], "subclass": [5, 25, 36, 39], "subdir": 89, "subdirectori": 70, "subdomain": [5, 9], "subject": [1, 25, 39, 46, 56], "subn": [25, 39, 55], "subplot": 63, "subsequ": [25, 39, 45, 80], "subset": [5, 18, 19, 22, 24, 25, 39, 53, 91, 100, 103], "substanti": 74, "substitu": [25, 39, 55], "substitut": [25, 33, 39, 55, 85, 87], "substr": [18, 20, 25, 39, 55, 96, 101], "subsystem": 93, "subtract": [8, 25, 39, 45], "succeed": [39, 45, 107], "success": [18, 19, 22, 25, 26, 28, 30, 39, 45, 46, 53, 55, 107, 112], "successfulli": 90, "sudo": 93, "suffix": [22, 25, 28, 39, 53, 55, 80, 96], "suggest": [76, 93], "suitabl": [13, 25, 39, 54], "sum": [8, 16, 22, 23, 25, 36, 39, 45, 46, 51, 53, 56, 57, 65, 96, 100, 104, 105, 108], "summar": [96, 97], "summari": [0, 22, 25], "super": 0, "supercomput": 84, "suppli": [23, 25, 28, 39, 45, 46, 47, 53, 56, 80, 82, 83, 102, 103, 105], "support": [0, 3, 4, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 36, 39, 45, 46, 47, 49, 53, 54, 55, 56, 64, 65, 70, 78, 81, 85, 87, 89, 90, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113], "supported_opeq": [25, 39, 56], "supported_scalar": [25, 65], "supported_with_datetim": [25, 39, 56], "supported_with_pdarrai": [25, 39, 56], "supported_with_r_datetim": [25, 39, 56], "supported_with_r_pdarrai": [25, 39, 56], "supported_with_r_timedelta": [25, 39, 56], "supported_with_timedelta": [25, 39, 56], "supportsbufferprotocol": 6, "suppress": [22, 25], "sure": [0, 22, 25, 26, 28, 39, 46, 55, 74, 93], "surpris": 17, "surround": [0, 25, 36, 39, 63], "surviv": [3, 63], "swap": [25, 36, 39], "swapax": [25, 36, 39], "switch": 91, "sy": [22, 23, 25, 36, 39, 63, 65], "symbol": [19, 25, 27, 39, 46, 53, 55, 70, 107], "symentri": 70, "symlink": 93, "symmetr": [3, 23, 25, 36, 39, 49, 53, 78, 96, 111], "symmetric_differ": [23, 25, 36, 39], "symtab": 70, "symtabl": 19, "sync": 90, "synchron": [18, 88], "syntax": 106, "syscal": 71, "system": [1, 18, 25, 39, 46, 51, 55, 64, 70, 71, 87, 90, 91, 92, 93, 94, 97, 100, 101, 107, 108, 112], "t": [0, 3, 5, 9, 17, 22, 25, 28, 36, 39, 45, 46, 49, 55, 56, 70, 74, 75, 76, 87, 89, 90, 93, 95], "t1": 30, "t2": 30, "tab": [0, 74, 87, 88], "tabl": [3, 19, 21, 22, 25, 27, 39, 46, 53, 55, 65, 70, 71, 107], "tablefmt": [22, 25, 65], "tablul": [22, 25, 65], "tabul": [22, 25, 65, 92], "tag": [0, 25, 28, 31, 74, 76], "tag_data": [25, 28], "tagdata": [25, 28], "taht": 97, "tail": [22, 23, 25, 39, 47, 65, 96, 104], "take": [0, 4, 10, 20, 23, 25, 31, 36, 39, 45, 46, 51, 63, 70, 72, 73, 75, 76, 78, 81, 97, 104, 108], "taken": [17, 74, 91], "tan": [8, 25, 39, 45], "tangent": [8, 25, 39, 45], "tanh": [8, 25, 39, 45], "tar": [85, 87, 89, 90], "target": [21, 25, 29, 39, 45, 47, 71, 73, 74, 87, 97, 102, 106, 107], "task": [1, 19], "tb": 19, "tblgen": 93, "tcp": [19, 85, 112], "team": 74, "technic": [25, 28], "techniqu": 76, "tell": [25, 28, 70, 71, 97], "temp_c": [22, 25], "temp_f": [22, 25], "temp_k": [22, 25], "temporarili": 87, "tend": 73, "tensor": [6, 23, 25, 39, 45, 104], "tensordot": 11, "term": [3, 25, 39, 49], "termin": [25, 28, 80, 85, 93, 112], "test": [3, 18, 21, 22, 25, 28, 39, 49, 61, 69, 72, 74, 75, 76, 78, 85, 91, 103, 111], "test_": 0, "test_command": 91, "test_data_url": 1, "testmsg": 91, "text": [74, 79, 97], "texttt": [51, 108], "th": [5, 6, 9, 12, 17, 25, 39, 45, 53, 100], "than": [3, 5, 9, 12, 17, 18, 22, 23, 25, 26, 28, 36, 39, 44, 45, 46, 47, 49, 51, 53, 54, 55, 65, 72, 74, 75, 82, 97, 99, 101, 102, 103, 104, 107, 108, 111, 113], "thei": [1, 12, 17, 18, 19, 20, 22, 23, 25, 26, 28, 39, 45, 46, 53, 55, 56, 57, 65, 68, 72, 74, 79, 80, 81, 88, 89, 90, 97, 101, 104, 110], "them": [1, 21, 22, 25, 28, 39, 49, 55, 63, 74, 89, 97, 103, 111], "themselv": [25, 39, 44, 46], "therefor": 80, "theta": [17, 51], "thi": [0, 1, 4, 5, 6, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 31, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 85, 87, 89, 90, 91, 93, 94, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113], "thin": [20, 25], "thing": [0, 5, 9, 78], "third": [25, 39, 47, 74, 87, 88, 102], "thirti": 3, "those": [0, 5, 9, 17, 25, 39, 54, 78, 89, 91, 99, 106], "though": [21, 22, 25, 78], "thousand": 97, "three": [3, 25, 39, 47, 49, 55, 56, 70, 87, 102, 106, 107, 111], "three_____four____f": [25, 39, 55], "thresh": [22, 25], "threshold": 113, "thrift": 87, "through": [1, 25, 39, 45, 68, 70, 72, 74, 85, 90], "throw": [12, 70], "thrown": [18, 22, 25, 26, 27, 28, 32, 39, 46, 47, 53, 55, 56, 65, 97, 100, 101, 105, 107, 113], "thu": [5, 9, 25, 28, 39, 44, 47, 54, 80, 81, 99, 109], "tiebreak": 3, "tile": [12, 25, 39, 44], "time": [1, 18, 19, 22, 23, 25, 26, 28, 30, 39, 44, 45, 46, 51, 53, 55, 56, 65, 71, 73, 75, 76, 79, 80, 82, 91, 95, 97, 101, 104, 105, 108, 111, 113], "timeclass": [25, 28, 39, 69], "timedelta": [25, 28, 39, 47, 56], "timedelta64": [17, 25, 39, 56], "timedelta64dtyp": [25, 36, 39], "timedelta_rang": [25, 39, 56], "timedeltaindex": [25, 39, 56], "timeout": [1, 19, 112], "timer": 71, "times2": 70, "times_pi": [4, 25], "timeseri": [25, 39, 56], "timestamp": 30, "timezon": [25, 39, 56], "tip": [77, 87], "titl": [0, 25, 39, 55, 74, 88], "titlecas": [25, 39, 55], "tm": [25, 68, 71], "to_csv": [22, 25, 26, 28, 39, 46, 55, 79, 83], "to_cuda": [25, 39, 46], "to_datafram": [25, 65], "to_datetim": [25, 39, 47], "to_devic": [5, 9], "to_dict": [25, 26], "to_hdf": [18, 20, 22, 23, 25, 26, 28, 39, 46, 53, 55, 80, 83, 96, 97, 104], "to_list": [3, 5, 9, 18, 20, 25, 26, 39, 46, 53, 55, 65, 78, 97, 107], "to_markdown": [22, 25, 65], "to_ndarrai": [5, 9, 18, 20, 25, 26, 39, 45, 46, 47, 53, 55, 56, 59, 65, 78, 96, 97, 101, 105, 107, 109, 113], "to_panda": [18, 22, 25, 26, 39, 56, 65, 78, 103, 110], "to_parqet": [25, 39, 46], "to_parquet": [18, 22, 25, 26, 28, 39, 46, 53, 55, 82, 83, 97], "to_str": 18, "to_zarr": [25, 28], "tobyt": [25, 36, 39], "toencod": [25, 39, 55], "tofil": [25, 36, 39], "togeth": [18, 22, 23, 25, 39, 55, 57, 103, 104, 111], "token": [1, 19, 64, 85, 112], "token_hex": 64, "token_str": 85, "token_valu": [19, 112], "toleft": [25, 39, 55], "toler": [25, 68], "tolist": [5, 9, 25, 36, 39], "too": [5, 9, 21, 73, 97], "tool": [0, 87, 89, 90], "toolset": 78, "top": [0, 25, 65, 70, 75, 80, 87, 89, 90, 93, 94, 110], "topn": [25, 65, 110], "tostr": [25, 36, 39], "total": [19, 22, 23, 25, 28, 39, 55, 71, 97, 104], "total_mem": 19, "total_second": [25, 39, 56], "totestmsg": 91, "touch": 106, "toward": [25, 36, 39, 47, 63], "trace": [25, 36, 39], "traceback": [25, 68], "track": [0, 75, 82], "trail": [25, 36, 39, 46, 55], "trait": 24, "transfer": [18, 22, 25, 28, 39, 46, 53, 55, 71, 97, 101, 103, 107, 109, 113], "transfer_r": 71, "transform": [25, 26, 51, 108], "transit": 78, "transpos": [5, 9, 25, 36, 39, 45, 53, 97], "trapezoid": 17, "trapezoidal_rul": 17, "trapz": 17, "treat": [3, 20, 22, 25, 36, 39, 44, 54, 71, 78, 99, 103], "trial": [71, 95], "triangl": [25, 39, 45], "trigger": 21, "tril": [6, 25, 39, 45], "triu": [6, 25, 39, 45], "trivial": 3, "true": [1, 3, 6, 7, 13, 15, 17, 18, 19, 20, 22, 23, 25, 26, 28, 30, 32, 33, 36, 39, 45, 46, 47, 49, 51, 53, 55, 56, 57, 59, 63, 65, 68, 71, 78, 90, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113], "true_dt": 30, "trunc": [8, 25, 39, 45], "truncat": [8, 18, 20, 23, 25, 26, 28, 36, 39, 45, 46, 53, 55, 63, 80, 82, 104], "try": [0, 25, 26, 28, 36, 39, 46, 87, 93], "tsc": 71, "tukei": [25, 61], "tune": 1, "tunnel": 1, "tup": [25, 39, 48], "tupl": [3, 5, 6, 7, 9, 12, 13, 14, 16, 17, 18, 20, 22, 23, 25, 26, 28, 30, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 55, 56, 57, 58, 65, 78, 97, 100, 101, 102, 103, 104, 105, 107, 110, 111], "turn": [25, 36, 39, 75, 85], "tutori": 93, "twenti": 3, "twice": [25, 39, 47, 97], "two": [3, 8, 11, 17, 18, 20, 22, 23, 25, 26, 30, 36, 39, 45, 46, 47, 49, 53, 55, 56, 57, 65, 68, 70, 78, 79, 91, 97, 100, 102, 104, 111, 113], "twoarrayradixsort": [25, 39, 54, 99], "txt": 1, "typ": [25, 36, 39], "type": [2, 3, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 68, 70, 71, 81, 87, 92, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 110, 111, 112, 113], "typecheck": [25, 39, 45, 70], "typeerror": [3, 18, 20, 22, 23, 25, 26, 28, 30, 31, 39, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 65, 70, 97, 99, 100, 101, 102, 104, 105, 108, 110, 111], "typeguard": 92, "typehint": 92, "typevar": 107, "typic": [0, 20, 25, 28, 36, 39, 70, 75, 76, 101], "tz": [25, 39, 56], "tzg": [25, 39, 47], "tzinfo": [25, 39, 56], "u": [0, 20, 25, 36, 39, 47, 56, 74, 88, 89, 90, 97], "u0": [22, 25, 26], "u0009": [25, 39, 55], "u0009nu000bu000cu000d": [25, 39, 55], "u000b": [25, 39, 55], "u000c": [25, 39, 55], "u000d": [25, 39, 55], "u5": [25, 39, 55], "ub": 63, "ubuntu": 93, "ubyt": [25, 36, 39], "ubytedtyp": [25, 36, 39], "ucs4": [25, 36, 39], "ui": 1, "uint": [3, 22, 25, 28, 36, 39, 46, 47, 55, 79], "uint16": [25, 36, 39], "uint16dtyp": [25, 36, 39], "uint32": [25, 28, 36, 39, 97], "uint32dtyp": [25, 36, 39], "uint64": [3, 20, 23, 25, 36, 39, 45, 46, 47, 51, 54, 57, 71, 80, 95, 99, 100, 102, 103, 105, 107], "uint64dtyp": [25, 36, 39], "uint8": [25, 36, 39, 45, 55, 80, 105, 107, 113], "uint8dtyp": [25, 36, 39], "uintc": [25, 36, 39], "uintdtyp": [25, 36, 39], "uintp": [25, 36, 39], "uintptr_t": [25, 36, 39], "ulongdtyp": [25, 36, 39], "ulonglongdtyp": [25, 36, 39], "unabl": [18, 20, 22, 23, 25, 26, 39, 46, 55, 56, 65, 104], "unaffect": 71, "unbias": [23, 25, 39, 46, 100, 104], "unchang": [0, 18, 25, 36, 39], "undefin": [25, 39, 47, 51, 102], "under": [0, 2, 17, 18, 20, 22, 23, 25, 26, 28, 39, 46, 47, 53, 55, 56, 65, 71, 74, 97, 101, 104, 107], "under_map": [25, 39, 55], "under_split": [25, 39, 55], "underflow": [39, 45, 107], "underli": [18, 20, 22, 23, 25, 26, 39, 45, 51, 53, 56, 65, 68, 104, 108], "underneath": 74, "underscor": [5, 9], "undoubl": 70, "unequ": [25, 39, 45, 100], "unicod": [25, 36, 39], "unicode_": [25, 36, 39], "uniform": [25, 39, 45, 47, 51, 54, 96, 97, 99, 100, 102], "uniformli": [25, 39, 47, 51, 102, 108], "uniniti": [25, 39, 46], "uninterpret": [39, 45, 107], "union": [4, 6, 18, 19, 22, 23, 25, 27, 28, 30, 36, 39, 45, 46, 47, 48, 49, 51, 53, 78, 96, 97, 101, 102, 104, 105, 107, 111], "union1d": [18, 25, 39, 49, 53, 70, 78, 96, 111], "uniqu": [3, 12, 14, 18, 22, 23, 25, 26, 36, 39, 45, 46, 49, 53, 55, 65, 78, 80, 96, 97, 101, 104, 105, 106, 109, 110, 111, 113], "unique_al": 14, "unique_count": 14, "unique_invers": 14, "unique_kei": [23, 25, 39, 96, 104], "unique_key_idx": 80, "unique_valu": [14, 25, 39, 45, 46, 105], "uniqueallresult": 14, "uniquecountsresult": 14, "uniqueinverseresult": 14, "unit": [0, 1, 19, 22, 25, 26, 39, 45, 56, 57, 65, 68], "unknown": [22, 25, 26, 28, 39, 46, 47, 55], "unless": [1, 22, 23, 25, 28, 39, 45, 51, 55, 104, 108], "unlik": [22, 25, 28, 36, 39, 55, 56], "unlimit": [22, 25], "unnecessari": 76, "unord": [23, 25, 36, 39, 53], "unpack": [25, 39, 55, 85, 90, 113], "unregist": [18, 20, 22, 23, 25, 26, 39, 46, 53, 55, 56, 57, 65, 96, 104], "unregister_al": [25, 39, 57], "unregister_categorical_by_nam": 18, "unregister_dataframe_by_nam": [22, 25], "unregister_groupby_by_nam": [23, 25, 39, 96, 104], "unregister_pdarray_by_nam": [25, 39, 46], "unregister_segarray_by_nam": [25, 39, 53], "unregister_strings_by_nam": [25, 39, 55], "unrel": 102, "unsaf": [25, 39, 48], "unselect": 88, "unset": [75, 90], "unsign": [17, 25, 36, 39, 103], "unsignedinteg": [25, 36, 39], "unsort": [22, 25, 103], "unsqueez": 3, "unstack": 12, "unsupport": [23, 25, 28, 39, 54, 64, 97, 111], "unsupportedoper": 29, "unsupportedopt": 29, "unsur": 0, "until": [18, 20, 22, 23, 25, 26, 39, 46, 53, 55, 56, 65, 76, 104], "unus": [18, 25, 28, 39, 48, 65, 97], "up": [1, 3, 18, 19, 22, 23, 25, 28, 39, 45, 46, 49, 53, 55, 65, 70, 72, 73, 76, 77, 87, 88, 89, 90, 91, 97, 100, 101, 102, 110, 111, 113], "updat": [18, 20, 22, 23, 25, 26, 28, 36, 39, 46, 53, 55, 56, 59, 65, 82, 87, 89, 93, 97, 104], "update_hdf": [18, 20, 22, 23, 25, 26, 28, 39, 46, 53, 55], "update_nrow": [22, 25], "upgrad": [87, 92], "upon": [25, 39, 45, 55, 90, 91, 94, 100], "upper": [6, 25, 39, 45, 51, 55, 74, 108], "upper_bounds_exclus": 3, "upper_bounds_inclus": 3, "uppercamelcas": 0, "uppercas": [25, 39, 47, 55], "upstream": [74, 89, 90], "url": [1, 19, 22, 25, 65, 85, 87, 112], "us": [0, 1, 3, 4, 5, 6, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31, 36, 39, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 68, 70, 71, 72, 73, 74, 77, 79, 80, 81, 82, 89, 90, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "usag": [5, 9, 22, 25, 26, 65, 77, 85, 95, 109, 112], "use_seri": [22, 25, 103], "usedmodul": [75, 76, 91], "usehash": [25, 39, 55], "user": [0, 1, 18, 20, 22, 23, 25, 26, 28, 31, 36, 39, 45, 46, 47, 53, 55, 56, 57, 59, 64, 65, 71, 74, 77, 78, 80, 81, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 97, 101, 104, 107], "user_defined_nam": [18, 20, 22, 23, 25, 26, 39, 46, 53, 55, 56, 65, 104], "userdict": [22, 25, 60], "userid": [22, 25, 103, 104], "usernam": [22, 25, 64, 65, 103], "username_token": 64, "ushort": [25, 36, 39], "ushortdtyp": [25, 36, 39], "usual": [0, 22, 23, 25, 39, 104], "utf": [22, 25, 28, 39, 55], "utf8proc": 87, "util": [0, 25, 28, 39, 69, 74, 87, 89, 90], "utility_funct": [9, 69], "v": [0, 23, 25, 36, 39, 53, 54, 55, 63, 65, 74, 88, 89, 95, 104], "v1": [25, 61], "v2": [23, 25, 39, 104], "v2022": 74, "v2023": 76, "val": [3, 23, 25, 36, 39, 53, 57, 63, 65, 104], "val1": 57, "val2": 57, "val_suffix": [25, 39, 53], "valid": [3, 4, 18, 25, 28, 36, 39, 45, 46, 47, 55, 63, 65, 88, 97, 101, 107], "validate_kei": [25, 65], "validate_v": [25, 65], "vals1": 57, "vals2": 57, "valsiz": [25, 39, 53], "valu": [3, 4, 5, 6, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 36, 39, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 61, 63, 65, 68, 70, 71, 78, 80, 82, 90, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113], "valuabl": 91, "value_count": [25, 39, 45, 46, 65, 96, 105, 110], "value_label": [25, 65], "value_nam": [25, 39, 53], "value_s": [71, 95], "valueerror": [3, 5, 9, 12, 18, 19, 22, 23, 25, 26, 28, 29, 30, 36, 39, 45, 46, 47, 49, 51, 53, 54, 55, 65, 97, 99, 100, 101, 102, 104, 105, 108, 110, 112], "values2": [23, 25, 39, 104], "valuetypeerror": [25, 39, 45], "vanish": [25, 36, 39], "var": [0, 1, 16, 22, 23, 25, 36, 39, 46, 63, 65, 70, 96, 100, 104, 105], "vari": [25, 39, 46, 68, 78, 87, 90, 92, 94, 109], "variabl": [0, 23, 25, 28, 30, 36, 39, 46, 51, 53, 55, 63, 64, 70, 71, 72, 89, 90, 91, 100, 104, 108, 109, 113], "varianc": [16, 23, 25, 39, 46, 51, 63, 100, 104, 105, 108], "variat": 63, "varieti": [51, 108], "variou": [1, 79], "vcxsrv": 93, "ve": [76, 87, 89, 90], "vecdot": [11, 25, 39, 45], "vecentropi": 63, "vector": [6, 20, 23, 25, 39, 45, 96, 104], "vendor_id_raw": 71, "venv": 87, "verbos": [1, 25, 27, 31], "veri": [0, 22, 25, 78, 102, 103], "verifi": [0, 1, 22, 25, 81, 93, 97, 103], "versa": [97, 103], "version": [0, 18, 22, 25, 36, 39, 49, 57, 61, 71, 74, 80, 85, 87, 88, 89, 90, 92, 93, 111], "version_info": [25, 36, 39], "versu": [25, 28, 97], "vertic": [25, 39, 48, 53, 65, 109, 110], "via": [0, 1, 18, 21, 22, 23, 25, 36, 39, 46, 47, 55, 87, 89, 90, 97, 101, 104, 106, 107, 108, 113], "vice": [97, 103], "view": [5, 9, 25, 36, 39, 44, 74, 78, 83, 87, 88, 94, 107], "virtual": 87, "visibl": [18, 19, 25, 26, 28, 39, 46, 53, 55, 112], "visit": [85, 89, 90], "visual": [25, 59], "vm": 93, "vme": 71, "voiddtyp": [25, 36, 39], "vstack": [25, 39, 48], "vwhjex": [25, 39, 47], "w": [18, 23, 25, 26, 32, 39, 46, 55, 56, 104, 113], "wa": [0, 18, 19, 20, 22, 23, 25, 26, 28, 36, 39, 45, 46, 53, 55, 56, 65, 75, 80, 81, 87, 90, 97, 104, 107], "wai": [4, 19, 25, 36, 39, 51, 71, 75, 80, 85, 88, 91, 100, 101, 102, 103, 107, 108, 113], "wait": 21, "walk": [70, 72, 85], "want": [0, 1, 22, 25, 36, 39, 70, 85, 90, 92, 93, 103], "warmup": 71, "warn": [1, 4, 6, 8, 11, 12, 25, 28, 31, 39, 55, 97], "we": [0, 1, 3, 5, 17, 22, 25, 26, 28, 36, 39, 45, 46, 51, 55, 57, 68, 70, 71, 72, 74, 76, 78, 79, 82, 87, 88, 89, 90, 92, 93, 105, 107, 108], "web": [0, 74], "week": [25, 39, 56, 104], "weekdai": [25, 39, 56], "weekofyear": [25, 39, 56], "weight": [22, 23, 25, 39, 51, 104, 108], "welcom": 0, "well": [20, 25, 68, 71, 78, 92], "went": 112, "were": [3, 21, 23, 25, 26, 28, 39, 46, 53, 54, 55, 75, 91, 104], "wget": 89, "what": [0, 25, 36, 39, 48, 53, 70, 74, 75, 76, 91, 112], "wheel": 87, "when": [0, 1, 3, 13, 17, 18, 19, 20, 22, 23, 25, 26, 28, 36, 39, 45, 46, 49, 53, 55, 56, 57, 65, 68, 70, 71, 74, 75, 76, 78, 80, 82, 87, 88, 90, 91, 92, 93, 97, 100, 101, 103, 104, 107, 111], "whenev": 113, "where": [1, 3, 5, 9, 12, 13, 17, 18, 19, 21, 22, 23, 25, 26, 28, 29, 30, 39, 45, 46, 47, 49, 51, 53, 54, 55, 57, 64, 65, 70, 71, 72, 73, 80, 85, 89, 90, 96, 97, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113], "wherea": 113, "wherev": 76, "whether": [6, 7, 12, 13, 15, 16, 17, 18, 22, 23, 25, 26, 28, 30, 32, 36, 39, 45, 46, 49, 53, 55, 56, 65, 68, 78, 97, 100, 101, 105, 110, 111, 113], "which": [0, 3, 4, 6, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 65, 68, 71, 73, 74, 76, 78, 87, 89, 90, 91, 95, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113], "whichev": 93, "while": [3, 25, 28, 39, 54, 70, 76, 80, 82, 87, 93, 97, 99], "whitespac": [25, 28, 36, 39, 55, 63], "whl": 87, "who": [0, 89, 90], "whole": [21, 25, 39, 55, 74], "whose": [6, 12, 22, 25, 36, 39, 53, 55, 65, 110], "why": 70, "wide": [51, 108, 113], "width": [20, 25, 39, 45, 105, 113], "wiki": [0, 17, 25, 61], "wikipedia": [17, 25, 61], "window": [30, 64, 85, 94], "wise": [8, 18, 25, 39, 45, 46, 48, 49, 96, 111], "wish": 91, "within": [6, 12, 18, 19, 22, 23, 24, 25, 26, 28, 39, 46, 47, 51, 53, 55, 71, 80, 82, 102, 103, 104, 108, 109], "without": [6, 18, 25, 28, 39, 46, 51, 76, 87, 97, 103, 108], "won": 76, "word": [3, 51, 108], "work": [0, 4, 18, 22, 25, 28, 39, 46, 55, 56, 60, 75, 78, 80, 82, 88, 89, 90, 91, 97, 101, 103, 105, 106], "workflow": [0, 25, 28, 57, 74, 88, 91, 97], "workhors": 104, "world": [25, 39, 51, 55, 108], "worri": 75, "wors": 75, "would": [13, 25, 28, 39, 54, 57, 72, 76, 81, 97, 100, 104], "wrap": 70, "wraparound": 71, "wrapper": [5, 6, 8, 9, 20, 25, 36, 39, 68, 107], "writ": 82, "write": [1, 5, 9, 18, 22, 25, 26, 28, 29, 31, 39, 46, 53, 55, 65, 70, 71, 74, 79, 97], "write_fil": [25, 28, 97], "write_line_to_fil": 29, "write_log": [25, 31], "writeln": 0, "written": [18, 22, 23, 25, 26, 28, 29, 31, 39, 46, 53, 55, 65, 70, 79, 80, 81, 82, 83, 87, 97, 104, 107], "wrong": [25, 28, 112], "wrote": 0, "wsl": [87, 93], "wsl2": [71, 94], "wslconfig": 93, "wss": [25, 39, 47], "wt": [22, 25, 65], "x": [0, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 28, 36, 39, 44, 45, 46, 51, 53, 55, 57, 59, 61, 62, 63, 70, 78, 93, 97, 100, 101, 103, 104, 107, 108, 113], "x00": [25, 36, 39], "x00b": [25, 36, 39], "x00c": [25, 36, 39], "x1": [8, 11, 13, 25, 39, 45], "x2": [8, 11, 13, 25, 39, 45], "x410": 93, "x86": 89, "x86_64": [25, 36, 39, 71, 89, 93], "x_edg": [25, 39, 45], "xgetbv1": 71, "xlabel": [25, 59], "xlogi": [25, 62], "xor": [8, 22, 23, 25, 39, 46, 53, 96, 104], "xore": [25, 39, 45], "xp": 17, "xsave": 71, "xsavec": 71, "xsaveopt": 71, "xserver": 93, "xtol": 63, "xtopologi": 71, "xvf": 89, "xy": 6, "xzf": [85, 90], "y": [17, 25, 36, 39, 45, 46, 59, 61, 62, 63, 70, 72, 89], "y_edg": [25, 39, 45], "yaml": 92, "yaml_fil": 92, "ye": 72, "year": [25, 39, 56], "yet": [3, 6, 8, 11, 25, 39, 53, 87, 97], "yhf": [25, 39, 47], "yield": [1, 18, 22, 25, 26, 28, 39, 46, 53, 55, 103, 106], "yml": [85, 89, 90, 92], "you": [0, 1, 18, 20, 22, 23, 25, 26, 28, 36, 39, 46, 53, 55, 56, 65, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 85, 87, 88, 89, 90, 91, 92, 93, 94, 103, 104, 106], "your": [0, 1, 22, 25, 26, 28, 39, 46, 55, 72, 73, 74, 76, 77, 85, 87, 88, 89, 90, 91, 92, 93, 94, 103, 112, 113], "your_fork": [89, 90], "your_machin": 85, "yum": 89, "yyyi": 74, "z": [25, 39, 45, 47], "zarr": [5, 9, 25, 28], "zarrai": [25, 28], "zarrmsg": [25, 28], "zero": [6, 13, 21, 23, 25, 28, 36, 39, 45, 46, 47, 63, 74, 96, 102, 104, 106, 107], "zero_up": 3, "zerodivisionerror": [25, 39, 46, 47, 102], "zeromq": [87, 92], "zeros_lik": [6, 25, 39, 47, 96, 102], "zig": [51, 108], "ziggurat": [51, 108], "zip": 85, "zmq": [1, 87], "zmqchannel": [19, 112], "zone": [25, 39, 56], "zsh": 90, "zshrc": 90, "zstd": [18, 22, 25, 26, 28, 39, 46, 53, 55, 71, 82], "\u00b2": [25, 39, 55]}, "titles": ["Contributing", "Environment Variables", "arkouda.accessor", "arkouda.alignment", "arkouda.apply", "arkouda.array_api.array_object", "arkouda.array_api.creation_functions", "arkouda.array_api.data_type_functions", "arkouda.array_api.elementwise_functions", "arkouda.array_api", "arkouda.array_api.indexing_functions", "arkouda.array_api.linalg", "arkouda.array_api.manipulation_functions", "arkouda.array_api.searching_functions", "arkouda.array_api.set_functions", "arkouda.array_api.sorting_functions", "arkouda.array_api.statistical_functions", "arkouda.array_api.utility_functions", "arkouda.categorical", "arkouda.client", "arkouda.client_dtypes", "arkouda.comm_diagnostics", "arkouda.dataframe", "arkouda.groupbyclass", "arkouda.history", "arkouda", "arkouda.index", "arkouda.infoclass", "arkouda.io", "arkouda.io_util", "arkouda.join", "arkouda.logger", "arkouda.match", "arkouda.matcher", "arkouda.numpy.char", "arkouda.numpy.ctypeslib", "arkouda.numpy.dtypes", "arkouda.numpy.exceptions", "arkouda.numpy.fft", "arkouda.numpy", "arkouda.numpy.lib.emath", "arkouda.numpy.lib", "arkouda.numpy.linalg", "arkouda.numpy.ma", "arkouda.numpy.manipulation_functions", "arkouda.numpy.numeric", "arkouda.numpy.pdarrayclass", "arkouda.numpy.pdarraycreation", "arkouda.numpy.pdarraymanipulation", "arkouda.numpy.pdarraysetops", "arkouda.numpy.polynomial", "arkouda.numpy.random", "arkouda.numpy.rec", "arkouda.numpy.segarray", "arkouda.numpy.sorting", "arkouda.numpy.strings", "arkouda.numpy.timeclass", "arkouda.numpy.util", "arkouda.numpy.utils", "arkouda.plotting", "arkouda.row", "arkouda.scipy", "arkouda.scipy.special", "arkouda.scipy.stats", "arkouda.security", "arkouda.series", "arkouda.sparrayclass", "arkouda.sparsematrix", "arkouda.testing", "API Reference", "Adding Your First Feature", "PyTest Benchmarks", "GASNet Development", "Reducing Memory Usage of Arkouda Builds", "Release Process", "Speeding up Arkouda Compilation", "Tips for Reproducing User Bugs", "Developer Documentation", "Examples", "CSV", "HDF5", "Import/Export", "Parquet", "File I/O", "Arkouda Documentation", "Quickstart", "Chapel API Reference", "Building the Server", "External Tools", "Linux", "MacOS", "Modular Server Builds", "Requirements", "Windows (WSL2)", "Installation", "Performance Testing", "Usage Guide", "Data I/O", "Indexs in Arkouda", "Sorting", "Arithmetic and Numeric Operations", "Categoricals", "Creating Arrays", "DataFrames in Arkouda", "GroupBy", "Summarizing Data", "Indexing and Assignment", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">pdarray</span></code> class", "Random in Arkouda", "SegArrays in Arkouda", "Series in Arkouda", "Array Set Operations", "Startup", "Strings in Arkouda"], "titleterms": {"3": [85, 112], "The": [71, 107], "access": 109, "accessor": 2, "ad": [0, 1, 70, 91], "add": 88, "align": 3, "all": 87, "alwai": 75, "an": 91, "anaconda": [89, 90, 92], "api": [69, 79, 80, 81, 82, 83, 86], "append": [103, 109], "appli": 4, "argsort": [95, 98], "argument": [71, 95], "arithmet": 100, "arkouda": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 75, 78, 79, 80, 82, 84, 85, 87, 89, 90, 91, 98, 103, 108, 109, 110, 112, 113], "arrai": [78, 102, 109, 111], "array_api": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "array_object": 5, "arrow": 87, "assign": 106, "attribut": [5, 25, 27, 39, 53, 54, 57, 64, 80], "basic": 78, "benchmark": 71, "between": 97, "black": 88, "bug": [0, 76], "build": [72, 73, 75, 76, 87, 90, 91], "cast": 107, "categor": [18, 80, 82, 101], "chang": 98, "chapel": [0, 1, 72, 86, 87, 88, 89, 90], "char": 34, "choic": 108, "class": [2, 5, 7, 9, 14, 18, 20, 22, 23, 24, 25, 26, 31, 32, 33, 36, 39, 45, 46, 51, 53, 55, 56, 60, 61, 63, 65, 107], "client": [1, 19, 70, 85, 97, 112], "client_dtyp": 20, "clone": [89, 90], "code": 0, "column": 103, "comm_diagnost": 21, "compil": [1, 75], "compress": 82, "concat": 98, "concaten": [102, 103], "conda": 87, "configur": [72, 80, 87, 88, 91], "connect": [85, 112], "constant": 102, "construct": 101, "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68], "contribut": 0, "convent": 0, "copi": 103, "core": 0, "count": [105, 110], "creat": [78, 102], "creation": [78, 108], "creation_funct": 6, "csv": 79, "ctypeslib": 35, "custom": 91, "data": [79, 80, 82, 97, 103, 105, 107], "data_type_funct": 7, "datafram": [22, 78, 79, 80, 82, 103], "dataset": 97, "dedupl": [103, 109], "depend": [1, 85, 87, 92], "descript": 105, "develop": [0, 72, 77, 92], "diff": 74, "differ": 109, "directori": 1, "disconnect": 85, "disk": 97, "distribut": [80, 87], "document": [77, 84, 87], "drop": 103, "dtype": [36, 98], "each": 88, "effici": 76, "element": [100, 109], "elementwise_funct": 8, "emath": 40, "environ": [1, 72, 75, 87, 89, 90], "exampl": [70, 78, 79], "except": [3, 25, 37, 39, 46], "exponenti": 108, "export": [78, 81, 83, 97], "express": 113, "extern": 88, "featur": [0, 70, 98, 103, 108, 110], "fft": 38, "file": [71, 79, 80, 83, 91, 97], "filter": 103, "first": 70, "flag": 1, "flake8": 88, "flatten": 113, "format": [79, 83, 97], "from": [1, 90, 97], "full": [71, 76], "function": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 36, 39, 44, 45, 46, 47, 48, 49, 51, 53, 54, 56, 57, 58, 59, 61, 62, 64, 68, 70, 83, 100], "gasnet": 72, "gather": [95, 106], "gener": [74, 83], "get": 87, "git": 74, "groupbi": [78, 80, 103, 104], "groupbyclass": 23, "guid": [94, 96], "hdf5": 80, "head": [103, 110], "header": 79, "highlight": 88, "histogram": 105, "histori": 24, "homebrew": 90, "i": [83, 97, 113], "import": [78, 81, 83, 97], "index": [26, 79, 80, 82, 98, 103, 106], "indexing_funct": 10, "individu": 87, "infoclass": 27, "instal": [85, 87, 89, 90, 92, 94], "instruct": 74, "integ": [106, 108], "integr": 110, "interact": 78, "interfac": 70, "intersect": 109, "io": 28, "io_util": 29, "isort": 88, "issu": 0, "iter": [101, 103, 107, 109, 113], "join": [30, 113], "json": 71, "l": 83, "languag": 88, "larg": 97, "launch": [85, 112], "legaci": 80, "lib": [40, 41], "linalg": [11, 42], "lint": 0, "linux": 89, "list": 92, "local": 88, "log": 74, "logger": 31, "logic": 106, "logist": 108, "lognorm": 108, "lookup": [98, 110], "ma": 43, "maco": 90, "makefil": 1, "manipulation_funct": [12, 44], "manual": 87, "map": 78, "match": [32, 113], "matcher": 33, "memori": 73, "merg": 0, "metadata": 80, "method": [109, 113], "mode": [80, 82], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 91], "modular": [75, 87, 91], "name": [95, 107], "new": 91, "next": [88, 89, 90], "ngram": 109, "normal": 108, "note": 74, "numer": [45, 100], "numpi": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "o": [83, 97, 113], "object": [78, 113], "onli": 0, "oper": [78, 100, 101, 107, 109, 111, 113], "output": 71, "outsid": 1, "overview": 94, "packag": [9, 25, 39, 51, 68, 87], "panda": [78, 110], "parquet": 82, "path": 1, "pdarrai": [78, 79, 80, 82, 106, 107], "pdarrayclass": 46, "pdarraycr": 47, "pdarraymanipul": 48, "pdarraysetop": 49, "perform": [95, 109, 113], "permut": [103, 108], "pip": [87, 88, 92], "plot": 59, "poisson": 108, "polynomi": 50, "posit": 95, "prefix": 109, "prepend": 109, "preprocess": 97, "process": [0, 74, 91], "pull": 0, "py": 87, "pycharm": 88, "pytest": 71, "python": [0, 1, 70, 78, 85, 89, 90, 92, 112], "python3": 0, "quickstart": 85, "random": [51, 102, 108], "rank": 107, "read": [71, 83, 97], "rec": 52, "recommend": [87, 90], "reduc": [73, 95], "reduct": 100, "refer": [69, 79, 80, 81, 82, 86], "regular": [102, 113], "releas": [0, 74], "renam": 103, "report": 0, "repositori": [89, 90], "reproduc": 76, "request": 0, "requir": [92, 94], "reset": 103, "reshap": 107, "review": 0, "rhel": 89, "row": 60, "run": [0, 1, 71, 72, 88, 91], "save": [76, 91], "scalar": 100, "scan": [95, 100], "scatter": [95, 106], "schema": 80, "scipi": [61, 62, 63], "search": 113, "searching_funct": 13, "secur": 64, "segarrai": [53, 80, 82, 109], "seri": [65, 110], "server": [70, 85, 87, 91, 97, 112], "set": [75, 78, 109, 111], "set_funct": 14, "setop": 109, "shuffl": 108, "shutdown": 85, "singl": 71, "size": 109, "slice": 106, "sort": [54, 99, 103, 110], "sorting_funct": 15, "sourc": 90, "sparrayclass": 66, "sparsematrix": 67, "special": 62, "specif": [92, 109, 113], "specifi": 91, "speed": 75, "split": 113, "src": 1, "standard_exponenti": 108, "standard_norm": 108, "start": 87, "startup": 112, "stat": 63, "statist": 105, "statistical_funct": 16, "step": [74, 88, 89, 90], "stream": 95, "string": [55, 79, 80, 82, 113], "sub": 109, "submodul": [9, 25, 39, 41, 61], "substr": 113, "suffix": 109, "suit": 71, "summar": 105, "support": [79, 80, 82, 83, 97], "symmetr": 109, "syntax": 88, "system": 75, "tail": [103, 110], "team": 0, "test": [0, 1, 68, 71, 95], "timeclass": 56, "tip": 76, "tool": 88, "troubleshoot": 87, "type": [79, 80, 82, 103, 107], "ubuntu": 89, "uniform": 108, "union": 109, "up": 75, "updat": [90, 92], "us": [75, 78, 85, 87, 88, 91, 92], "usag": [73, 96], "user": 76, "util": [57, 58], "utility_funct": 17, "valu": [105, 110], "variabl": [1, 75], "vector": 100, "vscode": 88, "where": 100, "window": 93, "wise": 100, "without": 79, "write": [0, 80, 82, 83], "wsl2": 93, "your": 70}})