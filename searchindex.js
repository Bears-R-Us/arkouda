Search.setIndex({"alltitles": {"API Reference": [[57, null], [67, "api-reference"], [68, "api-reference"], [69, "api-reference"], [70, "api-reference"]], "Access/Set Specific Elements in Sub-Array": [[97, "access-set-specific-elements-in-sub-array"]], "Adding Functionality to the Arkouda Server": [[58, "adding-functionality-to-the-arkouda-server"]], "Adding Issues": [[0, "adding-issues"]], "Adding Python Functionality (Client Interface)": [[58, "adding-python-functionality-client-interface"]], "Adding Your First Feature": [[58, null]], "Adding a Module from Outside the Arkouda src Directory": [[1, "adding-a-module-from-outside-the-arkouda-src-directory"]], "Adding new modules into the build process": [[78, "adding-new-modules-into-the-build-process"]], "All Dependencies": [[75, "all-dependencies"]], "Anaconda": [[77, "anaconda"]], "Append": [[91, "append"]], "Append & Prepend": [[97, "append-prepend"]], "ArgSort": [[85, "argsort"]], "Argsort": [[82, "argsort"]], "Arithmetic and Numeric Operations": [[87, null]], "Arkouda Arrays": [[66, "arkouda-arrays"]], "Arkouda DataFrames": [[66, "arkouda-dataframes"]], "Arkouda Documentation": [[72, null]], "Arkouda Formatted File": [[67, "arkouda-formatted-file"]], "Array Set Operations": [[99, null]], "ArrayView": [[68, "arrayview"]], "ArrayView in Arkouda": [[88, null]], "Arrow Install Troubleshooting": [[75, "arrow-install-troubleshooting"]], "Attributes": [[4, "attributes"], [25, "attributes"], [27, "attributes"], [36, "attributes"], [47, "attributes"], [48, "attributes"], [51, "attributes"]], "Basic Interaction": [[66, "basic-interaction"]], "Benchmark Arguments": [[59, "benchmark-arguments"]], "Between client and server": [[84, "between-client-and-server"]], "Bug Reports": [[0, "bug-reports"]], "Build Arkouda": [[60, "build-arkouda"]], "Build Chapel with GASNet": [[60, "build-chapel-with-gasnet"]], "Build from Source (Recommended)": [[77, "build-from-source-recommended"]], "Build the Server": [[75, "build-the-server"]], "Building the Arkouda Documentation": [[75, "building-the-arkouda-documentation"]], "Building the Server": [[75, null]], "CSV": [[67, null]], "Categorical": [[68, "categorical"], [68, "id3"], [70, "categorical"]], "Categoricals": [[89, null]], "Change Dtype": [[85, "change-dtype"]], "Chapel": [[0, "chapel"]], "Chapel API Reference": [[74, null]], "Chapel Compiler Flags": [[1, "chapel-compiler-flags"]], "Chapel Installation": [[76, "chapel-installation"]], "Classes": [[2, "classes"], [4, "classes"], [6, "classes"], [8, "classes"], [13, "classes"], [17, "classes"], [18, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [46, "classes"], [48, "classes"], [49, "classes"], [51, "classes"], [53, "classes"], [55, "classes"]], "Clone Arkouda Repository": [[76, "clone-arkouda-repository"], [77, "clone-arkouda-repository"]], "Coding Conventions and Linting": [[0, "coding-conventions-and-linting"]], "Compilation / Makefile": [[1, "compilation-makefile"]], "Compression": [[70, "compression"]], "Concat": [[85, "concat"]], "Concatenate": [[91, "concatenate"]], "Concatenation": [[90, "concatenation"]], "Connect a Python 3 client": [[100, "connect-a-python-3-client"]], "Connect the Python 3 Client": [[73, "connect-the-python-3-client"]], "Constant": [[90, "constant"]], "Construction": [[89, "construction"]], "Contributing": [[0, null]], "Copy": [[91, "copy"]], "Core Development Team Only": [[0, "core-development-team-only"]], "Creating & Using a DataFrame": [[66, "creating-using-a-dataframe"]], "Creating Arrays": [[90, null]], "Creation": [[88, "creation"], [96, "creation"]], "Data Distribution": [[68, "data-distribution"]], "Data Formatting": [[67, "data-formatting"]], "Data I/O": [[84, null]], "Data Preprocessing": [[84, "data-preprocessing"]], "Data Schema": [[68, "data-schema"]], "Data Type": [[95, "data-type"]], "Data Types": [[91, "data-types"]], "DataFrame": [[67, "dataframe"], [68, "dataframe"], [70, "dataframe"]], "DataFrames": [[66, "dataframes"]], "DataFrames in Arkouda": [[91, null]], "Deduplication": [[91, "deduplication"], [97, "deduplication"]], "Dependencies": [[75, "dependencies"]], "Dependency Configuration": [[75, "dependency-configuration"]], "Dependency List": [[79, "dependency-list"]], "Dependency Paths": [[1, "dependency-paths"]], "Descriptive Statistics": [[93, "descriptive-statistics"]], "Developer Documentation": [[65, null]], "Developer Specific": [[79, "developer-specific"]], "Developing Arkouda": [[0, "developing-arkouda"]], "Diff the git logs": [[62, "diff-the-git-logs"]], "Distributable Package": [[75, "distributable-package"]], "Drop": [[91, "drop"]], "Element-wise Functions": [[87, "element-wise-functions"]], "Environment Configuration": [[60, "environment-configuration"]], "Environment Variables": [[1, null]], "Environment Variables to Always Set": [[63, "environment-variables-to-always-set"]], "Example": [[58, "example"], [58, "id1"]], "Example Files": [[67, "example-files"]], "Examples": [[66, null]], "Exceptions": [[3, "exceptions"], [25, "exceptions"], [37, "exceptions"]], "Export": [[69, "export"]], "Exporting pdarray Objects": [[66, "exporting-pdarray-objects"]], "Exporting to Pandas": [[66, "exporting-to-pandas"]], "Feature Requests": [[0, "feature-requests"]], "Features": [[85, "features"], [91, "features"], [96, "features"], [98, "features"]], "File Configuration": [[68, "file-configuration"]], "File Formatting": [[67, "file-formatting"]], "File I/O": [[71, null]], "File Without Header": [[67, "file-without-header"]], "Filter": [[91, "filter"]], "Flattening": [[101, "flattening"]], "Functions": [[2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [19, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [23, "functions"], [25, "functions"], [27, "functions"], [28, "functions"], [29, "functions"], [30, "functions"], [31, "functions"], [34, "functions"], [35, "functions"], [36, "functions"], [37, "functions"], [38, "functions"], [39, "functions"], [40, "functions"], [41, "functions"], [42, "functions"], [44, "functions"], [45, "functions"], [47, "functions"], [48, "functions"], [50, "functions"], [51, "functions"], [52, "functions"], [54, "functions"], [55, "functions"], [56, "functions"]], "GASNet Development": [[60, null]], "Gather": [[82, "gather"]], "Gather/Scatter (pdarray)": [[94, "gather-scatter-pdarray"]], "General I/O API": [[71, "general-i-o-api"]], "Generating release notes": [[62, "generating-release-notes"]], "Getting Started": [[75, "getting-started"]], "GroupBy": [[66, "groupby"], [68, "groupby"], [68, "id5"], [91, "groupby"], [92, null]], "HDF5": [[68, null]], "Head/Tail": [[98, "head-tail"]], "Histogram": [[93, "histogram"]], "Homebrew": [[77, "homebrew"]], "I/O": [[101, "i-o"]], "Import": [[69, "import"]], "Import/Export": [[69, null], [84, "import-export"]], "Import/Export Support": [[71, "import-export-support"]], "Importing Pandas DataFrame": [[66, "importing-pandas-dataframe"]], "Index": [[67, "index"], [68, "index"], [70, "index"]], "Indexing": [[88, "indexing"]], "Indexing and Assignment": [[94, null]], "Indexs in Arkouda": [[85, null]], "Individual Installs": [[75, "individual-installs"]], "Install Arkouda": [[73, "install-arkouda"]], "Install Chapel": [[77, "install-chapel"]], "Install Chapel (RHEL)": [[76, "install-chapel-rhel"]], "Install Chapel (Ubuntu)": [[76, "install-chapel-ubuntu"]], "Install Dependencies": [[73, "install-dependencies"]], "Install Guides": [[81, "install-guides"]], "Installation": [[81, null]], "Installing Dependencies Manually": [[75, "installing-dependencies-manually"]], "Installing/Updating Python Dependencies": [[79, "installing-updating-python-dependencies"]], "Integer": [[94, "integer"]], "Integer pdarray index": [[94, "integer-pdarray-index"]], "Intersect": [[97, "intersect"]], "Iteration": [[88, "iteration"], [89, "iteration"], [91, "iteration"], [95, "iteration"], [97, "iteration"], [101, "iteration"]], "Large Datasets": [[84, "large-datasets"]], "Launch arkouda server": [[100, "launch-arkouda-server"]], "Launching the Server": [[73, "launching-the-server"]], "Legacy File Support": [[68, "legacy-file-support"]], "Linux": [[76, null]], "Logical indexing": [[94, "logical-indexing"]], "Lookup": [[85, "lookup"], [98, "lookup"], [98, "id1"]], "MacOS": [[77, null]], "Match Object": [[101, "match-object"]], "Merging Pull Requests": [[0, "merging-pull-requests"]], "MetaData Attributes": [[68, "metadata-attributes"]], "Modular Building": [[75, "modular-building"]], "Modular Server Builds": [[78, null]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [23, "module-contents"], [24, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [55, "module-contents"], [56, "module-contents"]], "NGrams": [[97, "ngrams"]], "Name": [[95, "name"]], "Named Arguments": [[82, "named-arguments"], [82, "named-arguments"], [82, "named-arguments"], [82, "named-arguments"], [82, "named-arguments"], [82, "named-arguments"]], "Next Steps": [[76, "next-steps"], [77, "next-steps"]], "Operation": [[97, "operation"]], "Operations": [[89, "operations"], [101, "operations"]], "Operators": [[95, "operators"]], "Overview": [[81, "overview"]], "Package Contents": [[8, "package-contents"], [22, "package-contents"], [25, "package-contents"], [42, "package-contents"], [54, "package-contents"]], "Pandas Integration": [[98, "pandas-integration"]], "Parquet": [[70, null]], "Performance": [[97, "performance"], [101, "performance"]], "Performance Testing": [[82, null]], "Permutations": [[91, "permutations"]], "Positional Arguments": [[82, "positional-arguments"], [82, "positional-arguments"], [82, "positional-arguments"], [82, "positional-arguments"], [82, "positional-arguments"], [82, "positional-arguments"]], "Prefix & Suffix": [[97, "prefix-suffix"]], "PyTest Benchmarks": [[59, null]], "Python Client": [[1, "python-client"]], "Python Dependencies": [[79, "python-dependencies"]], "Python Environment - Anaconda": [[77, "python-environment-anaconda"]], "Python Environment - Anaconda (Linux)": [[76, "python-environment-anaconda-linux"]], "Python Mapping": [[66, "python-mapping"]], "Python3": [[0, "python3"]], "Quickstart": [[73, null]], "Random": [[90, "random"]], "Random in Arkouda": [[96, null]], "Rank": [[95, "rank"]], "Read": [[71, "read"]], "Reading data from disk": [[84, "reading-data-from-disk"]], "Reading the JSON Output": [[59, "reading-the-json-output"]], "Reduce": [[82, "reduce"]], "Reducing Memory Usage of Arkouda Builds": [[61, null]], "Reductions": [[87, "reductions"]], "Regular": [[90, "regular"]], "Regular Expressions": [[101, "regular-expressions"]], "Release Process": [[0, "release-process"], [62, null]], "Rename Columns": [[91, "rename-columns"]], "Reproducing User Bugs Efficiently": [[64, "reproducing-user-bugs-efficiently"]], "Requirements": [[79, null], [81, "requirements"]], "Reset Indexes": [[91, "reset-indexes"]], "Reshape": [[95, "reshape"]], "Reviewing Pull Requests": [[0, "reviewing-pull-requests"]], "Run Arkouda": [[60, "run-arkouda"]], "Running": [[1, "running"]], "Running Single Files or Tests": [[59, "running-single-files-or-tests"]], "Running The Full Suite": [[59, "running-the-full-suite"]], "Running chapel tests": [[0, "running-chapel-tests"]], "Running python tests": [[0, "running-python-tests"]], "Saving Full Builds": [[64, "saving-full-builds"]], "Saving modules used in an Arkouda server run": [[78, "saving-modules-used-in-an-arkouda-server-run"]], "Scan": [[82, "scan"]], "Scans": [[87, "scans"]], "Scatter": [[82, "scatter"]], "SegArray": [[68, "segarray"], [68, "id4"], [70, "segarray"]], "SegArray SetOps": [[97, "segarray-setops"]], "SegArray Specific Methods": [[97, "segarray-specific-methods"]], "SegArrays in Arkouda": [[97, null]], "Series in Arkouda": [[98, null]], "Set Difference": [[97, "set-difference"]], "Shutdown/Disconnect": [[73, "shutdown-disconnect"]], "Slice": [[94, "slice"]], "Sorting": [[86, null], [91, "sorting"], [98, "sorting"]], "Specifying a custom configuration file": [[78, "specifying-a-custom-configuration-file"]], "Speeding up Arkouda Compilation": [[63, null]], "Splitting and joining": [[101, "splitting-and-joining"]], "Startup": [[100, null]], "Step-by-step instructions": [[62, "step-by-step-instructions"]], "Stream": [[82, "stream"]], "String-Specific Methods": [[101, "string-specific-methods"]], "Strings": [[67, "strings"], [68, "strings"], [68, "id2"], [70, "strings"]], "Strings in Arkouda": [[101, null]], "Sub-array of Size": [[97, "sub-array-of-size"]], "Submodules": [[8, "submodules"], [25, "submodules"], [36, "submodules"], [44, "submodules"]], "Subpackages": [[25, "subpackages"]], "Substring search": [[101, "substring-search"]], "Summarizing Data": [[93, null]], "Support Arkouda Data Types": [[67, "support-arkouda-data-types"]], "Supported Arkouda Data Types": [[68, "supported-arkouda-data-types"], [70, "supported-arkouda-data-types"]], "Supported File Formats": [[84, "supported-file-formats"]], "Supported File Formats:": [[71, null]], "Supported Write Modes": [[68, "supported-write-modes"], [70, "supported-write-modes"]], "Symmetric Difference": [[97, "symmetric-difference"]], "Tail/Head of Data": [[91, "tail-head-of-data"]], "Testing": [[0, "testing"], [1, "testing"]], "The pdarray class": [[95, null]], "Tips for Reproducing User Bugs": [[64, null]], "Type Casting": [[95, "type-casting"]], "Union": [[97, "union"]], "Updating Environment": [[77, "updating-environment"]], "Usage Guide": [[83, null]], "Using Anaconda": [[79, "using-anaconda"]], "Using Arkouda": [[73, "using-arkouda"]], "Using Environment Installed Dependencies (Recommended)": [[75, "using-environment-installed-dependencies-recommended"]], "Using Pip": [[79, "using-pip"]], "Using conda": [[75, "using-conda"]], "Using pip": [[75, "using-pip"]], "Using the Modular Build System": [[63, "using-the-modular-build-system"]], "Value Counts": [[93, "value-counts"], [98, "value-counts"]], "Vector and Scalar Arithmetic": [[87, "vector-and-scalar-arithmetic"]], "Where": [[87, "where"]], "Windows (WSL2)": [[80, null]], "Write": [[71, "write"]], "Writing Pull Requests": [[0, "writing-pull-requests"]], "arkouda": [[25, null]], "arkouda.accessor": [[2, null]], "arkouda.alignment": [[3, null]], "arkouda.array_api": [[8, null]], "arkouda.array_api.array_object": [[4, null]], "arkouda.array_api.creation_functions": [[5, null]], "arkouda.array_api.data_type_functions": [[6, null]], "arkouda.array_api.elementwise_functions": [[7, null]], "arkouda.array_api.indexing_functions": [[9, null]], "arkouda.array_api.linalg": [[10, null]], "arkouda.array_api.manipulation_functions": [[11, null]], "arkouda.array_api.searching_functions": [[12, null]], "arkouda.array_api.set_functions": [[13, null]], "arkouda.array_api.sorting_functions": [[14, null]], "arkouda.array_api.statistical_functions": [[15, null]], "arkouda.array_api.utility_functions": [[16, null]], "arkouda.array_view": [[17, null]], "arkouda.categorical": [[18, null]], "arkouda.client": [[19, null]], "arkouda.client_dtypes": [[20, null]], "arkouda.dataframe": [[21, null]], "arkouda.dtypes": [[22, null]], "arkouda.groupbyclass": [[23, null]], "arkouda.history": [[24, null]], "arkouda.index": [[26, null]], "arkouda.infoclass": [[27, null]], "arkouda.io": [[28, null]], "arkouda.io_util": [[29, null]], "arkouda.join": [[30, null]], "arkouda.logger": [[31, null]], "arkouda.match": [[32, null]], "arkouda.matcher": [[33, null]], "arkouda.numeric": [[34, null]], "arkouda.numpy": [[36, null]], "arkouda.numpy.dtypes": [[35, null]], "arkouda.pdarrayclass": [[37, null]], "arkouda.pdarraycreation": [[38, null]], "arkouda.pdarraymanipulation": [[39, null]], "arkouda.pdarraysetops": [[40, null]], "arkouda.plotting": [[41, null]], "arkouda.random": [[42, null]], "arkouda.row": [[43, null]], "arkouda.scipy": [[44, null]], "arkouda.scipy.special": [[45, null]], "arkouda.scipy.stats": [[46, null]], "arkouda.security": [[47, null]], "arkouda.segarray": [[48, null]], "arkouda.series": [[49, null]], "arkouda.sorting": [[50, null]], "arkouda.sparrayclass": [[51, null]], "arkouda.sparsematrix": [[52, null]], "arkouda.strings": [[53, null]], "arkouda.testing": [[54, null]], "arkouda.timeclass": [[55, null]], "arkouda.util": [[56, null]], "choice": [[96, "choice"]], "exponential": [[96, "exponential"]], "integers": [[96, "integers"]], "logistic": [[96, "logistic"]], "lognormal": [[96, "lognormal"]], "ls Functionality": [[71, "ls-functionality"]], "normal": [[96, "normal"]], "pdarray": [[67, "pdarray"], [68, "pdarray"], [68, "id1"], [70, "pdarray"]], "pdarray Creation": [[66, "pdarray-creation"]], "pdarray Set operations": [[66, "pdarray-set-operations"]], "pdarrays": [[66, "pdarrays"]], "permutation": [[96, "permutation"]], "poisson": [[96, "poisson"]], "random": [[96, "random"]], "shuffle": [[96, "shuffle"]], "standard_exponential": [[96, "standard-exponential"]], "standard_normal": [[96, "standard-normal"]], "uniform": [[96, "uniform"]]}, "docnames": ["CONTRIBUTING_LINK", "ENVIRONMENT", "autoapi/arkouda/accessor/index", "autoapi/arkouda/alignment/index", "autoapi/arkouda/array_api/array_object/index", "autoapi/arkouda/array_api/creation_functions/index", "autoapi/arkouda/array_api/data_type_functions/index", "autoapi/arkouda/array_api/elementwise_functions/index", "autoapi/arkouda/array_api/index", "autoapi/arkouda/array_api/indexing_functions/index", "autoapi/arkouda/array_api/linalg/index", "autoapi/arkouda/array_api/manipulation_functions/index", "autoapi/arkouda/array_api/searching_functions/index", "autoapi/arkouda/array_api/set_functions/index", "autoapi/arkouda/array_api/sorting_functions/index", "autoapi/arkouda/array_api/statistical_functions/index", "autoapi/arkouda/array_api/utility_functions/index", "autoapi/arkouda/array_view/index", "autoapi/arkouda/categorical/index", "autoapi/arkouda/client/index", "autoapi/arkouda/client_dtypes/index", "autoapi/arkouda/dataframe/index", "autoapi/arkouda/dtypes/index", "autoapi/arkouda/groupbyclass/index", "autoapi/arkouda/history/index", "autoapi/arkouda/index", "autoapi/arkouda/index/index", "autoapi/arkouda/infoclass/index", "autoapi/arkouda/io/index", "autoapi/arkouda/io_util/index", "autoapi/arkouda/join/index", "autoapi/arkouda/logger/index", "autoapi/arkouda/match/index", "autoapi/arkouda/matcher/index", "autoapi/arkouda/numeric/index", "autoapi/arkouda/numpy/dtypes/index", "autoapi/arkouda/numpy/index", "autoapi/arkouda/pdarrayclass/index", "autoapi/arkouda/pdarraycreation/index", "autoapi/arkouda/pdarraymanipulation/index", "autoapi/arkouda/pdarraysetops/index", "autoapi/arkouda/plotting/index", "autoapi/arkouda/random/index", "autoapi/arkouda/row/index", "autoapi/arkouda/scipy/index", "autoapi/arkouda/scipy/special/index", "autoapi/arkouda/scipy/stats/index", "autoapi/arkouda/security/index", "autoapi/arkouda/segarray/index", "autoapi/arkouda/series/index", "autoapi/arkouda/sorting/index", "autoapi/arkouda/sparrayclass/index", "autoapi/arkouda/sparsematrix/index", "autoapi/arkouda/strings/index", "autoapi/arkouda/testing/index", "autoapi/arkouda/timeclass/index", "autoapi/arkouda/util/index", "autoapi/index", "developer/ADDING_FEATURES", "developer/BENCHMARK", "developer/GASNET", "developer/MEMORY", "developer/RELEASE_PROCESS", "developer/TIPS", "developer/USER_BUGS", "developer/dev_menu", "examples", "file_io/CSV", "file_io/HDF5", "file_io/IMPORT_EXPORT", "file_io/PARQUET", "file_io/io_menu", "index", "quickstart", "server/index", "setup/BUILD", "setup/LINUX_INSTALL", "setup/MAC_INSTALL", "setup/MODULAR", "setup/REQUIREMENTS", "setup/WINDOWS_INSTALL", "setup/install_menu", "setup/testing", "usage", "usage/IO", "usage/Index", "usage/argsort", "usage/arithmetic", "usage/arrayview", "usage/categorical", "usage/creation", "usage/dataframe", "usage/groupby", "usage/histogram", "usage/indexing", "usage/pdarray", "usage/random", "usage/segarray", "usage/series", "usage/setops", "usage/startup", "usage/strings"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["CONTRIBUTING_LINK.md", "ENVIRONMENT.md", "autoapi/arkouda/accessor/index.rst", "autoapi/arkouda/alignment/index.rst", "autoapi/arkouda/array_api/array_object/index.rst", "autoapi/arkouda/array_api/creation_functions/index.rst", "autoapi/arkouda/array_api/data_type_functions/index.rst", "autoapi/arkouda/array_api/elementwise_functions/index.rst", "autoapi/arkouda/array_api/index.rst", "autoapi/arkouda/array_api/indexing_functions/index.rst", "autoapi/arkouda/array_api/linalg/index.rst", "autoapi/arkouda/array_api/manipulation_functions/index.rst", "autoapi/arkouda/array_api/searching_functions/index.rst", "autoapi/arkouda/array_api/set_functions/index.rst", "autoapi/arkouda/array_api/sorting_functions/index.rst", "autoapi/arkouda/array_api/statistical_functions/index.rst", "autoapi/arkouda/array_api/utility_functions/index.rst", "autoapi/arkouda/array_view/index.rst", "autoapi/arkouda/categorical/index.rst", "autoapi/arkouda/client/index.rst", "autoapi/arkouda/client_dtypes/index.rst", "autoapi/arkouda/dataframe/index.rst", "autoapi/arkouda/dtypes/index.rst", "autoapi/arkouda/groupbyclass/index.rst", "autoapi/arkouda/history/index.rst", "autoapi/arkouda/index.rst", "autoapi/arkouda/index/index.rst", "autoapi/arkouda/infoclass/index.rst", "autoapi/arkouda/io/index.rst", "autoapi/arkouda/io_util/index.rst", "autoapi/arkouda/join/index.rst", "autoapi/arkouda/logger/index.rst", "autoapi/arkouda/match/index.rst", "autoapi/arkouda/matcher/index.rst", "autoapi/arkouda/numeric/index.rst", "autoapi/arkouda/numpy/dtypes/index.rst", "autoapi/arkouda/numpy/index.rst", "autoapi/arkouda/pdarrayclass/index.rst", "autoapi/arkouda/pdarraycreation/index.rst", "autoapi/arkouda/pdarraymanipulation/index.rst", "autoapi/arkouda/pdarraysetops/index.rst", "autoapi/arkouda/plotting/index.rst", "autoapi/arkouda/random/index.rst", "autoapi/arkouda/row/index.rst", "autoapi/arkouda/scipy/index.rst", "autoapi/arkouda/scipy/special/index.rst", "autoapi/arkouda/scipy/stats/index.rst", "autoapi/arkouda/security/index.rst", "autoapi/arkouda/segarray/index.rst", "autoapi/arkouda/series/index.rst", "autoapi/arkouda/sorting/index.rst", "autoapi/arkouda/sparrayclass/index.rst", "autoapi/arkouda/sparsematrix/index.rst", "autoapi/arkouda/strings/index.rst", "autoapi/arkouda/testing/index.rst", "autoapi/arkouda/timeclass/index.rst", "autoapi/arkouda/util/index.rst", "autoapi/index.rst", "developer/ADDING_FEATURES.md", "developer/BENCHMARK.md", "developer/GASNET.md", "developer/MEMORY.md", "developer/RELEASE_PROCESS.md", "developer/TIPS.md", "developer/USER_BUGS.md", "developer/dev_menu.rst", "examples.rst", "file_io/CSV.md", "file_io/HDF5.md", "file_io/IMPORT_EXPORT.md", "file_io/PARQUET.md", "file_io/io_menu.rst", "index.rst", "quickstart.rst", "server/index.rst", "setup/BUILD.md", "setup/LINUX_INSTALL.md", "setup/MAC_INSTALL.md", "setup/MODULAR.md", "setup/REQUIREMENTS.md", "setup/WINDOWS_INSTALL.md", "setup/install_menu.rst", "setup/testing.rst", "usage.rst", "usage/IO.rst", "usage/Index.rst", "usage/argsort.rst", "usage/arithmetic.rst", "usage/arrayview.rst", "usage/categorical.rst", "usage/creation.rst", "usage/dataframe.rst", "usage/groupby.rst", "usage/histogram.rst", "usage/indexing.rst", "usage/pdarray.rst", "usage/random.rst", "usage/segarray.rst", "usage/series.rst", "usage/setops.rst", "usage/startup.rst", "usage/strings.rst"], "indexentries": {"a() (arkouda.scipy.stats.chi2 method)": [[46, "arkouda.scipy.stats.chi2.a", false]], "abs() (arkouda.timeclass.timedelta method)": [[55, "arkouda.timeclass.Timedelta.abs", false]], "abs() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.abs", false], [25, "id800", false]], "abs() (in module arkouda)": [[25, "arkouda.abs", false], [87, "arkouda.abs", false]], "abs() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.abs", false]], "abs() (in module arkouda.numeric)": [[34, "arkouda.numeric.abs", false]], "abspath() (arkouda.datasource method)": [[25, "arkouda.DataSource.abspath", false]], "abspath() (arkouda.numpy.datasource method)": [[36, "arkouda.numpy.DataSource.abspath", false]], "acos() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.acos", false]], "acosh() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.acosh", false]], "add() (arkouda.series method)": [[25, "arkouda.Series.add", false]], "add() (arkouda.series.series method)": [[49, "arkouda.series.Series.add", false]], "add() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.add", false]], "add_newdoc() (in module arkouda)": [[25, "arkouda.add_newdoc", false]], "add_newdoc() (in module arkouda.numpy)": [[36, "arkouda.numpy.add_newdoc", false]], "aggregate() (arkouda.groupby method)": [[25, "arkouda.GroupBy.aggregate", false], [25, "id264", false], [25, "id311", false], [25, "id358", false], [25, "id405", false], [25, "id452", false], [92, "arkouda.GroupBy.aggregate", false]], "aggregate() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.aggregate", false]], "aggregate() (arkouda.segarray method)": [[25, "arkouda.SegArray.aggregate", false]], "aggregate() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.aggregate", false]], "akabs() (in module arkouda)": [[25, "arkouda.akabs", false]], "akbool (class in arkouda)": [[25, "arkouda.akbool", false], [25, "id821", false]], "akcast() (in module arkouda)": [[25, "arkouda.akcast", false], [25, "id822", false]], "akfloat64 (class in arkouda)": [[25, "arkouda.akfloat64", false], [25, "id823", false]], "akint64 (class in arkouda)": [[25, "arkouda.akint64", false], [25, "id828", false], [25, "id830", false]], "akuint64 (class in arkouda)": [[25, "arkouda.akuint64", false], [25, "id832", false], [25, "id834", false]], "align() (in module arkouda)": [[25, "arkouda.align", false]], "align() (in module arkouda.alignment)": [[3, "arkouda.alignment.align", false]], "all() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.all", false]], "all() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.all", false], [25, "id130", false]], "all() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.all", false]], "all() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.all", false]], "all() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.all", false]], "all() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.all", false]], "all() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.all", false]], "all() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.all", false]], "all() (arkouda.groupby method)": [[25, "arkouda.GroupBy.all", false], [25, "id265", false], [25, "id312", false], [25, "id359", false], [25, "id406", false], [25, "id453", false], [92, "arkouda.GroupBy.all", false]], "all() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.all", false]], "all() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.all", false]], "all() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.all", false]], "all() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.all", false]], "all() (arkouda.pdarray method)": [[25, "arkouda.pdarray.all", false], [25, "id1006", false], [25, "id1076", false], [25, "id1146", false], [25, "id1216", false], [25, "id936", false], [93, "arkouda.pdarray.all", false]], "all() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.all", false]], "all() (arkouda.segarray method)": [[25, "arkouda.SegArray.all", false]], "all() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.all", false]], "all() (arkouda.str_ method)": [[25, "arkouda.str_.all", false], [25, "id1292", false]], "all() (in module arkouda)": [[25, "arkouda.all", false], [87, "arkouda.all", false]], "all() (in module arkouda.array_api.utility_functions)": [[16, "arkouda.array_api.utility_functions.all", false]], "all() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.all", false]], "all_scalars (class in arkouda)": [[25, "arkouda.all_scalars", false]], "all_scalars (class in arkouda.dtypes)": [[22, "arkouda.dtypes.all_scalars", false]], "all_scalars (class in arkouda.numpy)": [[36, "arkouda.numpy.all_scalars", false]], "all_scalars (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.all_scalars", false]], "allsymbols (in module arkouda)": [[25, "arkouda.AllSymbols", false]], "allsymbols (in module arkouda.infoclass)": [[27, "arkouda.infoclass.AllSymbols", false]], "and() (arkouda.groupby method)": [[25, "arkouda.GroupBy.AND", false], [25, "id260", false], [25, "id307", false], [25, "id354", false], [25, "id401", false], [25, "id448", false], [92, "arkouda.GroupBy.AND", false]], "and() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.AND", false]], "and() (arkouda.segarray method)": [[25, "arkouda.SegArray.AND", false]], "and() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.AND", false]], "annotations (class in arkouda.dtypes)": [[22, "arkouda.dtypes.annotations", false]], "annotations (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.annotations", false]], "any() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.any", false]], "any() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.any", false], [25, "id131", false]], "any() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.any", false]], "any() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.any", false]], "any() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.any", false]], "any() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.any", false]], "any() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.any", false]], "any() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.any", false]], "any() (arkouda.groupby method)": [[25, "arkouda.GroupBy.any", false], [25, "id266", false], [25, "id313", false], [25, "id360", false], [25, "id407", false], [25, "id454", false], [92, "arkouda.GroupBy.any", false]], "any() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.any", false]], "any() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.any", false]], "any() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.any", false]], "any() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.any", false]], "any() (arkouda.pdarray method)": [[25, "arkouda.pdarray.any", false], [25, "id1007", false], [25, "id1077", false], [25, "id1147", false], [25, "id1217", false], [25, "id937", false], [93, "arkouda.pdarray.any", false]], "any() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.any", false]], "any() (arkouda.segarray method)": [[25, "arkouda.SegArray.any", false]], "any() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.any", false]], "any() (arkouda.str_ method)": [[25, "arkouda.str_.any", false], [25, "id1293", false]], "any() (in module arkouda)": [[25, "arkouda.any", false], [87, "arkouda.any", false]], "any() (in module arkouda.array_api.utility_functions)": [[16, "arkouda.array_api.utility_functions.any", false]], "any() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.any", false]], "append() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.append", false], [25, "id132", false]], "append() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.append", false]], "append() (arkouda.segarray method)": [[25, "arkouda.SegArray.append", false]], "append() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.append", false]], "append() (in module arkouda.segarray)": [[97, "arkouda.SegArray.append", false]], "append_single() (arkouda.segarray method)": [[25, "arkouda.SegArray.append_single", false]], "append_single() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.append_single", false]], "append_single() (in module arkouda.segarray)": [[97, "arkouda.SegArray.append_single", false]], "apply_permutation() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.apply_permutation", false], [25, "id133", false]], "apply_permutation() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.apply_permutation", false]], "apply_permutation() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.apply_permutation", false]], "arange() (in module arkouda)": [[25, "arkouda.arange", false], [25, "id836", false], [25, "id837", false], [25, "id838", false], [25, "id839", false], [25, "id840", false], [90, "arkouda.arange", false]], "arange() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.arange", false]], "arange() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.arange", false]], "arccos() (in module arkouda)": [[25, "arkouda.arccos", false]], "arccos() (in module arkouda.numeric)": [[34, "arkouda.numeric.arccos", false]], "arccosh() (in module arkouda)": [[25, "arkouda.arccosh", false]], "arccosh() (in module arkouda.numeric)": [[34, "arkouda.numeric.arccosh", false]], "arcsin() (in module arkouda)": [[25, "arkouda.arcsin", false]], "arcsin() (in module arkouda.numeric)": [[34, "arkouda.numeric.arcsin", false]], "arcsinh() (in module arkouda)": [[25, "arkouda.arcsinh", false]], "arcsinh() (in module arkouda.numeric)": [[34, "arkouda.numeric.arcsinh", false]], "arctan() (in module arkouda)": [[25, "arkouda.arctan", false]], "arctan() (in module arkouda.numeric)": [[34, "arkouda.numeric.arctan", false]], "arctan2() (in module arkouda)": [[25, "arkouda.arctan2", false]], "arctan2() (in module arkouda.numeric)": [[34, "arkouda.numeric.arctan2", false]], "arctanh() (in module arkouda)": [[25, "arkouda.arctanh", false]], "arctanh() (in module arkouda.numeric)": [[34, "arkouda.numeric.arctanh", false]], "argmax() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.argmax", false]], "argmax() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.argmax", false]], "argmax() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.argmax", false]], "argmax() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.argmax", false]], "argmax() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.argmax", false]], "argmax() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.argmax", false]], "argmax() (arkouda.groupby method)": [[25, "arkouda.GroupBy.argmax", false], [25, "id267", false], [25, "id314", false], [25, "id361", false], [25, "id408", false], [25, "id455", false], [92, "arkouda.GroupBy.argmax", false]], "argmax() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.argmax", false]], "argmax() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.argmax", false]], "argmax() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.argmax", false]], "argmax() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.argmax", false]], "argmax() (arkouda.pdarray method)": [[25, "arkouda.pdarray.argmax", false], [25, "id1008", false], [25, "id1078", false], [25, "id1148", false], [25, "id1218", false], [25, "id938", false], [93, "arkouda.pdarray.argmax", false]], "argmax() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.argmax", false]], "argmax() (arkouda.segarray method)": [[25, "arkouda.SegArray.argmax", false]], "argmax() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.argmax", false]], "argmax() (arkouda.series method)": [[25, "arkouda.Series.argmax", false]], "argmax() (arkouda.series.series method)": [[49, "arkouda.series.Series.argmax", false]], "argmax() (arkouda.str_ method)": [[25, "arkouda.str_.argmax", false], [25, "id1294", false]], "argmax() (in module arkouda)": [[25, "arkouda.argmax", false], [87, "arkouda.argmax", false]], "argmax() (in module arkouda.array_api.searching_functions)": [[12, "arkouda.array_api.searching_functions.argmax", false]], "argmax() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.argmax", false]], "argmaxk() (arkouda.pdarray method)": [[25, "arkouda.pdarray.argmaxk", false], [25, "id1009", false], [25, "id1079", false], [25, "id1149", false], [25, "id1219", false], [25, "id939", false], [93, "arkouda.pdarray.argmaxk", false]], "argmaxk() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.argmaxk", false]], "argmaxk() (in module arkouda)": [[25, "arkouda.argmaxk", false], [87, "arkouda.argmaxk", false]], "argmaxk() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.argmaxk", false]], "argmin() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.argmin", false]], "argmin() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.argmin", false]], "argmin() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.argmin", false]], "argmin() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.argmin", false]], "argmin() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.argmin", false]], "argmin() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.argmin", false]], "argmin() (arkouda.groupby method)": [[25, "arkouda.GroupBy.argmin", false], [25, "id268", false], [25, "id315", false], [25, "id362", false], [25, "id409", false], [25, "id456", false], [92, "arkouda.GroupBy.argmin", false]], "argmin() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.argmin", false]], "argmin() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.argmin", false]], "argmin() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.argmin", false]], "argmin() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.argmin", false]], "argmin() (arkouda.pdarray method)": [[25, "arkouda.pdarray.argmin", false], [25, "id1010", false], [25, "id1080", false], [25, "id1150", false], [25, "id1220", false], [25, "id940", false], [93, "arkouda.pdarray.argmin", false]], "argmin() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.argmin", false]], "argmin() (arkouda.segarray method)": [[25, "arkouda.SegArray.argmin", false]], "argmin() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.argmin", false]], "argmin() (arkouda.series method)": [[25, "arkouda.Series.argmin", false]], "argmin() (arkouda.series.series method)": [[49, "arkouda.series.Series.argmin", false]], "argmin() (arkouda.str_ method)": [[25, "arkouda.str_.argmin", false], [25, "id1295", false]], "argmin() (in module arkouda)": [[25, "arkouda.argmin", false], [87, "arkouda.argmin", false]], "argmin() (in module arkouda.array_api.searching_functions)": [[12, "arkouda.array_api.searching_functions.argmin", false]], "argmin() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.argmin", false]], "argmink() (arkouda.pdarray method)": [[25, "arkouda.pdarray.argmink", false], [25, "id1011", false], [25, "id1081", false], [25, "id1151", false], [25, "id1221", false], [25, "id941", false], [93, "arkouda.pdarray.argmink", false]], "argmink() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.argmink", false]], "argmink() (in module arkouda)": [[25, "arkouda.argmink", false], [87, "arkouda.argmink", false]], "argmink() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.argmink", false]], "argsort() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.argsort", false]], "argsort() (arkouda.categorical method)": [[25, "arkouda.Categorical.argsort", false], [25, "id24", false], [25, "id82", false]], "argsort() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.argsort", false]], "argsort() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.argsort", false], [25, "id134", false]], "argsort() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.argsort", false]], "argsort() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.argsort", false]], "argsort() (arkouda.index method)": [[25, "arkouda.Index.argsort", false]], "argsort() (arkouda.index.index method)": [[26, "arkouda.index.Index.argsort", false]], "argsort() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.argsort", false]], "argsort() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.argsort", false]], "argsort() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.argsort", false]], "argsort() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.argsort", false]], "argsort() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.argsort", false]], "argsort() (arkouda.str_ method)": [[25, "arkouda.str_.argsort", false], [25, "id1296", false]], "argsort() (in module arkouda)": [[25, "arkouda.argsort", false], [25, "id841", false], [25, "id842", false], [86, "arkouda.argsort", false]], "argsort() (in module arkouda.array_api.sorting_functions)": [[14, "arkouda.array_api.sorting_functions.argsort", false]], "argsort() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.argsort", false]], "argsort() (in module arkouda.index)": [[85, "arkouda.Index.argsort", false]], "argsort() (in module arkouda.multiindex)": [[85, "arkouda.MultiIndex.argsort", false]], "argsort() (in module arkouda.sorting)": [[50, "arkouda.sorting.argsort", false]], "arkouda": [[25, "module-arkouda", false]], "arkouda.accessor": [[2, "module-arkouda.accessor", false]], "arkouda.alignment": [[3, "module-arkouda.alignment", false]], "arkouda.array_api": [[8, "module-arkouda.array_api", false]], "arkouda.array_api.array_object": [[4, "module-arkouda.array_api.array_object", false]], "arkouda.array_api.creation_functions": [[5, "module-arkouda.array_api.creation_functions", false]], "arkouda.array_api.data_type_functions": [[6, "module-arkouda.array_api.data_type_functions", false]], "arkouda.array_api.elementwise_functions": [[7, "module-arkouda.array_api.elementwise_functions", false]], "arkouda.array_api.indexing_functions": [[9, "module-arkouda.array_api.indexing_functions", false]], "arkouda.array_api.linalg": [[10, "module-arkouda.array_api.linalg", false]], "arkouda.array_api.manipulation_functions": [[11, "module-arkouda.array_api.manipulation_functions", false]], "arkouda.array_api.searching_functions": [[12, "module-arkouda.array_api.searching_functions", false]], "arkouda.array_api.set_functions": [[13, "module-arkouda.array_api.set_functions", false]], "arkouda.array_api.sorting_functions": [[14, "module-arkouda.array_api.sorting_functions", false]], "arkouda.array_api.statistical_functions": [[15, "module-arkouda.array_api.statistical_functions", false]], "arkouda.array_api.utility_functions": [[16, "module-arkouda.array_api.utility_functions", false]], "arkouda.array_view": [[17, "module-arkouda.array_view", false]], "arkouda.categorical": [[18, "module-arkouda.categorical", false]], "arkouda.client": [[19, "module-arkouda.client", false]], "arkouda.client_dtypes": [[20, "module-arkouda.client_dtypes", false]], "arkouda.dataframe": [[21, "module-arkouda.dataframe", false]], "arkouda.dtypes": [[22, "module-arkouda.dtypes", false]], "arkouda.groupbyclass": [[23, "module-arkouda.groupbyclass", false]], "arkouda.history": [[24, "module-arkouda.history", false]], "arkouda.index": [[26, "module-arkouda.index", false]], "arkouda.infoclass": [[27, "module-arkouda.infoclass", false]], "arkouda.io": [[28, "module-arkouda.io", false]], "arkouda.io_util": [[29, "module-arkouda.io_util", false]], "arkouda.join": [[30, "module-arkouda.join", false]], "arkouda.logger": [[31, "module-arkouda.logger", false]], "arkouda.match": [[32, "module-arkouda.match", false]], "arkouda.matcher": [[33, "module-arkouda.matcher", false]], "arkouda.numeric": [[34, "module-arkouda.numeric", false]], "arkouda.numpy": [[36, "module-arkouda.numpy", false]], "arkouda.numpy.dtypes": [[35, "module-arkouda.numpy.dtypes", false]], "arkouda.pdarrayclass": [[37, "module-arkouda.pdarrayclass", false]], "arkouda.pdarraycreation": [[38, "module-arkouda.pdarraycreation", false]], "arkouda.pdarraymanipulation": [[39, "module-arkouda.pdarraymanipulation", false]], "arkouda.pdarraysetops": [[40, "module-arkouda.pdarraysetops", false]], "arkouda.plotting": [[41, "module-arkouda.plotting", false]], "arkouda.random": [[42, "module-arkouda.random", false]], "arkouda.row": [[43, "module-arkouda.row", false]], "arkouda.scipy": [[44, "module-arkouda.scipy", false]], "arkouda.scipy.special": [[45, "module-arkouda.scipy.special", false]], "arkouda.scipy.stats": [[46, "module-arkouda.scipy.stats", false]], "arkouda.security": [[47, "module-arkouda.security", false]], "arkouda.segarray": [[48, "module-arkouda.segarray", false]], "arkouda.series": [[49, "module-arkouda.series", false]], "arkouda.sorting": [[50, "module-arkouda.sorting", false]], "arkouda.sparrayclass": [[51, "module-arkouda.sparrayclass", false]], "arkouda.sparsematrix": [[52, "module-arkouda.sparsematrix", false]], "arkouda.strings": [[53, "module-arkouda.strings", false]], "arkouda.testing": [[54, "module-arkouda.testing", false]], "arkouda.timeclass": [[55, "module-arkouda.timeclass", false]], "arkouda.util": [[56, "module-arkouda.util", false]], "arkouda_supported_dtypes (class in arkouda)": [[25, "arkouda.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (class in arkouda.dtypes)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (class in arkouda.numpy)": [[36, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_floats (class in arkouda.dtypes)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_FLOATS", false]], "arkouda_supported_floats (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS", false]], "arkouda_supported_ints (class in arkouda.dtypes)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_ints (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_numbers (class in arkouda.dtypes)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_NUMBERS", false]], "arkouda_supported_numbers (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS", false]], "array (class in arkouda.array_api)": [[8, "arkouda.array_api.Array", false]], "array (class in arkouda.array_api.array_object)": [[4, "arkouda.array_api.array_object.Array", false]], "array() (in module arkouda)": [[25, "arkouda.array", false], [25, "id843", false], [25, "id844", false], [25, "id845", false], [84, "arkouda.array", false]], "array() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.array", false]], "arrayview (class in arkouda)": [[25, "arkouda.ArrayView", false], [88, "arkouda.ArrayView", false]], "arrayview (class in arkouda.array_view)": [[17, "arkouda.array_view.ArrayView", false]], "as_index (arkouda.dataframe.dataframegroupby attribute)": [[21, "arkouda.dataframe.DataFrameGroupBy.as_index", false]], "as_index (arkouda.dataframegroupby attribute)": [[25, "arkouda.DataFrameGroupBy.as_index", false]], "as_integer_ratio() (arkouda.akfloat64 method)": [[25, "arkouda.akfloat64.as_integer_ratio", false], [25, "id824", false]], "as_integer_ratio() (arkouda.double method)": [[25, "arkouda.double.as_integer_ratio", false]], "as_integer_ratio() (arkouda.dtypes.float16 method)": [[22, "arkouda.dtypes.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.dtypes.float32 method)": [[22, "arkouda.dtypes.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.dtypes.float64 method)": [[22, "arkouda.dtypes.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float16 method)": [[25, "arkouda.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float32 method)": [[25, "arkouda.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float64 method)": [[25, "arkouda.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float_ method)": [[25, "arkouda.float_.as_integer_ratio", false]], "as_integer_ratio() (arkouda.half method)": [[25, "arkouda.half.as_integer_ratio", false]], "as_integer_ratio() (arkouda.longdouble method)": [[25, "arkouda.longdouble.as_integer_ratio", false]], "as_integer_ratio() (arkouda.longfloat method)": [[25, "arkouda.longfloat.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.double method)": [[36, "arkouda.numpy.double.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.dtypes.float16 method)": [[35, "arkouda.numpy.dtypes.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.dtypes.float32 method)": [[35, "arkouda.numpy.dtypes.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.dtypes.float64 method)": [[35, "arkouda.numpy.dtypes.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float16 method)": [[36, "arkouda.numpy.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float32 method)": [[36, "arkouda.numpy.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float64 method)": [[36, "arkouda.numpy.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float_ method)": [[36, "arkouda.numpy.float_.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.half method)": [[36, "arkouda.numpy.half.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.longdouble method)": [[36, "arkouda.numpy.longdouble.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.longfloat method)": [[36, "arkouda.numpy.longfloat.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.single method)": [[36, "arkouda.numpy.single.as_integer_ratio", false]], "as_integer_ratio() (arkouda.single method)": [[25, "arkouda.single.as_integer_ratio", false]], "asarray() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.asarray", false]], "asin() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.asin", false]], "asinh() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.asinh", false]], "assert_almost_equal() (in module arkouda)": [[25, "arkouda.assert_almost_equal", false]], "assert_almost_equal() (in module arkouda.testing)": [[54, "arkouda.testing.assert_almost_equal", false]], "assert_almost_equivalent() (in module arkouda)": [[25, "arkouda.assert_almost_equivalent", false]], "assert_almost_equivalent() (in module arkouda.testing)": [[54, "arkouda.testing.assert_almost_equivalent", false]], "assert_arkouda_array_equal() (in module arkouda)": [[25, "arkouda.assert_arkouda_array_equal", false]], "assert_arkouda_array_equal() (in module arkouda.testing)": [[54, "arkouda.testing.assert_arkouda_array_equal", false]], "assert_arkouda_array_equivalent() (in module arkouda)": [[25, "arkouda.assert_arkouda_array_equivalent", false]], "assert_arkouda_array_equivalent() (in module arkouda.testing)": [[54, "arkouda.testing.assert_arkouda_array_equivalent", false]], "assert_arkouda_pdarray_equal() (in module arkouda)": [[25, "arkouda.assert_arkouda_pdarray_equal", false]], "assert_arkouda_pdarray_equal() (in module arkouda.testing)": [[54, "arkouda.testing.assert_arkouda_pdarray_equal", false]], "assert_arkouda_segarray_equal() (in module arkouda)": [[25, "arkouda.assert_arkouda_segarray_equal", false]], "assert_arkouda_segarray_equal() (in module arkouda.testing)": [[54, "arkouda.testing.assert_arkouda_segarray_equal", false]], "assert_arkouda_strings_equal() (in module arkouda)": [[25, "arkouda.assert_arkouda_strings_equal", false]], "assert_arkouda_strings_equal() (in module arkouda.testing)": [[54, "arkouda.testing.assert_arkouda_strings_equal", false]], "assert_attr_equal() (in module arkouda)": [[25, "arkouda.assert_attr_equal", false]], "assert_attr_equal() (in module arkouda.testing)": [[54, "arkouda.testing.assert_attr_equal", false]], "assert_categorical_equal() (in module arkouda)": [[25, "arkouda.assert_categorical_equal", false]], "assert_categorical_equal() (in module arkouda.testing)": [[54, "arkouda.testing.assert_categorical_equal", false]], "assert_class_equal() (in module arkouda)": [[25, "arkouda.assert_class_equal", false]], "assert_class_equal() (in module arkouda.testing)": [[54, "arkouda.testing.assert_class_equal", false]], "assert_contains_all() (in module arkouda)": [[25, "arkouda.assert_contains_all", false]], "assert_contains_all() (in module arkouda.testing)": [[54, "arkouda.testing.assert_contains_all", false]], "assert_copy() (in module arkouda)": [[25, "arkouda.assert_copy", false]], "assert_copy() (in module arkouda.testing)": [[54, "arkouda.testing.assert_copy", false]], "assert_dict_equal() (in module arkouda)": [[25, "arkouda.assert_dict_equal", false]], "assert_dict_equal() (in module arkouda.testing)": [[54, "arkouda.testing.assert_dict_equal", false]], "assert_equal() (in module arkouda)": [[25, "arkouda.assert_equal", false]], "assert_equal() (in module arkouda.testing)": [[54, "arkouda.testing.assert_equal", false]], "assert_equivalent() (in module arkouda)": [[25, "arkouda.assert_equivalent", false]], "assert_equivalent() (in module arkouda.testing)": [[54, "arkouda.testing.assert_equivalent", false]], "assert_frame_equal() (in module arkouda)": [[25, "arkouda.assert_frame_equal", false]], "assert_frame_equal() (in module arkouda.testing)": [[54, "arkouda.testing.assert_frame_equal", false]], "assert_frame_equivalent() (in module arkouda)": [[25, "arkouda.assert_frame_equivalent", false]], "assert_frame_equivalent() (in module arkouda.testing)": [[54, "arkouda.testing.assert_frame_equivalent", false]], "assert_index_equal() (in module arkouda)": [[25, "arkouda.assert_index_equal", false]], "assert_index_equal() (in module arkouda.testing)": [[54, "arkouda.testing.assert_index_equal", false]], "assert_index_equivalent() (in module arkouda)": [[25, "arkouda.assert_index_equivalent", false]], "assert_index_equivalent() (in module arkouda.testing)": [[54, "arkouda.testing.assert_index_equivalent", false]], "assert_is_sorted() (in module arkouda)": [[25, "arkouda.assert_is_sorted", false]], "assert_is_sorted() (in module arkouda.testing)": [[54, "arkouda.testing.assert_is_sorted", false]], "assert_series_equal() (in module arkouda)": [[25, "arkouda.assert_series_equal", false]], "assert_series_equal() (in module arkouda.testing)": [[54, "arkouda.testing.assert_series_equal", false]], "assert_series_equivalent() (in module arkouda)": [[25, "arkouda.assert_series_equivalent", false]], "assert_series_equivalent() (in module arkouda.testing)": [[54, "arkouda.testing.assert_series_equivalent", false]], "assign() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.assign", false], [25, "id135", false]], "assign() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.assign", false]], "astype() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.astype", false]], "astype() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.astype", false]], "astype() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.astype", false]], "astype() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.astype", false]], "astype() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.astype", false]], "astype() (arkouda.pdarray method)": [[25, "arkouda.pdarray.astype", false], [25, "id1012", false], [25, "id1082", false], [25, "id1152", false], [25, "id1222", false], [25, "id942", false]], "astype() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.astype", false]], "astype() (arkouda.str_ method)": [[25, "arkouda.str_.astype", false], [25, "id1297", false]], "astype() (arkouda.strings method)": [[25, "arkouda.Strings.astype", false], [25, "id508", false], [25, "id583", false], [25, "id658", false], [25, "id733", false]], "astype() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.astype", false]], "astype() (in module arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.astype", false]], "at (arkouda.series property)": [[25, "arkouda.Series.at", false]], "at (arkouda.series.series property)": [[49, "arkouda.series.Series.at", false]], "atan() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.atan", false]], "atan2() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.atan2", false]], "atanh() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.atanh", false]], "attach() (arkouda.categorical static method)": [[25, "arkouda.Categorical.attach", false], [25, "id25", false], [25, "id83", false]], "attach() (arkouda.categorical.categorical static method)": [[18, "arkouda.categorical.Categorical.attach", false]], "attach() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.attach", false], [25, "id136", false]], "attach() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.attach", false]], "attach() (arkouda.groupby method)": [[25, "arkouda.GroupBy.attach", false], [25, "id269", false], [25, "id316", false], [25, "id363", false], [25, "id410", false], [25, "id457", false]], "attach() (arkouda.groupby static method)": [[92, "arkouda.GroupBy.attach", false]], "attach() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.attach", false]], "attach() (arkouda.pdarray static method)": [[25, "arkouda.pdarray.attach", false], [25, "id1013", false], [25, "id1083", false], [25, "id1153", false], [25, "id1223", false], [25, "id943", false]], "attach() (arkouda.pdarrayclass.pdarray static method)": [[37, "arkouda.pdarrayclass.pdarray.attach", false]], "attach() (arkouda.segarray class method)": [[25, "arkouda.SegArray.attach", false]], "attach() (arkouda.segarray.segarray class method)": [[48, "arkouda.segarray.SegArray.attach", false]], "attach() (arkouda.series method)": [[25, "arkouda.Series.attach", false]], "attach() (arkouda.series.series method)": [[49, "arkouda.series.Series.attach", false]], "attach() (arkouda.strings static method)": [[25, "arkouda.Strings.attach", false], [25, "id509", false], [25, "id584", false], [25, "id659", false], [25, "id734", false]], "attach() (arkouda.strings.strings static method)": [[53, "arkouda.strings.Strings.attach", false]], "attach() (in module arkouda)": [[25, "arkouda.attach", false]], "attach() (in module arkouda.util)": [[56, "arkouda.util.attach", false]], "attach_all() (in module arkouda)": [[25, "arkouda.attach_all", false]], "attach_all() (in module arkouda.util)": [[56, "arkouda.util.attach_all", false]], "attach_pdarray() (in module arkouda)": [[25, "arkouda.attach_pdarray", false]], "attach_pdarray() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.attach_pdarray", false]], "b() (arkouda.scipy.stats.chi2 method)": [[46, "arkouda.scipy.stats.chi2.b", false]], "badvalue() (arkouda.scipy.stats.chi2 method)": [[46, "arkouda.scipy.stats.chi2.badvalue", false]], "base (arkouda.array_view.arrayview attribute)": [[17, "arkouda.array_view.ArrayView.base", false], [17, "id0", false]], "base (arkouda.arrayview attribute)": [[25, "arkouda.ArrayView.base", false], [25, "id0", false], [88, "arkouda.ArrayView.base", false]], "base() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.base", false]], "base() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.base", false]], "base() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.base", false]], "base() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.base", false]], "base() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.base", false]], "base() (arkouda.str_ method)": [[25, "arkouda.str_.base", false], [25, "id1298", false]], "base_repr() (in module arkouda)": [[25, "arkouda.base_repr", false]], "base_repr() (in module arkouda.numpy)": [[36, "arkouda.numpy.base_repr", false]], "bigint (class in arkouda)": [[25, "arkouda.bigint", false], [25, "id846", false]], "bigint (class in arkouda.dtypes)": [[22, "arkouda.dtypes.bigint", false]], "bigint (class in arkouda.numpy)": [[36, "arkouda.numpy.bigint", false]], "bigint (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.bigint", false]], "bigint() (arkouda.dtype method)": [[25, "arkouda.DType.BIGINT", false]], "bigint() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.BIGINT", false]], "bigint() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.BIGINT", false]], "bigint() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.BIGINT", false]], "bigint_from_uint_arrays() (in module arkouda)": [[25, "arkouda.bigint_from_uint_arrays", false]], "bigint_from_uint_arrays() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.bigint_from_uint_arrays", false]], "bigint_to_uint_arrays() (arkouda.pdarray method)": [[25, "arkouda.pdarray.bigint_to_uint_arrays", false], [25, "id1014", false], [25, "id1084", false], [25, "id1154", false], [25, "id1224", false], [25, "id944", false]], "bigint_to_uint_arrays() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.bigint_to_uint_arrays", false]], "binary_repr() (in module arkouda)": [[25, "arkouda.binary_repr", false]], "binary_repr() (in module arkouda.numpy)": [[36, "arkouda.numpy.binary_repr", false]], "binops (arkouda.categorical attribute)": [[25, "arkouda.Categorical.BinOps", false], [25, "id21", false], [25, "id79", false]], "binops (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.BinOps", false]], "binops (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.BinOps", false], [25, "id1004", false], [25, "id1074", false], [25, "id1144", false], [25, "id1214", false], [25, "id934", false]], "binops (arkouda.pdarrayclass.pdarray attribute)": [[37, "arkouda.pdarrayclass.pdarray.BinOps", false]], "binops (arkouda.strings attribute)": [[25, "arkouda.Strings.BinOps", false], [25, "id507", false], [25, "id582", false], [25, "id657", false], [25, "id732", false]], "binops (arkouda.strings.strings attribute)": [[53, "arkouda.strings.Strings.BinOps", false]], "bit_count() (arkouda.akint64 method)": [[25, "arkouda.akint64.bit_count", false], [25, "id829", false], [25, "id831", false]], "bit_count() (arkouda.akuint64 method)": [[25, "arkouda.akuint64.bit_count", false], [25, "id833", false], [25, "id835", false]], "bit_count() (arkouda.bittype method)": [[25, "arkouda.bitType.bit_count", false], [25, "id855", false]], "bit_count() (arkouda.byte method)": [[25, "arkouda.byte.bit_count", false]], "bit_count() (arkouda.dtypes.bittype method)": [[22, "arkouda.dtypes.bitType.bit_count", false]], "bit_count() (arkouda.dtypes.int16 method)": [[22, "arkouda.dtypes.int16.bit_count", false]], "bit_count() (arkouda.dtypes.int32 method)": [[22, "arkouda.dtypes.int32.bit_count", false]], "bit_count() (arkouda.dtypes.int64 method)": [[22, "arkouda.dtypes.int64.bit_count", false]], "bit_count() (arkouda.dtypes.int8 method)": [[22, "arkouda.dtypes.int8.bit_count", false]], "bit_count() (arkouda.dtypes.uint16 method)": [[22, "arkouda.dtypes.uint16.bit_count", false]], "bit_count() (arkouda.dtypes.uint32 method)": [[22, "arkouda.dtypes.uint32.bit_count", false]], "bit_count() (arkouda.dtypes.uint64 method)": [[22, "arkouda.dtypes.uint64.bit_count", false]], "bit_count() (arkouda.dtypes.uint8 method)": [[22, "arkouda.dtypes.uint8.bit_count", false]], "bit_count() (arkouda.int16 method)": [[25, "arkouda.int16.bit_count", false]], "bit_count() (arkouda.int32 method)": [[25, "arkouda.int32.bit_count", false]], "bit_count() (arkouda.int64 method)": [[25, "arkouda.int64.bit_count", false], [25, "id889", false]], "bit_count() (arkouda.int8 method)": [[25, "arkouda.int8.bit_count", false]], "bit_count() (arkouda.int_ method)": [[25, "arkouda.int_.bit_count", false]], "bit_count() (arkouda.intc method)": [[25, "arkouda.intc.bit_count", false]], "bit_count() (arkouda.intp method)": [[25, "arkouda.intp.bit_count", false]], "bit_count() (arkouda.longlong method)": [[25, "arkouda.longlong.bit_count", false]], "bit_count() (arkouda.numpy.bittype method)": [[36, "arkouda.numpy.bitType.bit_count", false]], "bit_count() (arkouda.numpy.byte method)": [[36, "arkouda.numpy.byte.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.bittype method)": [[35, "arkouda.numpy.dtypes.bitType.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int16 method)": [[35, "arkouda.numpy.dtypes.int16.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int32 method)": [[35, "arkouda.numpy.dtypes.int32.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int64 method)": [[35, "arkouda.numpy.dtypes.int64.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int8 method)": [[35, "arkouda.numpy.dtypes.int8.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint16 method)": [[35, "arkouda.numpy.dtypes.uint16.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint32 method)": [[35, "arkouda.numpy.dtypes.uint32.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint64 method)": [[35, "arkouda.numpy.dtypes.uint64.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint8 method)": [[35, "arkouda.numpy.dtypes.uint8.bit_count", false]], "bit_count() (arkouda.numpy.int16 method)": [[36, "arkouda.numpy.int16.bit_count", false]], "bit_count() (arkouda.numpy.int32 method)": [[36, "arkouda.numpy.int32.bit_count", false]], "bit_count() (arkouda.numpy.int64 method)": [[36, "arkouda.numpy.int64.bit_count", false]], "bit_count() (arkouda.numpy.int8 method)": [[36, "arkouda.numpy.int8.bit_count", false]], "bit_count() (arkouda.numpy.int_ method)": [[36, "arkouda.numpy.int_.bit_count", false]], "bit_count() (arkouda.numpy.intc method)": [[36, "arkouda.numpy.intc.bit_count", false]], "bit_count() (arkouda.numpy.intp method)": [[36, "arkouda.numpy.intp.bit_count", false]], "bit_count() (arkouda.numpy.longlong method)": [[36, "arkouda.numpy.longlong.bit_count", false]], "bit_count() (arkouda.numpy.short method)": [[36, "arkouda.numpy.short.bit_count", false]], "bit_count() (arkouda.numpy.ubyte method)": [[36, "arkouda.numpy.ubyte.bit_count", false]], "bit_count() (arkouda.numpy.uint method)": [[36, "arkouda.numpy.uint.bit_count", false]], "bit_count() (arkouda.numpy.uint16 method)": [[36, "arkouda.numpy.uint16.bit_count", false]], "bit_count() (arkouda.numpy.uint32 method)": [[36, "arkouda.numpy.uint32.bit_count", false]], "bit_count() (arkouda.numpy.uint64 method)": [[36, "arkouda.numpy.uint64.bit_count", false]], "bit_count() (arkouda.numpy.uint8 method)": [[36, "arkouda.numpy.uint8.bit_count", false]], "bit_count() (arkouda.numpy.uintc method)": [[36, "arkouda.numpy.uintc.bit_count", false]], "bit_count() (arkouda.numpy.uintp method)": [[36, "arkouda.numpy.uintp.bit_count", false]], "bit_count() (arkouda.numpy.ulonglong method)": [[36, "arkouda.numpy.ulonglong.bit_count", false]], "bit_count() (arkouda.numpy.ushort method)": [[36, "arkouda.numpy.ushort.bit_count", false]], "bit_count() (arkouda.short method)": [[25, "arkouda.short.bit_count", false]], "bit_count() (arkouda.ubyte method)": [[25, "arkouda.ubyte.bit_count", false]], "bit_count() (arkouda.uint method)": [[25, "arkouda.uint.bit_count", false]], "bit_count() (arkouda.uint16 method)": [[25, "arkouda.uint16.bit_count", false]], "bit_count() (arkouda.uint32 method)": [[25, "arkouda.uint32.bit_count", false]], "bit_count() (arkouda.uint64 method)": [[25, "arkouda.uint64.bit_count", false]], "bit_count() (arkouda.uint8 method)": [[25, "arkouda.uint8.bit_count", false]], "bit_count() (arkouda.uintc method)": [[25, "arkouda.uintc.bit_count", false]], "bit_count() (arkouda.uintp method)": [[25, "arkouda.uintp.bit_count", false]], "bit_count() (arkouda.ulonglong method)": [[25, "arkouda.ulonglong.bit_count", false]], "bit_count() (arkouda.ushort method)": [[25, "arkouda.ushort.bit_count", false]], "bits (arkouda.array_api.data_type_functions.finfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.finfo_object.bits", false]], "bits (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.iinfo_object.bits", false]], "bits (arkouda.finfo attribute)": [[25, "arkouda.finfo.bits", false]], "bits (arkouda.iinfo attribute)": [[25, "arkouda.iinfo.bits", false]], "bits (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.bits", false]], "bits (arkouda.numpy.iinfo attribute)": [[36, "arkouda.numpy.iinfo.bits", false]], "bittype (class in arkouda)": [[25, "arkouda.bitType", false], [25, "id854", false]], "bittype (class in arkouda.dtypes)": [[22, "arkouda.dtypes.bitType", false]], "bittype (class in arkouda.numpy)": [[36, "arkouda.numpy.bitType", false]], "bittype (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.bitType", false]], "bitvector (class in arkouda)": [[25, "arkouda.BitVector", false]], "bitvector (class in arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.BitVector", false]], "bitvectorizer() (in module arkouda)": [[25, "arkouda.BitVectorizer", false]], "bitvectorizer() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.BitVectorizer", false]], "bitwise_and() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.bitwise_and", false]], "bitwise_invert() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.bitwise_invert", false]], "bitwise_left_shift() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.bitwise_left_shift", false]], "bitwise_or() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.bitwise_or", false]], "bitwise_right_shift() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.bitwise_right_shift", false]], "bitwise_xor() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.bitwise_xor", false]], "bool() (arkouda.dtype method)": [[25, "arkouda.DType.BOOL", false]], "bool() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.BOOL", false]], "bool() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.BOOL", false]], "bool() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.BOOL", false]], "bool_ (class in arkouda)": [[25, "arkouda.bool_", false]], "bool_ (class in arkouda.dtypes)": [[22, "arkouda.dtypes.bool_", false]], "bool_ (class in arkouda.numpy)": [[36, "arkouda.numpy.bool_", false]], "bool_ (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.bool_", false]], "bool_scalars (class in arkouda)": [[25, "arkouda.bool_scalars", false]], "bool_scalars (class in arkouda.dtypes)": [[22, "arkouda.dtypes.bool_scalars", false]], "bool_scalars (class in arkouda.numpy)": [[36, "arkouda.numpy.bool_scalars", false]], "bool_scalars (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.bool_scalars", false]], "booldtype (class in arkouda)": [[25, "arkouda.BoolDType", false]], "booldtype (class in arkouda.numpy)": [[36, "arkouda.numpy.BoolDType", false]], "broadcast() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.broadcast", false]], "broadcast() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.broadcast", false]], "broadcast() (arkouda.groupby method)": [[25, "arkouda.GroupBy.broadcast", false], [25, "id270", false], [25, "id317", false], [25, "id364", false], [25, "id411", false], [25, "id458", false], [92, "arkouda.GroupBy.broadcast", false]], "broadcast() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.broadcast", false]], "broadcast() (in module arkouda)": [[25, "arkouda.broadcast", false], [25, "id856", false], [25, "id857", false], [25, "id858", false]], "broadcast() (in module arkouda.groupbyclass)": [[23, "arkouda.groupbyclass.broadcast", false]], "broadcast_arrays() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.broadcast_arrays", false]], "broadcast_dims() (in module arkouda)": [[25, "arkouda.broadcast_dims", false]], "broadcast_dims() (in module arkouda.util)": [[56, "arkouda.util.broadcast_dims", false]], "broadcast_to() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.broadcast_to", false]], "broadcast_to_shape() (in module arkouda)": [[25, "arkouda.broadcast_to_shape", false]], "broadcast_to_shape() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.broadcast_to_shape", false]], "build_from_components() (arkouda.groupby method)": [[25, "arkouda.GroupBy.build_from_components", false], [25, "id271", false], [25, "id318", false], [25, "id365", false], [25, "id412", false], [25, "id459", false]], "build_from_components() (arkouda.groupby static method)": [[92, "arkouda.GroupBy.build_from_components", false]], "build_from_components() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.build_from_components", false]], "byte (class in arkouda)": [[25, "arkouda.byte", false]], "byte (class in arkouda.numpy)": [[36, "arkouda.numpy.byte", false]], "bytedtype (class in arkouda)": [[25, "arkouda.ByteDType", false]], "bytedtype (class in arkouda.numpy)": [[36, "arkouda.numpy.ByteDType", false]], "bytes_ (class in arkouda)": [[25, "arkouda.bytes_", false]], "bytes_ (class in arkouda.numpy)": [[36, "arkouda.numpy.bytes_", false]], "bytesdtype (class in arkouda)": [[25, "arkouda.BytesDType", false]], "bytesdtype (class in arkouda.numpy)": [[36, "arkouda.numpy.BytesDType", false]], "byteswap() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.byteswap", false]], "byteswap() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.byteswap", false]], "byteswap() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.byteswap", false]], "byteswap() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.byteswap", false]], "byteswap() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.byteswap", false]], "byteswap() (arkouda.str_ method)": [[25, "arkouda.str_.byteswap", false], [25, "id1299", false]], "cached_regex_patterns() (arkouda.strings method)": [[25, "arkouda.Strings.cached_regex_patterns", false], [25, "id510", false], [25, "id585", false], [25, "id660", false], [25, "id735", false]], "cached_regex_patterns() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.cached_regex_patterns", false]], "cachedaccessor (class in arkouda)": [[25, "arkouda.CachedAccessor", false]], "cachedaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.CachedAccessor", false]], "can_cast() (in module arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.can_cast", false]], "capitalize() (arkouda.strings method)": [[25, "arkouda.Strings.capitalize", false], [25, "id511", false], [25, "id586", false], [25, "id661", false], [25, "id736", false]], "capitalize() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.capitalize", false]], "cast() (in module arkouda)": [[25, "arkouda.cast", false], [25, "id859", false], [95, "arkouda.cast", false]], "cast() (in module arkouda.dtypes)": [[22, "arkouda.dtypes.cast", false]], "cast() (in module arkouda.numeric)": [[34, "arkouda.numeric.cast", false]], "cast() (in module arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.cast", false]], "categorical (class in arkouda)": [[25, "arkouda.Categorical", false], [25, "id12", false], [25, "id70", false], [89, "arkouda.Categorical", false]], "categorical (class in arkouda.categorical)": [[18, "arkouda.categorical.Categorical", false]], "categories (arkouda.categorical attribute)": [[25, "arkouda.Categorical.categories", false], [25, "id13", false], [25, "id71", false], [89, "arkouda.Categorical.categories", false]], "categories (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.categories", false]], "cdouble (class in arkouda)": [[25, "arkouda.cdouble", false]], "cdouble (class in arkouda.numpy)": [[36, "arkouda.numpy.cdouble", false]], "ceil() (in module arkouda)": [[25, "arkouda.ceil", false]], "ceil() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.ceil", false]], "ceil() (in module arkouda.numeric)": [[34, "arkouda.numeric.ceil", false]], "cfloat (class in arkouda)": [[25, "arkouda.cfloat", false]], "cfloat (class in arkouda.numpy)": [[36, "arkouda.numpy.cfloat", false]], "character (class in arkouda)": [[25, "arkouda.character", false]], "character (class in arkouda.numpy)": [[36, "arkouda.numpy.character", false]], "chi2 (class in arkouda.scipy.stats)": [[46, "arkouda.scipy.stats.chi2", false]], "chisquare() (in module arkouda)": [[25, "arkouda.chisquare", false]], "chisquare() (in module arkouda.scipy)": [[44, "arkouda.scipy.chisquare", false]], "choice() (arkouda.generator method)": [[25, "arkouda.Generator.choice", false]], "choice() (arkouda.random.generator method)": [[42, "arkouda.random.Generator.choice", false]], "choice() (in module arkouda.random.generator)": [[96, "arkouda.random.Generator.choice", false]], "choose() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.choose", false]], "choose() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.choose", false]], "choose() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.choose", false]], "choose() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.choose", false]], "choose() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.choose", false]], "choose() (arkouda.str_ method)": [[25, "arkouda.str_.choose", false], [25, "id1300", false]], "chunk_info() (arkouda.array_api.array method)": [[8, "arkouda.array_api.Array.chunk_info", false]], "chunk_info() (arkouda.array_api.array_object.array method)": [[4, "arkouda.array_api.array_object.Array.chunk_info", false]], "clear() (arkouda.dtypes.number_format_strings method)": [[22, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.dtypes.seriesdtypes method)": [[22, "arkouda.dtypes.SeriesDTypes.clear", false]], "clear() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.numpy.dtypes.number_format_strings method)": [[35, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.numpy.dtypes.seriesdtypes method)": [[35, "arkouda.numpy.dtypes.SeriesDTypes.clear", false]], "clear() (arkouda.numpy.number_format_strings method)": [[36, "arkouda.numpy.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.numpy.sctypedict method)": [[36, "arkouda.numpy.sctypeDict.clear", false]], "clear() (arkouda.numpy.sctypes method)": [[36, "arkouda.numpy.sctypes.clear", false]], "clear() (arkouda.numpy.seriesdtypes method)": [[36, "arkouda.numpy.SeriesDTypes.clear", false]], "clear() (arkouda.sctypedict method)": [[25, "arkouda.sctypeDict.clear", false]], "clear() (arkouda.sctypes method)": [[25, "arkouda.sctypes.clear", false]], "clear() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.clear", false]], "clear() (in module arkouda)": [[25, "arkouda.clear", false]], "clear() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.clear", false]], "clip() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.clip", false]], "clip() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.clip", false]], "clip() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.clip", false]], "clip() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.clip", false]], "clip() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.clip", false]], "clip() (arkouda.str_ method)": [[25, "arkouda.str_.clip", false], [25, "id1301", false]], "clip() (in module arkouda)": [[25, "arkouda.clip", false]], "clip() (in module arkouda.array_api.utility_functions)": [[16, "arkouda.array_api.utility_functions.clip", false]], "clip() (in module arkouda.numeric)": [[34, "arkouda.numeric.clip", false]], "clongdouble (class in arkouda)": [[25, "arkouda.clongdouble", false]], "clongdouble (class in arkouda.numpy)": [[36, "arkouda.numpy.clongdouble", false]], "clongdoubledtype (class in arkouda)": [[25, "arkouda.CLongDoubleDType", false]], "clongdoubledtype (class in arkouda.numpy)": [[36, "arkouda.numpy.CLongDoubleDType", false]], "clongfloat (class in arkouda)": [[25, "arkouda.clongfloat", false]], "clongfloat (class in arkouda.numpy)": [[36, "arkouda.numpy.clongfloat", false]], "clz() (arkouda.pdarray method)": [[25, "arkouda.pdarray.clz", false], [25, "id1015", false], [25, "id1085", false], [25, "id1155", false], [25, "id1225", false], [25, "id945", false]], "clz() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.clz", false]], "clz() (in module arkouda)": [[25, "arkouda.clz", false]], "clz() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.clz", false]], "coargsort() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.coargsort", false], [25, "id137", false]], "coargsort() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.coargsort", false]], "coargsort() (in module arkouda)": [[25, "arkouda.coargsort", false], [25, "id860", false], [25, "id861", false], [86, "arkouda.coargsort", false]], "coargsort() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.coargsort", false]], "coargsort() (in module arkouda.sorting)": [[50, "arkouda.sorting.coargsort", false]], "codes (arkouda.categorical attribute)": [[25, "arkouda.Categorical.codes", false], [25, "id14", false], [25, "id72", false], [89, "arkouda.Categorical.codes", false]], "codes (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.codes", false]], "columns (arkouda.dataframe property)": [[25, "arkouda.DataFrame.columns", false], [25, "id138", false]], "columns (arkouda.dataframe.dataframe property)": [[21, "arkouda.dataframe.DataFrame.columns", false]], "compiler_flag() (arkouda.dtypes.annotations method)": [[22, "arkouda.dtypes.annotations.compiler_flag", false]], "compiler_flag() (arkouda.numpy.dtypes.annotations method)": [[35, "arkouda.numpy.dtypes.annotations.compiler_flag", false]], "complex128 (class in arkouda)": [[25, "arkouda.complex128", false]], "complex128 (class in arkouda.dtypes)": [[22, "arkouda.dtypes.complex128", false]], "complex128 (class in arkouda.numpy)": [[36, "arkouda.numpy.complex128", false]], "complex128 (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.complex128", false]], "complex128() (arkouda.dtype method)": [[25, "arkouda.DType.COMPLEX128", false]], "complex128() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.COMPLEX128", false]], "complex128() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.COMPLEX128", false]], "complex128() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.COMPLEX128", false]], "complex128dtype (class in arkouda)": [[25, "arkouda.Complex128DType", false]], "complex128dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.Complex128DType", false]], "complex64 (class in arkouda)": [[25, "arkouda.complex64", false]], "complex64 (class in arkouda.dtypes)": [[22, "arkouda.dtypes.complex64", false]], "complex64 (class in arkouda.numpy)": [[36, "arkouda.numpy.complex64", false]], "complex64 (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.complex64", false]], "complex64() (arkouda.dtype method)": [[25, "arkouda.DType.COMPLEX64", false]], "complex64() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.COMPLEX64", false]], "complex64() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.COMPLEX64", false]], "complex64() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.COMPLEX64", false]], "complex64dtype (class in arkouda)": [[25, "arkouda.Complex64DType", false]], "complex64dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.Complex64DType", false]], "components (arkouda.timeclass.timedelta property)": [[55, "arkouda.timeclass.Timedelta.components", false]], "components (arkouda.timedelta property)": [[25, "arkouda.Timedelta.components", false], [25, "id801", false]], "compress() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.compress", false]], "compress() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.compress", false]], "compress() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.compress", false]], "compress() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.compress", false]], "compress() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.compress", false]], "compress() (arkouda.str_ method)": [[25, "arkouda.str_.compress", false], [25, "id1302", false]], "compute_join_size() (in module arkouda)": [[25, "arkouda.compute_join_size", false]], "compute_join_size() (in module arkouda.join)": [[30, "arkouda.join.compute_join_size", false]], "concat() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.concat", false], [25, "id139", false]], "concat() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.concat", false]], "concat() (arkouda.index method)": [[25, "arkouda.Index.concat", false]], "concat() (arkouda.index.index method)": [[26, "arkouda.index.Index.concat", false]], "concat() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.concat", false]], "concat() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.concat", false]], "concat() (arkouda.segarray class method)": [[25, "arkouda.SegArray.concat", false]], "concat() (arkouda.segarray.segarray class method)": [[48, "arkouda.segarray.SegArray.concat", false]], "concat() (arkouda.series method)": [[25, "arkouda.Series.concat", false]], "concat() (arkouda.series.series method)": [[49, "arkouda.series.Series.concat", false]], "concat() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.concat", false]], "concat() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.concat", false]], "concat() (in module arkouda.index)": [[85, "arkouda.Index.concat", false]], "concat() (in module arkouda.multiindex)": [[85, "arkouda.MultiIndex.concat", false]], "concatenate() (arkouda.categorical method)": [[25, "arkouda.Categorical.concatenate", false], [25, "id26", false], [25, "id84", false]], "concatenate() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.concatenate", false]], "concatenate() (in module arkouda)": [[25, "arkouda.concatenate", false], [25, "id862", false], [25, "id863", false], [90, "arkouda.concatenate", false]], "concatenate() (in module arkouda.pdarraysetops)": [[40, "arkouda.pdarraysetops.concatenate", false]], "concatenate() (in module arkouda.util)": [[56, "arkouda.util.concatenate", false]], "conj() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.conj", false]], "conj() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.conj", false]], "conj() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.conj", false]], "conj() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.conj", false]], "conj() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.conj", false]], "conj() (arkouda.str_ method)": [[25, "arkouda.str_.conj", false], [25, "id1303", false]], "conj() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.conj", false]], "conjugate() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.conjugate", false]], "conjugate() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.conjugate", false]], "conjugate() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.conjugate", false]], "conjugate() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.conjugate", false]], "conjugate() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.conjugate", false]], "conjugate() (arkouda.str_ method)": [[25, "arkouda.str_.conjugate", false], [25, "id1304", false]], "connect() (in module arkouda)": [[100, "arkouda.connect", false]], "connect() (in module arkouda.client)": [[19, "arkouda.client.connect", false]], "conserves (arkouda.bitvector attribute)": [[25, "arkouda.BitVector.conserves", false]], "conserves (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.conserves", false]], "contains() (arkouda.categorical method)": [[25, "arkouda.Categorical.contains", false], [25, "id27", false], [25, "id85", false], [89, "arkouda.Categorical.contains", false]], "contains() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.contains", false]], "contains() (arkouda.strings method)": [[25, "arkouda.Strings.contains", false], [25, "id512", false], [25, "id587", false], [25, "id662", false], [25, "id737", false], [101, "arkouda.Strings.contains", false]], "contains() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.contains", false]], "convert_bytes() (in module arkouda.util)": [[56, "arkouda.util.convert_bytes", false]], "convert_if_categorical() (in module arkouda)": [[25, "arkouda.convert_if_categorical", false]], "convert_if_categorical() (in module arkouda.util)": [[56, "arkouda.util.convert_if_categorical", false]], "copy() (arkouda.arkouda_supported_dtypes method)": [[25, "arkouda.ARKOUDA_SUPPORTED_DTYPES.copy", false]], "copy() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.copy", false]], "copy() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.copy", false]], "copy() (arkouda.dtypes method)": [[25, "arkouda.DTypes.copy", false]], "copy() (arkouda.dtypes.arkouda_supported_dtypes method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.copy", false]], "copy() (arkouda.dtypes.dtypeobjects method)": [[22, "arkouda.dtypes.DTypeObjects.copy", false]], "copy() (arkouda.dtypes.dtypes method)": [[22, "arkouda.dtypes.DTypes.copy", false]], "copy() (arkouda.dtypes.inttypes method)": [[22, "arkouda.dtypes.intTypes.copy", false]], "copy() (arkouda.dtypes.number_format_strings method)": [[22, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.dtypes.numericdtypes method)": [[22, "arkouda.dtypes.NumericDTypes.copy", false]], "copy() (arkouda.dtypes.scalardtypes method)": [[22, "arkouda.dtypes.ScalarDTypes.copy", false]], "copy() (arkouda.dtypes.seriesdtypes method)": [[22, "arkouda.dtypes.SeriesDTypes.copy", false]], "copy() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.copy", false]], "copy() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.copy", false]], "copy() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.copy", false]], "copy() (arkouda.inttypes method)": [[25, "arkouda.intTypes.copy", false], [25, "id891", false], [25, "id900", false]], "copy() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.copy", false]], "copy() (arkouda.numpy.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.copy", false]], "copy() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.copy", false]], "copy() (arkouda.numpy.dtypeobjects method)": [[36, "arkouda.numpy.DTypeObjects.copy", false]], "copy() (arkouda.numpy.dtypes method)": [[36, "arkouda.numpy.DTypes.copy", false]], "copy() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.copy", false]], "copy() (arkouda.numpy.dtypes.dtypeobjects method)": [[35, "arkouda.numpy.dtypes.DTypeObjects.copy", false]], "copy() (arkouda.numpy.dtypes.dtypes method)": [[35, "arkouda.numpy.dtypes.DTypes.copy", false]], "copy() (arkouda.numpy.dtypes.inttypes method)": [[35, "arkouda.numpy.dtypes.intTypes.copy", false]], "copy() (arkouda.numpy.dtypes.number_format_strings method)": [[35, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.numpy.dtypes.numericdtypes method)": [[35, "arkouda.numpy.dtypes.NumericDTypes.copy", false]], "copy() (arkouda.numpy.dtypes.scalardtypes method)": [[35, "arkouda.numpy.dtypes.ScalarDTypes.copy", false]], "copy() (arkouda.numpy.dtypes.seriesdtypes method)": [[35, "arkouda.numpy.dtypes.SeriesDTypes.copy", false]], "copy() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.copy", false]], "copy() (arkouda.numpy.inttypes method)": [[36, "arkouda.numpy.intTypes.copy", false]], "copy() (arkouda.numpy.number_format_strings method)": [[36, "arkouda.numpy.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.numpy.numericdtypes method)": [[36, "arkouda.numpy.NumericDTypes.copy", false]], "copy() (arkouda.numpy.scalardtypes method)": [[36, "arkouda.numpy.ScalarDTypes.copy", false]], "copy() (arkouda.numpy.sctypedict method)": [[36, "arkouda.numpy.sctypeDict.copy", false]], "copy() (arkouda.numpy.sctypes method)": [[36, "arkouda.numpy.sctypes.copy", false]], "copy() (arkouda.numpy.seriesdtypes method)": [[36, "arkouda.numpy.SeriesDTypes.copy", false]], "copy() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.copy", false]], "copy() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.copy", false]], "copy() (arkouda.sctypedict method)": [[25, "arkouda.sctypeDict.copy", false]], "copy() (arkouda.sctypes method)": [[25, "arkouda.sctypes.copy", false]], "copy() (arkouda.segarray method)": [[25, "arkouda.SegArray.copy", false]], "copy() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.copy", false]], "copy() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.copy", false]], "copy() (arkouda.str_ method)": [[25, "arkouda.str_.copy", false], [25, "id1305", false]], "copy() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.copy", false]], "corr() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.corr", false], [25, "id140", false]], "corr() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.corr", false]], "corr() (arkouda.pdarray method)": [[25, "arkouda.pdarray.corr", false], [25, "id1016", false], [25, "id1086", false], [25, "id1156", false], [25, "id1226", false], [25, "id946", false]], "corr() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.corr", false]], "corr() (in module arkouda)": [[25, "arkouda.corr", false]], "corr() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.corr", false]], "cos() (in module arkouda)": [[25, "arkouda.cos", false], [87, "arkouda.cos", false]], "cos() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.cos", false]], "cos() (in module arkouda.numeric)": [[34, "arkouda.numeric.cos", false]], "cosh() (in module arkouda)": [[25, "arkouda.cosh", false]], "cosh() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.cosh", false]], "cosh() (in module arkouda.numeric)": [[34, "arkouda.numeric.cosh", false]], "count() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.count", false], [25, "id141", false]], "count() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.count", false]], "count() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.count", false]], "count() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.count", false]], "count() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.count", false]], "count() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.count", false]], "count() (arkouda.dtypes.arkouda_supported_floats method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_FLOATS.count", false]], "count() (arkouda.dtypes.arkouda_supported_ints method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_INTS.count", false]], "count() (arkouda.dtypes.arkouda_supported_numbers method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_NUMBERS.count", false]], "count() (arkouda.groupby method)": [[25, "arkouda.GroupBy.count", false], [25, "id272", false], [25, "id319", false], [25, "id366", false], [25, "id413", false], [25, "id460", false], [92, "arkouda.GroupBy.count", false]], "count() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_floats method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_ints method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_numbers method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS.count", false]], "count() (arkouda.numpy.scalartype method)": [[36, "arkouda.numpy.ScalarType.count", false]], "count() (arkouda.scalartype method)": [[25, "arkouda.ScalarType.count", false]], "count_nonzero() (in module arkouda)": [[25, "arkouda.count_nonzero", false]], "count_nonzero() (in module arkouda.numeric)": [[34, "arkouda.numeric.count_nonzero", false]], "counts (arkouda.array_api.set_functions.uniqueallresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueAllResult.counts", false]], "counts (arkouda.array_api.set_functions.uniquecountsresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueCountsResult.counts", false]], "cov() (arkouda.pdarray method)": [[25, "arkouda.pdarray.cov", false], [25, "id1017", false], [25, "id1087", false], [25, "id1157", false], [25, "id1227", false], [25, "id947", false]], "cov() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.cov", false]], "cov() (in module arkouda)": [[25, "arkouda.cov", false]], "cov() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.cov", false]], "create_pdarray() (in module arkouda)": [[25, "arkouda.create_pdarray", false], [25, "id864", false], [25, "id865", false], [25, "id866", false], [25, "id867", false]], "create_sparray() (in module arkouda)": [[25, "arkouda.create_sparray", false]], "create_sparray() (in module arkouda.sparrayclass)": [[51, "arkouda.sparrayclass.create_sparray", false]], "critical (arkouda.logger.loglevel attribute)": [[31, "arkouda.logger.LogLevel.CRITICAL", false]], "critical (arkouda.loglevel attribute)": [[25, "arkouda.LogLevel.CRITICAL", false]], "csingle (class in arkouda)": [[25, "arkouda.csingle", false]], "csingle (class in arkouda.numpy)": [[36, "arkouda.numpy.csingle", false]], "ctz() (arkouda.pdarray method)": [[25, "arkouda.pdarray.ctz", false], [25, "id1018", false], [25, "id1088", false], [25, "id1158", false], [25, "id1228", false], [25, "id948", false]], "ctz() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.ctz", false]], "ctz() (in module arkouda)": [[25, "arkouda.ctz", false]], "ctz() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.ctz", false]], "cumprod() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.cumprod", false]], "cumprod() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.cumprod", false]], "cumprod() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.cumprod", false]], "cumprod() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.cumprod", false]], "cumprod() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.cumprod", false]], "cumprod() (arkouda.str_ method)": [[25, "arkouda.str_.cumprod", false], [25, "id1306", false]], "cumprod() (in module arkouda)": [[25, "arkouda.cumprod", false], [87, "arkouda.cumprod", false]], "cumprod() (in module arkouda.numeric)": [[34, "arkouda.numeric.cumprod", false]], "cumsum() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.cumsum", false]], "cumsum() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.cumsum", false]], "cumsum() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.cumsum", false]], "cumsum() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.cumsum", false]], "cumsum() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.cumsum", false]], "cumsum() (arkouda.str_ method)": [[25, "arkouda.str_.cumsum", false], [25, "id1307", false]], "cumsum() (in module arkouda)": [[25, "arkouda.cumsum", false], [25, "id868", false], [25, "id869", false], [87, "arkouda.cumsum", false]], "cumsum() (in module arkouda.numeric)": [[34, "arkouda.numeric.cumsum", false]], "cumulative_sum() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.cumulative_sum", false]], "data (arkouda.accessor.datetimeaccessor attribute)": [[2, "arkouda.accessor.DatetimeAccessor.data", false]], "data (arkouda.accessor.stringaccessor attribute)": [[2, "arkouda.accessor.StringAccessor.data", false]], "data (arkouda.datetimeaccessor attribute)": [[25, "arkouda.DatetimeAccessor.data", false]], "data (arkouda.stringaccessor attribute)": [[25, "arkouda.StringAccessor.data", false]], "data() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.data", false]], "data() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.data", false]], "data() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.data", false]], "data() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.data", false]], "data() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.data", false]], "data() (arkouda.str_ method)": [[25, "arkouda.str_.data", false], [25, "id1308", false]], "dataframe (class in arkouda)": [[25, "arkouda.DataFrame", false], [25, "id128", false], [91, "arkouda.DataFrame", false]], "dataframe (class in arkouda.dataframe)": [[21, "arkouda.dataframe.DataFrame", false]], "dataframegroupby (class in arkouda)": [[25, "arkouda.DataFrameGroupBy", false]], "dataframegroupby (class in arkouda.dataframe)": [[21, "arkouda.dataframe.DataFrameGroupBy", false]], "datasource (class in arkouda)": [[25, "arkouda.DataSource", false]], "datasource (class in arkouda.numpy)": [[36, "arkouda.numpy.DataSource", false]], "date (arkouda.datetime property)": [[25, "arkouda.Datetime.date", false], [25, "id185", false], [25, "id218", false]], "date (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.date", false]], "date_operators() (in module arkouda)": [[25, "arkouda.date_operators", false]], "date_operators() (in module arkouda.accessor)": [[2, "arkouda.accessor.date_operators", false]], "date_range() (in module arkouda)": [[25, "arkouda.date_range", false], [25, "id870", false]], "date_range() (in module arkouda.timeclass)": [[55, "arkouda.timeclass.date_range", false]], "datetime (class in arkouda)": [[25, "arkouda.Datetime", false], [25, "id184", false], [25, "id217", false]], "datetime (class in arkouda.timeclass)": [[55, "arkouda.timeclass.Datetime", false]], "datetime64 (class in arkouda)": [[25, "arkouda.datetime64", false]], "datetime64 (class in arkouda.numpy)": [[36, "arkouda.numpy.datetime64", false]], "datetime64dtype (class in arkouda)": [[25, "arkouda.DateTime64DType", false]], "datetime64dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.DateTime64DType", false]], "datetimeaccessor (class in arkouda)": [[25, "arkouda.DatetimeAccessor", false]], "datetimeaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.DatetimeAccessor", false]], "day (arkouda.datetime property)": [[25, "arkouda.Datetime.day", false], [25, "id186", false], [25, "id219", false]], "day (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.day", false]], "day_of_week (arkouda.datetime property)": [[25, "arkouda.Datetime.day_of_week", false], [25, "id187", false], [25, "id220", false]], "day_of_week (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.day_of_week", false]], "day_of_year (arkouda.datetime property)": [[25, "arkouda.Datetime.day_of_year", false], [25, "id188", false], [25, "id221", false]], "day_of_year (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.day_of_year", false]], "dayofweek (arkouda.datetime property)": [[25, "arkouda.Datetime.dayofweek", false], [25, "id189", false], [25, "id222", false]], "dayofweek (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.dayofweek", false]], "dayofyear (arkouda.datetime property)": [[25, "arkouda.Datetime.dayofyear", false], [25, "id190", false], [25, "id223", false]], "dayofyear (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.dayofyear", false]], "days (arkouda.timeclass.timedelta property)": [[55, "arkouda.timeclass.Timedelta.days", false]], "days (arkouda.timedelta property)": [[25, "arkouda.Timedelta.days", false], [25, "id802", false]], "debug (arkouda.logger.loglevel attribute)": [[31, "arkouda.logger.LogLevel.DEBUG", false]], "debug (arkouda.loglevel attribute)": [[25, "arkouda.LogLevel.DEBUG", false]], "decode() (arkouda.strings method)": [[25, "arkouda.Strings.decode", false], [25, "id513", false], [25, "id588", false], [25, "id663", false], [25, "id738", false]], "decode() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.decode", false]], "default_rng() (in module arkouda.random)": [[96, "arkouda.random.default_rng", false]], "deg2rad() (in module arkouda)": [[25, "arkouda.deg2rad", false]], "deg2rad() (in module arkouda.numeric)": [[34, "arkouda.numeric.deg2rad", false]], "delete() (in module arkouda)": [[25, "arkouda.delete", false]], "delete() (in module arkouda.pdarraymanipulation)": [[39, "arkouda.pdarraymanipulation.delete", false]], "delete_directory() (in module arkouda.io_util)": [[29, "arkouda.io_util.delete_directory", false]], "delimited_file_to_dict() (in module arkouda.io_util)": [[29, "arkouda.io_util.delimited_file_to_dict", false]], "denominator() (arkouda.integer method)": [[25, "arkouda.integer.denominator", false]], "denominator() (arkouda.numpy.integer method)": [[36, "arkouda.numpy.integer.denominator", false]], "deprecate() (in module arkouda)": [[25, "arkouda.deprecate", false]], "deprecate() (in module arkouda.numpy)": [[36, "arkouda.numpy.deprecate", false]], "deprecate_with_doc() (in module arkouda)": [[25, "arkouda.deprecate_with_doc", false]], "deprecate_with_doc() (in module arkouda.numpy)": [[36, "arkouda.numpy.deprecate_with_doc", false]], "device (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.device", false]], "device (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.device", false]], "df (arkouda.dataframe.dataframegroupby attribute)": [[21, "arkouda.dataframe.DataFrameGroupBy.df", false]], "df (arkouda.dataframegroupby attribute)": [[25, "arkouda.DataFrameGroupBy.df", false]], "diagonal() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.diagonal", false]], "diagonal() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.diagonal", false]], "diagonal() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.diagonal", false]], "diagonal() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.diagonal", false]], "diagonal() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.diagonal", false]], "diagonal() (arkouda.str_ method)": [[25, "arkouda.str_.diagonal", false], [25, "id1309", false]], "dict_to_delimited_file() (in module arkouda.io_util)": [[29, "arkouda.io_util.dict_to_delimited_file", false]], "diff() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.diff", false]], "diff() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.diff", false]], "diff() (arkouda.series method)": [[25, "arkouda.Series.diff", false]], "diff() (arkouda.series.series method)": [[49, "arkouda.series.Series.diff", false]], "diff() (in module arkouda.array_api.utility_functions)": [[16, "arkouda.array_api.utility_functions.diff", false]], "diffaggregate (class in arkouda)": [[25, "arkouda.DiffAggregate", false]], "diffaggregate (class in arkouda.dataframe)": [[21, "arkouda.dataframe.DiffAggregate", false]], "difference() (arkouda.arkouda_supported_dtypes method)": [[25, "arkouda.ARKOUDA_SUPPORTED_DTYPES.difference", false]], "difference() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.difference", false]], "difference() (arkouda.dtypes method)": [[25, "arkouda.DTypes.difference", false]], "difference() (arkouda.dtypes.arkouda_supported_dtypes method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.difference", false]], "difference() (arkouda.dtypes.dtypeobjects method)": [[22, "arkouda.dtypes.DTypeObjects.difference", false]], "difference() (arkouda.dtypes.dtypes method)": [[22, "arkouda.dtypes.DTypes.difference", false]], "difference() (arkouda.dtypes.inttypes method)": [[22, "arkouda.dtypes.intTypes.difference", false]], "difference() (arkouda.dtypes.numericdtypes method)": [[22, "arkouda.dtypes.NumericDTypes.difference", false]], "difference() (arkouda.dtypes.scalardtypes method)": [[22, "arkouda.dtypes.ScalarDTypes.difference", false]], "difference() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.difference", false]], "difference() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.difference", false]], "difference() (arkouda.inttypes method)": [[25, "arkouda.intTypes.difference", false], [25, "id892", false], [25, "id901", false]], "difference() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.difference", false]], "difference() (arkouda.numpy.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.difference", false]], "difference() (arkouda.numpy.dtypeobjects method)": [[36, "arkouda.numpy.DTypeObjects.difference", false]], "difference() (arkouda.numpy.dtypes method)": [[36, "arkouda.numpy.DTypes.difference", false]], "difference() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.difference", false]], "difference() (arkouda.numpy.dtypes.dtypeobjects method)": [[35, "arkouda.numpy.dtypes.DTypeObjects.difference", false]], "difference() (arkouda.numpy.dtypes.dtypes method)": [[35, "arkouda.numpy.dtypes.DTypes.difference", false]], "difference() (arkouda.numpy.dtypes.inttypes method)": [[35, "arkouda.numpy.dtypes.intTypes.difference", false]], "difference() (arkouda.numpy.dtypes.numericdtypes method)": [[35, "arkouda.numpy.dtypes.NumericDTypes.difference", false]], "difference() (arkouda.numpy.dtypes.scalardtypes method)": [[35, "arkouda.numpy.dtypes.ScalarDTypes.difference", false]], "difference() (arkouda.numpy.inttypes method)": [[36, "arkouda.numpy.intTypes.difference", false]], "difference() (arkouda.numpy.numericdtypes method)": [[36, "arkouda.numpy.NumericDTypes.difference", false]], "difference() (arkouda.numpy.scalardtypes method)": [[36, "arkouda.numpy.ScalarDTypes.difference", false]], "difference() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.difference", false]], "disableverbose() (in module arkouda)": [[25, "arkouda.disableVerbose", false]], "disableverbose() (in module arkouda.logger)": [[31, "arkouda.logger.disableVerbose", false]], "disconnect() (in module arkouda.client)": [[19, "arkouda.client.disconnect", false]], "disp() (in module arkouda)": [[25, "arkouda.disp", false]], "disp() (in module arkouda.numpy)": [[36, "arkouda.numpy.disp", false]], "divide() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.divide", false]], "divmod() (in module arkouda)": [[25, "arkouda.divmod", false]], "divmod() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.divmod", false]], "dot() (in module arkouda)": [[25, "arkouda.dot", false]], "dot() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.dot", false]], "double (class in arkouda)": [[25, "arkouda.double", false]], "double (class in arkouda.numpy)": [[36, "arkouda.numpy.double", false]], "drop() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.drop", false], [25, "id142", false]], "drop() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.drop", false]], "drop() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.drop", false]], "drop_duplicates() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.drop_duplicates", false], [25, "id143", false]], "drop_duplicates() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.drop_duplicates", false]], "drop_duplicates() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.drop_duplicates", false]], "dropna (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.dropna", false], [25, "id259", false], [25, "id306", false], [25, "id353", false], [25, "id400", false], [25, "id447", false], [92, "arkouda.GroupBy.dropna", false]], "dropna (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.dropna", false]], "dropna() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.dropna", false], [25, "id144", false]], "dropna() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.dropna", false]], "dt() (arkouda.series method)": [[25, "arkouda.Series.dt", false]], "dt() (arkouda.series.series method)": [[49, "arkouda.series.Series.dt", false]], "dtype (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.dtype", false]], "dtype (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.dtype", false]], "dtype (arkouda.array_api.data_type_functions.finfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.finfo_object.dtype", false]], "dtype (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.iinfo_object.dtype", false]], "dtype (arkouda.array_view.arrayview attribute)": [[17, "arkouda.array_view.ArrayView.dtype", false], [17, "id1", false]], "dtype (arkouda.arrayview attribute)": [[25, "arkouda.ArrayView.dtype", false], [25, "id1", false], [88, "arkouda.ArrayView.dtype", false]], "dtype (arkouda.categorical attribute)": [[25, "arkouda.Categorical.dtype", false], [25, "id28", false], [25, "id86", false]], "dtype (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.dtype", false]], "dtype (arkouda.finfo attribute)": [[25, "arkouda.finfo.dtype", false]], "dtype (arkouda.format_parser attribute)": [[25, "arkouda.format_parser.dtype", false]], "dtype (arkouda.iinfo attribute)": [[25, "arkouda.iinfo.dtype", false]], "dtype (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.dtype", false]], "dtype (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.dtype", false]], "dtype (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.dtype", false]], "dtype (arkouda.numpy.format_parser attribute)": [[36, "arkouda.numpy.format_parser.dtype", false]], "dtype (arkouda.numpy.iinfo attribute)": [[36, "arkouda.numpy.iinfo.dtype", false]], "dtype (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.dtype", false], [25, "id1019", false], [25, "id1069", false], [25, "id1089", false], [25, "id1139", false], [25, "id1159", false], [25, "id1209", false], [25, "id1229", false], [25, "id919", false], [25, "id929", false], [25, "id949", false], [25, "id999", false], [95, "arkouda.pdarray.dtype", false]], "dtype (arkouda.pdarrayclass.pdarray attribute)": [[37, "arkouda.pdarrayclass.pdarray.dtype", false], [37, "id0", false]], "dtype (arkouda.segarray attribute)": [[25, "arkouda.SegArray.dtype", false]], "dtype (arkouda.segarray.segarray attribute)": [[48, "arkouda.segarray.SegArray.dtype", false]], "dtype (arkouda.series property)": [[25, "arkouda.Series.dtype", false]], "dtype (arkouda.series.series property)": [[49, "arkouda.series.Series.dtype", false]], "dtype (arkouda.sparray attribute)": [[25, "arkouda.sparray.dtype", false], [25, "id1282", false]], "dtype (arkouda.sparrayclass.sparray attribute)": [[51, "arkouda.sparrayclass.sparray.dtype", false], [51, "id0", false]], "dtype (arkouda.strings attribute)": [[25, "arkouda.Strings.dtype", false], [25, "id496", false], [25, "id505", false], [25, "id514", false], [25, "id580", false], [25, "id589", false], [25, "id655", false], [25, "id664", false], [25, "id730", false], [25, "id739", false]], "dtype (arkouda.strings.strings attribute)": [[53, "arkouda.strings.Strings.dtype", false], [53, "id0", false]], "dtype (class in arkouda)": [[25, "arkouda.DType", false]], "dtype (class in arkouda.dtypes)": [[22, "arkouda.dtypes.DType", false]], "dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.DType", false]], "dtype (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.DType", false]], "dtype() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.dtype", false]], "dtype() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.dtype", false]], "dtype() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.dtype", false]], "dtype() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.dtype", false]], "dtype() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.dtype", false]], "dtype() (arkouda.str_ method)": [[25, "arkouda.str_.dtype", false], [25, "id1310", false]], "dtype() (in module arkouda)": [[25, "arkouda.dtype", false], [25, "id871", false]], "dtype() (in module arkouda.dtypes)": [[22, "arkouda.dtypes.dtype", false]], "dtype() (in module arkouda.numpy)": [[36, "arkouda.numpy.dtype", false]], "dtype() (in module arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.dtype", false]], "dtypeobjects (class in arkouda)": [[25, "arkouda.DTypeObjects", false]], "dtypeobjects (class in arkouda.dtypes)": [[22, "arkouda.dtypes.DTypeObjects", false]], "dtypeobjects (class in arkouda.numpy)": [[36, "arkouda.numpy.DTypeObjects", false]], "dtypeobjects (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.DTypeObjects", false]], "dtypes (arkouda.dataframe property)": [[25, "arkouda.DataFrame.dtypes", false], [25, "id145", false]], "dtypes (arkouda.dataframe.dataframe property)": [[21, "arkouda.dataframe.DataFrame.dtypes", false]], "dtypes (class in arkouda)": [[25, "arkouda.DTypes", false]], "dtypes (class in arkouda.dtypes)": [[22, "arkouda.dtypes.DTypes", false]], "dtypes (class in arkouda.numpy)": [[36, "arkouda.numpy.DTypes", false]], "dtypes (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.DTypes", false]], "dump() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.dump", false]], "dump() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.dump", false]], "dump() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.dump", false]], "dump() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.dump", false]], "dump() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.dump", false]], "dump() (arkouda.str_ method)": [[25, "arkouda.str_.dump", false], [25, "id1311", false]], "dumps() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.dumps", false]], "dumps() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.dumps", false]], "dumps() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.dumps", false]], "dumps() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.dumps", false]], "dumps() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.dumps", false]], "dumps() (arkouda.str_ method)": [[25, "arkouda.str_.dumps", false], [25, "id1312", false]], "e (in module arkouda)": [[25, "arkouda.e", false]], "e (in module arkouda.numpy)": [[36, "arkouda.numpy.e", false]], "empty (arkouda.dataframe property)": [[25, "arkouda.DataFrame.empty", false], [25, "id146", false]], "empty (arkouda.dataframe.dataframe property)": [[21, "arkouda.dataframe.DataFrame.empty", false]], "empty() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.empty", false]], "empty_like() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.empty_like", false]], "enableverbose() (in module arkouda)": [[25, "arkouda.enableVerbose", false]], "enableverbose() (in module arkouda.logger)": [[31, "arkouda.logger.enableVerbose", false]], "encode() (arkouda.strings method)": [[25, "arkouda.Strings.encode", false], [25, "id515", false], [25, "id590", false], [25, "id665", false], [25, "id740", false]], "encode() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.encode", false]], "end() (arkouda.match.match method)": [[32, "arkouda.match.Match.end", false], [101, "arkouda.match.Match.end", false]], "endswith() (arkouda.categorical method)": [[25, "arkouda.Categorical.endswith", false], [25, "id29", false], [25, "id87", false], [89, "arkouda.Categorical.endswith", false]], "endswith() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.endswith", false]], "endswith() (arkouda.strings method)": [[25, "arkouda.Strings.endswith", false], [25, "id516", false], [25, "id591", false], [25, "id666", false], [25, "id741", false], [101, "arkouda.Strings.endswith", false]], "endswith() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.endswith", false]], "enrich_inplace() (in module arkouda.util)": [[56, "arkouda.util.enrich_inplace", false]], "entry (arkouda.strings attribute)": [[25, "arkouda.Strings.entry", false], [25, "id497", false], [25, "id500", false], [25, "id517", false], [25, "id575", false], [25, "id592", false], [25, "id650", false], [25, "id667", false], [25, "id725", false], [25, "id742", false]], "entry (arkouda.strings.strings attribute)": [[53, "arkouda.strings.Strings.entry", false], [53, "id1", false]], "enum (class in arkouda.dtypes)": [[22, "arkouda.dtypes.Enum", false]], "enum (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.Enum", false]], "eps (arkouda.array_api.data_type_functions.finfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.finfo_object.eps", false]], "eps (arkouda.finfo attribute)": [[25, "arkouda.finfo.eps", false]], "eps (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.eps", false]], "epsneg (arkouda.finfo attribute)": [[25, "arkouda.finfo.epsneg", false]], "epsneg (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.epsneg", false]], "equal() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.equal", false]], "equal_levels() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.equal_levels", false]], "equal_levels() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.equal_levels", false]], "equals() (arkouda.categorical method)": [[25, "arkouda.Categorical.equals", false], [25, "id30", false], [25, "id88", false]], "equals() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.equals", false]], "equals() (arkouda.index method)": [[25, "arkouda.Index.equals", false]], "equals() (arkouda.index.index method)": [[26, "arkouda.index.Index.equals", false]], "equals() (arkouda.pdarray method)": [[25, "arkouda.pdarray.equals", false], [25, "id1020", false], [25, "id1090", false], [25, "id1160", false], [25, "id1230", false], [25, "id950", false]], "equals() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.equals", false]], "equals() (arkouda.strings method)": [[25, "arkouda.Strings.equals", false], [25, "id518", false], [25, "id593", false], [25, "id668", false], [25, "id743", false]], "equals() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.equals", false]], "error (arkouda.logger.loglevel attribute)": [[31, "arkouda.logger.LogLevel.ERROR", false]], "error (arkouda.loglevel attribute)": [[25, "arkouda.LogLevel.ERROR", false]], "errormode (class in arkouda)": [[25, "arkouda.ErrorMode", false]], "errormode (class in arkouda.numeric)": [[34, "arkouda.numeric.ErrorMode", false]], "euler_gamma (in module arkouda)": [[25, "arkouda.euler_gamma", false]], "euler_gamma (in module arkouda.numpy)": [[36, "arkouda.numpy.euler_gamma", false]], "exists() (arkouda.datasource method)": [[25, "arkouda.DataSource.exists", false]], "exists() (arkouda.numpy.datasource method)": [[36, "arkouda.numpy.DataSource.exists", false]], "exp() (in module arkouda)": [[25, "arkouda.exp", false], [87, "arkouda.exp", false]], "exp() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.exp", false]], "exp() (in module arkouda.numeric)": [[34, "arkouda.numeric.exp", false]], "expand() (in module arkouda.util)": [[56, "arkouda.util.expand", false]], "expand_dims() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.expand_dims", false]], "expm1() (in module arkouda)": [[25, "arkouda.expm1", false]], "expm1() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.expm1", false]], "expm1() (in module arkouda.numeric)": [[34, "arkouda.numeric.expm1", false]], "exponential() (arkouda.generator method)": [[25, "arkouda.Generator.exponential", false]], "exponential() (arkouda.random.generator method)": [[42, "arkouda.random.Generator.exponential", false]], "exponential() (in module arkouda.random.generator)": [[96, "arkouda.random.Generator.exponential", false]], "export() (in module arkouda)": [[25, "arkouda.export", false], [84, "arkouda.export", false]], "export() (in module arkouda.io)": [[28, "arkouda.io.export", false]], "export_uint() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.export_uint", false]], "export_uint() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.export_uint", false]], "eye() (in module arkouda)": [[25, "arkouda.eye", false]], "eye() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.eye", false]], "eye() (in module arkouda.numeric)": [[34, "arkouda.numeric.eye", false]], "factory() (arkouda.index static method)": [[25, "arkouda.Index.factory", false]], "factory() (arkouda.index.index static method)": [[26, "arkouda.index.Index.factory", false]], "false_ (class in arkouda)": [[25, "arkouda.False_", false]], "false_ (class in arkouda.numpy)": [[36, "arkouda.numpy.False_", false]], "fields (class in arkouda)": [[25, "arkouda.Fields", false]], "fields (class in arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.Fields", false]], "fill() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.fill", false]], "fill() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.fill", false]], "fill() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.fill", false]], "fill() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.fill", false]], "fill() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.fill", false]], "fill() (arkouda.pdarray method)": [[25, "arkouda.pdarray.fill", false], [25, "id1021", false], [25, "id1091", false], [25, "id1161", false], [25, "id1231", false], [25, "id951", false]], "fill() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.fill", false]], "fill() (arkouda.str_ method)": [[25, "arkouda.str_.fill", false], [25, "id1313", false]], "fillna() (arkouda.series method)": [[25, "arkouda.Series.fillna", false]], "fillna() (arkouda.series.series method)": [[49, "arkouda.series.Series.fillna", false]], "filter() (arkouda.segarray method)": [[25, "arkouda.SegArray.filter", false]], "filter() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.filter", false]], "filter_by_range() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.filter_by_range", false], [25, "id147", false]], "filter_by_range() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.filter_by_range", false]], "find() (in module arkouda)": [[25, "arkouda.find", false]], "find() (in module arkouda.alignment)": [[3, "arkouda.alignment.find", false]], "find_locations() (arkouda.matcher.matcher method)": [[33, "arkouda.matcher.Matcher.find_locations", false]], "find_locations() (arkouda.strings method)": [[25, "arkouda.Strings.find_locations", false], [25, "id519", false], [25, "id594", false], [25, "id669", false], [25, "id744", false], [101, "arkouda.Strings.find_locations", false]], "find_locations() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.find_locations", false]], "find_matches() (arkouda.match.match method)": [[32, "arkouda.match.Match.find_matches", false], [101, "arkouda.match.Match.find_matches", false]], "findall() (arkouda.matcher.matcher method)": [[33, "arkouda.matcher.Matcher.findall", false]], "findall() (arkouda.strings method)": [[25, "arkouda.Strings.findall", false], [25, "id520", false], [25, "id595", false], [25, "id670", false], [25, "id745", false], [101, "arkouda.Strings.findall", false]], "findall() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.findall", false]], "finfo (class in arkouda)": [[25, "arkouda.finfo", false]], "finfo (class in arkouda.numpy)": [[36, "arkouda.numpy.finfo", false]], "finfo() (in module arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.finfo", false]], "finfo_object (class in arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.finfo_object", false]], "first (arkouda.index.multiindex attribute)": [[26, "arkouda.index.MultiIndex.first", false]], "first (arkouda.multiindex attribute)": [[25, "arkouda.MultiIndex.first", false]], "first() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.first", false]], "first() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.first", false]], "first() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.first", false]], "first() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.first", false]], "first() (arkouda.groupby method)": [[25, "arkouda.GroupBy.first", false], [25, "id273", false], [25, "id320", false], [25, "id367", false], [25, "id414", false], [25, "id461", false], [92, "arkouda.GroupBy.first", false]], "first() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.first", false]], "flags() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.flags", false]], "flags() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.flags", false]], "flags() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.flags", false]], "flags() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.flags", false]], "flags() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.flags", false]], "flags() (arkouda.str_ method)": [[25, "arkouda.str_.flags", false], [25, "id1314", false]], "flat() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.flat", false]], "flat() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.flat", false]], "flat() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.flat", false]], "flat() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.flat", false]], "flat() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.flat", false]], "flat() (arkouda.str_ method)": [[25, "arkouda.str_.flat", false], [25, "id1315", false]], "flatten() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.flatten", false]], "flatten() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.flatten", false]], "flatten() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.flatten", false]], "flatten() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.flatten", false]], "flatten() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.flatten", false]], "flatten() (arkouda.str_ method)": [[25, "arkouda.str_.flatten", false], [25, "id1316", false]], "flatten() (arkouda.strings method)": [[25, "arkouda.Strings.flatten", false], [25, "id521", false], [25, "id596", false], [25, "id671", false], [25, "id746", false], [101, "arkouda.Strings.flatten", false]], "flatten() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.flatten", false]], "flexible (class in arkouda)": [[25, "arkouda.flexible", false]], "flexible (class in arkouda.numpy)": [[36, "arkouda.numpy.flexible", false]], "flip() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.flip", false]], "float() (arkouda.dtype method)": [[25, "arkouda.DType.FLOAT", false]], "float() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.FLOAT", false]], "float() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.FLOAT", false]], "float() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.FLOAT", false]], "float16 (class in arkouda)": [[25, "arkouda.float16", false]], "float16 (class in arkouda.dtypes)": [[22, "arkouda.dtypes.float16", false]], "float16 (class in arkouda.numpy)": [[36, "arkouda.numpy.float16", false]], "float16 (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.float16", false]], "float16dtype (class in arkouda)": [[25, "arkouda.Float16DType", false]], "float16dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.Float16DType", false]], "float32 (class in arkouda)": [[25, "arkouda.float32", false]], "float32 (class in arkouda.dtypes)": [[22, "arkouda.dtypes.float32", false]], "float32 (class in arkouda.numpy)": [[36, "arkouda.numpy.float32", false]], "float32 (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.float32", false]], "float32() (arkouda.dtype method)": [[25, "arkouda.DType.FLOAT32", false]], "float32() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.FLOAT32", false]], "float32() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.FLOAT32", false]], "float32() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.FLOAT32", false]], "float32dtype (class in arkouda)": [[25, "arkouda.Float32DType", false]], "float32dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.Float32DType", false]], "float64 (class in arkouda)": [[25, "arkouda.float64", false]], "float64 (class in arkouda.dtypes)": [[22, "arkouda.dtypes.float64", false]], "float64 (class in arkouda.numpy)": [[36, "arkouda.numpy.float64", false]], "float64 (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.float64", false]], "float64() (arkouda.dtype method)": [[25, "arkouda.DType.FLOAT64", false]], "float64() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.FLOAT64", false]], "float64() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.FLOAT64", false]], "float64() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.FLOAT64", false]], "float64dtype (class in arkouda)": [[25, "arkouda.Float64DType", false]], "float64dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.Float64DType", false]], "float_ (class in arkouda)": [[25, "arkouda.float_", false]], "float_ (class in arkouda.numpy)": [[36, "arkouda.numpy.float_", false]], "float_scalars (class in arkouda)": [[25, "arkouda.float_scalars", false]], "float_scalars (class in arkouda.dtypes)": [[22, "arkouda.dtypes.float_scalars", false]], "float_scalars (class in arkouda.numpy)": [[36, "arkouda.numpy.float_scalars", false]], "float_scalars (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.float_scalars", false]], "floating (class in arkouda)": [[25, "arkouda.floating", false]], "floating (class in arkouda.numpy)": [[36, "arkouda.numpy.floating", false]], "floor() (in module arkouda)": [[25, "arkouda.floor", false], [25, "id878", false]], "floor() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.floor", false]], "floor() (in module arkouda.numeric)": [[34, "arkouda.numeric.floor", false]], "floor() (in module arkouda.numpy)": [[36, "arkouda.numpy.floor", false]], "floor_divide() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.floor_divide", false]], "fmod() (in module arkouda)": [[25, "arkouda.fmod", false]], "fmod() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.fmod", false]], "format() (arkouda.bitvector method)": [[25, "arkouda.BitVector.format", false]], "format() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.format", false]], "format() (arkouda.client_dtypes.fields method)": [[20, "arkouda.client_dtypes.Fields.format", false]], "format() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.format", false]], "format() (arkouda.fields method)": [[25, "arkouda.Fields.format", false]], "format() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.format", false]], "format_float_positional() (in module arkouda)": [[25, "arkouda.format_float_positional", false]], "format_float_positional() (in module arkouda.numpy)": [[36, "arkouda.numpy.format_float_positional", false]], "format_float_scientific() (in module arkouda)": [[25, "arkouda.format_float_scientific", false]], "format_float_scientific() (in module arkouda.numpy)": [[36, "arkouda.numpy.format_float_scientific", false]], "format_other() (arkouda.pdarray method)": [[25, "arkouda.pdarray.format_other", false], [25, "id1022", false], [25, "id1092", false], [25, "id1162", false], [25, "id1232", false], [25, "id952", false]], "format_other() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.format_other", false]], "format_parser (class in arkouda)": [[25, "arkouda.format_parser", false]], "format_parser (class in arkouda.numpy)": [[36, "arkouda.numpy.format_parser", false]], "from_codes() (arkouda.categorical class method)": [[25, "arkouda.Categorical.from_codes", false], [25, "id31", false], [25, "id89", false], [89, "arkouda.Categorical.from_codes", false]], "from_codes() (arkouda.categorical.categorical class method)": [[18, "arkouda.categorical.Categorical.from_codes", false]], "from_dlpack() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.from_dlpack", false]], "from_multi_array() (arkouda.segarray class method)": [[25, "arkouda.SegArray.from_multi_array", false]], "from_multi_array() (arkouda.segarray.segarray class method)": [[48, "arkouda.segarray.SegArray.from_multi_array", false]], "from_pandas() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.from_pandas", false], [25, "id148", false]], "from_pandas() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.from_pandas", false]], "from_parts() (arkouda.segarray class method)": [[25, "arkouda.SegArray.from_parts", false]], "from_parts() (arkouda.segarray.segarray class method)": [[48, "arkouda.segarray.SegArray.from_parts", false]], "from_parts() (arkouda.strings static method)": [[25, "arkouda.Strings.from_parts", false], [25, "id522", false], [25, "id597", false], [25, "id672", false], [25, "id747", false]], "from_parts() (arkouda.strings.strings static method)": [[53, "arkouda.strings.Strings.from_parts", false]], "from_return_msg() (arkouda.bitvector class method)": [[25, "arkouda.BitVector.from_return_msg", false]], "from_return_msg() (arkouda.categorical class method)": [[25, "arkouda.Categorical.from_return_msg", false], [25, "id32", false], [25, "id90", false]], "from_return_msg() (arkouda.categorical.categorical class method)": [[18, "arkouda.categorical.Categorical.from_return_msg", false]], "from_return_msg() (arkouda.client_dtypes.bitvector class method)": [[20, "arkouda.client_dtypes.BitVector.from_return_msg", false]], "from_return_msg() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.from_return_msg", false], [25, "id149", false]], "from_return_msg() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.from_return_msg", false]], "from_return_msg() (arkouda.groupby method)": [[25, "arkouda.GroupBy.from_return_msg", false], [25, "id274", false], [25, "id321", false], [25, "id368", false], [25, "id415", false], [25, "id462", false]], "from_return_msg() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.from_return_msg", false]], "from_return_msg() (arkouda.index class method)": [[25, "arkouda.Index.from_return_msg", false]], "from_return_msg() (arkouda.index.index class method)": [[26, "arkouda.index.Index.from_return_msg", false]], "from_return_msg() (arkouda.segarray class method)": [[25, "arkouda.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.segarray.segarray class method)": [[48, "arkouda.segarray.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.series method)": [[25, "arkouda.Series.from_return_msg", false]], "from_return_msg() (arkouda.series.series method)": [[49, "arkouda.series.Series.from_return_msg", false]], "from_return_msg() (arkouda.strings static method)": [[25, "arkouda.Strings.from_return_msg", false], [25, "id523", false], [25, "id598", false], [25, "id673", false], [25, "id748", false]], "from_return_msg() (arkouda.strings.strings static method)": [[53, "arkouda.strings.Strings.from_return_msg", false]], "from_series() (in module arkouda)": [[25, "arkouda.from_series", false], [25, "id879", false]], "from_series() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.from_series", false]], "fromhex() (arkouda.akfloat64 method)": [[25, "arkouda.akfloat64.fromhex", false], [25, "id825", false]], "fromhex() (arkouda.double method)": [[25, "arkouda.double.fromhex", false]], "fromhex() (arkouda.dtypes.float64 method)": [[22, "arkouda.dtypes.float64.fromhex", false]], "fromhex() (arkouda.float64 method)": [[25, "arkouda.float64.fromhex", false]], "fromhex() (arkouda.float_ method)": [[25, "arkouda.float_.fromhex", false]], "fromhex() (arkouda.numpy.double method)": [[36, "arkouda.numpy.double.fromhex", false]], "fromhex() (arkouda.numpy.dtypes.float64 method)": [[35, "arkouda.numpy.dtypes.float64.fromhex", false]], "fromhex() (arkouda.numpy.float64 method)": [[36, "arkouda.numpy.float64.fromhex", false]], "fromhex() (arkouda.numpy.float_ method)": [[36, "arkouda.numpy.float_.fromhex", false]], "fromkeys() (arkouda.dtypes.number_format_strings method)": [[22, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.dtypes.seriesdtypes method)": [[22, "arkouda.dtypes.SeriesDTypes.fromkeys", false]], "fromkeys() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.numpy.dtypes.number_format_strings method)": [[35, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.numpy.dtypes.seriesdtypes method)": [[35, "arkouda.numpy.dtypes.SeriesDTypes.fromkeys", false]], "fromkeys() (arkouda.numpy.number_format_strings method)": [[36, "arkouda.numpy.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.numpy.sctypedict method)": [[36, "arkouda.numpy.sctypeDict.fromkeys", false]], "fromkeys() (arkouda.numpy.sctypes method)": [[36, "arkouda.numpy.sctypes.fromkeys", false]], "fromkeys() (arkouda.numpy.seriesdtypes method)": [[36, "arkouda.numpy.SeriesDTypes.fromkeys", false]], "fromkeys() (arkouda.sctypedict method)": [[25, "arkouda.sctypeDict.fromkeys", false]], "fromkeys() (arkouda.sctypes method)": [[25, "arkouda.sctypes.fromkeys", false]], "fromkeys() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.fromkeys", false]], "full() (in module arkouda)": [[25, "arkouda.full", false], [25, "id880", false]], "full() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.full", false]], "full() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.full", false]], "full_like() (in module arkouda)": [[25, "arkouda.full_like", false]], "full_like() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.full_like", false]], "full_like() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.full_like", false]], "full_match_bool (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.full_match_bool", false]], "full_match_ind (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.full_match_ind", false]], "fullmatch() (arkouda.strings method)": [[25, "arkouda.Strings.fullmatch", false], [25, "id524", false], [25, "id599", false], [25, "id674", false], [25, "id749", false], [101, "arkouda.Strings.fullmatch", false]], "fullmatch() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.fullmatch", false]], "gb (arkouda.dataframe.dataframegroupby attribute)": [[21, "arkouda.dataframe.DataFrameGroupBy.gb", false]], "gb (arkouda.dataframe.diffaggregate attribute)": [[21, "arkouda.dataframe.DiffAggregate.gb", false]], "gb (arkouda.dataframegroupby attribute)": [[25, "arkouda.DataFrameGroupBy.gb", false]], "gb (arkouda.diffaggregate attribute)": [[25, "arkouda.DiffAggregate.gb", false]], "gb_key_names (arkouda.dataframe.dataframegroupby attribute)": [[21, "arkouda.dataframe.DataFrameGroupBy.gb_key_names", false]], "gb_key_names (arkouda.dataframegroupby attribute)": [[25, "arkouda.DataFrameGroupBy.gb_key_names", false]], "gen_ranges() (in module arkouda)": [[25, "arkouda.gen_ranges", false], [25, "id881", false]], "gen_ranges() (in module arkouda.join)": [[30, "arkouda.join.gen_ranges", false]], "generate_history() (in module arkouda.client)": [[19, "arkouda.client.generate_history", false]], "generate_token() (in module arkouda.security)": [[47, "arkouda.security.generate_token", false]], "generate_username_token_json() (in module arkouda.security)": [[47, "arkouda.security.generate_username_token_json", false]], "generator (class in arkouda)": [[25, "arkouda.Generator", false]], "generator (class in arkouda.random)": [[42, "arkouda.random.Generator", false], [96, "arkouda.random.Generator", false]], "generic_concat() (in module arkouda)": [[25, "arkouda.generic_concat", false]], "generic_concat() (in module arkouda.util)": [[56, "arkouda.util.generic_concat", false]], "generic_moment() (arkouda.scipy.stats.chi2 method)": [[46, "arkouda.scipy.stats.chi2.generic_moment", false]], "get() (arkouda.dtypes.number_format_strings method)": [[22, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.dtypes.seriesdtypes method)": [[22, "arkouda.dtypes.SeriesDTypes.get", false]], "get() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.numpy.dtypes.number_format_strings method)": [[35, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.numpy.dtypes.seriesdtypes method)": [[35, "arkouda.numpy.dtypes.SeriesDTypes.get", false]], "get() (arkouda.numpy.number_format_strings method)": [[36, "arkouda.numpy.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.numpy.sctypedict method)": [[36, "arkouda.numpy.sctypeDict.get", false]], "get() (arkouda.numpy.sctypes method)": [[36, "arkouda.numpy.sctypes.get", false]], "get() (arkouda.numpy.seriesdtypes method)": [[36, "arkouda.numpy.SeriesDTypes.get", false]], "get() (arkouda.sctypedict method)": [[25, "arkouda.sctypeDict.get", false]], "get() (arkouda.sctypes method)": [[25, "arkouda.sctypes.get", false]], "get() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.get", false]], "get_arkouda_client_directory() (in module arkouda.security)": [[47, "arkouda.security.get_arkouda_client_directory", false]], "get_byteorder() (in module arkouda)": [[25, "arkouda.get_byteorder", false]], "get_byteorder() (in module arkouda.dtypes)": [[22, "arkouda.dtypes.get_byteorder", false]], "get_byteorder() (in module arkouda.numpy)": [[36, "arkouda.numpy.get_byteorder", false]], "get_byteorder() (in module arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.get_byteorder", false]], "get_bytes() (arkouda.strings method)": [[25, "arkouda.Strings.get_bytes", false], [25, "id525", false], [25, "id600", false], [25, "id675", false], [25, "id750", false]], "get_bytes() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.get_bytes", false]], "get_callback() (in module arkouda)": [[25, "arkouda.get_callback", false]], "get_callback() (in module arkouda.util)": [[56, "arkouda.util.get_callback", false]], "get_columns() (in module arkouda)": [[25, "arkouda.get_columns", false]], "get_columns() (in module arkouda.io)": [[28, "arkouda.io.get_columns", false]], "get_config() (in module arkouda.client)": [[19, "arkouda.client.get_config", false]], "get_datasets() (in module arkouda)": [[25, "arkouda.get_datasets", false], [84, "arkouda.get_datasets", false]], "get_datasets() (in module arkouda.io)": [[28, "arkouda.io.get_datasets", false]], "get_directory() (in module arkouda.io_util)": [[29, "arkouda.io_util.get_directory", false]], "get_filetype() (in module arkouda)": [[25, "arkouda.get_filetype", false]], "get_filetype() (in module arkouda.io)": [[28, "arkouda.io.get_filetype", false]], "get_home_directory() (in module arkouda.security)": [[47, "arkouda.security.get_home_directory", false]], "get_jth() (arkouda.segarray method)": [[25, "arkouda.SegArray.get_jth", false]], "get_jth() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.get_jth", false]], "get_jth() (in module arkouda.segarray)": [[97, "arkouda.SegArray.get_jth", false]], "get_length_n() (arkouda.segarray method)": [[25, "arkouda.SegArray.get_length_n", false]], "get_length_n() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.get_length_n", false]], "get_length_n() (in module arkouda.segarray)": [[97, "arkouda.SegArray.get_length_n", false]], "get_lengths() (arkouda.strings method)": [[25, "arkouda.Strings.get_lengths", false], [25, "id526", false], [25, "id601", false], [25, "id676", false], [25, "id751", false]], "get_lengths() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.get_lengths", false]], "get_level_values() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.get_level_values", false]], "get_level_values() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.get_level_values", false]], "get_match() (arkouda.matcher.matcher method)": [[33, "arkouda.matcher.Matcher.get_match", false]], "get_max_array_rank() (in module arkouda.client)": [[19, "arkouda.client.get_max_array_rank", false]], "get_mem_avail() (in module arkouda.client)": [[19, "arkouda.client.get_mem_avail", false]], "get_mem_status() (in module arkouda.client)": [[19, "arkouda.client.get_mem_status", false]], "get_mem_used() (in module arkouda.client)": [[19, "arkouda.client.get_mem_used", false]], "get_ngrams() (arkouda.segarray method)": [[25, "arkouda.SegArray.get_ngrams", false]], "get_ngrams() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.get_ngrams", false]], "get_ngrams() (in module arkouda.segarray)": [[97, "arkouda.SegArray.get_ngrams", false]], "get_null_indices() (in module arkouda)": [[25, "arkouda.get_null_indices", false]], "get_null_indices() (in module arkouda.io)": [[28, "arkouda.io.get_null_indices", false]], "get_offsets() (arkouda.strings method)": [[25, "arkouda.Strings.get_offsets", false], [25, "id527", false], [25, "id602", false], [25, "id677", false], [25, "id752", false]], "get_offsets() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.get_offsets", false]], "get_prefixes() (arkouda.segarray method)": [[25, "arkouda.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.strings method)": [[25, "arkouda.Strings.get_prefixes", false], [25, "id528", false], [25, "id603", false], [25, "id678", false], [25, "id753", false]], "get_prefixes() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.get_prefixes", false]], "get_prefixes() (in module arkouda.segarray)": [[97, "arkouda.SegArray.get_prefixes", false]], "get_server_byteorder() (in module arkouda)": [[25, "arkouda.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.dtypes)": [[22, "arkouda.dtypes.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.numpy)": [[36, "arkouda.numpy.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.get_server_byteorder", false]], "get_server_commands() (in module arkouda.client)": [[19, "arkouda.client.get_server_commands", false]], "get_suffixes() (arkouda.segarray method)": [[25, "arkouda.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.strings method)": [[25, "arkouda.Strings.get_suffixes", false], [25, "id529", false], [25, "id604", false], [25, "id679", false], [25, "id754", false]], "get_suffixes() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.get_suffixes", false]], "get_suffixes() (in module arkouda.segarray)": [[97, "arkouda.SegArray.get_suffixes", false]], "get_username() (in module arkouda.security)": [[47, "arkouda.security.get_username", false]], "getarkoudalogger() (in module arkouda)": [[25, "arkouda.getArkoudaLogger", false], [25, "id882", false]], "getfield() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.getfield", false]], "getfield() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.getfield", false]], "getfield() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.getfield", false]], "getfield() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.getfield", false]], "getfield() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.getfield", false]], "getfield() (arkouda.str_ method)": [[25, "arkouda.str_.getfield", false], [25, "id1317", false]], "getmandatoryrelease() (arkouda.dtypes.annotations method)": [[22, "arkouda.dtypes.annotations.getMandatoryRelease", false]], "getmandatoryrelease() (arkouda.numpy.dtypes.annotations method)": [[35, "arkouda.numpy.dtypes.annotations.getMandatoryRelease", false]], "getoptionalrelease() (arkouda.dtypes.annotations method)": [[22, "arkouda.dtypes.annotations.getOptionalRelease", false]], "getoptionalrelease() (arkouda.numpy.dtypes.annotations method)": [[35, "arkouda.numpy.dtypes.annotations.getOptionalRelease", false]], "greater() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.greater", false]], "greater_equal() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.greater_equal", false]], "group() (arkouda.categorical method)": [[25, "arkouda.Categorical.group", false], [25, "id33", false], [25, "id91", false]], "group() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.group", false]], "group() (arkouda.match.match method)": [[32, "arkouda.match.Match.group", false], [101, "arkouda.match.Match.group", false]], "group() (arkouda.strings method)": [[25, "arkouda.Strings.group", false], [25, "id530", false], [25, "id605", false], [25, "id680", false], [25, "id755", false]], "group() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.group", false]], "groupby (class in arkouda)": [[25, "arkouda.GroupBy", false], [25, "id251", false], [25, "id298", false], [25, "id345", false], [25, "id392", false], [25, "id439", false], [92, "arkouda.GroupBy", false]], "groupby (class in arkouda.groupbyclass)": [[23, "arkouda.groupbyclass.GroupBy", false]], "groupby() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.GroupBy", false], [25, "id129", false], [25, "arkouda.DataFrame.groupby", false], [25, "id150", false]], "groupby() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.GroupBy", false], [21, "arkouda.dataframe.DataFrame.groupby", false]], "groupby() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.groupby", false]], "groupby_reduction_types (class in arkouda)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES", false]], "groupby_reduction_types (class in arkouda.groupbyclass)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES", false]], "grouping (arkouda.segarray property)": [[25, "arkouda.SegArray.grouping", false]], "grouping (arkouda.segarray.segarray property)": [[48, "arkouda.segarray.SegArray.grouping", false]], "half (class in arkouda)": [[25, "arkouda.half", false]], "half (class in arkouda.numpy)": [[36, "arkouda.numpy.half", false]], "handled_functions (in module arkouda.array_api.array_object)": [[4, "arkouda.array_api.array_object.HANDLED_FUNCTIONS", false]], "has_repeat_labels() (arkouda.series method)": [[25, "arkouda.Series.has_repeat_labels", false]], "has_repeat_labels() (arkouda.series.series method)": [[49, "arkouda.series.Series.has_repeat_labels", false]], "hash() (arkouda.categorical method)": [[25, "arkouda.Categorical.hash", false], [25, "id34", false], [25, "id92", false]], "hash() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.hash", false]], "hash() (arkouda.segarray method)": [[25, "arkouda.SegArray.hash", false]], "hash() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.hash", false]], "hash() (arkouda.strings method)": [[25, "arkouda.Strings.hash", false], [25, "id531", false], [25, "id606", false], [25, "id681", false], [25, "id756", false]], "hash() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.hash", false]], "hash() (in module arkouda)": [[25, "arkouda.hash", false]], "hash() (in module arkouda.numeric)": [[34, "arkouda.numeric.hash", false]], "hasnans() (arkouda.series method)": [[25, "arkouda.Series.hasnans", false]], "hasnans() (arkouda.series.series method)": [[49, "arkouda.series.Series.hasnans", false]], "head() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.head", false], [25, "id151", false]], "head() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.head", false]], "head() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.head", false]], "head() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.head", false]], "head() (arkouda.groupby method)": [[25, "arkouda.GroupBy.head", false], [25, "id275", false], [25, "id322", false], [25, "id369", false], [25, "id416", false], [25, "id463", false], [92, "arkouda.GroupBy.head", false]], "head() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.head", false]], "head() (arkouda.series method)": [[25, "arkouda.Series.head", false]], "head() (arkouda.series.series method)": [[49, "arkouda.series.Series.head", false]], "head() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.head", false]], "head() (in module arkouda.series)": [[98, "arkouda.Series.head", false]], "hex() (arkouda.akfloat64 method)": [[25, "arkouda.akfloat64.hex", false], [25, "id826", false]], "hex() (arkouda.double method)": [[25, "arkouda.double.hex", false]], "hex() (arkouda.dtypes.float64 method)": [[22, "arkouda.dtypes.float64.hex", false]], "hex() (arkouda.float64 method)": [[25, "arkouda.float64.hex", false]], "hex() (arkouda.float_ method)": [[25, "arkouda.float_.hex", false]], "hex() (arkouda.numpy.double method)": [[36, "arkouda.numpy.double.hex", false]], "hex() (arkouda.numpy.dtypes.float64 method)": [[35, "arkouda.numpy.dtypes.float64.hex", false]], "hex() (arkouda.numpy.float64 method)": [[36, "arkouda.numpy.float64.hex", false]], "hex() (arkouda.numpy.float_ method)": [[36, "arkouda.numpy.float_.hex", false]], "hist_all() (in module arkouda)": [[25, "arkouda.hist_all", false]], "hist_all() (in module arkouda.plotting)": [[41, "arkouda.plotting.hist_all", false]], "histogram() (in module arkouda)": [[25, "arkouda.histogram", false], [25, "id883", false], [93, "arkouda.histogram", false]], "histogram() (in module arkouda.numeric)": [[34, "arkouda.numeric.histogram", false]], "histogram2d() (in module arkouda)": [[25, "arkouda.histogram2d", false]], "histogram2d() (in module arkouda.numeric)": [[34, "arkouda.numeric.histogram2d", false]], "histogramdd() (in module arkouda)": [[25, "arkouda.histogramdd", false]], "histogramdd() (in module arkouda.numeric)": [[34, "arkouda.numeric.histogramdd", false]], "historyretriever (class in arkouda.history)": [[24, "arkouda.history.HistoryRetriever", false]], "hour (arkouda.datetime property)": [[25, "arkouda.Datetime.hour", false], [25, "id191", false], [25, "id224", false]], "hour (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.hour", false]], "iat (arkouda.series property)": [[25, "arkouda.Series.iat", false]], "iat (arkouda.series.series property)": [[49, "arkouda.series.Series.iat", false]], "identity() (in module arkouda.util)": [[56, "arkouda.util.identity", false]], "iexp (arkouda.finfo attribute)": [[25, "arkouda.finfo.iexp", false]], "iexp (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.iexp", false]], "ignore (arkouda.errormode attribute)": [[25, "arkouda.ErrorMode.ignore", false]], "ignore (arkouda.numeric.errormode attribute)": [[34, "arkouda.numeric.ErrorMode.ignore", false]], "iinfo (class in arkouda)": [[25, "arkouda.iinfo", false]], "iinfo (class in arkouda.numpy)": [[36, "arkouda.numpy.iinfo", false]], "iinfo() (in module arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.iinfo", false]], "iinfo_object (class in arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.iinfo_object", false]], "iloc (arkouda.series property)": [[25, "arkouda.Series.iloc", false]], "iloc (arkouda.series.series property)": [[49, "arkouda.series.Series.iloc", false]], "imag() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.imag", false]], "imag() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.imag", false]], "imag() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.imag", false]], "imag() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.imag", false]], "imag() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.imag", false]], "imag() (arkouda.str_ method)": [[25, "arkouda.str_.imag", false], [25, "id1318", false]], "imag() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.imag", false]], "implements_numpy() (in module arkouda.array_api.array_object)": [[4, "arkouda.array_api.array_object.implements_numpy", false]], "import_data() (in module arkouda)": [[25, "arkouda.import_data", false], [84, "arkouda.import_data", false]], "import_data() (in module arkouda.io)": [[28, "arkouda.io.import_data", false]], "in1d() (arkouda.categorical method)": [[25, "arkouda.Categorical.in1d", false], [25, "id35", false], [25, "id93", false]], "in1d() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.in1d", false]], "in1d() (in module arkouda)": [[25, "arkouda.in1d", false], [25, "id886", false], [25, "id887", false], [99, "arkouda.in1d", false]], "in1d() (in module arkouda.pdarraysetops)": [[40, "arkouda.pdarraysetops.in1d", false]], "in1d_intervals() (in module arkouda)": [[25, "arkouda.in1d_intervals", false]], "in1d_intervals() (in module arkouda.alignment)": [[3, "arkouda.alignment.in1d_intervals", false]], "index (arkouda.dataframe property)": [[25, "arkouda.DataFrame.index", false], [25, "id152", false]], "index (arkouda.dataframe.dataframe property)": [[21, "arkouda.dataframe.DataFrame.index", false]], "index (arkouda.index property)": [[25, "arkouda.Index.index", false]], "index (arkouda.index.index property)": [[26, "arkouda.index.Index.index", false]], "index (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.index", false]], "index (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.index", false]], "index (class in arkouda)": [[25, "arkouda.Index", false], [85, "arkouda.Index", false]], "index (class in arkouda.index)": [[26, "arkouda.index.Index", false]], "index() (arkouda.dtypes.arkouda_supported_floats method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_FLOATS.index", false]], "index() (arkouda.dtypes.arkouda_supported_ints method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_INTS.index", false]], "index() (arkouda.dtypes.arkouda_supported_numbers method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_NUMBERS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_floats method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_ints method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_numbers method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS.index", false]], "index() (arkouda.numpy.scalartype method)": [[36, "arkouda.numpy.ScalarType.index", false]], "index() (arkouda.scalartype method)": [[25, "arkouda.ScalarType.index", false]], "indexof1d() (in module arkouda)": [[25, "arkouda.indexof1d", false]], "indexof1d() (in module arkouda.pdarraysetops)": [[40, "arkouda.pdarraysetops.indexof1d", false]], "indices (arkouda.array_api.set_functions.uniqueallresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueAllResult.indices", false]], "indices (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.indices", false]], "inexact (class in arkouda)": [[25, "arkouda.inexact", false]], "inexact (class in arkouda.numpy)": [[36, "arkouda.numpy.inexact", false]], "inf (in module arkouda)": [[25, "arkouda.Inf", false], [25, "arkouda.inf", false]], "inf (in module arkouda.numpy)": [[36, "arkouda.numpy.Inf", false], [36, "arkouda.numpy.inf", false]], "inferred_type (arkouda.categorical property)": [[25, "arkouda.Categorical.inferred_type", false], [25, "id36", false], [25, "id94", false]], "inferred_type (arkouda.categorical.categorical property)": [[18, "arkouda.categorical.Categorical.inferred_type", false]], "inferred_type (arkouda.index property)": [[25, "arkouda.Index.inferred_type", false]], "inferred_type (arkouda.index.index property)": [[26, "arkouda.index.Index.inferred_type", false]], "inferred_type (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.inferred_type", false]], "inferred_type (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.inferred_type", false]], "inferred_type (arkouda.pdarray property)": [[25, "arkouda.pdarray.inferred_type", false], [25, "id1023", false], [25, "id1093", false], [25, "id1163", false], [25, "id1233", false], [25, "id953", false]], "inferred_type (arkouda.pdarrayclass.pdarray property)": [[37, "arkouda.pdarrayclass.pdarray.inferred_type", false]], "inferred_type (arkouda.strings property)": [[25, "arkouda.Strings.inferred_type", false], [25, "id532", false], [25, "id607", false], [25, "id682", false], [25, "id757", false]], "inferred_type (arkouda.strings.strings property)": [[53, "arkouda.strings.Strings.inferred_type", false]], "infinity (in module arkouda)": [[25, "arkouda.Infinity", false]], "infinity (in module arkouda.numpy)": [[36, "arkouda.numpy.Infinity", false]], "info (arkouda.dataframe property)": [[25, "arkouda.DataFrame.info", false], [25, "id153", false]], "info (arkouda.dataframe.dataframe property)": [[21, "arkouda.dataframe.DataFrame.info", false]], "info (arkouda.logger.loglevel attribute)": [[31, "arkouda.logger.LogLevel.INFO", false]], "info (arkouda.loglevel attribute)": [[25, "arkouda.LogLevel.INFO", false]], "info() (arkouda.categorical method)": [[25, "arkouda.Categorical.info", false], [25, "id37", false], [25, "id95", false]], "info() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.info", false]], "info() (arkouda.pdarray method)": [[25, "arkouda.pdarray.info", false], [25, "id1024", false], [25, "id1094", false], [25, "id1164", false], [25, "id1234", false], [25, "id954", false]], "info() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.info", false]], "info() (arkouda.strings method)": [[25, "arkouda.Strings.info", false], [25, "id533", false], [25, "id608", false], [25, "id683", false], [25, "id758", false]], "info() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.info", false]], "information() (in module arkouda)": [[25, "arkouda.information", false]], "information() (in module arkouda.infoclass)": [[27, "arkouda.infoclass.information", false]], "infty (in module arkouda)": [[25, "arkouda.infty", false]], "infty (in module arkouda.numpy)": [[36, "arkouda.numpy.infty", false]], "int() (arkouda.dtype method)": [[25, "arkouda.DType.INT", false]], "int() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.INT", false]], "int() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.INT", false]], "int() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.INT", false]], "int16 (class in arkouda)": [[25, "arkouda.int16", false]], "int16 (class in arkouda.dtypes)": [[22, "arkouda.dtypes.int16", false]], "int16 (class in arkouda.numpy)": [[36, "arkouda.numpy.int16", false]], "int16 (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.int16", false]], "int16() (arkouda.dtype method)": [[25, "arkouda.DType.INT16", false]], "int16() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.INT16", false]], "int16() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.INT16", false]], "int16() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.INT16", false]], "int16dtype (class in arkouda)": [[25, "arkouda.Int16DType", false]], "int16dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.Int16DType", false]], "int32 (class in arkouda)": [[25, "arkouda.int32", false]], "int32 (class in arkouda.dtypes)": [[22, "arkouda.dtypes.int32", false]], "int32 (class in arkouda.numpy)": [[36, "arkouda.numpy.int32", false]], "int32 (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.int32", false]], "int32() (arkouda.dtype method)": [[25, "arkouda.DType.INT32", false]], "int32() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.INT32", false]], "int32() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.INT32", false]], "int32() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.INT32", false]], "int32dtype (class in arkouda)": [[25, "arkouda.Int32DType", false]], "int32dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.Int32DType", false]], "int64 (class in arkouda)": [[25, "arkouda.int64", false], [25, "id888", false]], "int64 (class in arkouda.dtypes)": [[22, "arkouda.dtypes.int64", false]], "int64 (class in arkouda.numpy)": [[36, "arkouda.numpy.int64", false]], "int64 (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.int64", false]], "int64() (arkouda.dtype method)": [[25, "arkouda.DType.INT64", false]], "int64() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.INT64", false]], "int64() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.INT64", false]], "int64() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.INT64", false]], "int64dtype (class in arkouda)": [[25, "arkouda.Int64DType", false]], "int64dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.Int64DType", false]], "int8 (class in arkouda)": [[25, "arkouda.int8", false]], "int8 (class in arkouda.dtypes)": [[22, "arkouda.dtypes.int8", false]], "int8 (class in arkouda.numpy)": [[36, "arkouda.numpy.int8", false]], "int8 (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.int8", false]], "int8() (arkouda.dtype method)": [[25, "arkouda.DType.INT8", false]], "int8() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.INT8", false]], "int8() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.INT8", false]], "int8() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.INT8", false]], "int8dtype (class in arkouda)": [[25, "arkouda.Int8DType", false]], "int8dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.Int8DType", false]], "int_ (class in arkouda)": [[25, "arkouda.int_", false]], "int_ (class in arkouda.numpy)": [[36, "arkouda.numpy.int_", false]], "int_scalars (class in arkouda)": [[25, "arkouda.int_scalars", false], [25, "id908", false], [25, "id909", false], [25, "id910", false]], "int_scalars (class in arkouda.dtypes)": [[22, "arkouda.dtypes.int_scalars", false]], "int_scalars (class in arkouda.numpy)": [[36, "arkouda.numpy.int_scalars", false]], "int_scalars (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.int_scalars", false]], "intc (class in arkouda)": [[25, "arkouda.intc", false]], "intc (class in arkouda.numpy)": [[36, "arkouda.numpy.intc", false]], "intdtype (class in arkouda)": [[25, "arkouda.IntDType", false]], "intdtype (class in arkouda.numpy)": [[36, "arkouda.numpy.IntDType", false]], "integer (class in arkouda)": [[25, "arkouda.integer", false]], "integer (class in arkouda.numpy)": [[36, "arkouda.numpy.integer", false]], "integers() (arkouda.generator method)": [[25, "arkouda.Generator.integers", false]], "integers() (arkouda.random.generator method)": [[42, "arkouda.random.Generator.integers", false]], "integers() (in module arkouda.random.generator)": [[96, "arkouda.random.Generator.integers", false]], "intersect() (arkouda.segarray method)": [[25, "arkouda.SegArray.intersect", false]], "intersect() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.intersect", false]], "intersect() (in module arkouda)": [[25, "arkouda.intersect", false]], "intersect() (in module arkouda.dataframe)": [[21, "arkouda.dataframe.intersect", false]], "intersect() (in module arkouda.segarray)": [[97, "arkouda.SegArray.intersect", false]], "intersect1d() (in module arkouda)": [[25, "arkouda.intersect1d", false], [99, "arkouda.intersect1d", false]], "intersect1d() (in module arkouda.pdarraysetops)": [[40, "arkouda.pdarraysetops.intersect1d", false]], "intersection() (arkouda.arkouda_supported_dtypes method)": [[25, "arkouda.ARKOUDA_SUPPORTED_DTYPES.intersection", false]], "intersection() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.intersection", false]], "intersection() (arkouda.dtypes method)": [[25, "arkouda.DTypes.intersection", false]], "intersection() (arkouda.dtypes.arkouda_supported_dtypes method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.intersection", false]], "intersection() (arkouda.dtypes.dtypeobjects method)": [[22, "arkouda.dtypes.DTypeObjects.intersection", false]], "intersection() (arkouda.dtypes.dtypes method)": [[22, "arkouda.dtypes.DTypes.intersection", false]], "intersection() (arkouda.dtypes.inttypes method)": [[22, "arkouda.dtypes.intTypes.intersection", false]], "intersection() (arkouda.dtypes.numericdtypes method)": [[22, "arkouda.dtypes.NumericDTypes.intersection", false]], "intersection() (arkouda.dtypes.scalardtypes method)": [[22, "arkouda.dtypes.ScalarDTypes.intersection", false]], "intersection() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.intersection", false]], "intersection() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.intersection", false]], "intersection() (arkouda.inttypes method)": [[25, "arkouda.intTypes.intersection", false], [25, "id893", false], [25, "id902", false]], "intersection() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.intersection", false]], "intersection() (arkouda.numpy.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.intersection", false]], "intersection() (arkouda.numpy.dtypeobjects method)": [[36, "arkouda.numpy.DTypeObjects.intersection", false]], "intersection() (arkouda.numpy.dtypes method)": [[36, "arkouda.numpy.DTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.intersection", false]], "intersection() (arkouda.numpy.dtypes.dtypeobjects method)": [[35, "arkouda.numpy.dtypes.DTypeObjects.intersection", false]], "intersection() (arkouda.numpy.dtypes.dtypes method)": [[35, "arkouda.numpy.dtypes.DTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.inttypes method)": [[35, "arkouda.numpy.dtypes.intTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.numericdtypes method)": [[35, "arkouda.numpy.dtypes.NumericDTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.scalardtypes method)": [[35, "arkouda.numpy.dtypes.ScalarDTypes.intersection", false]], "intersection() (arkouda.numpy.inttypes method)": [[36, "arkouda.numpy.intTypes.intersection", false]], "intersection() (arkouda.numpy.numericdtypes method)": [[36, "arkouda.numpy.NumericDTypes.intersection", false]], "intersection() (arkouda.numpy.scalardtypes method)": [[36, "arkouda.numpy.ScalarDTypes.intersection", false]], "intersection() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.intersection", false]], "interval_lookup() (in module arkouda)": [[25, "arkouda.interval_lookup", false]], "interval_lookup() (in module arkouda.alignment)": [[3, "arkouda.alignment.interval_lookup", false]], "intp (class in arkouda)": [[25, "arkouda.intp", false]], "intp (class in arkouda.numpy)": [[36, "arkouda.numpy.intp", false]], "inttypes (class in arkouda)": [[25, "arkouda.intTypes", false], [25, "id890", false], [25, "id899", false]], "inttypes (class in arkouda.dtypes)": [[22, "arkouda.dtypes.intTypes", false]], "inttypes (class in arkouda.numpy)": [[36, "arkouda.numpy.intTypes", false]], "inttypes (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.intTypes", false]], "intx() (in module arkouda)": [[25, "arkouda.intx", false]], "intx() (in module arkouda.dataframe)": [[21, "arkouda.dataframe.intx", false]], "inverse_indices (arkouda.array_api.set_functions.uniqueallresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueAllResult.inverse_indices", false]], "inverse_indices (arkouda.array_api.set_functions.uniqueinverseresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueInverseResult.inverse_indices", false]], "invert_permutation() (in module arkouda)": [[25, "arkouda.invert_permutation", false]], "invert_permutation() (in module arkouda.dataframe)": [[21, "arkouda.dataframe.invert_permutation", false]], "invert_permutation() (in module arkouda.util)": [[56, "arkouda.util.invert_permutation", false]], "ip_address() (in module arkouda)": [[25, "arkouda.ip_address", false]], "ip_address() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.ip_address", false]], "ipv4 (class in arkouda)": [[25, "arkouda.IPv4", false]], "ipv4 (class in arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.IPv4", false]], "is_cosorted() (in module arkouda)": [[25, "arkouda.is_cosorted", false]], "is_cosorted() (in module arkouda.alignment)": [[3, "arkouda.alignment.is_cosorted", false]], "is_float() (in module arkouda.util)": [[56, "arkouda.util.is_float", false]], "is_int() (in module arkouda.util)": [[56, "arkouda.util.is_int", false]], "is_integer() (arkouda.akfloat64 method)": [[25, "arkouda.akfloat64.is_integer", false], [25, "id827", false]], "is_integer() (arkouda.double method)": [[25, "arkouda.double.is_integer", false]], "is_integer() (arkouda.dtypes.float16 method)": [[22, "arkouda.dtypes.float16.is_integer", false]], "is_integer() (arkouda.dtypes.float32 method)": [[22, "arkouda.dtypes.float32.is_integer", false]], "is_integer() (arkouda.dtypes.float64 method)": [[22, "arkouda.dtypes.float64.is_integer", false]], "is_integer() (arkouda.float16 method)": [[25, "arkouda.float16.is_integer", false]], "is_integer() (arkouda.float32 method)": [[25, "arkouda.float32.is_integer", false]], "is_integer() (arkouda.float64 method)": [[25, "arkouda.float64.is_integer", false]], "is_integer() (arkouda.float_ method)": [[25, "arkouda.float_.is_integer", false]], "is_integer() (arkouda.half method)": [[25, "arkouda.half.is_integer", false]], "is_integer() (arkouda.integer method)": [[25, "arkouda.integer.is_integer", false]], "is_integer() (arkouda.longdouble method)": [[25, "arkouda.longdouble.is_integer", false]], "is_integer() (arkouda.longfloat method)": [[25, "arkouda.longfloat.is_integer", false]], "is_integer() (arkouda.numpy.double method)": [[36, "arkouda.numpy.double.is_integer", false]], "is_integer() (arkouda.numpy.dtypes.float16 method)": [[35, "arkouda.numpy.dtypes.float16.is_integer", false]], "is_integer() (arkouda.numpy.dtypes.float32 method)": [[35, "arkouda.numpy.dtypes.float32.is_integer", false]], "is_integer() (arkouda.numpy.dtypes.float64 method)": [[35, "arkouda.numpy.dtypes.float64.is_integer", false]], "is_integer() (arkouda.numpy.float16 method)": [[36, "arkouda.numpy.float16.is_integer", false]], "is_integer() (arkouda.numpy.float32 method)": [[36, "arkouda.numpy.float32.is_integer", false]], "is_integer() (arkouda.numpy.float64 method)": [[36, "arkouda.numpy.float64.is_integer", false]], "is_integer() (arkouda.numpy.float_ method)": [[36, "arkouda.numpy.float_.is_integer", false]], "is_integer() (arkouda.numpy.half method)": [[36, "arkouda.numpy.half.is_integer", false]], "is_integer() (arkouda.numpy.integer method)": [[36, "arkouda.numpy.integer.is_integer", false]], "is_integer() (arkouda.numpy.longdouble method)": [[36, "arkouda.numpy.longdouble.is_integer", false]], "is_integer() (arkouda.numpy.longfloat method)": [[36, "arkouda.numpy.longfloat.is_integer", false]], "is_integer() (arkouda.numpy.single method)": [[36, "arkouda.numpy.single.is_integer", false]], "is_integer() (arkouda.single method)": [[25, "arkouda.single.is_integer", false]], "is_ipv4() (in module arkouda)": [[25, "arkouda.is_ipv4", false]], "is_ipv4() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.is_ipv4", false]], "is_ipv6() (in module arkouda)": [[25, "arkouda.is_ipv6", false]], "is_ipv6() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.is_ipv6", false]], "is_leap_year (arkouda.datetime property)": [[25, "arkouda.Datetime.is_leap_year", false], [25, "id192", false], [25, "id225", false]], "is_leap_year (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.is_leap_year", false]], "is_numeric() (in module arkouda.util)": [[56, "arkouda.util.is_numeric", false]], "is_registered() (arkouda.categorical method)": [[25, "arkouda.Categorical.is_registered", false], [25, "id38", false], [25, "id96", false]], "is_registered() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.is_registered", false]], "is_registered() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.is_registered", false], [25, "id154", false]], "is_registered() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.is_registered", false]], "is_registered() (arkouda.datetime method)": [[25, "arkouda.Datetime.is_registered", false], [25, "id193", false], [25, "id226", false]], "is_registered() (arkouda.groupby method)": [[25, "arkouda.GroupBy.is_registered", false], [25, "id276", false], [25, "id323", false], [25, "id370", false], [25, "id417", false], [25, "id464", false], [92, "arkouda.GroupBy.is_registered", false]], "is_registered() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.is_registered", false]], "is_registered() (arkouda.index method)": [[25, "arkouda.Index.is_registered", false]], "is_registered() (arkouda.index.index method)": [[26, "arkouda.index.Index.is_registered", false]], "is_registered() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.is_registered", false]], "is_registered() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.is_registered", false]], "is_registered() (arkouda.pdarray method)": [[25, "arkouda.pdarray.is_registered", false], [25, "id1025", false], [25, "id1095", false], [25, "id1165", false], [25, "id1235", false], [25, "id955", false]], "is_registered() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.is_registered", false]], "is_registered() (arkouda.segarray method)": [[25, "arkouda.SegArray.is_registered", false]], "is_registered() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.is_registered", false]], "is_registered() (arkouda.series method)": [[25, "arkouda.Series.is_registered", false]], "is_registered() (arkouda.series.series method)": [[49, "arkouda.series.Series.is_registered", false]], "is_registered() (arkouda.strings method)": [[25, "arkouda.Strings.is_registered", false], [25, "id534", false], [25, "id609", false], [25, "id684", false], [25, "id759", false]], "is_registered() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.is_registered", false]], "is_registered() (arkouda.timeclass.datetime method)": [[55, "arkouda.timeclass.Datetime.is_registered", false]], "is_registered() (arkouda.timeclass.timedelta method)": [[55, "arkouda.timeclass.Timedelta.is_registered", false]], "is_registered() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.is_registered", false], [25, "id803", false]], "is_registered() (in module arkouda)": [[25, "arkouda.is_registered", false]], "is_registered() (in module arkouda.util)": [[56, "arkouda.util.is_registered", false]], "is_sorted() (arkouda.pdarray method)": [[25, "arkouda.pdarray.is_sorted", false], [25, "id1026", false], [25, "id1096", false], [25, "id1166", false], [25, "id1236", false], [25, "id956", false], [93, "arkouda.pdarray.is_sorted", false]], "is_sorted() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.is_sorted", false]], "is_sorted() (in module arkouda)": [[25, "arkouda.is_sorted", false], [25, "id914", false], [87, "arkouda.is_sorted", false]], "is_sorted() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.is_sorted", false]], "isalnum() (arkouda.strings method)": [[25, "arkouda.Strings.isalnum", false], [25, "id535", false], [25, "id610", false], [25, "id685", false], [25, "id760", false]], "isalnum() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.isalnum", false]], "isalpha() (arkouda.strings method)": [[25, "arkouda.Strings.isalpha", false], [25, "id536", false], [25, "id611", false], [25, "id686", false], [25, "id761", false]], "isalpha() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.isalpha", false]], "isdecimal() (arkouda.strings method)": [[25, "arkouda.Strings.isdecimal", false], [25, "id537", false], [25, "id612", false], [25, "id687", false], [25, "id762", false]], "isdecimal() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.isdecimal", false]], "isdigit() (arkouda.strings method)": [[25, "arkouda.Strings.isdigit", false], [25, "id538", false], [25, "id613", false], [25, "id688", false], [25, "id763", false]], "isdigit() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.isdigit", false]], "isdisjoint() (arkouda.arkouda_supported_dtypes method)": [[25, "arkouda.ARKOUDA_SUPPORTED_DTYPES.isdisjoint", false]], "isdisjoint() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.dtypes method)": [[25, "arkouda.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.arkouda_supported_dtypes method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.dtypeobjects method)": [[22, "arkouda.dtypes.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.dtypes method)": [[22, "arkouda.dtypes.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.inttypes method)": [[22, "arkouda.dtypes.intTypes.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.numericdtypes method)": [[22, "arkouda.dtypes.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.scalardtypes method)": [[22, "arkouda.dtypes.ScalarDTypes.isdisjoint", false]], "isdisjoint() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.isdisjoint", false]], "isdisjoint() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.isdisjoint", false]], "isdisjoint() (arkouda.inttypes method)": [[25, "arkouda.intTypes.isdisjoint", false], [25, "id894", false], [25, "id903", false]], "isdisjoint() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypeobjects method)": [[36, "arkouda.numpy.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes method)": [[36, "arkouda.numpy.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.dtypeobjects method)": [[35, "arkouda.numpy.dtypes.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.dtypes method)": [[35, "arkouda.numpy.dtypes.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.inttypes method)": [[35, "arkouda.numpy.dtypes.intTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.numericdtypes method)": [[35, "arkouda.numpy.dtypes.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.scalardtypes method)": [[35, "arkouda.numpy.dtypes.ScalarDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.inttypes method)": [[36, "arkouda.numpy.intTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.numericdtypes method)": [[36, "arkouda.numpy.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.scalardtypes method)": [[36, "arkouda.numpy.ScalarDTypes.isdisjoint", false]], "isdisjoint() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.isdisjoint", false]], "isdtype() (in module arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.isdtype", false]], "isempty() (arkouda.strings method)": [[25, "arkouda.Strings.isempty", false], [25, "id539", false], [25, "id614", false], [25, "id689", false], [25, "id764", false]], "isempty() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.isempty", false]], "isfinite() (in module arkouda)": [[25, "arkouda.isfinite", false]], "isfinite() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.isfinite", false]], "isfinite() (in module arkouda.numeric)": [[34, "arkouda.numeric.isfinite", false]], "isin() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.isin", false], [25, "id155", false]], "isin() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.isin", false]], "isin() (arkouda.series method)": [[25, "arkouda.Series.isin", false]], "isin() (arkouda.series.series method)": [[49, "arkouda.series.Series.isin", false]], "isinf() (in module arkouda)": [[25, "arkouda.isinf", false]], "isinf() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.isinf", false]], "isinf() (in module arkouda.numeric)": [[34, "arkouda.numeric.isinf", false]], "islower() (arkouda.strings method)": [[25, "arkouda.Strings.islower", false], [25, "id540", false], [25, "id615", false], [25, "id690", false], [25, "id765", false]], "islower() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.islower", false]], "isna() (arkouda.categorical method)": [[25, "arkouda.Categorical.isna", false], [25, "id39", false], [25, "id97", false]], "isna() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.isna", false]], "isna() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.isna", false], [25, "id156", false]], "isna() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.isna", false]], "isna() (arkouda.series method)": [[25, "arkouda.Series.isna", false]], "isna() (arkouda.series.series method)": [[49, "arkouda.series.Series.isna", false]], "isnan() (in module arkouda)": [[25, "arkouda.isnan", false], [25, "id915", false]], "isnan() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.isnan", false]], "isnan() (in module arkouda.numeric)": [[34, "arkouda.numeric.isnan", false]], "isnull() (arkouda.series method)": [[25, "arkouda.Series.isnull", false]], "isnull() (arkouda.series.series method)": [[49, "arkouda.series.Series.isnull", false]], "isocalendar() (arkouda.datetime method)": [[25, "arkouda.Datetime.isocalendar", false], [25, "id194", false], [25, "id227", false]], "isocalendar() (arkouda.timeclass.datetime method)": [[55, "arkouda.timeclass.Datetime.isocalendar", false]], "isscalar() (in module arkouda)": [[25, "arkouda.isscalar", false]], "isscalar() (in module arkouda.numpy)": [[36, "arkouda.numpy.isscalar", false]], "issctype() (in module arkouda)": [[25, "arkouda.issctype", false]], "issctype() (in module arkouda.numpy)": [[36, "arkouda.numpy.issctype", false]], "isspace() (arkouda.strings method)": [[25, "arkouda.Strings.isspace", false], [25, "id541", false], [25, "id616", false], [25, "id691", false], [25, "id766", false]], "isspace() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.isspace", false]], "issubclass_() (in module arkouda)": [[25, "arkouda.issubclass_", false]], "issubclass_() (in module arkouda.numpy)": [[36, "arkouda.numpy.issubclass_", false]], "issubdtype() (in module arkouda)": [[25, "arkouda.issubdtype", false]], "issubdtype() (in module arkouda.numpy)": [[36, "arkouda.numpy.issubdtype", false]], "issubset() (arkouda.arkouda_supported_dtypes method)": [[25, "arkouda.ARKOUDA_SUPPORTED_DTYPES.issubset", false]], "issubset() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.issubset", false]], "issubset() (arkouda.dtypes method)": [[25, "arkouda.DTypes.issubset", false]], "issubset() (arkouda.dtypes.arkouda_supported_dtypes method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.issubset", false]], "issubset() (arkouda.dtypes.dtypeobjects method)": [[22, "arkouda.dtypes.DTypeObjects.issubset", false]], "issubset() (arkouda.dtypes.dtypes method)": [[22, "arkouda.dtypes.DTypes.issubset", false]], "issubset() (arkouda.dtypes.inttypes method)": [[22, "arkouda.dtypes.intTypes.issubset", false]], "issubset() (arkouda.dtypes.numericdtypes method)": [[22, "arkouda.dtypes.NumericDTypes.issubset", false]], "issubset() (arkouda.dtypes.scalardtypes method)": [[22, "arkouda.dtypes.ScalarDTypes.issubset", false]], "issubset() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.issubset", false]], "issubset() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.issubset", false]], "issubset() (arkouda.inttypes method)": [[25, "arkouda.intTypes.issubset", false], [25, "id895", false], [25, "id904", false]], "issubset() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.issubset", false]], "issubset() (arkouda.numpy.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.issubset", false]], "issubset() (arkouda.numpy.dtypeobjects method)": [[36, "arkouda.numpy.DTypeObjects.issubset", false]], "issubset() (arkouda.numpy.dtypes method)": [[36, "arkouda.numpy.DTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.issubset", false]], "issubset() (arkouda.numpy.dtypes.dtypeobjects method)": [[35, "arkouda.numpy.dtypes.DTypeObjects.issubset", false]], "issubset() (arkouda.numpy.dtypes.dtypes method)": [[35, "arkouda.numpy.dtypes.DTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.inttypes method)": [[35, "arkouda.numpy.dtypes.intTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.numericdtypes method)": [[35, "arkouda.numpy.dtypes.NumericDTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.scalardtypes method)": [[35, "arkouda.numpy.dtypes.ScalarDTypes.issubset", false]], "issubset() (arkouda.numpy.inttypes method)": [[36, "arkouda.numpy.intTypes.issubset", false]], "issubset() (arkouda.numpy.numericdtypes method)": [[36, "arkouda.numpy.NumericDTypes.issubset", false]], "issubset() (arkouda.numpy.scalardtypes method)": [[36, "arkouda.numpy.ScalarDTypes.issubset", false]], "issubset() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.issubset", false]], "issuperset() (arkouda.arkouda_supported_dtypes method)": [[25, "arkouda.ARKOUDA_SUPPORTED_DTYPES.issuperset", false]], "issuperset() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.issuperset", false]], "issuperset() (arkouda.dtypes method)": [[25, "arkouda.DTypes.issuperset", false]], "issuperset() (arkouda.dtypes.arkouda_supported_dtypes method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.issuperset", false]], "issuperset() (arkouda.dtypes.dtypeobjects method)": [[22, "arkouda.dtypes.DTypeObjects.issuperset", false]], "issuperset() (arkouda.dtypes.dtypes method)": [[22, "arkouda.dtypes.DTypes.issuperset", false]], "issuperset() (arkouda.dtypes.inttypes method)": [[22, "arkouda.dtypes.intTypes.issuperset", false]], "issuperset() (arkouda.dtypes.numericdtypes method)": [[22, "arkouda.dtypes.NumericDTypes.issuperset", false]], "issuperset() (arkouda.dtypes.scalardtypes method)": [[22, "arkouda.dtypes.ScalarDTypes.issuperset", false]], "issuperset() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.issuperset", false]], "issuperset() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.issuperset", false]], "issuperset() (arkouda.inttypes method)": [[25, "arkouda.intTypes.issuperset", false], [25, "id896", false], [25, "id905", false]], "issuperset() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.issuperset", false]], "issuperset() (arkouda.numpy.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.issuperset", false]], "issuperset() (arkouda.numpy.dtypeobjects method)": [[36, "arkouda.numpy.DTypeObjects.issuperset", false]], "issuperset() (arkouda.numpy.dtypes method)": [[36, "arkouda.numpy.DTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.dtypeobjects method)": [[35, "arkouda.numpy.dtypes.DTypeObjects.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.dtypes method)": [[35, "arkouda.numpy.dtypes.DTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.inttypes method)": [[35, "arkouda.numpy.dtypes.intTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.numericdtypes method)": [[35, "arkouda.numpy.dtypes.NumericDTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.scalardtypes method)": [[35, "arkouda.numpy.dtypes.ScalarDTypes.issuperset", false]], "issuperset() (arkouda.numpy.inttypes method)": [[36, "arkouda.numpy.intTypes.issuperset", false]], "issuperset() (arkouda.numpy.numericdtypes method)": [[36, "arkouda.numpy.NumericDTypes.issuperset", false]], "issuperset() (arkouda.numpy.scalardtypes method)": [[36, "arkouda.numpy.ScalarDTypes.issuperset", false]], "issuperset() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.issuperset", false]], "issupportedfloat() (in module arkouda)": [[25, "arkouda.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.dtypes)": [[22, "arkouda.dtypes.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.numpy)": [[36, "arkouda.numpy.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.isSupportedFloat", false]], "issupportedint() (in module arkouda)": [[25, "arkouda.isSupportedInt", false], [25, "id911", false], [25, "id912", false], [25, "id913", false]], "issupportedint() (in module arkouda.dtypes)": [[22, "arkouda.dtypes.isSupportedInt", false]], "issupportedint() (in module arkouda.numpy)": [[36, "arkouda.numpy.isSupportedInt", false]], "issupportedint() (in module arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.isSupportedInt", false]], "issupportednumber() (in module arkouda)": [[25, "arkouda.isSupportedNumber", false]], "issupportednumber() (in module arkouda.dtypes)": [[22, "arkouda.dtypes.isSupportedNumber", false]], "issupportednumber() (in module arkouda.numpy)": [[36, "arkouda.numpy.isSupportedNumber", false]], "issupportednumber() (in module arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.isSupportedNumber", false]], "istitle() (arkouda.strings method)": [[25, "arkouda.Strings.istitle", false], [25, "id542", false], [25, "id617", false], [25, "id692", false], [25, "id767", false]], "istitle() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.istitle", false]], "isupper() (arkouda.strings method)": [[25, "arkouda.Strings.isupper", false], [25, "id543", false], [25, "id618", false], [25, "id693", false], [25, "id768", false]], "isupper() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.isupper", false]], "item() (arkouda.array_api.array method)": [[8, "arkouda.array_api.Array.item", false]], "item() (arkouda.array_api.array_object.array method)": [[4, "arkouda.array_api.array_object.Array.item", false]], "item() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.item", false]], "item() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.item", false]], "item() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.item", false]], "item() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.item", false]], "item() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.item", false]], "item() (arkouda.str_ method)": [[25, "arkouda.str_.item", false], [25, "id1319", false]], "items() (arkouda.dtypes.number_format_strings method)": [[22, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.dtypes.seriesdtypes method)": [[22, "arkouda.dtypes.SeriesDTypes.items", false]], "items() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.numpy.dtypes.number_format_strings method)": [[35, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.numpy.dtypes.seriesdtypes method)": [[35, "arkouda.numpy.dtypes.SeriesDTypes.items", false]], "items() (arkouda.numpy.number_format_strings method)": [[36, "arkouda.numpy.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.numpy.sctypedict method)": [[36, "arkouda.numpy.sctypeDict.items", false]], "items() (arkouda.numpy.sctypes method)": [[36, "arkouda.numpy.sctypes.items", false]], "items() (arkouda.numpy.seriesdtypes method)": [[36, "arkouda.numpy.SeriesDTypes.items", false]], "items() (arkouda.sctypedict method)": [[25, "arkouda.sctypeDict.items", false]], "items() (arkouda.sctypes method)": [[25, "arkouda.sctypes.items", false]], "items() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.items", false]], "itemset() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.itemset", false]], "itemset() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.itemset", false]], "itemset() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.itemset", false]], "itemset() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.itemset", false]], "itemset() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.itemset", false]], "itemset() (arkouda.str_ method)": [[25, "arkouda.str_.itemset", false], [25, "id1320", false]], "itemsize (arkouda.array_view.arrayview attribute)": [[17, "arkouda.array_view.ArrayView.itemsize", false], [17, "id2", false]], "itemsize (arkouda.arrayview attribute)": [[25, "arkouda.ArrayView.itemsize", false], [25, "id2", false], [88, "arkouda.ArrayView.itemsize", false]], "itemsize (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.itemsize", false], [25, "id1003", false], [25, "id1027", false], [25, "id1073", false], [25, "id1097", false], [25, "id1143", false], [25, "id1167", false], [25, "id1213", false], [25, "id1237", false], [25, "id920", false], [25, "id933", false], [25, "id957", false], [95, "arkouda.pdarray.itemsize", false]], "itemsize (arkouda.pdarrayclass.pdarray attribute)": [[37, "arkouda.pdarrayclass.pdarray.itemsize", false], [37, "id1", false]], "itemsize (arkouda.sparray attribute)": [[25, "arkouda.sparray.itemsize", false], [25, "id1283", false]], "itemsize (arkouda.sparrayclass.sparray attribute)": [[51, "arkouda.sparrayclass.sparray.itemsize", false], [51, "id1", false]], "itemsize() (arkouda.bigint method)": [[25, "arkouda.bigint.itemsize", false], [25, "id847", false]], "itemsize() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.itemsize", false]], "itemsize() (arkouda.dtypes.bigint method)": [[22, "arkouda.dtypes.bigint.itemsize", false]], "itemsize() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.itemsize", false]], "itemsize() (arkouda.numpy.bigint method)": [[36, "arkouda.numpy.bigint.itemsize", false]], "itemsize() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.itemsize", false]], "itemsize() (arkouda.numpy.dtypes.bigint method)": [[35, "arkouda.numpy.dtypes.bigint.itemsize", false]], "itemsize() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.itemsize", false]], "itemsize() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.itemsize", false]], "itemsize() (arkouda.str_ method)": [[25, "arkouda.str_.itemsize", false], [25, "id1321", false]], "join_on_eq_with_dt() (in module arkouda)": [[25, "arkouda.join_on_eq_with_dt", false]], "join_on_eq_with_dt() (in module arkouda.join)": [[30, "arkouda.join.join_on_eq_with_dt", false]], "keys() (arkouda.dtypes.number_format_strings method)": [[22, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.dtypes.seriesdtypes method)": [[22, "arkouda.dtypes.SeriesDTypes.keys", false]], "keys() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.numpy.dtypes.number_format_strings method)": [[35, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.numpy.dtypes.seriesdtypes method)": [[35, "arkouda.numpy.dtypes.SeriesDTypes.keys", false]], "keys() (arkouda.numpy.number_format_strings method)": [[36, "arkouda.numpy.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.numpy.sctypedict method)": [[36, "arkouda.numpy.sctypeDict.keys", false]], "keys() (arkouda.numpy.sctypes method)": [[36, "arkouda.numpy.sctypes.keys", false]], "keys() (arkouda.numpy.seriesdtypes method)": [[36, "arkouda.numpy.SeriesDTypes.keys", false]], "keys() (arkouda.sctypedict method)": [[25, "arkouda.sctypeDict.keys", false]], "keys() (arkouda.sctypes method)": [[25, "arkouda.sctypes.keys", false]], "keys() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.keys", false]], "layout (arkouda.sparray attribute)": [[25, "arkouda.sparray.layout", false], [25, "id1284", false]], "layout (arkouda.sparrayclass.sparray attribute)": [[51, "arkouda.sparrayclass.sparray.layout", false], [51, "id2", false]], "left_align() (in module arkouda)": [[25, "arkouda.left_align", false]], "left_align() (in module arkouda.alignment)": [[3, "arkouda.alignment.left_align", false]], "len_suffix (in module arkouda)": [[25, "arkouda.LEN_SUFFIX", false]], "len_suffix (in module arkouda.segarray)": [[48, "arkouda.segarray.LEN_SUFFIX", false]], "lengths (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.lengths", false]], "less() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.less", false]], "less_equal() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.less_equal", false]], "levels (arkouda.index.multiindex attribute)": [[26, "arkouda.index.MultiIndex.levels", false]], "levels (arkouda.multiindex attribute)": [[25, "arkouda.MultiIndex.levels", false]], "linspace() (in module arkouda)": [[25, "arkouda.linspace", false], [90, "arkouda.linspace", false]], "linspace() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.linspace", false]], "linspace() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.linspace", false]], "list_registry() (in module arkouda)": [[25, "arkouda.list_registry", false]], "list_registry() (in module arkouda.infoclass)": [[27, "arkouda.infoclass.list_registry", false]], "list_symbol_table() (in module arkouda)": [[25, "arkouda.list_symbol_table", false]], "list_symbol_table() (in module arkouda.infoclass)": [[27, "arkouda.infoclass.list_symbol_table", false]], "load() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.load", false], [25, "id157", false]], "load() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.load", false]], "load() (arkouda.segarray class method)": [[25, "arkouda.SegArray.load", false]], "load() (arkouda.segarray.segarray class method)": [[48, "arkouda.segarray.SegArray.load", false]], "load() (in module arkouda)": [[25, "arkouda.load", false]], "load() (in module arkouda.io)": [[28, "arkouda.io.load", false]], "load_all() (in module arkouda)": [[25, "arkouda.load_all", false]], "load_all() (in module arkouda.io)": [[28, "arkouda.io.load_all", false]], "loc (arkouda.series property)": [[25, "arkouda.Series.loc", false]], "loc (arkouda.series.series property)": [[49, "arkouda.series.Series.loc", false]], "locate() (arkouda.series method)": [[25, "arkouda.Series.locate", false]], "locate() (arkouda.series.series method)": [[49, "arkouda.series.Series.locate", false]], "locate() (in module arkouda.series)": [[98, "arkouda.Series.locate", false], [98, "id0", false]], "locationsinfo (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.LocationsInfo", false]], "log() (in module arkouda)": [[25, "arkouda.log", false], [87, "arkouda.log", false]], "log() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.log", false]], "log() (in module arkouda.numeric)": [[34, "arkouda.numeric.log", false]], "log10() (in module arkouda)": [[25, "arkouda.log10", false]], "log10() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.log10", false]], "log10() (in module arkouda.numeric)": [[34, "arkouda.numeric.log10", false]], "log1p() (in module arkouda)": [[25, "arkouda.log1p", false]], "log1p() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.log1p", false]], "log1p() (in module arkouda.numeric)": [[34, "arkouda.numeric.log1p", false]], "log2() (in module arkouda)": [[25, "arkouda.log2", false]], "log2() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.log2", false]], "log2() (in module arkouda.numeric)": [[34, "arkouda.numeric.log2", false]], "logaddexp() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.logaddexp", false]], "logger (arkouda.categorical attribute)": [[25, "arkouda.Categorical.logger", false], [25, "id40", false], [25, "id98", false]], "logger (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.logger", false]], "logger (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.logger", false], [25, "id258", false], [25, "id305", false], [25, "id352", false], [25, "id399", false], [25, "id446", false], [92, "arkouda.GroupBy.logger", false]], "logger (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.logger", false]], "logger (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.logger", false]], "logger (arkouda.segarray attribute)": [[25, "arkouda.SegArray.logger", false]], "logger (arkouda.segarray.segarray attribute)": [[48, "arkouda.segarray.SegArray.logger", false]], "logger (arkouda.strings attribute)": [[25, "arkouda.Strings.logger", false], [25, "id498", false], [25, "id506", false], [25, "id544", false], [25, "id581", false], [25, "id619", false], [25, "id656", false], [25, "id694", false], [25, "id731", false], [25, "id769", false]], "logger (arkouda.strings.strings attribute)": [[53, "arkouda.strings.Strings.logger", false], [53, "id2", false]], "logger (in module arkouda)": [[25, "arkouda.logger", false]], "logger (in module arkouda.sparrayclass)": [[51, "arkouda.sparrayclass.logger", false]], "logical_and() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.logical_and", false]], "logical_not() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.logical_not", false]], "logical_or() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.logical_or", false]], "logical_xor() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.logical_xor", false]], "logistic() (arkouda.generator method)": [[25, "arkouda.Generator.logistic", false]], "logistic() (arkouda.random.generator method)": [[42, "arkouda.random.Generator.logistic", false]], "logistic() (in module arkouda.random.generator)": [[96, "arkouda.random.Generator.logistic", false]], "loglevel (class in arkouda)": [[25, "arkouda.LogLevel", false]], "loglevel (class in arkouda.logger)": [[31, "arkouda.logger.LogLevel", false]], "lognormal() (arkouda.generator method)": [[25, "arkouda.Generator.lognormal", false]], "lognormal() (arkouda.random.generator method)": [[42, "arkouda.random.Generator.lognormal", false]], "lognormal() (in module arkouda.random.generator)": [[96, "arkouda.random.Generator.lognormal", false]], "longdouble (class in arkouda)": [[25, "arkouda.longdouble", false]], "longdouble (class in arkouda.numpy)": [[36, "arkouda.numpy.longdouble", false]], "longdoubledtype (class in arkouda)": [[25, "arkouda.LongDoubleDType", false]], "longdoubledtype (class in arkouda.numpy)": [[36, "arkouda.numpy.LongDoubleDType", false]], "longdtype (class in arkouda)": [[25, "arkouda.LongDType", false]], "longdtype (class in arkouda.numpy)": [[36, "arkouda.numpy.LongDType", false]], "longfloat (class in arkouda)": [[25, "arkouda.longfloat", false]], "longfloat (class in arkouda.numpy)": [[36, "arkouda.numpy.longfloat", false]], "longlong (class in arkouda)": [[25, "arkouda.longlong", false]], "longlong (class in arkouda.numpy)": [[36, "arkouda.numpy.longlong", false]], "longlongdtype (class in arkouda)": [[25, "arkouda.LongLongDType", false]], "longlongdtype (class in arkouda.numpy)": [[36, "arkouda.numpy.LongLongDType", false]], "lookup() (arkouda.index method)": [[25, "arkouda.Index.lookup", false]], "lookup() (arkouda.index.index method)": [[26, "arkouda.index.Index.lookup", false]], "lookup() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.lookup", false]], "lookup() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.lookup", false]], "lookup() (in module arkouda)": [[25, "arkouda.lookup", false]], "lookup() (in module arkouda.alignment)": [[3, "arkouda.alignment.lookup", false]], "lookup() (in module arkouda.index)": [[85, "arkouda.Index.lookup", false]], "lookup() (in module arkouda.multiindex)": [[85, "arkouda.MultiIndex.lookup", false]], "lower() (arkouda.strings method)": [[25, "arkouda.Strings.lower", false], [25, "id545", false], [25, "id620", false], [25, "id695", false], [25, "id770", false]], "lower() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.lower", false]], "ls() (in module arkouda)": [[25, "arkouda.ls", false]], "ls() (in module arkouda.io)": [[28, "arkouda.io.ls", false]], "ls_csv() (in module arkouda)": [[25, "arkouda.ls_csv", false]], "ls_csv() (in module arkouda.io)": [[28, "arkouda.io.ls_csv", false]], "lstick() (arkouda.strings method)": [[25, "arkouda.Strings.lstick", false], [25, "id546", false], [25, "id621", false], [25, "id696", false], [25, "id771", false], [101, "arkouda.Strings.lstick", false]], "lstick() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.lstick", false]], "machep (arkouda.finfo attribute)": [[25, "arkouda.finfo.machep", false]], "machep (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.machep", false]], "mandatory() (arkouda.dtypes.annotations method)": [[22, "arkouda.dtypes.annotations.mandatory", false]], "mandatory() (arkouda.numpy.dtypes.annotations method)": [[35, "arkouda.numpy.dtypes.annotations.mandatory", false]], "map() (arkouda.index method)": [[25, "arkouda.Index.map", false]], "map() (arkouda.index.index method)": [[26, "arkouda.index.Index.map", false]], "map() (arkouda.series method)": [[25, "arkouda.Series.map", false]], "map() (arkouda.series.series method)": [[49, "arkouda.series.Series.map", false]], "map() (in module arkouda.util)": [[56, "arkouda.util.map", false]], "match (class in arkouda.match)": [[32, "arkouda.match.Match", false]], "match() (arkouda.strings method)": [[25, "arkouda.Strings.match", false], [25, "id547", false], [25, "id622", false], [25, "id697", false], [25, "id772", false], [101, "arkouda.Strings.match", false]], "match() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.match", false]], "match_bool (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.match_bool", false]], "match_ind (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.match_ind", false]], "match_type() (arkouda.match.match method)": [[32, "arkouda.match.Match.match_type", false], [101, "arkouda.match.Match.match_type", false]], "matched() (arkouda.match.match method)": [[32, "arkouda.match.Match.matched", false], [101, "arkouda.match.Match.matched", false]], "matcher (class in arkouda.matcher)": [[33, "arkouda.matcher.Matcher", false]], "matmul() (in module arkouda)": [[25, "arkouda.matmul", false]], "matmul() (in module arkouda.array_api.linalg)": [[10, "arkouda.array_api.linalg.matmul", false]], "matmul() (in module arkouda.numeric)": [[34, "arkouda.numeric.matmul", false]], "matrix_transpose() (in module arkouda.array_api.linalg)": [[10, "arkouda.array_api.linalg.matrix_transpose", false]], "max (arkouda.array_api.data_type_functions.finfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.finfo_object.max", false]], "max (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.iinfo_object.max", false]], "max (arkouda.finfo attribute)": [[25, "arkouda.finfo.max", false]], "max (arkouda.iinfo attribute)": [[25, "arkouda.iinfo.max", false]], "max (arkouda.iinfo property)": [[25, "id884", false]], "max (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.max", false]], "max (arkouda.numpy.iinfo attribute)": [[36, "arkouda.numpy.iinfo.max", false]], "max (arkouda.numpy.iinfo property)": [[36, "id12", false]], "max() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.max", false]], "max() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.max", false]], "max() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.max", false]], "max() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.max", false]], "max() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.max", false]], "max() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.max", false]], "max() (arkouda.groupby method)": [[25, "arkouda.GroupBy.max", false], [25, "id277", false], [25, "id324", false], [25, "id371", false], [25, "id418", false], [25, "id465", false], [92, "arkouda.GroupBy.max", false]], "max() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.max", false]], "max() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.max", false]], "max() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.max", false]], "max() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.max", false]], "max() (arkouda.pdarray method)": [[25, "arkouda.pdarray.max", false], [25, "id1028", false], [25, "id1098", false], [25, "id1168", false], [25, "id1238", false], [25, "id958", false], [93, "arkouda.pdarray.max", false]], "max() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.max", false]], "max() (arkouda.segarray method)": [[25, "arkouda.SegArray.max", false]], "max() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.max", false]], "max() (arkouda.series method)": [[25, "arkouda.Series.max", false]], "max() (arkouda.series.series method)": [[49, "arkouda.series.Series.max", false]], "max() (arkouda.str_ method)": [[25, "arkouda.str_.max", false], [25, "id1322", false]], "max() (in module arkouda)": [[25, "arkouda.max", false], [87, "arkouda.max", false]], "max() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.max", false]], "max() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.max", false]], "max_bits (arkouda.pdarray property)": [[25, "arkouda.pdarray.max_bits", false], [25, "id1029", false], [25, "id1099", false], [25, "id1169", false], [25, "id1239", false], [25, "id959", false]], "max_bits (arkouda.pdarrayclass.pdarray property)": [[37, "arkouda.pdarrayclass.pdarray.max_bits", false]], "max_list_size (arkouda.index attribute)": [[25, "arkouda.Index.max_list_size", false]], "max_list_size (arkouda.index.index attribute)": [[26, "arkouda.index.Index.max_list_size", false]], "maxexp (arkouda.finfo attribute)": [[25, "arkouda.finfo.maxexp", false]], "maxexp (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.maxexp", false]], "maximum_sctype() (in module arkouda)": [[25, "arkouda.maximum_sctype", false]], "maximum_sctype() (in module arkouda.numpy)": [[36, "arkouda.numpy.maximum_sctype", false]], "maxk() (arkouda.pdarray method)": [[25, "arkouda.pdarray.maxk", false], [25, "id1030", false], [25, "id1100", false], [25, "id1170", false], [25, "id1240", false], [25, "id960", false], [93, "arkouda.pdarray.maxk", false]], "maxk() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.maxk", false]], "maxk() (in module arkouda)": [[25, "arkouda.maxk", false], [87, "arkouda.maxk", false]], "maxk() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.maxk", false]], "mean() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.mean", false]], "mean() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.mean", false]], "mean() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.mean", false]], "mean() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.mean", false]], "mean() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.mean", false]], "mean() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.mean", false]], "mean() (arkouda.groupby method)": [[25, "arkouda.GroupBy.mean", false], [25, "id278", false], [25, "id325", false], [25, "id372", false], [25, "id419", false], [25, "id466", false], [92, "arkouda.GroupBy.mean", false]], "mean() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.mean", false]], "mean() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.mean", false]], "mean() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.mean", false]], "mean() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.mean", false]], "mean() (arkouda.pdarray method)": [[25, "arkouda.pdarray.mean", false], [25, "id1031", false], [25, "id1101", false], [25, "id1171", false], [25, "id1241", false], [25, "id961", false], [93, "arkouda.pdarray.mean", false]], "mean() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.mean", false]], "mean() (arkouda.segarray method)": [[25, "arkouda.SegArray.mean", false]], "mean() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.mean", false]], "mean() (arkouda.series method)": [[25, "arkouda.Series.mean", false]], "mean() (arkouda.series.series method)": [[49, "arkouda.series.Series.mean", false]], "mean() (arkouda.str_ method)": [[25, "arkouda.str_.mean", false], [25, "id1323", false]], "mean() (in module arkouda)": [[25, "arkouda.mean", false], [87, "arkouda.mean", false]], "mean() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.mean", false]], "mean() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.mean", false]], "mean_shim() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.mean_shim", false]], "median() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.median", false]], "median() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.median", false]], "median() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.median", false]], "median() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.median", false]], "median() (arkouda.groupby method)": [[25, "arkouda.GroupBy.median", false], [25, "id279", false], [25, "id326", false], [25, "id373", false], [25, "id420", false], [25, "id467", false], [92, "arkouda.GroupBy.median", false]], "median() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.median", false]], "median() (in module arkouda)": [[25, "arkouda.median", false]], "median() (in module arkouda.numeric)": [[34, "arkouda.numeric.median", false]], "memory_usage() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.memory_usage", false], [25, "id158", false]], "memory_usage() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.memory_usage", false]], "memory_usage() (arkouda.index method)": [[25, "arkouda.Index.memory_usage", false]], "memory_usage() (arkouda.index.index method)": [[26, "arkouda.index.Index.memory_usage", false]], "memory_usage() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.memory_usage", false]], "memory_usage() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.memory_usage", false]], "memory_usage() (arkouda.series method)": [[25, "arkouda.Series.memory_usage", false]], "memory_usage() (arkouda.series.series method)": [[49, "arkouda.series.Series.memory_usage", false]], "memory_usage_info() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.memory_usage_info", false], [25, "id159", false]], "memory_usage_info() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.memory_usage_info", false]], "merge() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.merge", false], [25, "id160", false]], "merge() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.merge", false]], "merge() (in module arkouda)": [[25, "arkouda.merge", false]], "merge() (in module arkouda.dataframe)": [[21, "arkouda.dataframe.merge", false]], "meshgrid() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.meshgrid", false]], "microsecond (arkouda.datetime property)": [[25, "arkouda.Datetime.microsecond", false], [25, "id195", false], [25, "id228", false]], "microsecond (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.microsecond", false]], "microseconds (arkouda.timeclass.timedelta property)": [[55, "arkouda.timeclass.Timedelta.microseconds", false]], "microseconds (arkouda.timedelta property)": [[25, "arkouda.Timedelta.microseconds", false], [25, "id804", false]], "millisecond (arkouda.datetime property)": [[25, "arkouda.Datetime.millisecond", false], [25, "id196", false], [25, "id229", false]], "millisecond (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.millisecond", false]], "min (arkouda.array_api.data_type_functions.finfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.finfo_object.min", false]], "min (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.iinfo_object.min", false]], "min (arkouda.finfo attribute)": [[25, "arkouda.finfo.min", false]], "min (arkouda.iinfo attribute)": [[25, "arkouda.iinfo.min", false]], "min (arkouda.iinfo property)": [[25, "id885", false]], "min (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.min", false]], "min (arkouda.numpy.iinfo attribute)": [[36, "arkouda.numpy.iinfo.min", false]], "min (arkouda.numpy.iinfo property)": [[36, "id13", false]], "min() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.min", false]], "min() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.min", false]], "min() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.min", false]], "min() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.min", false]], "min() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.min", false]], "min() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.min", false]], "min() (arkouda.groupby method)": [[25, "arkouda.GroupBy.min", false], [25, "id280", false], [25, "id327", false], [25, "id374", false], [25, "id421", false], [25, "id468", false], [92, "arkouda.GroupBy.min", false]], "min() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.min", false]], "min() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.min", false]], "min() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.min", false]], "min() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.min", false]], "min() (arkouda.pdarray method)": [[25, "arkouda.pdarray.min", false], [25, "id1032", false], [25, "id1102", false], [25, "id1172", false], [25, "id1242", false], [25, "id962", false], [93, "arkouda.pdarray.min", false]], "min() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.min", false]], "min() (arkouda.segarray method)": [[25, "arkouda.SegArray.min", false]], "min() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.min", false]], "min() (arkouda.series method)": [[25, "arkouda.Series.min", false]], "min() (arkouda.series.series method)": [[49, "arkouda.series.Series.min", false]], "min() (arkouda.str_ method)": [[25, "arkouda.str_.min", false], [25, "id1324", false]], "min() (in module arkouda)": [[25, "arkouda.min", false], [87, "arkouda.min", false]], "min() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.min", false]], "min() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.min", false]], "minexp (arkouda.finfo attribute)": [[25, "arkouda.finfo.minexp", false]], "minexp (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.minexp", false]], "mink() (arkouda.pdarray method)": [[25, "arkouda.pdarray.mink", false], [25, "id1033", false], [25, "id1103", false], [25, "id1173", false], [25, "id1243", false], [25, "id963", false], [93, "arkouda.pdarray.mink", false]], "mink() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.mink", false]], "mink() (in module arkouda)": [[25, "arkouda.mink", false], [87, "arkouda.mink", false]], "mink() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.mink", false]], "minute (arkouda.datetime property)": [[25, "arkouda.Datetime.minute", false], [25, "id197", false], [25, "id230", false]], "minute (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.minute", false]], "mod() (in module arkouda)": [[25, "arkouda.mod", false]], "mod() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.mod", false]], "mode() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.mode", false]], "mode() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.mode", false]], "mode() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.mode", false]], "mode() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.mode", false]], "mode() (arkouda.groupby method)": [[25, "arkouda.GroupBy.mode", false], [25, "id281", false], [25, "id328", false], [25, "id375", false], [25, "id422", false], [25, "id469", false], [92, "arkouda.GroupBy.mode", false]], "mode() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.mode", false]], "module": [[2, "module-arkouda.accessor", false], [3, "module-arkouda.alignment", false], [4, "module-arkouda.array_api.array_object", false], [5, "module-arkouda.array_api.creation_functions", false], [6, "module-arkouda.array_api.data_type_functions", false], [7, "module-arkouda.array_api.elementwise_functions", false], [8, "module-arkouda.array_api", false], [9, "module-arkouda.array_api.indexing_functions", false], [10, "module-arkouda.array_api.linalg", false], [11, "module-arkouda.array_api.manipulation_functions", false], [12, "module-arkouda.array_api.searching_functions", false], [13, "module-arkouda.array_api.set_functions", false], [14, "module-arkouda.array_api.sorting_functions", false], [15, "module-arkouda.array_api.statistical_functions", false], [16, "module-arkouda.array_api.utility_functions", false], [17, "module-arkouda.array_view", false], [18, "module-arkouda.categorical", false], [19, "module-arkouda.client", false], [20, "module-arkouda.client_dtypes", false], [21, "module-arkouda.dataframe", false], [22, "module-arkouda.dtypes", false], [23, "module-arkouda.groupbyclass", false], [24, "module-arkouda.history", false], [25, "module-arkouda", false], [26, "module-arkouda.index", false], [27, "module-arkouda.infoclass", false], [28, "module-arkouda.io", false], [29, "module-arkouda.io_util", false], [30, "module-arkouda.join", false], [31, "module-arkouda.logger", false], [32, "module-arkouda.match", false], [33, "module-arkouda.matcher", false], [34, "module-arkouda.numeric", false], [35, "module-arkouda.numpy.dtypes", false], [36, "module-arkouda.numpy", false], [37, "module-arkouda.pdarrayclass", false], [38, "module-arkouda.pdarraycreation", false], [39, "module-arkouda.pdarraymanipulation", false], [40, "module-arkouda.pdarraysetops", false], [41, "module-arkouda.plotting", false], [42, "module-arkouda.random", false], [43, "module-arkouda.row", false], [44, "module-arkouda.scipy", false], [45, "module-arkouda.scipy.special", false], [46, "module-arkouda.scipy.stats", false], [47, "module-arkouda.security", false], [48, "module-arkouda.segarray", false], [49, "module-arkouda.series", false], [50, "module-arkouda.sorting", false], [51, "module-arkouda.sparrayclass", false], [52, "module-arkouda.sparsematrix", false], [53, "module-arkouda.strings", false], [54, "module-arkouda.testing", false], [55, "module-arkouda.timeclass", false], [56, "module-arkouda.util", false]], "moment_type() (arkouda.scipy.stats.chi2 method)": [[46, "arkouda.scipy.stats.chi2.moment_type", false]], "month (arkouda.datetime property)": [[25, "arkouda.Datetime.month", false], [25, "id198", false], [25, "id231", false]], "month (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.month", false]], "most_common() (arkouda.groupby method)": [[25, "arkouda.GroupBy.most_common", false], [25, "id282", false], [25, "id329", false], [25, "id376", false], [25, "id423", false], [25, "id470", false], [92, "arkouda.GroupBy.most_common", false]], "most_common() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.most_common", false]], "most_common() (in module arkouda.util)": [[56, "arkouda.util.most_common", false]], "moveaxis() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.moveaxis", false]], "msb_left (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.MSB_left", false]], "msb_left (arkouda.fields attribute)": [[25, "arkouda.Fields.MSB_left", false]], "mt (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.mT", false]], "mt (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.mT", false]], "multiindex (class in arkouda)": [[25, "arkouda.MultiIndex", false]], "multiindex (class in arkouda.index)": [[26, "arkouda.index.MultiIndex", false]], "multiply() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.multiply", false]], "name (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.name", false]], "name (arkouda.fields attribute)": [[25, "arkouda.Fields.name", false]], "name (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.name", false]], "name (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.name", false]], "name (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.name", false], [25, "id1034", false], [25, "id1068", false], [25, "id1104", false], [25, "id1138", false], [25, "id1174", false], [25, "id1208", false], [25, "id1244", false], [25, "id921", false], [25, "id928", false], [25, "id964", false], [25, "id998", false], [95, "arkouda.pdarray.name", false]], "name (arkouda.pdarrayclass.pdarray attribute)": [[37, "arkouda.pdarrayclass.pdarray.name", false], [37, "id2", false]], "name (arkouda.sparray attribute)": [[25, "arkouda.sparray.name", false], [25, "id1285", false]], "name (arkouda.sparrayclass.sparray attribute)": [[51, "arkouda.sparrayclass.sparray.name", false], [51, "id3", false]], "name() (arkouda.bigint method)": [[25, "arkouda.bigint.name", false], [25, "id848", false]], "name() (arkouda.dtype method)": [[25, "arkouda.DType.name", false]], "name() (arkouda.dtypes.bigint method)": [[22, "arkouda.dtypes.bigint.name", false]], "name() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.name", false]], "name() (arkouda.numpy.bigint method)": [[36, "arkouda.numpy.bigint.name", false]], "name() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.name", false]], "name() (arkouda.numpy.dtypes.bigint method)": [[35, "arkouda.numpy.dtypes.bigint.name", false]], "name() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.name", false]], "name() (arkouda.scipy.stats.chi2 method)": [[46, "arkouda.scipy.stats.chi2.name", false]], "names (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.names", false]], "names (arkouda.fields attribute)": [[25, "arkouda.Fields.names", false]], "names (arkouda.index property)": [[25, "arkouda.Index.names", false]], "names (arkouda.index.index property)": [[26, "arkouda.index.Index.names", false]], "names (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.names", false]], "names (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.names", false]], "namewidth (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.namewidth", false]], "namewidth (arkouda.fields attribute)": [[25, "arkouda.Fields.namewidth", false]], "nan (in module arkouda)": [[25, "arkouda.NAN", false], [25, "arkouda.NaN", false], [25, "arkouda.nan", false]], "nan (in module arkouda.numpy)": [[36, "arkouda.numpy.NAN", false], [36, "arkouda.numpy.NaN", false], [36, "arkouda.numpy.nan", false]], "nanosecond (arkouda.datetime property)": [[25, "arkouda.Datetime.nanosecond", false], [25, "id199", false], [25, "id232", false]], "nanosecond (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.nanosecond", false]], "nanoseconds (arkouda.timeclass.timedelta property)": [[55, "arkouda.timeclass.Timedelta.nanoseconds", false]], "nanoseconds (arkouda.timedelta property)": [[25, "arkouda.Timedelta.nanoseconds", false], [25, "id805", false]], "nbytes (arkouda.categorical property)": [[25, "arkouda.Categorical.nbytes", false], [25, "id41", false], [25, "id99", false]], "nbytes (arkouda.categorical.categorical property)": [[18, "arkouda.categorical.Categorical.nbytes", false]], "nbytes (arkouda.pdarray property)": [[25, "arkouda.pdarray.nbytes", false], [25, "id1035", false], [25, "id1105", false], [25, "id1175", false], [25, "id1245", false], [25, "id965", false]], "nbytes (arkouda.pdarrayclass.pdarray property)": [[37, "arkouda.pdarrayclass.pdarray.nbytes", false]], "nbytes (arkouda.segarray property)": [[25, "arkouda.SegArray.nbytes", false]], "nbytes (arkouda.segarray.segarray property)": [[48, "arkouda.segarray.SegArray.nbytes", false]], "nbytes (arkouda.strings attribute)": [[25, "arkouda.Strings.nbytes", false], [25, "id502", false], [25, "id577", false], [25, "id652", false], [25, "id727", false]], "nbytes (arkouda.strings.strings attribute)": [[53, "arkouda.strings.Strings.nbytes", false]], "nbytes() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.nbytes", false]], "nbytes() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.nbytes", false]], "nbytes() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.nbytes", false]], "nbytes() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.nbytes", false]], "nbytes() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.nbytes", false]], "nbytes() (arkouda.str_ method)": [[25, "arkouda.str_.nbytes", false], [25, "id1325", false]], "ndim (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.ndim", false]], "ndim (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.ndim", false]], "ndim (arkouda.array_view.arrayview attribute)": [[17, "arkouda.array_view.ArrayView.ndim", false], [17, "id3", false]], "ndim (arkouda.arrayview attribute)": [[25, "arkouda.ArrayView.ndim", false], [25, "id3", false], [88, "arkouda.ArrayView.ndim", false]], "ndim (arkouda.categorical attribute)": [[25, "arkouda.Categorical.ndim", false], [25, "id100", false], [25, "id19", false], [25, "id42", false], [25, "id6", false], [25, "id77", false], [89, "arkouda.Categorical.ndim", false]], "ndim (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.ndim", false], [18, "id0", false]], "ndim (arkouda.index property)": [[25, "arkouda.Index.ndim", false]], "ndim (arkouda.index.index property)": [[26, "arkouda.index.Index.ndim", false]], "ndim (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.ndim", false]], "ndim (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.ndim", false]], "ndim (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.ndim", false], [25, "id1001", false], [25, "id1036", false], [25, "id1071", false], [25, "id1106", false], [25, "id1141", false], [25, "id1176", false], [25, "id1211", false], [25, "id1246", false], [25, "id922", false], [25, "id931", false], [25, "id966", false], [95, "arkouda.pdarray.ndim", false]], "ndim (arkouda.pdarrayclass.pdarray attribute)": [[37, "arkouda.pdarrayclass.pdarray.ndim", false], [37, "id3", false]], "ndim (arkouda.series property)": [[25, "arkouda.Series.ndim", false]], "ndim (arkouda.series.series property)": [[49, "arkouda.series.Series.ndim", false]], "ndim (arkouda.sparray attribute)": [[25, "arkouda.sparray.ndim", false], [25, "id1286", false]], "ndim (arkouda.sparrayclass.sparray attribute)": [[51, "arkouda.sparrayclass.sparray.ndim", false], [51, "id4", false]], "ndim (arkouda.strings attribute)": [[25, "arkouda.Strings.ndim", false], [25, "id503", false], [25, "id578", false], [25, "id653", false], [25, "id728", false]], "ndim (arkouda.strings.strings attribute)": [[53, "arkouda.strings.Strings.ndim", false]], "ndim() (arkouda.bigint method)": [[25, "arkouda.bigint.ndim", false], [25, "id849", false]], "ndim() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.ndim", false]], "ndim() (arkouda.dtypes.bigint method)": [[22, "arkouda.dtypes.bigint.ndim", false]], "ndim() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.ndim", false]], "ndim() (arkouda.numpy.bigint method)": [[36, "arkouda.numpy.bigint.ndim", false]], "ndim() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.ndim", false]], "ndim() (arkouda.numpy.dtypes.bigint method)": [[35, "arkouda.numpy.dtypes.bigint.ndim", false]], "ndim() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.ndim", false]], "ndim() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.ndim", false]], "ndim() (arkouda.str_ method)": [[25, "arkouda.str_.ndim", false], [25, "id1326", false]], "negative() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.negative", false]], "negep (arkouda.finfo attribute)": [[25, "arkouda.finfo.negep", false]], "negep (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.negep", false]], "newbyteorder() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.newbyteorder", false]], "newbyteorder() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.newbyteorder", false]], "newbyteorder() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.newbyteorder", false]], "newbyteorder() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.newbyteorder", false]], "newbyteorder() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.newbyteorder", false]], "newbyteorder() (arkouda.str_ method)": [[25, "arkouda.str_.newbyteorder", false], [25, "id1327", false]], "nexp (arkouda.finfo attribute)": [[25, "arkouda.finfo.nexp", false]], "nexp (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.nexp", false]], "ngroups (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.ngroups", false], [25, "id256", false], [25, "id303", false], [25, "id350", false], [25, "id397", false], [25, "id444", false], [92, "arkouda.GroupBy.ngroups", false]], "ngroups (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.ngroups", false]], "ninf (in module arkouda)": [[25, "arkouda.NINF", false]], "ninf (in module arkouda.numpy)": [[36, "arkouda.numpy.NINF", false]], "nkeys (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.nkeys", false], [25, "id252", false], [25, "id299", false], [25, "id346", false], [25, "id393", false], [25, "id440", false], [92, "arkouda.GroupBy.nkeys", false]], "nkeys (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.nkeys", false]], "nlevels (arkouda.categorical attribute)": [[25, "arkouda.Categorical.nlevels", false], [25, "id101", false], [25, "id18", false], [25, "id43", false], [25, "id7", false], [25, "id76", false], [89, "arkouda.Categorical.nlevels", false]], "nlevels (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.nlevels", false], [18, "id1", false]], "nlevels (arkouda.index property)": [[25, "arkouda.Index.nlevels", false]], "nlevels (arkouda.index.index property)": [[26, "arkouda.index.Index.nlevels", false]], "nlevels (arkouda.index.multiindex property)": [[26, "arkouda.index.MultiIndex.nlevels", false]], "nlevels (arkouda.multiindex property)": [[25, "arkouda.MultiIndex.nlevels", false]], "nmant (arkouda.finfo attribute)": [[25, "arkouda.finfo.nmant", false]], "nmant (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.nmant", false]], "nnz (arkouda.sparray attribute)": [[25, "arkouda.sparray.nnz", false]], "nnz (arkouda.sparrayclass.sparray attribute)": [[51, "arkouda.sparrayclass.sparray.nnz", false]], "non_empty (arkouda.segarray property)": [[25, "arkouda.SegArray.non_empty", false]], "non_empty (arkouda.segarray.segarray property)": [[48, "arkouda.segarray.SegArray.non_empty", false]], "nonuniqueerror": [[3, "arkouda.alignment.NonUniqueError", false], [25, "arkouda.NonUniqueError", false]], "nonzero() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.nonzero", false]], "nonzero() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.nonzero", false]], "nonzero() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.nonzero", false]], "nonzero() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.nonzero", false]], "nonzero() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.nonzero", false]], "nonzero() (arkouda.str_ method)": [[25, "arkouda.str_.nonzero", false], [25, "id1328", false]], "nonzero() (in module arkouda.array_api.searching_functions)": [[12, "arkouda.array_api.searching_functions.nonzero", false]], "normal() (arkouda.generator method)": [[25, "arkouda.Generator.normal", false]], "normal() (arkouda.random.generator method)": [[42, "arkouda.random.Generator.normal", false]], "normal() (in module arkouda.random.generator)": [[96, "arkouda.random.Generator.normal", false]], "normalize() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.normalize", false]], "normalize() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.normalize", false]], "not_equal() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.not_equal", false]], "notebookhistoryretriever (class in arkouda.history)": [[24, "arkouda.history.NotebookHistoryRetriever", false]], "notna() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.notna", false], [25, "id161", false]], "notna() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.notna", false]], "notna() (arkouda.series method)": [[25, "arkouda.Series.notna", false]], "notna() (arkouda.series.series method)": [[49, "arkouda.series.Series.notna", false]], "notnull() (arkouda.series method)": [[25, "arkouda.Series.notnull", false]], "notnull() (arkouda.series.series method)": [[49, "arkouda.series.Series.notnull", false]], "num_matches (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.num_matches", false]], "numargs() (arkouda.scipy.stats.chi2 method)": [[46, "arkouda.scipy.stats.chi2.numargs", false]], "number (class in arkouda)": [[25, "arkouda.number", false]], "number (class in arkouda.numpy)": [[36, "arkouda.numpy.number", false]], "number_format_strings (class in arkouda)": [[25, "arkouda.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (class in arkouda.dtypes)": [[22, "arkouda.dtypes.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (class in arkouda.numpy)": [[36, "arkouda.numpy.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS", false]], "numerator() (arkouda.integer method)": [[25, "arkouda.integer.numerator", false]], "numerator() (arkouda.numpy.integer method)": [[36, "arkouda.numpy.integer.numerator", false]], "numeric_and_bool_scalars (class in arkouda)": [[25, "arkouda.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (class in arkouda.dtypes)": [[22, "arkouda.dtypes.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (class in arkouda.numpy)": [[36, "arkouda.numpy.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.numeric_and_bool_scalars", false]], "numeric_scalars (class in arkouda)": [[25, "arkouda.numeric_scalars", false]], "numeric_scalars (class in arkouda.dtypes)": [[22, "arkouda.dtypes.numeric_scalars", false]], "numeric_scalars (class in arkouda.numpy)": [[36, "arkouda.numpy.numeric_scalars", false]], "numeric_scalars (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.numeric_scalars", false]], "numericdtypes (class in arkouda)": [[25, "arkouda.NumericDTypes", false]], "numericdtypes (class in arkouda.dtypes)": [[22, "arkouda.dtypes.NumericDTypes", false]], "numericdtypes (class in arkouda.numpy)": [[36, "arkouda.numpy.NumericDTypes", false]], "numericdtypes (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.NumericDTypes", false]], "numpy_scalars (class in arkouda)": [[25, "arkouda.numpy_scalars", false]], "numpy_scalars (class in arkouda.dtypes)": [[22, "arkouda.dtypes.numpy_scalars", false]], "numpy_scalars (class in arkouda.numpy)": [[36, "arkouda.numpy.numpy_scalars", false]], "numpy_scalars (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.numpy_scalars", false]], "nunique() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.nunique", false]], "nunique() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.nunique", false]], "nunique() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.nunique", false]], "nunique() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.nunique", false]], "nunique() (arkouda.groupby method)": [[25, "arkouda.GroupBy.nunique", false], [25, "id283", false], [25, "id330", false], [25, "id377", false], [25, "id424", false], [25, "id471", false], [92, "arkouda.GroupBy.nunique", false]], "nunique() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.nunique", false]], "nunique() (arkouda.segarray method)": [[25, "arkouda.SegArray.nunique", false]], "nunique() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.nunique", false]], "nzero (in module arkouda)": [[25, "arkouda.NZERO", false]], "nzero (in module arkouda.numpy)": [[36, "arkouda.numpy.NZERO", false]], "object_ (class in arkouda)": [[25, "arkouda.object_", false]], "object_ (class in arkouda.numpy)": [[36, "arkouda.numpy.object_", false]], "objectdtype (class in arkouda)": [[25, "arkouda.ObjectDType", false]], "objectdtype (class in arkouda.numpy)": [[36, "arkouda.numpy.ObjectDType", false]], "objtype (arkouda.array_view.arrayview attribute)": [[17, "arkouda.array_view.ArrayView.objType", false]], "objtype (arkouda.arrayview attribute)": [[25, "arkouda.ArrayView.objType", false]], "objtype (arkouda.categorical attribute)": [[25, "arkouda.Categorical.objType", false], [25, "id102", false], [25, "id44", false]], "objtype (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.objType", false]], "objtype (arkouda.index attribute)": [[25, "arkouda.Index.objType", false]], "objtype (arkouda.index.index attribute)": [[26, "arkouda.index.Index.objType", false]], "objtype (arkouda.index.multiindex attribute)": [[26, "arkouda.index.MultiIndex.objType", false]], "objtype (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.objType", false]], "objtype (arkouda.multiindex attribute)": [[25, "arkouda.MultiIndex.objType", false]], "objtype (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.objType", false], [25, "id1037", false], [25, "id1107", false], [25, "id1177", false], [25, "id1247", false], [25, "id967", false]], "objtype (arkouda.pdarrayclass.pdarray attribute)": [[37, "arkouda.pdarrayclass.pdarray.objType", false]], "objtype (arkouda.segarray attribute)": [[25, "arkouda.SegArray.objType", false]], "objtype (arkouda.segarray.segarray attribute)": [[48, "arkouda.segarray.SegArray.objType", false]], "objtype (arkouda.strings attribute)": [[25, "arkouda.Strings.objType", false], [25, "id548", false], [25, "id623", false], [25, "id698", false], [25, "id773", false]], "objtype (arkouda.strings.strings attribute)": [[53, "arkouda.strings.Strings.objType", false]], "objtype() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.objType", false], [25, "id162", false]], "objtype() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.objType", false]], "objtype() (arkouda.groupby method)": [[25, "arkouda.GroupBy.objType", false], [25, "id284", false], [25, "id331", false], [25, "id378", false], [25, "id425", false], [25, "id472", false]], "objtype() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.objType", false]], "objtype() (arkouda.series method)": [[25, "arkouda.Series.objType", false]], "objtype() (arkouda.series.series method)": [[49, "arkouda.series.Series.objType", false]], "ones() (in module arkouda)": [[25, "arkouda.ones", false], [25, "id916", false], [25, "id917", false], [25, "id918", false], [90, "arkouda.ones", false]], "ones() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.ones", false]], "ones() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.ones", false]], "ones_like() (in module arkouda)": [[25, "arkouda.ones_like", false], [90, "arkouda.ones_like", false]], "ones_like() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.ones_like", false]], "ones_like() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.ones_like", false]], "open() (arkouda.datasource method)": [[25, "arkouda.DataSource.open", false]], "open() (arkouda.numpy.datasource method)": [[36, "arkouda.numpy.DataSource.open", false]], "opeq() (arkouda.bitvector method)": [[25, "arkouda.BitVector.opeq", false]], "opeq() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.opeq", false]], "opeq() (arkouda.client_dtypes.fields method)": [[20, "arkouda.client_dtypes.Fields.opeq", false]], "opeq() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.opeq", false]], "opeq() (arkouda.fields method)": [[25, "arkouda.Fields.opeq", false]], "opeq() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.opeq", false]], "opeq() (arkouda.pdarray method)": [[25, "arkouda.pdarray.opeq", false], [25, "id1038", false], [25, "id1108", false], [25, "id1178", false], [25, "id1248", false], [25, "id968", false]], "opeq() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.opeq", false]], "opeqops (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.OpEqOps", false], [25, "id1005", false], [25, "id1075", false], [25, "id1145", false], [25, "id1215", false], [25, "id935", false]], "opeqops (arkouda.pdarrayclass.pdarray attribute)": [[37, "arkouda.pdarrayclass.pdarray.OpEqOps", false]], "optional() (arkouda.dtypes.annotations method)": [[22, "arkouda.dtypes.annotations.optional", false]], "optional() (arkouda.numpy.dtypes.annotations method)": [[35, "arkouda.numpy.dtypes.annotations.optional", false]], "or() (arkouda.groupby method)": [[25, "arkouda.GroupBy.OR", false], [25, "id261", false], [25, "id308", false], [25, "id355", false], [25, "id402", false], [25, "id449", false], [92, "arkouda.GroupBy.OR", false]], "or() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.OR", false]], "or() (arkouda.segarray method)": [[25, "arkouda.SegArray.OR", false]], "or() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.OR", false]], "order (arkouda.array_view.arrayview attribute)": [[17, "arkouda.array_view.ArrayView.order", false]], "order (arkouda.arrayview attribute)": [[25, "arkouda.ArrayView.order", false], [88, "arkouda.ArrayView.order", false]], "pad (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.pad", false]], "pad (arkouda.fields attribute)": [[25, "arkouda.Fields.pad", false]], "pad() (in module arkouda.array_api.utility_functions)": [[16, "arkouda.array_api.utility_functions.pad", false]], "padchar (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.padchar", false]], "padchar (arkouda.fields attribute)": [[25, "arkouda.Fields.padchar", false]], "parent_entry_name (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.parent_entry_name", false]], "parity() (arkouda.pdarray method)": [[25, "arkouda.pdarray.parity", false], [25, "id1039", false], [25, "id1109", false], [25, "id1179", false], [25, "id1249", false], [25, "id969", false]], "parity() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.parity", false]], "parity() (in module arkouda)": [[25, "arkouda.parity", false]], "parity() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.parity", false]], "parse_hdf_categoricals() (arkouda.categorical static method)": [[25, "arkouda.Categorical.parse_hdf_categoricals", false], [25, "id103", false], [25, "id45", false]], "parse_hdf_categoricals() (arkouda.categorical.categorical static method)": [[18, "arkouda.categorical.Categorical.parse_hdf_categoricals", false]], "pdarray (class in arkouda)": [[25, "arkouda.pdarray", false], [25, "id1067", false], [25, "id1137", false], [25, "id1207", false], [25, "id927", false], [25, "id997", false], [95, "arkouda.pdarray", false]], "pdarray (class in arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.pdarray", false]], "pdconcat() (arkouda.series method)": [[25, "arkouda.Series.pdconcat", false]], "pdconcat() (arkouda.series.series method)": [[49, "arkouda.series.Series.pdconcat", false]], "pdconcat() (in module arkouda.series)": [[98, "arkouda.Series.pdconcat", false]], "peel() (arkouda.strings method)": [[25, "arkouda.Strings.peel", false], [25, "id549", false], [25, "id624", false], [25, "id699", false], [25, "id774", false], [101, "arkouda.Strings.peel", false]], "peel() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.peel", false]], "permutation (arkouda.categorical attribute)": [[25, "arkouda.Categorical.permutation", false], [25, "id104", false], [25, "id15", false], [25, "id46", false], [25, "id73", false], [25, "id8", false], [89, "arkouda.Categorical.permutation", false]], "permutation (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.permutation", false], [18, "id2", false]], "permutation (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.permutation", false], [25, "id254", false], [25, "id301", false], [25, "id348", false], [25, "id395", false], [25, "id442", false], [92, "arkouda.GroupBy.permutation", false]], "permutation (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.permutation", false]], "permutation() (arkouda.generator method)": [[25, "arkouda.Generator.permutation", false]], "permutation() (arkouda.random.generator method)": [[42, "arkouda.random.Generator.permutation", false]], "permutation() (in module arkouda.random.generator)": [[96, "arkouda.random.Generator.permutation", false]], "permute_dims() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.permute_dims", false]], "pi (in module arkouda)": [[25, "arkouda.pi", false]], "pi (in module arkouda.numpy)": [[36, "arkouda.numpy.pi", false]], "pinf (in module arkouda)": [[25, "arkouda.PINF", false]], "pinf (in module arkouda.numpy)": [[36, "arkouda.numpy.PINF", false]], "plot_dist() (in module arkouda)": [[25, "arkouda.plot_dist", false]], "plot_dist() (in module arkouda.plotting)": [[41, "arkouda.plotting.plot_dist", false]], "poisson() (arkouda.generator method)": [[25, "arkouda.Generator.poisson", false]], "poisson() (arkouda.random.generator method)": [[42, "arkouda.random.Generator.poisson", false]], "poisson() (in module arkouda.random.generator)": [[96, "arkouda.random.Generator.poisson", false]], "pop() (arkouda.dtypes.number_format_strings method)": [[22, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.dtypes.seriesdtypes method)": [[22, "arkouda.dtypes.SeriesDTypes.pop", false]], "pop() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.numpy.dtypes.number_format_strings method)": [[35, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.numpy.dtypes.seriesdtypes method)": [[35, "arkouda.numpy.dtypes.SeriesDTypes.pop", false]], "pop() (arkouda.numpy.number_format_strings method)": [[36, "arkouda.numpy.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.numpy.sctypedict method)": [[36, "arkouda.numpy.sctypeDict.pop", false]], "pop() (arkouda.numpy.sctypes method)": [[36, "arkouda.numpy.sctypes.pop", false]], "pop() (arkouda.numpy.seriesdtypes method)": [[36, "arkouda.numpy.SeriesDTypes.pop", false]], "pop() (arkouda.sctypedict method)": [[25, "arkouda.sctypeDict.pop", false]], "pop() (arkouda.sctypes method)": [[25, "arkouda.sctypes.pop", false]], "pop() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.pop", false]], "popcount() (arkouda.pdarray method)": [[25, "arkouda.pdarray.popcount", false], [25, "id1040", false], [25, "id1110", false], [25, "id1180", false], [25, "id1250", false], [25, "id970", false]], "popcount() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.popcount", false]], "popcount() (in module arkouda)": [[25, "arkouda.popcount", false]], "popcount() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.popcount", false]], "popitem() (arkouda.dtypes.number_format_strings method)": [[22, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.dtypes.seriesdtypes method)": [[22, "arkouda.dtypes.SeriesDTypes.popitem", false]], "popitem() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.numpy.dtypes.number_format_strings method)": [[35, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.numpy.dtypes.seriesdtypes method)": [[35, "arkouda.numpy.dtypes.SeriesDTypes.popitem", false]], "popitem() (arkouda.numpy.number_format_strings method)": [[36, "arkouda.numpy.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.numpy.sctypedict method)": [[36, "arkouda.numpy.sctypeDict.popitem", false]], "popitem() (arkouda.numpy.sctypes method)": [[36, "arkouda.numpy.sctypes.popitem", false]], "popitem() (arkouda.numpy.seriesdtypes method)": [[36, "arkouda.numpy.SeriesDTypes.popitem", false]], "popitem() (arkouda.sctypedict method)": [[25, "arkouda.sctypeDict.popitem", false]], "popitem() (arkouda.sctypes method)": [[25, "arkouda.sctypes.popitem", false]], "popitem() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.popitem", false]], "populated (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.populated", false]], "positive() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.positive", false]], "pow() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.pow", false]], "power() (in module arkouda)": [[25, "arkouda.power", false]], "power() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.power", false]], "power_divergence() (in module arkouda)": [[25, "arkouda.power_divergence", false]], "power_divergence() (in module arkouda.scipy)": [[44, "arkouda.scipy.power_divergence", false]], "power_divergenceresult (class in arkouda)": [[25, "arkouda.Power_divergenceResult", false]], "power_divergenceresult (class in arkouda.scipy)": [[44, "arkouda.scipy.Power_divergenceResult", false]], "precision (arkouda.finfo attribute)": [[25, "arkouda.finfo.precision", false]], "precision (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.precision", false]], "prepend_single() (arkouda.segarray method)": [[25, "arkouda.SegArray.prepend_single", false]], "prepend_single() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.prepend_single", false]], "prepend_single() (in module arkouda.segarray)": [[97, "arkouda.SegArray.prepend_single", false]], "pretty_print_info() (arkouda.categorical method)": [[25, "arkouda.Categorical.pretty_print_info", false], [25, "id105", false], [25, "id47", false]], "pretty_print_info() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.pretty_print_info", false]], "pretty_print_info() (arkouda.pdarray method)": [[25, "arkouda.pdarray.pretty_print_info", false], [25, "id1041", false], [25, "id1111", false], [25, "id1181", false], [25, "id1251", false], [25, "id971", false]], "pretty_print_info() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.pretty_print_info", false]], "pretty_print_info() (arkouda.strings method)": [[25, "arkouda.Strings.pretty_print_info", false], [25, "id550", false], [25, "id625", false], [25, "id700", false], [25, "id775", false]], "pretty_print_info() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.pretty_print_info", false]], "pretty_print_information() (in module arkouda)": [[25, "arkouda.pretty_print_information", false]], "pretty_print_information() (in module arkouda.infoclass)": [[27, "arkouda.infoclass.pretty_print_information", false]], "print_server_commands() (in module arkouda.client)": [[19, "arkouda.client.print_server_commands", false]], "prod() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.prod", false]], "prod() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.prod", false]], "prod() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.prod", false]], "prod() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.prod", false]], "prod() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.prod", false]], "prod() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.prod", false]], "prod() (arkouda.groupby method)": [[25, "arkouda.GroupBy.prod", false], [25, "id285", false], [25, "id332", false], [25, "id379", false], [25, "id426", false], [25, "id473", false], [92, "arkouda.GroupBy.prod", false]], "prod() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.prod", false]], "prod() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.prod", false]], "prod() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.prod", false]], "prod() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.prod", false]], "prod() (arkouda.pdarray method)": [[25, "arkouda.pdarray.prod", false], [25, "id1042", false], [25, "id1112", false], [25, "id1182", false], [25, "id1252", false], [25, "id972", false], [93, "arkouda.pdarray.prod", false]], "prod() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.prod", false]], "prod() (arkouda.segarray method)": [[25, "arkouda.SegArray.prod", false]], "prod() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.prod", false]], "prod() (arkouda.series method)": [[25, "arkouda.Series.prod", false]], "prod() (arkouda.series.series method)": [[49, "arkouda.series.Series.prod", false]], "prod() (arkouda.str_ method)": [[25, "arkouda.str_.prod", false], [25, "id1329", false]], "prod() (in module arkouda)": [[25, "arkouda.prod", false], [87, "arkouda.prod", false]], "prod() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.prod", false]], "prod() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.prod", false]], "promote_to_common_dtype() (in module arkouda)": [[25, "arkouda.promote_to_common_dtype", false]], "promote_to_common_dtype() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.promote_to_common_dtype", false]], "properties (class in arkouda)": [[25, "arkouda.Properties", false]], "properties (class in arkouda.accessor)": [[2, "arkouda.accessor.Properties", false]], "ptp() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.ptp", false]], "ptp() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.ptp", false]], "ptp() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.ptp", false]], "ptp() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.ptp", false]], "ptp() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.ptp", false]], "ptp() (arkouda.str_ method)": [[25, "arkouda.str_.ptp", false], [25, "id1330", false]], "purge_cached_regex_patterns() (arkouda.strings method)": [[25, "arkouda.Strings.purge_cached_regex_patterns", false], [25, "id551", false], [25, "id626", false], [25, "id701", false], [25, "id776", false]], "purge_cached_regex_patterns() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.purge_cached_regex_patterns", false]], "put() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.put", false]], "put() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.put", false]], "put() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.put", false]], "put() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.put", false]], "put() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.put", false]], "put() (arkouda.str_ method)": [[25, "arkouda.str_.put", false], [25, "id1331", false]], "putmask() (in module arkouda)": [[25, "arkouda.putmask", false]], "putmask() (in module arkouda.numeric)": [[34, "arkouda.numeric.putmask", false]], "pvalue (arkouda.power_divergenceresult attribute)": [[25, "arkouda.Power_divergenceResult.pvalue", false]], "pvalue (arkouda.scipy.power_divergenceresult attribute)": [[44, "arkouda.scipy.Power_divergenceResult.pvalue", false]], "pzero (in module arkouda)": [[25, "arkouda.PZERO", false]], "pzero (in module arkouda.numpy)": [[36, "arkouda.numpy.PZERO", false]], "rad2deg() (in module arkouda)": [[25, "arkouda.rad2deg", false]], "rad2deg() (in module arkouda.numeric)": [[34, "arkouda.numeric.rad2deg", false]], "randint() (in module arkouda)": [[25, "arkouda.randint", false], [25, "id1277", false], [90, "arkouda.randint", false]], "randint() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.randint", false]], "randint() (in module arkouda.random)": [[42, "arkouda.random.randint", false]], "random() (arkouda.generator method)": [[25, "arkouda.Generator.random", false]], "random() (arkouda.random.generator method)": [[42, "arkouda.random.Generator.random", false]], "random() (in module arkouda.random.generator)": [[96, "arkouda.random.Generator.random", false]], "random_sparse_matrix() (in module arkouda)": [[25, "arkouda.random_sparse_matrix", false]], "random_sparse_matrix() (in module arkouda.sparsematrix)": [[52, "arkouda.sparsematrix.random_sparse_matrix", false]], "random_strings_lognormal() (in module arkouda)": [[25, "arkouda.random_strings_lognormal", false]], "random_strings_lognormal() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.random_strings_lognormal", false]], "random_strings_uniform() (in module arkouda)": [[25, "arkouda.random_strings_uniform", false]], "random_strings_uniform() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.random_strings_uniform", false]], "rankwarning (class in arkouda)": [[25, "arkouda.RankWarning", false]], "rankwarning (class in arkouda.numpy)": [[36, "arkouda.numpy.RankWarning", false]], "ravel() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.ravel", false]], "ravel() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.ravel", false]], "ravel() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.ravel", false]], "ravel() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.ravel", false]], "ravel() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.ravel", false]], "ravel() (arkouda.str_ method)": [[25, "arkouda.str_.ravel", false], [25, "id1332", false]], "re (arkouda.match.match attribute)": [[32, "arkouda.match.Match.re", false]], "read() (in module arkouda)": [[25, "arkouda.read", false], [84, "arkouda.read", false]], "read() (in module arkouda.io)": [[28, "arkouda.io.read", false]], "read_csv() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.read_csv", false], [25, "id163", false]], "read_csv() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.read_csv", false]], "read_csv() (in module arkouda)": [[25, "arkouda.read_csv", false]], "read_csv() (in module arkouda.io)": [[28, "arkouda.io.read_csv", false]], "read_hdf() (arkouda.segarray class method)": [[25, "arkouda.SegArray.read_hdf", false]], "read_hdf() (arkouda.segarray.segarray class method)": [[48, "arkouda.segarray.SegArray.read_hdf", false]], "read_hdf() (in module arkouda)": [[25, "arkouda.read_hdf", false]], "read_hdf() (in module arkouda.io)": [[28, "arkouda.io.read_hdf", false]], "read_parquet() (in module arkouda)": [[25, "arkouda.read_parquet", false]], "read_parquet() (in module arkouda.io)": [[28, "arkouda.io.read_parquet", false]], "read_tagged_data() (in module arkouda)": [[25, "arkouda.read_tagged_data", false]], "read_tagged_data() (in module arkouda.io)": [[28, "arkouda.io.read_tagged_data", false]], "read_zarr() (in module arkouda)": [[25, "arkouda.read_zarr", false]], "read_zarr() (in module arkouda.io)": [[28, "arkouda.io.read_zarr", false]], "real() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.real", false]], "real() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.real", false]], "real() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.real", false]], "real() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.real", false]], "real() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.real", false]], "real() (arkouda.str_ method)": [[25, "arkouda.str_.real", false], [25, "id1333", false]], "real() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.real", false]], "receive() (in module arkouda)": [[25, "arkouda.receive", false]], "receive() (in module arkouda.io)": [[28, "arkouda.io.receive", false]], "receive_dataframe() (in module arkouda)": [[25, "arkouda.receive_dataframe", false]], "receive_dataframe() (in module arkouda.io)": [[28, "arkouda.io.receive_dataframe", false]], "reductions() (arkouda.groupby method)": [[25, "arkouda.GroupBy.Reductions", false], [25, "id262", false], [25, "id309", false], [25, "id356", false], [25, "id403", false], [25, "id450", false]], "reductions() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.Reductions", false]], "register() (arkouda.bitvector method)": [[25, "arkouda.BitVector.register", false]], "register() (arkouda.categorical method)": [[25, "arkouda.Categorical.register", false], [25, "id106", false], [25, "id48", false]], "register() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.register", false]], "register() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.register", false]], "register() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.register", false]], "register() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.register", false], [25, "id164", false]], "register() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.register", false]], "register() (arkouda.datetime method)": [[25, "arkouda.Datetime.register", false], [25, "id200", false], [25, "id233", false]], "register() (arkouda.groupby method)": [[25, "arkouda.GroupBy.register", false], [25, "id286", false], [25, "id333", false], [25, "id380", false], [25, "id427", false], [25, "id474", false], [92, "arkouda.GroupBy.register", false]], "register() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.register", false]], "register() (arkouda.index method)": [[25, "arkouda.Index.register", false]], "register() (arkouda.index.index method)": [[26, "arkouda.index.Index.register", false]], "register() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.register", false]], "register() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.register", false]], "register() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.register", false]], "register() (arkouda.pdarray method)": [[25, "arkouda.pdarray.register", false], [25, "id1043", false], [25, "id1113", false], [25, "id1183", false], [25, "id1253", false], [25, "id973", false]], "register() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.register", false]], "register() (arkouda.segarray method)": [[25, "arkouda.SegArray.register", false]], "register() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.register", false]], "register() (arkouda.series method)": [[25, "arkouda.Series.register", false]], "register() (arkouda.series.series method)": [[49, "arkouda.series.Series.register", false]], "register() (arkouda.strings method)": [[25, "arkouda.Strings.register", false], [25, "id552", false], [25, "id627", false], [25, "id702", false], [25, "id777", false]], "register() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.register", false]], "register() (arkouda.timeclass.datetime method)": [[55, "arkouda.timeclass.Datetime.register", false]], "register() (arkouda.timeclass.timedelta method)": [[55, "arkouda.timeclass.Timedelta.register", false]], "register() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.register", false], [25, "id806", false]], "register() (in module arkouda.util)": [[56, "arkouda.util.register", false]], "register_all() (in module arkouda)": [[25, "arkouda.register_all", false]], "register_all() (in module arkouda.util)": [[56, "arkouda.util.register_all", false]], "registerablepieces (arkouda.categorical attribute)": [[25, "arkouda.Categorical.RegisterablePieces", false], [25, "id22", false], [25, "id80", false]], "registerablepieces (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.RegisterablePieces", false]], "registered_name (arkouda.bitvector attribute)": [[25, "arkouda.BitVector.registered_name", false]], "registered_name (arkouda.categorical attribute)": [[25, "arkouda.Categorical.registered_name", false], [25, "id107", false], [25, "id49", false]], "registered_name (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.registered_name", false]], "registered_name (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.registered_name", false]], "registered_name (arkouda.index attribute)": [[25, "arkouda.Index.registered_name", false]], "registered_name (arkouda.index.index attribute)": [[26, "arkouda.index.Index.registered_name", false]], "registered_name (arkouda.index.multiindex attribute)": [[26, "arkouda.index.MultiIndex.registered_name", false]], "registered_name (arkouda.multiindex attribute)": [[25, "arkouda.MultiIndex.registered_name", false]], "registered_name (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.registered_name", false], [25, "id1044", false], [25, "id1114", false], [25, "id1184", false], [25, "id1254", false], [25, "id974", false]], "registered_name (arkouda.pdarrayclass.pdarray attribute)": [[37, "arkouda.pdarrayclass.pdarray.registered_name", false]], "registered_name (arkouda.segarray attribute)": [[25, "arkouda.SegArray.registered_name", false]], "registered_name (arkouda.segarray.segarray attribute)": [[48, "arkouda.segarray.SegArray.registered_name", false]], "registered_name (arkouda.strings attribute)": [[25, "arkouda.Strings.registered_name", false], [25, "id553", false], [25, "id628", false], [25, "id703", false], [25, "id778", false]], "registered_name (arkouda.strings.strings attribute)": [[53, "arkouda.strings.Strings.registered_name", false]], "registeredsymbols (in module arkouda)": [[25, "arkouda.RegisteredSymbols", false]], "registeredsymbols (in module arkouda.infoclass)": [[27, "arkouda.infoclass.RegisteredSymbols", false]], "registrationerror": [[25, "arkouda.RegistrationError", false], [25, "id490", false], [25, "id491", false], [25, "id492", false], [25, "id493", false], [37, "arkouda.pdarrayclass.RegistrationError", false]], "remainder() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.remainder", false]], "remove_repeats() (arkouda.segarray method)": [[25, "arkouda.SegArray.remove_repeats", false]], "remove_repeats() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.remove_repeats", false]], "remove_repeats() (in module arkouda.segarray)": [[97, "arkouda.SegArray.remove_repeats", false]], "rename() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.rename", false], [25, "id165", false]], "rename() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.rename", false]], "rename() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.rename", false]], "repeat() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.repeat", false]], "repeat() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.repeat", false]], "repeat() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.repeat", false]], "repeat() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.repeat", false]], "repeat() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.repeat", false]], "repeat() (arkouda.str_ method)": [[25, "arkouda.str_.repeat", false], [25, "id1334", false]], "repeat() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.repeat", false]], "report_mem() (in module arkouda.util)": [[56, "arkouda.util.report_mem", false]], "requiredpieces (arkouda.categorical attribute)": [[25, "arkouda.Categorical.RequiredPieces", false], [25, "id23", false], [25, "id81", false]], "requiredpieces (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.RequiredPieces", false]], "reset_categories() (arkouda.categorical method)": [[25, "arkouda.Categorical.reset_categories", false], [25, "id108", false], [25, "id50", false]], "reset_categories() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.reset_categories", false]], "reset_index() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.reset_index", false], [25, "id166", false]], "reset_index() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.reset_index", false]], "reset_index() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.reset_index", false]], "reshape() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.reshape", false]], "reshape() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.reshape", false]], "reshape() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.reshape", false]], "reshape() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.reshape", false]], "reshape() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.reshape", false]], "reshape() (arkouda.pdarray method)": [[25, "arkouda.pdarray.reshape", false], [25, "id1045", false], [25, "id1115", false], [25, "id1185", false], [25, "id1255", false], [25, "id975", false]], "reshape() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.reshape", false]], "reshape() (arkouda.str_ method)": [[25, "arkouda.str_.reshape", false], [25, "id1335", false]], "reshape() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.reshape", false]], "resize() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.resize", false]], "resize() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.resize", false]], "resize() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.resize", false]], "resize() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.resize", false]], "resize() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.resize", false]], "resize() (arkouda.str_ method)": [[25, "arkouda.str_.resize", false], [25, "id1336", false]], "resolution (arkouda.finfo attribute)": [[25, "arkouda.finfo.resolution", false]], "resolution (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.resolution", false]], "resolve_scalar_dtype() (in module arkouda)": [[25, "arkouda.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.dtypes)": [[22, "arkouda.dtypes.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.numpy)": [[36, "arkouda.numpy.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.resolve_scalar_dtype", false]], "restore() (in module arkouda)": [[25, "arkouda.restore", false]], "restore() (in module arkouda.io)": [[28, "arkouda.io.restore", false]], "result_type() (in module arkouda.array_api.data_type_functions)": [[6, "arkouda.array_api.data_type_functions.result_type", false]], "retrieve() (arkouda.history.historyretriever method)": [[24, "arkouda.history.HistoryRetriever.retrieve", false]], "retrieve() (arkouda.history.notebookhistoryretriever method)": [[24, "arkouda.history.NotebookHistoryRetriever.retrieve", false]], "retrieve() (arkouda.history.shellhistoryretriever method)": [[24, "arkouda.history.ShellHistoryRetriever.retrieve", false]], "return_validity (arkouda.errormode attribute)": [[25, "arkouda.ErrorMode.return_validity", false]], "return_validity (arkouda.numeric.errormode attribute)": [[34, "arkouda.numeric.ErrorMode.return_validity", false]], "reverse (arkouda.bitvector attribute)": [[25, "arkouda.BitVector.reverse", false]], "reverse (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.reverse", false]], "right_align() (in module arkouda)": [[25, "arkouda.right_align", false]], "right_align() (in module arkouda.alignment)": [[3, "arkouda.alignment.right_align", false]], "roll() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.roll", false]], "rotl() (arkouda.pdarray method)": [[25, "arkouda.pdarray.rotl", false], [25, "id1046", false], [25, "id1116", false], [25, "id1186", false], [25, "id1256", false], [25, "id976", false]], "rotl() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.rotl", false]], "rotl() (in module arkouda)": [[25, "arkouda.rotl", false]], "rotl() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.rotl", false]], "rotr() (arkouda.pdarray method)": [[25, "arkouda.pdarray.rotr", false], [25, "id1047", false], [25, "id1117", false], [25, "id1187", false], [25, "id1257", false], [25, "id977", false]], "rotr() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.rotr", false]], "rotr() (in module arkouda)": [[25, "arkouda.rotr", false]], "rotr() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.rotr", false]], "round() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.round", false]], "round() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.round", false]], "round() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.round", false]], "round() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.round", false]], "round() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.round", false]], "round() (arkouda.str_ method)": [[25, "arkouda.str_.round", false], [25, "id1337", false]], "round() (in module arkouda)": [[25, "arkouda.round", false]], "round() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.round", false]], "round() (in module arkouda.numeric)": [[34, "arkouda.numeric.round", false]], "row (class in arkouda)": [[25, "arkouda.Row", false]], "row (class in arkouda.row)": [[43, "arkouda.row.Row", false]], "rpeel() (arkouda.strings method)": [[25, "arkouda.Strings.rpeel", false], [25, "id554", false], [25, "id629", false], [25, "id704", false], [25, "id779", false], [101, "arkouda.Strings.rpeel", false]], "rpeel() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.rpeel", false]], "ruok() (in module arkouda.client)": [[19, "arkouda.client.ruok", false]], "sample() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.sample", false], [25, "id167", false]], "sample() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.sample", false]], "sample() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.sample", false]], "sample() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.sample", false]], "sample() (arkouda.groupby method)": [[25, "arkouda.GroupBy.sample", false], [25, "id287", false], [25, "id334", false], [25, "id381", false], [25, "id428", false], [25, "id475", false], [92, "arkouda.GroupBy.sample", false]], "sample() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.sample", false]], "save() (arkouda.categorical method)": [[25, "arkouda.Categorical.save", false], [25, "id109", false], [25, "id51", false]], "save() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.save", false]], "save() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.save", false], [25, "id168", false]], "save() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.save", false]], "save() (arkouda.index method)": [[25, "arkouda.Index.save", false]], "save() (arkouda.index.index method)": [[26, "arkouda.index.Index.save", false]], "save() (arkouda.pdarray method)": [[25, "arkouda.pdarray.save", false], [25, "id1048", false], [25, "id1118", false], [25, "id1188", false], [25, "id1258", false], [25, "id978", false]], "save() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.save", false]], "save() (arkouda.segarray method)": [[25, "arkouda.SegArray.save", false]], "save() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.save", false]], "save() (arkouda.strings method)": [[25, "arkouda.Strings.save", false], [25, "id555", false], [25, "id630", false], [25, "id705", false], [25, "id780", false]], "save() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.save", false]], "save_all() (in module arkouda)": [[25, "arkouda.save_all", false]], "save_all() (in module arkouda.io)": [[28, "arkouda.io.save_all", false]], "scalar_array() (in module arkouda)": [[25, "arkouda.scalar_array", false]], "scalar_array() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.scalar_array", false]], "scalardtypes (class in arkouda)": [[25, "arkouda.ScalarDTypes", false]], "scalardtypes (class in arkouda.dtypes)": [[22, "arkouda.dtypes.ScalarDTypes", false]], "scalardtypes (class in arkouda.numpy)": [[36, "arkouda.numpy.ScalarDTypes", false]], "scalardtypes (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.ScalarDTypes", false]], "scalartype (class in arkouda)": [[25, "arkouda.ScalarType", false]], "scalartype (class in arkouda.numpy)": [[36, "arkouda.numpy.ScalarType", false]], "sctypedict (class in arkouda)": [[25, "arkouda.sctypeDict", false]], "sctypedict (class in arkouda.numpy)": [[36, "arkouda.numpy.sctypeDict", false]], "sctypes (class in arkouda)": [[25, "arkouda.sctypes", false]], "sctypes (class in arkouda.numpy)": [[36, "arkouda.numpy.sctypes", false]], "search() (arkouda.strings method)": [[25, "arkouda.Strings.search", false], [25, "id556", false], [25, "id631", false], [25, "id706", false], [25, "id781", false], [101, "arkouda.Strings.search", false]], "search() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.search", false]], "search_bool (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.search_bool", false]], "search_ind (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.search_ind", false]], "search_intervals() (in module arkouda)": [[25, "arkouda.search_intervals", false]], "search_intervals() (in module arkouda.alignment)": [[3, "arkouda.alignment.search_intervals", false]], "searchsorted() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.searchsorted", false]], "searchsorted() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.searchsorted", false]], "searchsorted() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.searchsorted", false]], "searchsorted() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.searchsorted", false]], "searchsorted() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.searchsorted", false]], "searchsorted() (arkouda.str_ method)": [[25, "arkouda.str_.searchsorted", false], [25, "id1338", false]], "searchsorted() (in module arkouda.array_api.searching_functions)": [[12, "arkouda.array_api.searching_functions.searchsorted", false]], "second (arkouda.datetime property)": [[25, "arkouda.Datetime.second", false], [25, "id201", false], [25, "id234", false]], "second (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.second", false]], "seconds (arkouda.timeclass.timedelta property)": [[55, "arkouda.timeclass.Timedelta.seconds", false]], "seconds (arkouda.timedelta property)": [[25, "arkouda.Timedelta.seconds", false], [25, "id807", false]], "seg_suffix (in module arkouda)": [[25, "arkouda.SEG_SUFFIX", false]], "seg_suffix (in module arkouda.segarray)": [[48, "arkouda.segarray.SEG_SUFFIX", false]], "segarray (class in arkouda)": [[25, "arkouda.SegArray", false]], "segarray (class in arkouda.segarray)": [[48, "arkouda.segarray.SegArray", false]], "segarray() (in module arkouda)": [[25, "arkouda.segarray", false]], "segarray() (in module arkouda.segarray)": [[48, "arkouda.segarray.segarray", false]], "segments (arkouda.categorical attribute)": [[25, "arkouda.Categorical.segments", false], [25, "id110", false], [25, "id16", false], [25, "id52", false], [25, "id74", false], [25, "id9", false], [89, "arkouda.Categorical.segments", false]], "segments (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.segments", false], [18, "id3", false]], "segments (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.segments", false], [25, "id257", false], [25, "id304", false], [25, "id351", false], [25, "id398", false], [25, "id445", false], [92, "arkouda.GroupBy.segments", false]], "segments (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.segments", false]], "segments (arkouda.segarray attribute)": [[25, "arkouda.SegArray.segments", false]], "segments (arkouda.segarray.segarray attribute)": [[48, "arkouda.segarray.SegArray.segments", false]], "separator (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.separator", false]], "separator (arkouda.fields attribute)": [[25, "arkouda.Fields.separator", false]], "series (arkouda.accessor.datetimeaccessor attribute)": [[2, "arkouda.accessor.DatetimeAccessor.series", false]], "series (arkouda.accessor.stringaccessor attribute)": [[2, "arkouda.accessor.StringAccessor.series", false]], "series (arkouda.datetimeaccessor attribute)": [[25, "arkouda.DatetimeAccessor.series", false]], "series (arkouda.stringaccessor attribute)": [[25, "arkouda.StringAccessor.series", false]], "series (class in arkouda)": [[25, "arkouda.Series", false], [98, "arkouda.Series", false]], "series (class in arkouda.series)": [[49, "arkouda.series.Series", false]], "seriesdtypes (class in arkouda)": [[25, "arkouda.SeriesDTypes", false]], "seriesdtypes (class in arkouda.dtypes)": [[22, "arkouda.dtypes.SeriesDTypes", false]], "seriesdtypes (class in arkouda.numpy)": [[36, "arkouda.numpy.SeriesDTypes", false]], "seriesdtypes (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.SeriesDTypes", false]], "set_categories() (arkouda.categorical method)": [[25, "arkouda.Categorical.set_categories", false], [25, "id111", false], [25, "id53", false]], "set_categories() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.set_categories", false]], "set_dtype() (arkouda.index method)": [[25, "arkouda.Index.set_dtype", false]], "set_dtype() (arkouda.index.index method)": [[26, "arkouda.index.Index.set_dtype", false]], "set_dtype() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.set_dtype", false]], "set_dtype() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.set_dtype", false]], "set_dtype() (in module arkouda.index)": [[85, "arkouda.Index.set_dtype", false]], "set_dtype() (in module arkouda.multiindex)": [[85, "arkouda.MultiIndex.set_dtype", false]], "set_jth() (arkouda.segarray method)": [[25, "arkouda.SegArray.set_jth", false]], "set_jth() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.set_jth", false]], "set_jth() (in module arkouda.segarray)": [[97, "arkouda.SegArray.set_jth", false]], "setdefault() (arkouda.dtypes.number_format_strings method)": [[22, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.dtypes.seriesdtypes method)": [[22, "arkouda.dtypes.SeriesDTypes.setdefault", false]], "setdefault() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.numpy.dtypes.number_format_strings method)": [[35, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.numpy.dtypes.seriesdtypes method)": [[35, "arkouda.numpy.dtypes.SeriesDTypes.setdefault", false]], "setdefault() (arkouda.numpy.number_format_strings method)": [[36, "arkouda.numpy.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.numpy.sctypedict method)": [[36, "arkouda.numpy.sctypeDict.setdefault", false]], "setdefault() (arkouda.numpy.sctypes method)": [[36, "arkouda.numpy.sctypes.setdefault", false]], "setdefault() (arkouda.numpy.seriesdtypes method)": [[36, "arkouda.numpy.SeriesDTypes.setdefault", false]], "setdefault() (arkouda.sctypedict method)": [[25, "arkouda.sctypeDict.setdefault", false]], "setdefault() (arkouda.sctypes method)": [[25, "arkouda.sctypes.setdefault", false]], "setdefault() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.setdefault", false]], "setdiff() (arkouda.segarray method)": [[25, "arkouda.SegArray.setdiff", false]], "setdiff() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.setdiff", false]], "setdiff() (in module arkouda.segarray)": [[97, "arkouda.SegArray.setdiff", false]], "setdiff1d() (in module arkouda)": [[25, "arkouda.setdiff1d", false], [99, "arkouda.setdiff1d", false]], "setdiff1d() (in module arkouda.pdarraysetops)": [[40, "arkouda.pdarraysetops.setdiff1d", false]], "setfield() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.setfield", false]], "setfield() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.setfield", false]], "setfield() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.setfield", false]], "setfield() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.setfield", false]], "setfield() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.setfield", false]], "setfield() (arkouda.str_ method)": [[25, "arkouda.str_.setfield", false], [25, "id1339", false]], "setflags() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.setflags", false]], "setflags() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.setflags", false]], "setflags() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.setflags", false]], "setflags() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.setflags", false]], "setflags() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.setflags", false]], "setflags() (arkouda.str_ method)": [[25, "arkouda.str_.setflags", false], [25, "id1340", false]], "setxor() (arkouda.segarray method)": [[25, "arkouda.SegArray.setxor", false]], "setxor() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.setxor", false]], "setxor() (in module arkouda.segarray)": [[97, "arkouda.SegArray.setxor", false]], "setxor1d() (in module arkouda)": [[25, "arkouda.setxor1d", false], [99, "arkouda.setxor1d", false]], "setxor1d() (in module arkouda.pdarraysetops)": [[40, "arkouda.pdarraysetops.setxor1d", false]], "shape (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.shape", false]], "shape (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.shape", false]], "shape (arkouda.array_view.arrayview attribute)": [[17, "arkouda.array_view.ArrayView.shape", false], [17, "id4", false]], "shape (arkouda.arrayview attribute)": [[25, "arkouda.ArrayView.shape", false], [25, "id4", false], [88, "arkouda.ArrayView.shape", false]], "shape (arkouda.categorical attribute)": [[25, "arkouda.Categorical.shape", false], [25, "id10", false], [25, "id112", false], [25, "id20", false], [25, "id54", false], [25, "id78", false], [89, "arkouda.Categorical.shape", false]], "shape (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.shape", false], [18, "id4", false]], "shape (arkouda.dataframe property)": [[25, "arkouda.DataFrame.shape", false], [25, "id169", false]], "shape (arkouda.dataframe.dataframe property)": [[21, "arkouda.dataframe.DataFrame.shape", false]], "shape (arkouda.index property)": [[25, "arkouda.Index.shape", false]], "shape (arkouda.index.index property)": [[26, "arkouda.index.Index.shape", false]], "shape (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.shape", false], [25, "id1002", false], [25, "id1049", false], [25, "id1072", false], [25, "id1119", false], [25, "id1142", false], [25, "id1189", false], [25, "id1212", false], [25, "id1259", false], [25, "id923", false], [25, "id932", false], [25, "id979", false], [95, "arkouda.pdarray.shape", false]], "shape (arkouda.pdarrayclass.pdarray attribute)": [[37, "arkouda.pdarrayclass.pdarray.shape", false], [37, "id4", false]], "shape (arkouda.series property)": [[25, "arkouda.Series.shape", false]], "shape (arkouda.series.series property)": [[49, "arkouda.series.Series.shape", false]], "shape (arkouda.sparray attribute)": [[25, "arkouda.sparray.shape", false], [25, "id1287", false]], "shape (arkouda.sparrayclass.sparray attribute)": [[51, "arkouda.sparrayclass.sparray.shape", false], [51, "id5", false]], "shape (arkouda.strings attribute)": [[25, "arkouda.Strings.shape", false], [25, "id504", false], [25, "id579", false], [25, "id654", false], [25, "id729", false]], "shape (arkouda.strings.strings attribute)": [[53, "arkouda.strings.Strings.shape", false]], "shape() (arkouda.bigint method)": [[25, "arkouda.bigint.shape", false], [25, "id850", false]], "shape() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.shape", false]], "shape() (arkouda.dtypes.bigint method)": [[22, "arkouda.dtypes.bigint.shape", false]], "shape() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.shape", false]], "shape() (arkouda.numpy.bigint method)": [[36, "arkouda.numpy.bigint.shape", false]], "shape() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.shape", false]], "shape() (arkouda.numpy.dtypes.bigint method)": [[35, "arkouda.numpy.dtypes.bigint.shape", false]], "shape() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.shape", false]], "shape() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.shape", false]], "shape() (arkouda.str_ method)": [[25, "arkouda.str_.shape", false], [25, "id1341", false]], "shapes() (arkouda.scipy.stats.chi2 method)": [[46, "arkouda.scipy.stats.chi2.shapes", false]], "shellhistoryretriever (class in arkouda.history)": [[24, "arkouda.history.ShellHistoryRetriever", false]], "short (class in arkouda)": [[25, "arkouda.short", false]], "short (class in arkouda.numpy)": [[36, "arkouda.numpy.short", false]], "shortdtype (class in arkouda)": [[25, "arkouda.ShortDType", false]], "shortdtype (class in arkouda.numpy)": [[36, "arkouda.numpy.ShortDType", false]], "show_int (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.show_int", false]], "show_int (arkouda.fields attribute)": [[25, "arkouda.Fields.show_int", false]], "shuffle() (arkouda.generator method)": [[25, "arkouda.Generator.shuffle", false]], "shuffle() (arkouda.random.generator method)": [[42, "arkouda.random.Generator.shuffle", false]], "shuffle() (in module arkouda.random.generator)": [[96, "arkouda.random.Generator.shuffle", false]], "shutdown() (in module arkouda.client)": [[19, "arkouda.client.shutdown", false]], "sign() (in module arkouda)": [[25, "arkouda.sign", false]], "sign() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.sign", false]], "sign() (in module arkouda.numeric)": [[34, "arkouda.numeric.sign", false]], "signedinteger (class in arkouda)": [[25, "arkouda.signedinteger", false]], "signedinteger (class in arkouda.numpy)": [[36, "arkouda.numpy.signedinteger", false]], "sin() (in module arkouda)": [[25, "arkouda.sin", false], [87, "arkouda.sin", false]], "sin() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.sin", false]], "sin() (in module arkouda.numeric)": [[34, "arkouda.numeric.sin", false]], "single (class in arkouda)": [[25, "arkouda.single", false]], "single (class in arkouda.numpy)": [[36, "arkouda.numpy.single", false]], "sinh() (in module arkouda)": [[25, "arkouda.sinh", false]], "sinh() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.sinh", false]], "sinh() (in module arkouda.numeric)": [[34, "arkouda.numeric.sinh", false]], "size (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.size", false]], "size (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.size", false]], "size (arkouda.array_view.arrayview attribute)": [[17, "arkouda.array_view.ArrayView.size", false], [17, "id5", false]], "size (arkouda.arrayview attribute)": [[25, "arkouda.ArrayView.size", false], [25, "id5", false], [88, "arkouda.ArrayView.size", false]], "size (arkouda.categorical attribute)": [[25, "arkouda.Categorical.size", false], [25, "id11", false], [25, "id113", false], [25, "id17", false], [25, "id55", false], [25, "id75", false], [89, "arkouda.Categorical.size", false]], "size (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.size", false], [18, "id5", false]], "size (arkouda.dataframe property)": [[25, "arkouda.DataFrame.size", false], [25, "id170", false]], "size (arkouda.dataframe.dataframe property)": [[21, "arkouda.dataframe.DataFrame.size", false]], "size (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.size", false], [25, "id253", false], [25, "id300", false], [25, "id347", false], [25, "id394", false], [25, "id441", false], [92, "arkouda.GroupBy.size", false]], "size (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.size", false]], "size (arkouda.pdarray attribute)": [[25, "arkouda.pdarray.size", false], [25, "id1000", false], [25, "id1050", false], [25, "id1070", false], [25, "id1120", false], [25, "id1140", false], [25, "id1190", false], [25, "id1210", false], [25, "id1260", false], [25, "id924", false], [25, "id930", false], [25, "id980", false], [95, "arkouda.pdarray.size", false]], "size (arkouda.pdarrayclass.pdarray attribute)": [[37, "arkouda.pdarrayclass.pdarray.size", false], [37, "id5", false]], "size (arkouda.segarray attribute)": [[25, "arkouda.SegArray.size", false]], "size (arkouda.segarray.segarray attribute)": [[48, "arkouda.segarray.SegArray.size", false]], "size (arkouda.sparray attribute)": [[25, "arkouda.sparray.size", false], [25, "id1288", false]], "size (arkouda.sparrayclass.sparray attribute)": [[51, "arkouda.sparrayclass.sparray.size", false], [51, "id6", false]], "size (arkouda.strings attribute)": [[25, "arkouda.Strings.size", false], [25, "id501", false], [25, "id576", false], [25, "id651", false], [25, "id726", false]], "size (arkouda.strings.strings attribute)": [[53, "arkouda.strings.Strings.size", false]], "size() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.size", false]], "size() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.size", false]], "size() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.size", false]], "size() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.size", false]], "size() (arkouda.groupby method)": [[25, "id250", false], [25, "id288", false], [25, "id335", false], [25, "id382", false], [25, "id429", false], [25, "id476", false], [92, "id0", false]], "size() (arkouda.groupbyclass.groupby method)": [[23, "id0", false]], "size() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.size", false]], "size() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.size", false]], "size() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.size", false]], "size() (arkouda.str_ method)": [[25, "arkouda.str_.size", false], [25, "id1342", false]], "skew() (in module arkouda)": [[25, "arkouda.skew", false]], "slice_bits() (arkouda.pdarray method)": [[25, "arkouda.pdarray.slice_bits", false], [25, "id1051", false], [25, "id1121", false], [25, "id1191", false], [25, "id1261", false], [25, "id981", false]], "slice_bits() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.slice_bits", false]], "smallest_normal (arkouda.array_api.data_type_functions.finfo_object attribute)": [[6, "arkouda.array_api.data_type_functions.finfo_object.smallest_normal", false]], "smallest_normal (arkouda.finfo attribute)": [[25, "arkouda.finfo.smallest_normal", false]], "smallest_normal (arkouda.finfo property)": [[25, "id876", false]], "smallest_normal (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.smallest_normal", false]], "smallest_normal (arkouda.numpy.finfo property)": [[36, "id0", false]], "smallest_subnormal (arkouda.finfo attribute)": [[25, "arkouda.finfo.smallest_subnormal", false]], "smallest_subnormal (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.smallest_subnormal", false]], "snapshot() (in module arkouda)": [[25, "arkouda.snapshot", false]], "snapshot() (in module arkouda.io)": [[28, "arkouda.io.snapshot", false]], "sort() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.sort", false]], "sort() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.sort", false]], "sort() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.sort", false]], "sort() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.sort", false]], "sort() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.sort", false]], "sort() (arkouda.str_ method)": [[25, "arkouda.str_.sort", false], [25, "id1343", false]], "sort() (in module arkouda)": [[25, "arkouda.sort", false]], "sort() (in module arkouda.array_api.sorting_functions)": [[14, "arkouda.array_api.sorting_functions.sort", false]], "sort() (in module arkouda.sorting)": [[50, "arkouda.sorting.sort", false]], "sort_index() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.sort_index", false], [25, "id171", false]], "sort_index() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.sort_index", false]], "sort_index() (arkouda.series method)": [[25, "arkouda.Series.sort_index", false]], "sort_index() (arkouda.series.series method)": [[49, "arkouda.series.Series.sort_index", false]], "sort_index() (in module arkouda.series)": [[98, "arkouda.Series.sort_index", false]], "sort_values() (arkouda.categorical method)": [[25, "arkouda.Categorical.sort_values", false], [25, "id114", false], [25, "id56", false]], "sort_values() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.sort_values", false]], "sort_values() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.sort_values", false], [25, "id172", false]], "sort_values() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.sort_values", false]], "sort_values() (arkouda.series method)": [[25, "arkouda.Series.sort_values", false]], "sort_values() (arkouda.series.series method)": [[49, "arkouda.series.Series.sort_values", false]], "sort_values() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.sort_values", false]], "sort_values() (in module arkouda.series)": [[98, "arkouda.Series.sort_values", false]], "sparray (class in arkouda)": [[25, "arkouda.sparray", false]], "sparray (class in arkouda.sparrayclass)": [[51, "arkouda.sparrayclass.sparray", false]], "sparse_matrix_matrix_mult() (in module arkouda)": [[25, "arkouda.sparse_matrix_matrix_mult", false]], "sparse_matrix_matrix_mult() (in module arkouda.sparsematrix)": [[52, "arkouda.sparsematrix.sparse_matrix_matrix_mult", false]], "sparse_sum_help() (in module arkouda.util)": [[56, "arkouda.util.sparse_sum_help", false]], "special_objtype (arkouda.bitvector attribute)": [[25, "arkouda.BitVector.special_objType", false]], "special_objtype (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.special_objType", false]], "special_objtype (arkouda.client_dtypes.ipv4 attribute)": [[20, "arkouda.client_dtypes.IPv4.special_objType", false]], "special_objtype (arkouda.datetime attribute)": [[25, "arkouda.Datetime.special_objType", false], [25, "id202", false], [25, "id235", false]], "special_objtype (arkouda.ipv4 attribute)": [[25, "arkouda.IPv4.special_objType", false]], "special_objtype (arkouda.timeclass.datetime attribute)": [[55, "arkouda.timeclass.Datetime.special_objType", false]], "special_objtype (arkouda.timeclass.timedelta attribute)": [[55, "arkouda.timeclass.Timedelta.special_objType", false]], "special_objtype (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.special_objType", false], [25, "id808", false]], "split() (arkouda.matcher.matcher method)": [[33, "arkouda.matcher.Matcher.split", false]], "split() (arkouda.strings method)": [[25, "arkouda.Strings.split", false], [25, "id557", false], [25, "id632", false], [25, "id707", false], [25, "id782", false], [101, "arkouda.Strings.split", false]], "split() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.split", false]], "sqrt() (in module arkouda)": [[25, "arkouda.sqrt", false]], "sqrt() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.sqrt", false]], "sqrt() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.sqrt", false]], "square() (in module arkouda)": [[25, "arkouda.square", false]], "square() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.square", false]], "square() (in module arkouda.numeric)": [[34, "arkouda.numeric.square", false]], "squeeze() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.squeeze", false]], "squeeze() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.squeeze", false]], "squeeze() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.squeeze", false]], "squeeze() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.squeeze", false]], "squeeze() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.squeeze", false]], "squeeze() (arkouda.str_ method)": [[25, "arkouda.str_.squeeze", false], [25, "id1344", false]], "squeeze() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.squeeze", false]], "stack() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.stack", false]], "standard_exponential() (arkouda.generator method)": [[25, "arkouda.Generator.standard_exponential", false]], "standard_exponential() (arkouda.random.generator method)": [[42, "arkouda.random.Generator.standard_exponential", false]], "standard_exponential() (in module arkouda.random.generator)": [[96, "arkouda.random.Generator.standard_exponential", false]], "standard_normal() (arkouda.generator method)": [[25, "arkouda.Generator.standard_normal", false]], "standard_normal() (arkouda.random.generator method)": [[42, "arkouda.random.Generator.standard_normal", false]], "standard_normal() (in module arkouda)": [[25, "arkouda.standard_normal", false], [25, "id1289", false]], "standard_normal() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.standard_normal", false]], "standard_normal() (in module arkouda.random)": [[42, "arkouda.random.standard_normal", false]], "standard_normal() (in module arkouda.random.generator)": [[96, "arkouda.random.Generator.standard_normal", false]], "standardize_categories() (arkouda.categorical class method)": [[25, "arkouda.Categorical.standardize_categories", false], [25, "id115", false], [25, "id57", false]], "standardize_categories() (arkouda.categorical.categorical class method)": [[18, "arkouda.categorical.Categorical.standardize_categories", false]], "start() (arkouda.match.match method)": [[32, "arkouda.match.Match.start", false], [101, "arkouda.match.Match.start", false]], "starts (arkouda.matcher.matcher attribute)": [[33, "arkouda.matcher.Matcher.starts", false]], "startswith() (arkouda.categorical method)": [[25, "arkouda.Categorical.startswith", false], [25, "id116", false], [25, "id58", false], [89, "arkouda.Categorical.startswith", false]], "startswith() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.startswith", false]], "startswith() (arkouda.strings method)": [[25, "arkouda.Strings.startswith", false], [25, "id558", false], [25, "id633", false], [25, "id708", false], [25, "id783", false], [101, "arkouda.Strings.startswith", false]], "startswith() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.startswith", false]], "statistic (arkouda.power_divergenceresult attribute)": [[25, "arkouda.Power_divergenceResult.statistic", false]], "statistic (arkouda.scipy.power_divergenceresult attribute)": [[44, "arkouda.scipy.Power_divergenceResult.statistic", false]], "std() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.std", false]], "std() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.std", false]], "std() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.std", false]], "std() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.std", false]], "std() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.std", false]], "std() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.std", false]], "std() (arkouda.groupby method)": [[25, "arkouda.GroupBy.std", false], [25, "id289", false], [25, "id336", false], [25, "id383", false], [25, "id430", false], [25, "id477", false], [92, "arkouda.GroupBy.std", false]], "std() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.std", false]], "std() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.std", false]], "std() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.std", false]], "std() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.std", false]], "std() (arkouda.pdarray method)": [[25, "arkouda.pdarray.std", false], [25, "id1052", false], [25, "id1122", false], [25, "id1192", false], [25, "id1262", false], [25, "id982", false], [93, "arkouda.pdarray.std", false]], "std() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.std", false]], "std() (arkouda.series method)": [[25, "arkouda.Series.std", false]], "std() (arkouda.series.series method)": [[49, "arkouda.series.Series.std", false]], "std() (arkouda.str_ method)": [[25, "arkouda.str_.std", false], [25, "id1345", false]], "std() (arkouda.timeclass.timedelta method)": [[55, "arkouda.timeclass.Timedelta.std", false]], "std() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.std", false], [25, "id809", false]], "std() (in module arkouda)": [[25, "arkouda.std", false], [87, "arkouda.std", false]], "std() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.std", false]], "std() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.std", false]], "stick() (arkouda.strings method)": [[25, "arkouda.Strings.stick", false], [25, "id559", false], [25, "id634", false], [25, "id709", false], [25, "id784", false], [101, "arkouda.Strings.stick", false]], "stick() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.stick", false]], "str() (arkouda.dtype method)": [[25, "arkouda.DType.STR", false]], "str() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.STR", false]], "str() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.STR", false]], "str() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.STR", false]], "str_ (class in arkouda)": [[25, "arkouda.str_", false], [25, "id1290", false]], "str_ (class in arkouda.dtypes)": [[22, "arkouda.dtypes.str_", false]], "str_ (class in arkouda.numpy)": [[36, "arkouda.numpy.str_", false]], "str_ (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.str_", false]], "str_acc() (arkouda.series method)": [[25, "arkouda.Series.str_acc", false]], "str_acc() (arkouda.series.series method)": [[49, "arkouda.series.Series.str_acc", false]], "str_scalars (class in arkouda)": [[25, "arkouda.str_scalars", false]], "str_scalars (class in arkouda.dtypes)": [[22, "arkouda.dtypes.str_scalars", false]], "str_scalars (class in arkouda.numpy)": [[36, "arkouda.numpy.str_scalars", false]], "str_scalars (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.str_scalars", false]], "strdtype (class in arkouda)": [[25, "arkouda.StrDType", false]], "strdtype (class in arkouda.numpy)": [[36, "arkouda.numpy.StrDType", false]], "strict (arkouda.errormode attribute)": [[25, "arkouda.ErrorMode.strict", false]], "strict (arkouda.numeric.errormode attribute)": [[34, "arkouda.numeric.ErrorMode.strict", false]], "strides() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.strides", false]], "strides() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.strides", false]], "strides() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.strides", false]], "strides() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.strides", false]], "strides() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.strides", false]], "strides() (arkouda.str_ method)": [[25, "arkouda.str_.strides", false], [25, "id1346", false]], "string_operators() (in module arkouda)": [[25, "arkouda.string_operators", false]], "string_operators() (in module arkouda.accessor)": [[2, "arkouda.accessor.string_operators", false]], "stringaccessor (class in arkouda)": [[25, "arkouda.StringAccessor", false]], "stringaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.StringAccessor", false]], "strings (class in arkouda)": [[25, "arkouda.Strings", false], [25, "id499", false], [25, "id574", false], [25, "id649", false], [25, "id724", false]], "strings (class in arkouda.strings)": [[53, "arkouda.strings.Strings", false]], "strip() (arkouda.strings method)": [[25, "arkouda.Strings.strip", false], [25, "id560", false], [25, "id635", false], [25, "id710", false], [25, "id785", false]], "strip() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.strip", false]], "sub() (arkouda.matcher.matcher method)": [[33, "arkouda.matcher.Matcher.sub", false]], "sub() (arkouda.strings method)": [[25, "arkouda.Strings.sub", false], [25, "id561", false], [25, "id636", false], [25, "id711", false], [25, "id786", false], [101, "arkouda.Strings.sub", false]], "sub() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.sub", false]], "subn() (arkouda.strings method)": [[25, "arkouda.Strings.subn", false], [25, "id562", false], [25, "id637", false], [25, "id712", false], [25, "id787", false], [101, "arkouda.Strings.subn", false]], "subn() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.subn", false]], "subtract() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.subtract", false]], "sum() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.sum", false]], "sum() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.sum", false]], "sum() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.sum", false]], "sum() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.sum", false]], "sum() (arkouda.datetime method)": [[25, "arkouda.Datetime.sum", false], [25, "id203", false], [25, "id236", false]], "sum() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.sum", false]], "sum() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.sum", false]], "sum() (arkouda.groupby method)": [[25, "arkouda.GroupBy.sum", false], [25, "id290", false], [25, "id337", false], [25, "id384", false], [25, "id431", false], [25, "id478", false], [92, "arkouda.GroupBy.sum", false]], "sum() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.sum", false]], "sum() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.sum", false]], "sum() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.sum", false]], "sum() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.sum", false]], "sum() (arkouda.pdarray method)": [[25, "arkouda.pdarray.sum", false], [25, "id1053", false], [25, "id1123", false], [25, "id1193", false], [25, "id1263", false], [25, "id983", false], [93, "arkouda.pdarray.sum", false]], "sum() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.sum", false]], "sum() (arkouda.segarray method)": [[25, "arkouda.SegArray.sum", false]], "sum() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.sum", false]], "sum() (arkouda.series method)": [[25, "arkouda.Series.sum", false]], "sum() (arkouda.series.series method)": [[49, "arkouda.series.Series.sum", false]], "sum() (arkouda.str_ method)": [[25, "arkouda.str_.sum", false], [25, "id1347", false]], "sum() (arkouda.timeclass.datetime method)": [[55, "arkouda.timeclass.Datetime.sum", false]], "sum() (arkouda.timeclass.timedelta method)": [[55, "arkouda.timeclass.Timedelta.sum", false]], "sum() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.sum", false], [25, "id810", false]], "sum() (in module arkouda)": [[25, "arkouda.sum", false], [87, "arkouda.sum", false]], "sum() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.sum", false]], "sum() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.sum", false]], "supported_opeq (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_opeq", false], [25, "id204", false], [25, "id237", false]], "supported_opeq (arkouda.timeclass.datetime attribute)": [[55, "arkouda.timeclass.Datetime.supported_opeq", false]], "supported_opeq (arkouda.timeclass.timedelta attribute)": [[55, "arkouda.timeclass.Timedelta.supported_opeq", false]], "supported_opeq (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_opeq", false], [25, "id811", false]], "supported_with_datetime (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_with_datetime", false], [25, "id205", false], [25, "id238", false]], "supported_with_datetime (arkouda.timeclass.datetime attribute)": [[55, "arkouda.timeclass.Datetime.supported_with_datetime", false]], "supported_with_datetime (arkouda.timeclass.timedelta attribute)": [[55, "arkouda.timeclass.Timedelta.supported_with_datetime", false]], "supported_with_datetime (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_with_datetime", false], [25, "id812", false]], "supported_with_pdarray (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_with_pdarray", false], [25, "id206", false], [25, "id239", false]], "supported_with_pdarray (arkouda.timeclass.datetime attribute)": [[55, "arkouda.timeclass.Datetime.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.timeclass.timedelta attribute)": [[55, "arkouda.timeclass.Timedelta.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_with_pdarray", false], [25, "id813", false]], "supported_with_r_datetime (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_with_r_datetime", false], [25, "id207", false], [25, "id240", false]], "supported_with_r_datetime (arkouda.timeclass.datetime attribute)": [[55, "arkouda.timeclass.Datetime.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.timeclass.timedelta attribute)": [[55, "arkouda.timeclass.Timedelta.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_with_r_datetime", false], [25, "id814", false]], "supported_with_r_pdarray (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_with_r_pdarray", false], [25, "id208", false], [25, "id241", false]], "supported_with_r_pdarray (arkouda.timeclass.datetime attribute)": [[55, "arkouda.timeclass.Datetime.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.timeclass.timedelta attribute)": [[55, "arkouda.timeclass.Timedelta.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_with_r_pdarray", false], [25, "id815", false]], "supported_with_r_timedelta (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_with_r_timedelta", false], [25, "id209", false], [25, "id242", false]], "supported_with_r_timedelta (arkouda.timeclass.datetime attribute)": [[55, "arkouda.timeclass.Datetime.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.timeclass.timedelta attribute)": [[55, "arkouda.timeclass.Timedelta.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_with_r_timedelta", false], [25, "id816", false]], "supported_with_timedelta (arkouda.datetime attribute)": [[25, "arkouda.Datetime.supported_with_timedelta", false], [25, "id210", false], [25, "id243", false]], "supported_with_timedelta (arkouda.timeclass.datetime attribute)": [[55, "arkouda.timeclass.Datetime.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.timeclass.timedelta attribute)": [[55, "arkouda.timeclass.Timedelta.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.timedelta attribute)": [[25, "arkouda.Timedelta.supported_with_timedelta", false], [25, "id817", false]], "swapaxes() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.swapaxes", false]], "swapaxes() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.swapaxes", false]], "swapaxes() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.swapaxes", false]], "swapaxes() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.swapaxes", false]], "swapaxes() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.swapaxes", false]], "swapaxes() (arkouda.str_ method)": [[25, "arkouda.str_.swapaxes", false], [25, "id1348", false]], "symmetric_difference() (arkouda.arkouda_supported_dtypes method)": [[25, "arkouda.ARKOUDA_SUPPORTED_DTYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes method)": [[25, "arkouda.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.arkouda_supported_dtypes method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.dtypeobjects method)": [[22, "arkouda.dtypes.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.dtypes method)": [[22, "arkouda.dtypes.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.inttypes method)": [[22, "arkouda.dtypes.intTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.numericdtypes method)": [[22, "arkouda.dtypes.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.scalardtypes method)": [[22, "arkouda.dtypes.ScalarDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.inttypes method)": [[25, "arkouda.intTypes.symmetric_difference", false], [25, "id897", false], [25, "id906", false]], "symmetric_difference() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypeobjects method)": [[36, "arkouda.numpy.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes method)": [[36, "arkouda.numpy.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.dtypeobjects method)": [[35, "arkouda.numpy.dtypes.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.dtypes method)": [[35, "arkouda.numpy.dtypes.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.inttypes method)": [[35, "arkouda.numpy.dtypes.intTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.numericdtypes method)": [[35, "arkouda.numpy.dtypes.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.scalardtypes method)": [[35, "arkouda.numpy.dtypes.ScalarDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.inttypes method)": [[36, "arkouda.numpy.intTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.numericdtypes method)": [[36, "arkouda.numpy.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.scalardtypes method)": [[36, "arkouda.numpy.ScalarDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.symmetric_difference", false]], "t (arkouda.array_api.array property)": [[8, "arkouda.array_api.Array.T", false]], "t (arkouda.array_api.array_object.array property)": [[4, "arkouda.array_api.array_object.Array.T", false]], "t() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.T", false]], "t() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.T", false]], "t() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.T", false]], "t() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.T", false]], "t() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.T", false]], "t() (arkouda.str_ method)": [[25, "arkouda.str_.T", false], [25, "id1291", false]], "tail() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.tail", false], [25, "id173", false]], "tail() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.tail", false]], "tail() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.tail", false]], "tail() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.tail", false]], "tail() (arkouda.groupby method)": [[25, "arkouda.GroupBy.tail", false], [25, "id291", false], [25, "id338", false], [25, "id385", false], [25, "id432", false], [25, "id479", false], [92, "arkouda.GroupBy.tail", false]], "tail() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.tail", false]], "tail() (arkouda.series method)": [[25, "arkouda.Series.tail", false]], "tail() (arkouda.series.series method)": [[49, "arkouda.series.Series.tail", false]], "tail() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.tail", false]], "tail() (in module arkouda.series)": [[98, "arkouda.Series.tail", false]], "take() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.take", false]], "take() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.take", false]], "take() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.take", false]], "take() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.take", false]], "take() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.take", false]], "take() (arkouda.str_ method)": [[25, "arkouda.str_.take", false], [25, "id1349", false]], "take() (in module arkouda.array_api.indexing_functions)": [[9, "arkouda.array_api.indexing_functions.take", false]], "tan() (in module arkouda)": [[25, "arkouda.tan", false]], "tan() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.tan", false]], "tan() (in module arkouda.numeric)": [[34, "arkouda.numeric.tan", false]], "tanh() (in module arkouda)": [[25, "arkouda.tanh", false]], "tanh() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.tanh", false]], "tanh() (in module arkouda.numeric)": [[34, "arkouda.numeric.tanh", false]], "tensordot() (in module arkouda.array_api.linalg)": [[10, "arkouda.array_api.linalg.tensordot", false]], "tile() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.tile", false]], "timedelta (class in arkouda)": [[25, "arkouda.Timedelta", false], [25, "id799", false]], "timedelta (class in arkouda.timeclass)": [[55, "arkouda.timeclass.Timedelta", false]], "timedelta64 (class in arkouda)": [[25, "arkouda.timedelta64", false]], "timedelta64 (class in arkouda.numpy)": [[36, "arkouda.numpy.timedelta64", false]], "timedelta64dtype (class in arkouda)": [[25, "arkouda.TimeDelta64DType", false]], "timedelta64dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.TimeDelta64DType", false]], "timedelta_range() (in module arkouda)": [[25, "arkouda.timedelta_range", false], [25, "id1358", false]], "timedelta_range() (in module arkouda.timeclass)": [[55, "arkouda.timeclass.timedelta_range", false]], "tiny (arkouda.finfo attribute)": [[25, "arkouda.finfo.tiny", false]], "tiny (arkouda.finfo property)": [[25, "id877", false]], "tiny (arkouda.numpy.finfo attribute)": [[36, "arkouda.numpy.finfo.tiny", false]], "tiny (arkouda.numpy.finfo property)": [[36, "id11", false]], "title() (arkouda.strings method)": [[25, "arkouda.Strings.title", false], [25, "id563", false], [25, "id638", false], [25, "id713", false], [25, "id788", false]], "title() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.title", false]], "to_csv() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.to_csv", false], [25, "id174", false]], "to_csv() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.to_csv", false]], "to_csv() (arkouda.index method)": [[25, "arkouda.Index.to_csv", false]], "to_csv() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_csv", false]], "to_csv() (arkouda.pdarray method)": [[25, "arkouda.pdarray.to_csv", false], [25, "id1054", false], [25, "id1124", false], [25, "id1194", false], [25, "id1264", false], [25, "id984", false]], "to_csv() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.to_csv", false]], "to_csv() (arkouda.strings method)": [[25, "arkouda.Strings.to_csv", false], [25, "id564", false], [25, "id639", false], [25, "id714", false], [25, "id789", false]], "to_csv() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.to_csv", false]], "to_csv() (in module arkouda)": [[25, "arkouda.to_csv", false]], "to_csv() (in module arkouda.io)": [[28, "arkouda.io.to_csv", false]], "to_cuda() (arkouda.pdarray method)": [[25, "arkouda.pdarray.to_cuda", false], [25, "id1057", false], [25, "id1127", false], [25, "id1197", false], [25, "id1267", false], [25, "id987", false]], "to_cuda() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.to_cuda", false]], "to_dataframe() (arkouda.series method)": [[25, "arkouda.Series.to_dataframe", false]], "to_dataframe() (arkouda.series.series method)": [[49, "arkouda.series.Series.to_dataframe", false]], "to_device() (arkouda.array_api.array method)": [[8, "arkouda.array_api.Array.to_device", false]], "to_device() (arkouda.array_api.array_object.array method)": [[4, "arkouda.array_api.array_object.Array.to_device", false]], "to_dict() (arkouda.index method)": [[25, "arkouda.Index.to_dict", false]], "to_dict() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_dict", false]], "to_dict() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.to_dict", false]], "to_dict() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.to_dict", false]], "to_hdf() (arkouda.array_view.arrayview method)": [[17, "arkouda.array_view.ArrayView.to_hdf", false]], "to_hdf() (arkouda.arrayview method)": [[25, "arkouda.ArrayView.to_hdf", false]], "to_hdf() (arkouda.categorical method)": [[25, "arkouda.Categorical.to_hdf", false], [25, "id117", false], [25, "id59", false]], "to_hdf() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_hdf", false]], "to_hdf() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.to_hdf", false]], "to_hdf() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.to_hdf", false], [25, "id175", false]], "to_hdf() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.to_hdf", false]], "to_hdf() (arkouda.groupby method)": [[25, "arkouda.GroupBy.to_hdf", false], [25, "id292", false], [25, "id339", false], [25, "id386", false], [25, "id433", false], [25, "id480", false], [92, "arkouda.GroupBy.to_hdf", false]], "to_hdf() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.to_hdf", false]], "to_hdf() (arkouda.index method)": [[25, "arkouda.Index.to_hdf", false]], "to_hdf() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_hdf", false]], "to_hdf() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.to_hdf", false]], "to_hdf() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.to_hdf", false]], "to_hdf() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.to_hdf", false]], "to_hdf() (arkouda.pdarray method)": [[25, "arkouda.pdarray.to_hdf", false], [25, "id1058", false], [25, "id1128", false], [25, "id1198", false], [25, "id1268", false], [25, "id988", false]], "to_hdf() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.to_hdf", false]], "to_hdf() (arkouda.segarray method)": [[25, "arkouda.SegArray.to_hdf", false]], "to_hdf() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.to_hdf", false]], "to_hdf() (arkouda.strings method)": [[25, "arkouda.Strings.to_hdf", false], [25, "id565", false], [25, "id640", false], [25, "id715", false], [25, "id790", false]], "to_hdf() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.to_hdf", false]], "to_hdf() (in module arkouda)": [[25, "arkouda.to_hdf", false]], "to_hdf() (in module arkouda.io)": [[28, "arkouda.io.to_hdf", false]], "to_list() (arkouda.array_view.arrayview method)": [[17, "arkouda.array_view.ArrayView.to_list", false]], "to_list() (arkouda.arrayview method)": [[25, "arkouda.ArrayView.to_list", false]], "to_list() (arkouda.bitvector method)": [[25, "arkouda.BitVector.to_list", false]], "to_list() (arkouda.categorical method)": [[25, "arkouda.Categorical.to_list", false], [25, "id118", false], [25, "id60", false]], "to_list() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_list", false]], "to_list() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.to_list", false]], "to_list() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.to_list", false]], "to_list() (arkouda.index method)": [[25, "arkouda.Index.to_list", false]], "to_list() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_list", false]], "to_list() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.to_list", false]], "to_list() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.to_list", false]], "to_list() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.to_list", false]], "to_list() (arkouda.pdarray method)": [[25, "arkouda.pdarray.to_list", false], [25, "id1059", false], [25, "id1129", false], [25, "id1199", false], [25, "id1269", false], [25, "id989", false]], "to_list() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.to_list", false]], "to_list() (arkouda.segarray method)": [[25, "arkouda.SegArray.to_list", false]], "to_list() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.to_list", false]], "to_list() (arkouda.series method)": [[25, "arkouda.Series.to_list", false]], "to_list() (arkouda.series.series method)": [[49, "arkouda.series.Series.to_list", false]], "to_list() (arkouda.strings method)": [[25, "arkouda.Strings.to_list", false], [25, "id566", false], [25, "id641", false], [25, "id716", false], [25, "id791", false]], "to_list() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.to_list", false]], "to_markdown() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.to_markdown", false], [25, "id176", false]], "to_markdown() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.to_markdown", false]], "to_markdown() (arkouda.series method)": [[25, "arkouda.Series.to_markdown", false]], "to_markdown() (arkouda.series.series method)": [[49, "arkouda.series.Series.to_markdown", false]], "to_ndarray() (arkouda.array_api.array method)": [[8, "arkouda.array_api.Array.to_ndarray", false]], "to_ndarray() (arkouda.array_api.array_object.array method)": [[4, "arkouda.array_api.array_object.Array.to_ndarray", false]], "to_ndarray() (arkouda.array_view.arrayview method)": [[17, "arkouda.array_view.ArrayView.to_ndarray", false]], "to_ndarray() (arkouda.arrayview method)": [[25, "arkouda.ArrayView.to_ndarray", false]], "to_ndarray() (arkouda.bitvector method)": [[25, "arkouda.BitVector.to_ndarray", false]], "to_ndarray() (arkouda.categorical method)": [[25, "arkouda.Categorical.to_ndarray", false], [25, "id119", false], [25, "id61", false]], "to_ndarray() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_ndarray", false]], "to_ndarray() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.to_ndarray", false]], "to_ndarray() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.to_ndarray", false]], "to_ndarray() (arkouda.index method)": [[25, "arkouda.Index.to_ndarray", false]], "to_ndarray() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_ndarray", false]], "to_ndarray() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.to_ndarray", false]], "to_ndarray() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.to_ndarray", false]], "to_ndarray() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.to_ndarray", false]], "to_ndarray() (arkouda.pdarray method)": [[25, "arkouda.pdarray.to_ndarray", false], [25, "id1060", false], [25, "id1130", false], [25, "id1200", false], [25, "id1270", false], [25, "id990", false]], "to_ndarray() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.to_ndarray", false]], "to_ndarray() (arkouda.segarray method)": [[25, "arkouda.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.series method)": [[25, "arkouda.Series.to_ndarray", false]], "to_ndarray() (arkouda.series.series method)": [[49, "arkouda.series.Series.to_ndarray", false]], "to_ndarray() (arkouda.strings method)": [[25, "arkouda.Strings.to_ndarray", false], [25, "id567", false], [25, "id642", false], [25, "id717", false], [25, "id792", false]], "to_ndarray() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.to_ndarray", false]], "to_ndarray() (in module arkouda.arrayview)": [[88, "arkouda.ArrayView.to_ndarray", false]], "to_ndarray() (in module arkouda.categorical)": [[89, "arkouda.Categorical.to_ndarray", false]], "to_ndarray() (in module arkouda.pdarray)": [[84, "arkouda.pdarray.to_ndarray", false], [95, "arkouda.pdarray.to_ndarray", false]], "to_ndarray() (in module arkouda.segarray)": [[97, "arkouda.SegArray.to_ndarray", false]], "to_ndarray() (in module arkouda.strings)": [[84, "arkouda.Strings.to_ndarray", false], [101, "arkouda.Strings.to_ndarray", false]], "to_pandas() (arkouda.categorical method)": [[25, "arkouda.Categorical.to_pandas", false], [25, "id120", false], [25, "id62", false]], "to_pandas() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_pandas", false]], "to_pandas() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.to_pandas", false], [25, "id177", false]], "to_pandas() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.to_pandas", false]], "to_pandas() (arkouda.datetime method)": [[25, "arkouda.Datetime.to_pandas", false], [25, "id211", false], [25, "id244", false]], "to_pandas() (arkouda.index method)": [[25, "arkouda.Index.to_pandas", false]], "to_pandas() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_pandas", false]], "to_pandas() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.to_pandas", false]], "to_pandas() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.to_pandas", false]], "to_pandas() (arkouda.series method)": [[25, "arkouda.Series.to_pandas", false]], "to_pandas() (arkouda.series.series method)": [[49, "arkouda.series.Series.to_pandas", false]], "to_pandas() (arkouda.timeclass.datetime method)": [[55, "arkouda.timeclass.Datetime.to_pandas", false]], "to_pandas() (arkouda.timeclass.timedelta method)": [[55, "arkouda.timeclass.Timedelta.to_pandas", false]], "to_pandas() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.to_pandas", false], [25, "id818", false]], "to_pandas() (in module arkouda.dataframe)": [[91, "arkouda.DataFrame.to_pandas", false]], "to_pandas() (in module arkouda.series)": [[98, "arkouda.Series.to_pandas", false]], "to_parquet() (arkouda.categorical method)": [[25, "arkouda.Categorical.to_parquet", false], [25, "id121", false], [25, "id63", false]], "to_parquet() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_parquet", false]], "to_parquet() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.to_parquet", false], [25, "id178", false]], "to_parquet() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.to_parquet", false]], "to_parquet() (arkouda.index method)": [[25, "arkouda.Index.to_parquet", false]], "to_parquet() (arkouda.index.index method)": [[26, "arkouda.index.Index.to_parquet", false]], "to_parquet() (arkouda.pdarray method)": [[25, "arkouda.pdarray.to_parquet", false], [25, "id1061", false], [25, "id1131", false], [25, "id1201", false], [25, "id1271", false], [25, "id991", false]], "to_parquet() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.to_parquet", false]], "to_parquet() (arkouda.segarray method)": [[25, "arkouda.SegArray.to_parquet", false]], "to_parquet() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.to_parquet", false]], "to_parquet() (arkouda.strings method)": [[25, "arkouda.Strings.to_parquet", false], [25, "id568", false], [25, "id643", false], [25, "id718", false], [25, "id793", false]], "to_parquet() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.to_parquet", false]], "to_parquet() (in module arkouda)": [[25, "arkouda.to_parquet", false]], "to_parquet() (in module arkouda.io)": [[28, "arkouda.io.to_parquet", false]], "to_strings() (arkouda.categorical method)": [[25, "arkouda.Categorical.to_strings", false], [25, "id122", false], [25, "id64", false]], "to_strings() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_strings", false]], "to_zarr() (in module arkouda)": [[25, "arkouda.to_zarr", false]], "to_zarr() (in module arkouda.io)": [[28, "arkouda.io.to_zarr", false]], "tobytes() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.tobytes", false]], "tobytes() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.tobytes", false]], "tobytes() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.tobytes", false]], "tobytes() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.tobytes", false]], "tobytes() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.tobytes", false]], "tobytes() (arkouda.str_ method)": [[25, "arkouda.str_.tobytes", false], [25, "id1350", false]], "tofile() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.tofile", false]], "tofile() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.tofile", false]], "tofile() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.tofile", false]], "tofile() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.tofile", false]], "tofile() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.tofile", false]], "tofile() (arkouda.str_ method)": [[25, "arkouda.str_.tofile", false], [25, "id1351", false]], "tolist() (arkouda.array_api.array method)": [[8, "arkouda.array_api.Array.tolist", false]], "tolist() (arkouda.array_api.array_object.array method)": [[4, "arkouda.array_api.array_object.Array.tolist", false]], "tolist() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.tolist", false]], "tolist() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.tolist", false]], "tolist() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.tolist", false]], "tolist() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.tolist", false]], "tolist() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.tolist", false]], "tolist() (arkouda.str_ method)": [[25, "arkouda.str_.tolist", false], [25, "id1352", false]], "tooharderror (class in arkouda)": [[25, "arkouda.TooHardError", false]], "tooharderror (class in arkouda.numpy)": [[36, "arkouda.numpy.TooHardError", false]], "topn() (arkouda.series method)": [[25, "arkouda.Series.topn", false]], "topn() (arkouda.series.series method)": [[49, "arkouda.series.Series.topn", false]], "topn() (in module arkouda.series)": [[98, "arkouda.Series.topn", false]], "tostring() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.tostring", false]], "tostring() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.tostring", false]], "tostring() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.tostring", false]], "tostring() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.tostring", false]], "tostring() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.tostring", false]], "tostring() (arkouda.str_ method)": [[25, "arkouda.str_.tostring", false], [25, "id1353", false]], "total_seconds() (arkouda.timeclass.timedelta method)": [[55, "arkouda.timeclass.Timedelta.total_seconds", false]], "total_seconds() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.total_seconds", false], [25, "id819", false]], "trace() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.trace", false]], "trace() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.trace", false]], "trace() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.trace", false]], "trace() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.trace", false]], "trace() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.trace", false]], "trace() (arkouda.str_ method)": [[25, "arkouda.str_.trace", false], [25, "id1354", false]], "transfer() (arkouda.categorical method)": [[25, "arkouda.Categorical.transfer", false], [25, "id123", false], [25, "id65", false]], "transfer() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.transfer", false]], "transfer() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.transfer", false], [25, "id179", false]], "transfer() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.transfer", false]], "transfer() (arkouda.pdarray method)": [[25, "arkouda.pdarray.transfer", false], [25, "id1062", false], [25, "id1132", false], [25, "id1202", false], [25, "id1272", false], [25, "id992", false]], "transfer() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.transfer", false]], "transfer() (arkouda.segarray method)": [[25, "arkouda.SegArray.transfer", false]], "transfer() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.transfer", false]], "transfer() (arkouda.strings method)": [[25, "arkouda.Strings.transfer", false], [25, "id569", false], [25, "id644", false], [25, "id719", false], [25, "id794", false]], "transfer() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.transfer", false]], "transpose() (arkouda.array_api.array method)": [[8, "arkouda.array_api.Array.transpose", false]], "transpose() (arkouda.array_api.array_object.array method)": [[4, "arkouda.array_api.array_object.Array.transpose", false]], "transpose() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.transpose", false]], "transpose() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.transpose", false]], "transpose() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.transpose", false]], "transpose() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.transpose", false]], "transpose() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.transpose", false]], "transpose() (arkouda.str_ method)": [[25, "arkouda.str_.transpose", false], [25, "id1355", false]], "transpose() (in module arkouda)": [[25, "arkouda.transpose", false]], "transpose() (in module arkouda.numeric)": [[34, "arkouda.numeric.transpose", false]], "tril() (in module arkouda)": [[25, "arkouda.tril", false]], "tril() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.tril", false]], "tril() (in module arkouda.numeric)": [[34, "arkouda.numeric.tril", false]], "triu() (in module arkouda)": [[25, "arkouda.triu", false]], "triu() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.triu", false]], "triu() (in module arkouda.numeric)": [[34, "arkouda.numeric.triu", false]], "true_ (class in arkouda)": [[25, "arkouda.True_", false]], "true_ (class in arkouda.numpy)": [[36, "arkouda.numpy.True_", false]], "trunc() (in module arkouda)": [[25, "arkouda.trunc", false]], "trunc() (in module arkouda.array_api.elementwise_functions)": [[7, "arkouda.array_api.elementwise_functions.trunc", false]], "trunc() (in module arkouda.numeric)": [[34, "arkouda.numeric.trunc", false]], "type() (arkouda.bigint method)": [[25, "arkouda.bigint.type", false], [25, "id851", false]], "type() (arkouda.dtypes.bigint method)": [[22, "arkouda.dtypes.bigint.type", false]], "type() (arkouda.numpy.bigint method)": [[36, "arkouda.numpy.bigint.type", false]], "type() (arkouda.numpy.dtypes.bigint method)": [[35, "arkouda.numpy.dtypes.bigint.type", false]], "typename() (in module arkouda)": [[25, "arkouda.typename", false]], "typename() (in module arkouda.numpy)": [[36, "arkouda.numpy.typename", false]], "ubyte (class in arkouda)": [[25, "arkouda.ubyte", false]], "ubyte (class in arkouda.numpy)": [[36, "arkouda.numpy.ubyte", false]], "ubytedtype (class in arkouda)": [[25, "arkouda.UByteDType", false]], "ubytedtype (class in arkouda.numpy)": [[36, "arkouda.numpy.UByteDType", false]], "uint (class in arkouda)": [[25, "arkouda.uint", false]], "uint (class in arkouda.numpy)": [[36, "arkouda.numpy.uint", false]], "uint() (arkouda.dtype method)": [[25, "arkouda.DType.UINT", false]], "uint() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.UINT", false]], "uint() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.UINT", false]], "uint() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.UINT", false]], "uint16 (class in arkouda)": [[25, "arkouda.uint16", false]], "uint16 (class in arkouda.dtypes)": [[22, "arkouda.dtypes.uint16", false]], "uint16 (class in arkouda.numpy)": [[36, "arkouda.numpy.uint16", false]], "uint16 (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.uint16", false]], "uint16() (arkouda.dtype method)": [[25, "arkouda.DType.UINT16", false]], "uint16() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.UINT16", false]], "uint16() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.UINT16", false]], "uint16() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.UINT16", false]], "uint16dtype (class in arkouda)": [[25, "arkouda.UInt16DType", false]], "uint16dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.UInt16DType", false]], "uint32 (class in arkouda)": [[25, "arkouda.uint32", false]], "uint32 (class in arkouda.dtypes)": [[22, "arkouda.dtypes.uint32", false]], "uint32 (class in arkouda.numpy)": [[36, "arkouda.numpy.uint32", false]], "uint32 (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.uint32", false]], "uint32() (arkouda.dtype method)": [[25, "arkouda.DType.UINT32", false]], "uint32() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.UINT32", false]], "uint32() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.UINT32", false]], "uint32() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.UINT32", false]], "uint32dtype (class in arkouda)": [[25, "arkouda.UInt32DType", false]], "uint32dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.UInt32DType", false]], "uint64 (class in arkouda)": [[25, "arkouda.uint64", false]], "uint64 (class in arkouda.dtypes)": [[22, "arkouda.dtypes.uint64", false]], "uint64 (class in arkouda.numpy)": [[36, "arkouda.numpy.uint64", false]], "uint64 (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.uint64", false]], "uint64() (arkouda.dtype method)": [[25, "arkouda.DType.UINT64", false]], "uint64() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.UINT64", false]], "uint64() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.UINT64", false]], "uint64() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.UINT64", false]], "uint64dtype (class in arkouda)": [[25, "arkouda.UInt64DType", false]], "uint64dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.UInt64DType", false]], "uint8 (class in arkouda)": [[25, "arkouda.uint8", false]], "uint8 (class in arkouda.dtypes)": [[22, "arkouda.dtypes.uint8", false]], "uint8 (class in arkouda.numpy)": [[36, "arkouda.numpy.uint8", false]], "uint8 (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.uint8", false]], "uint8() (arkouda.dtype method)": [[25, "arkouda.DType.UINT8", false]], "uint8() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.UINT8", false]], "uint8() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.UINT8", false]], "uint8() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.UINT8", false]], "uint8dtype (class in arkouda)": [[25, "arkouda.UInt8DType", false]], "uint8dtype (class in arkouda.numpy)": [[36, "arkouda.numpy.UInt8DType", false]], "uintc (class in arkouda)": [[25, "arkouda.uintc", false]], "uintc (class in arkouda.numpy)": [[36, "arkouda.numpy.uintc", false]], "uintdtype (class in arkouda)": [[25, "arkouda.UIntDType", false]], "uintdtype (class in arkouda.numpy)": [[36, "arkouda.numpy.UIntDType", false]], "uintp (class in arkouda)": [[25, "arkouda.uintp", false]], "uintp (class in arkouda.numpy)": [[36, "arkouda.numpy.uintp", false]], "ulongdtype (class in arkouda)": [[25, "arkouda.ULongDType", false]], "ulongdtype (class in arkouda.numpy)": [[36, "arkouda.numpy.ULongDType", false]], "ulonglong (class in arkouda)": [[25, "arkouda.ulonglong", false]], "ulonglong (class in arkouda.numpy)": [[36, "arkouda.numpy.ulonglong", false]], "ulonglongdtype (class in arkouda)": [[25, "arkouda.ULongLongDType", false]], "ulonglongdtype (class in arkouda.numpy)": [[36, "arkouda.numpy.ULongLongDType", false]], "uniform() (arkouda.generator method)": [[25, "arkouda.Generator.uniform", false]], "uniform() (arkouda.random.generator method)": [[42, "arkouda.random.Generator.uniform", false]], "uniform() (in module arkouda)": [[25, "arkouda.uniform", false], [25, "id1359", false]], "uniform() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.uniform", false]], "uniform() (in module arkouda.random)": [[42, "arkouda.random.uniform", false]], "uniform() (in module arkouda.random.generator)": [[96, "arkouda.random.Generator.uniform", false]], "union (class in arkouda.dtypes)": [[22, "arkouda.dtypes.Union", false]], "union (class in arkouda.numpy.dtypes)": [[35, "arkouda.numpy.dtypes.Union", false]], "union() (arkouda.arkouda_supported_dtypes method)": [[25, "arkouda.ARKOUDA_SUPPORTED_DTYPES.union", false]], "union() (arkouda.dtypeobjects method)": [[25, "arkouda.DTypeObjects.union", false]], "union() (arkouda.dtypes method)": [[25, "arkouda.DTypes.union", false]], "union() (arkouda.dtypes.arkouda_supported_dtypes method)": [[22, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.union", false]], "union() (arkouda.dtypes.dtypeobjects method)": [[22, "arkouda.dtypes.DTypeObjects.union", false]], "union() (arkouda.dtypes.dtypes method)": [[22, "arkouda.dtypes.DTypes.union", false]], "union() (arkouda.dtypes.inttypes method)": [[22, "arkouda.dtypes.intTypes.union", false]], "union() (arkouda.dtypes.numericdtypes method)": [[22, "arkouda.dtypes.NumericDTypes.union", false]], "union() (arkouda.dtypes.scalardtypes method)": [[22, "arkouda.dtypes.ScalarDTypes.union", false]], "union() (arkouda.groupby_reduction_types method)": [[25, "arkouda.GROUPBY_REDUCTION_TYPES.union", false]], "union() (arkouda.groupbyclass.groupby_reduction_types method)": [[23, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.union", false]], "union() (arkouda.inttypes method)": [[25, "arkouda.intTypes.union", false], [25, "id898", false], [25, "id907", false]], "union() (arkouda.numericdtypes method)": [[25, "arkouda.NumericDTypes.union", false]], "union() (arkouda.numpy.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.union", false]], "union() (arkouda.numpy.dtypeobjects method)": [[36, "arkouda.numpy.DTypeObjects.union", false]], "union() (arkouda.numpy.dtypes method)": [[36, "arkouda.numpy.DTypes.union", false]], "union() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[35, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.union", false]], "union() (arkouda.numpy.dtypes.dtypeobjects method)": [[35, "arkouda.numpy.dtypes.DTypeObjects.union", false]], "union() (arkouda.numpy.dtypes.dtypes method)": [[35, "arkouda.numpy.dtypes.DTypes.union", false]], "union() (arkouda.numpy.dtypes.inttypes method)": [[35, "arkouda.numpy.dtypes.intTypes.union", false]], "union() (arkouda.numpy.dtypes.numericdtypes method)": [[35, "arkouda.numpy.dtypes.NumericDTypes.union", false]], "union() (arkouda.numpy.dtypes.scalardtypes method)": [[35, "arkouda.numpy.dtypes.ScalarDTypes.union", false]], "union() (arkouda.numpy.inttypes method)": [[36, "arkouda.numpy.intTypes.union", false]], "union() (arkouda.numpy.numericdtypes method)": [[36, "arkouda.numpy.NumericDTypes.union", false]], "union() (arkouda.numpy.scalardtypes method)": [[36, "arkouda.numpy.ScalarDTypes.union", false]], "union() (arkouda.scalardtypes method)": [[25, "arkouda.ScalarDTypes.union", false]], "union() (arkouda.segarray method)": [[25, "arkouda.SegArray.union", false]], "union() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.union", false]], "union() (in module arkouda.segarray)": [[97, "arkouda.SegArray.union", false]], "union1d() (in module arkouda)": [[25, "arkouda.union1d", false], [99, "arkouda.union1d", false]], "union1d() (in module arkouda.pdarraysetops)": [[40, "arkouda.pdarraysetops.union1d", false]], "unique() (arkouda.categorical method)": [[25, "arkouda.Categorical.unique", false], [25, "id124", false], [25, "id66", false]], "unique() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.unique", false]], "unique() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.unique", false]], "unique() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.unique", false]], "unique() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.unique", false]], "unique() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.unique", false]], "unique() (arkouda.groupby method)": [[25, "arkouda.GroupBy.unique", false], [25, "id293", false], [25, "id340", false], [25, "id387", false], [25, "id434", false], [25, "id481", false], [92, "arkouda.GroupBy.unique", false]], "unique() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.unique", false]], "unique() (arkouda.segarray method)": [[25, "arkouda.SegArray.unique", false]], "unique() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.unique", false]], "unique() (in module arkouda)": [[25, "arkouda.unique", false], [25, "id1360", false], [25, "id1361", false], [99, "arkouda.unique", false]], "unique() (in module arkouda.groupbyclass)": [[23, "arkouda.groupbyclass.unique", false]], "unique_all() (in module arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.unique_all", false]], "unique_counts() (in module arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.unique_counts", false]], "unique_inverse() (in module arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.unique_inverse", false]], "unique_keys (arkouda.groupby attribute)": [[25, "arkouda.GroupBy.unique_keys", false], [25, "id255", false], [25, "id302", false], [25, "id349", false], [25, "id396", false], [25, "id443", false], [92, "arkouda.GroupBy.unique_keys", false]], "unique_keys (arkouda.groupbyclass.groupby attribute)": [[23, "arkouda.groupbyclass.GroupBy.unique_keys", false]], "unique_values() (in module arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.unique_values", false]], "uniqueallresult (class in arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.UniqueAllResult", false]], "uniquecountsresult (class in arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.UniqueCountsResult", false]], "uniqueinverseresult (class in arkouda.array_api.set_functions)": [[13, "arkouda.array_api.set_functions.UniqueInverseResult", false]], "unregister() (arkouda.categorical method)": [[25, "arkouda.Categorical.unregister", false], [25, "id125", false], [25, "id67", false]], "unregister() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.unregister", false]], "unregister() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.unregister", false], [25, "id180", false]], "unregister() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.unregister", false]], "unregister() (arkouda.datetime method)": [[25, "arkouda.Datetime.unregister", false], [25, "id212", false], [25, "id245", false]], "unregister() (arkouda.groupby method)": [[25, "arkouda.GroupBy.unregister", false], [25, "id294", false], [25, "id341", false], [25, "id388", false], [25, "id435", false], [25, "id482", false], [92, "arkouda.GroupBy.unregister", false]], "unregister() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.unregister", false]], "unregister() (arkouda.index method)": [[25, "arkouda.Index.unregister", false]], "unregister() (arkouda.index.index method)": [[26, "arkouda.index.Index.unregister", false]], "unregister() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.unregister", false]], "unregister() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.unregister", false]], "unregister() (arkouda.pdarray method)": [[25, "arkouda.pdarray.unregister", false], [25, "id1063", false], [25, "id1133", false], [25, "id1203", false], [25, "id1273", false], [25, "id993", false]], "unregister() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.unregister", false]], "unregister() (arkouda.segarray method)": [[25, "arkouda.SegArray.unregister", false]], "unregister() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.unregister", false]], "unregister() (arkouda.series method)": [[25, "arkouda.Series.unregister", false]], "unregister() (arkouda.series.series method)": [[49, "arkouda.series.Series.unregister", false]], "unregister() (arkouda.strings method)": [[25, "arkouda.Strings.unregister", false], [25, "id570", false], [25, "id645", false], [25, "id720", false], [25, "id795", false]], "unregister() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.unregister", false]], "unregister() (arkouda.timeclass.datetime method)": [[55, "arkouda.timeclass.Datetime.unregister", false]], "unregister() (arkouda.timeclass.timedelta method)": [[55, "arkouda.timeclass.Timedelta.unregister", false]], "unregister() (arkouda.timedelta method)": [[25, "arkouda.Timedelta.unregister", false], [25, "id820", false]], "unregister() (in module arkouda)": [[25, "arkouda.unregister", false]], "unregister() (in module arkouda.util)": [[56, "arkouda.util.unregister", false]], "unregister_all() (in module arkouda)": [[25, "arkouda.unregister_all", false]], "unregister_all() (in module arkouda.util)": [[56, "arkouda.util.unregister_all", false]], "unregister_categorical_by_name() (arkouda.categorical static method)": [[25, "arkouda.Categorical.unregister_categorical_by_name", false], [25, "id126", false], [25, "id68", false]], "unregister_categorical_by_name() (arkouda.categorical.categorical static method)": [[18, "arkouda.categorical.Categorical.unregister_categorical_by_name", false]], "unregister_dataframe_by_name() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.unregister_dataframe_by_name", false], [25, "id181", false]], "unregister_dataframe_by_name() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.unregister_dataframe_by_name", false]], "unregister_groupby_by_name() (arkouda.groupby method)": [[25, "arkouda.GroupBy.unregister_groupby_by_name", false], [25, "id295", false], [25, "id342", false], [25, "id389", false], [25, "id436", false], [25, "id483", false]], "unregister_groupby_by_name() (arkouda.groupby static method)": [[92, "arkouda.GroupBy.unregister_groupby_by_name", false]], "unregister_groupby_by_name() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.unregister_groupby_by_name", false]], "unregister_pdarray_by_name() (in module arkouda)": [[25, "arkouda.unregister_pdarray_by_name", false]], "unregister_pdarray_by_name() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.unregister_pdarray_by_name", false]], "unregister_segarray_by_name() (arkouda.segarray static method)": [[25, "arkouda.SegArray.unregister_segarray_by_name", false]], "unregister_segarray_by_name() (arkouda.segarray.segarray static method)": [[48, "arkouda.segarray.SegArray.unregister_segarray_by_name", false]], "unregister_strings_by_name() (arkouda.strings static method)": [[25, "arkouda.Strings.unregister_strings_by_name", false], [25, "id571", false], [25, "id646", false], [25, "id721", false], [25, "id796", false]], "unregister_strings_by_name() (arkouda.strings.strings static method)": [[53, "arkouda.strings.Strings.unregister_strings_by_name", false]], "unsignedinteger (class in arkouda)": [[25, "arkouda.unsignedinteger", false]], "unsignedinteger (class in arkouda.numpy)": [[36, "arkouda.numpy.unsignedinteger", false]], "unsqueeze() (in module arkouda)": [[25, "arkouda.unsqueeze", false]], "unsqueeze() (in module arkouda.alignment)": [[3, "arkouda.alignment.unsqueeze", false]], "unstack() (in module arkouda.array_api.manipulation_functions)": [[11, "arkouda.array_api.manipulation_functions.unstack", false]], "update() (arkouda.dtypes.number_format_strings method)": [[22, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.dtypes.seriesdtypes method)": [[22, "arkouda.dtypes.SeriesDTypes.update", false]], "update() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.numpy.dtypes.number_format_strings method)": [[35, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.numpy.dtypes.seriesdtypes method)": [[35, "arkouda.numpy.dtypes.SeriesDTypes.update", false]], "update() (arkouda.numpy.number_format_strings method)": [[36, "arkouda.numpy.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.numpy.sctypedict method)": [[36, "arkouda.numpy.sctypeDict.update", false]], "update() (arkouda.numpy.sctypes method)": [[36, "arkouda.numpy.sctypes.update", false]], "update() (arkouda.numpy.seriesdtypes method)": [[36, "arkouda.numpy.SeriesDTypes.update", false]], "update() (arkouda.sctypedict method)": [[25, "arkouda.sctypeDict.update", false]], "update() (arkouda.sctypes method)": [[25, "arkouda.sctypes.update", false]], "update() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.update", false]], "update_hdf() (arkouda.array_view.arrayview method)": [[17, "arkouda.array_view.ArrayView.update_hdf", false]], "update_hdf() (arkouda.arrayview method)": [[25, "arkouda.ArrayView.update_hdf", false]], "update_hdf() (arkouda.categorical method)": [[25, "arkouda.Categorical.update_hdf", false], [25, "id127", false], [25, "id69", false]], "update_hdf() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.update_hdf", false]], "update_hdf() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.update_hdf", false]], "update_hdf() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.update_hdf", false], [25, "id182", false]], "update_hdf() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.update_hdf", false]], "update_hdf() (arkouda.groupby method)": [[25, "arkouda.GroupBy.update_hdf", false], [25, "id296", false], [25, "id343", false], [25, "id390", false], [25, "id437", false], [25, "id484", false]], "update_hdf() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.update_hdf", false]], "update_hdf() (arkouda.index method)": [[25, "arkouda.Index.update_hdf", false]], "update_hdf() (arkouda.index.index method)": [[26, "arkouda.index.Index.update_hdf", false]], "update_hdf() (arkouda.index.multiindex method)": [[26, "arkouda.index.MultiIndex.update_hdf", false]], "update_hdf() (arkouda.ipv4 method)": [[25, "arkouda.IPv4.update_hdf", false]], "update_hdf() (arkouda.multiindex method)": [[25, "arkouda.MultiIndex.update_hdf", false]], "update_hdf() (arkouda.pdarray method)": [[25, "arkouda.pdarray.update_hdf", false], [25, "id1064", false], [25, "id1134", false], [25, "id1204", false], [25, "id1274", false], [25, "id994", false]], "update_hdf() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.update_hdf", false]], "update_hdf() (arkouda.segarray method)": [[25, "arkouda.SegArray.update_hdf", false]], "update_hdf() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.update_hdf", false]], "update_hdf() (arkouda.strings method)": [[25, "arkouda.Strings.update_hdf", false], [25, "id572", false], [25, "id647", false], [25, "id722", false], [25, "id797", false]], "update_hdf() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.update_hdf", false]], "update_hdf() (in module arkouda)": [[25, "arkouda.update_hdf", false]], "update_hdf() (in module arkouda.io)": [[28, "arkouda.io.update_hdf", false]], "update_nrows() (arkouda.dataframe method)": [[25, "arkouda.DataFrame.update_nrows", false], [25, "id183", false]], "update_nrows() (arkouda.dataframe.dataframe method)": [[21, "arkouda.dataframe.DataFrame.update_nrows", false]], "upper() (arkouda.strings method)": [[25, "arkouda.Strings.upper", false], [25, "id573", false], [25, "id648", false], [25, "id723", false], [25, "id798", false]], "upper() (arkouda.strings.strings method)": [[53, "arkouda.strings.Strings.upper", false]], "username_tokenizer (in module arkouda.security)": [[47, "arkouda.security.username_tokenizer", false]], "ushort (class in arkouda)": [[25, "arkouda.ushort", false]], "ushort (class in arkouda.numpy)": [[36, "arkouda.numpy.ushort", false]], "ushortdtype (class in arkouda)": [[25, "arkouda.UShortDType", false]], "ushortdtype (class in arkouda.numpy)": [[36, "arkouda.numpy.UShortDType", false]], "val_suffix (in module arkouda)": [[25, "arkouda.VAL_SUFFIX", false]], "val_suffix (in module arkouda.segarray)": [[48, "arkouda.segarray.VAL_SUFFIX", false]], "validate_key() (arkouda.series method)": [[25, "arkouda.Series.validate_key", false]], "validate_key() (arkouda.series.series method)": [[49, "arkouda.series.Series.validate_key", false]], "validate_val() (arkouda.series method)": [[25, "arkouda.Series.validate_val", false]], "validate_val() (arkouda.series.series method)": [[49, "arkouda.series.Series.validate_val", false]], "valsize (arkouda.segarray attribute)": [[25, "arkouda.SegArray.valsize", false]], "valsize (arkouda.segarray.segarray attribute)": [[48, "arkouda.segarray.SegArray.valsize", false]], "value() (arkouda.dtype method)": [[25, "arkouda.DType.value", false]], "value() (arkouda.dtypes.dtype method)": [[22, "arkouda.dtypes.DType.value", false]], "value() (arkouda.numpy.dtype method)": [[36, "arkouda.numpy.DType.value", false]], "value() (arkouda.numpy.dtypes.dtype method)": [[35, "arkouda.numpy.dtypes.DType.value", false]], "value_counts() (arkouda.pdarray method)": [[25, "arkouda.pdarray.value_counts", false], [25, "id1065", false], [25, "id1135", false], [25, "id1205", false], [25, "id1275", false], [25, "id995", false]], "value_counts() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.value_counts", false]], "value_counts() (arkouda.series method)": [[25, "arkouda.Series.value_counts", false]], "value_counts() (arkouda.series.series method)": [[49, "arkouda.series.Series.value_counts", false]], "value_counts() (in module arkouda)": [[25, "arkouda.value_counts", false], [93, "arkouda.value_counts", false]], "value_counts() (in module arkouda.numeric)": [[34, "arkouda.numeric.value_counts", false]], "value_counts() (in module arkouda.series)": [[98, "arkouda.Series.value_counts", false]], "values (arkouda.array_api.set_functions.uniqueallresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueAllResult.values", false]], "values (arkouda.array_api.set_functions.uniquecountsresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueCountsResult.values", false]], "values (arkouda.array_api.set_functions.uniqueinverseresult attribute)": [[13, "arkouda.array_api.set_functions.UniqueInverseResult.values", false]], "values (arkouda.bitvector attribute)": [[25, "arkouda.BitVector.values", false]], "values (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.values", false]], "values (arkouda.client_dtypes.ipv4 attribute)": [[20, "arkouda.client_dtypes.IPv4.values", false]], "values (arkouda.dataframe.diffaggregate attribute)": [[21, "arkouda.dataframe.DiffAggregate.values", false]], "values (arkouda.diffaggregate attribute)": [[25, "arkouda.DiffAggregate.values", false]], "values (arkouda.ipv4 attribute)": [[25, "arkouda.IPv4.values", false]], "values (arkouda.segarray attribute)": [[25, "arkouda.SegArray.values", false]], "values (arkouda.segarray.segarray attribute)": [[48, "arkouda.segarray.SegArray.values", false]], "values() (arkouda.dtypes.number_format_strings method)": [[22, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.dtypes.seriesdtypes method)": [[22, "arkouda.dtypes.SeriesDTypes.values", false]], "values() (arkouda.number_format_strings method)": [[25, "arkouda.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.numpy.dtypes.number_format_strings method)": [[35, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.numpy.dtypes.seriesdtypes method)": [[35, "arkouda.numpy.dtypes.SeriesDTypes.values", false]], "values() (arkouda.numpy.number_format_strings method)": [[36, "arkouda.numpy.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.numpy.sctypedict method)": [[36, "arkouda.numpy.sctypeDict.values", false]], "values() (arkouda.numpy.sctypes method)": [[36, "arkouda.numpy.sctypes.values", false]], "values() (arkouda.numpy.seriesdtypes method)": [[36, "arkouda.numpy.SeriesDTypes.values", false]], "values() (arkouda.sctypedict method)": [[25, "arkouda.sctypeDict.values", false]], "values() (arkouda.sctypes method)": [[25, "arkouda.sctypes.values", false]], "values() (arkouda.seriesdtypes method)": [[25, "arkouda.SeriesDTypes.values", false]], "var() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.var", false]], "var() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.var", false]], "var() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.var", false]], "var() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.var", false]], "var() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.var", false]], "var() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.var", false]], "var() (arkouda.groupby method)": [[25, "arkouda.GroupBy.var", false], [25, "id297", false], [25, "id344", false], [25, "id391", false], [25, "id438", false], [25, "id485", false], [92, "arkouda.GroupBy.var", false]], "var() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.var", false]], "var() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.var", false]], "var() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.var", false]], "var() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.var", false]], "var() (arkouda.pdarray method)": [[25, "arkouda.pdarray.var", false], [25, "id1066", false], [25, "id1136", false], [25, "id1206", false], [25, "id1276", false], [25, "id996", false], [93, "arkouda.pdarray.var", false]], "var() (arkouda.pdarrayclass.pdarray method)": [[37, "arkouda.pdarrayclass.pdarray.var", false]], "var() (arkouda.series method)": [[25, "arkouda.Series.var", false]], "var() (arkouda.series.series method)": [[49, "arkouda.series.Series.var", false]], "var() (arkouda.str_ method)": [[25, "arkouda.str_.var", false], [25, "id1356", false]], "var() (in module arkouda)": [[25, "arkouda.var", false], [87, "arkouda.var", false]], "var() (in module arkouda.array_api.statistical_functions)": [[15, "arkouda.array_api.statistical_functions.var", false]], "var() (in module arkouda.pdarrayclass)": [[37, "arkouda.pdarrayclass.var", false]], "vecdot() (in module arkouda)": [[25, "arkouda.vecdot", false]], "vecdot() (in module arkouda.array_api.linalg)": [[10, "arkouda.array_api.linalg.vecdot", false]], "vecdot() (in module arkouda.numeric)": [[34, "arkouda.numeric.vecdot", false]], "vecentropy() (arkouda.scipy.stats.chi2 method)": [[46, "arkouda.scipy.stats.chi2.vecentropy", false]], "view() (arkouda.bytes_ method)": [[25, "arkouda.bytes_.view", false]], "view() (arkouda.dtypes.str_ method)": [[22, "arkouda.dtypes.str_.view", false]], "view() (arkouda.numpy.bytes_ method)": [[36, "arkouda.numpy.bytes_.view", false]], "view() (arkouda.numpy.dtypes.str_ method)": [[35, "arkouda.numpy.dtypes.str_.view", false]], "view() (arkouda.numpy.str_ method)": [[36, "arkouda.numpy.str_.view", false]], "view() (arkouda.str_ method)": [[25, "arkouda.str_.view", false], [25, "id1357", false]], "void (class in arkouda)": [[25, "arkouda.void", false]], "void (class in arkouda.numpy)": [[36, "arkouda.numpy.void", false]], "voiddtype (class in arkouda)": [[25, "arkouda.VoidDType", false]], "voiddtype (class in arkouda.numpy)": [[36, "arkouda.numpy.VoidDType", false]], "vstack() (in module arkouda)": [[25, "arkouda.vstack", false]], "vstack() (in module arkouda.pdarraymanipulation)": [[39, "arkouda.pdarraymanipulation.vstack", false]], "warn (arkouda.logger.loglevel attribute)": [[31, "arkouda.logger.LogLevel.WARN", false]], "warn (arkouda.loglevel attribute)": [[25, "arkouda.LogLevel.WARN", false]], "week (arkouda.datetime property)": [[25, "arkouda.Datetime.week", false], [25, "id213", false], [25, "id246", false]], "week (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.week", false]], "weekday (arkouda.datetime property)": [[25, "arkouda.Datetime.weekday", false], [25, "id214", false], [25, "id247", false]], "weekday (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.weekday", false]], "weekofyear (arkouda.datetime property)": [[25, "arkouda.Datetime.weekofyear", false], [25, "id215", false], [25, "id248", false]], "weekofyear (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.weekofyear", false]], "where() (in module arkouda)": [[25, "arkouda.where", false], [25, "id1362", false], [25, "id1363", false], [87, "arkouda.where", false]], "where() (in module arkouda.array_api.searching_functions)": [[12, "arkouda.array_api.searching_functions.where", false]], "where() (in module arkouda.numeric)": [[34, "arkouda.numeric.where", false]], "width (arkouda.bitvector attribute)": [[25, "arkouda.BitVector.width", false]], "width (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.width", false]], "width (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.width", false]], "width (arkouda.fields attribute)": [[25, "arkouda.Fields.width", false]], "write_line_to_file() (in module arkouda.io_util)": [[29, "arkouda.io_util.write_line_to_file", false]], "write_log() (in module arkouda)": [[25, "arkouda.write_log", false]], "write_log() (in module arkouda.logger)": [[31, "arkouda.logger.write_log", false]], "xlogy() (in module arkouda)": [[25, "arkouda.xlogy", false]], "xlogy() (in module arkouda.scipy.special)": [[45, "arkouda.scipy.special.xlogy", false]], "xor() (arkouda.dataframe.dataframegroupby method)": [[21, "arkouda.dataframe.DataFrameGroupBy.xor", false]], "xor() (arkouda.dataframe.diffaggregate method)": [[21, "arkouda.dataframe.DiffAggregate.xor", false]], "xor() (arkouda.dataframegroupby method)": [[25, "arkouda.DataFrameGroupBy.xor", false]], "xor() (arkouda.diffaggregate method)": [[25, "arkouda.DiffAggregate.xor", false]], "xor() (arkouda.groupby method)": [[25, "arkouda.GroupBy.XOR", false], [25, "id263", false], [25, "id310", false], [25, "id357", false], [25, "id404", false], [25, "id451", false], [92, "arkouda.GroupBy.XOR", false]], "xor() (arkouda.groupbyclass.groupby method)": [[23, "arkouda.groupbyclass.GroupBy.XOR", false]], "xor() (arkouda.segarray method)": [[25, "arkouda.SegArray.XOR", false]], "xor() (arkouda.segarray.segarray method)": [[48, "arkouda.segarray.SegArray.XOR", false]], "xtol() (arkouda.scipy.stats.chi2 method)": [[46, "arkouda.scipy.stats.chi2.xtol", false]], "year (arkouda.datetime property)": [[25, "arkouda.Datetime.year", false], [25, "id216", false], [25, "id249", false]], "year (arkouda.timeclass.datetime property)": [[55, "arkouda.timeclass.Datetime.year", false]], "zero_up() (in module arkouda)": [[25, "arkouda.zero_up", false]], "zero_up() (in module arkouda.alignment)": [[3, "arkouda.alignment.zero_up", false]], "zeros() (in module arkouda)": [[25, "arkouda.zeros", false], [25, "id1364", false], [25, "id1365", false], [25, "id1366", false], [90, "arkouda.zeros", false]], "zeros() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.zeros", false]], "zeros() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.zeros", false]], "zeros_like() (in module arkouda)": [[25, "arkouda.zeros_like", false], [90, "arkouda.zeros_like", false]], "zeros_like() (in module arkouda.array_api.creation_functions)": [[5, "arkouda.array_api.creation_functions.zeros_like", false]], "zeros_like() (in module arkouda.pdarraycreation)": [[38, "arkouda.pdarraycreation.zeros_like", false]]}, "objects": {"": [[25, 0, 0, "-", "arkouda"]], "arkouda": [[25, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [25, 3, 1, "", "AllSymbols"], [88, 1, 1, "", "ArrayView"], [25, 1, 1, "", "BitVector"], [25, 5, 1, "", "BitVectorizer"], [25, 1, 1, "", "BoolDType"], [25, 1, 1, "", "ByteDType"], [25, 1, 1, "", "BytesDType"], [25, 1, 1, "", "CLongDoubleDType"], [25, 1, 1, "", "CachedAccessor"], [89, 1, 1, "", "Categorical"], [25, 1, 1, "", "Complex128DType"], [25, 1, 1, "", "Complex64DType"], [25, 1, 1, "", "DType"], [25, 1, 1, "", "DTypeObjects"], [25, 1, 1, "", "DTypes"], [91, 1, 1, "", "DataFrame"], [25, 1, 1, "", "DataFrameGroupBy"], [25, 1, 1, "", "DataSource"], [25, 1, 1, "", "DateTime64DType"], [25, 1, 1, "id217", "Datetime"], [25, 1, 1, "", "DatetimeAccessor"], [25, 1, 1, "", "DiffAggregate"], [25, 1, 1, "", "ErrorMode"], [25, 1, 1, "", "False_"], [25, 1, 1, "", "Fields"], [25, 1, 1, "", "Float16DType"], [25, 1, 1, "", "Float32DType"], [25, 1, 1, "", "Float64DType"], [25, 1, 1, "", "GROUPBY_REDUCTION_TYPES"], [25, 1, 1, "", "Generator"], [92, 1, 1, "", "GroupBy"], [25, 1, 1, "", "IPv4"], [85, 1, 1, "", "Index"], [25, 3, 1, "", "Inf"], [25, 3, 1, "", "Infinity"], [25, 1, 1, "", "Int16DType"], [25, 1, 1, "", "Int32DType"], [25, 1, 1, "", "Int64DType"], [25, 1, 1, "", "Int8DType"], [25, 1, 1, "", "IntDType"], [25, 3, 1, "", "LEN_SUFFIX"], [25, 1, 1, "", "LogLevel"], [25, 1, 1, "", "LongDType"], [25, 1, 1, "", "LongDoubleDType"], [25, 1, 1, "", "LongLongDType"], [25, 1, 1, "", "MultiIndex"], [25, 3, 1, "", "NAN"], [25, 3, 1, "", "NINF"], [25, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [25, 3, 1, "", "NZERO"], [25, 3, 1, "", "NaN"], [25, 7, 1, "", "NonUniqueError"], [25, 1, 1, "", "NumericDTypes"], [25, 1, 1, "", "ObjectDType"], [25, 3, 1, "", "PINF"], [25, 3, 1, "", "PZERO"], [25, 1, 1, "", "Power_divergenceResult"], [25, 1, 1, "", "Properties"], [25, 1, 1, "", "RankWarning"], [25, 3, 1, "", "RegisteredSymbols"], [25, 7, 1, "id493", "RegistrationError"], [25, 1, 1, "", "Row"], [25, 3, 1, "", "SEG_SUFFIX"], [25, 1, 1, "", "ScalarDTypes"], [25, 1, 1, "", "ScalarType"], [25, 1, 1, "", "SegArray"], [98, 1, 1, "", "Series"], [25, 1, 1, "", "SeriesDTypes"], [25, 1, 1, "", "ShortDType"], [25, 1, 1, "", "StrDType"], [25, 1, 1, "", "StringAccessor"], [25, 1, 1, "id724", "Strings"], [25, 1, 1, "", "TimeDelta64DType"], [25, 1, 1, "id799", "Timedelta"], [25, 1, 1, "", "TooHardError"], [25, 1, 1, "", "True_"], [25, 1, 1, "", "UByteDType"], [25, 1, 1, "", "UInt16DType"], [25, 1, 1, "", "UInt32DType"], [25, 1, 1, "", "UInt64DType"], [25, 1, 1, "", "UInt8DType"], [25, 1, 1, "", "UIntDType"], [25, 1, 1, "", "ULongDType"], [25, 1, 1, "", "ULongLongDType"], [25, 1, 1, "", "UShortDType"], [25, 3, 1, "", "VAL_SUFFIX"], [25, 1, 1, "", "VoidDType"], [87, 5, 1, "", "abs"], [2, 0, 0, "-", "accessor"], [25, 5, 1, "", "add_newdoc"], [25, 5, 1, "", "akabs"], [25, 1, 1, "id821", "akbool"], [25, 5, 1, "id822", "akcast"], [25, 1, 1, "id823", "akfloat64"], [25, 1, 1, "id830", "akint64"], [25, 1, 1, "id834", "akuint64"], [25, 5, 1, "", "align"], [3, 0, 0, "-", "alignment"], [87, 5, 1, "", "all"], [25, 1, 1, "", "all_scalars"], [87, 5, 1, "", "any"], [90, 5, 1, "", "arange"], [25, 5, 1, "", "arccos"], [25, 5, 1, "", "arccosh"], [25, 5, 1, "", "arcsin"], [25, 5, 1, "", "arcsinh"], [25, 5, 1, "", "arctan"], [25, 5, 1, "", "arctan2"], [25, 5, 1, "", "arctanh"], [87, 5, 1, "", "argmax"], [87, 5, 1, "", "argmaxk"], [87, 5, 1, "", "argmin"], [87, 5, 1, "", "argmink"], [86, 5, 1, "", "argsort"], [84, 5, 1, "", "array"], [8, 0, 0, "-", "array_api"], [17, 0, 0, "-", "array_view"], [25, 5, 1, "", "assert_almost_equal"], [25, 5, 1, "", "assert_almost_equivalent"], [25, 5, 1, "", "assert_arkouda_array_equal"], [25, 5, 1, "", "assert_arkouda_array_equivalent"], [25, 5, 1, "", "assert_arkouda_pdarray_equal"], [25, 5, 1, "", "assert_arkouda_segarray_equal"], [25, 5, 1, "", "assert_arkouda_strings_equal"], [25, 5, 1, "", "assert_attr_equal"], [25, 5, 1, "", "assert_categorical_equal"], [25, 5, 1, "", "assert_class_equal"], [25, 5, 1, "", "assert_contains_all"], [25, 5, 1, "", "assert_copy"], [25, 5, 1, "", "assert_dict_equal"], [25, 5, 1, "", "assert_equal"], [25, 5, 1, "", "assert_equivalent"], [25, 5, 1, "", "assert_frame_equal"], [25, 5, 1, "", "assert_frame_equivalent"], [25, 5, 1, "", "assert_index_equal"], [25, 5, 1, "", "assert_index_equivalent"], [25, 5, 1, "", "assert_is_sorted"], [25, 5, 1, "", "assert_series_equal"], [25, 5, 1, "", "assert_series_equivalent"], [25, 5, 1, "", "attach"], [25, 5, 1, "", "attach_all"], [25, 5, 1, "", "attach_pdarray"], [25, 5, 1, "", "base_repr"], [25, 1, 1, "id846", "bigint"], [25, 5, 1, "", "bigint_from_uint_arrays"], [25, 5, 1, "", "binary_repr"], [25, 1, 1, "id854", "bitType"], [25, 1, 1, "", "bool_"], [25, 1, 1, "", "bool_scalars"], [25, 5, 1, "id858", "broadcast"], [25, 5, 1, "", "broadcast_dims"], [25, 5, 1, "", "broadcast_to_shape"], [25, 1, 1, "", "byte"], [25, 1, 1, "", "bytes_"], [95, 5, 1, "", "cast"], [18, 0, 0, "-", "categorical"], [25, 1, 1, "", "cdouble"], [25, 5, 1, "", "ceil"], [25, 1, 1, "", "cfloat"], [25, 1, 1, "", "character"], [25, 5, 1, "", "chisquare"], [25, 5, 1, "", "clear"], [19, 0, 0, "-", "client"], [20, 0, 0, "-", "client_dtypes"], [25, 5, 1, "", "clip"], [25, 1, 1, "", "clongdouble"], [25, 1, 1, "", "clongfloat"], [25, 5, 1, "", "clz"], [86, 5, 1, "", "coargsort"], [25, 1, 1, "", "complex128"], [25, 1, 1, "", "complex64"], [25, 5, 1, "", "compute_join_size"], [90, 5, 1, "", "concatenate"], [100, 5, 1, "", "connect"], [25, 5, 1, "", "convert_if_categorical"], [25, 5, 1, "", "corr"], [87, 5, 1, "", "cos"], [25, 5, 1, "", "cosh"], [25, 5, 1, "", "count_nonzero"], [25, 5, 1, "", "cov"], [25, 5, 1, "id867", "create_pdarray"], [25, 5, 1, "", "create_sparray"], [25, 1, 1, "", "csingle"], [25, 5, 1, "", "ctz"], [87, 5, 1, "", "cumprod"], [87, 5, 1, "", "cumsum"], [21, 0, 0, "-", "dataframe"], [25, 5, 1, "", "date_operators"], [25, 5, 1, "id870", "date_range"], [25, 1, 1, "", "datetime64"], [25, 5, 1, "", "deg2rad"], [25, 5, 1, "", "delete"], [25, 5, 1, "", "deprecate"], [25, 5, 1, "", "deprecate_with_doc"], [25, 5, 1, "", "disableVerbose"], [25, 5, 1, "", "disp"], [25, 5, 1, "", "divmod"], [25, 5, 1, "", "dot"], [25, 1, 1, "", "double"], [25, 5, 1, "id871", "dtype"], [22, 0, 0, "-", "dtypes"], [25, 3, 1, "", "e"], [25, 5, 1, "", "enableVerbose"], [25, 3, 1, "", "euler_gamma"], [87, 5, 1, "", "exp"], [25, 5, 1, "", "expm1"], [84, 5, 1, "", "export"], [25, 5, 1, "", "eye"], [25, 5, 1, "", "find"], [25, 1, 1, "", "finfo"], [25, 1, 1, "", "flexible"], [25, 1, 1, "", "float16"], [25, 1, 1, "", "float32"], [25, 1, 1, "", "float64"], [25, 1, 1, "", "float_"], [25, 1, 1, "", "float_scalars"], [25, 1, 1, "", "floating"], [25, 5, 1, "id878", "floor"], [25, 5, 1, "", "fmod"], [25, 5, 1, "", "format_float_positional"], [25, 5, 1, "", "format_float_scientific"], [25, 1, 1, "", "format_parser"], [25, 5, 1, "id879", "from_series"], [25, 5, 1, "id880", "full"], [25, 5, 1, "", "full_like"], [25, 5, 1, "id881", "gen_ranges"], [25, 5, 1, "", "generic_concat"], [25, 5, 1, "id882", "getArkoudaLogger"], [25, 5, 1, "", "get_byteorder"], [25, 5, 1, "", "get_callback"], [25, 5, 1, "", "get_columns"], [84, 5, 1, "", "get_datasets"], [25, 5, 1, "", "get_filetype"], [25, 5, 1, "", "get_null_indices"], [25, 5, 1, "", "get_server_byteorder"], [23, 0, 0, "-", "groupbyclass"], [25, 1, 1, "", "half"], [25, 5, 1, "", "hash"], [25, 5, 1, "", "hist_all"], [93, 5, 1, "", "histogram"], [25, 5, 1, "", "histogram2d"], [25, 5, 1, "", "histogramdd"], [24, 0, 0, "-", "history"], [25, 1, 1, "", "iinfo"], [84, 5, 1, "", "import_data"], [99, 5, 1, "", "in1d"], [25, 5, 1, "", "in1d_intervals"], [26, 0, 0, "-", "index"], [25, 5, 1, "", "indexof1d"], [25, 1, 1, "", "inexact"], [25, 3, 1, "", "inf"], [27, 0, 0, "-", "infoclass"], [25, 5, 1, "", "information"], [25, 3, 1, "", "infty"], [25, 1, 1, "", "int16"], [25, 1, 1, "", "int32"], [25, 1, 1, "id888", "int64"], [25, 1, 1, "", "int8"], [25, 1, 1, "id899", "intTypes"], [25, 1, 1, "", "int_"], [25, 1, 1, "id910", "int_scalars"], [25, 1, 1, "", "intc"], [25, 1, 1, "", "integer"], [25, 5, 1, "", "intersect"], [99, 5, 1, "", "intersect1d"], [25, 5, 1, "", "interval_lookup"], [25, 1, 1, "", "intp"], [25, 5, 1, "", "intx"], [25, 5, 1, "", "invert_permutation"], [28, 0, 0, "-", "io"], [29, 0, 0, "-", "io_util"], [25, 5, 1, "", "ip_address"], [25, 5, 1, "", "isSupportedFloat"], [25, 5, 1, "id913", "isSupportedInt"], [25, 5, 1, "", "isSupportedNumber"], [25, 5, 1, "", "is_cosorted"], [25, 5, 1, "", "is_ipv4"], [25, 5, 1, "", "is_ipv6"], [25, 5, 1, "", "is_registered"], [87, 5, 1, "", "is_sorted"], [25, 5, 1, "", "isfinite"], [25, 5, 1, "", "isinf"], [25, 5, 1, "id915", "isnan"], [25, 5, 1, "", "isscalar"], [25, 5, 1, "", "issctype"], [25, 5, 1, "", "issubclass_"], [25, 5, 1, "", "issubdtype"], [30, 0, 0, "-", "join"], [25, 5, 1, "", "join_on_eq_with_dt"], [25, 5, 1, "", "left_align"], [90, 5, 1, "", "linspace"], [25, 5, 1, "", "list_registry"], [25, 5, 1, "", "list_symbol_table"], [25, 5, 1, "", "load"], [25, 5, 1, "", "load_all"], [87, 5, 1, "", "log"], [25, 5, 1, "", "log10"], [25, 5, 1, "", "log1p"], [25, 5, 1, "", "log2"], [31, 0, 0, "-", "logger"], [25, 1, 1, "", "longdouble"], [25, 1, 1, "", "longfloat"], [25, 1, 1, "", "longlong"], [25, 5, 1, "", "lookup"], [25, 5, 1, "", "ls"], [25, 5, 1, "", "ls_csv"], [32, 0, 0, "-", "match"], [33, 0, 0, "-", "matcher"], [25, 5, 1, "", "matmul"], [87, 5, 1, "", "max"], [25, 5, 1, "", "maximum_sctype"], [87, 5, 1, "", "maxk"], [87, 5, 1, "", "mean"], [25, 5, 1, "", "median"], [25, 5, 1, "", "merge"], [87, 5, 1, "", "min"], [87, 5, 1, "", "mink"], [25, 5, 1, "", "mod"], [25, 3, 1, "", "nan"], [25, 1, 1, "", "number"], [34, 0, 0, "-", "numeric"], [25, 1, 1, "", "numeric_and_bool_scalars"], [25, 1, 1, "", "numeric_scalars"], [36, 0, 0, "-", "numpy"], [25, 1, 1, "", "numpy_scalars"], [25, 1, 1, "", "object_"], [90, 5, 1, "", "ones"], [90, 5, 1, "", "ones_like"], [25, 5, 1, "", "parity"], [95, 1, 1, "", "pdarray"], [37, 0, 0, "-", "pdarrayclass"], [38, 0, 0, "-", "pdarraycreation"], [39, 0, 0, "-", "pdarraymanipulation"], [40, 0, 0, "-", "pdarraysetops"], [25, 3, 1, "", "pi"], [25, 5, 1, "", "plot_dist"], [41, 0, 0, "-", "plotting"], [25, 5, 1, "", "popcount"], [25, 5, 1, "", "power"], [25, 5, 1, "", "power_divergence"], [25, 5, 1, "", "pretty_print_information"], [87, 5, 1, "", "prod"], [25, 5, 1, "", "promote_to_common_dtype"], [25, 5, 1, "", "putmask"], [25, 5, 1, "", "rad2deg"], [90, 5, 1, "", "randint"], [42, 0, 0, "-", "random"], [25, 5, 1, "", "random_sparse_matrix"], [25, 5, 1, "", "random_strings_lognormal"], [25, 5, 1, "", "random_strings_uniform"], [84, 5, 1, "", "read"], [25, 5, 1, "", "read_csv"], [25, 5, 1, "", "read_hdf"], [25, 5, 1, "", "read_parquet"], [25, 5, 1, "", "read_tagged_data"], [25, 5, 1, "", "read_zarr"], [25, 5, 1, "", "receive"], [25, 5, 1, "", "receive_dataframe"], [25, 5, 1, "", "register_all"], [25, 5, 1, "", "resolve_scalar_dtype"], [25, 5, 1, "", "restore"], [25, 5, 1, "", "right_align"], [25, 5, 1, "", "rotl"], [25, 5, 1, "", "rotr"], [25, 5, 1, "", "round"], [43, 0, 0, "-", "row"], [25, 5, 1, "", "save_all"], [25, 5, 1, "", "scalar_array"], [44, 0, 0, "-", "scipy"], [25, 1, 1, "", "sctypeDict"], [25, 1, 1, "", "sctypes"], [25, 5, 1, "", "search_intervals"], [47, 0, 0, "-", "security"], [48, 0, 0, "-", "segarray"], [49, 0, 0, "-", "series"], [99, 5, 1, "", "setdiff1d"], [99, 5, 1, "", "setxor1d"], [25, 1, 1, "", "short"], [25, 5, 1, "", "sign"], [25, 1, 1, "", "signedinteger"], [87, 5, 1, "", "sin"], [25, 1, 1, "", "single"], [25, 5, 1, "", "sinh"], [25, 5, 1, "", "skew"], [25, 5, 1, "", "snapshot"], [25, 5, 1, "", "sort"], [50, 0, 0, "-", "sorting"], [25, 1, 1, "", "sparray"], [51, 0, 0, "-", "sparrayclass"], [25, 5, 1, "", "sparse_matrix_matrix_mult"], [52, 0, 0, "-", "sparsematrix"], [25, 5, 1, "", "sqrt"], [25, 5, 1, "", "square"], [25, 5, 1, "id1289", "standard_normal"], [87, 5, 1, "", "std"], [25, 1, 1, "id1290", "str_"], [25, 1, 1, "", "str_scalars"], [25, 5, 1, "", "string_operators"], [53, 0, 0, "-", "strings"], [87, 5, 1, "", "sum"], [25, 5, 1, "", "tan"], [25, 5, 1, "", "tanh"], [54, 0, 0, "-", "testing"], [55, 0, 0, "-", "timeclass"], [25, 1, 1, "", "timedelta64"], [25, 5, 1, "id1358", "timedelta_range"], [25, 5, 1, "", "to_csv"], [25, 5, 1, "", "to_hdf"], [25, 5, 1, "", "to_parquet"], [25, 5, 1, "", "to_zarr"], [25, 5, 1, "", "transpose"], [25, 5, 1, "", "tril"], [25, 5, 1, "", "triu"], [25, 5, 1, "", "trunc"], [25, 5, 1, "", "typename"], [25, 1, 1, "", "ubyte"], [25, 1, 1, "", "uint"], [25, 1, 1, "", "uint16"], [25, 1, 1, "", "uint32"], [25, 1, 1, "", "uint64"], [25, 1, 1, "", "uint8"], [25, 1, 1, "", "uintc"], [25, 1, 1, "", "uintp"], [25, 1, 1, "", "ulonglong"], [25, 5, 1, "id1359", "uniform"], [99, 5, 1, "", "union1d"], [99, 5, 1, "", "unique"], [25, 5, 1, "", "unregister"], [25, 5, 1, "", "unregister_all"], [25, 5, 1, "", "unregister_pdarray_by_name"], [25, 1, 1, "", "unsignedinteger"], [25, 5, 1, "", "unsqueeze"], [25, 5, 1, "", "update_hdf"], [25, 1, 1, "", "ushort"], [56, 0, 0, "-", "util"], [93, 5, 1, "", "value_counts"], [87, 5, 1, "", "var"], [25, 5, 1, "", "vecdot"], [25, 1, 1, "", "void"], [25, 5, 1, "", "vstack"], [87, 5, 1, "", "where"], [25, 5, 1, "", "write_log"], [25, 5, 1, "", "xlogy"], [25, 5, 1, "", "zero_up"], [90, 5, 1, "", "zeros"], [90, 5, 1, "", "zeros_like"]], "arkouda.ARKOUDA_SUPPORTED_DTYPES": [[25, 2, 1, "", "copy"], [25, 2, 1, "", "difference"], [25, 2, 1, "", "intersection"], [25, 2, 1, "", "isdisjoint"], [25, 2, 1, "", "issubset"], [25, 2, 1, "", "issuperset"], [25, 2, 1, "", "symmetric_difference"], [25, 2, 1, "", "union"]], "arkouda.ArrayView": [[88, 4, 1, "", "base"], [88, 4, 1, "", "dtype"], [88, 4, 1, "", "itemsize"], [88, 4, 1, "", "ndim"], [25, 4, 1, "", "objType"], [88, 4, 1, "", "order"], [88, 4, 1, "", "shape"], [88, 4, 1, "", "size"], [25, 2, 1, "", "to_hdf"], [25, 2, 1, "", "to_list"], [88, 5, 1, "", "to_ndarray"], [25, 2, 1, "", "update_hdf"]], "arkouda.BitVector": [[25, 4, 1, "", "conserves"], [25, 2, 1, "", "format"], [25, 2, 1, "", "from_return_msg"], [25, 2, 1, "", "opeq"], [25, 2, 1, "", "register"], [25, 4, 1, "", "registered_name"], [25, 4, 1, "", "reverse"], [25, 4, 1, "", "special_objType"], [25, 2, 1, "", "to_list"], [25, 2, 1, "", "to_ndarray"], [25, 4, 1, "", "values"], [25, 4, 1, "", "width"]], "arkouda.Categorical": [[25, 4, 1, "id79", "BinOps"], [25, 4, 1, "id80", "RegisterablePieces"], [25, 4, 1, "id81", "RequiredPieces"], [25, 2, 1, "id82", "argsort"], [25, 2, 1, "id83", "attach"], [89, 4, 1, "", "categories"], [89, 4, 1, "", "codes"], [25, 2, 1, "id84", "concatenate"], [89, 2, 1, "", "contains"], [25, 4, 1, "id86", "dtype"], [89, 2, 1, "", "endswith"], [25, 2, 1, "id88", "equals"], [89, 2, 1, "", "from_codes"], [25, 2, 1, "id90", "from_return_msg"], [25, 2, 1, "id91", "group"], [25, 2, 1, "id92", "hash"], [25, 2, 1, "id93", "in1d"], [25, 6, 1, "id94", "inferred_type"], [25, 2, 1, "id95", "info"], [25, 2, 1, "id96", "is_registered"], [25, 2, 1, "id97", "isna"], [25, 4, 1, "id98", "logger"], [25, 6, 1, "id99", "nbytes"], [89, 4, 1, "", "ndim"], [89, 4, 1, "", "nlevels"], [25, 4, 1, "id102", "objType"], [25, 2, 1, "id103", "parse_hdf_categoricals"], [89, 4, 1, "", "permutation"], [25, 2, 1, "id105", "pretty_print_info"], [25, 2, 1, "id106", "register"], [25, 4, 1, "id107", "registered_name"], [25, 2, 1, "id108", "reset_categories"], [25, 2, 1, "id109", "save"], [89, 4, 1, "", "segments"], [25, 2, 1, "id111", "set_categories"], [89, 4, 1, "", "shape"], [89, 4, 1, "", "size"], [25, 2, 1, "id114", "sort_values"], [25, 2, 1, "id115", "standardize_categories"], [89, 2, 1, "", "startswith"], [25, 2, 1, "id117", "to_hdf"], [25, 2, 1, "id118", "to_list"], [89, 5, 1, "", "to_ndarray"], [25, 2, 1, "id120", "to_pandas"], [25, 2, 1, "id121", "to_parquet"], [25, 2, 1, "id122", "to_strings"], [25, 2, 1, "id123", "transfer"], [25, 2, 1, "id124", "unique"], [25, 2, 1, "id125", "unregister"], [25, 2, 1, "id126", "unregister_categorical_by_name"], [25, 2, 1, "id127", "update_hdf"]], "arkouda.DType": [[25, 2, 1, "", "BIGINT"], [25, 2, 1, "", "BOOL"], [25, 2, 1, "", "COMPLEX128"], [25, 2, 1, "", "COMPLEX64"], [25, 2, 1, "", "FLOAT"], [25, 2, 1, "", "FLOAT32"], [25, 2, 1, "", "FLOAT64"], [25, 2, 1, "", "INT"], [25, 2, 1, "", "INT16"], [25, 2, 1, "", "INT32"], [25, 2, 1, "", "INT64"], [25, 2, 1, "", "INT8"], [25, 2, 1, "", "STR"], [25, 2, 1, "", "UINT"], [25, 2, 1, "", "UINT16"], [25, 2, 1, "", "UINT32"], [25, 2, 1, "", "UINT64"], [25, 2, 1, "", "UINT8"], [25, 2, 1, "", "name"], [25, 2, 1, "", "value"]], "arkouda.DTypeObjects": [[25, 2, 1, "", "copy"], [25, 2, 1, "", "difference"], [25, 2, 1, "", "intersection"], [25, 2, 1, "", "isdisjoint"], [25, 2, 1, "", "issubset"], [25, 2, 1, "", "issuperset"], [25, 2, 1, "", "symmetric_difference"], [25, 2, 1, "", "union"]], "arkouda.DTypes": [[25, 2, 1, "", "copy"], [25, 2, 1, "", "difference"], [25, 2, 1, "", "intersection"], [25, 2, 1, "", "isdisjoint"], [25, 2, 1, "", "issubset"], [25, 2, 1, "", "issuperset"], [25, 2, 1, "", "symmetric_difference"], [25, 2, 1, "", "union"]], "arkouda.DataFrame": [[25, 2, 1, "id129", "GroupBy"], [25, 2, 1, "id130", "all"], [25, 2, 1, "id131", "any"], [25, 2, 1, "id132", "append"], [91, 5, 1, "", "apply_permutation"], [91, 5, 1, "", "argsort"], [25, 2, 1, "id135", "assign"], [25, 2, 1, "id136", "attach"], [91, 5, 1, "", "coargsort"], [25, 6, 1, "id138", "columns"], [91, 5, 1, "", "concat"], [91, 5, 1, "", "copy"], [25, 2, 1, "id140", "corr"], [25, 2, 1, "id141", "count"], [91, 5, 1, "", "drop"], [91, 5, 1, "", "drop_duplicates"], [25, 2, 1, "id144", "dropna"], [25, 6, 1, "id145", "dtypes"], [25, 6, 1, "id146", "empty"], [25, 2, 1, "id147", "filter_by_range"], [25, 2, 1, "id148", "from_pandas"], [25, 2, 1, "id149", "from_return_msg"], [91, 5, 1, "", "groupby"], [91, 5, 1, "", "head"], [25, 6, 1, "id152", "index"], [25, 6, 1, "id153", "info"], [25, 2, 1, "id154", "is_registered"], [25, 2, 1, "id155", "isin"], [25, 2, 1, "id156", "isna"], [25, 2, 1, "id157", "load"], [25, 2, 1, "id158", "memory_usage"], [25, 2, 1, "id159", "memory_usage_info"], [25, 2, 1, "id160", "merge"], [25, 2, 1, "id161", "notna"], [25, 2, 1, "id162", "objType"], [25, 2, 1, "id163", "read_csv"], [25, 2, 1, "id164", "register"], [91, 5, 1, "", "rename"], [91, 5, 1, "", "reset_index"], [25, 2, 1, "id167", "sample"], [25, 2, 1, "id168", "save"], [25, 6, 1, "id169", "shape"], [25, 6, 1, "id170", "size"], [25, 2, 1, "id171", "sort_index"], [91, 5, 1, "", "sort_values"], [91, 5, 1, "", "tail"], [25, 2, 1, "id174", "to_csv"], [25, 2, 1, "id175", "to_hdf"], [25, 2, 1, "id176", "to_markdown"], [91, 5, 1, "", "to_pandas"], [25, 2, 1, "id178", "to_parquet"], [25, 2, 1, "id179", "transfer"], [25, 2, 1, "id180", "unregister"], [25, 2, 1, "id181", "unregister_dataframe_by_name"], [25, 2, 1, "id182", "update_hdf"], [25, 2, 1, "id183", "update_nrows"]], "arkouda.DataFrameGroupBy": [[25, 2, 1, "", "all"], [25, 2, 1, "", "any"], [25, 2, 1, "", "argmax"], [25, 2, 1, "", "argmin"], [25, 4, 1, "", "as_index"], [25, 2, 1, "", "broadcast"], [25, 2, 1, "", "count"], [25, 4, 1, "", "df"], [25, 2, 1, "", "diff"], [25, 2, 1, "", "first"], [25, 4, 1, "", "gb"], [25, 4, 1, "", "gb_key_names"], [25, 2, 1, "", "head"], [25, 2, 1, "", "max"], [25, 2, 1, "", "mean"], [25, 2, 1, "", "median"], [25, 2, 1, "", "min"], [25, 2, 1, "", "mode"], [25, 2, 1, "", "nunique"], [25, 2, 1, "", "prod"], [25, 2, 1, "", "sample"], [25, 2, 1, "", "size"], [25, 2, 1, "", "std"], [25, 2, 1, "", "sum"], [25, 2, 1, "", "tail"], [25, 2, 1, "", "unique"], [25, 2, 1, "", "var"], [25, 2, 1, "", "xor"]], "arkouda.DataSource": [[25, 2, 1, "", "abspath"], [25, 2, 1, "", "exists"], [25, 2, 1, "", "open"]], "arkouda.Datetime": [[25, 6, 1, "id218", "date"], [25, 6, 1, "id219", "day"], [25, 6, 1, "id220", "day_of_week"], [25, 6, 1, "id221", "day_of_year"], [25, 6, 1, "id222", "dayofweek"], [25, 6, 1, "id223", "dayofyear"], [25, 6, 1, "id224", "hour"], [25, 6, 1, "id225", "is_leap_year"], [25, 2, 1, "id226", "is_registered"], [25, 2, 1, "id227", "isocalendar"], [25, 6, 1, "id228", "microsecond"], [25, 6, 1, "id229", "millisecond"], [25, 6, 1, "id230", "minute"], [25, 6, 1, "id231", "month"], [25, 6, 1, "id232", "nanosecond"], [25, 2, 1, "id233", "register"], [25, 6, 1, "id234", "second"], [25, 4, 1, "id235", "special_objType"], [25, 2, 1, "id236", "sum"], [25, 4, 1, "id237", "supported_opeq"], [25, 4, 1, "id238", "supported_with_datetime"], [25, 4, 1, "id239", "supported_with_pdarray"], [25, 4, 1, "id240", "supported_with_r_datetime"], [25, 4, 1, "id241", "supported_with_r_pdarray"], [25, 4, 1, "id242", "supported_with_r_timedelta"], [25, 4, 1, "id243", "supported_with_timedelta"], [25, 2, 1, "id244", "to_pandas"], [25, 2, 1, "id245", "unregister"], [25, 6, 1, "id246", "week"], [25, 6, 1, "id247", "weekday"], [25, 6, 1, "id248", "weekofyear"], [25, 6, 1, "id249", "year"]], "arkouda.DatetimeAccessor": [[25, 4, 1, "", "data"], [25, 4, 1, "", "series"]], "arkouda.DiffAggregate": [[25, 2, 1, "", "all"], [25, 2, 1, "", "any"], [25, 2, 1, "", "argmax"], [25, 2, 1, "", "argmin"], [25, 2, 1, "", "count"], [25, 2, 1, "", "first"], [25, 4, 1, "", "gb"], [25, 2, 1, "", "max"], [25, 2, 1, "", "mean"], [25, 2, 1, "", "median"], [25, 2, 1, "", "min"], [25, 2, 1, "", "mode"], [25, 2, 1, "", "nunique"], [25, 2, 1, "", "prod"], [25, 2, 1, "", "std"], [25, 2, 1, "", "sum"], [25, 2, 1, "", "unique"], [25, 4, 1, "", "values"], [25, 2, 1, "", "var"], [25, 2, 1, "", "xor"]], "arkouda.ErrorMode": [[25, 4, 1, "", "ignore"], [25, 4, 1, "", "return_validity"], [25, 4, 1, "", "strict"]], "arkouda.Fields": [[25, 4, 1, "", "MSB_left"], [25, 2, 1, "", "format"], [25, 4, 1, "", "name"], [25, 4, 1, "", "names"], [25, 4, 1, "", "namewidth"], [25, 2, 1, "", "opeq"], [25, 4, 1, "", "pad"], [25, 4, 1, "", "padchar"], [25, 4, 1, "", "separator"], [25, 4, 1, "", "show_int"], [25, 4, 1, "", "width"]], "arkouda.GROUPBY_REDUCTION_TYPES": [[25, 2, 1, "", "copy"], [25, 2, 1, "", "difference"], [25, 2, 1, "", "intersection"], [25, 2, 1, "", "isdisjoint"], [25, 2, 1, "", "issubset"], [25, 2, 1, "", "issuperset"], [25, 2, 1, "", "symmetric_difference"], [25, 2, 1, "", "union"]], "arkouda.Generator": [[25, 2, 1, "", "choice"], [25, 2, 1, "", "exponential"], [25, 2, 1, "", "integers"], [25, 2, 1, "", "logistic"], [25, 2, 1, "", "lognormal"], [25, 2, 1, "", "normal"], [25, 2, 1, "", "permutation"], [25, 2, 1, "", "poisson"], [25, 2, 1, "", "random"], [25, 2, 1, "", "shuffle"], [25, 2, 1, "", "standard_exponential"], [25, 2, 1, "", "standard_normal"], [25, 2, 1, "", "uniform"]], "arkouda.GroupBy": [[92, 2, 1, "", "AND"], [92, 2, 1, "", "OR"], [25, 2, 1, "id450", "Reductions"], [92, 2, 1, "", "XOR"], [92, 2, 1, "", "aggregate"], [92, 2, 1, "", "all"], [92, 2, 1, "", "any"], [92, 2, 1, "", "argmax"], [92, 2, 1, "", "argmin"], [92, 2, 1, "", "attach"], [92, 2, 1, "", "broadcast"], [92, 2, 1, "", "build_from_components"], [92, 2, 1, "", "count"], [92, 4, 1, "", "dropna"], [92, 2, 1, "", "first"], [25, 2, 1, "id462", "from_return_msg"], [92, 2, 1, "", "head"], [92, 2, 1, "", "is_registered"], [92, 4, 1, "", "logger"], [92, 2, 1, "", "max"], [92, 2, 1, "", "mean"], [92, 2, 1, "", "median"], [92, 2, 1, "", "min"], [92, 2, 1, "", "mode"], [92, 2, 1, "", "most_common"], [92, 4, 1, "", "ngroups"], [92, 4, 1, "", "nkeys"], [92, 2, 1, "", "nunique"], [25, 2, 1, "id472", "objType"], [92, 4, 1, "", "permutation"], [92, 2, 1, "", "prod"], [92, 2, 1, "", "register"], [92, 2, 1, "", "sample"], [92, 4, 1, "", "segments"], [92, 2, 1, "id0", "size"], [92, 2, 1, "", "std"], [92, 2, 1, "", "sum"], [92, 2, 1, "", "tail"], [92, 2, 1, "", "to_hdf"], [92, 2, 1, "", "unique"], [92, 4, 1, "", "unique_keys"], [92, 2, 1, "", "unregister"], [92, 2, 1, "", "unregister_groupby_by_name"], [25, 2, 1, "id484", "update_hdf"], [92, 2, 1, "", "var"]], "arkouda.IPv4": [[25, 2, 1, "", "export_uint"], [25, 2, 1, "", "format"], [25, 2, 1, "", "normalize"], [25, 2, 1, "", "opeq"], [25, 2, 1, "", "register"], [25, 4, 1, "", "special_objType"], [25, 2, 1, "", "to_hdf"], [25, 2, 1, "", "to_list"], [25, 2, 1, "", "to_ndarray"], [25, 2, 1, "", "update_hdf"], [25, 4, 1, "", "values"]], "arkouda.Index": [[85, 5, 1, "", "argsort"], [85, 5, 1, "", "concat"], [25, 2, 1, "", "equals"], [25, 2, 1, "", "factory"], [25, 2, 1, "", "from_return_msg"], [25, 6, 1, "", "index"], [25, 6, 1, "", "inferred_type"], [25, 2, 1, "", "is_registered"], [85, 5, 1, "", "lookup"], [25, 2, 1, "", "map"], [25, 4, 1, "", "max_list_size"], [25, 2, 1, "", "memory_usage"], [25, 6, 1, "", "names"], [25, 6, 1, "", "ndim"], [25, 6, 1, "", "nlevels"], [25, 4, 1, "", "objType"], [25, 2, 1, "", "register"], [25, 4, 1, "", "registered_name"], [25, 2, 1, "", "save"], [85, 5, 1, "", "set_dtype"], [25, 6, 1, "", "shape"], [25, 2, 1, "", "to_csv"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "to_hdf"], [25, 2, 1, "", "to_list"], [25, 2, 1, "", "to_ndarray"], [25, 2, 1, "", "to_pandas"], [25, 2, 1, "", "to_parquet"], [25, 2, 1, "", "unregister"], [25, 2, 1, "", "update_hdf"]], "arkouda.LogLevel": [[25, 4, 1, "", "CRITICAL"], [25, 4, 1, "", "DEBUG"], [25, 4, 1, "", "ERROR"], [25, 4, 1, "", "INFO"], [25, 4, 1, "", "WARN"]], "arkouda.MultiIndex": [[85, 5, 1, "", "argsort"], [85, 5, 1, "", "concat"], [25, 6, 1, "", "dtype"], [25, 2, 1, "", "equal_levels"], [25, 4, 1, "", "first"], [25, 2, 1, "", "get_level_values"], [25, 6, 1, "", "index"], [25, 6, 1, "", "inferred_type"], [25, 2, 1, "", "is_registered"], [25, 4, 1, "", "levels"], [85, 5, 1, "", "lookup"], [25, 2, 1, "", "memory_usage"], [25, 6, 1, "", "name"], [25, 6, 1, "", "names"], [25, 6, 1, "", "ndim"], [25, 6, 1, "", "nlevels"], [25, 4, 1, "", "objType"], [25, 2, 1, "", "register"], [25, 4, 1, "", "registered_name"], [85, 5, 1, "", "set_dtype"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "to_hdf"], [25, 2, 1, "", "to_list"], [25, 2, 1, "", "to_ndarray"], [25, 2, 1, "", "to_pandas"], [25, 2, 1, "", "unregister"], [25, 2, 1, "", "update_hdf"]], "arkouda.NUMBER_FORMAT_STRINGS": [[25, 2, 1, "", "clear"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "fromkeys"], [25, 2, 1, "", "get"], [25, 2, 1, "", "items"], [25, 2, 1, "", "keys"], [25, 2, 1, "", "pop"], [25, 2, 1, "", "popitem"], [25, 2, 1, "", "setdefault"], [25, 2, 1, "", "update"], [25, 2, 1, "", "values"]], "arkouda.NumericDTypes": [[25, 2, 1, "", "copy"], [25, 2, 1, "", "difference"], [25, 2, 1, "", "intersection"], [25, 2, 1, "", "isdisjoint"], [25, 2, 1, "", "issubset"], [25, 2, 1, "", "issuperset"], [25, 2, 1, "", "symmetric_difference"], [25, 2, 1, "", "union"]], "arkouda.Power_divergenceResult": [[25, 4, 1, "", "pvalue"], [25, 4, 1, "", "statistic"]], "arkouda.ScalarDTypes": [[25, 2, 1, "", "copy"], [25, 2, 1, "", "difference"], [25, 2, 1, "", "intersection"], [25, 2, 1, "", "isdisjoint"], [25, 2, 1, "", "issubset"], [25, 2, 1, "", "issuperset"], [25, 2, 1, "", "symmetric_difference"], [25, 2, 1, "", "union"]], "arkouda.ScalarType": [[25, 2, 1, "", "count"], [25, 2, 1, "", "index"]], "arkouda.SegArray": [[25, 2, 1, "", "AND"], [25, 2, 1, "", "OR"], [25, 2, 1, "", "XOR"], [25, 2, 1, "", "aggregate"], [25, 2, 1, "", "all"], [25, 2, 1, "", "any"], [97, 5, 1, "", "append"], [97, 5, 1, "", "append_single"], [25, 2, 1, "", "argmax"], [25, 2, 1, "", "argmin"], [25, 2, 1, "", "attach"], [25, 2, 1, "", "concat"], [25, 2, 1, "", "copy"], [25, 4, 1, "", "dtype"], [25, 2, 1, "", "filter"], [25, 2, 1, "", "from_multi_array"], [25, 2, 1, "", "from_parts"], [25, 2, 1, "", "from_return_msg"], [97, 5, 1, "", "get_jth"], [97, 5, 1, "", "get_length_n"], [97, 5, 1, "", "get_ngrams"], [97, 5, 1, "", "get_prefixes"], [97, 5, 1, "", "get_suffixes"], [25, 6, 1, "", "grouping"], [25, 2, 1, "", "hash"], [97, 5, 1, "", "intersect"], [25, 2, 1, "", "is_registered"], [25, 2, 1, "", "load"], [25, 4, 1, "", "logger"], [25, 2, 1, "", "max"], [25, 2, 1, "", "mean"], [25, 2, 1, "", "min"], [25, 6, 1, "", "nbytes"], [25, 6, 1, "", "non_empty"], [25, 2, 1, "", "nunique"], [25, 4, 1, "", "objType"], [97, 5, 1, "", "prepend_single"], [25, 2, 1, "", "prod"], [25, 2, 1, "", "read_hdf"], [25, 2, 1, "", "register"], [25, 4, 1, "", "registered_name"], [97, 5, 1, "", "remove_repeats"], [25, 2, 1, "", "save"], [25, 4, 1, "", "segments"], [97, 5, 1, "", "set_jth"], [97, 5, 1, "", "setdiff"], [97, 5, 1, "", "setxor"], [25, 4, 1, "", "size"], [25, 2, 1, "", "sum"], [25, 2, 1, "", "to_hdf"], [25, 2, 1, "", "to_list"], [97, 5, 1, "", "to_ndarray"], [25, 2, 1, "", "to_parquet"], [25, 2, 1, "", "transfer"], [97, 5, 1, "", "union"], [25, 2, 1, "", "unique"], [25, 2, 1, "", "unregister"], [25, 2, 1, "", "unregister_segarray_by_name"], [25, 2, 1, "", "update_hdf"], [25, 4, 1, "", "valsize"], [25, 4, 1, "", "values"]], "arkouda.Series": [[25, 2, 1, "", "add"], [25, 2, 1, "", "argmax"], [25, 2, 1, "", "argmin"], [25, 6, 1, "", "at"], [25, 2, 1, "", "attach"], [25, 2, 1, "", "concat"], [25, 2, 1, "", "diff"], [25, 2, 1, "", "dt"], [25, 6, 1, "", "dtype"], [25, 2, 1, "", "fillna"], [25, 2, 1, "", "from_return_msg"], [25, 2, 1, "", "has_repeat_labels"], [25, 2, 1, "", "hasnans"], [98, 5, 1, "", "head"], [25, 6, 1, "", "iat"], [25, 6, 1, "", "iloc"], [25, 2, 1, "", "is_registered"], [25, 2, 1, "", "isin"], [25, 2, 1, "", "isna"], [25, 2, 1, "", "isnull"], [25, 6, 1, "", "loc"], [98, 5, 1, "id0", "locate"], [25, 2, 1, "", "map"], [25, 2, 1, "", "max"], [25, 2, 1, "", "mean"], [25, 2, 1, "", "memory_usage"], [25, 2, 1, "", "min"], [25, 6, 1, "", "ndim"], [25, 2, 1, "", "notna"], [25, 2, 1, "", "notnull"], [25, 2, 1, "", "objType"], [98, 5, 1, "", "pdconcat"], [25, 2, 1, "", "prod"], [25, 2, 1, "", "register"], [25, 6, 1, "", "shape"], [98, 5, 1, "", "sort_index"], [98, 5, 1, "", "sort_values"], [25, 2, 1, "", "std"], [25, 2, 1, "", "str_acc"], [25, 2, 1, "", "sum"], [98, 5, 1, "", "tail"], [25, 2, 1, "", "to_dataframe"], [25, 2, 1, "", "to_list"], [25, 2, 1, "", "to_markdown"], [25, 2, 1, "", "to_ndarray"], [98, 5, 1, "", "to_pandas"], [98, 5, 1, "", "topn"], [25, 2, 1, "", "unregister"], [25, 2, 1, "", "validate_key"], [25, 2, 1, "", "validate_val"], [98, 5, 1, "", "value_counts"], [25, 2, 1, "", "var"]], "arkouda.SeriesDTypes": [[25, 2, 1, "", "clear"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "fromkeys"], [25, 2, 1, "", "get"], [25, 2, 1, "", "items"], [25, 2, 1, "", "keys"], [25, 2, 1, "", "pop"], [25, 2, 1, "", "popitem"], [25, 2, 1, "", "setdefault"], [25, 2, 1, "", "update"], [25, 2, 1, "", "values"]], "arkouda.StringAccessor": [[25, 4, 1, "", "data"], [25, 4, 1, "", "series"]], "arkouda.Strings": [[25, 4, 1, "id732", "BinOps"], [25, 2, 1, "id733", "astype"], [25, 2, 1, "id734", "attach"], [25, 2, 1, "id735", "cached_regex_patterns"], [25, 2, 1, "id736", "capitalize"], [101, 2, 1, "", "contains"], [25, 2, 1, "id738", "decode"], [25, 4, 1, "id739", "dtype"], [25, 2, 1, "id740", "encode"], [101, 2, 1, "", "endswith"], [25, 4, 1, "id742", "entry"], [25, 2, 1, "id743", "equals"], [101, 2, 1, "", "find_locations"], [101, 2, 1, "", "findall"], [101, 2, 1, "", "flatten"], [25, 2, 1, "id747", "from_parts"], [25, 2, 1, "id748", "from_return_msg"], [101, 2, 1, "", "fullmatch"], [25, 2, 1, "id750", "get_bytes"], [25, 2, 1, "id751", "get_lengths"], [25, 2, 1, "id752", "get_offsets"], [25, 2, 1, "id753", "get_prefixes"], [25, 2, 1, "id754", "get_suffixes"], [25, 2, 1, "id755", "group"], [25, 2, 1, "id756", "hash"], [25, 6, 1, "id757", "inferred_type"], [25, 2, 1, "id758", "info"], [25, 2, 1, "id759", "is_registered"], [25, 2, 1, "id760", "isalnum"], [25, 2, 1, "id761", "isalpha"], [25, 2, 1, "id762", "isdecimal"], [25, 2, 1, "id763", "isdigit"], [25, 2, 1, "id764", "isempty"], [25, 2, 1, "id765", "islower"], [25, 2, 1, "id766", "isspace"], [25, 2, 1, "id767", "istitle"], [25, 2, 1, "id768", "isupper"], [25, 4, 1, "id769", "logger"], [25, 2, 1, "id770", "lower"], [101, 2, 1, "", "lstick"], [101, 2, 1, "", "match"], [25, 4, 1, "id727", "nbytes"], [25, 4, 1, "id728", "ndim"], [25, 4, 1, "id773", "objType"], [101, 2, 1, "", "peel"], [25, 2, 1, "id775", "pretty_print_info"], [25, 2, 1, "id776", "purge_cached_regex_patterns"], [25, 2, 1, "id777", "register"], [25, 4, 1, "id778", "registered_name"], [101, 2, 1, "", "rpeel"], [25, 2, 1, "id780", "save"], [101, 2, 1, "", "search"], [25, 4, 1, "id729", "shape"], [25, 4, 1, "id726", "size"], [101, 2, 1, "", "split"], [101, 2, 1, "", "startswith"], [101, 2, 1, "", "stick"], [25, 2, 1, "id785", "strip"], [101, 2, 1, "", "sub"], [101, 2, 1, "", "subn"], [25, 2, 1, "id788", "title"], [25, 2, 1, "id789", "to_csv"], [25, 2, 1, "id790", "to_hdf"], [25, 2, 1, "id791", "to_list"], [101, 5, 1, "", "to_ndarray"], [25, 2, 1, "id793", "to_parquet"], [25, 2, 1, "id794", "transfer"], [25, 2, 1, "id795", "unregister"], [25, 2, 1, "id796", "unregister_strings_by_name"], [25, 2, 1, "id797", "update_hdf"], [25, 2, 1, "id798", "upper"]], "arkouda.Timedelta": [[25, 2, 1, "id800", "abs"], [25, 6, 1, "id801", "components"], [25, 6, 1, "id802", "days"], [25, 2, 1, "id803", "is_registered"], [25, 6, 1, "id804", "microseconds"], [25, 6, 1, "id805", "nanoseconds"], [25, 2, 1, "id806", "register"], [25, 6, 1, "id807", "seconds"], [25, 4, 1, "id808", "special_objType"], [25, 2, 1, "id809", "std"], [25, 2, 1, "id810", "sum"], [25, 4, 1, "id811", "supported_opeq"], [25, 4, 1, "id812", "supported_with_datetime"], [25, 4, 1, "id813", "supported_with_pdarray"], [25, 4, 1, "id814", "supported_with_r_datetime"], [25, 4, 1, "id815", "supported_with_r_pdarray"], [25, 4, 1, "id816", "supported_with_r_timedelta"], [25, 4, 1, "id817", "supported_with_timedelta"], [25, 2, 1, "id818", "to_pandas"], [25, 2, 1, "id819", "total_seconds"], [25, 2, 1, "id820", "unregister"]], "arkouda.accessor": [[2, 1, 1, "", "CachedAccessor"], [2, 1, 1, "", "DatetimeAccessor"], [2, 1, 1, "", "Properties"], [2, 1, 1, "", "StringAccessor"], [2, 5, 1, "", "date_operators"], [2, 5, 1, "", "string_operators"]], "arkouda.accessor.DatetimeAccessor": [[2, 4, 1, "", "data"], [2, 4, 1, "", "series"]], "arkouda.accessor.StringAccessor": [[2, 4, 1, "", "data"], [2, 4, 1, "", "series"]], "arkouda.akfloat64": [[25, 2, 1, "id824", "as_integer_ratio"], [25, 2, 1, "id825", "fromhex"], [25, 2, 1, "id826", "hex"], [25, 2, 1, "id827", "is_integer"]], "arkouda.akint64": [[25, 2, 1, "id831", "bit_count"]], "arkouda.akuint64": [[25, 2, 1, "id835", "bit_count"]], "arkouda.alignment": [[3, 7, 1, "", "NonUniqueError"], [3, 5, 1, "", "align"], [3, 5, 1, "", "find"], [3, 5, 1, "", "in1d_intervals"], [3, 5, 1, "", "interval_lookup"], [3, 5, 1, "", "is_cosorted"], [3, 5, 1, "", "left_align"], [3, 5, 1, "", "lookup"], [3, 5, 1, "", "right_align"], [3, 5, 1, "", "search_intervals"], [3, 5, 1, "", "unsqueeze"], [3, 5, 1, "", "zero_up"]], "arkouda.array_api": [[8, 1, 1, "", "Array"], [4, 0, 0, "-", "array_object"], [5, 0, 0, "-", "creation_functions"], [6, 0, 0, "-", "data_type_functions"], [7, 0, 0, "-", "elementwise_functions"], [9, 0, 0, "-", "indexing_functions"], [10, 0, 0, "-", "linalg"], [11, 0, 0, "-", "manipulation_functions"], [12, 0, 0, "-", "searching_functions"], [13, 0, 0, "-", "set_functions"], [14, 0, 0, "-", "sorting_functions"], [15, 0, 0, "-", "statistical_functions"], [16, 0, 0, "-", "utility_functions"]], "arkouda.array_api.Array": [[8, 6, 1, "", "T"], [8, 2, 1, "", "chunk_info"], [8, 6, 1, "", "device"], [8, 6, 1, "", "dtype"], [8, 2, 1, "", "item"], [8, 6, 1, "", "mT"], [8, 6, 1, "", "ndim"], [8, 6, 1, "", "shape"], [8, 6, 1, "", "size"], [8, 2, 1, "", "to_device"], [8, 2, 1, "", "to_ndarray"], [8, 2, 1, "", "tolist"], [8, 2, 1, "", "transpose"]], "arkouda.array_api.array_object": [[4, 1, 1, "", "Array"], [4, 3, 1, "", "HANDLED_FUNCTIONS"], [4, 5, 1, "", "implements_numpy"]], "arkouda.array_api.array_object.Array": [[4, 6, 1, "", "T"], [4, 2, 1, "", "chunk_info"], [4, 6, 1, "", "device"], [4, 6, 1, "", "dtype"], [4, 2, 1, "", "item"], [4, 6, 1, "", "mT"], [4, 6, 1, "", "ndim"], [4, 6, 1, "", "shape"], [4, 6, 1, "", "size"], [4, 2, 1, "", "to_device"], [4, 2, 1, "", "to_ndarray"], [4, 2, 1, "", "tolist"], [4, 2, 1, "", "transpose"]], "arkouda.array_api.creation_functions": [[5, 5, 1, "", "arange"], [5, 5, 1, "", "asarray"], [5, 5, 1, "", "empty"], [5, 5, 1, "", "empty_like"], [5, 5, 1, "", "eye"], [5, 5, 1, "", "from_dlpack"], [5, 5, 1, "", "full"], [5, 5, 1, "", "full_like"], [5, 5, 1, "", "linspace"], [5, 5, 1, "", "meshgrid"], [5, 5, 1, "", "ones"], [5, 5, 1, "", "ones_like"], [5, 5, 1, "", "tril"], [5, 5, 1, "", "triu"], [5, 5, 1, "", "zeros"], [5, 5, 1, "", "zeros_like"]], "arkouda.array_api.data_type_functions": [[6, 5, 1, "", "astype"], [6, 5, 1, "", "can_cast"], [6, 5, 1, "", "finfo"], [6, 1, 1, "", "finfo_object"], [6, 5, 1, "", "iinfo"], [6, 1, 1, "", "iinfo_object"], [6, 5, 1, "", "isdtype"], [6, 5, 1, "", "result_type"]], "arkouda.array_api.data_type_functions.finfo_object": [[6, 4, 1, "", "bits"], [6, 4, 1, "", "dtype"], [6, 4, 1, "", "eps"], [6, 4, 1, "", "max"], [6, 4, 1, "", "min"], [6, 4, 1, "", "smallest_normal"]], "arkouda.array_api.data_type_functions.iinfo_object": [[6, 4, 1, "", "bits"], [6, 4, 1, "", "dtype"], [6, 4, 1, "", "max"], [6, 4, 1, "", "min"]], "arkouda.array_api.elementwise_functions": [[7, 5, 1, "", "abs"], [7, 5, 1, "", "acos"], [7, 5, 1, "", "acosh"], [7, 5, 1, "", "add"], [7, 5, 1, "", "asin"], [7, 5, 1, "", "asinh"], [7, 5, 1, "", "atan"], [7, 5, 1, "", "atan2"], [7, 5, 1, "", "atanh"], [7, 5, 1, "", "bitwise_and"], [7, 5, 1, "", "bitwise_invert"], [7, 5, 1, "", "bitwise_left_shift"], [7, 5, 1, "", "bitwise_or"], [7, 5, 1, "", "bitwise_right_shift"], [7, 5, 1, "", "bitwise_xor"], [7, 5, 1, "", "ceil"], [7, 5, 1, "", "conj"], [7, 5, 1, "", "cos"], [7, 5, 1, "", "cosh"], [7, 5, 1, "", "divide"], [7, 5, 1, "", "equal"], [7, 5, 1, "", "exp"], [7, 5, 1, "", "expm1"], [7, 5, 1, "", "floor"], [7, 5, 1, "", "floor_divide"], [7, 5, 1, "", "greater"], [7, 5, 1, "", "greater_equal"], [7, 5, 1, "", "imag"], [7, 5, 1, "", "isfinite"], [7, 5, 1, "", "isinf"], [7, 5, 1, "", "isnan"], [7, 5, 1, "", "less"], [7, 5, 1, "", "less_equal"], [7, 5, 1, "", "log"], [7, 5, 1, "", "log10"], [7, 5, 1, "", "log1p"], [7, 5, 1, "", "log2"], [7, 5, 1, "", "logaddexp"], [7, 5, 1, "", "logical_and"], [7, 5, 1, "", "logical_not"], [7, 5, 1, "", "logical_or"], [7, 5, 1, "", "logical_xor"], [7, 5, 1, "", "multiply"], [7, 5, 1, "", "negative"], [7, 5, 1, "", "not_equal"], [7, 5, 1, "", "positive"], [7, 5, 1, "", "pow"], [7, 5, 1, "", "real"], [7, 5, 1, "", "remainder"], [7, 5, 1, "", "round"], [7, 5, 1, "", "sign"], [7, 5, 1, "", "sin"], [7, 5, 1, "", "sinh"], [7, 5, 1, "", "sqrt"], [7, 5, 1, "", "square"], [7, 5, 1, "", "subtract"], [7, 5, 1, "", "tan"], [7, 5, 1, "", "tanh"], [7, 5, 1, "", "trunc"]], "arkouda.array_api.indexing_functions": [[9, 5, 1, "", "take"]], "arkouda.array_api.linalg": [[10, 5, 1, "", "matmul"], [10, 5, 1, "", "matrix_transpose"], [10, 5, 1, "", "tensordot"], [10, 5, 1, "", "vecdot"]], "arkouda.array_api.manipulation_functions": [[11, 5, 1, "", "broadcast_arrays"], [11, 5, 1, "", "broadcast_to"], [11, 5, 1, "", "concat"], [11, 5, 1, "", "expand_dims"], [11, 5, 1, "", "flip"], [11, 5, 1, "", "moveaxis"], [11, 5, 1, "", "permute_dims"], [11, 5, 1, "", "repeat"], [11, 5, 1, "", "reshape"], [11, 5, 1, "", "roll"], [11, 5, 1, "", "squeeze"], [11, 5, 1, "", "stack"], [11, 5, 1, "", "tile"], [11, 5, 1, "", "unstack"]], "arkouda.array_api.searching_functions": [[12, 5, 1, "", "argmax"], [12, 5, 1, "", "argmin"], [12, 5, 1, "", "nonzero"], [12, 5, 1, "", "searchsorted"], [12, 5, 1, "", "where"]], "arkouda.array_api.set_functions": [[13, 1, 1, "", "UniqueAllResult"], [13, 1, 1, "", "UniqueCountsResult"], [13, 1, 1, "", "UniqueInverseResult"], [13, 5, 1, "", "unique_all"], [13, 5, 1, "", "unique_counts"], [13, 5, 1, "", "unique_inverse"], [13, 5, 1, "", "unique_values"]], "arkouda.array_api.set_functions.UniqueAllResult": [[13, 4, 1, "", "counts"], [13, 4, 1, "", "indices"], [13, 4, 1, "", "inverse_indices"], [13, 4, 1, "", "values"]], "arkouda.array_api.set_functions.UniqueCountsResult": [[13, 4, 1, "", "counts"], [13, 4, 1, "", "values"]], "arkouda.array_api.set_functions.UniqueInverseResult": [[13, 4, 1, "", "inverse_indices"], [13, 4, 1, "", "values"]], "arkouda.array_api.sorting_functions": [[14, 5, 1, "", "argsort"], [14, 5, 1, "", "sort"]], "arkouda.array_api.statistical_functions": [[15, 5, 1, "", "cumulative_sum"], [15, 5, 1, "", "max"], [15, 5, 1, "", "mean"], [15, 5, 1, "", "mean_shim"], [15, 5, 1, "", "min"], [15, 5, 1, "", "prod"], [15, 5, 1, "", "std"], [15, 5, 1, "", "sum"], [15, 5, 1, "", "var"]], "arkouda.array_api.utility_functions": [[16, 5, 1, "", "all"], [16, 5, 1, "", "any"], [16, 5, 1, "", "clip"], [16, 5, 1, "", "diff"], [16, 5, 1, "", "pad"]], "arkouda.array_view": [[17, 1, 1, "", "ArrayView"]], "arkouda.array_view.ArrayView": [[17, 4, 1, "id0", "base"], [17, 4, 1, "id1", "dtype"], [17, 4, 1, "id2", "itemsize"], [17, 4, 1, "id3", "ndim"], [17, 4, 1, "", "objType"], [17, 4, 1, "", "order"], [17, 4, 1, "id4", "shape"], [17, 4, 1, "id5", "size"], [17, 2, 1, "", "to_hdf"], [17, 2, 1, "", "to_list"], [17, 2, 1, "", "to_ndarray"], [17, 2, 1, "", "update_hdf"]], "arkouda.bigint": [[25, 2, 1, "id847", "itemsize"], [25, 2, 1, "id848", "name"], [25, 2, 1, "id849", "ndim"], [25, 2, 1, "id850", "shape"], [25, 2, 1, "id851", "type"]], "arkouda.bitType": [[25, 2, 1, "id855", "bit_count"]], "arkouda.byte": [[25, 2, 1, "", "bit_count"]], "arkouda.bytes_": [[25, 2, 1, "", "T"], [25, 2, 1, "", "all"], [25, 2, 1, "", "any"], [25, 2, 1, "", "argmax"], [25, 2, 1, "", "argmin"], [25, 2, 1, "", "argsort"], [25, 2, 1, "", "astype"], [25, 2, 1, "", "base"], [25, 2, 1, "", "byteswap"], [25, 2, 1, "", "choose"], [25, 2, 1, "", "clip"], [25, 2, 1, "", "compress"], [25, 2, 1, "", "conj"], [25, 2, 1, "", "conjugate"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "cumprod"], [25, 2, 1, "", "cumsum"], [25, 2, 1, "", "data"], [25, 2, 1, "", "diagonal"], [25, 2, 1, "", "dtype"], [25, 2, 1, "", "dump"], [25, 2, 1, "", "dumps"], [25, 2, 1, "", "fill"], [25, 2, 1, "", "flags"], [25, 2, 1, "", "flat"], [25, 2, 1, "", "flatten"], [25, 2, 1, "", "getfield"], [25, 2, 1, "", "imag"], [25, 2, 1, "", "item"], [25, 2, 1, "", "itemset"], [25, 2, 1, "", "itemsize"], [25, 2, 1, "", "max"], [25, 2, 1, "", "mean"], [25, 2, 1, "", "min"], [25, 2, 1, "", "nbytes"], [25, 2, 1, "", "ndim"], [25, 2, 1, "", "newbyteorder"], [25, 2, 1, "", "nonzero"], [25, 2, 1, "", "prod"], [25, 2, 1, "", "ptp"], [25, 2, 1, "", "put"], [25, 2, 1, "", "ravel"], [25, 2, 1, "", "real"], [25, 2, 1, "", "repeat"], [25, 2, 1, "", "reshape"], [25, 2, 1, "", "resize"], [25, 2, 1, "", "round"], [25, 2, 1, "", "searchsorted"], [25, 2, 1, "", "setfield"], [25, 2, 1, "", "setflags"], [25, 2, 1, "", "shape"], [25, 2, 1, "", "size"], [25, 2, 1, "", "sort"], [25, 2, 1, "", "squeeze"], [25, 2, 1, "", "std"], [25, 2, 1, "", "strides"], [25, 2, 1, "", "sum"], [25, 2, 1, "", "swapaxes"], [25, 2, 1, "", "take"], [25, 2, 1, "", "tobytes"], [25, 2, 1, "", "tofile"], [25, 2, 1, "", "tolist"], [25, 2, 1, "", "tostring"], [25, 2, 1, "", "trace"], [25, 2, 1, "", "transpose"], [25, 2, 1, "", "var"], [25, 2, 1, "", "view"]], "arkouda.categorical": [[18, 1, 1, "", "Categorical"]], "arkouda.categorical.Categorical": [[18, 4, 1, "", "BinOps"], [18, 4, 1, "", "RegisterablePieces"], [18, 4, 1, "", "RequiredPieces"], [18, 2, 1, "", "argsort"], [18, 2, 1, "", "attach"], [18, 4, 1, "", "categories"], [18, 4, 1, "", "codes"], [18, 2, 1, "", "concatenate"], [18, 2, 1, "", "contains"], [18, 4, 1, "", "dtype"], [18, 2, 1, "", "endswith"], [18, 2, 1, "", "equals"], [18, 2, 1, "", "from_codes"], [18, 2, 1, "", "from_return_msg"], [18, 2, 1, "", "group"], [18, 2, 1, "", "hash"], [18, 2, 1, "", "in1d"], [18, 6, 1, "", "inferred_type"], [18, 2, 1, "", "info"], [18, 2, 1, "", "is_registered"], [18, 2, 1, "", "isna"], [18, 4, 1, "", "logger"], [18, 6, 1, "", "nbytes"], [18, 4, 1, "id0", "ndim"], [18, 4, 1, "id1", "nlevels"], [18, 4, 1, "", "objType"], [18, 2, 1, "", "parse_hdf_categoricals"], [18, 4, 1, "id2", "permutation"], [18, 2, 1, "", "pretty_print_info"], [18, 2, 1, "", "register"], [18, 4, 1, "", "registered_name"], [18, 2, 1, "", "reset_categories"], [18, 2, 1, "", "save"], [18, 4, 1, "id3", "segments"], [18, 2, 1, "", "set_categories"], [18, 4, 1, "id4", "shape"], [18, 4, 1, "id5", "size"], [18, 2, 1, "", "sort_values"], [18, 2, 1, "", "standardize_categories"], [18, 2, 1, "", "startswith"], [18, 2, 1, "", "to_hdf"], [18, 2, 1, "", "to_list"], [18, 2, 1, "", "to_ndarray"], [18, 2, 1, "", "to_pandas"], [18, 2, 1, "", "to_parquet"], [18, 2, 1, "", "to_strings"], [18, 2, 1, "", "transfer"], [18, 2, 1, "", "unique"], [18, 2, 1, "", "unregister"], [18, 2, 1, "", "unregister_categorical_by_name"], [18, 2, 1, "", "update_hdf"]], "arkouda.client": [[19, 5, 1, "", "connect"], [19, 5, 1, "", "disconnect"], [19, 5, 1, "", "generate_history"], [19, 5, 1, "", "get_config"], [19, 5, 1, "", "get_max_array_rank"], [19, 5, 1, "", "get_mem_avail"], [19, 5, 1, "", "get_mem_status"], [19, 5, 1, "", "get_mem_used"], [19, 5, 1, "", "get_server_commands"], [19, 5, 1, "", "print_server_commands"], [19, 5, 1, "", "ruok"], [19, 5, 1, "", "shutdown"]], "arkouda.client_dtypes": [[20, 1, 1, "", "BitVector"], [20, 5, 1, "", "BitVectorizer"], [20, 1, 1, "", "Fields"], [20, 1, 1, "", "IPv4"], [20, 5, 1, "", "ip_address"], [20, 5, 1, "", "is_ipv4"], [20, 5, 1, "", "is_ipv6"]], "arkouda.client_dtypes.BitVector": [[20, 4, 1, "", "conserves"], [20, 2, 1, "", "format"], [20, 2, 1, "", "from_return_msg"], [20, 2, 1, "", "opeq"], [20, 2, 1, "", "register"], [20, 4, 1, "", "registered_name"], [20, 4, 1, "", "reverse"], [20, 4, 1, "", "special_objType"], [20, 2, 1, "", "to_list"], [20, 2, 1, "", "to_ndarray"], [20, 4, 1, "", "values"], [20, 4, 1, "", "width"]], "arkouda.client_dtypes.Fields": [[20, 4, 1, "", "MSB_left"], [20, 2, 1, "", "format"], [20, 4, 1, "", "name"], [20, 4, 1, "", "names"], [20, 4, 1, "", "namewidth"], [20, 2, 1, "", "opeq"], [20, 4, 1, "", "pad"], [20, 4, 1, "", "padchar"], [20, 4, 1, "", "separator"], [20, 4, 1, "", "show_int"], [20, 4, 1, "", "width"]], "arkouda.client_dtypes.IPv4": [[20, 2, 1, "", "export_uint"], [20, 2, 1, "", "format"], [20, 2, 1, "", "normalize"], [20, 2, 1, "", "opeq"], [20, 2, 1, "", "register"], [20, 4, 1, "", "special_objType"], [20, 2, 1, "", "to_hdf"], [20, 2, 1, "", "to_list"], [20, 2, 1, "", "to_ndarray"], [20, 2, 1, "", "update_hdf"], [20, 4, 1, "", "values"]], "arkouda.dataframe": [[21, 1, 1, "", "DataFrame"], [21, 1, 1, "", "DataFrameGroupBy"], [21, 1, 1, "", "DiffAggregate"], [21, 5, 1, "", "intersect"], [21, 5, 1, "", "intx"], [21, 5, 1, "", "invert_permutation"], [21, 5, 1, "", "merge"]], "arkouda.dataframe.DataFrame": [[21, 2, 1, "", "GroupBy"], [21, 2, 1, "", "all"], [21, 2, 1, "", "any"], [21, 2, 1, "", "append"], [21, 2, 1, "", "apply_permutation"], [21, 2, 1, "", "argsort"], [21, 2, 1, "", "assign"], [21, 2, 1, "", "attach"], [21, 2, 1, "", "coargsort"], [21, 6, 1, "", "columns"], [21, 2, 1, "", "concat"], [21, 2, 1, "", "corr"], [21, 2, 1, "", "count"], [21, 2, 1, "", "drop"], [21, 2, 1, "", "drop_duplicates"], [21, 2, 1, "", "dropna"], [21, 6, 1, "", "dtypes"], [21, 6, 1, "", "empty"], [21, 2, 1, "", "filter_by_range"], [21, 2, 1, "", "from_pandas"], [21, 2, 1, "", "from_return_msg"], [21, 2, 1, "", "groupby"], [21, 2, 1, "", "head"], [21, 6, 1, "", "index"], [21, 6, 1, "", "info"], [21, 2, 1, "", "is_registered"], [21, 2, 1, "", "isin"], [21, 2, 1, "", "isna"], [21, 2, 1, "", "load"], [21, 2, 1, "", "memory_usage"], [21, 2, 1, "", "memory_usage_info"], [21, 2, 1, "", "merge"], [21, 2, 1, "", "notna"], [21, 2, 1, "", "objType"], [21, 2, 1, "", "read_csv"], [21, 2, 1, "", "register"], [21, 2, 1, "", "rename"], [21, 2, 1, "", "reset_index"], [21, 2, 1, "", "sample"], [21, 2, 1, "", "save"], [21, 6, 1, "", "shape"], [21, 6, 1, "", "size"], [21, 2, 1, "", "sort_index"], [21, 2, 1, "", "sort_values"], [21, 2, 1, "", "tail"], [21, 2, 1, "", "to_csv"], [21, 2, 1, "", "to_hdf"], [21, 2, 1, "", "to_markdown"], [21, 2, 1, "", "to_pandas"], [21, 2, 1, "", "to_parquet"], [21, 2, 1, "", "transfer"], [21, 2, 1, "", "unregister"], [21, 2, 1, "", "unregister_dataframe_by_name"], [21, 2, 1, "", "update_hdf"], [21, 2, 1, "", "update_nrows"]], "arkouda.dataframe.DataFrameGroupBy": [[21, 2, 1, "", "all"], [21, 2, 1, "", "any"], [21, 2, 1, "", "argmax"], [21, 2, 1, "", "argmin"], [21, 4, 1, "", "as_index"], [21, 2, 1, "", "broadcast"], [21, 2, 1, "", "count"], [21, 4, 1, "", "df"], [21, 2, 1, "", "diff"], [21, 2, 1, "", "first"], [21, 4, 1, "", "gb"], [21, 4, 1, "", "gb_key_names"], [21, 2, 1, "", "head"], [21, 2, 1, "", "max"], [21, 2, 1, "", "mean"], [21, 2, 1, "", "median"], [21, 2, 1, "", "min"], [21, 2, 1, "", "mode"], [21, 2, 1, "", "nunique"], [21, 2, 1, "", "prod"], [21, 2, 1, "", "sample"], [21, 2, 1, "", "size"], [21, 2, 1, "", "std"], [21, 2, 1, "", "sum"], [21, 2, 1, "", "tail"], [21, 2, 1, "", "unique"], [21, 2, 1, "", "var"], [21, 2, 1, "", "xor"]], "arkouda.dataframe.DiffAggregate": [[21, 2, 1, "", "all"], [21, 2, 1, "", "any"], [21, 2, 1, "", "argmax"], [21, 2, 1, "", "argmin"], [21, 2, 1, "", "count"], [21, 2, 1, "", "first"], [21, 4, 1, "", "gb"], [21, 2, 1, "", "max"], [21, 2, 1, "", "mean"], [21, 2, 1, "", "median"], [21, 2, 1, "", "min"], [21, 2, 1, "", "mode"], [21, 2, 1, "", "nunique"], [21, 2, 1, "", "prod"], [21, 2, 1, "", "std"], [21, 2, 1, "", "sum"], [21, 2, 1, "", "unique"], [21, 4, 1, "", "values"], [21, 2, 1, "", "var"], [21, 2, 1, "", "xor"]], "arkouda.double": [[25, 2, 1, "", "as_integer_ratio"], [25, 2, 1, "", "fromhex"], [25, 2, 1, "", "hex"], [25, 2, 1, "", "is_integer"]], "arkouda.dtypes": [[22, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [22, 1, 1, "", "ARKOUDA_SUPPORTED_FLOATS"], [22, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [22, 1, 1, "", "ARKOUDA_SUPPORTED_NUMBERS"], [22, 1, 1, "", "DType"], [22, 1, 1, "", "DTypeObjects"], [22, 1, 1, "", "DTypes"], [22, 1, 1, "", "Enum"], [22, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [22, 1, 1, "", "NumericDTypes"], [22, 1, 1, "", "ScalarDTypes"], [22, 1, 1, "", "SeriesDTypes"], [22, 1, 1, "", "Union"], [22, 1, 1, "", "all_scalars"], [22, 1, 1, "", "annotations"], [22, 1, 1, "", "bigint"], [22, 1, 1, "", "bitType"], [22, 1, 1, "", "bool_"], [22, 1, 1, "", "bool_scalars"], [22, 5, 1, "", "cast"], [22, 1, 1, "", "complex128"], [22, 1, 1, "", "complex64"], [22, 5, 1, "", "dtype"], [22, 1, 1, "", "float16"], [22, 1, 1, "", "float32"], [22, 1, 1, "", "float64"], [22, 1, 1, "", "float_scalars"], [22, 5, 1, "", "get_byteorder"], [22, 5, 1, "", "get_server_byteorder"], [22, 1, 1, "", "int16"], [22, 1, 1, "", "int32"], [22, 1, 1, "", "int64"], [22, 1, 1, "", "int8"], [22, 1, 1, "", "intTypes"], [22, 1, 1, "", "int_scalars"], [22, 5, 1, "", "isSupportedFloat"], [22, 5, 1, "", "isSupportedInt"], [22, 5, 1, "", "isSupportedNumber"], [22, 1, 1, "", "numeric_and_bool_scalars"], [22, 1, 1, "", "numeric_scalars"], [22, 1, 1, "", "numpy_scalars"], [22, 5, 1, "", "resolve_scalar_dtype"], [22, 1, 1, "", "str_"], [22, 1, 1, "", "str_scalars"], [22, 1, 1, "", "uint16"], [22, 1, 1, "", "uint32"], [22, 1, 1, "", "uint64"], [22, 1, 1, "", "uint8"]], "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES": [[22, 2, 1, "", "copy"], [22, 2, 1, "", "difference"], [22, 2, 1, "", "intersection"], [22, 2, 1, "", "isdisjoint"], [22, 2, 1, "", "issubset"], [22, 2, 1, "", "issuperset"], [22, 2, 1, "", "symmetric_difference"], [22, 2, 1, "", "union"]], "arkouda.dtypes.ARKOUDA_SUPPORTED_FLOATS": [[22, 2, 1, "", "count"], [22, 2, 1, "", "index"]], "arkouda.dtypes.ARKOUDA_SUPPORTED_INTS": [[22, 2, 1, "", "count"], [22, 2, 1, "", "index"]], "arkouda.dtypes.ARKOUDA_SUPPORTED_NUMBERS": [[22, 2, 1, "", "count"], [22, 2, 1, "", "index"]], "arkouda.dtypes.DType": [[22, 2, 1, "", "BIGINT"], [22, 2, 1, "", "BOOL"], [22, 2, 1, "", "COMPLEX128"], [22, 2, 1, "", "COMPLEX64"], [22, 2, 1, "", "FLOAT"], [22, 2, 1, "", "FLOAT32"], [22, 2, 1, "", "FLOAT64"], [22, 2, 1, "", "INT"], [22, 2, 1, "", "INT16"], [22, 2, 1, "", "INT32"], [22, 2, 1, "", "INT64"], [22, 2, 1, "", "INT8"], [22, 2, 1, "", "STR"], [22, 2, 1, "", "UINT"], [22, 2, 1, "", "UINT16"], [22, 2, 1, "", "UINT32"], [22, 2, 1, "", "UINT64"], [22, 2, 1, "", "UINT8"], [22, 2, 1, "", "name"], [22, 2, 1, "", "value"]], "arkouda.dtypes.DTypeObjects": [[22, 2, 1, "", "copy"], [22, 2, 1, "", "difference"], [22, 2, 1, "", "intersection"], [22, 2, 1, "", "isdisjoint"], [22, 2, 1, "", "issubset"], [22, 2, 1, "", "issuperset"], [22, 2, 1, "", "symmetric_difference"], [22, 2, 1, "", "union"]], "arkouda.dtypes.DTypes": [[22, 2, 1, "", "copy"], [22, 2, 1, "", "difference"], [22, 2, 1, "", "intersection"], [22, 2, 1, "", "isdisjoint"], [22, 2, 1, "", "issubset"], [22, 2, 1, "", "issuperset"], [22, 2, 1, "", "symmetric_difference"], [22, 2, 1, "", "union"]], "arkouda.dtypes.NUMBER_FORMAT_STRINGS": [[22, 2, 1, "", "clear"], [22, 2, 1, "", "copy"], [22, 2, 1, "", "fromkeys"], [22, 2, 1, "", "get"], [22, 2, 1, "", "items"], [22, 2, 1, "", "keys"], [22, 2, 1, "", "pop"], [22, 2, 1, "", "popitem"], [22, 2, 1, "", "setdefault"], [22, 2, 1, "", "update"], [22, 2, 1, "", "values"]], "arkouda.dtypes.NumericDTypes": [[22, 2, 1, "", "copy"], [22, 2, 1, "", "difference"], [22, 2, 1, "", "intersection"], [22, 2, 1, "", "isdisjoint"], [22, 2, 1, "", "issubset"], [22, 2, 1, "", "issuperset"], [22, 2, 1, "", "symmetric_difference"], [22, 2, 1, "", "union"]], "arkouda.dtypes.ScalarDTypes": [[22, 2, 1, "", "copy"], [22, 2, 1, "", "difference"], [22, 2, 1, "", "intersection"], [22, 2, 1, "", "isdisjoint"], [22, 2, 1, "", "issubset"], [22, 2, 1, "", "issuperset"], [22, 2, 1, "", "symmetric_difference"], [22, 2, 1, "", "union"]], "arkouda.dtypes.SeriesDTypes": [[22, 2, 1, "", "clear"], [22, 2, 1, "", "copy"], [22, 2, 1, "", "fromkeys"], [22, 2, 1, "", "get"], [22, 2, 1, "", "items"], [22, 2, 1, "", "keys"], [22, 2, 1, "", "pop"], [22, 2, 1, "", "popitem"], [22, 2, 1, "", "setdefault"], [22, 2, 1, "", "update"], [22, 2, 1, "", "values"]], "arkouda.dtypes.annotations": [[22, 2, 1, "", "compiler_flag"], [22, 2, 1, "", "getMandatoryRelease"], [22, 2, 1, "", "getOptionalRelease"], [22, 2, 1, "", "mandatory"], [22, 2, 1, "", "optional"]], "arkouda.dtypes.bigint": [[22, 2, 1, "", "itemsize"], [22, 2, 1, "", "name"], [22, 2, 1, "", "ndim"], [22, 2, 1, "", "shape"], [22, 2, 1, "", "type"]], "arkouda.dtypes.bitType": [[22, 2, 1, "", "bit_count"]], "arkouda.dtypes.float16": [[22, 2, 1, "", "as_integer_ratio"], [22, 2, 1, "", "is_integer"]], "arkouda.dtypes.float32": [[22, 2, 1, "", "as_integer_ratio"], [22, 2, 1, "", "is_integer"]], "arkouda.dtypes.float64": [[22, 2, 1, "", "as_integer_ratio"], [22, 2, 1, "", "fromhex"], [22, 2, 1, "", "hex"], [22, 2, 1, "", "is_integer"]], "arkouda.dtypes.int16": [[22, 2, 1, "", "bit_count"]], "arkouda.dtypes.int32": [[22, 2, 1, "", "bit_count"]], "arkouda.dtypes.int64": [[22, 2, 1, "", "bit_count"]], "arkouda.dtypes.int8": [[22, 2, 1, "", "bit_count"]], "arkouda.dtypes.intTypes": [[22, 2, 1, "", "copy"], [22, 2, 1, "", "difference"], [22, 2, 1, "", "intersection"], [22, 2, 1, "", "isdisjoint"], [22, 2, 1, "", "issubset"], [22, 2, 1, "", "issuperset"], [22, 2, 1, "", "symmetric_difference"], [22, 2, 1, "", "union"]], "arkouda.dtypes.str_": [[22, 2, 1, "", "T"], [22, 2, 1, "", "all"], [22, 2, 1, "", "any"], [22, 2, 1, "", "argmax"], [22, 2, 1, "", "argmin"], [22, 2, 1, "", "argsort"], [22, 2, 1, "", "astype"], [22, 2, 1, "", "base"], [22, 2, 1, "", "byteswap"], [22, 2, 1, "", "choose"], [22, 2, 1, "", "clip"], [22, 2, 1, "", "compress"], [22, 2, 1, "", "conj"], [22, 2, 1, "", "conjugate"], [22, 2, 1, "", "copy"], [22, 2, 1, "", "cumprod"], [22, 2, 1, "", "cumsum"], [22, 2, 1, "", "data"], [22, 2, 1, "", "diagonal"], [22, 2, 1, "", "dtype"], [22, 2, 1, "", "dump"], [22, 2, 1, "", "dumps"], [22, 2, 1, "", "fill"], [22, 2, 1, "", "flags"], [22, 2, 1, "", "flat"], [22, 2, 1, "", "flatten"], [22, 2, 1, "", "getfield"], [22, 2, 1, "", "imag"], [22, 2, 1, "", "item"], [22, 2, 1, "", "itemset"], [22, 2, 1, "", "itemsize"], [22, 2, 1, "", "max"], [22, 2, 1, "", "mean"], [22, 2, 1, "", "min"], [22, 2, 1, "", "nbytes"], [22, 2, 1, "", "ndim"], [22, 2, 1, "", "newbyteorder"], [22, 2, 1, "", "nonzero"], [22, 2, 1, "", "prod"], [22, 2, 1, "", "ptp"], [22, 2, 1, "", "put"], [22, 2, 1, "", "ravel"], [22, 2, 1, "", "real"], [22, 2, 1, "", "repeat"], [22, 2, 1, "", "reshape"], [22, 2, 1, "", "resize"], [22, 2, 1, "", "round"], [22, 2, 1, "", "searchsorted"], [22, 2, 1, "", "setfield"], [22, 2, 1, "", "setflags"], [22, 2, 1, "", "shape"], [22, 2, 1, "", "size"], [22, 2, 1, "", "sort"], [22, 2, 1, "", "squeeze"], [22, 2, 1, "", "std"], [22, 2, 1, "", "strides"], [22, 2, 1, "", "sum"], [22, 2, 1, "", "swapaxes"], [22, 2, 1, "", "take"], [22, 2, 1, "", "tobytes"], [22, 2, 1, "", "tofile"], [22, 2, 1, "", "tolist"], [22, 2, 1, "", "tostring"], [22, 2, 1, "", "trace"], [22, 2, 1, "", "transpose"], [22, 2, 1, "", "var"], [22, 2, 1, "", "view"]], "arkouda.dtypes.uint16": [[22, 2, 1, "", "bit_count"]], "arkouda.dtypes.uint32": [[22, 2, 1, "", "bit_count"]], "arkouda.dtypes.uint64": [[22, 2, 1, "", "bit_count"]], "arkouda.dtypes.uint8": [[22, 2, 1, "", "bit_count"]], "arkouda.finfo": [[25, 4, 1, "", "bits"], [25, 4, 1, "", "dtype"], [25, 4, 1, "", "eps"], [25, 4, 1, "", "epsneg"], [25, 4, 1, "", "iexp"], [25, 4, 1, "", "machep"], [25, 4, 1, "", "max"], [25, 4, 1, "", "maxexp"], [25, 4, 1, "", "min"], [25, 4, 1, "", "minexp"], [25, 4, 1, "", "negep"], [25, 4, 1, "", "nexp"], [25, 4, 1, "", "nmant"], [25, 4, 1, "", "precision"], [25, 4, 1, "", "resolution"], [25, 6, 1, "id876", "smallest_normal"], [25, 4, 1, "", "smallest_subnormal"], [25, 6, 1, "id877", "tiny"]], "arkouda.float16": [[25, 2, 1, "", "as_integer_ratio"], [25, 2, 1, "", "is_integer"]], "arkouda.float32": [[25, 2, 1, "", "as_integer_ratio"], [25, 2, 1, "", "is_integer"]], "arkouda.float64": [[25, 2, 1, "", "as_integer_ratio"], [25, 2, 1, "", "fromhex"], [25, 2, 1, "", "hex"], [25, 2, 1, "", "is_integer"]], "arkouda.float_": [[25, 2, 1, "", "as_integer_ratio"], [25, 2, 1, "", "fromhex"], [25, 2, 1, "", "hex"], [25, 2, 1, "", "is_integer"]], "arkouda.format_parser": [[25, 4, 1, "", "dtype"]], "arkouda.groupbyclass": [[23, 1, 1, "", "GROUPBY_REDUCTION_TYPES"], [23, 1, 1, "", "GroupBy"], [23, 5, 1, "", "broadcast"], [23, 5, 1, "", "unique"]], "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES": [[23, 2, 1, "", "copy"], [23, 2, 1, "", "difference"], [23, 2, 1, "", "intersection"], [23, 2, 1, "", "isdisjoint"], [23, 2, 1, "", "issubset"], [23, 2, 1, "", "issuperset"], [23, 2, 1, "", "symmetric_difference"], [23, 2, 1, "", "union"]], "arkouda.groupbyclass.GroupBy": [[23, 2, 1, "", "AND"], [23, 2, 1, "", "OR"], [23, 2, 1, "", "Reductions"], [23, 2, 1, "", "XOR"], [23, 2, 1, "", "aggregate"], [23, 2, 1, "", "all"], [23, 2, 1, "", "any"], [23, 2, 1, "", "argmax"], [23, 2, 1, "", "argmin"], [23, 2, 1, "", "attach"], [23, 2, 1, "", "broadcast"], [23, 2, 1, "", "build_from_components"], [23, 2, 1, "", "count"], [23, 4, 1, "", "dropna"], [23, 2, 1, "", "first"], [23, 2, 1, "", "from_return_msg"], [23, 2, 1, "", "head"], [23, 2, 1, "", "is_registered"], [23, 4, 1, "", "logger"], [23, 2, 1, "", "max"], [23, 2, 1, "", "mean"], [23, 2, 1, "", "median"], [23, 2, 1, "", "min"], [23, 2, 1, "", "mode"], [23, 2, 1, "", "most_common"], [23, 4, 1, "", "ngroups"], [23, 4, 1, "", "nkeys"], [23, 2, 1, "", "nunique"], [23, 2, 1, "", "objType"], [23, 4, 1, "", "permutation"], [23, 2, 1, "", "prod"], [23, 2, 1, "", "register"], [23, 2, 1, "", "sample"], [23, 4, 1, "", "segments"], [23, 2, 1, "id0", "size"], [23, 2, 1, "", "std"], [23, 2, 1, "", "sum"], [23, 2, 1, "", "tail"], [23, 2, 1, "", "to_hdf"], [23, 2, 1, "", "unique"], [23, 4, 1, "", "unique_keys"], [23, 2, 1, "", "unregister"], [23, 2, 1, "", "unregister_groupby_by_name"], [23, 2, 1, "", "update_hdf"], [23, 2, 1, "", "var"]], "arkouda.half": [[25, 2, 1, "", "as_integer_ratio"], [25, 2, 1, "", "is_integer"]], "arkouda.history": [[24, 1, 1, "", "HistoryRetriever"], [24, 1, 1, "", "NotebookHistoryRetriever"], [24, 1, 1, "", "ShellHistoryRetriever"]], "arkouda.history.HistoryRetriever": [[24, 2, 1, "", "retrieve"]], "arkouda.history.NotebookHistoryRetriever": [[24, 2, 1, "", "retrieve"]], "arkouda.history.ShellHistoryRetriever": [[24, 2, 1, "", "retrieve"]], "arkouda.iinfo": [[25, 4, 1, "", "bits"], [25, 4, 1, "", "dtype"], [25, 6, 1, "id884", "max"], [25, 6, 1, "id885", "min"]], "arkouda.index": [[26, 1, 1, "", "Index"], [26, 1, 1, "", "MultiIndex"]], "arkouda.index.Index": [[26, 2, 1, "", "argsort"], [26, 2, 1, "", "concat"], [26, 2, 1, "", "equals"], [26, 2, 1, "", "factory"], [26, 2, 1, "", "from_return_msg"], [26, 6, 1, "", "index"], [26, 6, 1, "", "inferred_type"], [26, 2, 1, "", "is_registered"], [26, 2, 1, "", "lookup"], [26, 2, 1, "", "map"], [26, 4, 1, "", "max_list_size"], [26, 2, 1, "", "memory_usage"], [26, 6, 1, "", "names"], [26, 6, 1, "", "ndim"], [26, 6, 1, "", "nlevels"], [26, 4, 1, "", "objType"], [26, 2, 1, "", "register"], [26, 4, 1, "", "registered_name"], [26, 2, 1, "", "save"], [26, 2, 1, "", "set_dtype"], [26, 6, 1, "", "shape"], [26, 2, 1, "", "to_csv"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "to_hdf"], [26, 2, 1, "", "to_list"], [26, 2, 1, "", "to_ndarray"], [26, 2, 1, "", "to_pandas"], [26, 2, 1, "", "to_parquet"], [26, 2, 1, "", "unregister"], [26, 2, 1, "", "update_hdf"]], "arkouda.index.MultiIndex": [[26, 2, 1, "", "argsort"], [26, 2, 1, "", "concat"], [26, 6, 1, "", "dtype"], [26, 2, 1, "", "equal_levels"], [26, 4, 1, "", "first"], [26, 2, 1, "", "get_level_values"], [26, 6, 1, "", "index"], [26, 6, 1, "", "inferred_type"], [26, 2, 1, "", "is_registered"], [26, 4, 1, "", "levels"], [26, 2, 1, "", "lookup"], [26, 2, 1, "", "memory_usage"], [26, 6, 1, "", "name"], [26, 6, 1, "", "names"], [26, 6, 1, "", "ndim"], [26, 6, 1, "", "nlevels"], [26, 4, 1, "", "objType"], [26, 2, 1, "", "register"], [26, 4, 1, "", "registered_name"], [26, 2, 1, "", "set_dtype"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "to_hdf"], [26, 2, 1, "", "to_list"], [26, 2, 1, "", "to_ndarray"], [26, 2, 1, "", "to_pandas"], [26, 2, 1, "", "unregister"], [26, 2, 1, "", "update_hdf"]], "arkouda.infoclass": [[27, 3, 1, "", "AllSymbols"], [27, 3, 1, "", "RegisteredSymbols"], [27, 5, 1, "", "information"], [27, 5, 1, "", "list_registry"], [27, 5, 1, "", "list_symbol_table"], [27, 5, 1, "", "pretty_print_information"]], "arkouda.int16": [[25, 2, 1, "", "bit_count"]], "arkouda.int32": [[25, 2, 1, "", "bit_count"]], "arkouda.int64": [[25, 2, 1, "id889", "bit_count"]], "arkouda.int8": [[25, 2, 1, "", "bit_count"]], "arkouda.intTypes": [[25, 2, 1, "id900", "copy"], [25, 2, 1, "id901", "difference"], [25, 2, 1, "id902", "intersection"], [25, 2, 1, "id903", "isdisjoint"], [25, 2, 1, "id904", "issubset"], [25, 2, 1, "id905", "issuperset"], [25, 2, 1, "id906", "symmetric_difference"], [25, 2, 1, "id907", "union"]], "arkouda.int_": [[25, 2, 1, "", "bit_count"]], "arkouda.intc": [[25, 2, 1, "", "bit_count"]], "arkouda.integer": [[25, 2, 1, "", "denominator"], [25, 2, 1, "", "is_integer"], [25, 2, 1, "", "numerator"]], "arkouda.intp": [[25, 2, 1, "", "bit_count"]], "arkouda.io": [[28, 5, 1, "", "export"], [28, 5, 1, "", "get_columns"], [28, 5, 1, "", "get_datasets"], [28, 5, 1, "", "get_filetype"], [28, 5, 1, "", "get_null_indices"], [28, 5, 1, "", "import_data"], [28, 5, 1, "", "load"], [28, 5, 1, "", "load_all"], [28, 5, 1, "", "ls"], [28, 5, 1, "", "ls_csv"], [28, 5, 1, "", "read"], [28, 5, 1, "", "read_csv"], [28, 5, 1, "", "read_hdf"], [28, 5, 1, "", "read_parquet"], [28, 5, 1, "", "read_tagged_data"], [28, 5, 1, "", "read_zarr"], [28, 5, 1, "", "receive"], [28, 5, 1, "", "receive_dataframe"], [28, 5, 1, "", "restore"], [28, 5, 1, "", "save_all"], [28, 5, 1, "", "snapshot"], [28, 5, 1, "", "to_csv"], [28, 5, 1, "", "to_hdf"], [28, 5, 1, "", "to_parquet"], [28, 5, 1, "", "to_zarr"], [28, 5, 1, "", "update_hdf"]], "arkouda.io_util": [[29, 5, 1, "", "delete_directory"], [29, 5, 1, "", "delimited_file_to_dict"], [29, 5, 1, "", "dict_to_delimited_file"], [29, 5, 1, "", "get_directory"], [29, 5, 1, "", "write_line_to_file"]], "arkouda.join": [[30, 5, 1, "", "compute_join_size"], [30, 5, 1, "", "gen_ranges"], [30, 5, 1, "", "join_on_eq_with_dt"]], "arkouda.logger": [[31, 1, 1, "", "LogLevel"], [31, 5, 1, "", "disableVerbose"], [31, 5, 1, "", "enableVerbose"], [31, 5, 1, "", "write_log"]], "arkouda.logger.LogLevel": [[31, 4, 1, "", "CRITICAL"], [31, 4, 1, "", "DEBUG"], [31, 4, 1, "", "ERROR"], [31, 4, 1, "", "INFO"], [31, 4, 1, "", "WARN"]], "arkouda.longdouble": [[25, 2, 1, "", "as_integer_ratio"], [25, 2, 1, "", "is_integer"]], "arkouda.longfloat": [[25, 2, 1, "", "as_integer_ratio"], [25, 2, 1, "", "is_integer"]], "arkouda.longlong": [[25, 2, 1, "", "bit_count"]], "arkouda.match": [[32, 1, 1, "", "Match"]], "arkouda.match.Match": [[101, 2, 1, "", "end"], [101, 2, 1, "", "find_matches"], [101, 2, 1, "", "group"], [101, 2, 1, "", "match_type"], [101, 2, 1, "", "matched"], [32, 4, 1, "", "re"], [101, 2, 1, "", "start"]], "arkouda.matcher": [[33, 1, 1, "", "Matcher"]], "arkouda.matcher.Matcher": [[33, 4, 1, "", "LocationsInfo"], [33, 2, 1, "", "find_locations"], [33, 2, 1, "", "findall"], [33, 4, 1, "", "full_match_bool"], [33, 4, 1, "", "full_match_ind"], [33, 2, 1, "", "get_match"], [33, 4, 1, "", "indices"], [33, 4, 1, "", "lengths"], [33, 4, 1, "", "logger"], [33, 4, 1, "", "match_bool"], [33, 4, 1, "", "match_ind"], [33, 4, 1, "", "num_matches"], [33, 4, 1, "", "objType"], [33, 4, 1, "", "parent_entry_name"], [33, 4, 1, "", "populated"], [33, 4, 1, "", "search_bool"], [33, 4, 1, "", "search_ind"], [33, 2, 1, "", "split"], [33, 4, 1, "", "starts"], [33, 2, 1, "", "sub"]], "arkouda.numeric": [[34, 1, 1, "", "ErrorMode"], [34, 5, 1, "", "abs"], [34, 5, 1, "", "arccos"], [34, 5, 1, "", "arccosh"], [34, 5, 1, "", "arcsin"], [34, 5, 1, "", "arcsinh"], [34, 5, 1, "", "arctan"], [34, 5, 1, "", "arctan2"], [34, 5, 1, "", "arctanh"], [34, 5, 1, "", "cast"], [34, 5, 1, "", "ceil"], [34, 5, 1, "", "clip"], [34, 5, 1, "", "cos"], [34, 5, 1, "", "cosh"], [34, 5, 1, "", "count_nonzero"], [34, 5, 1, "", "cumprod"], [34, 5, 1, "", "cumsum"], [34, 5, 1, "", "deg2rad"], [34, 5, 1, "", "exp"], [34, 5, 1, "", "expm1"], [34, 5, 1, "", "eye"], [34, 5, 1, "", "floor"], [34, 5, 1, "", "hash"], [34, 5, 1, "", "histogram"], [34, 5, 1, "", "histogram2d"], [34, 5, 1, "", "histogramdd"], [34, 5, 1, "", "isfinite"], [34, 5, 1, "", "isinf"], [34, 5, 1, "", "isnan"], [34, 5, 1, "", "log"], [34, 5, 1, "", "log10"], [34, 5, 1, "", "log1p"], [34, 5, 1, "", "log2"], [34, 5, 1, "", "matmul"], [34, 5, 1, "", "median"], [34, 5, 1, "", "putmask"], [34, 5, 1, "", "rad2deg"], [34, 5, 1, "", "round"], [34, 5, 1, "", "sign"], [34, 5, 1, "", "sin"], [34, 5, 1, "", "sinh"], [34, 5, 1, "", "square"], [34, 5, 1, "", "tan"], [34, 5, 1, "", "tanh"], [34, 5, 1, "", "transpose"], [34, 5, 1, "", "tril"], [34, 5, 1, "", "triu"], [34, 5, 1, "", "trunc"], [34, 5, 1, "", "value_counts"], [34, 5, 1, "", "vecdot"], [34, 5, 1, "", "where"]], "arkouda.numeric.ErrorMode": [[34, 4, 1, "", "ignore"], [34, 4, 1, "", "return_validity"], [34, 4, 1, "", "strict"]], "arkouda.numpy": [[36, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [36, 1, 1, "", "BoolDType"], [36, 1, 1, "", "ByteDType"], [36, 1, 1, "", "BytesDType"], [36, 1, 1, "", "CLongDoubleDType"], [36, 1, 1, "", "Complex128DType"], [36, 1, 1, "", "Complex64DType"], [36, 1, 1, "", "DType"], [36, 1, 1, "", "DTypeObjects"], [36, 1, 1, "", "DTypes"], [36, 1, 1, "", "DataSource"], [36, 1, 1, "", "DateTime64DType"], [36, 1, 1, "", "False_"], [36, 1, 1, "", "Float16DType"], [36, 1, 1, "", "Float32DType"], [36, 1, 1, "", "Float64DType"], [36, 3, 1, "", "Inf"], [36, 3, 1, "", "Infinity"], [36, 1, 1, "", "Int16DType"], [36, 1, 1, "", "Int32DType"], [36, 1, 1, "", "Int64DType"], [36, 1, 1, "", "Int8DType"], [36, 1, 1, "", "IntDType"], [36, 1, 1, "", "LongDType"], [36, 1, 1, "", "LongDoubleDType"], [36, 1, 1, "", "LongLongDType"], [36, 3, 1, "", "NAN"], [36, 3, 1, "", "NINF"], [36, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [36, 3, 1, "", "NZERO"], [36, 3, 1, "", "NaN"], [36, 1, 1, "", "NumericDTypes"], [36, 1, 1, "", "ObjectDType"], [36, 3, 1, "", "PINF"], [36, 3, 1, "", "PZERO"], [36, 1, 1, "", "RankWarning"], [36, 1, 1, "", "ScalarDTypes"], [36, 1, 1, "", "ScalarType"], [36, 1, 1, "", "SeriesDTypes"], [36, 1, 1, "", "ShortDType"], [36, 1, 1, "", "StrDType"], [36, 1, 1, "", "TimeDelta64DType"], [36, 1, 1, "", "TooHardError"], [36, 1, 1, "", "True_"], [36, 1, 1, "", "UByteDType"], [36, 1, 1, "", "UInt16DType"], [36, 1, 1, "", "UInt32DType"], [36, 1, 1, "", "UInt64DType"], [36, 1, 1, "", "UInt8DType"], [36, 1, 1, "", "UIntDType"], [36, 1, 1, "", "ULongDType"], [36, 1, 1, "", "ULongLongDType"], [36, 1, 1, "", "UShortDType"], [36, 1, 1, "", "VoidDType"], [36, 5, 1, "", "add_newdoc"], [36, 1, 1, "", "all_scalars"], [36, 5, 1, "", "base_repr"], [36, 1, 1, "", "bigint"], [36, 5, 1, "", "binary_repr"], [36, 1, 1, "", "bitType"], [36, 1, 1, "", "bool_"], [36, 1, 1, "", "bool_scalars"], [36, 1, 1, "", "byte"], [36, 1, 1, "", "bytes_"], [36, 1, 1, "", "cdouble"], [36, 1, 1, "", "cfloat"], [36, 1, 1, "", "character"], [36, 1, 1, "", "clongdouble"], [36, 1, 1, "", "clongfloat"], [36, 1, 1, "", "complex128"], [36, 1, 1, "", "complex64"], [36, 1, 1, "", "csingle"], [36, 1, 1, "", "datetime64"], [36, 5, 1, "", "deprecate"], [36, 5, 1, "", "deprecate_with_doc"], [36, 5, 1, "", "disp"], [36, 1, 1, "", "double"], [36, 5, 1, "", "dtype"], [35, 0, 0, "-", "dtypes"], [36, 3, 1, "", "e"], [36, 3, 1, "", "euler_gamma"], [36, 1, 1, "", "finfo"], [36, 1, 1, "", "flexible"], [36, 1, 1, "", "float16"], [36, 1, 1, "", "float32"], [36, 1, 1, "", "float64"], [36, 1, 1, "", "float_"], [36, 1, 1, "", "float_scalars"], [36, 1, 1, "", "floating"], [36, 5, 1, "", "floor"], [36, 5, 1, "", "format_float_positional"], [36, 5, 1, "", "format_float_scientific"], [36, 1, 1, "", "format_parser"], [36, 5, 1, "", "get_byteorder"], [36, 5, 1, "", "get_server_byteorder"], [36, 1, 1, "", "half"], [36, 1, 1, "", "iinfo"], [36, 1, 1, "", "inexact"], [36, 3, 1, "", "inf"], [36, 3, 1, "", "infty"], [36, 1, 1, "", "int16"], [36, 1, 1, "", "int32"], [36, 1, 1, "", "int64"], [36, 1, 1, "", "int8"], [36, 1, 1, "", "intTypes"], [36, 1, 1, "", "int_"], [36, 1, 1, "", "int_scalars"], [36, 1, 1, "", "intc"], [36, 1, 1, "", "integer"], [36, 1, 1, "", "intp"], [36, 5, 1, "", "isSupportedFloat"], [36, 5, 1, "", "isSupportedInt"], [36, 5, 1, "", "isSupportedNumber"], [36, 5, 1, "", "isscalar"], [36, 5, 1, "", "issctype"], [36, 5, 1, "", "issubclass_"], [36, 5, 1, "", "issubdtype"], [36, 1, 1, "", "longdouble"], [36, 1, 1, "", "longfloat"], [36, 1, 1, "", "longlong"], [36, 5, 1, "", "maximum_sctype"], [36, 3, 1, "", "nan"], [36, 1, 1, "", "number"], [36, 1, 1, "", "numeric_and_bool_scalars"], [36, 1, 1, "", "numeric_scalars"], [36, 1, 1, "", "numpy_scalars"], [36, 1, 1, "", "object_"], [36, 3, 1, "", "pi"], [36, 5, 1, "", "resolve_scalar_dtype"], [36, 1, 1, "", "sctypeDict"], [36, 1, 1, "", "sctypes"], [36, 1, 1, "", "short"], [36, 1, 1, "", "signedinteger"], [36, 1, 1, "", "single"], [36, 1, 1, "", "str_"], [36, 1, 1, "", "str_scalars"], [36, 1, 1, "", "timedelta64"], [36, 5, 1, "", "typename"], [36, 1, 1, "", "ubyte"], [36, 1, 1, "", "uint"], [36, 1, 1, "", "uint16"], [36, 1, 1, "", "uint32"], [36, 1, 1, "", "uint64"], [36, 1, 1, "", "uint8"], [36, 1, 1, "", "uintc"], [36, 1, 1, "", "uintp"], [36, 1, 1, "", "ulonglong"], [36, 1, 1, "", "unsignedinteger"], [36, 1, 1, "", "ushort"], [36, 1, 1, "", "void"]], "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.DType": [[36, 2, 1, "", "BIGINT"], [36, 2, 1, "", "BOOL"], [36, 2, 1, "", "COMPLEX128"], [36, 2, 1, "", "COMPLEX64"], [36, 2, 1, "", "FLOAT"], [36, 2, 1, "", "FLOAT32"], [36, 2, 1, "", "FLOAT64"], [36, 2, 1, "", "INT"], [36, 2, 1, "", "INT16"], [36, 2, 1, "", "INT32"], [36, 2, 1, "", "INT64"], [36, 2, 1, "", "INT8"], [36, 2, 1, "", "STR"], [36, 2, 1, "", "UINT"], [36, 2, 1, "", "UINT16"], [36, 2, 1, "", "UINT32"], [36, 2, 1, "", "UINT64"], [36, 2, 1, "", "UINT8"], [36, 2, 1, "", "name"], [36, 2, 1, "", "value"]], "arkouda.numpy.DTypeObjects": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.DTypes": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.DataSource": [[36, 2, 1, "", "abspath"], [36, 2, 1, "", "exists"], [36, 2, 1, "", "open"]], "arkouda.numpy.NUMBER_FORMAT_STRINGS": [[36, 2, 1, "", "clear"], [36, 2, 1, "", "copy"], [36, 2, 1, "", "fromkeys"], [36, 2, 1, "", "get"], [36, 2, 1, "", "items"], [36, 2, 1, "", "keys"], [36, 2, 1, "", "pop"], [36, 2, 1, "", "popitem"], [36, 2, 1, "", "setdefault"], [36, 2, 1, "", "update"], [36, 2, 1, "", "values"]], "arkouda.numpy.NumericDTypes": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.ScalarDTypes": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.ScalarType": [[36, 2, 1, "", "count"], [36, 2, 1, "", "index"]], "arkouda.numpy.SeriesDTypes": [[36, 2, 1, "", "clear"], [36, 2, 1, "", "copy"], [36, 2, 1, "", "fromkeys"], [36, 2, 1, "", "get"], [36, 2, 1, "", "items"], [36, 2, 1, "", "keys"], [36, 2, 1, "", "pop"], [36, 2, 1, "", "popitem"], [36, 2, 1, "", "setdefault"], [36, 2, 1, "", "update"], [36, 2, 1, "", "values"]], "arkouda.numpy.bigint": [[36, 2, 1, "", "itemsize"], [36, 2, 1, "", "name"], [36, 2, 1, "", "ndim"], [36, 2, 1, "", "shape"], [36, 2, 1, "", "type"]], "arkouda.numpy.bitType": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.byte": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.bytes_": [[36, 2, 1, "", "T"], [36, 2, 1, "", "all"], [36, 2, 1, "", "any"], [36, 2, 1, "", "argmax"], [36, 2, 1, "", "argmin"], [36, 2, 1, "", "argsort"], [36, 2, 1, "", "astype"], [36, 2, 1, "", "base"], [36, 2, 1, "", "byteswap"], [36, 2, 1, "", "choose"], [36, 2, 1, "", "clip"], [36, 2, 1, "", "compress"], [36, 2, 1, "", "conj"], [36, 2, 1, "", "conjugate"], [36, 2, 1, "", "copy"], [36, 2, 1, "", "cumprod"], [36, 2, 1, "", "cumsum"], [36, 2, 1, "", "data"], [36, 2, 1, "", "diagonal"], [36, 2, 1, "", "dtype"], [36, 2, 1, "", "dump"], [36, 2, 1, "", "dumps"], [36, 2, 1, "", "fill"], [36, 2, 1, "", "flags"], [36, 2, 1, "", "flat"], [36, 2, 1, "", "flatten"], [36, 2, 1, "", "getfield"], [36, 2, 1, "", "imag"], [36, 2, 1, "", "item"], [36, 2, 1, "", "itemset"], [36, 2, 1, "", "itemsize"], [36, 2, 1, "", "max"], [36, 2, 1, "", "mean"], [36, 2, 1, "", "min"], [36, 2, 1, "", "nbytes"], [36, 2, 1, "", "ndim"], [36, 2, 1, "", "newbyteorder"], [36, 2, 1, "", "nonzero"], [36, 2, 1, "", "prod"], [36, 2, 1, "", "ptp"], [36, 2, 1, "", "put"], [36, 2, 1, "", "ravel"], [36, 2, 1, "", "real"], [36, 2, 1, "", "repeat"], [36, 2, 1, "", "reshape"], [36, 2, 1, "", "resize"], [36, 2, 1, "", "round"], [36, 2, 1, "", "searchsorted"], [36, 2, 1, "", "setfield"], [36, 2, 1, "", "setflags"], [36, 2, 1, "", "shape"], [36, 2, 1, "", "size"], [36, 2, 1, "", "sort"], [36, 2, 1, "", "squeeze"], [36, 2, 1, "", "std"], [36, 2, 1, "", "strides"], [36, 2, 1, "", "sum"], [36, 2, 1, "", "swapaxes"], [36, 2, 1, "", "take"], [36, 2, 1, "", "tobytes"], [36, 2, 1, "", "tofile"], [36, 2, 1, "", "tolist"], [36, 2, 1, "", "tostring"], [36, 2, 1, "", "trace"], [36, 2, 1, "", "transpose"], [36, 2, 1, "", "var"], [36, 2, 1, "", "view"]], "arkouda.numpy.double": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "fromhex"], [36, 2, 1, "", "hex"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes": [[35, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [35, 1, 1, "", "ARKOUDA_SUPPORTED_FLOATS"], [35, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [35, 1, 1, "", "ARKOUDA_SUPPORTED_NUMBERS"], [35, 1, 1, "", "DType"], [35, 1, 1, "", "DTypeObjects"], [35, 1, 1, "", "DTypes"], [35, 1, 1, "", "Enum"], [35, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [35, 1, 1, "", "NumericDTypes"], [35, 1, 1, "", "ScalarDTypes"], [35, 1, 1, "", "SeriesDTypes"], [35, 1, 1, "", "Union"], [35, 1, 1, "", "all_scalars"], [35, 1, 1, "", "annotations"], [35, 1, 1, "", "bigint"], [35, 1, 1, "", "bitType"], [35, 1, 1, "", "bool_"], [35, 1, 1, "", "bool_scalars"], [35, 5, 1, "", "cast"], [35, 1, 1, "", "complex128"], [35, 1, 1, "", "complex64"], [35, 5, 1, "", "dtype"], [35, 1, 1, "", "float16"], [35, 1, 1, "", "float32"], [35, 1, 1, "", "float64"], [35, 1, 1, "", "float_scalars"], [35, 5, 1, "", "get_byteorder"], [35, 5, 1, "", "get_server_byteorder"], [35, 1, 1, "", "int16"], [35, 1, 1, "", "int32"], [35, 1, 1, "", "int64"], [35, 1, 1, "", "int8"], [35, 1, 1, "", "intTypes"], [35, 1, 1, "", "int_scalars"], [35, 5, 1, "", "isSupportedFloat"], [35, 5, 1, "", "isSupportedInt"], [35, 5, 1, "", "isSupportedNumber"], [35, 1, 1, "", "numeric_and_bool_scalars"], [35, 1, 1, "", "numeric_scalars"], [35, 1, 1, "", "numpy_scalars"], [35, 5, 1, "", "resolve_scalar_dtype"], [35, 1, 1, "", "str_"], [35, 1, 1, "", "str_scalars"], [35, 1, 1, "", "uint16"], [35, 1, 1, "", "uint32"], [35, 1, 1, "", "uint64"], [35, 1, 1, "", "uint8"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES": [[35, 2, 1, "", "copy"], [35, 2, 1, "", "difference"], [35, 2, 1, "", "intersection"], [35, 2, 1, "", "isdisjoint"], [35, 2, 1, "", "issubset"], [35, 2, 1, "", "issuperset"], [35, 2, 1, "", "symmetric_difference"], [35, 2, 1, "", "union"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS": [[35, 2, 1, "", "count"], [35, 2, 1, "", "index"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS": [[35, 2, 1, "", "count"], [35, 2, 1, "", "index"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS": [[35, 2, 1, "", "count"], [35, 2, 1, "", "index"]], "arkouda.numpy.dtypes.DType": [[35, 2, 1, "", "BIGINT"], [35, 2, 1, "", "BOOL"], [35, 2, 1, "", "COMPLEX128"], [35, 2, 1, "", "COMPLEX64"], [35, 2, 1, "", "FLOAT"], [35, 2, 1, "", "FLOAT32"], [35, 2, 1, "", "FLOAT64"], [35, 2, 1, "", "INT"], [35, 2, 1, "", "INT16"], [35, 2, 1, "", "INT32"], [35, 2, 1, "", "INT64"], [35, 2, 1, "", "INT8"], [35, 2, 1, "", "STR"], [35, 2, 1, "", "UINT"], [35, 2, 1, "", "UINT16"], [35, 2, 1, "", "UINT32"], [35, 2, 1, "", "UINT64"], [35, 2, 1, "", "UINT8"], [35, 2, 1, "", "name"], [35, 2, 1, "", "value"]], "arkouda.numpy.dtypes.DTypeObjects": [[35, 2, 1, "", "copy"], [35, 2, 1, "", "difference"], [35, 2, 1, "", "intersection"], [35, 2, 1, "", "isdisjoint"], [35, 2, 1, "", "issubset"], [35, 2, 1, "", "issuperset"], [35, 2, 1, "", "symmetric_difference"], [35, 2, 1, "", "union"]], "arkouda.numpy.dtypes.DTypes": [[35, 2, 1, "", "copy"], [35, 2, 1, "", "difference"], [35, 2, 1, "", "intersection"], [35, 2, 1, "", "isdisjoint"], [35, 2, 1, "", "issubset"], [35, 2, 1, "", "issuperset"], [35, 2, 1, "", "symmetric_difference"], [35, 2, 1, "", "union"]], "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS": [[35, 2, 1, "", "clear"], [35, 2, 1, "", "copy"], [35, 2, 1, "", "fromkeys"], [35, 2, 1, "", "get"], [35, 2, 1, "", "items"], [35, 2, 1, "", "keys"], [35, 2, 1, "", "pop"], [35, 2, 1, "", "popitem"], [35, 2, 1, "", "setdefault"], [35, 2, 1, "", "update"], [35, 2, 1, "", "values"]], "arkouda.numpy.dtypes.NumericDTypes": [[35, 2, 1, "", "copy"], [35, 2, 1, "", "difference"], [35, 2, 1, "", "intersection"], [35, 2, 1, "", "isdisjoint"], [35, 2, 1, "", "issubset"], [35, 2, 1, "", "issuperset"], [35, 2, 1, "", "symmetric_difference"], [35, 2, 1, "", "union"]], "arkouda.numpy.dtypes.ScalarDTypes": [[35, 2, 1, "", "copy"], [35, 2, 1, "", "difference"], [35, 2, 1, "", "intersection"], [35, 2, 1, "", "isdisjoint"], [35, 2, 1, "", "issubset"], [35, 2, 1, "", "issuperset"], [35, 2, 1, "", "symmetric_difference"], [35, 2, 1, "", "union"]], "arkouda.numpy.dtypes.SeriesDTypes": [[35, 2, 1, "", "clear"], [35, 2, 1, "", "copy"], [35, 2, 1, "", "fromkeys"], [35, 2, 1, "", "get"], [35, 2, 1, "", "items"], [35, 2, 1, "", "keys"], [35, 2, 1, "", "pop"], [35, 2, 1, "", "popitem"], [35, 2, 1, "", "setdefault"], [35, 2, 1, "", "update"], [35, 2, 1, "", "values"]], "arkouda.numpy.dtypes.annotations": [[35, 2, 1, "", "compiler_flag"], [35, 2, 1, "", "getMandatoryRelease"], [35, 2, 1, "", "getOptionalRelease"], [35, 2, 1, "", "mandatory"], [35, 2, 1, "", "optional"]], "arkouda.numpy.dtypes.bigint": [[35, 2, 1, "", "itemsize"], [35, 2, 1, "", "name"], [35, 2, 1, "", "ndim"], [35, 2, 1, "", "shape"], [35, 2, 1, "", "type"]], "arkouda.numpy.dtypes.bitType": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.float16": [[35, 2, 1, "", "as_integer_ratio"], [35, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes.float32": [[35, 2, 1, "", "as_integer_ratio"], [35, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes.float64": [[35, 2, 1, "", "as_integer_ratio"], [35, 2, 1, "", "fromhex"], [35, 2, 1, "", "hex"], [35, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes.int16": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.int32": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.int64": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.int8": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.intTypes": [[35, 2, 1, "", "copy"], [35, 2, 1, "", "difference"], [35, 2, 1, "", "intersection"], [35, 2, 1, "", "isdisjoint"], [35, 2, 1, "", "issubset"], [35, 2, 1, "", "issuperset"], [35, 2, 1, "", "symmetric_difference"], [35, 2, 1, "", "union"]], "arkouda.numpy.dtypes.str_": [[35, 2, 1, "", "T"], [35, 2, 1, "", "all"], [35, 2, 1, "", "any"], [35, 2, 1, "", "argmax"], [35, 2, 1, "", "argmin"], [35, 2, 1, "", "argsort"], [35, 2, 1, "", "astype"], [35, 2, 1, "", "base"], [35, 2, 1, "", "byteswap"], [35, 2, 1, "", "choose"], [35, 2, 1, "", "clip"], [35, 2, 1, "", "compress"], [35, 2, 1, "", "conj"], [35, 2, 1, "", "conjugate"], [35, 2, 1, "", "copy"], [35, 2, 1, "", "cumprod"], [35, 2, 1, "", "cumsum"], [35, 2, 1, "", "data"], [35, 2, 1, "", "diagonal"], [35, 2, 1, "", "dtype"], [35, 2, 1, "", "dump"], [35, 2, 1, "", "dumps"], [35, 2, 1, "", "fill"], [35, 2, 1, "", "flags"], [35, 2, 1, "", "flat"], [35, 2, 1, "", "flatten"], [35, 2, 1, "", "getfield"], [35, 2, 1, "", "imag"], [35, 2, 1, "", "item"], [35, 2, 1, "", "itemset"], [35, 2, 1, "", "itemsize"], [35, 2, 1, "", "max"], [35, 2, 1, "", "mean"], [35, 2, 1, "", "min"], [35, 2, 1, "", "nbytes"], [35, 2, 1, "", "ndim"], [35, 2, 1, "", "newbyteorder"], [35, 2, 1, "", "nonzero"], [35, 2, 1, "", "prod"], [35, 2, 1, "", "ptp"], [35, 2, 1, "", "put"], [35, 2, 1, "", "ravel"], [35, 2, 1, "", "real"], [35, 2, 1, "", "repeat"], [35, 2, 1, "", "reshape"], [35, 2, 1, "", "resize"], [35, 2, 1, "", "round"], [35, 2, 1, "", "searchsorted"], [35, 2, 1, "", "setfield"], [35, 2, 1, "", "setflags"], [35, 2, 1, "", "shape"], [35, 2, 1, "", "size"], [35, 2, 1, "", "sort"], [35, 2, 1, "", "squeeze"], [35, 2, 1, "", "std"], [35, 2, 1, "", "strides"], [35, 2, 1, "", "sum"], [35, 2, 1, "", "swapaxes"], [35, 2, 1, "", "take"], [35, 2, 1, "", "tobytes"], [35, 2, 1, "", "tofile"], [35, 2, 1, "", "tolist"], [35, 2, 1, "", "tostring"], [35, 2, 1, "", "trace"], [35, 2, 1, "", "transpose"], [35, 2, 1, "", "var"], [35, 2, 1, "", "view"]], "arkouda.numpy.dtypes.uint16": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.uint32": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.uint64": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.uint8": [[35, 2, 1, "", "bit_count"]], "arkouda.numpy.finfo": [[36, 4, 1, "", "bits"], [36, 4, 1, "", "dtype"], [36, 4, 1, "", "eps"], [36, 4, 1, "", "epsneg"], [36, 4, 1, "", "iexp"], [36, 4, 1, "", "machep"], [36, 4, 1, "", "max"], [36, 4, 1, "", "maxexp"], [36, 4, 1, "", "min"], [36, 4, 1, "", "minexp"], [36, 4, 1, "", "negep"], [36, 4, 1, "", "nexp"], [36, 4, 1, "", "nmant"], [36, 4, 1, "", "precision"], [36, 4, 1, "", "resolution"], [36, 6, 1, "id0", "smallest_normal"], [36, 4, 1, "", "smallest_subnormal"], [36, 6, 1, "id11", "tiny"]], "arkouda.numpy.float16": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.float32": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.float64": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "fromhex"], [36, 2, 1, "", "hex"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.float_": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "fromhex"], [36, 2, 1, "", "hex"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.format_parser": [[36, 4, 1, "", "dtype"]], "arkouda.numpy.half": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.iinfo": [[36, 4, 1, "", "bits"], [36, 4, 1, "", "dtype"], [36, 6, 1, "id12", "max"], [36, 6, 1, "id13", "min"]], "arkouda.numpy.int16": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.int32": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.int64": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.int8": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.intTypes": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.int_": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.intc": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.integer": [[36, 2, 1, "", "denominator"], [36, 2, 1, "", "is_integer"], [36, 2, 1, "", "numerator"]], "arkouda.numpy.intp": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.longdouble": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.longfloat": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.longlong": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.sctypeDict": [[36, 2, 1, "", "clear"], [36, 2, 1, "", "copy"], [36, 2, 1, "", "fromkeys"], [36, 2, 1, "", "get"], [36, 2, 1, "", "items"], [36, 2, 1, "", "keys"], [36, 2, 1, "", "pop"], [36, 2, 1, "", "popitem"], [36, 2, 1, "", "setdefault"], [36, 2, 1, "", "update"], [36, 2, 1, "", "values"]], "arkouda.numpy.sctypes": [[36, 2, 1, "", "clear"], [36, 2, 1, "", "copy"], [36, 2, 1, "", "fromkeys"], [36, 2, 1, "", "get"], [36, 2, 1, "", "items"], [36, 2, 1, "", "keys"], [36, 2, 1, "", "pop"], [36, 2, 1, "", "popitem"], [36, 2, 1, "", "setdefault"], [36, 2, 1, "", "update"], [36, 2, 1, "", "values"]], "arkouda.numpy.short": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.single": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.str_": [[36, 2, 1, "", "T"], [36, 2, 1, "", "all"], [36, 2, 1, "", "any"], [36, 2, 1, "", "argmax"], [36, 2, 1, "", "argmin"], [36, 2, 1, "", "argsort"], [36, 2, 1, "", "astype"], [36, 2, 1, "", "base"], [36, 2, 1, "", "byteswap"], [36, 2, 1, "", "choose"], [36, 2, 1, "", "clip"], [36, 2, 1, "", "compress"], [36, 2, 1, "", "conj"], [36, 2, 1, "", "conjugate"], [36, 2, 1, "", "copy"], [36, 2, 1, "", "cumprod"], [36, 2, 1, "", "cumsum"], [36, 2, 1, "", "data"], [36, 2, 1, "", "diagonal"], [36, 2, 1, "", "dtype"], [36, 2, 1, "", "dump"], [36, 2, 1, "", "dumps"], [36, 2, 1, "", "fill"], [36, 2, 1, "", "flags"], [36, 2, 1, "", "flat"], [36, 2, 1, "", "flatten"], [36, 2, 1, "", "getfield"], [36, 2, 1, "", "imag"], [36, 2, 1, "", "item"], [36, 2, 1, "", "itemset"], [36, 2, 1, "", "itemsize"], [36, 2, 1, "", "max"], [36, 2, 1, "", "mean"], [36, 2, 1, "", "min"], [36, 2, 1, "", "nbytes"], [36, 2, 1, "", "ndim"], [36, 2, 1, "", "newbyteorder"], [36, 2, 1, "", "nonzero"], [36, 2, 1, "", "prod"], [36, 2, 1, "", "ptp"], [36, 2, 1, "", "put"], [36, 2, 1, "", "ravel"], [36, 2, 1, "", "real"], [36, 2, 1, "", "repeat"], [36, 2, 1, "", "reshape"], [36, 2, 1, "", "resize"], [36, 2, 1, "", "round"], [36, 2, 1, "", "searchsorted"], [36, 2, 1, "", "setfield"], [36, 2, 1, "", "setflags"], [36, 2, 1, "", "shape"], [36, 2, 1, "", "size"], [36, 2, 1, "", "sort"], [36, 2, 1, "", "squeeze"], [36, 2, 1, "", "std"], [36, 2, 1, "", "strides"], [36, 2, 1, "", "sum"], [36, 2, 1, "", "swapaxes"], [36, 2, 1, "", "take"], [36, 2, 1, "", "tobytes"], [36, 2, 1, "", "tofile"], [36, 2, 1, "", "tolist"], [36, 2, 1, "", "tostring"], [36, 2, 1, "", "trace"], [36, 2, 1, "", "transpose"], [36, 2, 1, "", "var"], [36, 2, 1, "", "view"]], "arkouda.numpy.ubyte": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.uint": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.uint16": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.uint32": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.uint64": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.uint8": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.uintc": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.uintp": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.ulonglong": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.ushort": [[36, 2, 1, "", "bit_count"]], "arkouda.pdarray": [[25, 4, 1, "id1214", "BinOps"], [25, 4, 1, "id1215", "OpEqOps"], [93, 2, 1, "", "all"], [93, 2, 1, "", "any"], [93, 2, 1, "", "argmax"], [93, 2, 1, "", "argmaxk"], [93, 2, 1, "", "argmin"], [93, 2, 1, "", "argmink"], [25, 2, 1, "id1222", "astype"], [25, 2, 1, "id1223", "attach"], [25, 2, 1, "id1224", "bigint_to_uint_arrays"], [25, 2, 1, "id1225", "clz"], [25, 2, 1, "id1226", "corr"], [25, 2, 1, "id1227", "cov"], [25, 2, 1, "id1228", "ctz"], [95, 4, 1, "", "dtype"], [25, 2, 1, "id1230", "equals"], [25, 2, 1, "id1231", "fill"], [25, 2, 1, "id1232", "format_other"], [25, 6, 1, "id1233", "inferred_type"], [25, 2, 1, "id1234", "info"], [25, 2, 1, "id1235", "is_registered"], [93, 2, 1, "", "is_sorted"], [95, 4, 1, "", "itemsize"], [93, 2, 1, "", "max"], [25, 6, 1, "id1239", "max_bits"], [93, 2, 1, "", "maxk"], [93, 2, 1, "", "mean"], [93, 2, 1, "", "min"], [93, 2, 1, "", "mink"], [95, 4, 1, "", "name"], [25, 6, 1, "id1245", "nbytes"], [95, 4, 1, "", "ndim"], [25, 4, 1, "id1247", "objType"], [25, 2, 1, "id1248", "opeq"], [25, 2, 1, "id1249", "parity"], [25, 2, 1, "id1250", "popcount"], [25, 2, 1, "id1251", "pretty_print_info"], [93, 2, 1, "", "prod"], [25, 2, 1, "id1253", "register"], [25, 4, 1, "id1254", "registered_name"], [25, 2, 1, "id1255", "reshape"], [25, 2, 1, "id1256", "rotl"], [25, 2, 1, "id1257", "rotr"], [25, 2, 1, "id1258", "save"], [95, 4, 1, "", "shape"], [95, 4, 1, "", "size"], [25, 2, 1, "id1261", "slice_bits"], [93, 2, 1, "", "std"], [93, 2, 1, "", "sum"], [25, 2, 1, "id1264", "to_csv"], [25, 2, 1, "id1267", "to_cuda"], [25, 2, 1, "id1268", "to_hdf"], [25, 2, 1, "id1269", "to_list"], [95, 5, 1, "", "to_ndarray"], [25, 2, 1, "id1271", "to_parquet"], [25, 2, 1, "id1272", "transfer"], [25, 2, 1, "id1273", "unregister"], [25, 2, 1, "id1274", "update_hdf"], [25, 2, 1, "id1275", "value_counts"], [93, 2, 1, "", "var"]], "arkouda.pdarrayclass": [[37, 7, 1, "", "RegistrationError"], [37, 5, 1, "", "all"], [37, 5, 1, "", "any"], [37, 5, 1, "", "argmax"], [37, 5, 1, "", "argmaxk"], [37, 5, 1, "", "argmin"], [37, 5, 1, "", "argmink"], [37, 5, 1, "", "attach_pdarray"], [37, 5, 1, "", "broadcast_to_shape"], [37, 5, 1, "", "clear"], [37, 5, 1, "", "clz"], [37, 5, 1, "", "corr"], [37, 5, 1, "", "cov"], [37, 5, 1, "", "ctz"], [37, 5, 1, "", "divmod"], [37, 5, 1, "", "dot"], [37, 5, 1, "", "fmod"], [37, 5, 1, "", "is_sorted"], [37, 5, 1, "", "max"], [37, 5, 1, "", "maxk"], [37, 5, 1, "", "mean"], [37, 5, 1, "", "min"], [37, 5, 1, "", "mink"], [37, 5, 1, "", "mod"], [37, 5, 1, "", "parity"], [37, 1, 1, "", "pdarray"], [37, 5, 1, "", "popcount"], [37, 5, 1, "", "power"], [37, 5, 1, "", "prod"], [37, 5, 1, "", "rotl"], [37, 5, 1, "", "rotr"], [37, 5, 1, "", "sqrt"], [37, 5, 1, "", "std"], [37, 5, 1, "", "sum"], [37, 5, 1, "", "unregister_pdarray_by_name"], [37, 5, 1, "", "var"]], "arkouda.pdarrayclass.pdarray": [[37, 4, 1, "", "BinOps"], [37, 4, 1, "", "OpEqOps"], [37, 2, 1, "", "all"], [37, 2, 1, "", "any"], [37, 2, 1, "", "argmax"], [37, 2, 1, "", "argmaxk"], [37, 2, 1, "", "argmin"], [37, 2, 1, "", "argmink"], [37, 2, 1, "", "astype"], [37, 2, 1, "", "attach"], [37, 2, 1, "", "bigint_to_uint_arrays"], [37, 2, 1, "", "clz"], [37, 2, 1, "", "corr"], [37, 2, 1, "", "cov"], [37, 2, 1, "", "ctz"], [37, 4, 1, "id0", "dtype"], [37, 2, 1, "", "equals"], [37, 2, 1, "", "fill"], [37, 2, 1, "", "format_other"], [37, 6, 1, "", "inferred_type"], [37, 2, 1, "", "info"], [37, 2, 1, "", "is_registered"], [37, 2, 1, "", "is_sorted"], [37, 4, 1, "id1", "itemsize"], [37, 2, 1, "", "max"], [37, 6, 1, "", "max_bits"], [37, 2, 1, "", "maxk"], [37, 2, 1, "", "mean"], [37, 2, 1, "", "min"], [37, 2, 1, "", "mink"], [37, 4, 1, "id2", "name"], [37, 6, 1, "", "nbytes"], [37, 4, 1, "id3", "ndim"], [37, 4, 1, "", "objType"], [37, 2, 1, "", "opeq"], [37, 2, 1, "", "parity"], [37, 2, 1, "", "popcount"], [37, 2, 1, "", "pretty_print_info"], [37, 2, 1, "", "prod"], [37, 2, 1, "", "register"], [37, 4, 1, "", "registered_name"], [37, 2, 1, "", "reshape"], [37, 2, 1, "", "rotl"], [37, 2, 1, "", "rotr"], [37, 2, 1, "", "save"], [37, 4, 1, "id4", "shape"], [37, 4, 1, "id5", "size"], [37, 2, 1, "", "slice_bits"], [37, 2, 1, "", "std"], [37, 2, 1, "", "sum"], [37, 2, 1, "", "to_csv"], [37, 2, 1, "", "to_cuda"], [37, 2, 1, "", "to_hdf"], [37, 2, 1, "", "to_list"], [37, 2, 1, "", "to_ndarray"], [37, 2, 1, "", "to_parquet"], [37, 2, 1, "", "transfer"], [37, 2, 1, "", "unregister"], [37, 2, 1, "", "update_hdf"], [37, 2, 1, "", "value_counts"], [37, 2, 1, "", "var"]], "arkouda.pdarraycreation": [[38, 5, 1, "", "arange"], [38, 5, 1, "", "array"], [38, 5, 1, "", "bigint_from_uint_arrays"], [38, 5, 1, "", "from_series"], [38, 5, 1, "", "full"], [38, 5, 1, "", "full_like"], [38, 5, 1, "", "linspace"], [38, 5, 1, "", "ones"], [38, 5, 1, "", "ones_like"], [38, 5, 1, "", "promote_to_common_dtype"], [38, 5, 1, "", "randint"], [38, 5, 1, "", "random_strings_lognormal"], [38, 5, 1, "", "random_strings_uniform"], [38, 5, 1, "", "scalar_array"], [38, 5, 1, "", "standard_normal"], [38, 5, 1, "", "uniform"], [38, 5, 1, "", "zeros"], [38, 5, 1, "", "zeros_like"]], "arkouda.pdarraymanipulation": [[39, 5, 1, "", "delete"], [39, 5, 1, "", "vstack"]], "arkouda.pdarraysetops": [[40, 5, 1, "", "concatenate"], [40, 5, 1, "", "in1d"], [40, 5, 1, "", "indexof1d"], [40, 5, 1, "", "intersect1d"], [40, 5, 1, "", "setdiff1d"], [40, 5, 1, "", "setxor1d"], [40, 5, 1, "", "union1d"]], "arkouda.plotting": [[41, 5, 1, "", "hist_all"], [41, 5, 1, "", "plot_dist"]], "arkouda.random": [[96, 1, 1, "", "Generator"], [96, 5, 1, "", "default_rng"], [42, 5, 1, "", "randint"], [42, 5, 1, "", "standard_normal"], [42, 5, 1, "", "uniform"]], "arkouda.random.Generator": [[96, 5, 1, "", "choice"], [96, 5, 1, "", "exponential"], [96, 5, 1, "", "integers"], [96, 5, 1, "", "logistic"], [96, 5, 1, "", "lognormal"], [96, 5, 1, "", "normal"], [96, 5, 1, "", "permutation"], [96, 5, 1, "", "poisson"], [96, 5, 1, "", "random"], [96, 5, 1, "", "shuffle"], [96, 5, 1, "", "standard_exponential"], [96, 5, 1, "", "standard_normal"], [96, 5, 1, "", "uniform"]], "arkouda.row": [[43, 1, 1, "", "Row"]], "arkouda.scipy": [[44, 1, 1, "", "Power_divergenceResult"], [44, 5, 1, "", "chisquare"], [44, 5, 1, "", "power_divergence"], [45, 0, 0, "-", "special"], [46, 0, 0, "-", "stats"]], "arkouda.scipy.Power_divergenceResult": [[44, 4, 1, "", "pvalue"], [44, 4, 1, "", "statistic"]], "arkouda.scipy.special": [[45, 5, 1, "", "xlogy"]], "arkouda.scipy.stats": [[46, 1, 1, "", "chi2"]], "arkouda.scipy.stats.chi2": [[46, 2, 1, "", "a"], [46, 2, 1, "", "b"], [46, 2, 1, "", "badvalue"], [46, 2, 1, "", "generic_moment"], [46, 2, 1, "", "moment_type"], [46, 2, 1, "", "name"], [46, 2, 1, "", "numargs"], [46, 2, 1, "", "shapes"], [46, 2, 1, "", "vecentropy"], [46, 2, 1, "", "xtol"]], "arkouda.sctypeDict": [[25, 2, 1, "", "clear"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "fromkeys"], [25, 2, 1, "", "get"], [25, 2, 1, "", "items"], [25, 2, 1, "", "keys"], [25, 2, 1, "", "pop"], [25, 2, 1, "", "popitem"], [25, 2, 1, "", "setdefault"], [25, 2, 1, "", "update"], [25, 2, 1, "", "values"]], "arkouda.sctypes": [[25, 2, 1, "", "clear"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "fromkeys"], [25, 2, 1, "", "get"], [25, 2, 1, "", "items"], [25, 2, 1, "", "keys"], [25, 2, 1, "", "pop"], [25, 2, 1, "", "popitem"], [25, 2, 1, "", "setdefault"], [25, 2, 1, "", "update"], [25, 2, 1, "", "values"]], "arkouda.security": [[47, 5, 1, "", "generate_token"], [47, 5, 1, "", "generate_username_token_json"], [47, 5, 1, "", "get_arkouda_client_directory"], [47, 5, 1, "", "get_home_directory"], [47, 5, 1, "", "get_username"], [47, 3, 1, "", "username_tokenizer"]], "arkouda.segarray": [[48, 3, 1, "", "LEN_SUFFIX"], [48, 3, 1, "", "SEG_SUFFIX"], [48, 1, 1, "", "SegArray"], [48, 3, 1, "", "VAL_SUFFIX"], [48, 5, 1, "", "segarray"]], "arkouda.segarray.SegArray": [[48, 2, 1, "", "AND"], [48, 2, 1, "", "OR"], [48, 2, 1, "", "XOR"], [48, 2, 1, "", "aggregate"], [48, 2, 1, "", "all"], [48, 2, 1, "", "any"], [48, 2, 1, "", "append"], [48, 2, 1, "", "append_single"], [48, 2, 1, "", "argmax"], [48, 2, 1, "", "argmin"], [48, 2, 1, "", "attach"], [48, 2, 1, "", "concat"], [48, 2, 1, "", "copy"], [48, 4, 1, "", "dtype"], [48, 2, 1, "", "filter"], [48, 2, 1, "", "from_multi_array"], [48, 2, 1, "", "from_parts"], [48, 2, 1, "", "from_return_msg"], [48, 2, 1, "", "get_jth"], [48, 2, 1, "", "get_length_n"], [48, 2, 1, "", "get_ngrams"], [48, 2, 1, "", "get_prefixes"], [48, 2, 1, "", "get_suffixes"], [48, 6, 1, "", "grouping"], [48, 2, 1, "", "hash"], [48, 2, 1, "", "intersect"], [48, 2, 1, "", "is_registered"], [48, 2, 1, "", "load"], [48, 4, 1, "", "logger"], [48, 2, 1, "", "max"], [48, 2, 1, "", "mean"], [48, 2, 1, "", "min"], [48, 6, 1, "", "nbytes"], [48, 6, 1, "", "non_empty"], [48, 2, 1, "", "nunique"], [48, 4, 1, "", "objType"], [48, 2, 1, "", "prepend_single"], [48, 2, 1, "", "prod"], [48, 2, 1, "", "read_hdf"], [48, 2, 1, "", "register"], [48, 4, 1, "", "registered_name"], [48, 2, 1, "", "remove_repeats"], [48, 2, 1, "", "save"], [48, 4, 1, "", "segments"], [48, 2, 1, "", "set_jth"], [48, 2, 1, "", "setdiff"], [48, 2, 1, "", "setxor"], [48, 4, 1, "", "size"], [48, 2, 1, "", "sum"], [48, 2, 1, "", "to_hdf"], [48, 2, 1, "", "to_list"], [48, 2, 1, "", "to_ndarray"], [48, 2, 1, "", "to_parquet"], [48, 2, 1, "", "transfer"], [48, 2, 1, "", "union"], [48, 2, 1, "", "unique"], [48, 2, 1, "", "unregister"], [48, 2, 1, "", "unregister_segarray_by_name"], [48, 2, 1, "", "update_hdf"], [48, 4, 1, "", "valsize"], [48, 4, 1, "", "values"]], "arkouda.series": [[49, 1, 1, "", "Series"]], "arkouda.series.Series": [[49, 2, 1, "", "add"], [49, 2, 1, "", "argmax"], [49, 2, 1, "", "argmin"], [49, 6, 1, "", "at"], [49, 2, 1, "", "attach"], [49, 2, 1, "", "concat"], [49, 2, 1, "", "diff"], [49, 2, 1, "", "dt"], [49, 6, 1, "", "dtype"], [49, 2, 1, "", "fillna"], [49, 2, 1, "", "from_return_msg"], [49, 2, 1, "", "has_repeat_labels"], [49, 2, 1, "", "hasnans"], [49, 2, 1, "", "head"], [49, 6, 1, "", "iat"], [49, 6, 1, "", "iloc"], [49, 2, 1, "", "is_registered"], [49, 2, 1, "", "isin"], [49, 2, 1, "", "isna"], [49, 2, 1, "", "isnull"], [49, 6, 1, "", "loc"], [49, 2, 1, "", "locate"], [49, 2, 1, "", "map"], [49, 2, 1, "", "max"], [49, 2, 1, "", "mean"], [49, 2, 1, "", "memory_usage"], [49, 2, 1, "", "min"], [49, 6, 1, "", "ndim"], [49, 2, 1, "", "notna"], [49, 2, 1, "", "notnull"], [49, 2, 1, "", "objType"], [49, 2, 1, "", "pdconcat"], [49, 2, 1, "", "prod"], [49, 2, 1, "", "register"], [49, 6, 1, "", "shape"], [49, 2, 1, "", "sort_index"], [49, 2, 1, "", "sort_values"], [49, 2, 1, "", "std"], [49, 2, 1, "", "str_acc"], [49, 2, 1, "", "sum"], [49, 2, 1, "", "tail"], [49, 2, 1, "", "to_dataframe"], [49, 2, 1, "", "to_list"], [49, 2, 1, "", "to_markdown"], [49, 2, 1, "", "to_ndarray"], [49, 2, 1, "", "to_pandas"], [49, 2, 1, "", "topn"], [49, 2, 1, "", "unregister"], [49, 2, 1, "", "validate_key"], [49, 2, 1, "", "validate_val"], [49, 2, 1, "", "value_counts"], [49, 2, 1, "", "var"]], "arkouda.short": [[25, 2, 1, "", "bit_count"]], "arkouda.single": [[25, 2, 1, "", "as_integer_ratio"], [25, 2, 1, "", "is_integer"]], "arkouda.sorting": [[50, 5, 1, "", "argsort"], [50, 5, 1, "", "coargsort"], [50, 5, 1, "", "sort"]], "arkouda.sparray": [[25, 4, 1, "id1282", "dtype"], [25, 4, 1, "id1283", "itemsize"], [25, 4, 1, "id1284", "layout"], [25, 4, 1, "id1285", "name"], [25, 4, 1, "id1286", "ndim"], [25, 4, 1, "", "nnz"], [25, 4, 1, "id1287", "shape"], [25, 4, 1, "id1288", "size"]], "arkouda.sparrayclass": [[51, 5, 1, "", "create_sparray"], [51, 3, 1, "", "logger"], [51, 1, 1, "", "sparray"]], "arkouda.sparrayclass.sparray": [[51, 4, 1, "id0", "dtype"], [51, 4, 1, "id1", "itemsize"], [51, 4, 1, "id2", "layout"], [51, 4, 1, "id3", "name"], [51, 4, 1, "id4", "ndim"], [51, 4, 1, "", "nnz"], [51, 4, 1, "id5", "shape"], [51, 4, 1, "id6", "size"]], "arkouda.sparsematrix": [[52, 5, 1, "", "random_sparse_matrix"], [52, 5, 1, "", "sparse_matrix_matrix_mult"]], "arkouda.str_": [[25, 2, 1, "id1291", "T"], [25, 2, 1, "id1292", "all"], [25, 2, 1, "id1293", "any"], [25, 2, 1, "id1294", "argmax"], [25, 2, 1, "id1295", "argmin"], [25, 2, 1, "id1296", "argsort"], [25, 2, 1, "id1297", "astype"], [25, 2, 1, "id1298", "base"], [25, 2, 1, "id1299", "byteswap"], [25, 2, 1, "id1300", "choose"], [25, 2, 1, "id1301", "clip"], [25, 2, 1, "id1302", "compress"], [25, 2, 1, "id1303", "conj"], [25, 2, 1, "id1304", "conjugate"], [25, 2, 1, "id1305", "copy"], [25, 2, 1, "id1306", "cumprod"], [25, 2, 1, "id1307", "cumsum"], [25, 2, 1, "id1308", "data"], [25, 2, 1, "id1309", "diagonal"], [25, 2, 1, "id1310", "dtype"], [25, 2, 1, "id1311", "dump"], [25, 2, 1, "id1312", "dumps"], [25, 2, 1, "id1313", "fill"], [25, 2, 1, "id1314", "flags"], [25, 2, 1, "id1315", "flat"], [25, 2, 1, "id1316", "flatten"], [25, 2, 1, "id1317", "getfield"], [25, 2, 1, "id1318", "imag"], [25, 2, 1, "id1319", "item"], [25, 2, 1, "id1320", "itemset"], [25, 2, 1, "id1321", "itemsize"], [25, 2, 1, "id1322", "max"], [25, 2, 1, "id1323", "mean"], [25, 2, 1, "id1324", "min"], [25, 2, 1, "id1325", "nbytes"], [25, 2, 1, "id1326", "ndim"], [25, 2, 1, "id1327", "newbyteorder"], [25, 2, 1, "id1328", "nonzero"], [25, 2, 1, "id1329", "prod"], [25, 2, 1, "id1330", "ptp"], [25, 2, 1, "id1331", "put"], [25, 2, 1, "id1332", "ravel"], [25, 2, 1, "id1333", "real"], [25, 2, 1, "id1334", "repeat"], [25, 2, 1, "id1335", "reshape"], [25, 2, 1, "id1336", "resize"], [25, 2, 1, "id1337", "round"], [25, 2, 1, "id1338", "searchsorted"], [25, 2, 1, "id1339", "setfield"], [25, 2, 1, "id1340", "setflags"], [25, 2, 1, "id1341", "shape"], [25, 2, 1, "id1342", "size"], [25, 2, 1, "id1343", "sort"], [25, 2, 1, "id1344", "squeeze"], [25, 2, 1, "id1345", "std"], [25, 2, 1, "id1346", "strides"], [25, 2, 1, "id1347", "sum"], [25, 2, 1, "id1348", "swapaxes"], [25, 2, 1, "id1349", "take"], [25, 2, 1, "id1350", "tobytes"], [25, 2, 1, "id1351", "tofile"], [25, 2, 1, "id1352", "tolist"], [25, 2, 1, "id1353", "tostring"], [25, 2, 1, "id1354", "trace"], [25, 2, 1, "id1355", "transpose"], [25, 2, 1, "id1356", "var"], [25, 2, 1, "id1357", "view"]], "arkouda.strings": [[53, 1, 1, "", "Strings"]], "arkouda.strings.Strings": [[53, 4, 1, "", "BinOps"], [53, 2, 1, "", "astype"], [53, 2, 1, "", "attach"], [53, 2, 1, "", "cached_regex_patterns"], [53, 2, 1, "", "capitalize"], [53, 2, 1, "", "contains"], [53, 2, 1, "", "decode"], [53, 4, 1, "id0", "dtype"], [53, 2, 1, "", "encode"], [53, 2, 1, "", "endswith"], [53, 4, 1, "id1", "entry"], [53, 2, 1, "", "equals"], [53, 2, 1, "", "find_locations"], [53, 2, 1, "", "findall"], [53, 2, 1, "", "flatten"], [53, 2, 1, "", "from_parts"], [53, 2, 1, "", "from_return_msg"], [53, 2, 1, "", "fullmatch"], [53, 2, 1, "", "get_bytes"], [53, 2, 1, "", "get_lengths"], [53, 2, 1, "", "get_offsets"], [53, 2, 1, "", "get_prefixes"], [53, 2, 1, "", "get_suffixes"], [53, 2, 1, "", "group"], [53, 2, 1, "", "hash"], [53, 6, 1, "", "inferred_type"], [53, 2, 1, "", "info"], [53, 2, 1, "", "is_registered"], [53, 2, 1, "", "isalnum"], [53, 2, 1, "", "isalpha"], [53, 2, 1, "", "isdecimal"], [53, 2, 1, "", "isdigit"], [53, 2, 1, "", "isempty"], [53, 2, 1, "", "islower"], [53, 2, 1, "", "isspace"], [53, 2, 1, "", "istitle"], [53, 2, 1, "", "isupper"], [53, 4, 1, "id2", "logger"], [53, 2, 1, "", "lower"], [53, 2, 1, "", "lstick"], [53, 2, 1, "", "match"], [53, 4, 1, "", "nbytes"], [53, 4, 1, "", "ndim"], [53, 4, 1, "", "objType"], [53, 2, 1, "", "peel"], [53, 2, 1, "", "pretty_print_info"], [53, 2, 1, "", "purge_cached_regex_patterns"], [53, 2, 1, "", "register"], [53, 4, 1, "", "registered_name"], [53, 2, 1, "", "rpeel"], [53, 2, 1, "", "save"], [53, 2, 1, "", "search"], [53, 4, 1, "", "shape"], [53, 4, 1, "", "size"], [53, 2, 1, "", "split"], [53, 2, 1, "", "startswith"], [53, 2, 1, "", "stick"], [53, 2, 1, "", "strip"], [53, 2, 1, "", "sub"], [53, 2, 1, "", "subn"], [53, 2, 1, "", "title"], [53, 2, 1, "", "to_csv"], [53, 2, 1, "", "to_hdf"], [53, 2, 1, "", "to_list"], [53, 2, 1, "", "to_ndarray"], [53, 2, 1, "", "to_parquet"], [53, 2, 1, "", "transfer"], [53, 2, 1, "", "unregister"], [53, 2, 1, "", "unregister_strings_by_name"], [53, 2, 1, "", "update_hdf"], [53, 2, 1, "", "upper"]], "arkouda.testing": [[54, 5, 1, "", "assert_almost_equal"], [54, 5, 1, "", "assert_almost_equivalent"], [54, 5, 1, "", "assert_arkouda_array_equal"], [54, 5, 1, "", "assert_arkouda_array_equivalent"], [54, 5, 1, "", "assert_arkouda_pdarray_equal"], [54, 5, 1, "", "assert_arkouda_segarray_equal"], [54, 5, 1, "", "assert_arkouda_strings_equal"], [54, 5, 1, "", "assert_attr_equal"], [54, 5, 1, "", "assert_categorical_equal"], [54, 5, 1, "", "assert_class_equal"], [54, 5, 1, "", "assert_contains_all"], [54, 5, 1, "", "assert_copy"], [54, 5, 1, "", "assert_dict_equal"], [54, 5, 1, "", "assert_equal"], [54, 5, 1, "", "assert_equivalent"], [54, 5, 1, "", "assert_frame_equal"], [54, 5, 1, "", "assert_frame_equivalent"], [54, 5, 1, "", "assert_index_equal"], [54, 5, 1, "", "assert_index_equivalent"], [54, 5, 1, "", "assert_is_sorted"], [54, 5, 1, "", "assert_series_equal"], [54, 5, 1, "", "assert_series_equivalent"]], "arkouda.timeclass": [[55, 1, 1, "", "Datetime"], [55, 1, 1, "", "Timedelta"], [55, 5, 1, "", "date_range"], [55, 5, 1, "", "timedelta_range"]], "arkouda.timeclass.Datetime": [[55, 6, 1, "", "date"], [55, 6, 1, "", "day"], [55, 6, 1, "", "day_of_week"], [55, 6, 1, "", "day_of_year"], [55, 6, 1, "", "dayofweek"], [55, 6, 1, "", "dayofyear"], [55, 6, 1, "", "hour"], [55, 6, 1, "", "is_leap_year"], [55, 2, 1, "", "is_registered"], [55, 2, 1, "", "isocalendar"], [55, 6, 1, "", "microsecond"], [55, 6, 1, "", "millisecond"], [55, 6, 1, "", "minute"], [55, 6, 1, "", "month"], [55, 6, 1, "", "nanosecond"], [55, 2, 1, "", "register"], [55, 6, 1, "", "second"], [55, 4, 1, "", "special_objType"], [55, 2, 1, "", "sum"], [55, 4, 1, "", "supported_opeq"], [55, 4, 1, "", "supported_with_datetime"], [55, 4, 1, "", "supported_with_pdarray"], [55, 4, 1, "", "supported_with_r_datetime"], [55, 4, 1, "", "supported_with_r_pdarray"], [55, 4, 1, "", "supported_with_r_timedelta"], [55, 4, 1, "", "supported_with_timedelta"], [55, 2, 1, "", "to_pandas"], [55, 2, 1, "", "unregister"], [55, 6, 1, "", "week"], [55, 6, 1, "", "weekday"], [55, 6, 1, "", "weekofyear"], [55, 6, 1, "", "year"]], "arkouda.timeclass.Timedelta": [[55, 2, 1, "", "abs"], [55, 6, 1, "", "components"], [55, 6, 1, "", "days"], [55, 2, 1, "", "is_registered"], [55, 6, 1, "", "microseconds"], [55, 6, 1, "", "nanoseconds"], [55, 2, 1, "", "register"], [55, 6, 1, "", "seconds"], [55, 4, 1, "", "special_objType"], [55, 2, 1, "", "std"], [55, 2, 1, "", "sum"], [55, 4, 1, "", "supported_opeq"], [55, 4, 1, "", "supported_with_datetime"], [55, 4, 1, "", "supported_with_pdarray"], [55, 4, 1, "", "supported_with_r_datetime"], [55, 4, 1, "", "supported_with_r_pdarray"], [55, 4, 1, "", "supported_with_r_timedelta"], [55, 4, 1, "", "supported_with_timedelta"], [55, 2, 1, "", "to_pandas"], [55, 2, 1, "", "total_seconds"], [55, 2, 1, "", "unregister"]], "arkouda.ubyte": [[25, 2, 1, "", "bit_count"]], "arkouda.uint": [[25, 2, 1, "", "bit_count"]], "arkouda.uint16": [[25, 2, 1, "", "bit_count"]], "arkouda.uint32": [[25, 2, 1, "", "bit_count"]], "arkouda.uint64": [[25, 2, 1, "", "bit_count"]], "arkouda.uint8": [[25, 2, 1, "", "bit_count"]], "arkouda.uintc": [[25, 2, 1, "", "bit_count"]], "arkouda.uintp": [[25, 2, 1, "", "bit_count"]], "arkouda.ulonglong": [[25, 2, 1, "", "bit_count"]], "arkouda.ushort": [[25, 2, 1, "", "bit_count"]], "arkouda.util": [[56, 5, 1, "", "attach"], [56, 5, 1, "", "attach_all"], [56, 5, 1, "", "broadcast_dims"], [56, 5, 1, "", "concatenate"], [56, 5, 1, "", "convert_bytes"], [56, 5, 1, "", "convert_if_categorical"], [56, 5, 1, "", "enrich_inplace"], [56, 5, 1, "", "expand"], [56, 5, 1, "", "generic_concat"], [56, 5, 1, "", "get_callback"], [56, 5, 1, "", "identity"], [56, 5, 1, "", "invert_permutation"], [56, 5, 1, "", "is_float"], [56, 5, 1, "", "is_int"], [56, 5, 1, "", "is_numeric"], [56, 5, 1, "", "is_registered"], [56, 5, 1, "", "map"], [56, 5, 1, "", "most_common"], [56, 5, 1, "", "register"], [56, 5, 1, "", "register_all"], [56, 5, 1, "", "report_mem"], [56, 5, 1, "", "sparse_sum_help"], [56, 5, 1, "", "unregister"], [56, 5, 1, "", "unregister_all"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:attribute", "5": "py:function", "6": "py:property", "7": "py:exception"}, "terms": {"": [0, 1, 2, 3, 4, 7, 8, 11, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 34, 35, 36, 37, 42, 46, 47, 48, 49, 51, 53, 54, 55, 56, 58, 61, 62, 66, 75, 76, 77, 80, 81, 82, 84, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 100, 101], "0": [0, 3, 4, 5, 8, 11, 15, 17, 18, 19, 21, 22, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 66, 67, 68, 73, 76, 77, 79, 80, 82, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "00": [21, 25, 36, 59], "00000000000000000": [21, 23, 25, 26, 34, 45, 56, 91, 92], "00000000000003": [23, 25, 92], "00012": [25, 36], "00018361238254747651": 59, "0001_0d4865d7c9453adc6af6409568da326845c358b9_20230406_165330": 59, "0002": 59, "0002090000002681336": 59, "0009575499998391024": 59, "001": 46, "0011": [25, 36], "001326192548940973": 59, "0014_31de39be8b19c76d073a8999def6673a305c250d_20230405_145759_uncommit": 59, "0015_31de39be8b19c76d073a8999def6673a305c250d_20230405_145947_uncommit": 59, "0024": [25, 36], "00383609999971668": 59, "0039507749997937935": 59, "0040258999997604406": 59, "004057779999857303": 59, "004066600000442122": 59, "004131924999910552": 59, "004159775000061927": 59, "004246700000294368": 59, "0043372999998609885": 59, "0048064200000226265": 59, "005089474999749655": 59, "007168699999965611": 59, "01": [25, 36, 38, 46, 59, 62, 64], "013": 93, "0197": 59, "01t00": [25, 36], "02": 59, "020288899999286514": 59, "021728052940979934": [25, 42, 96], "024032100000113132": 59, "03": 59, "030785499755523249": [25, 42, 96], "03960235520756414": [25, 44], "04": [59, 80], "04380595350226197": [25, 44], "0441791878997098": [25, 38, 42], "0472855509390593": [25, 34, 87], "04t12": 59, "04t16": 59, "05": [25, 54], "05309592737584": [25, 34, 87], "0532529435624589": [25, 42, 96], "0550596900172": 59, "055256829926011691": [25, 42, 96], "0598322696795694": [25, 42, 96], "05t15": 59, "06": 59, "0625": [21, 25], "07": 59, "07734942223993": 93, "08": [25, 54], "083130710959903542": [25, 38, 42, 90], "08505865366367038": [25, 42, 96], "085536923187668": [25, 34, 87], "0889": 59, "09": [59, 76], "0954451150103321": [23, 25, 92], "097392": 59, "0b10": [25, 37], "0b100": [22, 25, 35, 36, 46], "0b101111111111111111111111111111111111111111111111111111111111111111": [25, 37], "0d": [25, 36], "0x1": [22, 25, 35, 36], "0x1p": [22, 25, 35, 36], "0x7f2cf23e10c0": [21, 25, 91], "0x91d4430": [25, 36], "1": [0, 1, 3, 5, 7, 10, 11, 14, 16, 17, 18, 19, 21, 22, 23, 25, 26, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 56, 57, 59, 60, 62, 63, 66, 67, 68, 71, 73, 76, 77, 78, 79, 80, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101], "10": [3, 7, 18, 21, 22, 23, 25, 28, 34, 35, 36, 37, 38, 40, 41, 42, 44, 46, 48, 49, 50, 53, 56, 58, 59, 66, 77, 79, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "100": [21, 25, 34, 37, 41, 46, 49, 56, 59, 66, 87], "1000": [21, 25, 26, 30, 46, 85, 93], "10000": 19, "100000": 66, "100000000": 82, "1000000000000001": [25, 34], "100x40": [4, 8], "101": [25, 36, 53], "1024": [1, 25, 37], "104": [25, 53], "105": [0, 19], "106": [25, 42, 96], "1073741824": [21, 25, 91], "1074": [22, 25, 35, 36], "108": [23, 25, 92], "109302162163285": [25, 44], "11": [3, 21, 22, 25, 34, 35, 36, 40, 48, 56, 59, 64, 66, 67, 87, 88, 91, 93, 94, 97], "110": [25, 53], "110680464442257309696": [3, 25], "110680464442257309708": [3, 25], "1109": [25, 36], "111": [21, 25, 53, 91], "11101": [25, 36], "11111111111111116": [23, 25, 92], "114": [25, 53], "116": [25, 53], "119": [25, 53], "11e": [25, 36], "12": [3, 21, 23, 25, 28, 34, 36, 40, 44, 48, 53, 56, 59, 75, 79, 87, 88, 92, 94, 97], "120": [25, 53], "121": [25, 53], "122": [25, 53], "1234": [18, 21, 25, 28, 37, 48, 53, 62], "1235": [18, 21, 25, 28, 37, 48, 53], "1236": [18, 21, 25, 28, 37, 48, 53], "1237": [18, 21, 25, 28, 37, 48, 53], "127": [22, 25, 35, 36, 60], "128": [18, 22, 25, 34, 35, 36, 48, 53], "13": [3, 25, 34, 40, 42, 56, 59, 76, 79, 87, 88, 93, 94, 96], "1319566682702642": [25, 42, 96], "134": [25, 34, 87], "14": [3, 21, 23, 25, 34, 36, 40, 42, 46, 53, 59, 66, 67, 87, 88, 92, 94, 96], "14159": [22, 25, 34, 35, 36], "1415927": [25, 36], "1415927e": [25, 36], "1436": 59, "15": [3, 18, 21, 25, 34, 36, 40, 42, 53, 88, 94, 96], "1514764800000000000": [25, 38], "15461882265": 73, "158": 59, "1598310770203937": [25, 34, 87], "16": [21, 22, 23, 25, 34, 35, 36, 42, 56, 59, 60, 61, 76, 77, 87, 88, 92, 94, 96], "160": [25, 37], "1622479306453748": [25, 34, 87], "16400145561571539": [25, 42, 96], "166020696663385964564": [3, 25], "166020696663385964574": [3, 25], "1665150633720014": [25, 42, 96], "17": [21, 25, 36, 42, 59, 66, 88, 94, 96], "1723810583573375": [25, 38, 42], "18": [21, 23, 25, 37, 42, 59, 87, 88, 92, 94, 96], "18446744073709551616": [25, 37, 38], "18446744073709551617": [25, 37, 38], "18446744073709551618": [25, 37, 38], "18446744073709551619": [25, 37, 38], "18446744073709551620": [25, 37, 38], "1882": 59, "18_446_744_073_709_551_615": [22, 25, 35, 36], "19": [25, 34, 56, 88, 94], "1923875335537315": [25, 42, 96], "196608": 59, "1970": [25, 36], "1980": [25, 36], "1_2___": [25, 32, 53, 101], "1d": [5, 9, 11, 15, 25, 34, 40, 48, 49, 97, 98, 99], "1e": [25, 46, 54], "1string": [25, 53], "2": [0, 3, 7, 17, 18, 21, 22, 23, 25, 26, 28, 32, 34, 35, 36, 37, 38, 40, 42, 44, 45, 46, 48, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 66, 67, 68, 75, 76, 77, 78, 79, 80, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101], "20": [1, 3, 4, 8, 21, 25, 34, 36, 40, 42, 44, 62, 66, 79, 80, 87, 88, 94, 96], "2000": 59, "2008": [25, 36], "20159494048757": [25, 42, 96], "2018": [25, 38], "2020": 59, "2022": 77, "2023": [59, 76], "2024": [25, 44], "2047": [22, 25, 35, 36], "2048": [25, 37], "208": 59, "2080": 59, "20ghz": 59, "21": [3, 25, 34, 36, 87, 88], "210": 59, "2147483647": [25, 36], "2147483648": [25, 36], "21589865655358": [25, 34, 87], "22": [3, 22, 25, 35, 36, 87, 88], "2200000000": 59, "2207999000": 59, "222": [21, 25, 91], "2250": 59, "22e": [25, 36], "23": [3, 22, 25, 35, 36, 37, 88], "230000071797338e": [25, 36], "2324_pytest_benchmark_doc": 59, "236": 59, "23e": [25, 36], "23e24": [25, 36], "24": [3, 25, 26, 34, 36, 37, 49, 59, 79, 87, 88], "246": 59, "25": [3, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 38, 49, 56, 88, 90, 92], "255": [22, 25, 35, 36], "256": [25, 37, 59], "2561": 59, "25x": [25, 36], "26": [59, 88], "263": 59, "264": 59, "267": 59, "27": [21, 25, 37, 59, 66, 88], "28": [56, 88], "281": 59, "29": 88, "290": [21, 25], "298": [21, 25], "2_147_483_647": [22, 25, 35, 36], "2_147_483_648": [22, 25, 35, 36], "2d": [4, 5, 8], "2\u00b3x\u2087": [25, 53], "2\u00b3\u2087": [25, 53], "3": [3, 17, 21, 22, 23, 25, 26, 28, 32, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 50, 53, 54, 56, 58, 59, 66, 67, 68, 76, 77, 79, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101], "30": [3, 25, 26, 34, 44, 49, 56, 63, 88], "3000": [25, 49], "3000000000000007": [25, 34], "3000488281": [25, 36], "30013431967121934": [25, 38, 42], "3025850929940459": [25, 34, 87], "31": [62, 80], "3141": [25, 36], "317766166719343": [25, 45], "31de39be8b19c76d073a8999def6673a305c250d": 59, "32": [21, 22, 25, 28, 34, 35, 36, 37, 47, 59, 66, 68], "3219280948873626": [25, 34, 87], "324": [22, 25, 35, 36], "32767": [25, 36], "32768": [25, 36], "32_767": [22, 25, 35, 36], "32_768": [22, 25, 35, 36], "33": [25, 34, 87], "3304": 59, "3306": 59, "333": [21, 25, 91], "333333333333333": [23, 25, 92], "33333333333333326": [23, 25, 92], "33333333333333337": [23, 25, 92], "33333333333333348": [23, 25, 92], "333333333333334": [25, 44], "35": 66, "350": 59, "35000": 66, "353429832157099": [25, 38, 42, 90], "36": [22, 25, 34, 35, 36, 46, 93], "3620": 59, "3673425816523577": [25, 42, 96], "36893488147419103233": [3, 25], "37": 66, "3805": 59, "384": [25, 37], "38552048588998722": [25, 42, 96], "3866978126031091": [25, 42, 96], "3890560989306504": [25, 34, 87], "39": [21, 25, 59], "3dnowprefetch": 59, "3q4kc": [25, 38], "3w": [22, 25, 35, 36], "4": [3, 4, 8, 17, 18, 21, 22, 23, 25, 26, 28, 32, 34, 35, 36, 37, 38, 40, 42, 45, 46, 48, 49, 50, 53, 54, 56, 59, 66, 68, 76, 77, 79, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101], "40000": [21, 25], "4097": 59, "4110385860243131": [25, 34, 87], "4142135623730951": [25, 37], "41619265571741659": [25, 38], "4177": 59, "42": 94, "4231": 59, "4298": 59, "4328": 59, "44017172817806": 59, "4444": 59, "45": [25, 34], "450": [25, 34, 87], "454368507659211": [25, 34, 87], "457": 19, "459": [21, 25], "46": [25, 34, 49, 87], "4608": [25, 37], "4610935": [25, 36], "4621": 59, "4657359027997265": [25, 45], "47108547995356098": [25, 42, 96], "47383036230759112": [25, 38, 42], "478894913238722": [25, 34, 87], "48": [25, 26, 49], "4869": 59, "4875": 59, "49": [25, 34], "4930614433405491": [25, 45], "494295836924771": [25, 34, 87], "4_294_967_295": [22, 25, 35, 36], "4k": [25, 38], "5": [3, 17, 18, 19, 21, 22, 23, 25, 26, 34, 35, 36, 37, 38, 40, 42, 44, 45, 46, 48, 49, 50, 53, 54, 56, 59, 66, 67, 68, 70, 77, 79, 84, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 99, 101], "50": [4, 8, 59, 66], "500": [19, 60, 63], "5000": [21, 25], "512": [25, 37], "52": [22, 25, 35, 36, 66], "5246": 59, "5255": 59, "5275252316519465": [23, 25, 92], "53": [25, 34, 36], "5306": 59, "5392023718621486": [25, 38, 42, 90], "54": [25, 34, 87], "5424399190667666": [25, 42, 96], "55": 46, "5541": 59, "5555": [19, 73, 100], "55555555555555536": [23, 25, 92], "55555555555555558": [23, 25, 92], "5571769623557188": [25, 34, 87], "56": [25, 37, 67], "5622": 59, "5652": 59, "567584107142031": [25, 38, 42], "57": 59, "5728783400481925": [25, 34, 87], "57600036956445599": [25, 38], "58": 59, "5801": 59, "5835189384561099": [25, 45], "5837": 59, "598150033144236": [25, 34, 87], "5____6___7": [25, 53, 101], "5e": [22, 25, 35, 36, 59], "5h": [25, 55], "5oz1": [25, 38], "6": [3, 17, 21, 23, 25, 26, 28, 34, 36, 37, 38, 40, 45, 46, 48, 53, 56, 59, 66, 76, 77, 79, 80, 82, 84, 87, 88, 90, 91, 92, 93, 94, 97, 99, 101], "60": [25, 37], "600000000000001": [25, 34], "6051701859880918": [25, 34, 87], "6094379124341003": [25, 45], "61": [25, 37], "6125": 59, "62": [21, 25, 37, 59], "62511314008006458": [25, 42, 96], "63": [25, 34, 37, 95], "64": [20, 22, 25, 28, 34, 35, 36, 37, 38, 42, 59, 90, 91, 95], "6438561897747253": [25, 34, 87], "6450": 59, "6465": 59, "647": 19, "64bit": 59, "65": [25, 37], "65_535": [22, 25, 35, 36], "6615356693784662": [25, 38], "6666666666666665": [23, 25, 92], "67": [21, 25], "68586185091150265": [25, 38, 42], "6864": 59, "68894208386667544": [25, 38, 42, 90], "7": [3, 21, 22, 23, 25, 26, 34, 35, 36, 37, 38, 40, 42, 45, 48, 49, 50, 56, 66, 76, 77, 79, 84, 86, 87, 88, 90, 91, 92, 94, 96, 97, 99], "70": [25, 36], "7085325853376141": [25, 42, 96], "71": 66, "710615785506533": [25, 34, 87], "7182818284590451": [25, 34, 87], "7208667145173608": [25, 42, 96], "7320508075688772": [25, 37], "7336": 59, "75": [23, 25, 38, 90, 92], "75000": 66, "754": [25, 36], "7544": 59, "7659": 59, "77": [21, 25], "77000": 66, "77777777777777768": [23, 25, 92], "77777777777777779": [23, 25, 92], "7852": 59, "78523998586553": [25, 34, 87], "79": 59, "7912": 59, "7999999999999998": [23, 25, 92], "8": [3, 21, 22, 23, 25, 28, 34, 35, 36, 37, 38, 40, 42, 44, 45, 48, 50, 53, 54, 59, 66, 67, 77, 79, 84, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97], "80": 66, "8075": 59, "81": [25, 34], "8377304471659395": [25, 45], "8380": 59, "84": 66, "84010843172504": [25, 34, 87], "86": [21, 25], "8601": [25, 36], "87": 59, "875": [25, 49], "8750h": 59, "8797352989638163": [25, 42, 96], "88": 59, "8800": 59, "88281": [21, 25], "896": [25, 37], "9": [3, 18, 21, 23, 25, 28, 34, 37, 38, 40, 48, 50, 53, 56, 59, 66, 76, 77, 79, 84, 86, 87, 88, 90, 91, 92, 93, 94, 97, 101], "90": 59, "9012": 59, "9160772326374946": [25, 38, 42, 90], "9177": 59, "92176432277231968": [25, 38, 42, 90], "921f9f01b866ep": [22, 25, 35, 36], "9223372036854775807": [22, 25, 35, 36], "92233720368547758085": [3, 25], "92233720368547758090": [3, 25], "92233720368547758091": [3, 25], "92233720368547758095": [3, 25], "931": 79, "9314718055994531": [25, 45], "934176000000015": 93, "9362": 19, "94": 59, "9437184": 59, "9442193396379163": 25, "945880905466208": [25, 34, 87], "96": [25, 37], "9602": 19, "9683": 19, "984375": [22, 25, 35, 36], "99": [21, 25, 46, 59, 91], "999": 46, "9991": 59, "99999": 0, "9999999999999982": [23, 25, 92], "999999999999ap": [22, 25, 35, 36], "9_223_372_036_854_775_807": [22, 25, 35, 36], "9_223_372_036_854_775_808": [22, 25, 35, 36], "A": [1, 2, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 34, 35, 36, 37, 38, 39, 41, 42, 46, 47, 48, 49, 51, 52, 53, 56, 62, 66, 72, 82, 84, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 101], "AND": [7, 23, 25, 48, 83, 92], "And": [46, 95], "As": [0, 25, 34, 36, 37, 46, 49, 51, 62, 67, 69, 76, 77, 84, 87, 95, 98, 101], "At": [25, 34, 37, 87], "Be": [0, 21, 25, 26, 28, 37, 53, 58], "But": [3, 25], "By": [17, 18, 20, 21, 23, 25, 26, 28, 34, 37, 40, 48, 53, 54, 55, 88, 92, 99, 101], "For": [0, 2, 3, 4, 8, 18, 21, 22, 23, 25, 28, 32, 35, 36, 38, 40, 42, 46, 50, 53, 55, 56, 58, 59, 63, 66, 71, 73, 75, 76, 77, 78, 81, 84, 86, 90, 92, 93, 94, 95, 96, 97, 99, 101], "IN": 66, "If": [0, 1, 3, 5, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 46, 48, 49, 51, 53, 54, 55, 56, 58, 60, 61, 62, 63, 67, 68, 70, 73, 75, 76, 77, 78, 80, 81, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101], "In": [18, 21, 22, 23, 25, 28, 34, 35, 36, 37, 42, 53, 58, 59, 60, 62, 63, 66, 73, 75, 76, 78, 80, 84, 87, 92, 93, 94, 96, 97, 100, 101], "It": [0, 4, 20, 21, 25, 36, 37, 47, 48, 54, 56, 60, 61, 64, 66, 67, 68, 70, 73, 76, 77, 80, 91, 92, 97], "Its": [25, 42, 96], "NO": 59, "NOT": [7, 21, 25, 26, 28, 34, 37, 53, 75, 84, 95], "No": [25, 37, 75, 80], "Not": [7, 25, 28, 34, 49, 55, 59, 91], "ONE": 68, "OR": [7, 23, 25, 48, 62, 83, 92], "Of": [25, 55], "On": [18, 19, 25, 100], "One": [21, 23, 25, 26, 36, 37, 49, 56, 66, 92, 98], "Ones": [25, 38, 90], "Or": [25, 36, 62], "The": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 62, 66, 67, 68, 69, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101], "Then": [25, 54], "There": [1, 22, 23, 25, 28, 34, 35, 36, 59, 66, 75, 80, 90, 99], "These": [1, 21, 22, 25, 35, 36, 49, 66, 68, 71, 73, 84], "To": [0, 1, 21, 22, 23, 25, 28, 34, 35, 42, 46, 55, 58, 59, 60, 64, 67, 73, 75, 77, 78, 88, 89, 91, 93, 95, 96, 101], "Will": 59, "With": [23, 25, 36, 78, 88, 92, 94], "_": [3, 23, 25, 32, 36, 53, 92, 101], "__": [25, 32, 53, 101], "__4___5____6___7": [25, 32, 53, 101], "___": [25, 53, 101], "____": [25, 32, 53, 101], "__all__": 58, "__allsymbols__": [25, 27], "__array_function__": 4, "__dict__": 78, "__init__": [2, 25], "__int__": [22, 25, 35, 36, 46], "__name__": [25, 36], "__registeredsymbols__": [25, 27], "__str__": [21, 22, 23, 25, 35, 36, 46, 49], "_abstractbasetim": [25, 55], "_base_unit": [25, 55], "_distn_infrastructur": 46, "_equal": [25, 54], "_equival": [25, 54], "_filter_arkouda_command": 24, "_final": [22, 35], "_genericalia": [22, 25, 35, 36], "_get_grouping_kei": [23, 25, 92], "_length": [25, 48], "_local": [17, 18, 21, 25, 26, 28, 37, 48, 53, 68], "_locale0000": [21, 25], "_segment": [25, 48, 68], "_type": [4, 5, 6, 8, 15], "_valu": [25, 48, 68], "_x": [21, 25], "_y": [21, 25], "a1": [25, 30, 34, 87], "a2": [25, 30, 34, 37, 87], "a5": [25, 36], "a_cpi": [25, 37], "a_max": 16, "a_min": 16, "ab": [7, 25, 34, 55, 83, 87], "abc": [22, 25, 26, 35, 36, 67], "abcd": [25, 36], "abil": 97, "abl": [58, 62, 68, 69, 75, 84], "abm": 59, "abocorhfm": [25, 38], "about": [18, 19, 25, 27, 36, 37, 53, 55, 58, 59, 63, 73, 78, 87, 88, 101], "abov": [5, 22, 25, 34, 35, 36, 42, 46, 59, 64, 66, 75, 76, 91, 96, 101], "abs_dt": [25, 30], "absolut": [1, 7, 22, 25, 34, 35, 36, 54, 55, 78, 87], "abspath": [25, 36], "abstract": [24, 25, 36], "acceler": 61, "accept": [25, 49, 55, 59, 98], "access": [1, 2, 19, 25, 28, 36, 47, 49, 53, 66, 71, 77, 83, 84, 96, 100], "access_channel": [19, 100], "access_token": [19, 100], "accessor": [25, 57], "accomod": [20, 25], "accomplish": [78, 84], "accord": [20, 21, 23, 25, 26, 34, 49, 56, 91, 92, 95], "accordingli": [25, 38, 68, 90], "account": 80, "accur": 46, "accuraci": 46, "achiev": [3, 21, 25, 75], "aco": 7, "acosh": 7, "across": [4, 8, 21, 25, 28, 68, 84, 96], "act": [25, 37, 42, 58, 96], "action": 62, "activ": [73, 75, 76, 77, 92], "actual": [22, 25, 30, 35, 36, 58, 67], "ad": [17, 18, 20, 21, 22, 25, 26, 28, 31, 35, 36, 37, 48, 53, 63, 65, 66, 70, 75, 84, 100], "add": [0, 1, 7, 17, 18, 21, 23, 25, 28, 36, 42, 48, 49, 58, 62, 73, 75, 76, 77, 78, 80, 91, 92, 96], "add_newdoc": [25, 36], "addentri": 58, "addit": [1, 11, 21, 23, 25, 34, 36, 41, 42, 54, 58, 60, 68, 70, 76, 95, 96, 99, 100], "addition": [78, 85], "address": [0, 19, 20, 25, 100], "adher": 68, "adjac": [25, 36], "advanc": 88, "adversari": [25, 34], "adx": 59, "ae": 59, "affect": [20, 25, 42, 96], "after": [0, 18, 21, 23, 25, 36, 39, 53, 62, 64, 75, 91, 92, 96, 101], "ag": 66, "again": [0, 64, 66, 67, 75, 76], "against": [18, 25, 48, 53, 59, 66, 84, 97, 101], "aggreg": [1, 21, 23, 25, 48, 56, 66, 83, 84, 92], "aggress": 84, "aid": [66, 68], "aim": 66, "ak": [0, 1, 3, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 32, 34, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 50, 53, 54, 55, 56, 58, 63, 64, 66, 67, 73, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101], "ak_arr": 66, "ak_data": [25, 28, 84], "ak_df": [21, 25, 41, 91], "ak_in1d": 66, "ak_in1dmult": 66, "ak_in1dmulti": 66, "ak_int": 66, "ak_intmult": 66, "ak_io_benchmark": 59, "aka": 47, "akab": 25, "akbool": 25, "akcast": 25, "akfloat64": 25, "akint64": [25, 34, 38, 42], "akstat": [25, 44], "aku": [3, 25, 26, 43, 85], "akuint64": 25, "algorithm": [14, 25, 34, 36, 50, 56, 73, 86], "alia": [21, 22, 25, 34, 35, 36, 40, 48, 49, 55, 91], "alias": [22, 25, 35, 36, 55], "alic": [21, 25, 91], "align": [25, 26, 36, 57], "all": [0, 3, 4, 5, 8, 11, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 48, 51, 53, 54, 55, 56, 58, 59, 62, 63, 64, 67, 68, 70, 73, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101], "all_occurr": [3, 25, 40], "all_scalar": [22, 25, 35, 36, 38, 90], "allclos": [25, 46, 54], "alloc": 19, "allow": [0, 18, 20, 21, 23, 25, 26, 28, 31, 36, 37, 38, 42, 44, 48, 49, 53, 54, 56, 59, 60, 66, 68, 69, 71, 78, 80, 84, 90, 92, 96, 97], "allow_error": [21, 25, 26, 28, 37, 53, 84], "allow_list": [25, 26, 85], "allsymbol": [25, 27], "almost": [89, 91, 95, 101], "alnum": [25, 53], "alon": [89, 101], "along": [4, 8, 9, 11, 12, 14, 15, 16, 21, 23, 25, 34, 38, 39, 90, 99], "alongsid": [25, 28], "alpha": [25, 46, 53, 59, 82], "alphabet": [25, 53], "alphanumer": [25, 53], "alreadi": [0, 1, 18, 21, 23, 25, 26, 28, 34, 37, 48, 49, 53, 55, 63, 67, 68, 70, 75, 89, 92, 99], "also": [1, 3, 4, 18, 20, 22, 23, 25, 30, 34, 35, 36, 38, 40, 42, 46, 48, 49, 53, 54, 61, 63, 66, 67, 69, 70, 71, 73, 76, 80, 84, 90, 94, 95, 96, 97, 99, 101], "altern": [1, 21, 25, 36, 42, 46, 49, 62, 63, 75, 77, 80, 96], "although": [4, 8], "alwai": [0, 11, 14, 22, 23, 25, 26, 28, 35, 36, 37, 55, 67, 84, 87, 89, 91, 92, 93, 95, 101], "amount": [19, 21, 25, 37, 78, 91, 101], "an": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 42, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 70, 73, 76, 80, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "anaconda": [1, 73, 75, 80, 81], "anaconda3": [75, 76, 77], "analog": [22, 23, 25, 35, 36, 55, 92], "analyt": 72, "angl": [25, 34], "ani": [0, 3, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 34, 35, 36, 37, 38, 42, 48, 49, 51, 53, 54, 58, 59, 62, 64, 68, 70, 76, 77, 83, 87, 91, 92, 93, 95, 96, 97, 101], "anim": [25, 49], "animal_1": [21, 25], "animal_2": [21, 25], "annot": [22, 35], "anoth": [0, 5, 6, 12, 21, 22, 23, 25, 28, 34, 35, 36, 37, 53, 68, 73, 77, 80, 84, 91, 92, 94, 95, 97, 101], "anyon": 0, "anyth": [0, 22, 25, 35, 37, 62], "anywai": [0, 90], "api": [1, 4, 5, 7, 8, 11, 21, 22, 23, 25, 35, 36, 49, 56, 58, 72, 92, 95], "api_specif": [11, 25, 56], "apic": 59, "app": 80, "appear": [3, 18, 21, 23, 25, 26, 28, 36, 37, 40, 49, 53, 62, 92, 93], "append": [16, 17, 18, 21, 23, 25, 26, 28, 36, 37, 40, 48, 49, 53, 68, 70, 83, 90, 92, 101], "append_singl": [25, 48, 83, 97], "appli": [3, 7, 11, 15, 21, 23, 25, 34, 36, 54, 59, 87, 91, 92, 101], "applic": [23, 25, 34, 84, 90, 92, 99], "apply_permut": [21, 25, 91], "appreci": 0, "approach": [78, 97], "appropri": [0, 21, 25, 28, 36, 54, 58, 62, 69, 73, 75, 79, 84], "approv": 0, "approxim": [21, 25, 36, 54], "ar": [0, 1, 3, 4, 7, 8, 11, 16, 18, 20, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 38, 40, 42, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 66, 67, 68, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101], "arang": [3, 5, 17, 21, 23, 25, 28, 34, 37, 38, 40, 41, 42, 48, 49, 56, 58, 66, 83, 84, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99], "arbitrari": [21, 25, 36, 91], "arbitrarili": [18, 25], "arcco": [25, 34], "arccosh": [25, 34], "arccosin": 7, "arch": 59, "arch_cap": 59, "arch_string_raw": 59, "architectur": 59, "archiv": 76, "arcsin": [7, 25, 34], "arcsinh": [25, 34], "arctan": [25, 34], "arctan2": [25, 34], "arctang": 7, "arctanh": [25, 34], "area": [25, 46, 54, 59], "aren": [76, 77], "arg": [0, 3, 21, 22, 23, 25, 26, 35, 36, 38, 46, 48, 49, 55, 56, 58, 78, 90, 92], "arg1": [25, 36, 58], "arg2": [25, 36], "argmax": [12, 21, 22, 23, 25, 35, 36, 37, 48, 49, 83, 87, 92, 93], "argmaxk": [25, 37, 83, 87, 93], "argmin": [12, 21, 22, 23, 25, 35, 36, 37, 48, 49, 83, 87, 92, 93], "argmink": [25, 37, 83, 87, 93], "argpars": 79, "args1": [3, 25], "args2": [3, 25], "argsort": [14, 18, 19, 21, 22, 23, 25, 26, 35, 36, 37, 50, 83, 86, 87, 89, 91, 92, 101], "argument": [2, 3, 14, 15, 16, 20, 21, 22, 23, 25, 34, 35, 36, 37, 42, 46, 48, 49, 53, 54, 56, 58, 78, 96, 98], "arithmet": [25, 36, 83, 95], "arkodua": [67, 68], "arkouda": [57, 59, 62, 64, 65, 69, 71, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 94, 95, 99], "arkouda_arrow_path": 1, "arkouda_client_directori": [1, 47], "arkouda_client_mod": 1, "arkouda_client_timeout": 1, "arkouda_config_fil": [63, 78], "arkouda_develop": [1, 63], "arkouda_full_stack_test": 1, "arkouda_hdf5_path": 1, "arkouda_hom": 1, "arkouda_iconv_path": 1, "arkouda_idn2_path": 1, "arkouda_key_fil": 1, "arkouda_log_level": [1, 25], "arkouda_mem_alloc": 19, "arkouda_numlocal": 1, "arkouda_password": 1, "arkouda_print_passes_fil": 1, "arkouda_quick_compil": [1, 63, 77], "arkouda_root": 59, "arkouda_serv": [1, 19, 22, 25, 35, 36, 60, 63, 64, 73, 75, 78, 100], "arkouda_server_aggregation_dst_buff_s": 1, "arkouda_server_aggregation_src_buff_s": 1, "arkouda_server_aggregation_yield_frequ": 1, "arkouda_server_connection_info": 1, "arkouda_server_host": 1, "arkouda_server_port": 1, "arkouda_server_user_modul": [1, 78], "arkouda_skip_check_dep": 1, "arkouda_supported_dtyp": [22, 25, 35, 36], "arkouda_supported_float": [22, 35], "arkouda_supported_int": [22, 35], "arkouda_supported_numb": [22, 35], "arkouda_tunnel_serv": 1, "arkouda_typ": [21, 25, 26, 28, 37, 53], "arkouda_verbos": 1, "arkouda_vers": 68, "arkouda_zmq_path": 1, "arkoudalogg": [23, 25, 31, 53, 92], "arkoudavers": 0, "arm64": 77, "around": [0, 4, 8, 20, 22, 25, 35, 36, 46, 62, 64], "arr": [25, 28, 39, 40], "arr1": [3, 25, 40], "arr2": [3, 25, 40], "arrai": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 67, 68, 73, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 101], "arraryview": [17, 25, 88], "array_api": [25, 57], "array_object": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 57], "array_of_size_rank": 68, "array_view": [25, 28, 57, 88], "arrays2": [25, 26], "arrays_and_dtyp": 6, "arraysetop": [58, 99], "arraysetopsmsg": 58, "arrayview": [17, 25, 28, 34, 37, 83, 84, 95], "arri": 56, "arrow": [1, 79], "artifact": 47, "as_compon": [25, 56], "as_index": [21, 25, 91], "as_integer_ratio": [22, 25, 35, 36], "as_perc": 19, "as_seri": [21, 25], "asarrai": [4, 5, 8], "ascend": [12, 21, 23, 25, 26, 34, 37, 49, 85, 91, 93, 98], "ascii": 59, "asia": [25, 55], "asin": 7, "asinh": 7, "ask": 0, "aslogg": 58, "assembl": [25, 53], "assert": [25, 54], "assert_": [25, 54], "assert_almost_equ": [25, 54], "assert_almost_equival": [25, 54], "assert_arkouda_array_equ": [25, 54], "assert_arkouda_array_equival": [25, 54], "assert_arkouda_pdarray_equ": [25, 54], "assert_arkouda_segarray_equ": [25, 54], "assert_arkouda_strings_equ": [25, 54], "assert_attr_equ": [25, 54], "assert_categorical_equ": [25, 54], "assert_class_equ": [25, 54], "assert_contains_al": [25, 54], "assert_copi": [25, 54], "assert_dict_equ": [25, 54], "assert_equ": [25, 54], "assert_equival": [25, 54], "assert_frame_equ": [25, 54], "assert_frame_equival": [25, 54], "assert_index_equ": [25, 54], "assert_index_equival": [25, 54], "assert_is_sort": [25, 54], "assert_series_equ": [25, 54], "assert_series_equival": [25, 54], "assertionerror": [25, 54], "asset": 73, "assig": 94, "assign": [0, 18, 21, 23, 25, 36, 49, 67, 68, 83, 89, 92, 97, 101], "assist": [0, 78], "associ": [0, 1, 21, 25, 28, 36, 42, 49, 56, 59, 62, 84, 96, 97, 98], "assum": [2, 12, 21, 23, 25, 28, 34, 36, 38, 40, 42, 49, 51, 62, 67, 68, 69, 76, 77, 81, 84, 91, 92, 96, 98, 99], "assume_sort": [23, 25, 92, 99], "assume_uniqu": [25, 40, 99], "assumpt": [17, 18, 25, 37, 38, 53, 84, 88, 89, 95, 101], "ast": 79, "astyp": [6, 21, 22, 25, 35, 36, 37, 53], "atan": 7, "atan2": 7, "atanh": 7, "atol": [25, 54], "attach": [18, 20, 21, 23, 25, 26, 36, 37, 48, 49, 53, 55, 56, 83, 92], "attach_al": [25, 56], "attach_pdarrai": [25, 37], "attahc": [25, 37], "attempt": [18, 21, 23, 25, 26, 28, 37, 48, 49, 50, 53, 55, 75, 84, 91, 92], "attent": 59, "attr": [25, 54], "attrib": 58, "attribut": [8, 17, 18, 21, 22, 26, 28, 35, 37, 53, 54, 55, 84, 88, 95], "attributeerror": [25, 36], "attributi": [25, 37, 51, 95], "authent": [19, 47, 73, 100], "author": 0, "author_tim": 59, "auto": [46, 57, 62], "autoapi": [57, 79], "autoclass": 85, "autodoc": 79, "autom": [1, 62], "automat": [1, 3, 18, 25, 28, 49, 68, 84, 89, 98], "autopackagesummari": 79, "autosav": 59, "av": 58, "avail": [1, 19, 25, 28, 36, 37, 46, 59, 64, 68, 80, 84, 93, 96], "avail_mem": 19, "averag": [23, 25, 37, 38, 59, 87, 92], "avoid": [0, 25, 36, 61, 64], "avx": 59, "avx2": 59, "awar": 0, "awk": 80, "ax": [0, 4, 8, 11, 15, 16, 21, 25, 46], "axi": [9, 10, 11, 12, 14, 15, 16, 21, 25, 26, 34, 39, 41, 48, 49, 50, 86, 91, 97, 98], "b": [18, 19, 21, 22, 23, 25, 26, 28, 30, 34, 35, 36, 37, 38, 40, 41, 42, 46, 48, 49, 50, 52, 53, 54, 56, 66, 82, 86, 87, 91, 92, 93, 94, 95, 96, 97, 99, 101], "back": [20, 21, 23, 25, 56, 58, 61, 64, 84, 92], "backbon": 95, "backend": [21, 25, 49, 61, 75], "backward": [25, 36, 48, 56, 97], "badvalu": 46, "balanc": [18, 25, 53], "bandwidth": [25, 38, 84], "base": [0, 1, 2, 3, 4, 7, 13, 17, 18, 20, 21, 22, 24, 25, 26, 28, 31, 34, 35, 36, 37, 43, 44, 46, 50, 55, 56, 62, 75, 77, 81, 83, 84, 85, 86, 87, 88, 89, 91, 95, 96, 98, 101], "base_repr": [25, 36], "bash": [76, 77], "bashrc": [76, 77, 80], "basic": [19, 25, 26, 37, 47, 62, 80, 88, 95], "bear": [0, 62, 76, 77], "becaus": [17, 18, 21, 25, 26, 28, 34, 36, 38, 42, 48, 53, 54, 63, 66, 67, 68, 69, 73, 84, 89, 90, 91, 97, 101], "becom": [22, 25, 34, 35], "been": [1, 18, 19, 21, 25, 28, 34, 36, 37, 39, 40, 48, 53, 60, 61, 62, 75, 78, 87, 89, 90], "befor": [0, 11, 12, 16, 25, 36, 39, 55, 59, 75, 84], "begin": [0, 4, 8, 16, 25, 53, 94, 101], "behav": [0, 17, 25, 88], "behavior": [0, 4, 21, 25, 36, 37, 38, 42, 87, 88, 90, 91, 96, 101], "being": [17, 21, 25, 26, 28, 34, 36, 37, 49, 54, 66, 68, 69, 70, 78, 84, 88, 91, 94, 98], "believ": 62, "belong": [18, 25, 89], "below": [5, 25, 34, 41, 46, 59, 60, 66, 76, 77, 79, 84, 91], "bench_decod": 59, "bench_encod": 59, "benchmark": [63, 65, 78, 79, 82], "benchmark_v2": 59, "benefici": [59, 70], "berkelei": [21, 25], "besid": [25, 36], "best": [0, 3, 25, 36, 46], "beta": [25, 42, 96], "better": [17, 18, 21, 25, 26, 28, 37, 48, 53], "between": [1, 5, 18, 19, 21, 25, 30, 34, 36, 37, 38, 53, 55, 56, 59, 66, 78, 90, 93, 95, 101], "beyond": [11, 25, 37, 66, 87], "bi": [25, 34], "bi_end": [3, 25], "bi_start": [3, 25], "bi_val": [3, 25], "bia": [25, 36], "big": [22, 25, 35, 36], "biggest": 63, "bigint": [22, 25, 34, 35, 36, 37, 38, 59, 84, 90], "bigint_from_uint_arrai": [3, 25, 37, 38], "bigint_to_uint_arrai": [25, 37, 38], "bin": [25, 34, 36, 37, 41, 46, 75, 76, 77, 80, 93], "binari": [20, 25, 36, 38, 76, 77, 87], "binary_repr": [25, 36], "binomi": [25, 42, 96], "binop": [18, 21, 25, 28, 37, 48, 53], "bit": [0, 6, 18, 20, 22, 25, 28, 34, 35, 36, 37, 38, 48, 53, 59, 63, 84, 88, 90, 91, 95], "bit_count": [22, 25, 35, 36], "bittyp": [22, 25, 35, 36], "bitvector": [20, 25], "bitwis": [7, 23, 25, 92, 95], "bitwise_and": 7, "bitwise_invert": 7, "bitwise_left_shift": 7, "bitwise_or": 7, "bitwise_right_shift": 7, "bitwise_xor": 7, "black": [0, 79], "block": [0, 18, 25, 40, 49, 53, 58, 66, 90], "blosc": [25, 28], "blue": [25, 26], "bmi1": 59, "bmi2": 59, "bob": [21, 25, 91], "bodi": 0, "bool": [3, 5, 6, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 48, 49, 50, 53, 54, 55, 56, 59, 68, 82, 84, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101], "bool_": [18, 22, 25, 34, 35, 36, 37, 38, 42, 53, 55, 87, 90, 93, 94, 95], "bool_onli": [21, 25], "bool_scalar": [22, 25, 35, 36], "booldtyp": [25, 36], "boolean": [3, 6, 7, 18, 21, 22, 23, 25, 32, 34, 35, 36, 37, 40, 48, 49, 53, 66, 68, 87, 89, 91, 92, 94, 95, 97, 98, 99, 101], "boost": 75, "borrow": 58, "both": [3, 11, 19, 21, 22, 23, 25, 26, 28, 30, 34, 35, 36, 37, 40, 54, 55, 63, 66, 68, 69, 73, 75, 84, 89, 99, 101], "bottleneck": 61, "bottom": [25, 37, 62], "bound": [25, 37, 38, 42, 48, 55, 90, 97], "boundari": [25, 42, 55, 96], "box": [25, 42, 62, 96], "branch": [0, 58, 59, 62, 75], "brand_raw": 59, "brew": 77, "bring": 62, "broad": 0, "broadcast": [11, 21, 23, 25, 34, 37, 56, 83, 87, 92], "broadcast_arrai": 11, "broadcast_dim": [25, 56], "broadcast_to": 11, "broadcast_to_shap": [25, 37], "broken": 58, "brotli": [18, 21, 25, 26, 28, 37, 48, 53, 59, 70], "brown": 66, "browser": 75, "buf": [25, 36], "buffer": [1, 5, 21, 22, 23, 25, 35, 36, 46, 49], "bufferobject": [22, 25, 35, 36], "bug": [62, 65], "build": [1, 22, 23, 25, 35, 36, 59, 62, 65, 73, 76, 80, 92, 100], "build_from_compon": [23, 25, 83, 92], "built": [0, 17, 18, 22, 25, 35, 36, 37, 53, 60, 62, 63, 64, 73, 75, 77, 78, 84, 88, 89, 95, 101], "builtin": [22, 25, 35, 36, 37], "bundl": [76, 77], "button": 62, "bydayofweek": 92, "byte": [17, 18, 21, 22, 25, 26, 28, 30, 35, 36, 37, 38, 46, 48, 49, 51, 53, 56, 68, 73, 84, 88, 89, 91, 95, 101], "bytearrai": [22, 25, 35, 36, 46], "bytedtyp": [25, 36], "byteord": [22, 25, 35, 36], "bytes_": [25, 36], "bytes_attrib": [25, 53], "bytes_or_buff": [21, 22, 23, 25, 35, 36, 46, 49], "bytes_s": [25, 53], "bytesdtyp": [25, 36], "byteswap": [22, 25, 35, 36], "c": [17, 18, 21, 22, 25, 26, 35, 36, 37, 38, 40, 41, 48, 49, 53, 56, 59, 61, 63, 76, 82, 88, 91, 95, 97, 99, 101], "c1": [25, 34, 87], "c2": [18, 25, 34, 87], "c_cpy": [18, 25], "c_string": 68, "cach": [2, 18, 25, 36, 53], "cached_regex_pattern": [25, 53], "cachedaccessor": [2, 25], "calc_string_offset": [25, 28, 84], "calcul": [16, 21, 23, 25, 28, 36, 37, 40, 46, 59, 68, 84, 87, 92, 93, 99], "calculu": [32, 101], "call": [4, 8, 18, 19, 20, 21, 23, 25, 28, 36, 37, 38, 42, 46, 48, 49, 51, 53, 54, 58, 66, 70, 73, 75, 77, 78, 84, 87, 88, 90, 91, 92, 95, 96, 100], "callabl": [4, 20, 21, 25, 91], "callback": [20, 25], "caller": [21, 25, 36, 49, 91], "came": [25, 48, 97], "can": [1, 3, 4, 6, 8, 17, 18, 20, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 38, 40, 42, 46, 47, 48, 49, 53, 55, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 79, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101], "can_cast": 6, "cancel": [25, 34], "candid": [25, 36], "cannot": [3, 11, 17, 18, 20, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 38, 48, 49, 53, 54, 55, 70, 80, 84, 88, 89, 92, 95, 101], "canon": [22, 25, 35, 36], "capac": [25, 34, 95], "capit": [25, 53], "capitilz": [25, 53], "captur": [1, 32, 101], "care": 59, "carol": [21, 25, 91], "carri": [25, 55], "cartesian": 88, "case": [18, 19, 22, 23, 25, 26, 28, 34, 35, 36, 37, 42, 46, 49, 53, 55, 59, 61, 66, 67, 68, 70, 75, 76, 78, 80, 87, 96, 98], "cask": 77, "caskroom": [75, 77], "cast": [3, 4, 6, 20, 22, 25, 34, 35, 37, 38, 39, 53, 58, 83, 84, 90, 101], "castabl": [25, 45], "cat": [18, 25, 28, 80], "catch": 0, "categor": [21, 23, 25, 26, 28, 34, 40, 49, 50, 54, 56, 57, 83, 86, 87, 90, 91, 92, 93, 95, 98, 99], "categori": [0, 18, 25, 50, 54, 62, 68, 83, 86, 89], "categorical_arrai": [18, 25], "categorical_test": 0, "categoricaltest": 0, "cattwo": [18, 25], "caus": [17, 18, 21, 25, 26, 28, 36, 37, 48, 53, 73, 75], "caution": [17, 18, 25, 37, 38, 53, 84, 88, 89, 95, 101], "ccflag": 1, "cd": [60, 73, 76, 77, 79], "cdf": [25, 42, 46, 96], "cdot": [25, 42, 96], "cdoubl": [22, 25, 35, 36], "ceil": [7, 25, 34], "cell": [21, 25], "cento": 76, "central": [22, 25, 35, 36, 46], "certain": [25, 37, 60, 78, 87], "cfg": [1, 25, 28, 63, 64, 78], "cfloat": [22, 25, 35, 36], "chang": [1, 20, 21, 22, 25, 26, 28, 35, 36, 37, 59, 62, 64, 73, 76, 77, 79, 84, 87, 91, 96], "channel": [19, 100], "chapel": [19, 25, 34, 58, 61, 63, 68, 72, 73, 75, 78, 79, 80, 81, 95, 96, 100, 101], "chapel_vers": 73, "char": [22, 25, 35, 36, 53], "charact": [18, 19, 20, 22, 24, 25, 35, 36, 38, 49, 53, 78, 101], "check": [0, 1, 3, 16, 17, 18, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 46, 48, 53, 54, 56, 58, 62, 63, 64, 82, 89, 99, 100, 101], "check_categor": [25, 54], "check_category_ord": [25, 54], "check_column_typ": [25, 54], "check_dtyp": [25, 54], "check_exact": [25, 54], "check_frame_typ": [25, 54], "check_index": [25, 54], "check_index_typ": [25, 54], "check_lik": [25, 54], "check_nam": [25, 54], "check_ord": [25, 54], "check_sam": [25, 54], "check_series_typ": [25, 54], "checker": [22, 35], "checkout": 64, "chess": [25, 42, 96], "chi": [25, 44, 46], "chi2": 46, "chipset": 77, "chisquar": [25, 44], "choic": [25, 38, 42, 75, 83], "choos": [22, 25, 34, 35, 36, 62, 77, 80, 87, 100], "chosen": [3, 25, 34, 37, 87, 95, 97], "chpl": [1, 25, 28, 58, 63, 75, 76, 77, 78], "chpl_comm": [60, 76, 77], "chpl_debug_flag": 1, "chpl_develop": [63, 77], "chpl_flag": [1, 61], "chpl_gasnet_cfg_opt": 60, "chpl_gmp": [76, 77], "chpl_home": [60, 76, 77], "chpl_llvm": [76, 77], "chpl_re2": [76, 77], "chpl_rt_oversubscrib": 60, "chpl_target_compil": 61, "chpl_target_cpu": 77, "chpl_test_timeout": 60, "chplconfig": 76, "chpldoc": [75, 76], "chunk": [4, 8, 18, 25, 26, 28, 37, 48, 53], "chunk_info": [4, 8], "chunk_shap": [25, 28], "ci": 0, "circl": [25, 34], "cl": [2, 25, 89], "clang": [61, 76], "class": [0, 38, 54, 59, 83, 84, 85, 88, 89, 90, 91, 92, 96, 97, 98, 101], "classmethod": [18, 20, 25, 26, 48, 89], "claus": [25, 34, 87], "clean": 75, "clear": [22, 25, 35, 36, 37], "clflush": 59, "clflushopt": 59, "click": [62, 75, 81], "client": [4, 8, 17, 18, 21, 25, 37, 38, 53, 54, 55, 57, 69, 75, 76, 77, 78, 79, 80, 83, 88, 89, 91, 95, 97, 101], "client_dtyp": [25, 28, 57], "clientgeneratedlog": [25, 31], "clip": [16, 22, 25, 34, 35, 36], "clone": 81, "clongdoubl": [25, 36], "clongdoubledtyp": [25, 36], "clongfloat": [25, 36], "close": [0, 3, 25, 38, 55, 58, 66, 90], "clz": [25, 37], "cm_version": 76, "cmake": [76, 79], "cmd": [58, 78], "cmd_filter": 19, "cmov": 59, "co": [7, 23, 25, 34, 38, 83, 87, 92], "coargsort": [21, 25, 50, 83, 86, 89, 91, 101], "code": [1, 18, 22, 25, 26, 28, 35, 36, 44, 50, 54, 58, 62, 63, 66, 68, 78, 83, 86, 89], "codepoint": [22, 25, 35, 36], "coeffici": [25, 37], "coercibl": [25, 36], "col": [25, 34, 41], "col1": [21, 25, 36, 91], "col2": [21, 25, 36, 91], "col2_i": [21, 25], "col2_x": [21, 25], "col3": [21, 25, 36, 91], "col_a": [21, 25], "col_b": [21, 25], "col_c": [21, 25], "col_delim": [21, 25, 26, 28, 37, 53], "col_nam": [25, 28], "cola": 67, "colb": 67, "colc": 67, "collect": [18, 21, 22, 23, 25, 26, 28, 35, 36, 37, 43, 46, 48, 53, 76, 92], "collis": [18, 25, 34, 53], "colnam": [21, 25], "colors2": [25, 26], "column": [3, 5, 18, 21, 23, 25, 26, 28, 37, 41, 48, 49, 50, 52, 53, 54, 66, 67, 70, 71, 84, 86, 92, 97, 98], "column_data": 66, "column_delim": [25, 28, 84], "column_major": [17, 25, 37, 88], "column_nam": 66, "columnar": 84, "com": [0, 25, 36, 44, 76, 77], "combin": [21, 25, 53, 55, 56, 64], "come": [23, 25, 64, 84, 90, 99], "comma": [25, 36, 59, 67, 75], "command": [19, 24, 25, 37, 58, 59, 60, 62, 64, 73, 75, 77, 78, 79, 80, 100], "command_filt": [19, 24], "commandlin": 59, "commandmap": [19, 58, 78], "comment": [0, 63, 78], "commit": [0, 62], "commit_info": 59, "common": [0, 3, 11, 23, 25, 36, 38, 40, 58, 80, 84, 92, 99, 101], "common_typ": [25, 39], "commonli": 66, "commun": [1, 25, 50, 62, 77, 86, 90], "compar": [18, 22, 25, 26, 35, 37, 46, 53, 54, 62, 82, 84, 101], "compare_kei": [25, 54], "comparison": [59, 67, 89, 95, 97, 101], "compat": [7, 18, 21, 22, 25, 35, 36, 37, 48, 55, 56, 91, 92], "compet": 1, "compil": [19, 25, 36, 53, 61, 64, 65, 75, 76, 77, 78, 80], "compiler_flag": [22, 35], "complement": [25, 36], "complementari": [25, 37], "complet": [18, 19, 21, 25, 36, 37, 46, 48, 53, 58, 60, 62, 75, 100, 101], "complex": [3, 7, 22, 25, 35, 36, 73], "complex128": [22, 25, 35, 36], "complex128dtyp": [25, 36], "complex256": [25, 36], "complex64": [22, 25, 35, 36], "complex64dtyp": [25, 36], "complex_": [22, 25, 35, 36], "complexflo": [22, 25, 35, 36], "compliant": [4, 5], "compon": [3, 18, 20, 21, 23, 25, 26, 27, 36, 37, 48, 49, 53, 55, 56, 59, 68, 70, 92], "compos": [22, 25, 35, 36, 38, 53, 73, 84], "composit": [25, 53], "compress": [18, 21, 22, 25, 26, 28, 35, 36, 37, 48, 53, 59, 94, 97], "compris": 101, "comput": [4, 6, 7, 8, 15, 18, 19, 21, 22, 23, 25, 30, 34, 35, 36, 37, 44, 45, 48, 53, 58, 66, 84, 87, 89, 91, 92, 93, 95, 97, 99, 101], "computation": 66, "compute_join_s": [25, 30], "concat": [11, 21, 25, 26, 48, 49, 91, 98], "concaten": [11, 18, 21, 25, 39, 40, 48, 49, 53, 56, 58, 83, 97, 98, 101], "concept": 89, "concis": 62, "concret": [22, 25, 35, 36], "concurr": [0, 84], "cond": [25, 34, 87], "conda": [73, 76, 77, 79], "conda_prefix": [73, 75], "condens": [25, 48, 97], "condit": [3, 12, 21, 25, 34, 37, 46, 87], "conf": 80, "confid": 46, "config": [19, 78], "configur": [0, 1, 25, 59, 66, 77, 80, 85, 91, 98], "confirm": [0, 62], "conflict": 0, "conform": 58, "conj": [7, 22, 25, 35, 36], "conjug": [7, 22, 25, 35, 36], "conjunct": [18, 25, 84, 89, 101], "connect": [18, 19, 21, 25, 26, 34, 37, 38, 44, 45, 47, 49, 53, 56, 58, 63, 80, 83, 84, 91], "connect_url": [19, 73, 100], "connectionerror": [19, 100], "consecut": [25, 38, 49, 90], "consensu": [0, 62], "consequ": 76, "conserv": [20, 25], "consid": [18, 21, 25, 36, 49, 62, 101], "consider": [23, 25, 99, 101], "consist": [0, 21, 25, 34, 36, 66, 87, 91], "consol": 25, "constant": [16, 21, 23, 25, 37, 83, 92], "constant_tsc": 59, "constant_valu": 16, "construct": [4, 5, 8, 18, 25, 36, 38, 48, 53, 58, 66, 83, 92, 94, 96], "constructor": [18, 22, 25, 35, 36, 42, 48, 66, 89, 96], "consum": [25, 26, 49], "conta": [25, 53, 101], "contain": [3, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34, 35, 36, 37, 38, 40, 41, 42, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 63, 64, 66, 67, 68, 73, 78, 82, 83, 84, 86, 87, 89, 90, 91, 92, 95, 96, 97, 98, 99, 101], "content": [1, 67, 84], "contigu": [18, 25, 30, 53], "continu": [0, 46, 62], "contribut": [21, 25, 49, 58], "contributor": [0, 25, 44], "control": [1, 20, 25, 34, 36, 39, 95], "conveni": [25, 36, 76, 77, 84], "convent": [18, 25, 36], "convers": [0, 18, 25, 84, 89, 95, 101], "convert": [4, 5, 8, 17, 18, 20, 21, 22, 25, 26, 34, 35, 36, 37, 38, 46, 48, 49, 53, 54, 55, 56, 67, 84, 88, 89, 91, 95, 97, 98, 99, 101], "convert_byt": 56, "convert_categor": [21, 25, 28], "convert_if_categor": [25, 56], "convert_int": [21, 25], "cool": 0, "coordin": [5, 25, 34, 88], "copi": [4, 5, 6, 8, 11, 14, 17, 21, 22, 23, 25, 26, 28, 34, 35, 36, 39, 42, 48, 50, 54, 96, 97], "core": [21, 24, 25, 59, 62, 91], "corr": [21, 25, 37], "correct": [3, 15, 21, 25, 58, 63, 76, 80, 82, 91], "correctli": [21, 25, 80, 91], "correl": [21, 25, 37], "correspond": [3, 4, 8, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 32, 34, 35, 36, 37, 38, 44, 47, 48, 49, 53, 56, 58, 68, 70, 84, 87, 89, 91, 92, 93, 94, 97, 98, 101], "cosh": [7, 25, 34], "cosin": [7, 25, 34, 87], "cosort": [3, 25], "cosorted": [3, 25], "cost": [18, 25, 89], "could": [4, 8, 25, 37, 41, 48, 53, 63, 78, 101], "count": [13, 21, 22, 23, 25, 33, 34, 35, 36, 37, 48, 49, 53, 59, 66, 83, 87, 92, 97, 101], "count_nonzero": [25, 34], "counter_nam": 59, "coupl": 63, "cours": [25, 37], "cov": [25, 37], "covari": [25, 37], "cpp": 75, "cpu": 59, "cpuid": 59, "cpuinfo_vers": 59, "cpuinfo_version_str": 59, "cpython": 59, "crazi": 1, "creat": [0, 5, 11, 17, 18, 20, 21, 22, 23, 25, 26, 28, 29, 33, 35, 36, 37, 38, 41, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 62, 64, 68, 70, 73, 75, 76, 77, 78, 79, 80, 83, 84, 88, 89, 91, 92, 93, 95, 96], "create_pdarrai": [25, 58], "create_sparrai": [25, 51], "createsymentri": 58, "creation": [4, 8, 18, 25, 36, 58, 62, 83], "creation_funct": [8, 57], "cressi": [25, 44], "critic": [25, 31], "crucial": 63, "cryptograph": [25, 34], "csc": [25, 51], "csingl": [22, 25, 35, 36], "csr": [25, 51], "csv": [21, 25, 26, 28, 37, 53, 71, 84], "csv_output": [21, 25], "ctrl": 63, "ctz": [25, 37], "cuda": [25, 37], "cumprod": [22, 25, 34, 35, 36, 83, 87], "cumsum": [22, 25, 34, 35, 36, 83, 87], "cumul": [15, 25, 34, 41, 46, 82, 87], "cumulative_sum": 15, "curl": 76, "current": [0, 11, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 42, 47, 51, 53, 61, 62, 63, 67, 68, 69, 70, 76, 77, 81, 84, 85, 87, 89, 90, 91, 92, 93, 95, 96, 97, 100, 101], "current_arkouda_vers": 68, "custom": [2, 25, 31, 58, 67, 75, 93], "customiz": 84, "cut": [61, 62, 64], "cutoff": [25, 36], "cwd": [25, 28, 37], "cx16": 59, "cx8": 59, "cycl": [77, 79], "d": [0, 4, 8, 18, 21, 22, 25, 26, 35, 36, 38, 39, 40, 41, 42, 48, 49, 53, 55, 56, 66, 82, 96, 97, 99, 101], "dai": [21, 25, 55, 62, 91, 92], "darwin": [47, 77], "dash": 62, "dask": [4, 8], "data": [2, 4, 5, 6, 8, 11, 17, 18, 20, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 38, 39, 40, 41, 46, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 66, 69, 71, 72, 83, 85, 86, 88, 89, 90, 92, 97, 98, 100, 101], "data2": 56, "data_type_funct": [8, 57], "databas": [21, 25], "datafram": [2, 25, 26, 28, 41, 43, 49, 54, 57, 69, 84, 98], "dataframegroupbi": [21, 25, 91], "datalimit": [21, 25, 91], "datapar": 77, "dataset": [17, 18, 20, 21, 23, 25, 26, 28, 37, 48, 53, 67, 68, 70, 71, 92, 101], "dataset_nam": [25, 28, 84], "datasetnam": [25, 28, 84], "datasourc": [25, 36], "datatyp": [25, 38, 45, 51, 68], "date": [17, 25, 36, 55, 62], "date_oper": [2, 25], "date_rang": [25, 55], "datefram": [21, 25, 91], "dateoffset": [25, 55], "datetim": [25, 28, 36, 38, 55, 59], "datetime64": [25, 36, 38, 55], "datetime64dtyp": [25, 36], "datetimeaccessor": [2, 25], "datetimeindex": [25, 55], "dateutil": 79, "datsetnam": [25, 28], "day_of_week": [25, 55], "day_of_year": [25, 55], "dayofweek": [25, 55, 92], "dayofyear": [25, 55], "dd": 62, "ddof": [23, 25, 37, 44, 55, 87, 92, 93], "de": 59, "deactiv": 75, "deal": [20, 25], "debandi99": 0, "debug": [25, 31, 58, 60, 64], "decid": 0, "decim": [25, 36, 53], "decod": [21, 22, 23, 25, 35, 36, 46, 49, 53], "decompos": 11, "decor": [25, 36], "decreas": [25, 37, 38, 63, 87, 90, 93], "dedup": [21, 25, 91], "dedupl": 83, "deep": [25, 48, 91], "def": [58, 67, 78], "default": [1, 3, 5, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 44, 46, 47, 48, 49, 53, 54, 55, 56, 59, 61, 67, 68, 73, 77, 78, 82, 84, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101], "default_log_format": 25, "default_rng": [21, 25, 42, 83, 96], "defaultt": [25, 31], "defici": [25, 36], "defin": [3, 4, 18, 20, 21, 22, 23, 24, 25, 26, 28, 31, 34, 35, 36, 37, 38, 46, 48, 49, 53, 55, 58, 62, 88, 89, 90, 91, 92, 93, 95], "definit": [25, 26], "deg2rad": [25, 34], "degener": 11, "degrad": [25, 37, 87], "degre": [15, 23, 25, 34, 37, 44, 46, 87, 92, 93], "degred": [25, 37, 87], "deleg": [25, 34, 38, 42, 90, 93], "delet": [17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 36, 37, 39, 48, 49, 53, 55, 59, 64, 73, 92], "delete_directori": 29, "delimit": [21, 25, 26, 28, 29, 37, 49, 51, 53, 59, 62, 67, 84, 101], "delimited_file_to_dict": 29, "delta": [23, 25, 30, 37, 44, 87, 92, 93], "demo": 66, "demonstr": [0, 58], "denom": [25, 34], "denomin": [22, 25, 34, 35, 36, 37], "denorm": [25, 36], "denormal_numb": [25, 36], "denot": [21, 25, 26, 28, 37, 46, 53, 55], "dens": [3, 18, 23, 25, 92], "densiti": [25, 42, 46, 52, 96], "dep": [1, 75, 76, 77], "depend": [12, 21, 25, 28, 36, 37, 68, 76, 77, 80, 81, 87, 97], "deprec": [18, 21, 23, 25, 26, 28, 36, 37, 48, 49, 53, 55, 62, 84, 92], "deprecate_with_doc": [25, 36], "deprecationwarn": [25, 36], "dequ": [25, 38, 84], "deriv": [22, 25, 28, 29, 31, 34, 35, 42, 53, 95, 96], "descend": [14, 21, 25, 38, 49, 90, 91, 98], "describ": [25, 42, 58, 62, 96], "descript": [25, 36, 59, 62, 66, 83], "descriptor": [2, 22, 25, 35, 36, 53], "design": [0, 22, 25, 35, 36, 62, 79, 84], "desir": [3, 19, 20, 25, 34, 37, 38, 42, 47, 59, 60, 73, 78, 87, 90, 93, 95, 96, 100, 101], "destin": [11, 25, 36], "destpath": [25, 36], "detail": [0, 11, 22, 25, 27, 35, 36, 37, 46, 59, 62, 75, 76, 77, 79, 93, 100, 101], "detect": [21, 25, 28, 49, 68, 84], "determin": [6, 7, 11, 17, 18, 21, 23, 25, 26, 28, 36, 37, 39, 48, 53, 56, 62, 68, 78, 84, 89, 91, 92], "determinist": [18, 25, 40, 49, 90], "dev": [0, 76, 77, 79], "devel": 76, "develop": [1, 18, 25, 36, 62, 63, 64, 76, 77, 78, 81, 84], "deviat": [15, 23, 25, 37, 38, 42, 46, 55, 87, 92, 93, 96], "devic": [4, 5, 8, 25, 36], "devicend": [25, 37], "devicendarrai": [25, 37], "devtoolset": 76, "df": [2, 21, 25, 46, 66, 91], "df1": [21, 25, 54], "df2": [21, 25, 54], "df_deep": 91, "df_shallow": 91, "diag": [25, 34], "diagon": [5, 22, 25, 34, 35, 36], "dic": [25, 54], "dict": [4, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 35, 36, 42, 43, 49, 54, 56, 91, 92, 96], "dict_to_delimited_fil": 29, "dictionari": [18, 19, 21, 22, 23, 25, 28, 29, 35, 36, 42, 53, 54, 56, 78, 84, 91, 92, 96], "did": [0, 19], "diff": [16, 21, 25, 49], "diffaggreg": [21, 25], "differ": [3, 4, 7, 16, 18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 34, 35, 36, 37, 38, 40, 47, 48, 49, 53, 54, 55, 56, 58, 59, 64, 66, 67, 68, 70, 76, 77, 83, 84, 88, 90, 91, 92, 93, 99, 100], "differenc": [21, 25], "differenti": 46, "difficult": 78, "digit": [25, 36, 50, 53, 86], "dimens": [3, 4, 8, 11, 12, 15, 16, 17, 18, 21, 22, 25, 26, 28, 34, 35, 36, 37, 51, 53, 66, 68, 88, 89, 95, 97], "dimension": [3, 4, 8, 17, 21, 25, 28, 34, 36, 38, 49, 84, 88, 95, 98], "dir": 29, "direct": [3, 25, 62, 68, 75], "directli": [4, 8, 18, 21, 25, 37, 49, 50, 51, 53, 66, 75, 86, 88, 89, 91, 95, 101], "directori": [17, 18, 21, 23, 25, 26, 28, 29, 36, 37, 47, 48, 53, 59, 60, 63, 64, 73, 75, 76, 77, 78, 79, 80, 81, 82, 92], "dirti": 59, "disabl": [25, 31, 60], "disable_gc": 59, "disableverbos": [25, 31], "disallow": [21, 23, 25, 92], "discard": [3, 18, 25, 89], "discard_empti": [25, 48], "disconnect": [19, 25, 37], "discourag": [88, 89, 91, 95, 97, 101], "discov": 78, "discret": [16, 25, 42, 96], "discrimin": [25, 36], "discuss": 0, "disk": [21, 25, 26, 28, 37, 53, 101], "disp": [25, 36], "dispatch": [25, 54, 58], "displai": [1, 20, 21, 25, 26, 36, 41, 46, 49, 56, 75, 80, 91], "dist": 75, "distanc": [25, 36], "distinct": [18, 21, 25, 89], "distribut": [4, 8, 17, 18, 20, 21, 23, 25, 26, 28, 37, 38, 41, 42, 46, 48, 52, 53, 73, 76, 77, 84, 87, 88, 89, 90, 92, 95, 96, 99, 101], "distro": 76, "div": [25, 37], "diverg": [25, 44], "divid": [7, 25, 37], "dividend": [25, 37], "divis": [7, 25, 37], "divisor": [23, 25, 37, 87, 92], "divmod": [25, 37], "djkba": [25, 38], "dlpack": 5, "do": [1, 3, 17, 18, 19, 21, 23, 25, 26, 28, 34, 36, 37, 42, 48, 49, 53, 54, 59, 63, 64, 75, 76, 78, 79, 81, 87, 88, 91, 92, 96, 98], "doc": [0, 21, 25, 36, 44, 49, 58, 75, 76, 88], "docstr": [4, 7, 8, 25, 36, 58], "docstring1": [25, 36], "docstring2": [25, 36], "document": [0, 1, 25, 36, 46, 57, 58, 59, 63, 64, 66, 71, 77, 78], "doe": [17, 18, 19, 21, 22, 23, 25, 26, 28, 29, 35, 36, 37, 38, 41, 46, 48, 49, 53, 54, 63, 66, 68, 70, 84, 88, 89, 90, 91, 92, 95, 98, 100, 101], "doesn": [0, 21, 25, 62, 75], "dog": [21, 25, 49], "doi": [25, 36], "domain": [3, 25], "don": [0, 3, 4, 8, 21, 22, 25, 28, 35, 40, 53, 63, 64, 80], "done": [0, 21, 25, 64, 75, 78, 91], "dot": [25, 34, 37, 62], "doubl": [22, 25, 35, 36, 58], "doubt": [0, 62], "down": [19, 61, 62, 64, 73, 75, 78], "download": [25, 36, 73, 76, 77, 81], "draft": 62, "dragon4": [25, 36], "draw": [25, 38, 42, 96], "drawn": [25, 38, 42, 90, 96], "drop": [21, 22, 23, 25, 35, 37, 62, 87, 92], "drop_dupl": [21, 25, 91], "dropna": [21, 23, 25, 83, 91, 92], "dt": [22, 25, 30, 34, 35, 36, 49, 95], "dtype": [3, 4, 5, 6, 8, 15, 17, 18, 21, 23, 25, 26, 28, 30, 33, 34, 36, 37, 38, 39, 40, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 82, 83, 84, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99, 101], "dtype_lik": [25, 36], "dtypeobject": [22, 25, 35, 36], "due": [18, 21, 25, 28, 67, 70, 84], "dump": [22, 25, 35, 36], "duplcat": [21, 25, 91], "duplic": [0, 3, 21, 25, 40, 91], "durat": [25, 55], "dure": [0, 1, 25, 28, 56, 64, 66, 68, 69, 78, 79], "dx": [25, 36], "dynam": 25, "e": [0, 1, 2, 3, 7, 18, 20, 21, 22, 23, 25, 28, 34, 35, 36, 37, 38, 42, 48, 49, 53, 55, 58, 62, 63, 64, 73, 75, 76, 77, 79, 84, 87, 89, 90, 92, 96, 97, 100, 101], "each": [3, 11, 13, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 40, 42, 48, 49, 51, 53, 55, 56, 58, 59, 66, 68, 75, 78, 84, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 101], "eager": 79, "earli": 0, "earlier": [56, 66], "easi": [0, 25, 31, 59, 62, 66, 75], "easier": [25, 36], "easiest": 63, "easili": 66, "echo": [73, 75], "edg": [16, 25, 34, 41, 93], "edit": [25, 36], "effect": [21, 25, 36, 55, 64, 99], "effici": [18, 21, 25, 26, 37, 53, 97, 101], "egg": [25, 36], "either": [0, 12, 18, 21, 22, 23, 25, 27, 28, 34, 35, 36, 37, 38, 40, 42, 48, 49, 73, 78, 80, 84, 92, 96, 97, 98, 99], "el7": 76, "elect": [68, 69], "element": [4, 5, 7, 8, 9, 11, 12, 15, 16, 17, 18, 21, 22, 23, 25, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 42, 48, 49, 51, 52, 53, 54, 55, 58, 66, 78, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101], "elementwis": [25, 37], "elementwise_funct": [8, 57], "elimin": [18, 25, 70], "elk": [21, 25, 49], "ellips": 62, "ellipsi": [4, 5, 6, 8, 11, 12, 15, 16, 25, 37, 38, 42, 56], "elo": [25, 42, 96], "els": [0, 21, 22, 25, 35, 36, 49, 58, 62], "elsewher": [5, 25, 34, 37, 42, 87, 96], "emit": [25, 36], "emploi": [25, 34], "empti": [3, 5, 20, 21, 22, 23, 25, 28, 34, 35, 36, 37, 40, 48, 49, 53, 75, 87, 90, 91, 93, 98], "empty_lik": 5, "en": [25, 36, 44, 58], "enabl": [3, 19, 25, 31, 37, 47, 63, 75, 76, 78, 84, 100], "enableverbos": [25, 31], "encapsul": [25, 38, 47, 53], "encod": [21, 22, 23, 25, 35, 36, 46, 49, 53, 59, 101], "encoding_benchmark": 59, "encount": [0, 25, 28], "encourag": [76, 77], "end": [3, 5, 16, 18, 21, 25, 30, 32, 34, 37, 38, 48, 53, 55, 61, 83, 89, 90, 94, 97, 101], "endian": [22, 25, 35, 36], "endpoint": [5, 25, 42, 96], "endswith": [18, 25, 53, 83, 89, 101], "enforc": [25, 34], "engin": [25, 34], "enough": [22, 25, 35, 36, 48, 53, 68, 76, 77, 97], "enrich_inplac": 56, "ensur": [0, 3, 21, 25, 28, 34, 40, 54, 62, 68, 75, 77, 91, 95], "enter": [25, 49, 84, 98], "entir": [15, 21, 25, 34, 48, 53, 59, 64, 91, 97], "entiti": [25, 53], "entri": [3, 5, 18, 21, 25, 26, 37, 49, 53, 54, 58, 59, 91], "entropi": 46, "enum": [22, 25, 31, 34, 35, 36, 68], "enumer": [22, 25, 31, 34, 35, 36], "env": [1, 25, 63, 73, 75, 76, 77, 79], "env_nam": 79, "environ": [47, 59, 78, 79], "environmenterror": 47, "ep": [6, 25, 36], "epidemiologi": [25, 42, 96], "epsneg": [25, 36], "eql_kwarg": [25, 54], "equal": [7, 11, 18, 21, 22, 23, 25, 26, 30, 34, 35, 36, 37, 42, 46, 51, 52, 53, 54, 68, 70, 92, 93, 96, 97], "equal_level": [25, 26], "equiv": [25, 39, 54], "equival": [3, 17, 18, 21, 23, 25, 26, 28, 34, 36, 37, 38, 39, 40, 46, 50, 53, 54, 55, 56, 63, 66, 86, 87, 88, 90, 99], "erm": 59, "err_msg": [25, 54], "error": [17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 46, 48, 49, 51, 53, 55, 58, 68, 70, 80, 84, 87, 88, 89, 91, 92, 93, 95, 100, 101], "errormod": [25, 34, 95], "errormsg": 58, "especi": [0, 18, 21, 25, 64, 77, 89], "essenti": [21, 25, 37, 48, 53, 91, 97], "estim": [21, 23, 25, 37, 46, 87, 91, 92], "etc": [21, 25, 34, 49, 62, 76, 80], "ethan": 0, "euler_gamma": [25, 36], "eval": [73, 75], "evalu": [3, 16, 21, 25, 37, 87, 93], "even": [18, 21, 22, 23, 25, 34, 35, 36, 37, 68, 87, 91, 92, 100], "evenli": [5, 25, 34, 38, 90, 93], "event": [25, 42, 96], "everi": [0, 1, 3, 21, 25, 36, 59, 91, 101], "everyth": [21, 25, 49, 61, 62], "everywher": [25, 34], "evolv": 62, "ewab": [25, 38], "exact": [25, 54, 77], "exactli": [22, 23, 25, 35, 36, 54, 55], "exampl": [0, 3, 4, 8, 17, 18, 19, 21, 22, 23, 25, 26, 28, 32, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 50, 53, 54, 55, 56, 59, 62, 68, 73, 77, 78, 80, 84, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101], "example_featur": 0, "exce": [17, 18, 21, 25, 37, 38, 42, 53, 55, 56, 84, 88, 89, 90, 91, 95, 101], "exceed": [25, 36], "excel": 62, "except": [0, 11, 34, 36, 58, 66, 76, 101], "exchang": 101, "exclud": [3, 23, 25, 40, 78, 92], "exclus": [1, 5, 25, 30, 38, 40, 42, 66, 90, 94, 96, 99], "execut": [1, 19, 24, 25, 28, 37, 53, 58, 60, 61, 63, 64, 67, 75, 76, 78, 89, 100], "exhaust": [66, 68], "exist": [17, 18, 19, 21, 23, 25, 26, 28, 29, 36, 37, 38, 48, 49, 53, 68, 70, 75, 90, 91, 92, 100], "exist_ok": [21, 25], "exit": [73, 80], "exp": [7, 25, 34, 38, 42, 46, 83, 87, 96], "exp1m": [25, 34], "exp_digit": [25, 36], "expand": [11, 17, 18, 21, 25, 26, 28, 37, 48, 53, 56, 84], "expand_dim": 11, "expandus": 47, "expans": 94, "expect": [0, 17, 21, 23, 25, 26, 28, 37, 42, 44, 46, 53, 59, 68, 76, 77, 84, 88, 92, 95, 96], "expens": [18, 25, 36], "experi": [0, 84], "experiment": [25, 53, 101], "explan": [25, 36], "explicit": [68, 95], "explicitli": [1, 21, 25, 40, 78, 99], "explod": 76, "expm1": [7, 25, 34], "expon": [22, 25, 35, 36], "exponenti": [7, 25, 34, 42, 83, 87], "export": [20, 25, 28, 34, 60, 63, 75, 76, 77, 80, 93], "export_uint": [20, 25], "expos": [21, 22, 23, 25, 35, 36, 42, 46, 49, 95, 96], "express": [3, 18, 25, 28, 36, 53, 59, 83, 84, 89, 91, 94, 95], "extend": [25, 36], "extens": [2, 18, 25, 26, 28, 37, 48, 53, 75, 84], "extent": 59, "extra": [21, 25, 49], "extra_info": 59, "extract": 92, "extrem": [25, 42, 66, 68, 70, 96], "ey": [5, 25, 34], "f": [17, 18, 21, 22, 25, 34, 35, 36, 37, 38, 42, 46, 53, 73, 76, 77, 79, 84, 87, 88, 96, 101], "f0": [25, 36], "f1": [25, 36], "f16c": 59, "f2": [25, 36], "f4": [25, 36], "f8": [25, 36], "f_exp": [25, 44], "f_name": 66, "f_ob": [25, 44], "face": [25, 48, 62, 95], "fact": 70, "factori": [25, 26, 53], "fail": [0, 4, 8, 21, 25, 28, 34, 36, 62, 84, 91, 95], "failur": [0, 25, 28, 75, 84], "fall": [0, 11, 56], "fals": [3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 42, 46, 48, 49, 53, 54, 55, 56, 59, 66, 82, 84, 85, 87, 89, 90, 91, 92, 95, 96, 97, 99, 101], "false_": [25, 36], "famili": 59, "fast": [1, 18, 22, 25, 35, 53], "faster": [3, 18, 25, 36, 40, 63, 89, 99], "fastest": [25, 37], "featur": [22, 35, 60, 61, 62, 63, 65, 75, 78, 83, 84, 92], "feder": [25, 42, 96], "feed": [25, 36], "feedback": 0, "feel": 0, "fetch": [62, 64], "few": [25, 34, 66], "fewer": [25, 36], "ffffp10": [22, 25, 35, 36], "fide": [25, 42, 96], "field": [20, 22, 25, 35, 36, 38, 53, 62, 84, 101], "fig": 46, "figur": [25, 36, 41, 64], "file": [0, 1, 17, 18, 19, 21, 23, 25, 26, 28, 29, 36, 37, 47, 48, 49, 53, 58, 60, 63, 64, 69, 70, 73, 75, 76, 77, 79, 80, 92, 101], "file_format": [17, 18, 21, 25, 26, 28, 37, 48, 53], "file_typ": [17, 18, 20, 21, 23, 25, 26, 28, 37, 48, 53, 92], "file_vers": 68, "filenam": [17, 18, 21, 23, 25, 26, 28, 37, 48, 53, 59, 84, 92], "filename_cod": [25, 28], "filenotfound": [25, 28], "filetyp": [25, 28, 84], "fill": [5, 21, 22, 23, 25, 35, 36, 37, 38, 42, 49, 59, 82, 90, 92, 96], "fill_valu": [5, 25, 38], "fill_values1": [25, 49], "fill_values2": [25, 49], "fill_values3": [25, 49], "fillna": [25, 49], "fillvalu": [3, 25], "filname_cod": [25, 28], "filter": [0, 21, 24, 25, 48, 84], "filter_by_rang": [21, 25], "filtered_df": [21, 25], "final": [58, 59, 62, 75], "find": [0, 3, 12, 18, 21, 23, 25, 33, 37, 40, 47, 49, 53, 56, 59, 62, 65, 73, 76, 87, 92, 93, 99, 101], "find_loc": [25, 33, 53, 83, 101], "find_match": [32, 83, 101], "findal": [25, 33, 53, 83, 101], "finfo": [6, 25, 36], "finfo_object": 6, "finit": [7, 16, 22, 25, 34, 35, 36], "firewal": 80, "first": [0, 3, 4, 8, 11, 12, 13, 15, 21, 22, 23, 25, 26, 28, 29, 34, 35, 36, 37, 38, 39, 46, 49, 53, 54, 56, 60, 64, 65, 66, 67, 68, 73, 75, 76, 78, 83, 84, 87, 90, 91, 92, 93, 98, 101], "fit": [0, 22, 25, 35, 36, 46, 59, 62, 84], "five": [3, 25, 36, 40, 53, 90, 101], "fix": [0, 25, 34, 42, 46, 55, 62, 80, 96, 101], "fixed_len": [25, 28, 84], "flag": [20, 22, 25, 28, 35, 36, 41, 59, 64, 78, 84, 100], "flake8": [0, 79], "flat": [22, 25, 35, 36, 53, 101], "flatten": [11, 12, 22, 25, 30, 35, 36, 39, 48, 53, 68, 83, 97], "flexibl": [25, 36, 68], "flip": 11, "float": [3, 5, 6, 7, 15, 19, 21, 22, 23, 25, 28, 34, 35, 36, 37, 38, 42, 46, 52, 54, 56, 84, 87, 90, 91, 92, 93, 95, 96], "float128": [25, 36], "float16": [22, 25, 35, 36], "float16dtyp": [25, 36], "float32": [22, 25, 35, 36, 93], "float32dtyp": [25, 36], "float64": [5, 21, 22, 23, 25, 26, 34, 35, 36, 37, 38, 40, 42, 44, 45, 50, 54, 59, 67, 68, 82, 86, 87, 90, 91, 92, 93, 95, 99], "float64dtyp": [25, 36], "float_": [22, 25, 35, 36], "float_scalar": [22, 25, 35, 36, 37, 38, 42], "floor": [7, 25, 34, 36, 37], "floor_divid": [7, 25, 37], "floordivis": [25, 37], "fluid": [18, 20, 21, 23, 25, 26, 37, 48, 49, 53, 55, 92], "flush": [25, 36], "flush_l1d": 59, "fma": 59, "fmod": [25, 37], "fname": 66, "focus": 63, "folder": 75, "folk": 1, "follow": [0, 1, 3, 19, 22, 25, 34, 35, 36, 44, 58, 59, 60, 62, 73, 75, 76, 77, 78, 79, 80, 81, 87, 89, 92, 95, 97, 99, 100, 101], "foo": [0, 2, 25], "foo_test": 0, "foobar": [25, 36], "foopar": 0, "forc": [22, 25, 35, 36, 88, 89, 91, 95, 101], "forget": [64, 80], "fork": [0, 75, 76, 77, 81], "form": [18, 22, 25, 26, 34, 35, 36, 37, 46, 47, 48, 53, 62, 78, 101], "format": [4, 8, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 35, 36, 37, 47, 48, 49, 53, 58, 66, 68, 69, 70, 78, 91, 97, 100, 101], "format_float_posit": [25, 36], "format_float_scientif": [25, 36], "format_oth": [25, 37], "format_pars": [25, 36], "former": [25, 37, 53, 101], "fortran": [25, 37, 95], "forward": [25, 50, 80, 86, 97], "found": [1, 3, 12, 21, 22, 25, 26, 28, 35, 36, 37, 40, 53, 58, 59, 66, 70, 76, 78, 80], "four": [3, 25, 40, 46, 53, 55, 90, 101], "fp": [25, 38], "fpu": 59, "frac": [21, 23, 25, 42, 46, 92, 96], "fraction": [21, 23, 25, 36, 52, 92], "frame": [21, 25, 49, 91, 98], "frameon": 46, "free": [25, 37, 53], "freedom": [15, 23, 25, 37, 44, 46, 87, 92, 93], "freeman": [25, 44], "freez": 46, "freq": [25, 55], "frequenc": [1, 25, 44, 55], "frequent": [25, 49, 78, 98], "friendli": [21, 25, 49], "from": [0, 3, 4, 5, 8, 9, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 48, 49, 53, 54, 56, 58, 59, 60, 62, 63, 64, 66, 67, 68, 73, 75, 76, 78, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101], "from_": 6, "from_cod": [18, 25, 83, 89], "from_dlpack": 5, "from_multi_arrai": [25, 48], "from_panda": [21, 25], "from_part": [25, 48, 53], "from_return_msg": [18, 20, 21, 23, 25, 26, 48, 49, 53], "from_seri": [25, 38], "fromencod": [25, 53], "fromhex": [22, 25, 35, 36], "fromkei": [22, 25, 35, 36], "fromright": [25, 53, 101], "front": [25, 36], "frontend": 75, "frozen": 46, "frozenset": [22, 23, 25, 35, 36], "frustrat": 64, "fsgsbase": 59, "fsspec": [21, 25, 49], "ftp": [25, 36], "full": [5, 18, 25, 32, 34, 38, 41, 46, 53, 55, 61, 63, 73, 77, 81, 89, 101], "full_lik": [5, 25, 38], "full_match_bool": 33, "full_match_ind": 33, "fullmatch": [25, 53, 83, 101], "fullnam": 59, "func": [25, 36, 46], "funcion": 78, "functioanl": 97, "function": [0, 1, 8, 18, 46, 49, 53, 59, 62, 63, 66, 67, 69, 70, 73, 78, 83, 84, 85, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 101], "furo": 79, "further": [76, 77, 81], "futur": [1, 20, 25, 28, 53, 84, 93, 96], "fxsr": 59, "g": [2, 18, 20, 21, 22, 23, 25, 28, 34, 35, 36, 37, 48, 49, 53, 55, 56, 63, 64, 66, 84, 87, 89, 90, 92, 97, 100, 101], "gain": 62, "gamma": 46, "gap": [25, 36], "gasnet": [64, 65, 76, 77], "gasnet_masterip": 60, "gasnet_quiet": 60, "gasnet_route_output": 60, "gasnet_spawnfn": 60, "gasnet_workerip": 60, "gasnetsetup": 60, "gather": [59, 83], "gaussian": [25, 42, 96], "gawk": 76, "gb": [19, 21, 25, 26, 49, 56], "gb_key_nam": [21, 25], "gc": [21, 25, 49], "gcc": [59, 76], "gen_rang": [25, 30], "gener": [18, 19, 21, 22, 23, 24, 25, 30, 31, 34, 35, 36, 37, 38, 41, 42, 44, 46, 47, 49, 55, 57, 58, 59, 63, 64, 66, 67, 68, 70, 75, 76, 80, 82, 83, 84, 87, 90, 92, 96, 98], "generate_histori": 19, "generate_token": 47, "generate_username_token_json": 47, "generic_concat": [25, 56], "generic_mo": 46, "generic_msg": [58, 78], "gensymentri": 58, "gent": 58, "gentyp": [22, 25, 35, 36], "genuineintel": 59, "get": [4, 7, 8, 9, 19, 21, 22, 24, 25, 28, 34, 35, 36, 48, 49, 58, 59, 62, 63, 64, 80, 84, 88, 95, 97], "get_arkouda_client_directori": 47, "get_byt": [25, 53], "get_byteord": [22, 25, 35, 36], "get_callback": [25, 56], "get_column": [25, 28, 67, 71], "get_config": [0, 19], "get_dataset": [25, 28, 67, 71, 84], "get_directori": 29, "get_filetyp": [25, 28], "get_home_directori": 47, "get_jth": [25, 48, 83, 97], "get_length": [25, 53], "get_length_n": [25, 48, 83, 97], "get_level_valu": [25, 26], "get_match": 33, "get_max_array_rank": 19, "get_mem_avail": 19, "get_mem_statu": 19, "get_mem_us": 19, "get_ngram": [25, 48, 83, 97], "get_null_indic": [25, 28], "get_offset": [25, 53], "get_prefix": [25, 48, 53, 83, 97], "get_server_byteord": [22, 25, 35, 36], "get_server_command": 19, "get_suffix": [25, 48, 53, 83, 97], "get_usernam": 47, "getarkoudalogg": 25, "getcwd": [21, 25], "getdefaultencod": [21, 22, 23, 25, 35, 36, 46, 49], "getfield": [22, 25, 35, 36], "getgenerictypearrayentri": 58, "getgenerictypedarrayentri": 58, "getlinenumb": 58, "getmandatoryreleas": [22, 35], "getmodulenam": [58, 78], "getoptionalreleas": [22, 35], "getroutinenam": 58, "getter": [25, 53], "getvalu": [25, 36], "getvalueof": 58, "gfile": [25, 36], "ghi": 67, "ghpage": 75, "ghz": 59, "gib": 59, "git": [0, 64, 76, 77], "github": [0, 25, 44, 62, 64, 75, 76, 77, 81], "gitk": 62, "give": [25, 36, 37, 49, 67, 79, 98, 100], "given": [3, 5, 12, 15, 16, 18, 21, 22, 23, 25, 28, 34, 35, 36, 37, 38, 40, 42, 46, 49, 53, 55, 56, 59, 79, 84, 89, 90, 91, 92, 96, 101], "glob": [25, 28, 84], "global": [4, 8], "gmp": 77, "gnu": [61, 80], "go": [23, 25, 62, 64, 76, 80, 90], "goal": 4, "good": [0, 62, 64], "googl": [25, 36, 101], "got": 64, "gottfri": [32, 101], "gpu": [25, 37], "grab": [25, 36], "gradient": [25, 36], "gram": [25, 48, 97], "graph": [25, 41, 92], "graphic": 62, "greater": [7, 25, 38, 42, 90, 96], "greater_equ": 7, "greatli": [18, 25, 40, 49, 90], "green": [25, 26, 62], "grep": [75, 80], "grid": [21, 25, 41, 49], "group": [1, 6, 18, 21, 23, 25, 32, 48, 49, 50, 53, 59, 66, 68, 83, 86, 89, 91, 92, 98, 99, 101], "group_ani": [23, 25, 92], "group_argmaxima": [23, 25, 92], "group_argminima": [23, 25, 92], "group_maxima": [23, 25, 92], "group_mean": [23, 25, 92], "group_median": [23, 25, 92], "group_minima": [23, 25, 92], "group_num": [32, 101], "group_nuniqu": [23, 25, 92], "group_product": [23, 25, 92], "group_std": [23, 25, 92], "group_sum": [23, 25, 92], "group_var": [23, 25, 92], "groupabl": [23, 25, 40, 92, 99], "groupable_element_typ": [23, 25, 49, 98], "groupbi": [18, 21, 23, 25, 28, 48, 53, 56, 83, 89, 101], "groupby_reduction_typ": [23, 25], "groupbyclass": [21, 25, 40, 57, 91, 99], "grow": [25, 37, 87], "guarante": [18, 25, 50, 53, 86, 96, 101], "guid": [58, 73, 75, 76, 77], "guidelin": [62, 101], "guido": [25, 36], "gumbel": [25, 42, 96], "gz": [73, 75, 76, 77], "gzip": [18, 21, 25, 26, 28, 37, 48, 53, 59, 70], "h": [22, 25, 34, 35, 36, 41, 55, 82, 93, 100], "h5": [25, 28, 37, 84], "h5l": [25, 28], "h5py": [79, 84], "ha": [0, 4, 8, 18, 20, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 38, 40, 42, 48, 49, 53, 55, 56, 60, 62, 63, 67, 68, 78, 84, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "half": [3, 5, 22, 25, 35, 36, 42, 96], "hand": [3, 25, 52, 62, 94], "handl": [18, 19, 21, 25, 34, 36, 53, 69, 84, 89, 91, 95, 101], "handled_funct": 4, "handler": [21, 22, 23, 25, 35, 36, 46, 49], "happen": [58, 62], "has_non_float_nul": [25, 28, 84], "has_repeat_label": [25, 49], "hash": [18, 25, 34, 48, 50, 53, 86], "hasnan": [25, 49], "have": [0, 1, 3, 4, 8, 11, 18, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 53, 54, 55, 56, 58, 61, 62, 63, 64, 66, 67, 68, 70, 75, 76, 77, 78, 79, 84, 87, 89, 90, 91, 92, 95, 96, 97, 98], "hd15iqr": 59, "hdf5": [1, 17, 18, 21, 23, 25, 26, 28, 37, 48, 53, 67, 69, 70, 71, 75, 79, 84, 92, 101], "hdf5_output": [21, 25], "hdf_output": [21, 25], "head": [21, 23, 25, 49, 62, 83, 92], "header": [21, 25, 26, 28, 37, 53, 84], "healthcheck": 19, "heavi": [25, 38], "hei": 62, "hello": [25, 34, 53, 84, 101], "hello3": 77, "help": [0, 20, 25, 78], "helper": [20, 25, 56], "henc": [25, 34], "here": [1, 25, 36, 53, 56, 59, 60, 63, 64, 65, 66, 68, 70, 75, 76, 77, 78, 79, 80, 81, 100], "heroic": 61, "hex": [22, 25, 35, 36], "hexadecim": [22, 25, 35, 36], "hexidecim": 47, "hf": [25, 38], "hff": [25, 38], "hfmd": [25, 38], "hi": [25, 34], "hide": [25, 36], "hierarch": [3, 25], "hierarchi": [25, 36], "high": [3, 20, 21, 25, 34, 37, 38, 42, 66, 90, 96], "higher": [25, 34], "highest": [21, 25, 36, 37, 38], "highli": 76, "highlight": [1, 62, 66], "hist": [25, 34, 46], "hist_al": [25, 41], "hist_fil": 24, "histogram": [25, 34, 36, 41, 46, 83], "histogram2d": [25, 34, 93], "histogramdd": [25, 34], "histor": [25, 36], "histori": [0, 19, 25, 57, 62], "historyaccessor": 24, "historyretriev": 24, "histtyp": 46, "hit": 63, "hog": 64, "hold": [25, 34, 46, 95], "hole": [25, 49], "home": [25, 36, 47, 75, 78], "homebrew": [63, 75], "homepag": 75, "homogen": [21, 25, 91], "hong_kong": [25, 55], "horizont": [25, 48, 49, 97, 98], "host": [19, 21, 25, 47, 49, 75], "hostnam": [1, 18, 19, 21, 25, 28, 37, 48, 53, 63, 73, 82, 100], "hour": [25, 55], "hous": 80, "how": [0, 4, 8, 17, 18, 20, 21, 25, 26, 28, 34, 36, 37, 48, 53, 58, 59, 62, 67, 79, 88, 92, 95], "howev": [23, 25, 34, 36, 37, 68, 75, 79, 80, 87, 89, 92], "ht": 59, "html": [11, 21, 25, 36, 44, 49, 56, 58, 75, 88], "http": [0, 11, 21, 25, 36, 44, 49, 56, 58, 76, 77, 88], "human": [18, 25, 27, 37, 53], "hundr": 84, "hyperbol": [7, 25, 34], "hyperlink": 62, "hypervisor": 59, "hypothet": [23, 25, 30, 37, 87, 92], "hz_actual": 59, "hz_actual_friendli": 59, "hz_advertis": 59, "hz_advertised_friendli": 59, "i": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "i2": [25, 26, 36], "i4": [25, 36], "i7": 59, "i_cpi": [25, 26], "iat": [25, 49], "ibpb": 59, "ibr": 59, "ibv": 60, "iconv": [1, 75, 79], "id": [19, 59, 80, 92], "idea": [0, 62, 64, 67, 84], "ideal": [0, 62], "ident": [21, 22, 25, 34, 35, 36, 42, 46, 54, 56, 87, 95, 96], "identif": [25, 31], "identifi": [0, 3, 18, 25, 28, 36, 37, 51, 95], "idn2": [1, 75, 79], "idna": 59, "idx": [3, 21, 23, 25, 26, 66, 92], "idx1": 56, "idx2": [23, 25, 56, 92], "ie": [25, 38], "ieee": [25, 36, 91, 95], "ieeestd": [25, 36], "iexp": [25, 36], "iff": [3, 18, 25, 26, 37, 49, 53, 55, 87, 93], "ignor": [11, 14, 21, 22, 23, 25, 28, 34, 35, 36, 54, 55, 84, 91, 95], "ignore_index": [21, 25], "ii16": [25, 36], "ii32": [25, 36], "iinfo": [6, 25, 36], "iinfo_object": 6, "iloc": [25, 49, 54], "imag": [7, 22, 25, 35, 36], "imagin": 92, "imaginari": [7, 22, 25, 35, 36], "imit": [25, 28], "immun": [18, 20, 21, 23, 25, 26, 37, 48, 49, 53, 55, 92], "immut": [22, 23, 25, 35, 36], "imnotok": 19, "imok": 19, "impact": [18, 23, 25, 26, 28, 36, 37, 48, 61, 62, 64, 84, 92], "implement": [0, 4, 5, 7, 10, 18, 19, 20, 21, 22, 24, 25, 34, 35, 36, 37, 40, 46, 47, 48, 49, 53, 58, 67, 73, 87, 90, 96, 100, 101], "implements_numpi": 4, "impli": [3, 25, 54, 94], "implicit": 95, "import": [18, 20, 21, 25, 26, 28, 34, 36, 37, 41, 44, 45, 46, 47, 49, 53, 54, 56, 58, 62, 68, 73, 75, 78, 91, 93, 100], "import_data": [25, 28, 69, 84], "importerror": [25, 37], "impos": [25, 55], "improv": [18, 25, 40, 49, 62, 63, 78, 90], "in1d": [18, 25, 40, 58, 66, 83, 89, 99, 101], "in1d_interv": [3, 25], "inaccess": [17, 18, 21, 25, 26, 28, 37, 48, 53], "inadvert": [20, 25], "inappropri": [3, 25], "includ": [0, 1, 3, 15, 21, 23, 25, 26, 27, 28, 34, 36, 37, 49, 53, 55, 58, 59, 62, 67, 68, 73, 75, 76, 78, 84, 87, 91, 92, 95, 97], "include_initi": 15, "includedelimit": [25, 53, 101], "inclus": [3, 5, 21, 25, 34, 37, 38, 42, 55, 87, 90, 94, 96], "incompat": [25, 34, 76], "incorpor": 95, "increas": [25, 48, 97], "increment": [61, 62], "ind": 94, "independ": [25, 28, 42, 47, 84, 96], "index": [2, 3, 4, 5, 8, 12, 17, 18, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 37, 38, 40, 48, 49, 53, 54, 56, 57, 59, 66, 75, 82, 83, 84, 87, 89, 92, 93, 97, 98, 101], "index_label": [25, 49], "index_s": [59, 82], "index_valu": [25, 54], "indexerror": [25, 49], "indexing_funct": [8, 57], "indexof1d": [25, 40], "indic": [0, 3, 4, 6, 8, 9, 12, 13, 14, 17, 18, 19, 20, 21, 23, 25, 26, 28, 30, 32, 33, 34, 37, 39, 40, 48, 49, 50, 53, 55, 56, 66, 68, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 101], "indici": [32, 101], "individu": [25, 43, 60, 101], "inds2": 56, "ineffiec": 70, "inexact": [25, 36], "inf": [25, 34, 36], "infer": [5, 18, 21, 22, 23, 25, 26, 28, 35, 36, 37, 38, 53, 68, 84], "inferred_typ": [18, 25, 26, 37, 53, 54], "infin": [22, 25, 35, 36], "infinit": [7, 23, 25, 34, 36, 37, 87, 92], "info": [0, 1, 18, 21, 25, 27, 31, 37, 53], "infoclass": [25, 57], "inform": [0, 1, 4, 7, 8, 18, 19, 23, 25, 27, 36, 37, 42, 53, 59, 62, 63, 64, 66, 67, 68, 70, 71, 73, 75, 76, 77, 78, 79, 89, 96, 97, 99, 101], "infrastructur": 1, "infti": [25, 36], "ing": [25, 53, 101], "ingest": [84, 101], "inherit": [23, 25, 46, 92, 95], "ini": [0, 59], "init": [23, 25, 77, 92], "initi": [5, 15, 18, 19, 22, 25, 35, 36, 37, 38, 42, 51, 59, 77, 82, 89, 90, 95, 96, 100], "initialdata": [21, 25, 91], "inner": [4, 8, 16, 21, 25, 30], "inplac": [21, 25, 91], "input": [5, 11, 12, 15, 18, 20, 21, 22, 23, 25, 26, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 54, 55, 56, 58, 62, 84, 86, 87, 89, 92, 95, 98, 99], "insensit": [25, 26, 37, 53, 59], "insert": [11, 12, 22, 25, 35, 36, 53, 101], "insid": [25, 36], "inspect": [78, 84], "inst": [22, 25, 35, 36], "instal": [1, 25, 28, 37, 63, 80, 100], "instanc": [18, 20, 21, 22, 23, 25, 35, 36, 37, 38, 46, 49, 51, 53, 59, 70, 75, 78, 84, 87, 91, 92, 93, 95, 101], "instanti": [22, 25, 35, 36], "instead": [18, 20, 21, 23, 25, 28, 36, 37, 42, 53, 59, 82, 84, 87, 89, 92, 96, 101], "instruct": [1, 25, 53, 73, 76, 77, 79, 80, 81, 100], "insuffici": [25, 36], "int": [3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 68, 84, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101], "int16": [22, 25, 35, 36, 93], "int16dtyp": [25, 36], "int32": [22, 25, 35, 36, 93], "int32dtyp": [25, 36], "int64": [3, 18, 20, 21, 22, 23, 25, 26, 28, 30, 32, 34, 35, 36, 37, 38, 40, 42, 48, 50, 53, 54, 55, 58, 59, 66, 67, 68, 82, 84, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 99, 101], "int64dtyp": [25, 36], "int8": [22, 25, 35, 36, 93], "int8dtyp": [25, 36], "int_": [22, 25, 35, 36], "int_scalar": [17, 18, 21, 22, 23, 25, 28, 34, 35, 36, 37, 38, 42, 48, 50, 51, 53, 55, 87, 88, 90, 92, 93, 95], "int_typ": [25, 36], "intc": [22, 25, 35, 36], "intdtyp": [25, 36], "integ": [1, 4, 8, 9, 11, 18, 20, 21, 22, 23, 25, 26, 28, 30, 34, 35, 36, 37, 38, 39, 42, 46, 54, 55, 68, 83, 87, 88, 89, 90, 91, 92, 95, 97, 99, 101], "integr": [0, 22, 23, 25, 28, 35, 36, 37, 38, 42, 62, 84, 90, 92], "intel": 59, "intend": [0, 18, 20, 21, 25, 34, 37, 48, 53, 54, 67, 73, 76, 77, 85, 91, 98], "intens": [25, 50, 66, 86, 90], "intention": [22, 35], "interact": [63, 67, 71, 72, 73, 77, 79], "interest": 66, "interfac": [0, 62], "interleav": [18, 21, 25, 40, 49, 90], "intermedi": [3, 25], "intern": [1, 4, 8, 22, 25, 30, 35, 36, 37, 53, 54, 62], "interoper": 0, "interpret": [19, 21, 22, 25, 28, 35, 36, 46, 59, 84, 100], "intersect": [21, 22, 23, 25, 35, 36, 40, 48, 66, 83, 99], "intersect1d": [18, 25, 40, 48, 58, 66, 83, 97, 99], "intersect_df": [21, 25], "interv": [3, 5, 25, 34, 38, 42, 46, 55, 90, 93, 96], "interval_lookup": [3, 25], "intp": [22, 25, 35, 36], "intptr_t": [22, 25, 35, 36], "introduc": 11, "introduct": 66, "inttyp": [22, 25, 35, 36], "intx": [21, 25], "inv": [25, 42, 96], "invalid": [25, 28, 84], "invari": 1, "invers": [13, 21, 25, 34, 42, 46, 56, 91, 96], "inverse_indic": 13, "invert": [23, 25, 40, 99], "invert_permut": [21, 25, 56], "invok": [25, 38, 42], "involv": [4, 8, 63, 81], "invpcid": 59, "invpcid_singl": 59, "io": [25, 36, 57, 58, 59, 69, 70, 71], "io_compress": 59, "io_files_per_loc": 59, "io_only_delet": 59, "io_only_read": 59, "io_only_writ": 59, "io_path": 59, "io_util": [25, 57], "ior": [25, 53, 101], "ip": [20, 25], "ip2": [20, 25], "ip_address": [20, 25, 26, 85], "ipaddress": [20, 25], "ipv4": [20, 25, 28], "ipv6": [20, 25], "ipython": [19, 24, 73], "iqr": 59, "iqr_outli": 59, "is_cosort": [3, 25], "is_float": 56, "is_int": 56, "is_integ": [22, 25, 35, 36], "is_ipv4": [20, 25], "is_ipv6": [20, 25], "is_leap_year": [25, 55], "is_numer": 56, "is_regist": [18, 20, 21, 23, 25, 26, 37, 48, 49, 53, 55, 56, 83, 92], "is_sort": [25, 37, 83, 87, 93], "isaac": [32, 101], "isalnum": [25, 53], "isalpha": [25, 53], "isbool": 68, "isdecim": [25, 53], "isdigit": [25, 53], "isdisjoint": [22, 23, 25, 35, 36], "isdtyp": 6, "isempti": [25, 53], "isf": 46, "isfinit": [7, 25, 34], "isin": [21, 25, 49], "isinf": [7, 25, 34], "isinst": [18, 25, 36, 38, 58], "islow": [25, 53], "isn": 64, "isna": [18, 21, 25, 49], "isnan": [7, 25, 34], "isnul": [25, 49], "iso": [25, 36], "isocalendar": [25, 55], "isort": [0, 79], "isscalar": [25, 36], "issctyp": [25, 36], "isspac": [25, 53], "issu": [18, 21, 23, 25, 36, 58, 62, 75, 80, 92, 97], "issubclass": [25, 36], "issubclass_": [25, 36], "issubdtyp": [25, 36], "issubsctyp": [25, 36], "issubset": [22, 23, 25, 35, 36], "issuperset": [22, 23, 25, 35, 36], "issupportedfloat": [22, 25, 35, 36], "issupportedint": [22, 25, 35, 36], "issupportednumb": [22, 25, 35, 36], "istitl": [25, 53], "isupp": [25, 53], "item": [3, 4, 8, 18, 21, 22, 23, 25, 35, 36, 37, 38, 40, 49, 54, 56, 89, 91, 92, 98, 99], "items": [17, 22, 25, 35, 36, 37, 38, 51, 53, 83, 84, 88, 95], "itemset": [22, 25, 35, 36], "iter": [21, 22, 23, 25, 28, 35, 36, 38, 50, 54, 59, 83, 84, 86], "iter1": [25, 54], "iter2": [25, 54], "ith": [18, 25, 48, 53], "its": [3, 7, 18, 22, 25, 26, 34, 35, 36, 37, 40, 48, 49, 53, 62, 68, 77, 87, 95, 97, 98, 101], "itself": [25, 36, 37, 42, 54, 62, 96], "j": [25, 48, 60, 61, 76, 77, 97], "j16": 61, "jake": 66, "jane": 66, "john": 66, "join": [21, 25, 48, 53, 57, 58, 83], "join_on_eq_with_dt": [25, 30], "json": [18, 19, 25, 27, 37, 47, 53, 79], "judici": [25, 36], "jupyt": [19, 24, 73, 79], "just": [25, 34, 63, 64, 95, 96], "k": [5, 22, 25, 35, 36, 37, 42, 46, 59, 87, 93, 96], "kb": [19, 21, 25, 26, 49, 56], "keep": [0, 3, 12, 15, 16, 21, 23, 25, 36, 66, 77, 80, 84, 91, 92], "keepdim": [12, 15, 16], "keepparti": [25, 53, 101], "kei": [3, 18, 21, 22, 23, 25, 26, 27, 28, 29, 34, 35, 36, 40, 49, 54, 58, 66, 68, 78, 80, 85, 91, 92, 98, 99], "kept": [21, 23, 25, 36, 48, 91, 92], "kextrememsg": 78, "key_": 68, "keyerror": [22, 25, 35, 36, 49], "keyfil": 1, "keynam": 56, "keys1": [3, 25], "keys2": [3, 25], "keyword": [0, 16, 18, 21, 22, 25, 35, 36, 42, 46, 48, 49, 54, 90, 96, 98], "kind": [6, 22, 25, 35, 36, 39], "kitwar": 76, "know": [4, 8, 63, 73], "known": [0, 25, 28, 34, 84], "kurt": 46, "kurtosi": 46, "kwarg": [16, 18, 21, 22, 23, 25, 35, 36, 38, 43, 46, 49, 54, 55, 56, 89, 90, 92], "kwd": 46, "kwoqnphz": [25, 38], "l": [4, 8, 22, 25, 28, 35, 36, 55, 60, 62, 66, 67, 75, 84], "l1_data_cache_s": 59, "l1_instruction_cache_s": 59, "l2_cache_associ": 59, "l2_cache_line_s": 59, "l2_cache_s": 59, "l3_cache_s": 59, "l_name": 66, "label": [0, 18, 21, 23, 25, 26, 41, 46, 49, 54, 89, 91, 92, 98], "lack": [22, 25, 35, 36], "lahf_lm": 59, "laid": 0, "lam": [25, 42, 96], "lambda": [21, 25, 42, 44, 96], "lambda_": [25, 44], "lang": 76, "larg": [4, 8, 18, 22, 25, 35, 36, 42, 59, 87, 96], "larger": [17, 18, 21, 23, 25, 36, 37, 38, 53, 62, 66, 84, 88, 89, 92, 95, 101], "largest": [25, 36, 37, 42, 49, 87, 96, 98], "last": [11, 12, 16, 21, 22, 23, 25, 35, 36, 37, 38, 49, 50, 53, 54, 62, 78, 86, 91, 92, 98, 100, 101], "later": [21, 25, 36, 37, 53, 79], "latest": [11, 25, 56, 58, 73, 76, 77, 80], "latter": [19, 101], "launch": [58, 80, 83], "layer": 84, "layout": [25, 51, 52], "lb": 46, "ld15iqr": 59, "ld_library_path": 1, "lead": [25, 36, 37, 53], "learn": [25, 55, 58, 73], "least": [0, 20, 21, 22, 23, 25, 35, 36, 37, 48, 50, 53, 86, 92, 97], "leav": [0, 25, 34, 36, 93], "left": [0, 3, 7, 12, 20, 21, 25, 34, 36, 37, 46, 50, 52, 53, 54, 55, 86, 93, 101], "left_align": [3, 25], "left_df": [21, 25], "left_suffix": [21, 25], "legend": 46, "leibniz": [32, 101], "len": [23, 25, 37, 48, 53, 87, 92, 94, 97, 101], "len_suffix": [25, 48], "length": [0, 3, 11, 18, 21, 22, 23, 25, 26, 28, 30, 32, 33, 35, 36, 38, 40, 42, 47, 48, 49, 53, 59, 68, 82, 84, 87, 90, 92, 97, 98, 99, 101], "length_or_data": [25, 36], "less": [7, 18, 21, 23, 25, 26, 36, 37, 42, 48, 53, 92, 96], "less_equ": 7, "lesser": 59, "let": 66, "letter": [25, 53], "level": [1, 25, 26, 31, 36, 40, 49, 54, 59, 63, 67, 68, 75, 76, 77, 78, 81, 84, 98, 99], "levelnam": 25, "leverag": [61, 76], "lexicograph": [25, 50, 62, 86], "lhdf5": 1, "lhdf5_hl": 1, "lib": [1, 75, 80, 99], "libiconv": 79, "libidn2": 79, "librari": [0, 1, 58, 80, 101], "libtic": 80, "libtinfow": 80, "licens": 76, "liconv": 1, "lidn2": 1, "lie": [18, 25, 34, 53], "life": [77, 79], "lifo": [22, 25, 35, 36], "like": [0, 2, 3, 4, 8, 20, 21, 22, 23, 25, 35, 36, 37, 42, 55, 60, 62, 63, 64, 66, 69, 73, 75, 78, 84, 85, 91, 92, 94, 96, 98, 100, 101], "likelihood": [23, 25, 37, 44, 87, 92], "lim": 94, "limit": [0, 4, 16, 17, 18, 25, 30, 34, 36, 37, 38, 42, 53, 55, 67, 70, 73, 84, 88, 89, 91, 95, 96, 101], "linalg": [8, 57], "line": [0, 25, 29, 36, 63, 67, 73, 78, 88, 100], "linear": [25, 34, 101], "linearli": [25, 38, 55, 90], "linefe": [25, 36], "lineno": 25, "link": [0, 1, 25, 28, 55, 62, 75, 76], "linkifi": 79, "linspac": [5, 23, 25, 34, 36, 38, 46, 83, 87, 90, 92, 95], "linter": 0, "linux": [22, 25, 35, 36, 47, 59, 75, 80, 81], "linux64": 76, "list": [0, 3, 4, 5, 8, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 46, 48, 49, 51, 53, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 71, 73, 78, 81, 84, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101], "list_registri": [25, 27, 37], "list_symbol_t": [25, 27], "listen": [73, 100], "liter": [12, 22, 25, 35, 36, 39, 46, 89, 101], "littl": [22, 25, 35, 36], "live": [76, 77], "ll": [63, 64, 75], "llvm": [76, 77, 80], "lm": 59, "ln": [25, 42, 80, 96], "lname": 66, "lo": [25, 34], "load": [18, 21, 25, 26, 28, 37, 48, 53, 67, 68, 70, 71, 80, 84], "load_al": [18, 21, 25, 26, 28, 37, 53, 71], "loc": [25, 42, 46, 49, 96], "local": [0, 1, 4, 8, 17, 18, 19, 21, 23, 25, 26, 28, 36, 37, 48, 49, 53, 55, 56, 59, 60, 68, 73, 75, 76, 77, 84, 90, 92, 98, 100], "locale_hostnam": 19, "locale_id": 19, "localhost": [19, 73, 100], "locat": [1, 12, 23, 25, 26, 34, 36, 37, 42, 46, 47, 49, 53, 59, 62, 64, 75, 80, 87, 92, 96, 98, 101], "locationsinfo": 33, "log": [1, 7, 23, 25, 31, 34, 38, 41, 42, 44, 45, 46, 53, 83, 87, 92, 96], "log10": [7, 25, 34], "log1p": [7, 25, 34], "log2": [7, 25, 34], "log_lvl": [25, 31], "log_msg": [25, 31], "logaddexp": 7, "logarithm": [7, 25, 34, 42, 87, 96], "logcdf": 46, "logformat": 25, "logger": [18, 23, 25, 33, 48, 51, 53, 57, 83, 92], "logic": [3, 7, 17, 18, 25, 34, 38, 42, 48, 53, 58, 83, 88, 90, 93, 97], "logical_and": 7, "logical_not": 7, "logical_or": 7, "logical_xor": 7, "logist": [25, 42, 83], "loglevel": [25, 31], "logmean": [25, 38], "lognorm": [25, 38, 42, 83], "logpdf": 46, "logsf": 46, "logstd": [25, 38], "long": [22, 25, 35, 36, 48, 53, 64, 97], "longcomplex": [25, 36], "longdoubl": [25, 36], "longdoubledtyp": [25, 36], "longdtyp": [25, 36], "longer": [21, 25, 38, 68, 79, 91], "longfloat": [25, 36], "longlong": [25, 36], "longlongdtyp": [25, 36], "longnam": 46, "look": [0, 1, 25, 36, 58, 62, 63, 66, 78, 84, 100], "lookahead": [18, 25, 53, 89, 101], "lookbehind": [18, 25, 53, 89, 101], "lookup": [3, 25, 26, 49], "loop": 1, "loos": 62, "lose": [25, 36], "loss": 97, "lot": 59, "love": 0, "low": [3, 20, 21, 25, 34, 36, 37, 38, 42, 66, 84, 90, 96], "lower": [5, 21, 25, 34, 36, 42, 53, 68, 91, 96], "lower_bounds_inclus": [3, 25], "lowercamelcas": 0, "lowercas": [25, 38, 53], "lowest": [3, 21, 25, 37, 38, 42, 96], "ls_csv": [25, 28, 67, 71], "lst": [25, 49], "lstick": [25, 53, 83, 101], "lt": 80, "ludmmgtb": [25, 38], "lw": 46, "lz": [25, 37], "lz4": [18, 21, 25, 26, 28, 37, 48, 53, 59, 70], "lzmq": 1, "m": [0, 22, 25, 26, 32, 34, 35, 36, 46, 48, 55, 59, 75, 80, 101], "m1": 66, "m2": [25, 26, 66], "m4": 76, "mac": [75, 77], "machep": [25, 36], "machin": [19, 25, 36, 59, 60, 63, 76, 77, 100], "machine_info": 59, "machineri": 58, "maco": [47, 76, 81], "macosx": 77, "made": [20, 21, 22, 25, 35, 36, 53, 101], "mai": [17, 18, 21, 25, 26, 28, 34, 36, 37, 38, 39, 40, 49, 53, 54, 66, 68, 75, 77, 79, 80, 84, 88, 89, 90, 91, 95, 96, 101], "main": [5, 25, 34, 59, 62, 68], "mainli": 1, "maintain": [12, 25, 26, 28, 48, 69, 84], "major": [62, 67, 85, 91, 98], "make": [0, 1, 11, 18, 20, 21, 25, 28, 34, 36, 42, 46, 49, 55, 58, 59, 60, 61, 62, 64, 73, 75, 76, 77, 78, 80, 89, 91, 96], "makebinari": 61, "makefil": [73, 75], "malform": [25, 38, 84], "manag": [75, 76, 77, 79, 81], "mandatori": [22, 35], "mani": [3, 18, 21, 25, 36, 59, 89, 92], "manipul": 0, "manipulation_funct": [8, 57], "manner": [58, 96], "mantissa": [22, 25, 35, 36], "manual": [25, 36, 77], "map": [3, 18, 19, 20, 21, 22, 25, 26, 28, 29, 35, 36, 42, 49, 53, 56, 91, 96, 101], "mapper": [21, 25, 91], "mark": 68, "markdown": [0, 21, 25, 49], "mask": [21, 25, 34, 48, 49, 53, 97], "mass": [25, 42, 96], "master": [0, 62, 75], "match": [1, 5, 11, 17, 18, 21, 23, 25, 26, 28, 33, 34, 36, 37, 38, 48, 49, 53, 54, 55, 56, 57, 59, 83, 84, 87, 88, 90, 92, 95, 98, 100], "match_bool": 33, "match_ind": 33, "match_typ": [32, 33, 83, 101], "matcher": [25, 57], "matchtyp": [32, 33, 101], "math": [32, 101], "mathemat": 87, "mathjax": 79, "matlab": 94, "matmul": [10, 25, 34], "matplotlib": [25, 34, 36, 41, 46, 79, 93], "matric": [5, 25, 34, 52, 56], "matrix": [10, 21, 23, 25, 34, 36, 52, 56, 92], "matrix_transpos": 10, "matter": 63, "max": [6, 15, 21, 22, 23, 25, 34, 35, 36, 37, 48, 49, 53, 59, 83, 87, 92, 93, 101], "max_bit": [25, 37, 38, 51, 59, 84, 90, 95], "max_list_s": [25, 26, 85], "max_tim": 59, "max_work": [25, 36], "maxbit": 59, "maxexp": [25, 36], "maxima": [23, 25, 92], "maximum": [1, 12, 15, 16, 19, 21, 23, 25, 26, 36, 37, 38, 42, 56, 59, 84, 87, 90, 91, 92, 93], "maximum_sctyp": [25, 36], "maxk": [25, 37, 78, 83, 87, 93], "maxkmsg": 78, "maxlen": [25, 38], "maxmum": [25, 37, 87], "maxsplit": [25, 33, 53, 101], "maxtaskpar": 19, "maxtransferbyt": [4, 8, 17, 18, 21, 25, 37, 38, 53, 54, 55, 84, 88, 89, 91, 95, 101], "mb": [19, 21, 25, 26, 49, 56], "mca": 59, "mce": 59, "md": [75, 76, 77], "mean": [15, 19, 21, 22, 23, 25, 28, 34, 35, 36, 37, 38, 42, 46, 47, 48, 49, 53, 59, 83, 84, 87, 92, 93, 96], "mean_shim": 15, "measur": [59, 82], "median": [21, 23, 25, 34, 42, 46, 59, 83, 92, 96], "meet": 0, "megabyt": [21, 25, 91], "member": [0, 22, 25, 35, 36], "membership": [3, 23, 25, 40, 92, 99], "memori": [17, 18, 19, 21, 25, 26, 28, 37, 48, 49, 53, 54, 64, 65, 68, 73, 84, 88, 89, 95, 101], "memory_usag": [21, 25, 26, 49], "memory_usage_info": [21, 25], "memoryview": [22, 25, 35, 36], "mention": [0, 64], "mere": [25, 53], "merg": [18, 21, 25, 56, 62], "mesg": [25, 36], "meshgrid": 5, "messag": [1, 17, 18, 19, 21, 25, 26, 31, 36, 37, 38, 48, 53, 54, 58, 73, 84], "messagearg": 58, "metadata": [25, 28], "method": [2, 4, 18, 19, 20, 21, 22, 23, 24, 25, 28, 34, 35, 36, 37, 38, 42, 46, 47, 48, 49, 53, 54, 61, 66, 67, 83, 84, 89, 90, 92, 93, 95, 96], "method1": [25, 36], "method2": [25, 36], "mi": [18, 25, 26, 49, 55], "mib": 59, "microsecond": [25, 55], "microsoft": [59, 80], "middl": [25, 34], "midnight": [25, 55], "might": [25, 49, 75, 77, 78], "milli": [25, 30], "million": [25, 34, 37, 87], "millisecond": [25, 55], "mimic": [25, 42, 96], "min": [6, 15, 21, 22, 23, 25, 34, 35, 36, 37, 48, 49, 59, 83, 87, 92, 93], "min_digit": [25, 36], "min_round": 59, "min_tim": 59, "mind": [0, 66, 80], "mine": 64, "minexp": [25, 36], "miniforg": 75, "minim": [4, 21, 25, 63, 64, 90, 91], "minima": [23, 25, 92], "minimum": [12, 15, 16, 23, 25, 36, 37, 38, 76, 87, 92, 93], "mink": [25, 37, 78, 83, 87, 93], "minkmsg": 78, "minlen": [25, 38], "minor": 62, "mintypecod": [25, 36], "minu": [25, 34, 36], "minut": [25, 55], "mismatch": [21, 23, 25, 75, 92], "miss": [3, 18, 21, 25, 36, 49, 89], "mistak": 62, "mix": [25, 53, 55, 59, 88], "mixtur": [25, 42, 96], "mkdir": [21, 25], "mm": 62, "mmx": 59, "mod": [25, 37, 44], "modal": [23, 25, 92], "mode": [1, 16, 17, 18, 20, 21, 23, 25, 26, 28, 36, 37, 48, 49, 53, 83, 90, 92], "model": [59, 96], "modif": [18, 20, 21, 23, 25, 26, 37, 48, 49, 53, 55, 78, 91, 92], "modifi": [21, 25, 34, 36, 44, 63, 91], "modul": [25, 58, 63, 64, 73, 84, 101], "modular": [25, 37, 64], "modulenotfounderror": [25, 37], "moment": 46, "moment_typ": 46, "momtyp": 46, "monoton": [25, 37, 87, 93], "month": [25, 55, 62], "more": [0, 1, 3, 4, 7, 8, 11, 17, 18, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 46, 49, 53, 55, 58, 59, 60, 62, 63, 64, 66, 68, 70, 71, 73, 75, 76, 77, 79, 84, 88, 89, 91, 92, 95, 97, 101], "most": [0, 1, 20, 23, 25, 33, 36, 49, 53, 54, 59, 61, 62, 66, 68, 73, 75, 77, 80, 84, 90, 92, 95, 98, 101], "most_common": [23, 25, 56, 83, 92], "mostli": [20, 25, 54], "motion": 1, "movb": 59, "move": [11, 25, 50, 56, 64, 66, 86, 90, 97], "moveaxi": 11, "movement": 90, "mpi": 84, "msb_left": [20, 25], "msg": [25, 36], "msgarg": 58, "msgtupl": 58, "msgtype": 58, "msi": 59, "msr": 59, "mt": [4, 8], "mtrr": 59, "mu": [25, 38, 42, 96], "much": [0, 3, 17, 18, 21, 25, 28, 37, 48, 53, 61, 66, 68, 84, 88, 89, 95, 101], "muller": [25, 42, 96], "multi": [3, 17, 20, 23, 25, 28, 40, 49, 66, 85, 88, 90, 92, 95, 98, 99], "multia": [25, 40, 99], "multib": [25, 40, 99], "multidimension": [25, 34], "multiindex": [21, 25, 26, 49, 85, 98], "multipl": [3, 11, 21, 25, 28, 34, 36, 40, 48, 55, 58, 59, 60, 66, 68, 70, 71, 78, 82, 84, 85, 87, 91, 97], "multiplex": 87, "multipli": [7, 23, 25, 42, 52, 58, 92, 96], "must": [1, 3, 9, 11, 18, 19, 20, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 49, 53, 54, 55, 58, 60, 63, 66, 67, 73, 75, 76, 78, 84, 87, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101], "mutual": 1, "mv": [46, 63, 64], "mvsk": 46, "my": [25, 53, 63, 84, 101], "my_data": [21, 25], "my_data_locale0000": [21, 25], "my_dir": [21, 25], "my_path": [21, 25], "my_table_nam": [21, 25], "my_zero": [25, 37], "myarrai": [4, 25, 56], "mydtyp": [25, 37, 51, 95], "mypi": [0, 79], "myst": 79, "n": [4, 8, 11, 16, 18, 21, 23, 25, 28, 34, 36, 37, 38, 39, 40, 42, 48, 49, 53, 55, 67, 77, 79, 82, 87, 88, 89, 90, 91, 92, 96, 97, 98], "n_col": 5, "n_row": 5, "na": [18, 21, 25, 49, 68], "na_cod": 68, "naiv": [25, 55], "name": [0, 1, 2, 3, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 35, 36, 37, 38, 42, 46, 48, 49, 51, 53, 54, 55, 56, 59, 60, 62, 66, 67, 68, 70, 75, 77, 78, 79, 83, 84, 85, 89, 90, 91, 92, 96, 98], "name_dict": [25, 42, 96], "name_prefix": [25, 28, 37, 84], "name_prefix_local": [25, 28, 37], "namedtupl": 13, "nameserv": 80, "namespac": [2, 4, 8, 25, 28], "namewidth": [20, 25], "nan": [7, 21, 22, 23, 25, 34, 35, 36, 49, 56, 91, 92, 95], "nanosecond": [25, 38, 55], "nativ": [22, 23, 25, 35, 36, 69, 70, 77, 84, 92, 97], "natur": [7, 25, 34, 87], "navalu": [18, 25, 89], "navig": [59, 62, 75, 76, 77, 79], "nbin": [25, 34, 93], "nbyte": [18, 21, 22, 25, 26, 35, 36, 37, 38, 48, 49, 53, 56, 84], "ncx2": 46, "nd": [19, 25, 34], "ndarrai": [4, 5, 8, 17, 18, 22, 25, 35, 36, 37, 38, 41, 48, 53, 54, 66, 84, 87, 88, 89, 95, 97, 101], "ndim": [4, 8, 11, 17, 18, 22, 25, 26, 28, 35, 36, 37, 49, 51, 53, 83, 88, 89, 95], "nearest": [25, 34, 36], "necessari": [0, 25, 36, 58, 62, 75, 80], "necessarili": [18, 25, 36, 49, 53], "need": [0, 4, 18, 21, 25, 28, 34, 36, 37, 48, 49, 51, 53, 58, 59, 62, 63, 64, 67, 75, 76, 77, 78, 80, 84, 91, 98], "neg": [5, 7, 21, 23, 25, 36, 38, 42, 48, 61, 90, 92, 94, 96, 97], "negat": 7, "negep": [25, 36], "neglig": [18, 25, 53], "neither": [18, 25, 26, 37, 38, 53, 55, 90, 101], "nest": [4, 8, 25, 28, 68, 84], "nestedsequ": 5, "never": [25, 34, 36, 95], "new": [0, 5, 11, 17, 18, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 41, 46, 48, 49, 51, 53, 56, 58, 62, 63, 64, 79, 91, 92, 95, 96, 97, 98, 101], "new_categori": [18, 25], "new_dtyp": [22, 25, 35, 36], "new_nam": [25, 36], "new_ord": [22, 25, 35, 36], "new_str": [25, 53, 101], "newbyteord": [22, 25, 35, 36], "newer": 76, "newfig": [25, 41], "newli": [21, 25], "newlin": [21, 25, 26, 28, 36, 37, 53, 67], "newton": [32, 101], "nexp": [25, 36], "next": [25, 36, 62, 64, 75, 78, 100], "nextaft": [25, 36], "nextnam": 58, "neyman": [25, 44], "ngram": [25, 48, 83], "ngroup": [23, 25, 83, 92], "nice": 0, "nightli": 1, "ninf": [25, 36], "nkei": [23, 25, 49, 83, 92], "nl": [60, 73, 100], "nlevel": [18, 25, 26, 83, 89], "nmant": [25, 36], "nnz": [23, 25, 51], "node": [4, 8, 18, 21, 25, 28, 37, 48, 53, 59, 68, 82, 84], "node01": [73, 100], "non": [1, 3, 12, 18, 21, 23, 25, 28, 33, 34, 36, 37, 38, 40, 42, 46, 49, 50, 52, 53, 61, 84, 86, 87, 90, 92, 93, 94, 96, 101], "non_empti": [25, 48], "noncentr": 46, "none": [3, 4, 5, 8, 9, 11, 12, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 48, 49, 51, 53, 54, 55, 56, 59, 76, 77, 84, 85, 89, 90, 91, 92, 93, 95, 96, 98, 100], "nonexist": [21, 25, 91], "nonuniqueerror": [3, 25], "nonzero": [12, 22, 23, 25, 33, 34, 35, 36, 53, 101], "nopl": 59, "nor": [18, 25, 26, 37, 38, 53, 90, 101], "norepeat": [25, 48, 97], "normal": [18, 19, 20, 21, 23, 25, 36, 37, 38, 42, 55, 58, 83, 87, 89, 91, 92], "not_alnum": [25, 53], "not_alpha": [25, 53], "not_decim": [25, 53], "not_digit": [25, 53], "not_empti": [25, 53], "not_equ": 7, "not_spac": [25, 53], "notabl": 101, "notat": [25, 36], "note": [0, 1, 2, 3, 4, 8, 14, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 34, 36, 37, 38, 40, 41, 42, 44, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 60, 64, 66, 68, 70, 75, 77, 78, 80, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101], "notebook": [19, 24, 73], "notebookhistoryretriev": 24, "notic": 66, "notifi": 68, "notimplementederror": [25, 34, 58, 93], "notion": [4, 8], "notna": [21, 25, 49], "notnul": [25, 49], "nov": 59, "now": [18, 20, 21, 23, 25, 26, 34, 37, 48, 49, 51, 52, 53, 55, 56, 58, 63, 64, 67, 70, 75, 76, 77, 92, 96], "np": [4, 7, 8, 17, 18, 21, 22, 23, 25, 30, 34, 35, 36, 37, 38, 39, 41, 45, 46, 48, 49, 53, 54, 55, 56, 66, 84, 87, 88, 89, 90, 91, 92, 93, 95, 97, 101], "np_arr": 66, "nparrai": [25, 54], "null": [18, 21, 22, 23, 25, 28, 35, 36, 53, 68, 84, 89, 101], "num": [5, 19, 22, 25, 34, 35, 36], "num_command": [19, 24], "num_match": [25, 33, 53, 101], "numarg": 46, "numba": [25, 37], "number": [0, 1, 3, 5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 33, 34, 35, 36, 37, 38, 42, 46, 48, 49, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 66, 68, 76, 78, 80, 82, 84, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101], "number_format_str": [22, 25, 35, 36], "number_of_dimens": 68, "number_of_substit": [25, 53, 101], "numbers2": [25, 26], "numer": [3, 21, 25, 28, 36, 37, 38, 41, 49, 50, 56, 57, 68, 83, 84, 86, 89, 95, 98, 101], "numeric_and_bool_scalar": [22, 25, 35, 36, 37], "numeric_onli": [21, 25], "numeric_scalar": [22, 25, 34, 35, 36, 37, 38, 42, 87, 90, 96], "numericdtyp": [22, 25, 35, 36], "numid": 92, "numlocal": [18, 19, 21, 25, 26, 28, 37, 48, 53, 100], "numpi": [0, 4, 5, 8, 17, 18, 20, 21, 22, 25, 26, 30, 33, 34, 37, 38, 42, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 66, 79, 82, 84, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 101], "numpu": 19, "numpy_funct": 4, "numpy_scalar": [22, 25, 35, 36, 37, 87], "numpydoc": 58, "nuniqu": [21, 23, 25, 48, 83, 92], "nx": [25, 34, 59], "ny": [25, 34], "nzero": [25, 36], "o": [18, 21, 23, 25, 26, 36, 37, 47, 48, 53, 81, 83, 92], "o0": 1, "o1": 1, "obj": [5, 25, 26, 28, 36, 39, 54, 56], "obj2sctyp": [25, 36], "object": [2, 3, 4, 5, 8, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 41, 46, 47, 48, 49, 53, 54, 55, 56, 58, 67, 68, 69, 70, 71, 80, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "object_": [25, 36], "objectdtyp": [25, 36], "objtyp": [17, 18, 21, 23, 25, 26, 33, 37, 48, 49, 53, 68], "observ": [0, 25, 37, 42, 44, 87, 96], "obtain": [25, 33, 36, 53, 101], "occupi": [25, 36], "occur": [19, 21, 23, 25, 28, 33, 34, 37, 39, 42, 49, 53, 58, 75, 92, 93, 96, 98, 101], "occurr": [3, 13, 22, 25, 33, 34, 35, 36, 37, 40, 53, 87, 93, 101], "odd": [25, 34, 37], "oerror": 29, "off": [25, 53, 63, 101], "offer": [85, 91, 98, 101], "offset": [18, 23, 25, 28, 36, 38, 53, 68, 84, 89, 99, 101], "offset_alias": [25, 55], "offset_attrib": [25, 53], "often": [18, 25, 89, 93], "ok": 62, "old": [18, 25, 62], "old_func": [25, 36], "old_nam": [25, 36], "older": [25, 26, 37, 68, 76], "olduint": [25, 36], "omit": [25, 36, 53, 55, 59, 68], "onc": [0, 21, 23, 25, 28, 37, 49, 53, 60, 61, 62, 64, 66, 67, 70, 75, 80, 92], "one": [0, 1, 2, 3, 4, 5, 8, 11, 18, 21, 22, 23, 25, 26, 28, 29, 34, 35, 36, 37, 38, 40, 42, 46, 48, 49, 51, 53, 58, 59, 62, 64, 66, 67, 68, 70, 73, 76, 77, 78, 79, 80, 84, 87, 89, 90, 91, 92, 96, 97, 99, 101], "one_two": [25, 53, 101], "onelin": 62, "ones": [1, 5, 11, 19, 21, 22, 25, 34, 35, 36, 38, 49, 59, 63, 82, 83, 87, 90], "ones_lik": [5, 25, 38, 83, 90], "onli": [3, 4, 8, 16, 18, 21, 23, 25, 26, 28, 30, 32, 34, 36, 37, 38, 40, 48, 49, 50, 51, 53, 54, 56, 58, 59, 61, 63, 64, 66, 68, 70, 75, 78, 79, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101], "onlin": [62, 80], "onto": [21, 25, 53, 101], "op": [18, 20, 21, 25, 28, 37, 48, 53, 59], "open": [0, 3, 5, 18, 21, 25, 26, 28, 29, 36, 37, 42, 48, 49, 53, 55, 80, 96], "opeq": [20, 25, 37], "opeqop": [25, 37], "oper": [18, 19, 20, 21, 23, 25, 26, 28, 36, 37, 47, 48, 50, 51, 53, 58, 59, 62, 69, 73, 79, 81, 82, 83, 86, 91, 92, 94, 100], "opposit": [22, 25, 35, 36], "opt": [75, 76, 77], "optim": 63, "option": [1, 3, 5, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 53, 54, 55, 58, 59, 62, 68, 75, 76, 79, 82, 84, 90, 91, 92, 93, 96, 98, 99, 100, 101], "order": [0, 4, 8, 11, 12, 14, 16, 17, 18, 20, 21, 22, 23, 25, 28, 34, 35, 36, 37, 38, 40, 44, 46, 48, 49, 50, 53, 54, 56, 60, 68, 70, 83, 86, 88, 89, 90, 91, 92, 93, 94, 97, 98, 101], "ordin": [25, 34], "org": [11, 21, 25, 36, 44, 49, 56, 58, 88], "orient": [70, 89, 91, 95, 101], "orig": [25, 53, 101], "orig_kei": [23, 25, 92], "origin": [11, 18, 20, 21, 22, 23, 25, 26, 28, 32, 34, 35, 36, 37, 40, 48, 49, 53, 55, 87, 89, 90, 91, 92, 97, 101], "origin_indic": [25, 48, 53, 97], "oserror": 29, "osxsav": 59, "other": [3, 5, 18, 20, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 38, 42, 48, 50, 53, 55, 59, 63, 64, 66, 84, 85, 86, 87, 89, 92, 96, 97, 99, 101], "other_df": [21, 25], "otherwis": [0, 3, 5, 12, 15, 17, 18, 21, 22, 23, 25, 26, 28, 32, 35, 36, 37, 38, 40, 42, 46, 48, 49, 53, 56, 58, 81, 84, 88, 89, 91, 92, 95, 96, 97, 99, 101], "our": [0, 25, 37, 58, 59, 61, 62, 66, 68, 73, 75, 80, 81, 84], "out": [0, 15, 19, 21, 22, 25, 34, 35, 36, 48, 63, 64, 67, 68, 70, 75, 78, 93, 94, 97], "outer": [4, 8, 21, 25, 94], "outlier": 59, "outlin": [62, 68], "outperform": [25, 37, 87], "output": [0, 1, 5, 12, 15, 17, 18, 20, 21, 23, 25, 26, 28, 34, 36, 37, 39, 42, 48, 49, 53, 54, 62, 66, 70, 73, 84, 87, 92, 93, 95, 96, 99, 100], "outsid": [0, 25, 34, 67, 78], "outstand": 0, "over": [3, 18, 21, 25, 28, 34, 36, 37, 42, 48, 53, 82, 87, 88, 89, 91, 93, 95, 96, 97, 101], "overflow": [17, 18, 25, 34, 36, 37, 53, 84, 88, 89, 95, 101], "overflowerror": [22, 25, 35, 36], "overlap": [3, 21, 25, 33, 53, 101], "overload": [23, 25, 36, 92], "overnight": 64, "overrid": [17, 18, 20, 25, 37, 38, 53, 63, 84, 88, 89, 95, 101], "overridden": [25, 38, 47], "overview": [25, 36, 59], "overwhelm": [25, 38, 84], "overwrit": [17, 18, 21, 23, 25, 26, 28, 34, 37, 48, 53, 92, 95], "overwritten": [17, 18, 21, 25, 26, 28, 37, 48, 53, 68, 70], "own": [0, 1, 25, 55, 97, 101], "p": [3, 25, 37, 38, 42, 44, 96], "packag": [76, 77, 79, 81], "pad": [16, 20, 25, 36, 62], "pad_left": [25, 36], "pad_right": [25, 36], "pad_width": 16, "padchar": [20, 25], "pae": 59, "page": [57, 62, 75], "pai": 59, "pair": [22, 25, 29, 30, 34, 35, 36, 48, 97], "pairwis": [21, 25, 34], "panda": [0, 18, 21, 25, 26, 28, 38, 49, 54, 55, 58, 69, 71, 79, 84, 85, 89, 91], "parallel": [61, 84, 95, 99], "parallel_start_test": 0, "param": [2, 18, 22, 25, 26, 28, 35, 36, 37, 48, 53, 54, 59], "paramet": [0, 3, 5, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 77, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "parameter": [25, 42, 96], "parameter_class": 19, "parent": [1, 21, 25, 33], "parent_entry_nam": [32, 33], "pariti": [25, 37], "parquet": [18, 21, 23, 25, 26, 28, 37, 48, 53, 59, 67, 69, 71, 84, 92], "parquet_output": [21, 25], "pars": [19, 20, 21, 25, 26, 37, 49, 51, 58, 100], "parse_hdf_categor": [18, 25], "parseabl": [25, 38, 90], "parser": 79, "part": [0, 4, 7, 8, 22, 25, 35, 36, 48, 53, 80, 101], "parti": [25, 36], "particular": [4, 11, 21, 25, 46, 49, 78], "particularli": [76, 78], "partit": [25, 53, 101], "paruqet": 70, "pass": [0, 1, 3, 18, 20, 21, 23, 25, 28, 34, 36, 37, 48, 49, 53, 54, 62, 84, 91, 92, 96, 98], "password": [1, 21, 25, 49, 80], "past": [25, 36, 64], "pat": 59, "path": [17, 21, 25, 26, 28, 29, 36, 37, 47, 59, 64, 73, 75, 76, 77, 78, 80, 84], "path_prefix": [25, 28], "path_to_ark": 77, "path_to_arkouda": 79, "path_to_chpl": 77, "pathlib": [21, 25, 29, 36, 47], "pattern": [25, 32, 33, 53, 62, 66, 92, 101], "pb": 19, "pcg64": 96, "pcid": 59, "pclmulqdq": 59, "pct_avail_mem": 19, "pd": [18, 21, 25, 28, 38, 49, 54, 55, 56, 66, 84, 89, 91], "pd_df": [21, 25, 66, 91], "pda": [23, 25, 34, 36, 37, 38, 50, 55, 56, 58, 86, 87, 90, 93, 95, 99], "pda1": [25, 37, 40, 99], "pda2": [25, 37, 40, 99], "pdaleft": [25, 34], "pdaright": [25, 34], "pdarrai": [3, 5, 17, 18, 19, 20, 21, 23, 25, 26, 28, 30, 32, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 48, 49, 50, 51, 53, 54, 55, 56, 58, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 101], "pdarrayclass": [17, 18, 20, 21, 25, 26, 28, 30, 32, 33, 34, 36, 38, 39, 40, 42, 45, 48, 49, 50, 53, 56, 57, 91], "pdarraycr": [25, 37, 57], "pdarraymanipul": [25, 57], "pdarraysetop": [25, 48, 57, 58, 97], "pdconcat": [25, 49, 98], "pdf": 46, "pdpe1gb": 59, "pdrrai": [25, 34, 38, 84], "pearson": [21, 25, 37, 44], "peel": [25, 53, 83, 101], "pep": [25, 36], "pep8": 0, "per": [1, 17, 18, 19, 21, 23, 25, 26, 28, 37, 48, 53, 58, 59, 64, 68, 78, 84, 87, 92], "percent": [19, 46], "percent_transfer_limit": 56, "percentag": [19, 56], "percentil": 46, "perf_count": 59, "perform": [17, 18, 21, 23, 25, 26, 28, 30, 34, 37, 40, 42, 48, 49, 53, 54, 59, 61, 62, 63, 66, 67, 69, 75, 83, 84, 87, 90, 91, 92, 95, 96], "period": [25, 55], "perl": 76, "perm": [21, 25, 50, 56, 86, 91], "perm_arri": [21, 25, 91], "perm_df": [21, 25, 91], "permiss": [18, 25, 26, 37, 48, 53], "permut": [11, 18, 21, 23, 25, 42, 50, 53, 56, 68, 83, 86, 89, 92, 99], "permute_dim": 11, "permute_sampl": [23, 25, 92], "person": 0, "pexpect": 79, "pge": 59, "physic": [19, 32, 101], "physicalmemori": 19, "pi": [25, 34, 36, 42, 96], "piec": 63, "pierce314159": 0, "pig": [21, 25, 49], "pinf": [25, 36], "pip": [76, 77], "pipe": 101, "pipelin": [84, 101], "place": [18, 20, 21, 23, 25, 26, 28, 31, 34, 36, 37, 42, 47, 48, 49, 53, 55, 56, 60, 64, 87, 91, 92, 96], "placement": [25, 34], "plan": [80, 81, 93, 95], "platform": [22, 25, 35, 36, 47], "player": [25, 42, 96], "pleas": [0, 18, 20, 21, 22, 23, 25, 26, 28, 35, 36, 37, 48, 49, 53, 55, 60, 62, 63, 66, 68, 70, 71, 75, 76, 77, 78, 89, 91, 92], "plot": [25, 34, 46, 57, 84, 93], "plot_dist": [25, 41], "plt": [25, 34, 41, 46, 93], "plu": [25, 34], "pni": 59, "point": [7, 21, 22, 25, 26, 30, 34, 35, 36, 37, 38, 42, 46, 49, 51, 80, 90, 91, 95], "pointer": [22, 25, 35, 36], "poisson": [25, 42, 83], "polyfit": [25, 36], "pop": [22, 25, 35, 36], "popcnt": 59, "popcount": [22, 25, 35, 36, 37], "popitem": [22, 25, 35, 36], "popul": [23, 25, 29, 33, 37, 87, 92], "port": [1, 18, 19, 21, 25, 28, 37, 48, 49, 53, 63, 73, 82, 100], "portion": [25, 36, 68], "portland": [21, 25], "pos_dt": [25, 30], "posit": [5, 7, 11, 21, 22, 23, 25, 32, 33, 35, 36, 37, 49, 53, 92, 94, 98, 101], "position": [21, 25], "positon": [25, 53, 101], "possibl": [0, 21, 22, 25, 28, 34, 35, 36, 46, 48, 53, 55, 58, 59, 62, 66, 75, 80, 84, 97, 101], "possibli": 58, "post": [0, 25, 36, 62], "postit": [25, 53, 101], "potenti": [21, 25, 36, 37], "pow": 7, "power": [7, 25, 36, 37, 44, 72, 94], "power_diverg": [25, 44], "power_divergenceresult": [25, 44], "powershel": 80, "pp": [25, 36], "ppf": 46, "pr": [0, 62], "practic": [0, 23, 25, 36, 37, 78, 87, 92], "pre": [18, 25, 56, 89], "preced": [22, 25, 35, 36, 46], "precis": [22, 25, 28, 34, 35, 36, 54, 84, 95], "pred": [25, 30], "predefin": [25, 36], "predic": [25, 30], "prefer": [0, 77, 79, 81, 96], "prefix": [17, 18, 21, 23, 25, 26, 28, 37, 48, 53, 55, 83, 92, 101], "prefix_path": [17, 18, 20, 21, 23, 25, 26, 28, 37, 48, 53, 92], "prepar": [21, 23, 25, 75, 92], "prepend": [11, 16, 25, 48, 53, 83, 101], "prepend_singl": [25, 48, 83, 97], "prerequisit": [75, 76, 77], "present": [0, 3, 18, 20, 21, 22, 25, 26, 28, 34, 35, 36, 37, 40, 48, 49, 53, 66, 68, 84, 93, 99], "preserv": [21, 25, 49, 98, 101], "pretti": 64, "pretty_print_info": [18, 25, 37, 53], "pretty_print_inform": [25, 27], "prev": 62, "prevent": [20, 25, 28, 37, 48, 67, 68, 76, 97], "previou": [62, 64, 77], "previous": [18, 21, 23, 25, 26, 28, 37, 48, 49, 53, 55, 92], "primarili": [25, 36, 84], "print": [0, 1, 18, 19, 21, 25, 27, 36, 37, 43, 49, 53, 80, 100], "print_server_command": 19, "printabl": [25, 38], "printit": 0, "prior": 78, "probabl": [18, 21, 23, 25, 42, 46, 53, 92, 96], "problem": [0, 25, 36, 42, 59, 82, 96], "problem_s": 59, "proc": [0, 58], "proce": [17, 18, 25, 34, 37, 38, 53, 84, 88, 89, 95, 101], "procedur": 0, "proceed": 75, "process": [19, 25, 27, 28, 36, 49, 51, 58, 65, 68, 73, 80, 84, 97, 101], "processor": [19, 59], "prod": [15, 21, 22, 23, 25, 35, 36, 37, 48, 49, 83, 87, 92, 93], "produc": [18, 25, 53, 54, 89, 96, 101], "product": [7, 10, 15, 23, 25, 34, 37, 38, 42, 52, 84, 87, 88, 92, 93, 96], "profil": 24, "program": [0, 18, 20, 21, 23, 25, 26, 37, 48, 49, 53, 55, 73, 92, 100], "progress": 77, "project": [0, 21, 25, 49, 59, 62, 75], "promot": [4, 25, 38, 58], "promote_dtyp": [25, 38], "promote_to_common_dtyp": [25, 38], "proof": [20, 25], "proper": [25, 34, 48, 53, 56, 97], "properli": [0, 63, 68, 76, 77], "properti": [2, 4, 8, 18, 21, 25, 26, 36, 37, 48, 49, 53, 55, 58, 68], "protect": [17, 18, 25, 37, 38, 53, 84, 88, 89, 95, 101], "provid": [0, 6, 17, 18, 21, 22, 23, 25, 26, 28, 35, 36, 37, 39, 42, 48, 49, 53, 54, 56, 59, 61, 66, 67, 68, 70, 71, 75, 76, 77, 79, 84, 87, 91, 92, 96, 97], "prune": [25, 34, 79], "pse": 59, "pse36": 59, "pseudo": 96, "pti": 59, "ptp": [22, 25, 35, 36], "publish": 62, "pull": [25, 28, 38, 62, 68], "pure": [25, 36], "purg": [25, 53], "purge_cached_regex_pattern": [25, 53], "purpos": [25, 36, 59, 62, 85, 91, 98], "push": [62, 75], "put": [21, 22, 23, 25, 35, 36, 64, 92], "putmask": [25, 34], "pvalu": [25, 44], "pwd": [76, 77], "pwr": [25, 37], "py": [0, 1, 58, 59, 63, 75, 78, 79, 82], "py_incref": [25, 36], "pyarrow": [79, 84], "pycharm": 0, "pydata": [21, 25, 49], "pyfiglet": 79, "pypi": [21, 25, 49], "pyplot": [25, 34, 41, 46, 93], "pytabl": 79, "pytest": [0, 65, 79], "python": [3, 4, 8, 17, 18, 19, 20, 22, 24, 25, 35, 36, 37, 38, 40, 47, 49, 53, 59, 72, 75, 80, 81, 83, 84, 87, 88, 89, 90, 91, 94, 95, 101], "python3": [59, 63, 75, 76], "python_build": 59, "python_compil": 59, "python_implement": 59, "python_implementation_vers": 59, "python_vers": 59, "pythonpath": [76, 77], "pytype_readi": [25, 36], "pytypeobject": [25, 36], "pyzmq": 79, "pzero": [25, 36], "q": [25, 36, 46], "q1": 59, "q3": 59, "quadrupl": [25, 36], "qualifi": [21, 25], "queri": [3, 25, 40, 84], "quetzal": [21, 25, 49], "quick": [19, 63], "quickli": [21, 25, 60, 91], "quickstart": [76, 77, 81], "quit": [0, 73], "quotient": [25, 37], "r": [0, 21, 25, 36, 46, 59, 62, 66, 76, 77, 82], "rad2deg": [25, 34], "radian": [25, 34], "radix": [25, 50, 86], "radixsortlsd": [25, 50, 86], "rai": [25, 34], "rais": [3, 4, 8, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 42, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101], "ran": [59, 63], "randint": [3, 19, 23, 25, 34, 38, 40, 42, 50, 66, 83, 86, 87, 90, 92, 93], "randn": [25, 41], "random": [21, 23, 25, 38, 41, 46, 52, 57, 59, 82, 83, 92], "random_sparse_matrix": [25, 52], "random_st": [21, 23, 25, 46, 92], "random_strings_lognorm": [25, 38], "random_strings_uniform": [25, 38], "randomli": [21, 25, 42, 96], "rang": [3, 11, 16, 18, 21, 25, 26, 28, 30, 34, 36, 37, 38, 42, 48, 49, 52, 53, 55, 82, 84, 87, 90, 91, 93, 96, 98, 101], "rank": [18, 19, 25, 34, 36, 37, 38, 42, 51, 53, 68, 83, 84, 89, 90, 94, 96], "rankwarn": [25, 36], "rasi": [18, 25, 53, 89, 101], "rate": [25, 42, 59, 96], "rather": [4, 8, 18, 21, 25, 36, 53], "ratio": [22, 25, 35, 36], "ravel": [22, 25, 35, 36], "raw": [25, 53, 101], "rc": 77, "rdrand": 59, "rdrnd": 59, "rdseed": 59, "rdtscp": 59, "re": [0, 11, 18, 19, 21, 23, 25, 32, 36, 75, 92, 100, 101], "re2": [18, 25, 53, 75, 89, 101], "reach": 0, "reachabl": 100, "reactiv": 77, "read": [4, 8, 17, 18, 21, 25, 26, 28, 29, 36, 37, 44, 49, 53, 67, 68, 69, 70, 88, 101], "read_": [25, 28], "read_all_test": 1, "read_csv": [21, 25, 28, 67, 71], "read_hdf": [25, 28, 48, 71, 84], "read_nest": [25, 28, 84], "read_parquet": [25, 28, 71, 84], "read_path": [25, 28, 84], "read_tagged_data": [25, 28], "read_zarr": [25, 28], "readabl": [18, 25, 27, 28, 37, 53, 68, 84], "readalltest": 1, "readi": [0, 60, 62, 76, 77], "readm": 1, "readthedoc": 58, "real": [0, 7, 22, 25, 35, 36, 38, 42, 62, 68], "realist": [18, 25, 53], "realli": [0, 25, 53], "reason": [25, 36, 62, 64, 77], "rebas": 0, "rebind": [25, 36], "rebuild": [23, 25, 58, 61, 63, 64, 92], "rebuilt": 63, "receiv": [17, 18, 19, 21, 25, 26, 28, 37, 48, 53, 84, 88, 95, 100], "receive_arrai": [18, 21, 25, 37, 48, 53], "receive_datafram": [25, 28], "recent": [25, 54, 62], "recogn": [22, 35], "recommend": [0, 25, 34, 42, 60, 64, 70, 76, 79, 80, 81, 91, 96, 97], "recompil": 64, "recomput": [18, 25, 28], "reconnect": [25, 37], "reconstitut": [18, 25], "reconstruct": [13, 68], "record": [25, 28], "recurs": [25, 38, 84], "red": [25, 26], "reduc": [21, 23, 25, 36, 63, 65, 92], "reduct": [23, 25, 37, 82, 83, 92, 93], "redund": [22, 35], "refer": [0, 5, 21, 23, 25, 36, 44, 49, 54, 63, 66, 77, 79, 92], "referenc": [21, 25], "reflect": [21, 25, 77, 91, 97], "reformat": [0, 84], "regard": 76, "regardless": [25, 54], "regex": [18, 25, 53, 89, 101], "regex_max_captur": 1, "regist": [1, 4, 18, 20, 21, 23, 25, 26, 27, 37, 48, 49, 53, 55, 56, 58, 83, 92], "register_al": [25, 56], "registerablepiec": [18, 25], "registerd": [25, 49], "registered_nam": [18, 20, 25, 26, 37, 48, 53], "registeredsymbol": [25, 27], "registerfunct": 78, "registr": [19, 25, 37, 53], "registrationerror": [18, 20, 21, 23, 25, 26, 37, 48, 49, 53, 55, 92], "registri": [18, 21, 23, 25, 26, 27, 37, 49, 53, 55, 56, 92], "regular": [18, 25, 53, 83, 89], "rel": [25, 54], "relat": [59, 62, 66], "releas": [17, 18, 21, 22, 25, 26, 28, 35, 36, 37, 48, 53, 59, 64, 65, 73, 76, 77, 96], "release_d": 73, "reli": [18, 25, 26, 37, 48, 53, 92], "remain": [17, 18, 21, 25, 26, 28, 34, 36, 37, 48, 53, 76, 84, 85, 91, 98], "remaind": [7, 25, 37, 53, 101], "remap": [18, 25], "rememb": [64, 66], "remot": [25, 36, 62, 76, 77, 100], "remov": [3, 11, 17, 18, 21, 22, 25, 26, 28, 35, 36, 37, 39, 40, 48, 53, 59, 63, 79, 91, 97, 101], "remove_miss": [3, 25, 40], "remove_repeat": [25, 48, 83, 97], "renam": [21, 25], "reorder": 11, "rep": [25, 36], "rep_good": 59, "rep_msg": [18, 20, 21, 23, 25, 26, 48, 53, 78], "repack": [17, 18, 20, 21, 23, 25, 26, 28, 37, 48, 53], "repeat": [1, 11, 18, 22, 25, 34, 35, 36, 48, 89, 97], "repeatedli": [25, 36], "repetit": 11, "repl": [24, 25, 33, 53, 101], "replac": [3, 21, 22, 23, 25, 28, 33, 34, 35, 37, 42, 48, 53, 60, 62, 68, 77, 78, 79, 92, 96, 97, 101], "repli": 58, "replic": [23, 25, 92], "repmsg": [25, 49, 51, 58], "repo": [25, 36, 76, 77, 81], "repons": [25, 26, 37, 53], "report": [22, 23, 25, 35, 36, 64, 79], "report_mem": 56, "repr": [21, 22, 23, 25, 35, 36, 46, 49], "repres": [18, 20, 22, 23, 25, 35, 36, 46, 48, 49, 53, 55, 59, 68, 89, 92, 101], "represent": [20, 21, 22, 25, 35, 36, 37], "reproduc": [0, 21, 23, 25, 42, 65, 90, 92, 96], "reqmsg": 58, "request": [21, 23, 25, 29, 36, 37, 38, 53, 58, 62, 90, 91, 92], "requir": [0, 3, 4, 8, 15, 19, 21, 23, 25, 26, 28, 30, 34, 36, 37, 38, 49, 60, 61, 63, 64, 68, 69, 70, 73, 78, 84, 90, 91, 92], "requiredpiec": [18, 25], "reset_categori": [18, 25], "reset_index": [21, 25, 91], "reshap": [11, 17, 22, 25, 35, 36, 37, 39, 83, 88], "resid": [25, 37, 51, 53, 95], "resili": [25, 50, 86], "resisterfunct": 58, "resiz": [22, 25, 35, 36], "resolut": [25, 36], "resolv": [0, 61, 80], "resolve_scalar_dtyp": [22, 25, 35, 36], "respect": [21, 25, 34, 36, 37, 38, 40, 46, 54, 55, 62, 84, 90], "respond": 58, "respons": [19, 21, 25, 53, 58], "rest": [25, 49], "restor": [25, 28], "restrict": [4, 8], "result": [3, 5, 6, 11, 12, 15, 16, 18, 21, 22, 23, 25, 26, 28, 30, 34, 35, 36, 37, 38, 40, 41, 42, 44, 46, 48, 49, 51, 53, 54, 55, 58, 59, 66, 67, 68, 69, 77, 84, 87, 90, 91, 92, 95, 96, 97, 98, 101], "result_array_on": [25, 30], "result_limit": [25, 30], "result_typ": 6, "ret": 58, "retain": [25, 34, 37, 56, 87], "retain_index": [21, 25, 91], "retriev": [19, 24, 25, 27, 37, 47, 49, 62], "return": [3, 4, 5, 6, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 67, 69, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101], "return_count": [25, 34, 93], "return_group": [23, 25, 99], "return_group_origin": [32, 101], "return_indic": [23, 25, 92, 99], "return_length": [25, 30], "return_match_origin": [25, 32, 33, 53, 101], "return_multipl": [25, 48, 97], "return_num_sub": 33, "return_obj": [25, 28, 84], "return_origin": [25, 48, 53, 97], "return_seg": [25, 33, 53, 101], "return_valid": [25, 34, 95], "revarg": [3, 25], "revers": [4, 8, 11, 20, 23, 25], "review": 62, "revindic": [3, 25], "revkei": [3, 25], "rf": 75, "rh": 76, "right": [3, 7, 12, 20, 21, 25, 36, 37, 46, 50, 52, 53, 54, 55, 62, 86, 91, 94, 96, 100, 101], "right_align": [3, 25], "right_df": [21, 25], "right_suffix": [21, 25], "risk": [25, 34, 68], "rm": 75, "rng": [25, 42, 55, 96], "role": 1, "roll": 11, "root": [7, 18, 20, 21, 23, 25, 26, 37, 49, 55, 59, 68, 76, 84, 87, 92], "rot": [25, 37], "rotat": [25, 34, 37], "rotl": [25, 37], "rotr": [25, 37], "roughli": [25, 36], "round": [7, 22, 25, 34, 35, 36, 59], "rout": 80, "routin": [25, 36], "row": [3, 5, 21, 23, 25, 26, 28, 34, 37, 39, 40, 48, 49, 50, 52, 53, 54, 57, 66, 67, 84, 86, 91, 92, 97, 99], "row_major": [17, 25, 37, 88], "row_numb": [23, 25], "row_start": [23, 25], "rpartit": [25, 53, 101], "rpath": 75, "rpeel": [25, 53, 83, 101], "rtol": [25, 54], "rule": [4, 25, 34, 95], "run": [17, 18, 19, 21, 25, 28, 34, 37, 48, 53, 63, 64, 66, 73, 75, 76, 77, 79, 80, 82, 84, 88, 89, 95, 97, 100, 101], "runtim": [19, 22, 25, 28, 35, 61, 84], "runtimeerror": [17, 18, 19, 21, 23, 25, 26, 27, 28, 32, 34, 37, 38, 40, 48, 49, 51, 53, 55, 84, 87, 88, 89, 90, 92, 93, 95, 99, 100, 101], "runtimewarn": [25, 28, 84], "ruok": 19, "rv": 46, "rv_continu": 46, "s1": [25, 34, 36, 87], "s2": [25, 26, 34, 49, 53, 87], "s3": [21, 25, 49], "s5": [25, 36], "s_complement": [25, 36], "s_cpy": [25, 53], "sa": [25, 56], "sacrific": 101, "safe": [25, 34, 39, 62, 95], "sai": 100, "sake": 58, "salari": 66, "same": [3, 11, 16, 17, 18, 20, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 38, 40, 42, 47, 48, 49, 50, 51, 53, 54, 55, 62, 66, 67, 68, 70, 76, 77, 78, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101], "same_kind": [25, 39], "sampl": [21, 23, 25, 34, 38, 42, 83, 92, 96], "satisfi": [3, 21, 25, 28], "save": [17, 18, 21, 23, 25, 26, 28, 37, 48, 53, 59, 60, 62, 63, 68, 69, 70, 84, 89, 92, 99], "save_al": [25, 26, 28, 37, 71], "save_offset": [25, 53], "saveusedmodul": [63, 64, 78], "sb": [25, 56], "scalar": [3, 4, 5, 8, 15, 16, 18, 21, 22, 25, 34, 35, 36, 37, 38, 48, 49, 58, 59, 82, 83, 89, 93, 94, 97, 98], "scalar_arrai": [25, 38], "scalardtyp": [22, 25, 35, 36], "scalartyp": [25, 36], "scale": [18, 25, 41, 42, 44, 46, 61, 66, 72, 96], "scaler": [25, 49, 98], "scan": 83, "scatter": [59, 83], "schema": 84, "scheme": [25, 36, 62], "scienc": 92, "scientif": [25, 36], "scipi": [0, 25, 57, 79], "scl": 76, "scope": [0, 78], "script": [58, 63, 77, 78, 82], "scroll": 75, "sctype": [25, 36], "sctype2char": [25, 36], "sctypedict": [25, 36], "se": [23, 25, 37, 87, 92], "search": [3, 12, 18, 25, 32, 40, 53, 83, 89], "search_bool": 33, "search_ind": 33, "search_interv": [3, 25], "searching_funct": [8, 57], "searchsort": [12, 22, 25, 35, 36], "sec": [25, 55, 59], "second": [3, 4, 8, 19, 25, 29, 34, 36, 38, 40, 49, 53, 54, 55, 56, 58, 59, 63, 66, 87, 90, 95, 98, 99, 100, 101], "secret": 47, "section": [1, 25, 34, 59, 61, 62, 63, 64, 66, 68, 73, 75, 79, 87], "secur": [25, 34, 57], "see": [0, 1, 3, 4, 7, 8, 11, 21, 22, 23, 25, 34, 35, 36, 37, 41, 42, 46, 49, 53, 55, 56, 58, 59, 62, 63, 64, 73, 75, 78, 84, 87, 89, 92, 93, 95, 96, 97, 98, 99, 101], "seealso": [25, 26], "seed": [3, 21, 23, 25, 38, 40, 42, 46, 59, 82, 90, 92, 96], "seen": [19, 100], "seg": 56, "seg_a": [25, 48, 97], "seg_b": [25, 48, 97], "seg_suffix": [25, 48], "segarr": [25, 48, 97], "segarrai": [3, 23, 25, 28, 34, 49, 54, 57, 83, 84, 91, 92, 98], "segment": [3, 18, 21, 23, 25, 28, 30, 48, 53, 56, 68, 83, 84, 89, 92, 97, 99, 101], "segment_nam": [25, 48], "segstr": [25, 53], "select": [12, 19, 21, 23, 24, 25, 28, 48, 49, 58, 62, 75, 81, 91, 92, 97], "select_from": [3, 25, 40], "self": [18, 21, 25, 37, 48, 53, 84, 85, 88, 89, 91, 95, 96, 97, 98, 101], "send": [18, 19, 21, 25, 28, 37, 38, 48, 53, 58, 84, 91, 100], "send_arrai": [25, 28], "sens": [21, 25, 49], "sensit": [25, 55], "sent": [25, 28, 69], "sep": 59, "separ": [1, 4, 20, 21, 25, 26, 28, 29, 36, 37, 42, 46, 53, 59, 67, 68, 78, 84, 95, 96, 101], "seq": [25, 54], "sequenc": [3, 5, 18, 20, 21, 22, 25, 26, 34, 35, 36, 37, 38, 39, 40, 42, 48, 50, 51, 54, 56, 86, 90, 92, 95, 96, 97, 99, 101], "sequenti": [25, 28, 84], "seri": [2, 21, 25, 26, 38, 54, 55, 56, 57], "seriesdtyp": [22, 25, 35, 36], "serv": 81, "server": [0, 1, 4, 8, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 42, 47, 48, 49, 51, 53, 55, 61, 63, 64, 76, 77, 80, 82, 83, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 101], "server_util": [0, 1], "serverdaemon": 58, "servererrorstr": 58, "serverhostnam": 19, "servermodul": [1, 25, 28, 63, 64, 78], "serverport": 19, "session": [63, 73], "set": [1, 3, 17, 18, 20, 21, 22, 23, 25, 26, 28, 31, 34, 35, 36, 37, 38, 40, 47, 48, 49, 53, 55, 59, 60, 62, 67, 68, 75, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101], "set_categori": [18, 25], "set_dtyp": [25, 26, 85], "set_funct": [8, 57], "set_jth": [25, 48, 83, 97], "set_xlim": 46, "setchplenv": [76, 77], "setdefault": [22, 25, 35, 36], "setdiff": [25, 48, 83, 97], "setdiff1d": [25, 40, 48, 58, 66, 83, 97, 99], "setfield": [22, 25, 35, 36], "setflag": [22, 25, 35, 36], "setop": 83, "setup": [1, 75, 80], "setxor": [25, 48, 83, 97], "setxor1d": [25, 40, 48, 58, 66, 83, 97, 99], "sever": [66, 68, 84, 87, 90], "sf": 46, "sh": [76, 77], "shallow": [22, 23, 25, 35, 36, 91], "shape": [3, 4, 5, 8, 11, 17, 18, 21, 22, 25, 26, 28, 34, 35, 36, 37, 39, 40, 42, 46, 49, 51, 53, 56, 68, 83, 87, 88, 89, 95, 96], "share": [17, 18, 21, 23, 25, 26, 37, 48, 53, 54, 62, 80, 92], "shell": [19, 24, 25, 28, 77, 84], "shellhistoryretriev": 24, "shift": [7, 11, 46], "short": [22, 25, 35, 36], "shortdtyp": [25, 36], "shortest": [25, 36], "shorthand": [22, 25, 35, 37, 53], "should": [0, 1, 4, 8, 18, 21, 22, 23, 25, 28, 34, 35, 36, 37, 38, 49, 51, 53, 54, 56, 58, 62, 63, 64, 66, 67, 68, 69, 73, 75, 76, 77, 79, 84, 91, 92, 95, 100], "shouldn": [63, 64], "show": [21, 25, 28, 36, 41, 46, 54, 75, 84, 88, 92], "show_int": [20, 25], "shown": 100, "shuffl": [25, 42, 83], "shut": [19, 73, 78], "shutdown": [19, 63, 64, 78], "side": [1, 12, 17, 18, 19, 21, 23, 25, 26, 27, 28, 32, 36, 37, 38, 42, 48, 49, 51, 53, 55, 58, 62, 63, 73, 78, 80, 84, 87, 88, 89, 92, 93, 94, 95, 96, 97, 100, 101], "sigma": [25, 38, 42, 96], "sign": [7, 22, 25, 28, 34, 35, 36, 37, 42, 84, 91, 95, 96], "signal": [22, 35], "signatur": [24, 58], "signedinteg": [22, 25, 35, 36], "signific": [20, 25, 34, 36, 37, 50, 62, 78, 86, 87], "significantli": [18, 25, 36, 63, 89], "similar": [0, 25, 28, 36, 53, 59, 66, 84, 95, 97, 101], "similarli": [17, 25, 59, 66, 88], "simpl": [0, 66, 78, 93], "simplest": 59, "simpli": [18, 19, 21, 25, 34, 36, 90], "simplic": 58, "simplifi": [0, 59], "simul": [76, 77], "sin": [7, 25, 34, 83, 87], "sinc": [1, 4, 25, 34, 36, 64, 89, 91, 95, 96, 101], "sine": [7, 25, 34, 87], "singl": [0, 2, 3, 4, 8, 16, 17, 18, 20, 21, 22, 23, 25, 26, 28, 30, 34, 35, 36, 37, 38, 40, 42, 48, 53, 63, 64, 66, 68, 70, 75, 78, 82, 84, 90, 91, 92, 94, 96, 97, 99], "singlecomplex": [22, 25, 35, 36], "singleton": [11, 12, 15, 16, 25, 37], "sinh": [7, 25, 34], "siphash": [25, 34], "siphash128": [18, 25, 53], "site": 75, "situat": [25, 38], "six": [25, 51, 53, 101], "size": [3, 4, 8, 11, 17, 18, 21, 22, 23, 25, 26, 28, 30, 34, 35, 36, 37, 38, 40, 42, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 66, 68, 69, 70, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101], "skew": [25, 46], "skip": [1, 22, 23, 25, 28, 35, 53, 76, 84, 92, 99, 101], "skipna": [23, 25, 92], "slice": [18, 21, 25, 37, 39, 66, 83, 88, 89, 91, 97, 101], "slice_bit": [25, 37], "slightli": [21, 25, 28, 91], "slot": [25, 36], "slower": [18, 25, 101], "small": [21, 25, 34, 49, 68, 84], "smaller": [25, 49, 62, 67, 84], "smallest": [21, 23, 25, 36, 37, 49, 87, 92, 98], "smallest_norm": [6, 25, 36], "smallest_subnorm": [25, 36], "smap": 59, "smemtrack": 1, "smep": 59, "smith": 66, "snappi": [18, 21, 25, 26, 28, 37, 48, 53, 59, 70, 75], "snapshot": [25, 28], "so": [0, 1, 14, 18, 20, 21, 23, 25, 28, 34, 36, 37, 42, 48, 49, 53, 59, 61, 62, 63, 64, 73, 78, 79, 80, 84, 87, 88, 91, 92, 96, 98, 99], "socket": [19, 100], "softwar": 76, "solut": [25, 36], "some": [0, 3, 4, 18, 21, 25, 36, 40, 46, 60, 66, 70, 75, 89, 91, 97, 101], "someon": [0, 62], "someth": [62, 63, 100], "sometim": [46, 78, 88, 95], "somewhat": 61, "somewher": 58, "sort": [1, 3, 12, 14, 18, 21, 22, 23, 25, 34, 35, 36, 37, 40, 48, 49, 53, 54, 56, 57, 62, 82, 83, 87, 89, 90, 92, 93, 99, 101], "sort_index": [21, 25, 49, 98], "sort_valu": [18, 21, 25, 49, 91, 98], "sorted_df1": [21, 25, 91], "sorted_df2": [21, 25, 91], "sorter": 12, "sorting_funct": [8, 57], "sortingalgorithm": [25, 50, 86], "sought": [25, 53, 101], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 60, 68, 73, 75, 76, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101], "space": [0, 1, 3, 5, 25, 34, 36, 38, 40, 51, 53, 55, 59, 75, 78, 90, 93, 101], "span": [25, 53, 101], "sparrai": [25, 51, 52], "sparrayclass": [25, 52, 57], "spars": [3, 23, 25, 51, 52, 56, 92, 95], "sparse_matrix_matrix_mult": [25, 52], "sparse_sum_help": 56, "sparsematrix": [25, 57], "special": [20, 22, 25, 35, 36, 44, 46, 49, 53, 57, 95, 98], "special_objtyp": [20, 25, 55], "special_str": [25, 53], "specif": [0, 4, 8, 21, 22, 25, 28, 35, 36, 42, 46, 54, 64, 67, 68, 69, 76, 78, 83, 84, 91, 96], "specifi": [1, 3, 4, 5, 6, 8, 9, 11, 14, 16, 17, 20, 21, 22, 23, 25, 26, 28, 29, 34, 35, 36, 37, 38, 39, 41, 42, 46, 48, 49, 52, 53, 54, 55, 56, 59, 63, 69, 84, 87, 88, 90, 91, 92, 96, 97], "speed": [18, 25, 40, 61, 65, 78, 89, 90, 99], "sphinx": [57, 75, 79], "splash": 1, "split": [25, 33, 53, 62, 83], "spread": 84, "sqrt": [7, 23, 25, 37, 42, 87, 92, 96], "squar": [7, 23, 25, 34, 37, 42, 44, 46, 87, 92, 96], "squared_test": [25, 44], "squash": 0, "squeez": [11, 22, 25, 35, 36], "src": [58, 78], "ss": 59, "ssbd": 59, "sse": 59, "sse2": 59, "sse4_1": 59, "sse4_2": 59, "ssegmentedstr": [25, 53], "ssh": 1, "ssse3": 59, "st": 58, "stabl": [14, 25, 50, 86, 88], "stack": [11, 25, 39, 101], "standard": [0, 4, 15, 18, 23, 25, 36, 37, 38, 42, 46, 55, 58, 59, 60, 87, 92, 93, 96], "standard_exponenti": [25, 42, 83], "standard_norm": [25, 38, 42, 83], "standardize_categori": [18, 25], "start": [0, 3, 4, 5, 8, 18, 21, 22, 23, 25, 26, 30, 32, 33, 34, 35, 36, 37, 38, 48, 49, 50, 53, 55, 68, 83, 86, 89, 90, 92, 94, 97, 101], "startswith": [18, 25, 53, 83, 89, 101], "startup": [1, 73, 83], "stat": [25, 44, 57, 59], "state": [18, 25, 42, 53, 62, 96], "static": [18, 25, 26, 37, 48, 53, 92], "statist": [23, 25, 37, 44, 59, 83, 87, 92], "statistical_funct": [8, 57], "statu": 19, "std": [15, 21, 22, 23, 25, 35, 36, 37, 46, 49, 55, 83, 87, 92, 93], "stddev": 59, "stddev_outli": 59, "stdev": [25, 42, 96], "stdout": [25, 36], "step": [0, 5, 22, 23, 25, 35, 36, 59, 60, 61, 64, 75, 78, 81, 99, 100], "stepfil": 46, "stibp": 59, "stick": [25, 53, 64, 83, 101], "still": [68, 101], "stop": [5, 19, 22, 25, 35, 36, 38, 90, 94], "storag": [21, 25, 49, 59], "storage_opt": [21, 25, 49], "store": [4, 8, 12, 17, 20, 21, 22, 23, 25, 26, 28, 35, 36, 38, 42, 47, 53, 59, 67, 68, 71, 80, 84, 88, 89, 90, 92, 97, 101], "store_path": [25, 28], "str": [2, 4, 5, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 67, 84, 87, 88, 89, 90, 91, 92, 95, 96, 100, 101], "str_": [22, 25, 35, 36, 93], "str_acc": [25, 49], "str_scalar": [18, 22, 25, 33, 35, 36, 53, 89, 101], "straight": 62, "strategi": [25, 36, 79, 80, 84], "strdtype": [25, 36], "stream": [4, 8, 25, 42, 63, 96], "streamhandl": 25, "strict": [21, 22, 23, 25, 34, 35, 36, 46, 49, 54, 95], "strict_typ": [25, 28], "stricter": [25, 36], "stricttyp": [25, 28, 84], "stride": [21, 22, 25, 30, 35, 36, 38, 90, 91, 94], "string": [0, 1, 3, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 44, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 62, 78, 83, 84, 86, 87, 89, 90, 91, 92, 93, 95, 97, 98, 99], "string_": [25, 36], "string_oper": [2, 25], "stringa": [25, 53], "stringaccessor": [2, 25], "stringb": [25, 53], "stringc": [25, 53], "stringifi": [21, 25, 91], "stringio": [25, 36], "strings0": [25, 53], "strings1": [25, 53], "strings2": [25, 53], "strings_arrai": [25, 53, 68], "strings_encodedecod": 59, "strings_end": [25, 53, 101], "strings_pdarrai": [25, 53], "strings_start": [25, 53, 101], "strip": [22, 25, 35, 36, 53], "strive": 62, "strongli": [25, 34], "structur": [18, 21, 25, 36, 48, 66, 70, 91, 92, 95, 97, 101], "strucutur": 97, "stub": 79, "style": [0, 18, 20, 21, 23, 25, 26, 36, 37, 48, 49, 53, 55, 91, 92, 95], "sub": [22, 25, 33, 35, 36, 48, 53, 83, 101], "subclass": [4, 22, 25, 35, 36], "subdir": 76, "subdirectori": 58, "subdomain": [4, 8], "subdtyp": [25, 36], "subject": [1, 25, 55], "subn": [25, 53, 83, 101], "subnorm": [25, 36], "subplot": 46, "subsequ": [25, 34, 68], "subset": [4, 18, 19, 21, 24, 25, 48, 78, 87, 91, 97], "substanti": 62, "substitu": [25, 53, 101], "substitut": [25, 33, 53, 73, 75, 101], "substr": [18, 20, 25, 53, 83, 89], "subsystem": 80, "subtract": 7, "subtyp": [25, 36], "succeed": [25, 34, 95], "success": [17, 18, 19, 21, 25, 26, 28, 30, 34, 37, 48, 53, 95, 100], "successfulli": 77, "sudo": 80, "suffici": [25, 36], "suffix": [21, 25, 28, 48, 53, 68, 83, 101], "suggest": [64, 80], "suitabl": 12, "sum": [7, 15, 21, 22, 23, 25, 34, 35, 36, 37, 42, 48, 49, 55, 56, 83, 87, 92, 93, 96], "summar": [83, 84], "summari": [0, 21, 25], "super": 0, "supercomput": 72, "suppli": [23, 25, 28, 34, 38, 48, 68, 70, 71, 90, 91], "support": [0, 3, 16, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 34, 35, 36, 37, 38, 40, 47, 48, 49, 51, 53, 55, 58, 66, 69, 73, 76, 77, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101], "supported_opeq": [25, 55], "supported_scalar": [25, 49], "supported_with_datetim": [25, 55], "supported_with_pdarrai": [25, 55], "supported_with_r_datetim": [25, 55], "supported_with_r_pdarrai": [25, 55], "supported_with_r_timedelta": [25, 55], "supported_with_timedelta": [25, 55], "supportsbufferprotocol": 5, "suppress": [21, 25, 36], "sure": [0, 21, 25, 26, 28, 37, 53, 62, 80], "surround": [0, 22, 25, 35, 36, 46], "surviv": [3, 25, 46], "swap": [22, 25, 35, 36], "swapax": [22, 25, 35, 36], "switch": [78, 88], "sy": [21, 22, 23, 25, 35, 36, 46, 49], "symbol": [19, 25, 27, 37, 48, 53, 58, 95], "symentri": 58, "symlink": 80, "symmetr": [3, 22, 23, 25, 35, 36, 40, 48, 66, 83, 99], "symmetric_differ": [22, 23, 25, 35, 36], "symtab": 58, "symtabl": 19, "sync": 77, "synchron": [18, 25], "syntax": 94, "syscal": 59, "system": [1, 17, 18, 25, 36, 37, 42, 47, 53, 58, 59, 77, 78, 79, 80, 81, 84, 87, 88, 89, 95, 96, 100, 101], "t": [0, 3, 4, 8, 21, 22, 25, 28, 35, 36, 40, 53, 55, 58, 62, 63, 64, 75, 76, 77, 80, 82, 101], "t1": [25, 30, 36], "t2": [25, 30, 36], "t3": [25, 36], "tab": [0, 62, 75], "tabl": [3, 19, 21, 25, 27, 37, 48, 49, 53, 58, 59, 95, 97], "tablefmt": [21, 25, 49], "tablul": [21, 25, 49], "tabul": [21, 25, 49, 79], "tag": [0, 25, 28, 31, 62, 64], "tag_data": [25, 28], "tagdata": [25, 28], "taht": 84, "tail": [21, 23, 25, 38, 49, 83, 92], "take": [0, 9, 20, 22, 23, 25, 31, 35, 36, 37, 42, 46, 60, 61, 63, 64, 66, 69, 84, 92, 96], "taken": [62, 78], "talk": 88, "tan": [7, 25, 34], "tangent": [7, 25, 34], "tanh": [7, 25, 34], "tar": [73, 75, 76, 77], "target": [25, 29, 34, 38, 59, 61, 62, 75, 84, 90, 94, 95], "task": [1, 19], "tb": 19, "tblgen": 80, "tcp": [19, 73, 100], "team": 62, "technic": [25, 28], "techniqu": 64, "tell": [25, 28, 59, 84], "temp_c": [21, 25], "temp_f": [21, 25], "temp_k": [21, 25], "temporari": [25, 36], "tend": 61, "tensor": [5, 23, 25, 34, 92], "tensordot": 10, "term": [3, 25, 40], "termin": [25, 28, 68, 73, 80, 100], "test": [3, 18, 21, 25, 28, 36, 40, 44, 57, 60, 62, 63, 64, 66, 73, 78, 91, 99], "test_": 0, "test_command": 78, "test_data_url": 1, "testmsg": 78, "text": [25, 36, 62, 67, 84], "texttt": [25, 42, 96], "th": [4, 5, 8, 11, 16, 25, 34, 48, 87, 97], "than": [3, 4, 8, 11, 17, 18, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 38, 40, 42, 48, 49, 50, 53, 60, 62, 63, 70, 84, 86, 88, 89, 90, 91, 92, 95, 96, 99, 101], "thei": [1, 11, 18, 19, 20, 21, 23, 25, 26, 28, 36, 37, 48, 49, 53, 54, 55, 56, 60, 62, 67, 68, 69, 76, 77, 84, 88, 89, 92, 98], "them": [1, 21, 25, 28, 40, 46, 53, 62, 76, 84, 91, 99], "therefor": 68, "thi": [0, 1, 4, 5, 8, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101], "thin": [20, 25], "thing": [0, 4, 8, 66], "third": [25, 36, 38, 62, 90], "thirti": [3, 25], "those": [0, 4, 8, 16, 25, 36, 50, 66, 76, 78, 86, 94], "though": [21, 25, 66], "thousand": 84, "three": [3, 25, 36, 38, 40, 53, 55, 75, 90, 94, 95, 101], "three_____four____f": [25, 53, 101], "thresh": [21, 25], "threshold": 101, "thrift": 75, "through": [1, 25, 34, 54, 58, 60, 62, 73, 77], "throw": [11, 58], "thrown": [17, 18, 21, 25, 26, 27, 28, 32, 37, 38, 48, 49, 51, 53, 84, 87, 88, 89, 93, 95, 101], "thu": [4, 8, 25, 28, 38, 50, 58, 68, 69, 86, 97], "tiebreak": [3, 25], "tile": 11, "time": [1, 18, 19, 21, 23, 25, 26, 28, 30, 34, 36, 37, 42, 48, 49, 53, 55, 59, 61, 63, 64, 67, 68, 70, 78, 82, 84, 89, 92, 93, 96, 97, 99, 101], "timeclass": [25, 28, 57], "timedelta": [25, 28, 36, 38, 55], "timedelta64": [25, 36, 55], "timedelta64dtyp": [25, 36], "timedelta_rang": [25, 55], "timedeltaindex": [25, 55], "timeout": [1, 19, 100], "timer": 59, "times2": 58, "times2msg": 58, "timeseri": [25, 55], "timestamp": [25, 30], "timezon": [25, 55], "tini": [25, 36], "tip": [65, 75], "titl": [0, 25, 36, 53, 62], "titlecas": [25, 53], "tm": [25, 54, 59], "tmp": [25, 36], "to_csv": [21, 25, 26, 28, 37, 53, 67, 71], "to_cuda": [25, 37], "to_datafram": [25, 49], "to_datetim": [25, 38], "to_devic": [4, 8], "to_dict": [25, 26], "to_hdf": [17, 18, 20, 21, 23, 25, 26, 28, 37, 48, 53, 68, 71, 83, 84, 92], "to_list": [3, 17, 18, 20, 25, 26, 37, 48, 49, 53, 66, 84, 88, 95, 97, 101], "to_markdown": [21, 25, 49], "to_ndarrai": [4, 8, 17, 18, 20, 25, 26, 34, 37, 38, 41, 48, 49, 53, 55, 66, 83, 84, 88, 89, 93, 95, 97, 101], "to_panda": [18, 21, 25, 26, 49, 55, 66, 91, 98], "to_parqet": [25, 37], "to_parquet": [18, 21, 25, 26, 28, 37, 48, 53, 70, 71, 84], "to_str": [18, 25], "to_zarr": [25, 28], "tobyt": [22, 25, 35, 36], "toencod": [25, 53], "tofil": [22, 25, 35, 36], "togeth": [18, 21, 23, 25, 53, 56, 91, 92, 99], "token": [1, 19, 47, 73, 100], "token_hex": 47, "token_str": 73, "token_valu": [19, 100], "toleft": [25, 53, 101], "toler": [25, 54], "tolist": [4, 8, 22, 25, 35, 36], "too": [4, 8, 25, 36, 61, 84], "tooharderror": [25, 36], "tool": [0, 77], "toolset": 66, "top": [25, 49, 58, 63, 68, 75, 76, 77, 81, 98], "topn": [25, 49, 98], "tostr": [22, 25, 35, 36], "tosymentri": 58, "total": [19, 21, 23, 25, 28, 36, 53, 59, 84, 92], "total_mem": 19, "total_second": [25, 55], "totestmsg": 78, "touch": 94, "toward": [22, 25, 35, 36, 38, 46], "tp_doc": [25, 36], "trace": [22, 25, 35, 36], "traceback": [25, 54], "track": [0, 63, 70], "trail": [22, 25, 35, 36, 37, 53], "trait": 24, "transfer": [17, 18, 21, 25, 28, 37, 48, 53, 59, 84, 88, 89, 91, 95, 97, 101], "transfer_r": 59, "transform": [25, 26, 42, 96], "transit": 66, "transpos": [4, 8, 22, 25, 34, 35, 36, 48, 84], "treat": [3, 17, 20, 21, 22, 25, 35, 36, 50, 59, 66, 86, 88, 91], "trial": [59, 82], "triangl": [25, 34], "tril": [5, 25, 34], "trim": [25, 36], "triu": [5, 25, 34], "trivial": [3, 25], "true": [1, 3, 5, 6, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 46, 48, 49, 53, 54, 55, 56, 59, 66, 77, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101], "true_": [25, 36], "true_dt": [25, 30], "trunc": [7, 25, 34], "truncat": [7, 17, 18, 20, 22, 23, 25, 26, 28, 34, 35, 36, 37, 46, 48, 53, 68, 70, 92], "try": [0, 22, 25, 26, 28, 35, 36, 37, 80], "tsc": 59, "tukei": [25, 44], "tune": 1, "tunnel": 1, "tup": [25, 39], "tupl": [3, 4, 5, 6, 8, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 25, 26, 28, 30, 34, 35, 36, 37, 38, 39, 40, 42, 48, 49, 51, 53, 56, 66, 84, 89, 90, 91, 92, 93, 95, 98, 99, 101], "turn": [22, 25, 35, 36, 49, 63, 73, 98], "tutori": 80, "tvkj": [25, 38], "tvkjte": [25, 38], "twenti": [3, 25], "twice": [25, 38, 84], "two": [3, 7, 10, 16, 18, 20, 21, 22, 23, 25, 26, 30, 34, 35, 36, 37, 38, 40, 48, 49, 52, 53, 54, 55, 56, 66, 67, 78, 84, 87, 90, 92, 99, 101], "txt": [1, 25, 36], "typ": [22, 35], "type": [2, 3, 4, 5, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 69, 75, 79, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101], "typechar": [25, 36], "typecheck": 58, "typecod": [25, 36], "typeerror": [3, 18, 20, 21, 23, 25, 26, 28, 30, 31, 34, 36, 37, 38, 40, 42, 48, 49, 50, 53, 55, 56, 58, 84, 86, 87, 89, 90, 92, 93, 98, 99, 101], "typeguard": 79, "typehint": 79, "typenam": [25, 36], "typic": [0, 20, 25, 36, 58, 63, 64, 89], "tz": [25, 55], "tzinfo": [25, 55], "u": [0, 20, 22, 25, 35, 36, 38, 55, 62, 76, 77, 84], "u0": [21, 25, 26], "u0009": [25, 53], "u0009nu000bu000cu000d": [25, 53], "u000b": [25, 53], "u000c": [25, 53], "u000d": [25, 53], "u5": [25, 53, 84, 101], "ub": 46, "ubuntu": 80, "ubyt": [22, 25, 35, 36], "ubytedtyp": [25, 36], "ucs4": [22, 25, 35, 36], "ui": 1, "uint": [3, 21, 22, 25, 28, 35, 36, 37, 38, 53, 67], "uint16": [22, 25, 35, 36, 93], "uint16dtyp": [25, 36], "uint32": [22, 25, 28, 35, 36, 84, 93], "uint32dtyp": [25, 36], "uint64": [3, 20, 22, 23, 25, 34, 35, 36, 37, 38, 42, 50, 59, 68, 82, 86, 87, 90, 91, 93, 95], "uint64dtyp": [25, 36], "uint8": [22, 25, 34, 35, 36, 53, 68, 93, 95, 101], "uint8dtyp": [25, 36], "uintc": [22, 25, 35, 36], "uintdtyp": [25, 36], "uintp": [22, 25, 35, 36], "uintptr_t": [22, 25, 35, 36], "ulongdtyp": [25, 36], "ulonglong": [25, 36], "ulonglongdtyp": [25, 36], "unabl": [18, 20, 21, 23, 25, 26, 37, 49, 53, 55, 92], "unaffect": 59, "unalt": 96, "unbias": [23, 25, 36, 37, 87, 92], "unchang": [18, 22, 25, 35], "uncompress": [25, 36], "undefin": [25, 38, 42, 90], "under": [0, 2, 17, 18, 20, 21, 23, 25, 26, 28, 37, 38, 48, 49, 53, 55, 59, 62, 84, 88, 89, 92, 95, 101], "under_flat": [25, 53, 101], "under_map": [25, 53, 101], "underflow": [25, 34, 95], "underli": [18, 20, 21, 23, 25, 26, 34, 42, 48, 49, 54, 55, 92, 96], "underneath": 62, "underscor": [4, 8], "undoubl": 58, "unequ": [25, 34, 87], "unflatten": 68, "unicod": [22, 25, 35, 36], "unicode_": [22, 25, 35, 36], "uniform": [25, 34, 38, 42, 50, 83, 84, 86, 87, 90], "uniformli": [25, 38, 42, 52, 90, 96], "uniniti": [25, 37], "uninterpret": [25, 34, 95], "union": [5, 18, 19, 21, 22, 23, 25, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 42, 48, 50, 52, 53, 66, 83, 84, 86, 87, 89, 90, 92, 93, 95, 98, 99, 101], "union1d": [18, 25, 40, 48, 58, 66, 83, 97, 99], "uniqu": [3, 11, 13, 18, 21, 22, 23, 25, 34, 35, 36, 37, 40, 48, 49, 53, 66, 68, 83, 84, 89, 92, 93, 94, 97, 98, 99, 101], "unique_al": 13, "unique_count": 13, "unique_invers": 13, "unique_kei": [23, 25, 83, 92], "unique_key_idx": 68, "unique_valu": [13, 25, 34, 37, 93], "uniqueallresult": 13, "uniquecountsresult": 13, "uniqueinverseresult": 13, "unit": [0, 1, 19, 21, 25, 26, 34, 49, 54, 55, 56], "unknown": [21, 25, 26, 28, 37, 38, 53], "unless": [1, 21, 23, 25, 28, 34, 42, 53, 92, 96, 101], "unlik": [21, 22, 25, 28, 35, 36, 53, 55], "unlimit": [21, 25], "unnecessari": 64, "unord": [22, 23, 25, 35, 36, 48], "unpack": [25, 53, 73, 77, 101], "unregist": [18, 20, 21, 23, 25, 26, 37, 48, 49, 53, 55, 56, 83, 92], "unregister_al": [25, 56], "unregister_categorical_by_nam": [18, 25], "unregister_dataframe_by_nam": [21, 25], "unregister_groupby_by_nam": [23, 25, 83, 92], "unregister_pdarray_by_nam": [25, 37], "unregister_segarray_by_nam": [25, 48], "unregister_strings_by_nam": [25, 53], "unrel": 90, "unsaf": [25, 39], "unset": [63, 77], "unsign": [22, 25, 35, 36, 91], "unsignedinteg": [22, 25, 35, 36], "unsort": [21, 25, 91], "unsqueez": [3, 25], "unstabl": 96, "unstack": 11, "unstructur": [25, 36], "unsupport": [23, 25, 28, 47, 50, 84, 99], "unsupportedoper": 29, "unsupportedopt": 29, "unsur": 0, "until": [18, 20, 21, 23, 25, 26, 36, 37, 48, 49, 53, 55, 64, 92], "unus": [18, 25, 28, 39, 84], "up": [1, 3, 18, 19, 21, 23, 25, 28, 34, 37, 40, 48, 53, 58, 61, 64, 65, 75, 76, 77, 78, 84, 87, 88, 89, 90, 99, 101], "updat": [18, 20, 21, 22, 23, 25, 26, 28, 35, 36, 37, 41, 48, 49, 53, 55, 70, 75, 76, 80, 84, 92], "update_hdf": [17, 18, 20, 21, 23, 25, 26, 28, 37, 48, 53], "update_nrow": [21, 25], "upgrad": [75, 79], "upon": [25, 34, 53, 77, 78, 81, 87], "upper": [5, 25, 34, 42, 53, 62, 96], "upper_bounds_exclus": [3, 25], "upper_bounds_inclus": [3, 25], "uppercamelcas": 0, "uppercas": [25, 38, 53], "upstream": [62, 76, 77], "url": [1, 19, 21, 25, 36, 49, 73, 75, 100], "urlnam": [25, 36], "us": [0, 1, 3, 4, 5, 8, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 76, 77, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "usag": [4, 8, 21, 25, 26, 49, 65, 73, 82, 97, 100], "use_seri": [21, 25, 91], "usedmodul": [63, 64, 78], "usehash": [25, 53], "user": [0, 1, 17, 18, 20, 21, 22, 23, 25, 26, 28, 31, 34, 35, 36, 37, 38, 41, 47, 48, 49, 51, 53, 55, 56, 59, 62, 65, 66, 68, 69, 71, 73, 75, 76, 77, 78, 79, 80, 81, 84, 88, 89, 92, 95, 101], "user_defined_nam": [18, 20, 21, 23, 25, 26, 37, 48, 49, 53, 55, 92], "userdict": [21, 25, 43], "userid": [21, 25, 91, 92], "usernam": [21, 25, 47, 49, 91], "username_token": 47, "userwarn": [25, 36], "ushort": [22, 25, 35, 36], "ushortdtyp": [25, 36], "usual": [0, 21, 23, 25, 58, 92], "utf": [21, 25, 28, 53], "utf8proc": 75, "util": [0, 25, 28, 57, 62, 75, 76, 77], "utility_funct": [8, 57], "v": [0, 22, 23, 25, 35, 36, 46, 48, 62, 76, 82, 92, 97], "v1": [25, 44], "v10": [25, 36], "v2": [23, 25, 92], "v2022": 62, "v2023": 64, "v5": [25, 36], "val": [3, 22, 23, 25, 35, 36, 46, 48, 49, 56, 92, 97], "val1": 56, "val2": 56, "val_suffix": [25, 48], "valid": [3, 18, 22, 25, 28, 34, 35, 36, 38, 46, 49, 51, 53, 84, 89, 95, 101], "validate_kei": [25, 49], "validate_v": [25, 49], "vals1": 56, "vals2": 56, "valsiz": [25, 48], "valu": [3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 34, 35, 36, 37, 38, 40, 42, 44, 46, 48, 49, 51, 53, 54, 55, 56, 59, 66, 68, 70, 77, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101], "valuabl": 78, "value_count": [25, 34, 37, 49, 83, 93, 98], "value_label": [25, 49], "value_nam": [25, 48], "value_s": [59, 82], "valueerror": [3, 4, 8, 11, 18, 19, 21, 22, 23, 25, 26, 28, 29, 30, 34, 35, 36, 37, 38, 40, 42, 48, 49, 50, 51, 52, 53, 84, 86, 87, 89, 90, 92, 93, 97, 98, 100, 101], "values2": [23, 25, 92], "valuetypeerror": [25, 34], "vandermond": [25, 36], "vanish": [22, 35], "var": [0, 1, 15, 21, 22, 23, 25, 35, 36, 37, 46, 49, 58, 83, 87, 92, 93], "vari": [25, 36, 37, 54, 66, 75, 77, 79, 81, 97], "variabl": [0, 23, 25, 28, 30, 37, 42, 46, 47, 48, 53, 59, 60, 76, 77, 78, 87, 92, 96, 97, 101], "varianc": [15, 23, 25, 37, 42, 46, 87, 92, 93, 96], "variat": 46, "varieti": [25, 42, 96], "variou": [1, 67], "vcxsrv": 80, "ve": [64, 75, 76, 77], "vecdot": [10, 25, 34], "vecentropi": 46, "vector": [5, 20, 23, 25, 34, 83, 92], "vendor_id_raw": 59, "venv": 75, "verbos": [1, 25, 27, 31], "veri": [0, 21, 25, 36, 66, 90, 91], "verifi": [0, 1, 21, 25, 69, 84, 91], "versa": [84, 91], "version": [0, 18, 21, 22, 25, 35, 36, 44, 56, 59, 62, 68, 73, 75, 76, 77, 79, 80], "version_info": [22, 35], "versionad": [25, 36], "versu": [25, 28, 84], "vertic": [25, 39, 48, 49, 97], "verticl": [25, 49, 98], "via": [0, 1, 18, 21, 22, 23, 25, 35, 36, 37, 38, 53, 58, 75, 76, 77, 84, 89, 92, 94, 95, 96, 101], "vice": [84, 91], "view": [4, 8, 17, 22, 25, 35, 36, 62, 66, 71, 75, 81, 88, 95], "violat": [25, 36], "virtual": 75, "visibl": [18, 19, 25, 26, 28, 37, 48, 53, 100], "visit": [73, 76, 77], "visual": [25, 41], "vme": 59, "vname": 58, "void": [25, 36], "voiddtyp": [25, 36], "vstack": [25, 39], "vsxrrl": [25, 38], "w": [18, 23, 25, 26, 32, 36, 37, 53, 55, 92, 101], "wa": [0, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 48, 49, 53, 55, 63, 68, 69, 75, 77, 84, 92, 95, 97], "wai": [19, 25, 36, 42, 59, 63, 68, 73, 78, 87, 89, 90, 91, 95, 96, 101], "walk": [58, 60, 73], "want": [0, 1, 21, 22, 25, 35, 73, 77, 79, 91], "warmup": 59, "warn": [1, 5, 7, 10, 11, 25, 28, 31, 36, 53, 84, 101], "warn_on_python": [25, 36], "we": [0, 1, 3, 4, 21, 22, 25, 26, 28, 34, 35, 37, 40, 42, 53, 54, 56, 58, 59, 60, 62, 64, 66, 67, 70, 75, 76, 77, 79, 80, 93, 95, 96], "web": [0, 62], "week": [25, 55, 92], "weekdai": [25, 55], "weekofyear": [25, 55], "weight": [21, 23, 25, 42, 92, 96], "welcom": 0, "well": [20, 25, 36, 54, 59, 66, 79], "went": 100, "were": [3, 17, 23, 25, 26, 28, 36, 37, 48, 53, 63, 78, 88, 92, 97, 101], "wget": 76, "what": [0, 22, 25, 35, 36, 39, 48, 58, 62, 63, 64, 78, 96, 100], "wheel": 75, "when": [0, 1, 3, 12, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 40, 48, 49, 51, 53, 54, 55, 56, 58, 59, 62, 63, 64, 66, 68, 70, 75, 77, 78, 79, 80, 84, 87, 89, 91, 92, 95, 97, 99], "whenev": [25, 36, 101], "where": [1, 3, 4, 8, 11, 12, 18, 19, 21, 23, 25, 26, 28, 29, 30, 34, 36, 37, 38, 40, 42, 47, 48, 53, 56, 58, 59, 60, 61, 68, 73, 76, 77, 83, 84, 92, 93, 94, 95, 96, 97, 99, 100, 101], "wherea": [88, 101], "wherev": 64, "whether": [5, 6, 11, 12, 14, 15, 16, 18, 21, 22, 23, 25, 26, 28, 30, 32, 34, 35, 36, 37, 40, 48, 49, 53, 54, 55, 66, 84, 89, 97, 98, 99, 101], "which": [0, 3, 5, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 34, 35, 36, 37, 38, 39, 40, 42, 48, 49, 50, 53, 54, 55, 58, 59, 61, 62, 64, 66, 75, 76, 77, 78, 82, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101], "whichev": 80, "whicn": [19, 100], "while": [3, 25, 28, 50, 64, 68, 70, 75, 80, 84, 86], "whitespac": [22, 25, 28, 35, 36, 46, 53], "whl": 75, "who": [0, 76, 77], "whole": [25, 53, 62, 101], "whose": [5, 11, 21, 22, 25, 35, 36, 48, 49, 53, 98], "wide": [25, 42, 96, 101], "width": [20, 25, 36, 101], "wiki": [0, 25, 36, 44], "wikipedia": [25, 36, 44], "window": [25, 30, 47, 73, 81], "wise": [7, 18, 25, 34, 36, 37, 39, 83, 88], "wish": 78, "within": [5, 11, 18, 19, 21, 23, 24, 25, 26, 28, 36, 37, 38, 42, 48, 53, 58, 59, 68, 70, 90, 91, 92, 96, 97], "without": [5, 18, 25, 28, 36, 37, 42, 64, 75, 84, 91, 96], "won": 64, "word": [3, 25, 42, 96], "work": [0, 18, 21, 25, 28, 37, 40, 43, 53, 63, 66, 68, 70, 76, 77, 78, 84, 89, 91, 94, 99, 101], "workflow": [0, 25, 28, 56, 62, 78, 84], "workhors": 92, "world": [25, 42, 53, 84, 96, 101], "worri": 63, "wors": 63, "would": [12, 25, 36, 56, 60, 64, 69, 84, 87, 92], "wraparound": 59, "wrapper": [4, 5, 7, 8, 20, 22, 25, 35, 36, 54, 95], "writ": 70, "write": [1, 4, 8, 17, 18, 21, 25, 26, 28, 29, 31, 36, 37, 48, 49, 53, 59, 62, 67, 84, 88], "write_fil": [25, 28, 84], "write_line_to_fil": 29, "write_log": [25, 31], "writeln": 0, "written": [18, 21, 23, 25, 26, 28, 29, 31, 36, 37, 48, 49, 53, 67, 68, 69, 70, 71, 75, 84, 92, 95], "wrong": [25, 28, 100], "wrote": 0, "wsl": 80, "wsl2": [59, 81], "wt": [21, 25, 49], "www": [25, 36], "x": [0, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 25, 28, 34, 35, 36, 37, 41, 42, 44, 45, 46, 48, 53, 56, 66, 80, 84, 87, 88, 89, 91, 92, 95, 96, 97, 101], "x00": [22, 25, 35, 36], "x00b": [22, 25, 35, 36], "x00c": [22, 25, 35, 36], "x1": [7, 10, 12, 25, 34, 36], "x2": [7, 10, 12, 25, 34, 36], "x410": 80, "x61": [25, 36], "x62": [25, 36], "x63": [25, 36], "x64": [25, 36], "x86": 76, "x86_64": [22, 25, 35, 36, 59, 76, 80], "x_edg": [25, 34], "xgetbv1": 59, "xlabel": [25, 41], "xlogi": [25, 45], "xor": [7, 21, 23, 25, 37, 48, 83, 92], "xore": [25, 34], "xsave": 59, "xsavec": 59, "xsaveopt": 59, "xserver": 80, "xtol": 46, "xtopologi": 59, "xvf": 76, "xy": 5, "xzf": [73, 77], "y": [22, 25, 34, 35, 36, 37, 41, 44, 45, 46, 60, 76], "y_edg": [25, 34], "yaml": 79, "yaml_fil": 79, "ye": 60, "year": [25, 55], "yet": [3, 5, 7, 10, 25, 48, 75, 84, 88], "yield": [1, 17, 18, 21, 25, 26, 28, 36, 37, 48, 53, 91, 94], "yml": [73, 76, 77, 79], "you": [0, 1, 18, 20, 21, 22, 23, 25, 26, 28, 35, 36, 37, 48, 49, 53, 55, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 73, 75, 76, 77, 78, 79, 80, 81, 91, 92, 94], "your": [0, 1, 21, 25, 26, 28, 36, 37, 53, 60, 61, 62, 64, 65, 73, 75, 76, 77, 78, 79, 80, 81, 91, 100, 101], "your_fork": [76, 77], "your_machin": 73, "yum": 76, "yyyi": 62, "z": [25, 34], "zarr": [4, 8, 25, 28], "zarrai": [25, 28], "zarrmsg": [25, 28], "zero": [5, 12, 22, 23, 25, 34, 35, 36, 37, 38, 46, 52, 62, 83, 90, 92, 94, 95], "zero_up": [3, 25], "zerodivisionerror": [25, 37, 38, 90], "zeromq": [75, 79], "zeros_lik": [5, 25, 38, 83, 90], "zig": [25, 42, 96], "ziggurat": [25, 42, 96], "zip": 73, "zmq": [1, 75], "zmqchannel": [19, 100], "zone": [25, 55], "zsh": 77, "zshrc": 77, "zstd": [18, 21, 25, 26, 28, 37, 48, 53, 59, 70], "\u00b2": [25, 53]}, "titles": ["Contributing", "Environment Variables", "arkouda.accessor", "arkouda.alignment", "arkouda.array_api.array_object", "arkouda.array_api.creation_functions", "arkouda.array_api.data_type_functions", "arkouda.array_api.elementwise_functions", "arkouda.array_api", "arkouda.array_api.indexing_functions", "arkouda.array_api.linalg", "arkouda.array_api.manipulation_functions", "arkouda.array_api.searching_functions", "arkouda.array_api.set_functions", "arkouda.array_api.sorting_functions", "arkouda.array_api.statistical_functions", "arkouda.array_api.utility_functions", "arkouda.array_view", "arkouda.categorical", "arkouda.client", "arkouda.client_dtypes", "arkouda.dataframe", "arkouda.dtypes", "arkouda.groupbyclass", "arkouda.history", "arkouda", "arkouda.index", "arkouda.infoclass", "arkouda.io", "arkouda.io_util", "arkouda.join", "arkouda.logger", "arkouda.match", "arkouda.matcher", "arkouda.numeric", "arkouda.numpy.dtypes", "arkouda.numpy", "arkouda.pdarrayclass", "arkouda.pdarraycreation", "arkouda.pdarraymanipulation", "arkouda.pdarraysetops", "arkouda.plotting", "arkouda.random", "arkouda.row", "arkouda.scipy", "arkouda.scipy.special", "arkouda.scipy.stats", "arkouda.security", "arkouda.segarray", "arkouda.series", "arkouda.sorting", "arkouda.sparrayclass", "arkouda.sparsematrix", "arkouda.strings", "arkouda.testing", "arkouda.timeclass", "arkouda.util", "API Reference", "Adding Your First Feature", "PyTest Benchmarks", "GASNet Development", "Reducing Memory Usage of Arkouda Builds", "Release Process", "Speeding up Arkouda Compilation", "Tips for Reproducing User Bugs", "Developer Documentation", "Examples", "CSV", "HDF5", "Import/Export", "Parquet", "File I/O", "Arkouda Documentation", "Quickstart", "Chapel API Reference", "Building the Server", "Linux", "MacOS", "Modular Server Builds", "Requirements", "Windows (WSL2)", "Installation", "Performance Testing", "Usage Guide", "Data I/O", "Indexs in Arkouda", "Sorting", "Arithmetic and Numeric Operations", "ArrayView in Arkouda", "Categoricals", "Creating Arrays", "DataFrames in Arkouda", "GroupBy", "Summarizing Data", "Indexing and Assignment", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">pdarray</span></code> class", "Random in Arkouda", "SegArrays in Arkouda", "Series in Arkouda", "Array Set Operations", "Startup", "Strings in Arkouda"], "titleterms": {"3": [73, 100], "The": [59, 95], "access": 97, "accessor": 2, "ad": [0, 1, 58, 78], "align": 3, "all": 75, "alwai": 63, "an": 78, "anaconda": [76, 77, 79], "api": [57, 67, 68, 69, 70, 71, 74], "append": [91, 97], "argsort": [82, 85], "argument": [59, 82], "arithmet": 87, "arkouda": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 66, 67, 68, 70, 72, 73, 75, 76, 77, 78, 85, 88, 91, 96, 97, 98, 100, 101], "arrai": [66, 90, 97, 99], "array_api": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "array_object": 4, "array_view": 17, "arrayview": [68, 88], "arrow": 75, "assign": 94, "attribut": [4, 25, 27, 36, 47, 48, 51, 68], "basic": 66, "benchmark": 59, "between": 84, "bug": [0, 64], "build": [60, 61, 63, 64, 75, 77, 78], "cast": 95, "categor": [18, 68, 70, 89], "chang": 85, "chapel": [0, 1, 60, 74, 76, 77], "choic": 96, "class": [2, 4, 6, 8, 13, 17, 18, 20, 21, 22, 23, 24, 25, 26, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 46, 48, 49, 51, 53, 55, 95], "client": [1, 19, 58, 73, 84, 100], "client_dtyp": 20, "clone": [76, 77], "code": 0, "column": 91, "compil": [1, 63], "compress": 70, "concat": 85, "concaten": [90, 91], "conda": 75, "configur": [60, 68, 75, 78], "connect": [73, 100], "constant": 90, "construct": 89, "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "contribut": 0, "convent": 0, "copi": 91, "core": 0, "count": [93, 98], "creat": [66, 90], "creation": [66, 88, 96], "creation_funct": 5, "csv": 67, "custom": 78, "data": [67, 68, 70, 84, 91, 93, 95], "data_type_funct": 6, "datafram": [21, 66, 67, 68, 70, 91], "dataset": 84, "dedupl": [91, 97], "depend": [1, 73, 75, 79], "descript": 93, "develop": [0, 60, 65, 79], "diff": 62, "differ": 97, "directori": 1, "disconnect": 73, "disk": 84, "distribut": [68, 75], "document": [65, 72, 75], "drop": 91, "dtype": [22, 35, 85], "effici": 64, "element": [87, 97], "elementwise_funct": 7, "environ": [1, 60, 63, 75, 76, 77], "exampl": [58, 66, 67], "except": [3, 25, 37], "exponenti": 96, "export": [66, 69, 71, 84], "express": 101, "featur": [0, 58, 85, 91, 96, 98], "file": [59, 67, 68, 71, 78, 84], "filter": 91, "first": 58, "flag": 1, "flatten": 101, "format": [67, 71, 84], "from": [1, 77, 84], "full": [59, 64], "function": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 52, 54, 55, 56, 58, 71, 87], "gasnet": 60, "gather": [82, 94], "gener": [62, 71], "get": 75, "git": 62, "groupbi": [66, 68, 91, 92], "groupbyclass": 23, "guid": [81, 83], "hdf5": 68, "head": [91, 98], "header": 67, "histogram": 93, "histori": 24, "homebrew": 77, "i": [71, 84, 101], "import": [66, 69, 71, 84], "index": [26, 67, 68, 70, 85, 88, 91, 94], "indexing_funct": 9, "individu": 75, "infoclass": 27, "instal": [73, 75, 76, 77, 79, 81], "instruct": 62, "integ": [94, 96], "integr": 98, "interact": 66, "interfac": 58, "intersect": 97, "io": 28, "io_util": 29, "issu": 0, "iter": [88, 89, 91, 95, 97, 101], "join": [30, 101], "json": 59, "l": 71, "larg": 84, "launch": [73, 100], "legaci": 68, "linalg": 10, "lint": 0, "linux": 76, "list": 79, "log": 62, "logger": 31, "logic": 94, "logist": 96, "lognorm": 96, "lookup": [85, 98], "maco": 77, "makefil": 1, "manipulation_funct": 11, "manual": 75, "map": 66, "match": [32, 101], "matcher": 33, "memori": 61, "merg": 0, "metadata": 68, "method": [97, 101], "mode": [68, 70], "modul": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 78], "modular": [63, 75, 78], "name": [82, 95], "new": 78, "next": [76, 77], "ngram": 97, "normal": 96, "note": 62, "numer": [34, 87], "numpi": [35, 36], "o": [71, 84, 101], "object": [66, 101], "onli": 0, "oper": [66, 87, 89, 95, 97, 99, 101], "output": 59, "outsid": 1, "overview": 81, "packag": [8, 22, 25, 42, 54, 75], "panda": [66, 98], "parquet": 70, "path": 1, "pdarrai": [66, 67, 68, 70, 94, 95], "pdarrayclass": 37, "pdarraycr": 38, "pdarraymanipul": 39, "pdarraysetop": 40, "perform": [82, 97, 101], "permut": [91, 96], "pip": [75, 79], "plot": 41, "poisson": 96, "posit": 82, "prefix": 97, "prepend": 97, "preprocess": 84, "process": [0, 62, 78], "pull": 0, "pytest": 59, "python": [0, 1, 58, 66, 73, 76, 77, 79, 100], "python3": 0, "quickstart": 73, "random": [42, 90, 96], "rank": 95, "read": [59, 71, 84], "recommend": [75, 77], "reduc": [61, 82], "reduct": 87, "refer": [57, 67, 68, 69, 70, 74], "regular": [90, 101], "releas": [0, 62], "renam": 91, "report": 0, "repositori": [76, 77], "reproduc": 64, "request": 0, "requir": [79, 81], "reset": 91, "reshap": 95, "review": 0, "rhel": 76, "row": 43, "run": [0, 1, 59, 60, 78], "save": [64, 78], "scalar": 87, "scan": [82, 87], "scatter": [82, 94], "schema": 68, "scipi": [44, 45, 46], "search": 101, "searching_funct": 12, "secur": 47, "segarrai": [48, 68, 70, 97], "seri": [49, 98], "server": [58, 73, 75, 78, 84, 100], "set": [63, 66, 97, 99], "set_funct": 13, "setop": 97, "shuffl": 96, "shutdown": 73, "singl": 59, "size": 97, "slice": 94, "sort": [50, 86, 91, 98], "sorting_funct": 14, "sourc": 77, "sparrayclass": 51, "sparsematrix": 52, "special": 45, "specif": [79, 97, 101], "specifi": 78, "speed": 63, "split": 101, "src": 1, "standard_exponenti": 96, "standard_norm": 96, "start": 75, "startup": 100, "stat": 46, "statist": 93, "statistical_funct": 15, "step": [62, 76, 77], "stream": 82, "string": [53, 67, 68, 70, 101], "sub": 97, "submodul": [8, 25, 36, 44], "subpackag": 25, "substr": 101, "suffix": 97, "suit": 59, "summar": 93, "support": [67, 68, 70, 71, 84], "symmetr": 97, "system": 63, "tail": [91, 98], "team": 0, "test": [0, 1, 54, 59, 82], "timeclass": 55, "tip": 64, "troubleshoot": 75, "type": [67, 68, 70, 91, 95], "ubuntu": 76, "uniform": 96, "union": 97, "up": 63, "updat": [77, 79], "us": [63, 66, 73, 75, 78, 79], "usag": [61, 83], "user": 64, "util": 56, "utility_funct": 16, "valu": [93, 98], "variabl": [1, 63], "vector": 87, "where": 87, "window": 80, "wise": 87, "without": 67, "write": [0, 68, 70, 71], "wsl2": 80, "your": 58}})