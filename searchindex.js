Search.setIndex({"alltitles": {"API Reference": [[59, null], [69, "api-reference"], [70, "api-reference"], [71, "api-reference"], [72, "api-reference"]], "Access/Set Specific Elements in Sub-Array": [[99, "access-set-specific-elements-in-sub-array"]], "Add a local external tool": [[78, "add-a-local-external-tool"]], "Adding Functionality to the Arkouda Server": [[60, "adding-functionality-to-the-arkouda-server"]], "Adding Issues": [[0, "adding-issues"]], "Adding Python Functionality (Client Interface)": [[60, "adding-python-functionality-client-interface"]], "Adding Your First Feature": [[60, null]], "Adding a Module from Outside the Arkouda src Directory": [[1, "adding-a-module-from-outside-the-arkouda-src-directory"]], "Adding new modules into the build process": [[81, "adding-new-modules-into-the-build-process"]], "All Dependencies": [[77, "all-dependencies"]], "Anaconda": [[80, "anaconda"]], "Append": [[93, "append"]], "Append & Prepend": [[99, "append-prepend"]], "ArgSort": [[88, "argsort"]], "Argsort": [[85, "argsort"]], "Arithmetic and Numeric Operations": [[90, null]], "Arkouda Arrays": [[68, "arkouda-arrays"]], "Arkouda DataFrames": [[68, "arkouda-dataframes"]], "Arkouda Documentation": [[74, null]], "Arkouda Formatted File": [[69, "arkouda-formatted-file"]], "Array Set Operations": [[101, null]], "Arrow Install Troubleshooting": [[77, "arrow-install-troubleshooting"]], "Attributes": [[5, "attributes"], [26, "attributes"], [28, "attributes"], [37, "attributes"], [49, "attributes"], [50, "attributes"], [52, "attributes"]], "Basic Interaction": [[68, "basic-interaction"]], "Benchmark Arguments": [[61, "benchmark-arguments"]], "Between client and server": [[87, "between-client-and-server"]], "Bug Reports": [[0, "bug-reports"]], "Build Arkouda": [[62, "build-arkouda"]], "Build Chapel with GASNet": [[62, "build-chapel-with-gasnet"]], "Build from Source (Recommended)": [[80, "build-from-source-recommended"]], "Build the Server": [[77, "build-the-server"]], "Building the Arkouda Documentation": [[77, "building-the-arkouda-documentation"]], "Building the Server": [[77, null]], "CSV": [[69, null]], "Categorical": [[70, "categorical"], [70, "id3"], [72, "categorical"]], "Categoricals": [[91, null]], "Change Dtype": [[88, "change-dtype"]], "Chapel": [[0, "chapel"]], "Chapel API Reference": [[76, null]], "Chapel Compiler Flags": [[1, "chapel-compiler-flags"]], "Chapel Installation": [[79, "chapel-installation"]], "Classes": [[2, "classes"], [5, "classes"], [7, "classes"], [9, "classes"], [14, "classes"], [18, "classes"], [20, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [48, "classes"], [50, "classes"], [51, "classes"], [53, "classes"], [55, "classes"], [57, "classes"]], "Clone Arkouda Repository": [[79, "clone-arkouda-repository"], [80, "clone-arkouda-repository"]], "Coding Conventions and Linting": [[0, "coding-conventions-and-linting"]], "Compilation / Makefile": [[1, "compilation-makefile"]], "Compression": [[72, "compression"]], "Concat": [[88, "concat"]], "Concatenate": [[93, "concatenate"]], "Concatenation": [[92, "concatenation"]], "Configuration for each tool": [[78, "configuration-for-each-tool"]], "Connect a Python 3 client": [[102, "connect-a-python-3-client"]], "Connect the Python 3 Client": [[75, "connect-the-python-3-client"]], "Constant": [[92, "constant"]], "Construction": [[91, "construction"]], "Contributing": [[0, null]], "Copy": [[93, "copy"]], "Core Development Team Only": [[0, "core-development-team-only"]], "Creating & Using a DataFrame": [[68, "creating-using-a-dataframe"]], "Creating Arrays": [[92, null]], "Creation": [[98, "creation"]], "Data Distribution": [[70, "data-distribution"]], "Data Formatting": [[69, "data-formatting"]], "Data I/O": [[87, null]], "Data Preprocessing": [[87, "data-preprocessing"]], "Data Schema": [[70, "data-schema"]], "Data Type": [[97, "data-type"]], "Data Types": [[93, "data-types"]], "DataFrame": [[69, "dataframe"], [70, "dataframe"], [72, "dataframe"]], "DataFrames": [[68, "dataframes"]], "DataFrames in Arkouda": [[93, null]], "Deduplication": [[93, "deduplication"], [99, "deduplication"]], "Dependencies": [[77, "dependencies"]], "Dependency Configuration": [[77, "dependency-configuration"]], "Dependency List": [[82, "dependency-list"]], "Dependency Paths": [[1, "dependency-paths"]], "Descriptive Statistics": [[95, "descriptive-statistics"]], "Developer Documentation": [[67, null]], "Developer Specific": [[82, "developer-specific"]], "Developing Arkouda": [[0, "developing-arkouda"]], "Diff the git logs": [[64, "diff-the-git-logs"]], "Distributable Package": [[77, "distributable-package"]], "Drop": [[93, "drop"]], "Element-wise Functions": [[90, "element-wise-functions"]], "Environment Configuration": [[62, "environment-configuration"]], "Environment Variables": [[1, null]], "Environment Variables to Always Set": [[65, "environment-variables-to-always-set"]], "Example": [[60, "example"], [60, "id1"]], "Example Files": [[69, "example-files"]], "Examples": [[68, null]], "Exceptions": [[3, "exceptions"], [26, "exceptions"], [39, "exceptions"]], "Export": [[71, "export"]], "Exporting pdarray Objects": [[68, "exporting-pdarray-objects"]], "Exporting to Pandas": [[68, "exporting-to-pandas"]], "External Tools": [[78, null]], "Feature Requests": [[0, "feature-requests"]], "Features": [[88, "features"], [93, "features"], [98, "features"], [100, "features"]], "File Configuration": [[70, "file-configuration"]], "File Formatting": [[69, "file-formatting"]], "File I/O": [[73, null]], "File Without Header": [[69, "file-without-header"]], "Filter": [[93, "filter"]], "Flattening": [[103, "flattening"]], "Functions": [[2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [16, "functions"], [17, "functions"], [19, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [23, "functions"], [24, "functions"], [26, "functions"], [28, "functions"], [29, "functions"], [30, "functions"], [31, "functions"], [32, "functions"], [36, "functions"], [37, "functions"], [38, "functions"], [39, "functions"], [40, "functions"], [41, "functions"], [42, "functions"], [43, "functions"], [44, "functions"], [46, "functions"], [47, "functions"], [49, "functions"], [50, "functions"], [52, "functions"], [53, "functions"], [54, "functions"], [56, "functions"], [57, "functions"], [58, "functions"]], "GASNet Development": [[62, null]], "Gather": [[85, "gather"]], "Gather/Scatter (pdarray)": [[96, "gather-scatter-pdarray"]], "General I/O API": [[73, "general-i-o-api"]], "Generating release notes": [[64, "generating-release-notes"]], "Getting Started": [[77, "getting-started"]], "GroupBy": [[68, "groupby"], [70, "groupby"], [70, "id5"], [93, "groupby"], [94, null]], "HDF5": [[70, null]], "Head/Tail": [[100, "head-tail"]], "Histogram": [[95, "histogram"]], "Homebrew": [[80, "homebrew"]], "I/O": [[103, "i-o"]], "Import": [[71, "import"]], "Import/Export": [[71, null], [87, "import-export"]], "Import/Export Support": [[73, "import-export-support"]], "Importing Pandas DataFrame": [[68, "importing-pandas-dataframe"]], "Index": [[69, "index"], [70, "index"], [72, "index"]], "Indexing and Assignment": [[96, null]], "Indexs in Arkouda": [[88, null]], "Individual Installs": [[77, "individual-installs"]], "Install Arkouda": [[75, "install-arkouda"]], "Install Chapel": [[80, "install-chapel"]], "Install Chapel (RHEL)": [[79, "install-chapel-rhel"]], "Install Chapel (Ubuntu)": [[79, "install-chapel-ubuntu"]], "Install Dependencies": [[75, "install-dependencies"]], "Install Guides": [[84, "install-guides"]], "Installation": [[84, null]], "Installing Dependencies Manually": [[77, "installing-dependencies-manually"]], "Installing/Updating Python Dependencies": [[82, "installing-updating-python-dependencies"]], "Integer": [[96, "integer"]], "Integer pdarray index": [[96, "integer-pdarray-index"]], "Intersect": [[99, "intersect"]], "Iteration": [[91, "iteration"], [93, "iteration"], [97, "iteration"], [99, "iteration"], [103, "iteration"]], "Large Datasets": [[87, "large-datasets"]], "Launch arkouda server": [[102, "launch-arkouda-server"]], "Launching the Server": [[75, "launching-the-server"]], "Legacy File Support": [[70, "legacy-file-support"]], "Linux": [[79, null]], "Logical indexing": [[96, "logical-indexing"]], "Lookup": [[88, "lookup"], [100, "lookup"], [100, "id1"]], "MacOS": [[80, null]], "Match Object": [[103, "match-object"]], "Merging Pull Requests": [[0, "merging-pull-requests"]], "MetaData Attributes": [[70, "metadata-attributes"]], "Modular Building": [[77, "modular-building"]], "Modular Server Builds": [[81, null]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [24, "module-contents"], [25, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [57, "module-contents"], [58, "module-contents"]], "NGrams": [[99, "ngrams"]], "Name": [[97, "name"]], "Named Arguments": [[85, "named-arguments"], [85, "named-arguments"], [85, "named-arguments"], [85, "named-arguments"], [85, "named-arguments"], [85, "named-arguments"]], "Next Steps": [[78, "next-steps"], [79, "next-steps"], [80, "next-steps"]], "Operation": [[99, "operation"]], "Operations": [[91, "operations"], [103, "operations"]], "Operators": [[97, "operators"]], "Overview": [[84, "overview"]], "Package Contents": [[9, "package-contents"], [23, "package-contents"], [26, "package-contents"], [44, "package-contents"], [56, "package-contents"]], "Pandas Integration": [[100, "pandas-integration"]], "Parquet": [[72, null]], "Performance": [[99, "performance"], [103, "performance"]], "Performance Testing": [[85, null]], "Permutations": [[93, "permutations"]], "Positional Arguments": [[85, "positional-arguments"], [85, "positional-arguments"], [85, "positional-arguments"], [85, "positional-arguments"], [85, "positional-arguments"], [85, "positional-arguments"]], "Prefix & Suffix": [[99, "prefix-suffix"]], "PyCharm External Tools": [[78, "pycharm-external-tools"]], "PyTest Benchmarks": [[61, null]], "Python Client": [[1, "python-client"]], "Python Dependencies": [[82, "python-dependencies"]], "Python Environment - Anaconda": [[80, "python-environment-anaconda"]], "Python Environment - Anaconda (Linux)": [[79, "python-environment-anaconda-linux"]], "Python Mapping": [[68, "python-mapping"]], "Python3": [[0, "python3"]], "Quickstart": [[75, null]], "Random": [[92, "random"]], "Random in Arkouda": [[98, null]], "Rank": [[97, "rank"]], "Read": [[73, "read"]], "Reading data from disk": [[87, "reading-data-from-disk"]], "Reading the JSON Output": [[61, "reading-the-json-output"]], "Reduce": [[85, "reduce"]], "Reducing Memory Usage of Arkouda Builds": [[63, null]], "Reductions": [[90, "reductions"]], "Regular": [[92, "regular"]], "Regular Expressions": [[103, "regular-expressions"]], "Release Process": [[0, "release-process"], [64, null]], "Rename Columns": [[93, "rename-columns"]], "Reproducing User Bugs Efficiently": [[66, "reproducing-user-bugs-efficiently"]], "Requirements": [[82, null], [84, "requirements"]], "Reset Indexes": [[93, "reset-indexes"]], "Reshape": [[97, "reshape"]], "Reviewing Pull Requests": [[0, "reviewing-pull-requests"]], "Run Arkouda": [[62, "run-arkouda"]], "Running": [[1, "running"]], "Running Single Files or Tests": [[61, "running-single-files-or-tests"]], "Running The Full Suite": [[61, "running-the-full-suite"]], "Running chapel tests": [[0, "running-chapel-tests"]], "Running python tests": [[0, "running-python-tests"]], "Running the external tools": [[78, "running-the-external-tools"]], "Saving Full Builds": [[66, "saving-full-builds"]], "Saving modules used in an Arkouda server run": [[81, "saving-modules-used-in-an-arkouda-server-run"]], "Scan": [[85, "scan"]], "Scans": [[90, "scans"]], "Scatter": [[85, "scatter"]], "SegArray": [[70, "segarray"], [70, "id4"], [72, "segarray"]], "SegArray SetOps": [[99, "segarray-setops"]], "SegArray Specific Methods": [[99, "segarray-specific-methods"]], "SegArrays in Arkouda": [[99, null]], "Series in Arkouda": [[100, null]], "Set Difference": [[99, "set-difference"]], "Shutdown/Disconnect": [[75, "shutdown-disconnect"]], "Slice": [[96, "slice"]], "Sorting": [[89, null], [93, "sorting"], [100, "sorting"]], "Specifying a custom configuration file": [[81, "specifying-a-custom-configuration-file"]], "Speeding up Arkouda Compilation": [[65, null]], "Splitting and joining": [[103, "splitting-and-joining"]], "Startup": [[102, null]], "Step-by-step instructions": [[64, "step-by-step-instructions"]], "Stream": [[85, "stream"]], "String-Specific Methods": [[103, "string-specific-methods"]], "Strings": [[69, "strings"], [70, "strings"], [70, "id2"], [72, "strings"]], "Strings in Arkouda": [[103, null]], "Sub-array of Size": [[99, "sub-array-of-size"]], "Submodules": [[9, "submodules"], [26, "submodules"], [37, "submodules"], [46, "submodules"]], "Substring search": [[103, "substring-search"]], "Summarizing Data": [[95, null]], "Support Arkouda Data Types": [[69, "support-arkouda-data-types"]], "Supported Arkouda Data Types": [[70, "supported-arkouda-data-types"], [72, "supported-arkouda-data-types"]], "Supported File Formats": [[87, "supported-file-formats"]], "Supported File Formats:": [[73, null]], "Supported Write Modes": [[70, "supported-write-modes"], [72, "supported-write-modes"]], "Symmetric Difference": [[99, "symmetric-difference"]], "Tail/Head of Data": [[93, "tail-head-of-data"]], "Testing": [[0, "testing"], [1, "testing"]], "The pdarray class": [[97, null]], "Tips for Reproducing User Bugs": [[66, null]], "Type Casting": [[97, "type-casting"]], "Union": [[99, "union"]], "Updating Environment": [[80, "updating-environment"]], "Usage Guide": [[86, null]], "Using Anaconda": [[82, "using-anaconda"]], "Using Arkouda": [[75, "using-arkouda"]], "Using Environment Installed Dependencies (Recommended)": [[77, "using-environment-installed-dependencies-recommended"]], "Using Pip": [[78, "using-pip"], [82, "using-pip"]], "Using conda": [[77, "using-conda"]], "Using pip": [[77, "using-pip"]], "Using the Modular Build System": [[65, "using-the-modular-build-system"]], "VSCode Chapel Language Syntax Highlighter": [[78, "vscode-chapel-language-syntax-highlighter"]], "Value Counts": [[95, "value-counts"], [100, "value-counts"]], "Vector and Scalar Arithmetic": [[90, "vector-and-scalar-arithmetic"]], "Where": [[90, "where"]], "Windows (WSL2)": [[83, null]], "Write": [[73, "write"]], "Writing Pull Requests": [[0, "writing-pull-requests"]], "arkouda": [[26, null]], "arkouda.accessor": [[2, null]], "arkouda.alignment": [[3, null]], "arkouda.apply": [[4, null]], "arkouda.array_api": [[9, null]], "arkouda.array_api.array_object": [[5, null]], "arkouda.array_api.creation_functions": [[6, null]], "arkouda.array_api.data_type_functions": [[7, null]], "arkouda.array_api.elementwise_functions": [[8, null]], "arkouda.array_api.indexing_functions": [[10, null]], "arkouda.array_api.linalg": [[11, null]], "arkouda.array_api.manipulation_functions": [[12, null]], "arkouda.array_api.searching_functions": [[13, null]], "arkouda.array_api.set_functions": [[14, null]], "arkouda.array_api.sorting_functions": [[15, null]], "arkouda.array_api.statistical_functions": [[16, null]], "arkouda.array_api.utility_functions": [[17, null]], "arkouda.categorical": [[18, null]], "arkouda.client": [[19, null]], "arkouda.client_dtypes": [[20, null]], "arkouda.comm_diagnostics": [[21, null]], "arkouda.dataframe": [[22, null]], "arkouda.dtypes": [[23, null]], "arkouda.groupbyclass": [[24, null]], "arkouda.history": [[25, null]], "arkouda.index": [[27, null]], "arkouda.infoclass": [[28, null]], "arkouda.io": [[29, null]], "arkouda.io_util": [[30, null]], "arkouda.join": [[31, null]], "arkouda.logger": [[32, null]], "arkouda.match": [[33, null]], "arkouda.matcher": [[34, null]], "arkouda.numeric": [[35, null]], "arkouda.numpy": [[37, null]], "arkouda.numpy.dtypes": [[36, null]], "arkouda.numpy.random": [[38, null]], "arkouda.pdarrayclass": [[39, null]], "arkouda.pdarraycreation": [[40, null]], "arkouda.pdarraymanipulation": [[41, null]], "arkouda.pdarraysetops": [[42, null]], "arkouda.plotting": [[43, null]], "arkouda.random": [[44, null]], "arkouda.row": [[45, null]], "arkouda.scipy": [[46, null]], "arkouda.scipy.special": [[47, null]], "arkouda.scipy.stats": [[48, null]], "arkouda.security": [[49, null]], "arkouda.segarray": [[50, null]], "arkouda.series": [[51, null]], "arkouda.sorting": [[52, null]], "arkouda.sparrayclass": [[53, null]], "arkouda.sparsematrix": [[54, null]], "arkouda.strings": [[55, null]], "arkouda.testing": [[56, null]], "arkouda.timeclass": [[57, null]], "arkouda.util": [[58, null]], "black": [[78, "black"]], "choice": [[98, "choice"]], "exponential": [[98, "exponential"]], "flake8": [[78, "flake8"]], "installing the chapel-py dependency": [[77, "installing-the-chapel-py-dependency"]], "installing the chapel-py dependency manually": [[77, "installing-the-chapel-py-dependency-manually"]], "integers": [[98, "integers"]], "isort": [[78, "isort"]], "logistic": [[98, "logistic"]], "lognormal": [[98, "lognormal"]], "ls Functionality": [[73, "ls-functionality"]], "normal": [[98, "normal"]], "pdarray": [[69, "pdarray"], [70, "pdarray"], [70, "id1"], [72, "pdarray"]], "pdarray Creation": [[68, "pdarray-creation"]], "pdarray Set operations": [[68, "pdarray-set-operations"]], "pdarrays": [[68, "pdarrays"]], "permutation": [[98, "permutation"]], "poisson": [[98, "poisson"]], "random": [[98, "random"]], "shuffle": [[98, "shuffle"]], "standard_exponential": [[98, "standard-exponential"]], "standard_normal": [[98, "standard-normal"]], "uniform": [[98, "uniform"]]}, "docnames": ["CONTRIBUTING_LINK", "ENVIRONMENT", "autoapi/arkouda/accessor/index", "autoapi/arkouda/alignment/index", "autoapi/arkouda/apply/index", "autoapi/arkouda/array_api/array_object/index", "autoapi/arkouda/array_api/creation_functions/index", "autoapi/arkouda/array_api/data_type_functions/index", "autoapi/arkouda/array_api/elementwise_functions/index", "autoapi/arkouda/array_api/index", "autoapi/arkouda/array_api/indexing_functions/index", "autoapi/arkouda/array_api/linalg/index", "autoapi/arkouda/array_api/manipulation_functions/index", "autoapi/arkouda/array_api/searching_functions/index", "autoapi/arkouda/array_api/set_functions/index", "autoapi/arkouda/array_api/sorting_functions/index", "autoapi/arkouda/array_api/statistical_functions/index", "autoapi/arkouda/array_api/utility_functions/index", "autoapi/arkouda/categorical/index", "autoapi/arkouda/client/index", "autoapi/arkouda/client_dtypes/index", "autoapi/arkouda/comm_diagnostics/index", "autoapi/arkouda/dataframe/index", "autoapi/arkouda/dtypes/index", "autoapi/arkouda/groupbyclass/index", "autoapi/arkouda/history/index", "autoapi/arkouda/index", "autoapi/arkouda/index/index", "autoapi/arkouda/infoclass/index", "autoapi/arkouda/io/index", "autoapi/arkouda/io_util/index", "autoapi/arkouda/join/index", "autoapi/arkouda/logger/index", "autoapi/arkouda/match/index", "autoapi/arkouda/matcher/index", "autoapi/arkouda/numeric/index", "autoapi/arkouda/numpy/dtypes/index", "autoapi/arkouda/numpy/index", "autoapi/arkouda/numpy/random/index", "autoapi/arkouda/pdarrayclass/index", "autoapi/arkouda/pdarraycreation/index", "autoapi/arkouda/pdarraymanipulation/index", "autoapi/arkouda/pdarraysetops/index", "autoapi/arkouda/plotting/index", "autoapi/arkouda/random/index", "autoapi/arkouda/row/index", "autoapi/arkouda/scipy/index", "autoapi/arkouda/scipy/special/index", "autoapi/arkouda/scipy/stats/index", "autoapi/arkouda/security/index", "autoapi/arkouda/segarray/index", "autoapi/arkouda/series/index", "autoapi/arkouda/sorting/index", "autoapi/arkouda/sparrayclass/index", "autoapi/arkouda/sparsematrix/index", "autoapi/arkouda/strings/index", "autoapi/arkouda/testing/index", "autoapi/arkouda/timeclass/index", "autoapi/arkouda/util/index", "autoapi/index", "developer/ADDING_FEATURES", "developer/BENCHMARK", "developer/GASNET", "developer/MEMORY", "developer/RELEASE_PROCESS", "developer/TIPS", "developer/USER_BUGS", "developer/dev_menu", "examples", "file_io/CSV", "file_io/HDF5", "file_io/IMPORT_EXPORT", "file_io/PARQUET", "file_io/io_menu", "index", "quickstart", "server/index", "setup/BUILD", "setup/EXTERNAL_TOOLS", "setup/LINUX_INSTALL", "setup/MAC_INSTALL", "setup/MODULAR", "setup/REQUIREMENTS", "setup/WINDOWS_INSTALL", "setup/install_menu", "setup/testing", "usage", "usage/IO", "usage/Index", "usage/argsort", "usage/arithmetic", "usage/categorical", "usage/creation", "usage/dataframe", "usage/groupby", "usage/histogram", "usage/indexing", "usage/pdarray", "usage/random", "usage/segarray", "usage/series", "usage/setops", "usage/startup", "usage/strings"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["CONTRIBUTING_LINK.md", "ENVIRONMENT.md", "autoapi/arkouda/accessor/index.rst", "autoapi/arkouda/alignment/index.rst", "autoapi/arkouda/apply/index.rst", "autoapi/arkouda/array_api/array_object/index.rst", "autoapi/arkouda/array_api/creation_functions/index.rst", "autoapi/arkouda/array_api/data_type_functions/index.rst", "autoapi/arkouda/array_api/elementwise_functions/index.rst", "autoapi/arkouda/array_api/index.rst", "autoapi/arkouda/array_api/indexing_functions/index.rst", "autoapi/arkouda/array_api/linalg/index.rst", "autoapi/arkouda/array_api/manipulation_functions/index.rst", "autoapi/arkouda/array_api/searching_functions/index.rst", "autoapi/arkouda/array_api/set_functions/index.rst", "autoapi/arkouda/array_api/sorting_functions/index.rst", "autoapi/arkouda/array_api/statistical_functions/index.rst", "autoapi/arkouda/array_api/utility_functions/index.rst", "autoapi/arkouda/categorical/index.rst", "autoapi/arkouda/client/index.rst", "autoapi/arkouda/client_dtypes/index.rst", "autoapi/arkouda/comm_diagnostics/index.rst", "autoapi/arkouda/dataframe/index.rst", "autoapi/arkouda/dtypes/index.rst", "autoapi/arkouda/groupbyclass/index.rst", "autoapi/arkouda/history/index.rst", "autoapi/arkouda/index.rst", "autoapi/arkouda/index/index.rst", "autoapi/arkouda/infoclass/index.rst", "autoapi/arkouda/io/index.rst", "autoapi/arkouda/io_util/index.rst", "autoapi/arkouda/join/index.rst", "autoapi/arkouda/logger/index.rst", "autoapi/arkouda/match/index.rst", "autoapi/arkouda/matcher/index.rst", "autoapi/arkouda/numeric/index.rst", "autoapi/arkouda/numpy/dtypes/index.rst", "autoapi/arkouda/numpy/index.rst", "autoapi/arkouda/numpy/random/index.rst", "autoapi/arkouda/pdarrayclass/index.rst", "autoapi/arkouda/pdarraycreation/index.rst", "autoapi/arkouda/pdarraymanipulation/index.rst", "autoapi/arkouda/pdarraysetops/index.rst", "autoapi/arkouda/plotting/index.rst", "autoapi/arkouda/random/index.rst", "autoapi/arkouda/row/index.rst", "autoapi/arkouda/scipy/index.rst", "autoapi/arkouda/scipy/special/index.rst", "autoapi/arkouda/scipy/stats/index.rst", "autoapi/arkouda/security/index.rst", "autoapi/arkouda/segarray/index.rst", "autoapi/arkouda/series/index.rst", "autoapi/arkouda/sorting/index.rst", "autoapi/arkouda/sparrayclass/index.rst", "autoapi/arkouda/sparsematrix/index.rst", "autoapi/arkouda/strings/index.rst", "autoapi/arkouda/testing/index.rst", "autoapi/arkouda/timeclass/index.rst", "autoapi/arkouda/util/index.rst", "autoapi/index.rst", "developer/ADDING_FEATURES.md", "developer/BENCHMARK.md", "developer/GASNET.md", "developer/MEMORY.md", "developer/RELEASE_PROCESS.md", "developer/TIPS.md", "developer/USER_BUGS.md", "developer/dev_menu.rst", "examples.rst", "file_io/CSV.md", "file_io/HDF5.md", "file_io/IMPORT_EXPORT.md", "file_io/PARQUET.md", "file_io/io_menu.rst", "index.rst", "quickstart.rst", "server/index.rst", "setup/BUILD.md", "setup/EXTERNAL_TOOLS.md", "setup/LINUX_INSTALL.md", "setup/MAC_INSTALL.md", "setup/MODULAR.md", "setup/REQUIREMENTS.md", "setup/WINDOWS_INSTALL.md", "setup/install_menu.rst", "setup/testing.rst", "usage.rst", "usage/IO.rst", "usage/Index.rst", "usage/argsort.rst", "usage/arithmetic.rst", "usage/categorical.rst", "usage/creation.rst", "usage/dataframe.rst", "usage/groupby.rst", "usage/histogram.rst", "usage/indexing.rst", "usage/pdarray.rst", "usage/random.rst", "usage/segarray.rst", "usage/series.rst", "usage/setops.rst", "usage/startup.rst", "usage/strings.rst"], "indexentries": {"a() (arkouda.scipy.stats.chi2 method)": [[48, "arkouda.scipy.stats.chi2.a", false]], "abs() (arkouda.timeclass.timedelta method)": [[57, "arkouda.timeclass.Timedelta.abs", false]], "abs() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.abs", false], [26, "id798", false]], "abs() (in module arkouda)": [[26, "arkouda.abs", false], [90, "arkouda.abs", false]], "abs() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.abs", false]], "abs() (in module arkouda.numpy)": [[37, "arkouda.numpy.abs", false]], "abspath() (arkouda.datasource method)": [[26, "arkouda.DataSource.abspath", false]], "abspath() (arkouda.numpy.datasource method)": [[37, "arkouda.numpy.DataSource.abspath", false]], "acos() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.acos", false]], "acosh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.acosh", false]], "add() (arkouda.series method)": [[26, "arkouda.Series.add", false]], "add() (arkouda.series.series method)": [[51, "arkouda.series.Series.add", false]], "add() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.add", false]], "add_newdoc() (in module arkouda)": [[26, "arkouda.add_newdoc", false]], "add_newdoc() (in module arkouda.numpy)": [[37, "arkouda.numpy.add_newdoc", false]], "aggregate() (arkouda.groupby method)": [[26, "arkouda.GroupBy.aggregate", false], [26, "id258", false], [26, "id305", false], [26, "id352", false], [26, "id399", false], [26, "id446", false], [94, "arkouda.GroupBy.aggregate", false]], "aggregate() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.aggregate", false]], "aggregate() (arkouda.segarray method)": [[26, "arkouda.SegArray.aggregate", false]], "aggregate() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.aggregate", false]], "akabs() (in module arkouda)": [[26, "arkouda.akabs", false]], "akbool (class in arkouda)": [[26, "arkouda.akbool", false], [26, "id819", false]], "akcast() (in module arkouda)": [[26, "arkouda.akcast", false], [26, "id820", false]], "akfloat64 (class in arkouda)": [[26, "arkouda.akfloat64", false], [26, "id821", false]], "akint64 (class in arkouda)": [[26, "arkouda.akint64", false], [26, "id826", false], [26, "id828", false]], "akuint64 (class in arkouda)": [[26, "arkouda.akuint64", false], [26, "id830", false], [26, "id832", false]], "align() (in module arkouda)": [[26, "arkouda.align", false]], "align() (in module arkouda.alignment)": [[3, "arkouda.alignment.align", false]], "all() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.all", false]], "all() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.all", false], [26, "id124", false]], "all() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.all", false]], "all() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.all", false]], "all() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.all", false]], "all() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.all", false]], "all() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.all", false]], "all() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.all", false]], "all() (arkouda.groupby method)": [[26, "arkouda.GroupBy.all", false], [26, "id259", false], [26, "id306", false], [26, "id353", false], [26, "id400", false], [26, "id447", false], [94, "arkouda.GroupBy.all", false]], "all() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.all", false]], "all() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.all", false]], "all() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.all", false]], "all() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.all", false]], "all() (arkouda.pdarray method)": [[26, "arkouda.pdarray.all", false], [26, "id1001", false], [26, "id1072", false], [26, "id1143", false], [26, "id1214", false], [26, "id930", false], [95, "arkouda.pdarray.all", false]], "all() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.all", false]], "all() (arkouda.segarray method)": [[26, "arkouda.SegArray.all", false]], "all() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.all", false]], "all() (arkouda.str_ method)": [[26, "arkouda.str_.all", false], [26, "id1290", false]], "all() (in module arkouda)": [[90, "arkouda.all", false]], "all() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.all", false]], "all_scalars (class in arkouda)": [[26, "arkouda.all_scalars", false]], "all_scalars (class in arkouda.dtypes)": [[23, "arkouda.dtypes.all_scalars", false]], "all_scalars (class in arkouda.numpy)": [[37, "arkouda.numpy.all_scalars", false]], "all_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.all_scalars", false]], "allsymbols (in module arkouda)": [[26, "arkouda.AllSymbols", false]], "allsymbols (in module arkouda.infoclass)": [[28, "arkouda.infoclass.AllSymbols", false]], "and() (arkouda.groupby method)": [[26, "arkouda.GroupBy.AND", false], [26, "id254", false], [26, "id301", false], [26, "id348", false], [26, "id395", false], [26, "id442", false], [94, "arkouda.GroupBy.AND", false]], "and() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.AND", false]], "and() (arkouda.segarray method)": [[26, "arkouda.SegArray.AND", false]], "and() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.AND", false]], "annotations (class in arkouda.dtypes)": [[23, "arkouda.dtypes.annotations", false]], "annotations (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.annotations", false]], "any() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.any", false]], "any() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.any", false], [26, "id125", false]], "any() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.any", false]], "any() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.any", false]], "any() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.any", false]], "any() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.any", false]], "any() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.any", false]], "any() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.any", false]], "any() (arkouda.groupby method)": [[26, "arkouda.GroupBy.any", false], [26, "id260", false], [26, "id307", false], [26, "id354", false], [26, "id401", false], [26, "id448", false], [94, "arkouda.GroupBy.any", false]], "any() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.any", false]], "any() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.any", false]], "any() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.any", false]], "any() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.any", false]], "any() (arkouda.pdarray method)": [[26, "arkouda.pdarray.any", false], [26, "id1002", false], [26, "id1073", false], [26, "id1144", false], [26, "id1215", false], [26, "id931", false], [95, "arkouda.pdarray.any", false]], "any() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.any", false]], "any() (arkouda.segarray method)": [[26, "arkouda.SegArray.any", false]], "any() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.any", false]], "any() (arkouda.str_ method)": [[26, "arkouda.str_.any", false], [26, "id1291", false]], "any() (in module arkouda)": [[90, "arkouda.any", false]], "any() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.any", false]], "append() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.append", false], [26, "id126", false]], "append() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.append", false]], "append() (arkouda.segarray method)": [[26, "arkouda.SegArray.append", false]], "append() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.append", false]], "append() (in module arkouda.segarray)": [[99, "arkouda.SegArray.append", false]], "append_single() (arkouda.segarray method)": [[26, "arkouda.SegArray.append_single", false]], "append_single() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.append_single", false]], "append_single() (in module arkouda.segarray)": [[99, "arkouda.SegArray.append_single", false]], "apply() (in module arkouda)": [[26, "arkouda.apply", false]], "apply() (in module arkouda.apply)": [[4, "arkouda.apply.apply", false]], "apply_permutation() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.apply_permutation", false], [26, "id127", false]], "apply_permutation() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.apply_permutation", false]], "apply_permutation() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.apply_permutation", false]], "arange() (in module arkouda)": [[26, "arkouda.arange", false], [26, "id834", false], [26, "id835", false], [26, "id836", false], [26, "id837", false], [26, "id838", false], [92, "arkouda.arange", false]], "arange() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.arange", false]], "arange() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.arange", false]], "arccos() (in module arkouda)": [[26, "arkouda.arccos", false]], "arccos() (in module arkouda.numpy)": [[37, "arkouda.numpy.arccos", false]], "arccosh() (in module arkouda)": [[26, "arkouda.arccosh", false]], "arccosh() (in module arkouda.numpy)": [[37, "arkouda.numpy.arccosh", false]], "arcsin() (in module arkouda)": [[26, "arkouda.arcsin", false]], "arcsin() (in module arkouda.numpy)": [[37, "arkouda.numpy.arcsin", false]], "arcsinh() (in module arkouda)": [[26, "arkouda.arcsinh", false]], "arcsinh() (in module arkouda.numpy)": [[37, "arkouda.numpy.arcsinh", false]], "arctan() (in module arkouda)": [[26, "arkouda.arctan", false]], "arctan() (in module arkouda.numpy)": [[37, "arkouda.numpy.arctan", false]], "arctan2() (in module arkouda)": [[26, "arkouda.arctan2", false]], "arctan2() (in module arkouda.numpy)": [[37, "arkouda.numpy.arctan2", false]], "arctanh() (in module arkouda)": [[26, "arkouda.arctanh", false]], "arctanh() (in module arkouda.numpy)": [[37, "arkouda.numpy.arctanh", false]], "argmax() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.argmax", false]], "argmax() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.argmax", false]], "argmax() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.argmax", false]], "argmax() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.argmax", false]], "argmax() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.argmax", false]], "argmax() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.argmax", false]], "argmax() (arkouda.groupby method)": [[26, "arkouda.GroupBy.argmax", false], [26, "id261", false], [26, "id308", false], [26, "id355", false], [26, "id402", false], [26, "id449", false], [94, "arkouda.GroupBy.argmax", false]], "argmax() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.argmax", false]], "argmax() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.argmax", false]], "argmax() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.argmax", false]], "argmax() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.argmax", false]], "argmax() (arkouda.pdarray method)": [[26, "arkouda.pdarray.argmax", false], [26, "id1003", false], [26, "id1074", false], [26, "id1145", false], [26, "id1216", false], [26, "id932", false], [95, "arkouda.pdarray.argmax", false]], "argmax() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.argmax", false]], "argmax() (arkouda.segarray method)": [[26, "arkouda.SegArray.argmax", false]], "argmax() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.argmax", false]], "argmax() (arkouda.series method)": [[26, "arkouda.Series.argmax", false]], "argmax() (arkouda.series.series method)": [[51, "arkouda.series.Series.argmax", false]], "argmax() (arkouda.str_ method)": [[26, "arkouda.str_.argmax", false], [26, "id1292", false]], "argmax() (in module arkouda)": [[90, "arkouda.argmax", false]], "argmax() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.argmax", false]], "argmaxk() (arkouda.pdarray method)": [[26, "arkouda.pdarray.argmaxk", false], [26, "id1004", false], [26, "id1075", false], [26, "id1146", false], [26, "id1217", false], [26, "id933", false], [95, "arkouda.pdarray.argmaxk", false]], "argmaxk() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.argmaxk", false]], "argmaxk() (in module arkouda)": [[26, "arkouda.argmaxk", false], [90, "arkouda.argmaxk", false]], "argmaxk() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.argmaxk", false]], "argmin() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.argmin", false]], "argmin() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.argmin", false]], "argmin() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.argmin", false]], "argmin() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.argmin", false]], "argmin() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.argmin", false]], "argmin() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.argmin", false]], "argmin() (arkouda.groupby method)": [[26, "arkouda.GroupBy.argmin", false], [26, "id262", false], [26, "id309", false], [26, "id356", false], [26, "id403", false], [26, "id450", false], [94, "arkouda.GroupBy.argmin", false]], "argmin() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.argmin", false]], "argmin() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.argmin", false]], "argmin() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.argmin", false]], "argmin() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.argmin", false]], "argmin() (arkouda.pdarray method)": [[26, "arkouda.pdarray.argmin", false], [26, "id1005", false], [26, "id1076", false], [26, "id1147", false], [26, "id1218", false], [26, "id934", false], [95, "arkouda.pdarray.argmin", false]], "argmin() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.argmin", false]], "argmin() (arkouda.segarray method)": [[26, "arkouda.SegArray.argmin", false]], "argmin() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.argmin", false]], "argmin() (arkouda.series method)": [[26, "arkouda.Series.argmin", false]], "argmin() (arkouda.series.series method)": [[51, "arkouda.series.Series.argmin", false]], "argmin() (arkouda.str_ method)": [[26, "arkouda.str_.argmin", false], [26, "id1293", false]], "argmin() (in module arkouda)": [[90, "arkouda.argmin", false]], "argmin() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.argmin", false]], "argmink() (arkouda.pdarray method)": [[26, "arkouda.pdarray.argmink", false], [26, "id1006", false], [26, "id1077", false], [26, "id1148", false], [26, "id1219", false], [26, "id935", false], [95, "arkouda.pdarray.argmink", false]], "argmink() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.argmink", false]], "argmink() (in module arkouda)": [[26, "arkouda.argmink", false], [90, "arkouda.argmink", false]], "argmink() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.argmink", false]], "argsort() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.argsort", false]], "argsort() (arkouda.categorical method)": [[26, "arkouda.Categorical.argsort", false], [26, "id18", false], [26, "id76", false]], "argsort() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.argsort", false]], "argsort() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.argsort", false], [26, "id128", false]], "argsort() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.argsort", false]], "argsort() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.argsort", false]], "argsort() (arkouda.index method)": [[26, "arkouda.Index.argsort", false]], "argsort() (arkouda.index.index method)": [[27, "arkouda.index.Index.argsort", false]], "argsort() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.argsort", false]], "argsort() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.argsort", false]], "argsort() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.argsort", false]], "argsort() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.argsort", false]], "argsort() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.argsort", false]], "argsort() (arkouda.str_ method)": [[26, "arkouda.str_.argsort", false], [26, "id1294", false]], "argsort() (in module arkouda)": [[26, "arkouda.argsort", false], [26, "id839", false], [26, "id840", false], [89, "arkouda.argsort", false]], "argsort() (in module arkouda.array_api.sorting_functions)": [[15, "arkouda.array_api.sorting_functions.argsort", false]], "argsort() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.argsort", false]], "argsort() (in module arkouda.index)": [[88, "arkouda.Index.argsort", false]], "argsort() (in module arkouda.multiindex)": [[88, "arkouda.MultiIndex.argsort", false]], "argsort() (in module arkouda.sorting)": [[52, "arkouda.sorting.argsort", false]], "arkouda": [[26, "module-arkouda", false]], "arkouda.accessor": [[2, "module-arkouda.accessor", false]], "arkouda.alignment": [[3, "module-arkouda.alignment", false]], "arkouda.apply": [[4, "module-arkouda.apply", false]], "arkouda.array_api": [[9, "module-arkouda.array_api", false]], "arkouda.array_api.array_object": [[5, "module-arkouda.array_api.array_object", false]], "arkouda.array_api.creation_functions": [[6, "module-arkouda.array_api.creation_functions", false]], "arkouda.array_api.data_type_functions": [[7, "module-arkouda.array_api.data_type_functions", false]], "arkouda.array_api.elementwise_functions": [[8, "module-arkouda.array_api.elementwise_functions", false]], "arkouda.array_api.indexing_functions": [[10, "module-arkouda.array_api.indexing_functions", false]], "arkouda.array_api.linalg": [[11, "module-arkouda.array_api.linalg", false]], "arkouda.array_api.manipulation_functions": [[12, "module-arkouda.array_api.manipulation_functions", false]], "arkouda.array_api.searching_functions": [[13, "module-arkouda.array_api.searching_functions", false]], "arkouda.array_api.set_functions": [[14, "module-arkouda.array_api.set_functions", false]], "arkouda.array_api.sorting_functions": [[15, "module-arkouda.array_api.sorting_functions", false]], "arkouda.array_api.statistical_functions": [[16, "module-arkouda.array_api.statistical_functions", false]], "arkouda.array_api.utility_functions": [[17, "module-arkouda.array_api.utility_functions", false]], "arkouda.categorical": [[18, "module-arkouda.categorical", false]], "arkouda.client": [[19, "module-arkouda.client", false]], "arkouda.client_dtypes": [[20, "module-arkouda.client_dtypes", false]], "arkouda.comm_diagnostics": [[21, "module-arkouda.comm_diagnostics", false]], "arkouda.dataframe": [[22, "module-arkouda.dataframe", false]], "arkouda.dtypes": [[23, "module-arkouda.dtypes", false]], "arkouda.groupbyclass": [[24, "module-arkouda.groupbyclass", false]], "arkouda.history": [[25, "module-arkouda.history", false]], "arkouda.index": [[27, "module-arkouda.index", false]], "arkouda.infoclass": [[28, "module-arkouda.infoclass", false]], "arkouda.io": [[29, "module-arkouda.io", false]], "arkouda.io_util": [[30, "module-arkouda.io_util", false]], "arkouda.join": [[31, "module-arkouda.join", false]], "arkouda.logger": [[32, "module-arkouda.logger", false]], "arkouda.match": [[33, "module-arkouda.match", false]], "arkouda.matcher": [[34, "module-arkouda.matcher", false]], "arkouda.numeric": [[35, "module-arkouda.numeric", false]], "arkouda.numpy": [[37, "module-arkouda.numpy", false]], "arkouda.numpy.dtypes": [[36, "module-arkouda.numpy.dtypes", false]], "arkouda.numpy.random": [[38, "module-arkouda.numpy.random", false]], "arkouda.pdarrayclass": [[39, "module-arkouda.pdarrayclass", false]], "arkouda.pdarraycreation": [[40, "module-arkouda.pdarraycreation", false]], "arkouda.pdarraymanipulation": [[41, "module-arkouda.pdarraymanipulation", false]], "arkouda.pdarraysetops": [[42, "module-arkouda.pdarraysetops", false]], "arkouda.plotting": [[43, "module-arkouda.plotting", false]], "arkouda.random": [[44, "module-arkouda.random", false]], "arkouda.row": [[45, "module-arkouda.row", false]], "arkouda.scipy": [[46, "module-arkouda.scipy", false]], "arkouda.scipy.special": [[47, "module-arkouda.scipy.special", false]], "arkouda.scipy.stats": [[48, "module-arkouda.scipy.stats", false]], "arkouda.security": [[49, "module-arkouda.security", false]], "arkouda.segarray": [[50, "module-arkouda.segarray", false]], "arkouda.series": [[51, "module-arkouda.series", false]], "arkouda.sorting": [[52, "module-arkouda.sorting", false]], "arkouda.sparrayclass": [[53, "module-arkouda.sparrayclass", false]], "arkouda.sparsematrix": [[54, "module-arkouda.sparsematrix", false]], "arkouda.strings": [[55, "module-arkouda.strings", false]], "arkouda.testing": [[56, "module-arkouda.testing", false]], "arkouda.timeclass": [[57, "module-arkouda.timeclass", false]], "arkouda.util": [[58, "module-arkouda.util", false]], "arkouda_supported_bools (class in arkouda.dtypes)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_BOOLS", false]], "arkouda_supported_bools (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_BOOLS", false]], "arkouda_supported_dtypes (class in arkouda)": [[26, "arkouda.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (class in arkouda.dtypes)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (class in arkouda.numpy)": [[37, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_dtypes (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES", false]], "arkouda_supported_floats (class in arkouda.dtypes)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_FLOATS", false]], "arkouda_supported_floats (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS", false]], "arkouda_supported_ints (class in arkouda)": [[26, "arkouda.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_ints (class in arkouda.dtypes)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_ints (class in arkouda.numpy)": [[37, "arkouda.numpy.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_ints (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS", false]], "arkouda_supported_numbers (class in arkouda.dtypes)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_NUMBERS", false]], "arkouda_supported_numbers (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS", false]], "array (class in arkouda.array_api)": [[9, "arkouda.array_api.Array", false]], "array (class in arkouda.array_api.array_object)": [[5, "arkouda.array_api.array_object.Array", false]], "array() (in module arkouda)": [[26, "arkouda.array", false], [26, "id841", false], [26, "id842", false], [26, "id843", false], [87, "arkouda.array", false]], "array() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.array", false]], "array_equal() (in module arkouda)": [[26, "arkouda.array_equal", false]], "array_equal() (in module arkouda.numpy)": [[37, "arkouda.numpy.array_equal", false]], "as_index (arkouda.dataframe.dataframegroupby attribute)": [[22, "arkouda.dataframe.DataFrameGroupBy.as_index", false]], "as_index (arkouda.dataframegroupby attribute)": [[26, "arkouda.DataFrameGroupBy.as_index", false]], "as_integer_ratio() (arkouda.akfloat64 method)": [[26, "arkouda.akfloat64.as_integer_ratio", false], [26, "id822", false]], "as_integer_ratio() (arkouda.double method)": [[26, "arkouda.double.as_integer_ratio", false]], "as_integer_ratio() (arkouda.dtypes.float16 method)": [[23, "arkouda.dtypes.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.dtypes.float32 method)": [[23, "arkouda.dtypes.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.dtypes.float64 method)": [[23, "arkouda.dtypes.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float16 method)": [[26, "arkouda.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float32 method)": [[26, "arkouda.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float64 method)": [[26, "arkouda.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.float_ method)": [[26, "arkouda.float_.as_integer_ratio", false]], "as_integer_ratio() (arkouda.half method)": [[26, "arkouda.half.as_integer_ratio", false]], "as_integer_ratio() (arkouda.longdouble method)": [[26, "arkouda.longdouble.as_integer_ratio", false]], "as_integer_ratio() (arkouda.longfloat method)": [[26, "arkouda.longfloat.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.double method)": [[37, "arkouda.numpy.double.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.dtypes.float16 method)": [[36, "arkouda.numpy.dtypes.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.dtypes.float32 method)": [[36, "arkouda.numpy.dtypes.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.dtypes.float64 method)": [[36, "arkouda.numpy.dtypes.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float16 method)": [[37, "arkouda.numpy.float16.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float32 method)": [[37, "arkouda.numpy.float32.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float64 method)": [[37, "arkouda.numpy.float64.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.float_ method)": [[37, "arkouda.numpy.float_.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.half method)": [[37, "arkouda.numpy.half.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.longdouble method)": [[37, "arkouda.numpy.longdouble.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.longfloat method)": [[37, "arkouda.numpy.longfloat.as_integer_ratio", false]], "as_integer_ratio() (arkouda.numpy.single method)": [[37, "arkouda.numpy.single.as_integer_ratio", false]], "as_integer_ratio() (arkouda.single method)": [[26, "arkouda.single.as_integer_ratio", false]], "asarray() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.asarray", false]], "asin() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.asin", false]], "asinh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.asinh", false]], "assert_almost_equal() (in module arkouda)": [[26, "arkouda.assert_almost_equal", false]], "assert_almost_equal() (in module arkouda.testing)": [[56, "arkouda.testing.assert_almost_equal", false]], "assert_almost_equivalent() (in module arkouda)": [[26, "arkouda.assert_almost_equivalent", false]], "assert_almost_equivalent() (in module arkouda.testing)": [[56, "arkouda.testing.assert_almost_equivalent", false]], "assert_arkouda_array_equal() (in module arkouda)": [[26, "arkouda.assert_arkouda_array_equal", false]], "assert_arkouda_array_equal() (in module arkouda.testing)": [[56, "arkouda.testing.assert_arkouda_array_equal", false]], "assert_arkouda_array_equivalent() (in module arkouda)": [[26, "arkouda.assert_arkouda_array_equivalent", false]], "assert_arkouda_array_equivalent() (in module arkouda.testing)": [[56, "arkouda.testing.assert_arkouda_array_equivalent", false]], "assert_arkouda_pdarray_equal() (in module arkouda)": [[26, "arkouda.assert_arkouda_pdarray_equal", false]], "assert_arkouda_pdarray_equal() (in module arkouda.testing)": [[56, "arkouda.testing.assert_arkouda_pdarray_equal", false]], "assert_arkouda_segarray_equal() (in module arkouda)": [[26, "arkouda.assert_arkouda_segarray_equal", false]], "assert_arkouda_segarray_equal() (in module arkouda.testing)": [[56, "arkouda.testing.assert_arkouda_segarray_equal", false]], "assert_arkouda_strings_equal() (in module arkouda)": [[26, "arkouda.assert_arkouda_strings_equal", false]], "assert_arkouda_strings_equal() (in module arkouda.testing)": [[56, "arkouda.testing.assert_arkouda_strings_equal", false]], "assert_attr_equal() (in module arkouda)": [[26, "arkouda.assert_attr_equal", false]], "assert_attr_equal() (in module arkouda.testing)": [[56, "arkouda.testing.assert_attr_equal", false]], "assert_categorical_equal() (in module arkouda)": [[26, "arkouda.assert_categorical_equal", false]], "assert_categorical_equal() (in module arkouda.testing)": [[56, "arkouda.testing.assert_categorical_equal", false]], "assert_class_equal() (in module arkouda)": [[26, "arkouda.assert_class_equal", false]], "assert_class_equal() (in module arkouda.testing)": [[56, "arkouda.testing.assert_class_equal", false]], "assert_contains_all() (in module arkouda)": [[26, "arkouda.assert_contains_all", false]], "assert_contains_all() (in module arkouda.testing)": [[56, "arkouda.testing.assert_contains_all", false]], "assert_copy() (in module arkouda)": [[26, "arkouda.assert_copy", false]], "assert_copy() (in module arkouda.testing)": [[56, "arkouda.testing.assert_copy", false]], "assert_dict_equal() (in module arkouda)": [[26, "arkouda.assert_dict_equal", false]], "assert_dict_equal() (in module arkouda.testing)": [[56, "arkouda.testing.assert_dict_equal", false]], "assert_equal() (in module arkouda)": [[26, "arkouda.assert_equal", false]], "assert_equal() (in module arkouda.testing)": [[56, "arkouda.testing.assert_equal", false]], "assert_equivalent() (in module arkouda)": [[26, "arkouda.assert_equivalent", false]], "assert_equivalent() (in module arkouda.testing)": [[56, "arkouda.testing.assert_equivalent", false]], "assert_frame_equal() (in module arkouda)": [[26, "arkouda.assert_frame_equal", false]], "assert_frame_equal() (in module arkouda.testing)": [[56, "arkouda.testing.assert_frame_equal", false]], "assert_frame_equivalent() (in module arkouda)": [[26, "arkouda.assert_frame_equivalent", false]], "assert_frame_equivalent() (in module arkouda.testing)": [[56, "arkouda.testing.assert_frame_equivalent", false]], "assert_index_equal() (in module arkouda)": [[26, "arkouda.assert_index_equal", false]], "assert_index_equal() (in module arkouda.testing)": [[56, "arkouda.testing.assert_index_equal", false]], "assert_index_equivalent() (in module arkouda)": [[26, "arkouda.assert_index_equivalent", false]], "assert_index_equivalent() (in module arkouda.testing)": [[56, "arkouda.testing.assert_index_equivalent", false]], "assert_is_sorted() (in module arkouda)": [[26, "arkouda.assert_is_sorted", false]], "assert_is_sorted() (in module arkouda.testing)": [[56, "arkouda.testing.assert_is_sorted", false]], "assert_series_equal() (in module arkouda)": [[26, "arkouda.assert_series_equal", false]], "assert_series_equal() (in module arkouda.testing)": [[56, "arkouda.testing.assert_series_equal", false]], "assert_series_equivalent() (in module arkouda)": [[26, "arkouda.assert_series_equivalent", false]], "assert_series_equivalent() (in module arkouda.testing)": [[56, "arkouda.testing.assert_series_equivalent", false]], "assign() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.assign", false], [26, "id129", false]], "assign() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.assign", false]], "astype() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.astype", false]], "astype() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.astype", false]], "astype() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.astype", false]], "astype() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.astype", false]], "astype() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.astype", false]], "astype() (arkouda.pdarray method)": [[26, "arkouda.pdarray.astype", false], [26, "id1007", false], [26, "id1078", false], [26, "id1149", false], [26, "id1220", false], [26, "id936", false]], "astype() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.astype", false]], "astype() (arkouda.str_ method)": [[26, "arkouda.str_.astype", false], [26, "id1295", false]], "astype() (arkouda.strings method)": [[26, "arkouda.Strings.astype", false], [26, "id502", false], [26, "id578", false], [26, "id654", false], [26, "id730", false]], "astype() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.astype", false]], "astype() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.astype", false]], "at (arkouda.series property)": [[26, "arkouda.Series.at", false]], "at (arkouda.series.series property)": [[51, "arkouda.series.Series.at", false]], "atan() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.atan", false]], "atan2() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.atan2", false]], "atanh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.atanh", false]], "attach() (arkouda.categorical static method)": [[26, "arkouda.Categorical.attach", false], [26, "id19", false], [26, "id77", false]], "attach() (arkouda.categorical.categorical static method)": [[18, "arkouda.categorical.Categorical.attach", false]], "attach() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.attach", false], [26, "id130", false]], "attach() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.attach", false]], "attach() (arkouda.groupby method)": [[26, "arkouda.GroupBy.attach", false], [26, "id263", false], [26, "id310", false], [26, "id357", false], [26, "id404", false], [26, "id451", false]], "attach() (arkouda.groupby static method)": [[94, "arkouda.GroupBy.attach", false]], "attach() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.attach", false]], "attach() (arkouda.pdarray static method)": [[26, "arkouda.pdarray.attach", false], [26, "id1008", false], [26, "id1079", false], [26, "id1150", false], [26, "id1221", false], [26, "id937", false]], "attach() (arkouda.pdarrayclass.pdarray static method)": [[39, "arkouda.pdarrayclass.pdarray.attach", false]], "attach() (arkouda.segarray class method)": [[26, "arkouda.SegArray.attach", false]], "attach() (arkouda.segarray.segarray class method)": [[50, "arkouda.segarray.SegArray.attach", false]], "attach() (arkouda.series method)": [[26, "arkouda.Series.attach", false]], "attach() (arkouda.series.series method)": [[51, "arkouda.series.Series.attach", false]], "attach() (arkouda.strings static method)": [[26, "arkouda.Strings.attach", false], [26, "id503", false], [26, "id579", false], [26, "id655", false], [26, "id731", false]], "attach() (arkouda.strings.strings static method)": [[55, "arkouda.strings.Strings.attach", false]], "attach() (in module arkouda)": [[26, "arkouda.attach", false]], "attach() (in module arkouda.util)": [[58, "arkouda.util.attach", false]], "attach_all() (in module arkouda)": [[26, "arkouda.attach_all", false]], "attach_all() (in module arkouda.util)": [[58, "arkouda.util.attach_all", false]], "attach_pdarray() (in module arkouda)": [[26, "arkouda.attach_pdarray", false]], "attach_pdarray() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.attach_pdarray", false]], "b() (arkouda.scipy.stats.chi2 method)": [[48, "arkouda.scipy.stats.chi2.b", false]], "badvalue() (arkouda.scipy.stats.chi2 method)": [[48, "arkouda.scipy.stats.chi2.badvalue", false]], "base() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.base", false]], "base() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.base", false]], "base() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.base", false]], "base() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.base", false]], "base() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.base", false]], "base() (arkouda.str_ method)": [[26, "arkouda.str_.base", false], [26, "id1296", false]], "base_repr() (in module arkouda)": [[26, "arkouda.base_repr", false]], "base_repr() (in module arkouda.numpy)": [[37, "arkouda.numpy.base_repr", false]], "bigint (class in arkouda)": [[26, "arkouda.bigint", false], [26, "id844", false]], "bigint (class in arkouda.dtypes)": [[23, "arkouda.dtypes.bigint", false]], "bigint (class in arkouda.numpy)": [[37, "arkouda.numpy.bigint", false]], "bigint (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.bigint", false]], "bigint() (arkouda.dtype method)": [[26, "arkouda.DType.BIGINT", false]], "bigint() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.BIGINT", false]], "bigint() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.BIGINT", false]], "bigint() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.BIGINT", false]], "bigint_from_uint_arrays() (in module arkouda)": [[26, "arkouda.bigint_from_uint_arrays", false]], "bigint_from_uint_arrays() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.bigint_from_uint_arrays", false]], "bigint_to_uint_arrays() (arkouda.pdarray method)": [[26, "arkouda.pdarray.bigint_to_uint_arrays", false], [26, "id1009", false], [26, "id1080", false], [26, "id1151", false], [26, "id1222", false], [26, "id938", false]], "bigint_to_uint_arrays() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.bigint_to_uint_arrays", false]], "binary_repr() (in module arkouda)": [[26, "arkouda.binary_repr", false]], "binary_repr() (in module arkouda.numpy)": [[37, "arkouda.numpy.binary_repr", false]], "binops (arkouda.categorical attribute)": [[26, "arkouda.Categorical.BinOps", false], [26, "id15", false], [26, "id73", false]], "binops (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.BinOps", false]], "binops (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.BinOps", false], [26, "id1070", false], [26, "id1141", false], [26, "id1212", false], [26, "id928", false], [26, "id999", false]], "binops (arkouda.pdarrayclass.pdarray attribute)": [[39, "arkouda.pdarrayclass.pdarray.BinOps", false]], "binops (arkouda.strings attribute)": [[26, "arkouda.Strings.BinOps", false], [26, "id501", false], [26, "id577", false], [26, "id653", false], [26, "id729", false]], "binops (arkouda.strings.strings attribute)": [[55, "arkouda.strings.Strings.BinOps", false]], "bit_count() (arkouda.akint64 method)": [[26, "arkouda.akint64.bit_count", false], [26, "id827", false], [26, "id829", false]], "bit_count() (arkouda.akuint64 method)": [[26, "arkouda.akuint64.bit_count", false], [26, "id831", false], [26, "id833", false]], "bit_count() (arkouda.bittype method)": [[26, "arkouda.bitType.bit_count", false], [26, "id853", false]], "bit_count() (arkouda.byte method)": [[26, "arkouda.byte.bit_count", false]], "bit_count() (arkouda.dtypes.bittype method)": [[23, "arkouda.dtypes.bitType.bit_count", false]], "bit_count() (arkouda.dtypes.int16 method)": [[23, "arkouda.dtypes.int16.bit_count", false]], "bit_count() (arkouda.dtypes.int32 method)": [[23, "arkouda.dtypes.int32.bit_count", false]], "bit_count() (arkouda.dtypes.int64 method)": [[23, "arkouda.dtypes.int64.bit_count", false]], "bit_count() (arkouda.dtypes.int8 method)": [[23, "arkouda.dtypes.int8.bit_count", false]], "bit_count() (arkouda.dtypes.uint16 method)": [[23, "arkouda.dtypes.uint16.bit_count", false]], "bit_count() (arkouda.dtypes.uint32 method)": [[23, "arkouda.dtypes.uint32.bit_count", false]], "bit_count() (arkouda.dtypes.uint64 method)": [[23, "arkouda.dtypes.uint64.bit_count", false]], "bit_count() (arkouda.dtypes.uint8 method)": [[23, "arkouda.dtypes.uint8.bit_count", false]], "bit_count() (arkouda.int16 method)": [[26, "arkouda.int16.bit_count", false]], "bit_count() (arkouda.int32 method)": [[26, "arkouda.int32.bit_count", false]], "bit_count() (arkouda.int64 method)": [[26, "arkouda.int64.bit_count", false], [26, "id885", false]], "bit_count() (arkouda.int8 method)": [[26, "arkouda.int8.bit_count", false]], "bit_count() (arkouda.int_ method)": [[26, "arkouda.int_.bit_count", false]], "bit_count() (arkouda.intc method)": [[26, "arkouda.intc.bit_count", false]], "bit_count() (arkouda.intp method)": [[26, "arkouda.intp.bit_count", false]], "bit_count() (arkouda.longlong method)": [[26, "arkouda.longlong.bit_count", false]], "bit_count() (arkouda.numpy.bittype method)": [[37, "arkouda.numpy.bitType.bit_count", false]], "bit_count() (arkouda.numpy.byte method)": [[37, "arkouda.numpy.byte.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.bittype method)": [[36, "arkouda.numpy.dtypes.bitType.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int16 method)": [[36, "arkouda.numpy.dtypes.int16.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int32 method)": [[36, "arkouda.numpy.dtypes.int32.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int64 method)": [[36, "arkouda.numpy.dtypes.int64.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.int8 method)": [[36, "arkouda.numpy.dtypes.int8.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint16 method)": [[36, "arkouda.numpy.dtypes.uint16.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint32 method)": [[36, "arkouda.numpy.dtypes.uint32.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint64 method)": [[36, "arkouda.numpy.dtypes.uint64.bit_count", false]], "bit_count() (arkouda.numpy.dtypes.uint8 method)": [[36, "arkouda.numpy.dtypes.uint8.bit_count", false]], "bit_count() (arkouda.numpy.int16 method)": [[37, "arkouda.numpy.int16.bit_count", false]], "bit_count() (arkouda.numpy.int32 method)": [[37, "arkouda.numpy.int32.bit_count", false]], "bit_count() (arkouda.numpy.int64 method)": [[37, "arkouda.numpy.int64.bit_count", false]], "bit_count() (arkouda.numpy.int8 method)": [[37, "arkouda.numpy.int8.bit_count", false]], "bit_count() (arkouda.numpy.int_ method)": [[37, "arkouda.numpy.int_.bit_count", false]], "bit_count() (arkouda.numpy.intc method)": [[37, "arkouda.numpy.intc.bit_count", false]], "bit_count() (arkouda.numpy.intp method)": [[37, "arkouda.numpy.intp.bit_count", false]], "bit_count() (arkouda.numpy.longlong method)": [[37, "arkouda.numpy.longlong.bit_count", false]], "bit_count() (arkouda.numpy.short method)": [[37, "arkouda.numpy.short.bit_count", false]], "bit_count() (arkouda.numpy.ubyte method)": [[37, "arkouda.numpy.ubyte.bit_count", false]], "bit_count() (arkouda.numpy.uint method)": [[37, "arkouda.numpy.uint.bit_count", false]], "bit_count() (arkouda.numpy.uint16 method)": [[37, "arkouda.numpy.uint16.bit_count", false]], "bit_count() (arkouda.numpy.uint32 method)": [[37, "arkouda.numpy.uint32.bit_count", false]], "bit_count() (arkouda.numpy.uint64 method)": [[37, "arkouda.numpy.uint64.bit_count", false]], "bit_count() (arkouda.numpy.uint8 method)": [[37, "arkouda.numpy.uint8.bit_count", false]], "bit_count() (arkouda.numpy.uintc method)": [[37, "arkouda.numpy.uintc.bit_count", false]], "bit_count() (arkouda.numpy.uintp method)": [[37, "arkouda.numpy.uintp.bit_count", false]], "bit_count() (arkouda.numpy.ulonglong method)": [[37, "arkouda.numpy.ulonglong.bit_count", false]], "bit_count() (arkouda.numpy.ushort method)": [[37, "arkouda.numpy.ushort.bit_count", false]], "bit_count() (arkouda.short method)": [[26, "arkouda.short.bit_count", false]], "bit_count() (arkouda.ubyte method)": [[26, "arkouda.ubyte.bit_count", false]], "bit_count() (arkouda.uint method)": [[26, "arkouda.uint.bit_count", false]], "bit_count() (arkouda.uint16 method)": [[26, "arkouda.uint16.bit_count", false]], "bit_count() (arkouda.uint32 method)": [[26, "arkouda.uint32.bit_count", false]], "bit_count() (arkouda.uint64 method)": [[26, "arkouda.uint64.bit_count", false]], "bit_count() (arkouda.uint8 method)": [[26, "arkouda.uint8.bit_count", false]], "bit_count() (arkouda.uintc method)": [[26, "arkouda.uintc.bit_count", false]], "bit_count() (arkouda.uintp method)": [[26, "arkouda.uintp.bit_count", false]], "bit_count() (arkouda.ulonglong method)": [[26, "arkouda.ulonglong.bit_count", false]], "bit_count() (arkouda.ushort method)": [[26, "arkouda.ushort.bit_count", false]], "bits (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.bits", false]], "bits (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.iinfo_object.bits", false]], "bits (arkouda.finfo attribute)": [[26, "arkouda.finfo.bits", false]], "bits (arkouda.iinfo attribute)": [[26, "arkouda.iinfo.bits", false]], "bits (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.bits", false]], "bits (arkouda.numpy.iinfo attribute)": [[37, "arkouda.numpy.iinfo.bits", false]], "bittype (class in arkouda)": [[26, "arkouda.bitType", false], [26, "id852", false]], "bittype (class in arkouda.dtypes)": [[23, "arkouda.dtypes.bitType", false]], "bittype (class in arkouda.numpy)": [[37, "arkouda.numpy.bitType", false]], "bittype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.bitType", false]], "bitvector (class in arkouda)": [[26, "arkouda.BitVector", false]], "bitvector (class in arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.BitVector", false]], "bitvectorizer() (in module arkouda)": [[26, "arkouda.BitVectorizer", false]], "bitvectorizer() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.BitVectorizer", false]], "bitwise_and() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_and", false]], "bitwise_invert() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_invert", false]], "bitwise_left_shift() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_left_shift", false]], "bitwise_or() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_or", false]], "bitwise_right_shift() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_right_shift", false]], "bitwise_xor() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.bitwise_xor", false]], "bool() (arkouda.dtype method)": [[26, "arkouda.DType.BOOL", false]], "bool() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.BOOL", false]], "bool() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.BOOL", false]], "bool() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.BOOL", false]], "bool_ (class in arkouda)": [[26, "arkouda.bool_", false]], "bool_ (class in arkouda.dtypes)": [[23, "arkouda.dtypes.bool_", false]], "bool_ (class in arkouda.numpy)": [[37, "arkouda.numpy.bool_", false]], "bool_ (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.bool_", false]], "bool_scalars (class in arkouda)": [[26, "arkouda.bool_scalars", false], [26, "id854", false]], "bool_scalars (class in arkouda.dtypes)": [[23, "arkouda.dtypes.bool_scalars", false]], "bool_scalars (class in arkouda.numpy)": [[37, "arkouda.numpy.bool_scalars", false]], "bool_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.bool_scalars", false]], "booldtype (class in arkouda)": [[26, "arkouda.BoolDType", false]], "booldtype (class in arkouda.numpy)": [[37, "arkouda.numpy.BoolDType", false]], "broadcast() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.broadcast", false]], "broadcast() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.broadcast", false]], "broadcast() (arkouda.groupby method)": [[26, "arkouda.GroupBy.broadcast", false], [26, "id264", false], [26, "id311", false], [26, "id358", false], [26, "id405", false], [26, "id452", false], [94, "arkouda.GroupBy.broadcast", false]], "broadcast() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.broadcast", false]], "broadcast() (in module arkouda)": [[26, "arkouda.broadcast", false], [26, "id855", false], [26, "id856", false], [26, "id857", false]], "broadcast() (in module arkouda.groupbyclass)": [[24, "arkouda.groupbyclass.broadcast", false]], "broadcast_arrays() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.broadcast_arrays", false]], "broadcast_dims() (in module arkouda)": [[26, "arkouda.broadcast_dims", false]], "broadcast_dims() (in module arkouda.util)": [[58, "arkouda.util.broadcast_dims", false]], "broadcast_to() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.broadcast_to", false]], "broadcast_to_shape() (in module arkouda)": [[26, "arkouda.broadcast_to_shape", false]], "broadcast_to_shape() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.broadcast_to_shape", false]], "build_from_components() (arkouda.groupby method)": [[26, "arkouda.GroupBy.build_from_components", false], [26, "id265", false], [26, "id312", false], [26, "id359", false], [26, "id406", false], [26, "id453", false]], "build_from_components() (arkouda.groupby static method)": [[94, "arkouda.GroupBy.build_from_components", false]], "build_from_components() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.build_from_components", false]], "byte (class in arkouda)": [[26, "arkouda.byte", false]], "byte (class in arkouda.numpy)": [[37, "arkouda.numpy.byte", false]], "bytedtype (class in arkouda)": [[26, "arkouda.ByteDType", false]], "bytedtype (class in arkouda.numpy)": [[37, "arkouda.numpy.ByteDType", false]], "bytes_ (class in arkouda)": [[26, "arkouda.bytes_", false]], "bytes_ (class in arkouda.numpy)": [[37, "arkouda.numpy.bytes_", false]], "bytesdtype (class in arkouda)": [[26, "arkouda.BytesDType", false]], "bytesdtype (class in arkouda.numpy)": [[37, "arkouda.numpy.BytesDType", false]], "byteswap() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.byteswap", false]], "byteswap() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.byteswap", false]], "byteswap() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.byteswap", false]], "byteswap() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.byteswap", false]], "byteswap() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.byteswap", false]], "byteswap() (arkouda.str_ method)": [[26, "arkouda.str_.byteswap", false], [26, "id1297", false]], "cached_regex_patterns() (arkouda.strings method)": [[26, "arkouda.Strings.cached_regex_patterns", false], [26, "id504", false], [26, "id580", false], [26, "id656", false], [26, "id732", false]], "cached_regex_patterns() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.cached_regex_patterns", false]], "cachedaccessor (class in arkouda)": [[26, "arkouda.CachedAccessor", false]], "cachedaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.CachedAccessor", false]], "can_cast() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.can_cast", false]], "capitalize() (arkouda.strings method)": [[26, "arkouda.Strings.capitalize", false], [26, "id505", false], [26, "id581", false], [26, "id657", false], [26, "id733", false]], "capitalize() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.capitalize", false]], "cast() (in module arkouda)": [[26, "arkouda.cast", false], [26, "id858", false], [97, "arkouda.cast", false]], "cast() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.cast", false]], "cast() (in module arkouda.numpy)": [[37, "arkouda.numpy.cast", false]], "cast() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.cast", false]], "categorical (class in arkouda)": [[26, "arkouda.Categorical", false], [26, "id6", false], [26, "id64", false], [91, "arkouda.Categorical", false]], "categorical (class in arkouda.categorical)": [[18, "arkouda.categorical.Categorical", false]], "categories (arkouda.categorical attribute)": [[26, "arkouda.Categorical.categories", false], [26, "id65", false], [26, "id7", false], [91, "arkouda.Categorical.categories", false]], "categories (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.categories", false]], "cdouble (class in arkouda)": [[26, "arkouda.cdouble", false]], "cdouble (class in arkouda.numpy)": [[37, "arkouda.numpy.cdouble", false]], "ceil() (in module arkouda)": [[26, "arkouda.ceil", false]], "ceil() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.ceil", false]], "ceil() (in module arkouda.numpy)": [[37, "arkouda.numpy.ceil", false]], "cfloat (class in arkouda)": [[26, "arkouda.cfloat", false]], "cfloat (class in arkouda.numpy)": [[37, "arkouda.numpy.cfloat", false]], "character (class in arkouda)": [[26, "arkouda.character", false]], "character (class in arkouda.numpy)": [[37, "arkouda.numpy.character", false]], "chi2 (class in arkouda.scipy.stats)": [[48, "arkouda.scipy.stats.chi2", false]], "chisquare() (in module arkouda)": [[26, "arkouda.chisquare", false]], "chisquare() (in module arkouda.scipy)": [[46, "arkouda.scipy.chisquare", false]], "choice() (arkouda.numpy.random.generator method)": [[38, "arkouda.numpy.random.Generator.choice", false]], "choice() (arkouda.random.generator method)": [[44, "arkouda.random.Generator.choice", false]], "choice() (in module arkouda.random.generator)": [[98, "arkouda.random.Generator.choice", false]], "choose() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.choose", false]], "choose() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.choose", false]], "choose() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.choose", false]], "choose() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.choose", false]], "choose() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.choose", false]], "choose() (arkouda.str_ method)": [[26, "arkouda.str_.choose", false], [26, "id1298", false]], "chunk_info() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.chunk_info", false]], "chunk_info() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.chunk_info", false]], "clear() (arkouda.dtypes.number_format_strings method)": [[23, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.dtypes.seriesdtypes method)": [[23, "arkouda.dtypes.SeriesDTypes.clear", false]], "clear() (arkouda.number_format_strings method)": [[26, "arkouda.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.clear", false]], "clear() (arkouda.numpy.number_format_strings method)": [[37, "arkouda.numpy.NUMBER_FORMAT_STRINGS.clear", false]], "clear() (arkouda.numpy.sctypedict method)": [[37, "arkouda.numpy.sctypeDict.clear", false]], "clear() (arkouda.numpy.sctypes method)": [[37, "arkouda.numpy.sctypes.clear", false]], "clear() (arkouda.numpy.seriesdtypes method)": [[37, "arkouda.numpy.SeriesDTypes.clear", false]], "clear() (arkouda.sctypedict method)": [[26, "arkouda.sctypeDict.clear", false]], "clear() (arkouda.sctypes method)": [[26, "arkouda.sctypes.clear", false]], "clear() (arkouda.seriesdtypes method)": [[26, "arkouda.SeriesDTypes.clear", false]], "clear() (in module arkouda)": [[26, "arkouda.clear", false]], "clear() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.clear", false]], "clip() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.clip", false]], "clip() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.clip", false]], "clip() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.clip", false]], "clip() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.clip", false]], "clip() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.clip", false]], "clip() (arkouda.str_ method)": [[26, "arkouda.str_.clip", false], [26, "id1299", false]], "clip() (in module arkouda)": [[26, "arkouda.clip", false]], "clip() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.clip", false]], "clip() (in module arkouda.numpy)": [[37, "arkouda.numpy.clip", false]], "clongdouble (class in arkouda)": [[26, "arkouda.clongdouble", false]], "clongdouble (class in arkouda.numpy)": [[37, "arkouda.numpy.clongdouble", false]], "clongdoubledtype (class in arkouda)": [[26, "arkouda.CLongDoubleDType", false]], "clongdoubledtype (class in arkouda.numpy)": [[37, "arkouda.numpy.CLongDoubleDType", false]], "clongfloat (class in arkouda)": [[26, "arkouda.clongfloat", false]], "clongfloat (class in arkouda.numpy)": [[37, "arkouda.numpy.clongfloat", false]], "clz() (arkouda.pdarray method)": [[26, "arkouda.pdarray.clz", false], [26, "id1010", false], [26, "id1081", false], [26, "id1152", false], [26, "id1223", false], [26, "id939", false]], "clz() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.clz", false]], "clz() (in module arkouda)": [[26, "arkouda.clz", false]], "clz() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.clz", false]], "coargsort() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.coargsort", false], [26, "id131", false]], "coargsort() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.coargsort", false]], "coargsort() (in module arkouda)": [[26, "arkouda.coargsort", false], [26, "id859", false], [26, "id860", false], [89, "arkouda.coargsort", false]], "coargsort() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.coargsort", false]], "coargsort() (in module arkouda.sorting)": [[52, "arkouda.sorting.coargsort", false]], "codes (arkouda.categorical attribute)": [[26, "arkouda.Categorical.codes", false], [26, "id66", false], [26, "id8", false], [91, "arkouda.Categorical.codes", false]], "codes (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.codes", false]], "columns (arkouda.dataframe property)": [[26, "arkouda.DataFrame.columns", false], [26, "id132", false]], "columns (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.columns", false]], "compiler_flag() (arkouda.dtypes.annotations method)": [[23, "arkouda.dtypes.annotations.compiler_flag", false]], "compiler_flag() (arkouda.numpy.dtypes.annotations method)": [[36, "arkouda.numpy.dtypes.annotations.compiler_flag", false]], "complex128 (class in arkouda)": [[26, "arkouda.complex128", false]], "complex128 (class in arkouda.dtypes)": [[23, "arkouda.dtypes.complex128", false]], "complex128 (class in arkouda.numpy)": [[37, "arkouda.numpy.complex128", false]], "complex128 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.complex128", false]], "complex128() (arkouda.dtype method)": [[26, "arkouda.DType.COMPLEX128", false]], "complex128() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.COMPLEX128", false]], "complex128() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.COMPLEX128", false]], "complex128() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.COMPLEX128", false]], "complex128dtype (class in arkouda)": [[26, "arkouda.Complex128DType", false]], "complex128dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.Complex128DType", false]], "complex64 (class in arkouda)": [[26, "arkouda.complex64", false]], "complex64 (class in arkouda.dtypes)": [[23, "arkouda.dtypes.complex64", false]], "complex64 (class in arkouda.numpy)": [[37, "arkouda.numpy.complex64", false]], "complex64 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.complex64", false]], "complex64() (arkouda.dtype method)": [[26, "arkouda.DType.COMPLEX64", false]], "complex64() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.COMPLEX64", false]], "complex64() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.COMPLEX64", false]], "complex64() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.COMPLEX64", false]], "complex64dtype (class in arkouda)": [[26, "arkouda.Complex64DType", false]], "complex64dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.Complex64DType", false]], "components (arkouda.timeclass.timedelta property)": [[57, "arkouda.timeclass.Timedelta.components", false]], "components (arkouda.timedelta property)": [[26, "arkouda.Timedelta.components", false], [26, "id799", false]], "compress() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.compress", false]], "compress() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.compress", false]], "compress() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.compress", false]], "compress() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.compress", false]], "compress() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.compress", false]], "compress() (arkouda.str_ method)": [[26, "arkouda.str_.compress", false], [26, "id1300", false]], "compute_join_size() (in module arkouda)": [[26, "arkouda.compute_join_size", false]], "compute_join_size() (in module arkouda.join)": [[31, "arkouda.join.compute_join_size", false]], "concat() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.concat", false], [26, "id133", false]], "concat() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.concat", false]], "concat() (arkouda.index method)": [[26, "arkouda.Index.concat", false]], "concat() (arkouda.index.index method)": [[27, "arkouda.index.Index.concat", false]], "concat() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.concat", false]], "concat() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.concat", false]], "concat() (arkouda.segarray class method)": [[26, "arkouda.SegArray.concat", false]], "concat() (arkouda.segarray.segarray class method)": [[50, "arkouda.segarray.SegArray.concat", false]], "concat() (arkouda.series method)": [[26, "arkouda.Series.concat", false]], "concat() (arkouda.series.series method)": [[51, "arkouda.series.Series.concat", false]], "concat() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.concat", false]], "concat() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.concat", false]], "concat() (in module arkouda.index)": [[88, "arkouda.Index.concat", false]], "concat() (in module arkouda.multiindex)": [[88, "arkouda.MultiIndex.concat", false]], "concatenate() (arkouda.categorical method)": [[26, "arkouda.Categorical.concatenate", false], [26, "id20", false], [26, "id78", false]], "concatenate() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.concatenate", false]], "concatenate() (in module arkouda)": [[26, "arkouda.concatenate", false], [26, "id861", false], [26, "id862", false], [92, "arkouda.concatenate", false]], "concatenate() (in module arkouda.pdarraysetops)": [[42, "arkouda.pdarraysetops.concatenate", false]], "concatenate() (in module arkouda.util)": [[58, "arkouda.util.concatenate", false]], "conj() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.conj", false]], "conj() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.conj", false]], "conj() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.conj", false]], "conj() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.conj", false]], "conj() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.conj", false]], "conj() (arkouda.str_ method)": [[26, "arkouda.str_.conj", false], [26, "id1301", false]], "conj() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.conj", false]], "conjugate() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.conjugate", false]], "conjugate() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.conjugate", false]], "conjugate() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.conjugate", false]], "conjugate() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.conjugate", false]], "conjugate() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.conjugate", false]], "conjugate() (arkouda.str_ method)": [[26, "arkouda.str_.conjugate", false], [26, "id1302", false]], "connect() (in module arkouda)": [[102, "arkouda.connect", false]], "connect() (in module arkouda.client)": [[19, "arkouda.client.connect", false]], "conserves (arkouda.bitvector attribute)": [[26, "arkouda.BitVector.conserves", false]], "conserves (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.conserves", false]], "contains() (arkouda.categorical method)": [[26, "arkouda.Categorical.contains", false], [26, "id21", false], [26, "id79", false], [91, "arkouda.Categorical.contains", false]], "contains() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.contains", false]], "contains() (arkouda.strings method)": [[26, "arkouda.Strings.contains", false], [26, "id506", false], [26, "id582", false], [26, "id658", false], [26, "id734", false], [103, "arkouda.Strings.contains", false]], "contains() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.contains", false]], "convert_bytes() (in module arkouda.util)": [[58, "arkouda.util.convert_bytes", false]], "convert_if_categorical() (in module arkouda)": [[26, "arkouda.convert_if_categorical", false]], "convert_if_categorical() (in module arkouda.util)": [[58, "arkouda.util.convert_if_categorical", false]], "copy() (arkouda.arkouda_supported_dtypes method)": [[26, "arkouda.ARKOUDA_SUPPORTED_DTYPES.copy", false]], "copy() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.copy", false]], "copy() (arkouda.dtypeobjects method)": [[26, "arkouda.DTypeObjects.copy", false]], "copy() (arkouda.dtypes method)": [[26, "arkouda.DTypes.copy", false]], "copy() (arkouda.dtypes.arkouda_supported_dtypes method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.copy", false]], "copy() (arkouda.dtypes.dtypeobjects method)": [[23, "arkouda.dtypes.DTypeObjects.copy", false]], "copy() (arkouda.dtypes.dtypes method)": [[23, "arkouda.dtypes.DTypes.copy", false]], "copy() (arkouda.dtypes.inttypes method)": [[23, "arkouda.dtypes.intTypes.copy", false]], "copy() (arkouda.dtypes.number_format_strings method)": [[23, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.dtypes.numericdtypes method)": [[23, "arkouda.dtypes.NumericDTypes.copy", false]], "copy() (arkouda.dtypes.scalardtypes method)": [[23, "arkouda.dtypes.ScalarDTypes.copy", false]], "copy() (arkouda.dtypes.seriesdtypes method)": [[23, "arkouda.dtypes.SeriesDTypes.copy", false]], "copy() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.copy", false]], "copy() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.copy", false]], "copy() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.copy", false]], "copy() (arkouda.inttypes method)": [[26, "arkouda.intTypes.copy", false], [26, "id887", false], [26, "id896", false]], "copy() (arkouda.number_format_strings method)": [[26, "arkouda.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.numericdtypes method)": [[26, "arkouda.NumericDTypes.copy", false]], "copy() (arkouda.numpy.arkouda_supported_dtypes method)": [[37, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.copy", false]], "copy() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.copy", false]], "copy() (arkouda.numpy.dtypeobjects method)": [[37, "arkouda.numpy.DTypeObjects.copy", false]], "copy() (arkouda.numpy.dtypes method)": [[37, "arkouda.numpy.DTypes.copy", false]], "copy() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.copy", false]], "copy() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.copy", false]], "copy() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.copy", false]], "copy() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.copy", false]], "copy() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.copy", false]], "copy() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.copy", false]], "copy() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.copy", false]], "copy() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.copy", false]], "copy() (arkouda.numpy.inttypes method)": [[37, "arkouda.numpy.intTypes.copy", false]], "copy() (arkouda.numpy.number_format_strings method)": [[37, "arkouda.numpy.NUMBER_FORMAT_STRINGS.copy", false]], "copy() (arkouda.numpy.numericdtypes method)": [[37, "arkouda.numpy.NumericDTypes.copy", false]], "copy() (arkouda.numpy.scalardtypes method)": [[37, "arkouda.numpy.ScalarDTypes.copy", false]], "copy() (arkouda.numpy.sctypedict method)": [[37, "arkouda.numpy.sctypeDict.copy", false]], "copy() (arkouda.numpy.sctypes method)": [[37, "arkouda.numpy.sctypes.copy", false]], "copy() (arkouda.numpy.seriesdtypes method)": [[37, "arkouda.numpy.SeriesDTypes.copy", false]], "copy() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.copy", false]], "copy() (arkouda.scalardtypes method)": [[26, "arkouda.ScalarDTypes.copy", false]], "copy() (arkouda.sctypedict method)": [[26, "arkouda.sctypeDict.copy", false]], "copy() (arkouda.sctypes method)": [[26, "arkouda.sctypes.copy", false]], "copy() (arkouda.segarray method)": [[26, "arkouda.SegArray.copy", false]], "copy() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.copy", false]], "copy() (arkouda.seriesdtypes method)": [[26, "arkouda.SeriesDTypes.copy", false]], "copy() (arkouda.str_ method)": [[26, "arkouda.str_.copy", false], [26, "id1303", false]], "copy() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.copy", false]], "corr() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.corr", false], [26, "id134", false]], "corr() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.corr", false]], "corr() (arkouda.pdarray method)": [[26, "arkouda.pdarray.corr", false], [26, "id1011", false], [26, "id1082", false], [26, "id1153", false], [26, "id1224", false], [26, "id940", false]], "corr() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.corr", false]], "corr() (in module arkouda)": [[26, "arkouda.corr", false]], "corr() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.corr", false]], "cos() (in module arkouda)": [[26, "arkouda.cos", false], [90, "arkouda.cos", false]], "cos() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.cos", false]], "cos() (in module arkouda.numpy)": [[37, "arkouda.numpy.cos", false]], "cosh() (in module arkouda)": [[26, "arkouda.cosh", false]], "cosh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.cosh", false]], "cosh() (in module arkouda.numpy)": [[37, "arkouda.numpy.cosh", false]], "count() (arkouda.arkouda_supported_ints method)": [[26, "arkouda.ARKOUDA_SUPPORTED_INTS.count", false]], "count() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.count", false], [26, "id135", false]], "count() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.count", false]], "count() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.count", false]], "count() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.count", false]], "count() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.count", false]], "count() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.count", false]], "count() (arkouda.dtypes.arkouda_supported_bools method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_BOOLS.count", false]], "count() (arkouda.dtypes.arkouda_supported_floats method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_FLOATS.count", false]], "count() (arkouda.dtypes.arkouda_supported_ints method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_INTS.count", false]], "count() (arkouda.dtypes.arkouda_supported_numbers method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_NUMBERS.count", false]], "count() (arkouda.groupby method)": [[26, "arkouda.GroupBy.count", false], [26, "id266", false], [26, "id313", false], [26, "id360", false], [26, "id407", false], [26, "id454", false], [94, "arkouda.GroupBy.count", false]], "count() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.count", false]], "count() (arkouda.numpy.arkouda_supported_ints method)": [[37, "arkouda.numpy.ARKOUDA_SUPPORTED_INTS.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_bools method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_BOOLS.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_floats method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_ints method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS.count", false]], "count() (arkouda.numpy.dtypes.arkouda_supported_numbers method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS.count", false]], "count() (arkouda.numpy.scalartype method)": [[37, "arkouda.numpy.ScalarType.count", false]], "count() (arkouda.scalartype method)": [[26, "arkouda.ScalarType.count", false]], "count_nonzero() (in module arkouda)": [[26, "arkouda.count_nonzero", false]], "count_nonzero() (in module arkouda.numpy)": [[37, "arkouda.numpy.count_nonzero", false]], "counts (arkouda.array_api.set_functions.uniqueallresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueAllResult.counts", false]], "counts (arkouda.array_api.set_functions.uniquecountsresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueCountsResult.counts", false]], "cov() (arkouda.pdarray method)": [[26, "arkouda.pdarray.cov", false], [26, "id1012", false], [26, "id1083", false], [26, "id1154", false], [26, "id1225", false], [26, "id941", false]], "cov() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.cov", false]], "cov() (in module arkouda)": [[26, "arkouda.cov", false]], "cov() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.cov", false]], "create_pdarray() (in module arkouda)": [[26, "arkouda.create_pdarray", false], [26, "id863", false], [26, "id864", false], [26, "id865", false], [26, "id866", false]], "create_sparray() (in module arkouda)": [[26, "arkouda.create_sparray", false]], "create_sparray() (in module arkouda.sparrayclass)": [[53, "arkouda.sparrayclass.create_sparray", false]], "create_sparse_matrix() (in module arkouda)": [[26, "arkouda.create_sparse_matrix", false]], "create_sparse_matrix() (in module arkouda.sparsematrix)": [[54, "arkouda.sparsematrix.create_sparse_matrix", false]], "critical (arkouda.logger.loglevel attribute)": [[32, "arkouda.logger.LogLevel.CRITICAL", false]], "critical (arkouda.loglevel attribute)": [[26, "arkouda.LogLevel.CRITICAL", false]], "csingle (class in arkouda)": [[26, "arkouda.csingle", false]], "csingle (class in arkouda.numpy)": [[37, "arkouda.numpy.csingle", false]], "ctz() (arkouda.pdarray method)": [[26, "arkouda.pdarray.ctz", false], [26, "id1013", false], [26, "id1084", false], [26, "id1155", false], [26, "id1226", false], [26, "id942", false]], "ctz() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.ctz", false]], "ctz() (in module arkouda)": [[26, "arkouda.ctz", false]], "ctz() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.ctz", false]], "cumprod() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.cumprod", false]], "cumprod() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.cumprod", false]], "cumprod() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.cumprod", false]], "cumprod() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.cumprod", false]], "cumprod() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.cumprod", false]], "cumprod() (arkouda.str_ method)": [[26, "arkouda.str_.cumprod", false], [26, "id1304", false]], "cumprod() (in module arkouda)": [[26, "arkouda.cumprod", false], [90, "arkouda.cumprod", false]], "cumprod() (in module arkouda.numpy)": [[37, "arkouda.numpy.cumprod", false]], "cumsum() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.cumsum", false]], "cumsum() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.cumsum", false]], "cumsum() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.cumsum", false]], "cumsum() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.cumsum", false]], "cumsum() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.cumsum", false]], "cumsum() (arkouda.str_ method)": [[26, "arkouda.str_.cumsum", false], [26, "id1305", false]], "cumsum() (in module arkouda)": [[26, "arkouda.cumsum", false], [26, "id867", false], [26, "id868", false], [90, "arkouda.cumsum", false]], "cumsum() (in module arkouda.numpy)": [[37, "arkouda.numpy.cumsum", false]], "cumulative_sum() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.cumulative_sum", false]], "data() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.data", false]], "data() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.data", false]], "data() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.data", false]], "data() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.data", false]], "data() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.data", false]], "data() (arkouda.str_ method)": [[26, "arkouda.str_.data", false], [26, "id1306", false]], "dataframe (class in arkouda)": [[26, "arkouda.DataFrame", false], [26, "id122", false], [93, "arkouda.DataFrame", false]], "dataframe (class in arkouda.dataframe)": [[22, "arkouda.dataframe.DataFrame", false]], "dataframegroupby (class in arkouda)": [[26, "arkouda.DataFrameGroupBy", false]], "dataframegroupby (class in arkouda.dataframe)": [[22, "arkouda.dataframe.DataFrameGroupBy", false]], "datasource (class in arkouda)": [[26, "arkouda.DataSource", false]], "datasource (class in arkouda.numpy)": [[37, "arkouda.numpy.DataSource", false]], "date (arkouda.datetime property)": [[26, "arkouda.Datetime.date", false], [26, "id179", false], [26, "id212", false]], "date (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.date", false]], "date_operators() (in module arkouda)": [[26, "arkouda.date_operators", false]], "date_operators() (in module arkouda.accessor)": [[2, "arkouda.accessor.date_operators", false]], "date_range() (in module arkouda)": [[26, "arkouda.date_range", false], [26, "id869", false]], "date_range() (in module arkouda.timeclass)": [[57, "arkouda.timeclass.date_range", false]], "datetime (class in arkouda)": [[26, "arkouda.Datetime", false], [26, "id178", false], [26, "id211", false]], "datetime (class in arkouda.timeclass)": [[57, "arkouda.timeclass.Datetime", false]], "datetime64 (class in arkouda)": [[26, "arkouda.datetime64", false]], "datetime64 (class in arkouda.numpy)": [[37, "arkouda.numpy.datetime64", false]], "datetime64dtype (class in arkouda)": [[26, "arkouda.DateTime64DType", false]], "datetime64dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.DateTime64DType", false]], "datetimeaccessor (class in arkouda)": [[26, "arkouda.DatetimeAccessor", false]], "datetimeaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.DatetimeAccessor", false]], "day (arkouda.datetime property)": [[26, "arkouda.Datetime.day", false], [26, "id180", false], [26, "id213", false]], "day (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.day", false]], "day_of_week (arkouda.datetime property)": [[26, "arkouda.Datetime.day_of_week", false], [26, "id181", false], [26, "id214", false]], "day_of_week (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.day_of_week", false]], "day_of_year (arkouda.datetime property)": [[26, "arkouda.Datetime.day_of_year", false], [26, "id182", false], [26, "id215", false]], "day_of_year (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.day_of_year", false]], "dayofweek (arkouda.datetime property)": [[26, "arkouda.Datetime.dayofweek", false], [26, "id183", false], [26, "id216", false]], "dayofweek (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.dayofweek", false]], "dayofyear (arkouda.datetime property)": [[26, "arkouda.Datetime.dayofyear", false], [26, "id184", false], [26, "id217", false]], "dayofyear (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.dayofyear", false]], "days (arkouda.timeclass.timedelta property)": [[57, "arkouda.timeclass.Timedelta.days", false]], "days (arkouda.timedelta property)": [[26, "arkouda.Timedelta.days", false], [26, "id800", false]], "debug (arkouda.logger.loglevel attribute)": [[32, "arkouda.logger.LogLevel.DEBUG", false]], "debug (arkouda.loglevel attribute)": [[26, "arkouda.LogLevel.DEBUG", false]], "decode() (arkouda.strings method)": [[26, "arkouda.Strings.decode", false], [26, "id507", false], [26, "id583", false], [26, "id659", false], [26, "id735", false]], "decode() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.decode", false]], "default_rng() (in module arkouda.numpy.random)": [[38, "arkouda.numpy.random.default_rng", false]], "default_rng() (in module arkouda.random)": [[44, "arkouda.random.default_rng", false]], "deg2rad() (in module arkouda)": [[26, "arkouda.deg2rad", false]], "deg2rad() (in module arkouda.numpy)": [[37, "arkouda.numpy.deg2rad", false]], "delete() (in module arkouda)": [[26, "arkouda.delete", false]], "delete() (in module arkouda.pdarraymanipulation)": [[41, "arkouda.pdarraymanipulation.delete", false]], "delete_directory() (in module arkouda.io_util)": [[30, "arkouda.io_util.delete_directory", false]], "delimited_file_to_dict() (in module arkouda.io_util)": [[30, "arkouda.io_util.delimited_file_to_dict", false]], "denominator() (arkouda.integer method)": [[26, "arkouda.integer.denominator", false]], "denominator() (arkouda.numpy.integer method)": [[37, "arkouda.numpy.integer.denominator", false]], "deprecate() (in module arkouda)": [[26, "arkouda.deprecate", false]], "deprecate() (in module arkouda.numpy)": [[37, "arkouda.numpy.deprecate", false]], "deprecate_with_doc() (in module arkouda)": [[26, "arkouda.deprecate_with_doc", false]], "deprecate_with_doc() (in module arkouda.numpy)": [[37, "arkouda.numpy.deprecate_with_doc", false]], "device (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.device", false]], "device (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.device", false]], "df (arkouda.dataframe.dataframegroupby attribute)": [[22, "arkouda.dataframe.DataFrameGroupBy.df", false]], "df (arkouda.dataframegroupby attribute)": [[26, "arkouda.DataFrameGroupBy.df", false]], "diagonal() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.diagonal", false]], "diagonal() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.diagonal", false]], "diagonal() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.diagonal", false]], "diagonal() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.diagonal", false]], "diagonal() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.diagonal", false]], "diagonal() (arkouda.str_ method)": [[26, "arkouda.str_.diagonal", false], [26, "id1307", false]], "dict_to_delimited_file() (in module arkouda.io_util)": [[30, "arkouda.io_util.dict_to_delimited_file", false]], "diff() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.diff", false]], "diff() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.diff", false]], "diff() (arkouda.series method)": [[26, "arkouda.Series.diff", false]], "diff() (arkouda.series.series method)": [[51, "arkouda.series.Series.diff", false]], "diff() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.diff", false]], "diffaggregate (class in arkouda)": [[26, "arkouda.DiffAggregate", false]], "diffaggregate (class in arkouda.dataframe)": [[22, "arkouda.dataframe.DiffAggregate", false]], "difference() (arkouda.arkouda_supported_dtypes method)": [[26, "arkouda.ARKOUDA_SUPPORTED_DTYPES.difference", false]], "difference() (arkouda.dtypeobjects method)": [[26, "arkouda.DTypeObjects.difference", false]], "difference() (arkouda.dtypes method)": [[26, "arkouda.DTypes.difference", false]], "difference() (arkouda.dtypes.arkouda_supported_dtypes method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.difference", false]], "difference() (arkouda.dtypes.dtypeobjects method)": [[23, "arkouda.dtypes.DTypeObjects.difference", false]], "difference() (arkouda.dtypes.dtypes method)": [[23, "arkouda.dtypes.DTypes.difference", false]], "difference() (arkouda.dtypes.inttypes method)": [[23, "arkouda.dtypes.intTypes.difference", false]], "difference() (arkouda.dtypes.numericdtypes method)": [[23, "arkouda.dtypes.NumericDTypes.difference", false]], "difference() (arkouda.dtypes.scalardtypes method)": [[23, "arkouda.dtypes.ScalarDTypes.difference", false]], "difference() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.difference", false]], "difference() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.difference", false]], "difference() (arkouda.inttypes method)": [[26, "arkouda.intTypes.difference", false], [26, "id888", false], [26, "id897", false]], "difference() (arkouda.numericdtypes method)": [[26, "arkouda.NumericDTypes.difference", false]], "difference() (arkouda.numpy.arkouda_supported_dtypes method)": [[37, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.difference", false]], "difference() (arkouda.numpy.dtypeobjects method)": [[37, "arkouda.numpy.DTypeObjects.difference", false]], "difference() (arkouda.numpy.dtypes method)": [[37, "arkouda.numpy.DTypes.difference", false]], "difference() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.difference", false]], "difference() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.difference", false]], "difference() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.difference", false]], "difference() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.difference", false]], "difference() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.difference", false]], "difference() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.difference", false]], "difference() (arkouda.numpy.inttypes method)": [[37, "arkouda.numpy.intTypes.difference", false]], "difference() (arkouda.numpy.numericdtypes method)": [[37, "arkouda.numpy.NumericDTypes.difference", false]], "difference() (arkouda.numpy.scalardtypes method)": [[37, "arkouda.numpy.ScalarDTypes.difference", false]], "difference() (arkouda.scalardtypes method)": [[26, "arkouda.ScalarDTypes.difference", false]], "disableverbose() (in module arkouda)": [[26, "arkouda.disableVerbose", false]], "disableverbose() (in module arkouda.logger)": [[32, "arkouda.logger.disableVerbose", false]], "disconnect() (in module arkouda.client)": [[19, "arkouda.client.disconnect", false]], "disp() (in module arkouda)": [[26, "arkouda.disp", false]], "disp() (in module arkouda.numpy)": [[37, "arkouda.numpy.disp", false]], "divide() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.divide", false]], "divmod() (in module arkouda)": [[26, "arkouda.divmod", false]], "divmod() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.divmod", false]], "dot() (in module arkouda)": [[26, "arkouda.dot", false]], "dot() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.dot", false]], "double (class in arkouda)": [[26, "arkouda.double", false]], "double (class in arkouda.numpy)": [[37, "arkouda.numpy.double", false]], "drop() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.drop", false], [26, "id136", false]], "drop() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.drop", false]], "drop() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.drop", false]], "drop_duplicates() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.drop_duplicates", false], [26, "id137", false]], "drop_duplicates() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.drop_duplicates", false]], "drop_duplicates() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.drop_duplicates", false]], "dropna (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.dropna", false], [26, "id253", false], [26, "id300", false], [26, "id347", false], [26, "id394", false], [26, "id441", false], [94, "arkouda.GroupBy.dropna", false]], "dropna (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.dropna", false]], "dropna() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.dropna", false], [26, "id138", false]], "dropna() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.dropna", false]], "dt() (arkouda.series method)": [[26, "arkouda.Series.dt", false]], "dt() (arkouda.series.series method)": [[51, "arkouda.series.Series.dt", false]], "dtype (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.dtype", false]], "dtype (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.dtype", false]], "dtype (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.dtype", false]], "dtype (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.iinfo_object.dtype", false]], "dtype (arkouda.categorical attribute)": [[26, "arkouda.Categorical.dtype", false], [26, "id22", false], [26, "id80", false]], "dtype (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.dtype", false]], "dtype (arkouda.finfo attribute)": [[26, "arkouda.finfo.dtype", false]], "dtype (arkouda.format_parser attribute)": [[26, "arkouda.format_parser.dtype", false]], "dtype (arkouda.iinfo attribute)": [[26, "arkouda.iinfo.dtype", false]], "dtype (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.dtype", false]], "dtype (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.dtype", false]], "dtype (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.dtype", false]], "dtype (arkouda.numpy.format_parser attribute)": [[37, "arkouda.numpy.format_parser.dtype", false]], "dtype (arkouda.numpy.iinfo attribute)": [[37, "arkouda.numpy.iinfo.dtype", false]], "dtype (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.dtype", false], [26, "id1014", false], [26, "id1065", false], [26, "id1085", false], [26, "id1136", false], [26, "id1156", false], [26, "id1207", false], [26, "id1227", false], [26, "id913", false], [26, "id923", false], [26, "id943", false], [26, "id994", false], [97, "arkouda.pdarray.dtype", false]], "dtype (arkouda.pdarrayclass.pdarray attribute)": [[39, "arkouda.pdarrayclass.pdarray.dtype", false], [39, "id0", false]], "dtype (arkouda.segarray attribute)": [[26, "arkouda.SegArray.dtype", false]], "dtype (arkouda.segarray.segarray attribute)": [[50, "arkouda.segarray.SegArray.dtype", false]], "dtype (arkouda.series property)": [[26, "arkouda.Series.dtype", false]], "dtype (arkouda.series.series property)": [[51, "arkouda.series.Series.dtype", false]], "dtype (arkouda.sparray attribute)": [[26, "arkouda.sparray.dtype", false], [26, "id1280", false]], "dtype (arkouda.sparrayclass.sparray attribute)": [[53, "arkouda.sparrayclass.sparray.dtype", false], [53, "id0", false]], "dtype (arkouda.strings attribute)": [[26, "arkouda.Strings.dtype", false], [26, "id490", false], [26, "id499", false], [26, "id508", false], [26, "id575", false], [26, "id584", false], [26, "id651", false], [26, "id660", false], [26, "id727", false], [26, "id736", false]], "dtype (arkouda.strings.strings attribute)": [[55, "arkouda.strings.Strings.dtype", false], [55, "id0", false]], "dtype (class in arkouda)": [[26, "arkouda.DType", false]], "dtype (class in arkouda.dtypes)": [[23, "arkouda.dtypes.DType", false]], "dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.DType", false]], "dtype (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.DType", false]], "dtype() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.dtype", false]], "dtype() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.dtype", false]], "dtype() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.dtype", false]], "dtype() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.dtype", false]], "dtype() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.dtype", false]], "dtype() (arkouda.str_ method)": [[26, "arkouda.str_.dtype", false], [26, "id1308", false]], "dtype() (in module arkouda)": [[26, "arkouda.dtype", false]], "dtype() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.dtype", false]], "dtype() (in module arkouda.numpy)": [[37, "arkouda.numpy.dtype", false]], "dtype() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.dtype", false]], "dtypeobjects (class in arkouda)": [[26, "arkouda.DTypeObjects", false]], "dtypeobjects (class in arkouda.dtypes)": [[23, "arkouda.dtypes.DTypeObjects", false]], "dtypeobjects (class in arkouda.numpy)": [[37, "arkouda.numpy.DTypeObjects", false]], "dtypeobjects (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.DTypeObjects", false]], "dtypes (arkouda.dataframe property)": [[26, "arkouda.DataFrame.dtypes", false], [26, "id139", false]], "dtypes (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.dtypes", false]], "dtypes (class in arkouda)": [[26, "arkouda.DTypes", false]], "dtypes (class in arkouda.dtypes)": [[23, "arkouda.dtypes.DTypes", false]], "dtypes (class in arkouda.numpy)": [[37, "arkouda.numpy.DTypes", false]], "dtypes (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.DTypes", false]], "dump() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.dump", false]], "dump() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.dump", false]], "dump() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.dump", false]], "dump() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.dump", false]], "dump() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.dump", false]], "dump() (arkouda.str_ method)": [[26, "arkouda.str_.dump", false], [26, "id1309", false]], "dumps() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.dumps", false]], "dumps() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.dumps", false]], "dumps() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.dumps", false]], "dumps() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.dumps", false]], "dumps() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.dumps", false]], "dumps() (arkouda.str_ method)": [[26, "arkouda.str_.dumps", false], [26, "id1310", false]], "e (in module arkouda)": [[26, "arkouda.e", false]], "e (in module arkouda.numpy)": [[37, "arkouda.numpy.e", false]], "empty (arkouda.dataframe property)": [[26, "arkouda.DataFrame.empty", false], [26, "id140", false]], "empty (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.empty", false]], "empty() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.empty", false]], "empty_like() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.empty_like", false]], "enableverbose() (in module arkouda)": [[26, "arkouda.enableVerbose", false]], "enableverbose() (in module arkouda.logger)": [[32, "arkouda.logger.enableVerbose", false]], "encode() (arkouda.strings method)": [[26, "arkouda.Strings.encode", false], [26, "id509", false], [26, "id585", false], [26, "id661", false], [26, "id737", false]], "encode() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.encode", false]], "end() (arkouda.match.match method)": [[33, "arkouda.match.Match.end", false], [103, "arkouda.match.Match.end", false]], "endswith() (arkouda.categorical method)": [[26, "arkouda.Categorical.endswith", false], [26, "id23", false], [26, "id81", false], [91, "arkouda.Categorical.endswith", false]], "endswith() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.endswith", false]], "endswith() (arkouda.strings method)": [[26, "arkouda.Strings.endswith", false], [26, "id510", false], [26, "id586", false], [26, "id662", false], [26, "id738", false], [103, "arkouda.Strings.endswith", false]], "endswith() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.endswith", false]], "enrich_inplace() (in module arkouda.util)": [[58, "arkouda.util.enrich_inplace", false]], "entry (arkouda.strings attribute)": [[26, "arkouda.Strings.entry", false], [26, "id491", false], [26, "id494", false], [26, "id511", false], [26, "id570", false], [26, "id587", false], [26, "id646", false], [26, "id663", false], [26, "id722", false], [26, "id739", false]], "entry (arkouda.strings.strings attribute)": [[55, "arkouda.strings.Strings.entry", false], [55, "id1", false]], "enum (class in arkouda.dtypes)": [[23, "arkouda.dtypes.Enum", false]], "enum (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.Enum", false]], "eps (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.eps", false]], "eps (arkouda.finfo attribute)": [[26, "arkouda.finfo.eps", false]], "eps (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.eps", false]], "epsneg (arkouda.finfo attribute)": [[26, "arkouda.finfo.epsneg", false]], "epsneg (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.epsneg", false]], "equal() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.equal", false]], "equal_levels() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.equal_levels", false]], "equal_levels() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.equal_levels", false]], "equals() (arkouda.categorical method)": [[26, "arkouda.Categorical.equals", false], [26, "id24", false], [26, "id82", false]], "equals() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.equals", false]], "equals() (arkouda.index method)": [[26, "arkouda.Index.equals", false]], "equals() (arkouda.index.index method)": [[27, "arkouda.index.Index.equals", false]], "equals() (arkouda.pdarray method)": [[26, "arkouda.pdarray.equals", false], [26, "id1015", false], [26, "id1086", false], [26, "id1157", false], [26, "id1228", false], [26, "id944", false]], "equals() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.equals", false]], "equals() (arkouda.strings method)": [[26, "arkouda.Strings.equals", false], [26, "id512", false], [26, "id588", false], [26, "id664", false], [26, "id740", false]], "equals() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.equals", false]], "error (arkouda.logger.loglevel attribute)": [[32, "arkouda.logger.LogLevel.ERROR", false]], "error (arkouda.loglevel attribute)": [[26, "arkouda.LogLevel.ERROR", false]], "errormode (class in arkouda)": [[26, "arkouda.ErrorMode", false]], "errormode (class in arkouda.numpy)": [[37, "arkouda.numpy.ErrorMode", false]], "euler_gamma (in module arkouda)": [[26, "arkouda.euler_gamma", false]], "euler_gamma (in module arkouda.numpy)": [[37, "arkouda.numpy.euler_gamma", false]], "exists() (arkouda.datasource method)": [[26, "arkouda.DataSource.exists", false]], "exists() (arkouda.numpy.datasource method)": [[37, "arkouda.numpy.DataSource.exists", false]], "exp() (in module arkouda)": [[26, "arkouda.exp", false], [90, "arkouda.exp", false]], "exp() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.exp", false]], "exp() (in module arkouda.numpy)": [[37, "arkouda.numpy.exp", false]], "expand() (in module arkouda.util)": [[58, "arkouda.util.expand", false]], "expand_dims() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.expand_dims", false]], "expm1() (in module arkouda)": [[26, "arkouda.expm1", false]], "expm1() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.expm1", false]], "expm1() (in module arkouda.numpy)": [[37, "arkouda.numpy.expm1", false]], "exponential() (arkouda.numpy.random.generator method)": [[38, "arkouda.numpy.random.Generator.exponential", false]], "exponential() (arkouda.random.generator method)": [[44, "arkouda.random.Generator.exponential", false]], "exponential() (in module arkouda.random.generator)": [[98, "arkouda.random.Generator.exponential", false]], "export() (in module arkouda)": [[26, "arkouda.export", false], [87, "arkouda.export", false]], "export() (in module arkouda.io)": [[29, "arkouda.io.export", false]], "export_uint() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.export_uint", false]], "export_uint() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.export_uint", false]], "eye() (in module arkouda)": [[26, "arkouda.eye", false]], "eye() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.eye", false]], "eye() (in module arkouda.numpy)": [[37, "arkouda.numpy.eye", false]], "factory() (arkouda.index static method)": [[26, "arkouda.Index.factory", false]], "factory() (arkouda.index.index static method)": [[27, "arkouda.index.Index.factory", false]], "false_ (class in arkouda)": [[26, "arkouda.False_", false]], "false_ (class in arkouda.numpy)": [[37, "arkouda.numpy.False_", false]], "fields (class in arkouda)": [[26, "arkouda.Fields", false]], "fields (class in arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.Fields", false]], "fill() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.fill", false]], "fill() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.fill", false]], "fill() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.fill", false]], "fill() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.fill", false]], "fill() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.fill", false]], "fill() (arkouda.pdarray method)": [[26, "arkouda.pdarray.fill", false], [26, "id1016", false], [26, "id1087", false], [26, "id1158", false], [26, "id1229", false], [26, "id945", false]], "fill() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.fill", false]], "fill() (arkouda.str_ method)": [[26, "arkouda.str_.fill", false], [26, "id1311", false]], "fill_vals() (arkouda.sparray method)": [[26, "arkouda.sparray.fill_vals", false]], "fill_vals() (arkouda.sparrayclass.sparray method)": [[53, "arkouda.sparrayclass.sparray.fill_vals", false]], "fillna() (arkouda.series method)": [[26, "arkouda.Series.fillna", false]], "fillna() (arkouda.series.series method)": [[51, "arkouda.series.Series.fillna", false]], "filter() (arkouda.segarray method)": [[26, "arkouda.SegArray.filter", false]], "filter() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.filter", false]], "filter_by_range() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.filter_by_range", false], [26, "id141", false]], "filter_by_range() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.filter_by_range", false]], "find() (in module arkouda)": [[26, "arkouda.find", false]], "find() (in module arkouda.alignment)": [[3, "arkouda.alignment.find", false]], "find_locations() (arkouda.matcher.matcher method)": [[34, "arkouda.matcher.Matcher.find_locations", false]], "find_locations() (arkouda.strings method)": [[26, "arkouda.Strings.find_locations", false], [26, "id513", false], [26, "id589", false], [26, "id665", false], [26, "id741", false], [103, "arkouda.Strings.find_locations", false]], "find_locations() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.find_locations", false]], "find_matches() (arkouda.match.match method)": [[33, "arkouda.match.Match.find_matches", false], [103, "arkouda.match.Match.find_matches", false]], "findall() (arkouda.matcher.matcher method)": [[34, "arkouda.matcher.Matcher.findall", false]], "findall() (arkouda.strings method)": [[26, "arkouda.Strings.findall", false], [26, "id514", false], [26, "id590", false], [26, "id666", false], [26, "id742", false], [103, "arkouda.Strings.findall", false]], "findall() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.findall", false]], "finfo (class in arkouda)": [[26, "arkouda.finfo", false]], "finfo (class in arkouda.numpy)": [[37, "arkouda.numpy.finfo", false]], "finfo() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.finfo", false]], "finfo_object (class in arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.finfo_object", false]], "first() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.first", false]], "first() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.first", false]], "first() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.first", false]], "first() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.first", false]], "first() (arkouda.groupby method)": [[26, "arkouda.GroupBy.first", false], [26, "id267", false], [26, "id314", false], [26, "id361", false], [26, "id408", false], [26, "id455", false], [94, "arkouda.GroupBy.first", false]], "first() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.first", false]], "flags() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.flags", false]], "flags() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.flags", false]], "flags() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.flags", false]], "flags() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.flags", false]], "flags() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.flags", false]], "flags() (arkouda.str_ method)": [[26, "arkouda.str_.flags", false], [26, "id1312", false]], "flat() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.flat", false]], "flat() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.flat", false]], "flat() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.flat", false]], "flat() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.flat", false]], "flat() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.flat", false]], "flat() (arkouda.str_ method)": [[26, "arkouda.str_.flat", false], [26, "id1313", false]], "flatten() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.flatten", false]], "flatten() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.flatten", false]], "flatten() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.flatten", false]], "flatten() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.flatten", false]], "flatten() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.flatten", false]], "flatten() (arkouda.pdarray method)": [[26, "arkouda.pdarray.flatten", false], [26, "id1017", false], [26, "id1088", false], [26, "id1159", false], [26, "id1230", false], [26, "id946", false]], "flatten() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.flatten", false]], "flatten() (arkouda.str_ method)": [[26, "arkouda.str_.flatten", false], [26, "id1314", false]], "flatten() (arkouda.strings method)": [[26, "arkouda.Strings.flatten", false], [26, "id515", false], [26, "id591", false], [26, "id667", false], [26, "id743", false], [103, "arkouda.Strings.flatten", false]], "flatten() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.flatten", false]], "flexible (class in arkouda)": [[26, "arkouda.flexible", false]], "flexible (class in arkouda.numpy)": [[37, "arkouda.numpy.flexible", false]], "flip() (in module arkouda)": [[26, "arkouda.flip", false]], "flip() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.flip", false]], "flip() (in module arkouda.numpy)": [[37, "arkouda.numpy.flip", false]], "float() (arkouda.dtype method)": [[26, "arkouda.DType.FLOAT", false]], "float() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.FLOAT", false]], "float() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.FLOAT", false]], "float() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.FLOAT", false]], "float16 (class in arkouda)": [[26, "arkouda.float16", false]], "float16 (class in arkouda.dtypes)": [[23, "arkouda.dtypes.float16", false]], "float16 (class in arkouda.numpy)": [[37, "arkouda.numpy.float16", false]], "float16 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.float16", false]], "float16dtype (class in arkouda)": [[26, "arkouda.Float16DType", false]], "float16dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.Float16DType", false]], "float32 (class in arkouda)": [[26, "arkouda.float32", false]], "float32 (class in arkouda.dtypes)": [[23, "arkouda.dtypes.float32", false]], "float32 (class in arkouda.numpy)": [[37, "arkouda.numpy.float32", false]], "float32 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.float32", false]], "float32() (arkouda.dtype method)": [[26, "arkouda.DType.FLOAT32", false]], "float32() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.FLOAT32", false]], "float32() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.FLOAT32", false]], "float32() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.FLOAT32", false]], "float32dtype (class in arkouda)": [[26, "arkouda.Float32DType", false]], "float32dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.Float32DType", false]], "float64 (class in arkouda)": [[26, "arkouda.float64", false]], "float64 (class in arkouda.dtypes)": [[23, "arkouda.dtypes.float64", false]], "float64 (class in arkouda.numpy)": [[37, "arkouda.numpy.float64", false]], "float64 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.float64", false]], "float64() (arkouda.dtype method)": [[26, "arkouda.DType.FLOAT64", false]], "float64() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.FLOAT64", false]], "float64() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.FLOAT64", false]], "float64() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.FLOAT64", false]], "float64dtype (class in arkouda)": [[26, "arkouda.Float64DType", false]], "float64dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.Float64DType", false]], "float_ (class in arkouda)": [[26, "arkouda.float_", false]], "float_ (class in arkouda.numpy)": [[37, "arkouda.numpy.float_", false]], "float_scalars (class in arkouda)": [[26, "arkouda.float_scalars", false]], "float_scalars (class in arkouda.dtypes)": [[23, "arkouda.dtypes.float_scalars", false]], "float_scalars (class in arkouda.numpy)": [[37, "arkouda.numpy.float_scalars", false]], "float_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.float_scalars", false]], "floating (class in arkouda)": [[26, "arkouda.floating", false]], "floating (class in arkouda.numpy)": [[37, "arkouda.numpy.floating", false]], "floor() (in module arkouda)": [[26, "arkouda.floor", false]], "floor() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.floor", false]], "floor() (in module arkouda.numpy)": [[37, "arkouda.numpy.floor", false]], "floor_divide() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.floor_divide", false]], "fmod() (in module arkouda)": [[26, "arkouda.fmod", false]], "fmod() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.fmod", false]], "format() (arkouda.bitvector method)": [[26, "arkouda.BitVector.format", false]], "format() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.format", false]], "format() (arkouda.client_dtypes.fields method)": [[20, "arkouda.client_dtypes.Fields.format", false]], "format() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.format", false]], "format() (arkouda.fields method)": [[26, "arkouda.Fields.format", false]], "format() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.format", false]], "format_float_positional() (in module arkouda)": [[26, "arkouda.format_float_positional", false]], "format_float_positional() (in module arkouda.numpy)": [[37, "arkouda.numpy.format_float_positional", false]], "format_float_scientific() (in module arkouda)": [[26, "arkouda.format_float_scientific", false]], "format_float_scientific() (in module arkouda.numpy)": [[37, "arkouda.numpy.format_float_scientific", false]], "format_other() (arkouda.pdarray method)": [[26, "arkouda.pdarray.format_other", false], [26, "id1018", false], [26, "id1089", false], [26, "id1160", false], [26, "id1231", false], [26, "id947", false]], "format_other() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.format_other", false]], "format_parser (class in arkouda)": [[26, "arkouda.format_parser", false]], "format_parser (class in arkouda.numpy)": [[37, "arkouda.numpy.format_parser", false]], "from_codes() (arkouda.categorical class method)": [[26, "arkouda.Categorical.from_codes", false], [26, "id25", false], [26, "id83", false], [91, "arkouda.Categorical.from_codes", false]], "from_codes() (arkouda.categorical.categorical class method)": [[18, "arkouda.categorical.Categorical.from_codes", false]], "from_dlpack() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.from_dlpack", false]], "from_multi_array() (arkouda.segarray class method)": [[26, "arkouda.SegArray.from_multi_array", false]], "from_multi_array() (arkouda.segarray.segarray class method)": [[50, "arkouda.segarray.SegArray.from_multi_array", false]], "from_pandas() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.from_pandas", false], [26, "id142", false]], "from_pandas() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.from_pandas", false]], "from_parts() (arkouda.segarray class method)": [[26, "arkouda.SegArray.from_parts", false]], "from_parts() (arkouda.segarray.segarray class method)": [[50, "arkouda.segarray.SegArray.from_parts", false]], "from_parts() (arkouda.strings static method)": [[26, "arkouda.Strings.from_parts", false], [26, "id516", false], [26, "id592", false], [26, "id668", false], [26, "id744", false]], "from_parts() (arkouda.strings.strings static method)": [[55, "arkouda.strings.Strings.from_parts", false]], "from_return_msg() (arkouda.bitvector class method)": [[26, "arkouda.BitVector.from_return_msg", false]], "from_return_msg() (arkouda.categorical class method)": [[26, "arkouda.Categorical.from_return_msg", false], [26, "id26", false], [26, "id84", false]], "from_return_msg() (arkouda.categorical.categorical class method)": [[18, "arkouda.categorical.Categorical.from_return_msg", false]], "from_return_msg() (arkouda.client_dtypes.bitvector class method)": [[20, "arkouda.client_dtypes.BitVector.from_return_msg", false]], "from_return_msg() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.from_return_msg", false], [26, "id143", false]], "from_return_msg() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.from_return_msg", false]], "from_return_msg() (arkouda.groupby method)": [[26, "arkouda.GroupBy.from_return_msg", false], [26, "id268", false], [26, "id315", false], [26, "id362", false], [26, "id409", false], [26, "id456", false]], "from_return_msg() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.from_return_msg", false]], "from_return_msg() (arkouda.index class method)": [[26, "arkouda.Index.from_return_msg", false]], "from_return_msg() (arkouda.index.index class method)": [[27, "arkouda.index.Index.from_return_msg", false]], "from_return_msg() (arkouda.segarray class method)": [[26, "arkouda.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.segarray.segarray class method)": [[50, "arkouda.segarray.SegArray.from_return_msg", false]], "from_return_msg() (arkouda.series method)": [[26, "arkouda.Series.from_return_msg", false]], "from_return_msg() (arkouda.series.series method)": [[51, "arkouda.series.Series.from_return_msg", false]], "from_return_msg() (arkouda.strings static method)": [[26, "arkouda.Strings.from_return_msg", false], [26, "id517", false], [26, "id593", false], [26, "id669", false], [26, "id745", false]], "from_return_msg() (arkouda.strings.strings static method)": [[55, "arkouda.strings.Strings.from_return_msg", false]], "from_series() (in module arkouda)": [[26, "arkouda.from_series", false], [26, "id876", false]], "from_series() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.from_series", false]], "fromhex() (arkouda.akfloat64 method)": [[26, "arkouda.akfloat64.fromhex", false], [26, "id823", false]], "fromhex() (arkouda.double method)": [[26, "arkouda.double.fromhex", false]], "fromhex() (arkouda.dtypes.float64 method)": [[23, "arkouda.dtypes.float64.fromhex", false]], "fromhex() (arkouda.float64 method)": [[26, "arkouda.float64.fromhex", false]], "fromhex() (arkouda.float_ method)": [[26, "arkouda.float_.fromhex", false]], "fromhex() (arkouda.numpy.double method)": [[37, "arkouda.numpy.double.fromhex", false]], "fromhex() (arkouda.numpy.dtypes.float64 method)": [[36, "arkouda.numpy.dtypes.float64.fromhex", false]], "fromhex() (arkouda.numpy.float64 method)": [[37, "arkouda.numpy.float64.fromhex", false]], "fromhex() (arkouda.numpy.float_ method)": [[37, "arkouda.numpy.float_.fromhex", false]], "fromkeys() (arkouda.dtypes.number_format_strings method)": [[23, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.dtypes.seriesdtypes method)": [[23, "arkouda.dtypes.SeriesDTypes.fromkeys", false]], "fromkeys() (arkouda.number_format_strings method)": [[26, "arkouda.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.fromkeys", false]], "fromkeys() (arkouda.numpy.number_format_strings method)": [[37, "arkouda.numpy.NUMBER_FORMAT_STRINGS.fromkeys", false]], "fromkeys() (arkouda.numpy.sctypedict method)": [[37, "arkouda.numpy.sctypeDict.fromkeys", false]], "fromkeys() (arkouda.numpy.sctypes method)": [[37, "arkouda.numpy.sctypes.fromkeys", false]], "fromkeys() (arkouda.numpy.seriesdtypes method)": [[37, "arkouda.numpy.SeriesDTypes.fromkeys", false]], "fromkeys() (arkouda.sctypedict method)": [[26, "arkouda.sctypeDict.fromkeys", false]], "fromkeys() (arkouda.sctypes method)": [[26, "arkouda.sctypes.fromkeys", false]], "fromkeys() (arkouda.seriesdtypes method)": [[26, "arkouda.SeriesDTypes.fromkeys", false]], "full() (in module arkouda)": [[26, "arkouda.full", false], [26, "id877", false]], "full() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.full", false]], "full() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.full", false]], "full_like() (in module arkouda)": [[26, "arkouda.full_like", false]], "full_like() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.full_like", false]], "full_like() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.full_like", false]], "full_match_bool (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.full_match_bool", false]], "full_match_ind (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.full_match_ind", false]], "fullmatch() (arkouda.strings method)": [[26, "arkouda.Strings.fullmatch", false], [26, "id518", false], [26, "id594", false], [26, "id670", false], [26, "id746", false], [103, "arkouda.Strings.fullmatch", false]], "fullmatch() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.fullmatch", false]], "gb (arkouda.dataframe.dataframegroupby attribute)": [[22, "arkouda.dataframe.DataFrameGroupBy.gb", false]], "gb (arkouda.dataframe.diffaggregate attribute)": [[22, "arkouda.dataframe.DiffAggregate.gb", false]], "gb (arkouda.dataframegroupby attribute)": [[26, "arkouda.DataFrameGroupBy.gb", false]], "gb (arkouda.diffaggregate attribute)": [[26, "arkouda.DiffAggregate.gb", false]], "gb_key_names (arkouda.dataframe.dataframegroupby attribute)": [[22, "arkouda.dataframe.DataFrameGroupBy.gb_key_names", false]], "gb_key_names (arkouda.dataframegroupby attribute)": [[26, "arkouda.DataFrameGroupBy.gb_key_names", false]], "gen_ranges() (in module arkouda)": [[26, "arkouda.gen_ranges", false], [26, "id878", false]], "gen_ranges() (in module arkouda.join)": [[31, "arkouda.join.gen_ranges", false]], "generate_history() (in module arkouda.client)": [[19, "arkouda.client.generate_history", false]], "generate_token() (in module arkouda.security)": [[49, "arkouda.security.generate_token", false]], "generate_username_token_json() (in module arkouda.security)": [[49, "arkouda.security.generate_username_token_json", false]], "generator (class in arkouda.numpy.random)": [[38, "arkouda.numpy.random.Generator", false]], "generator (class in arkouda.random)": [[44, "arkouda.random.Generator", false], [98, "arkouda.random.Generator", false]], "generic_concat() (in module arkouda)": [[26, "arkouda.generic_concat", false]], "generic_concat() (in module arkouda.util)": [[58, "arkouda.util.generic_concat", false]], "generic_moment() (arkouda.scipy.stats.chi2 method)": [[48, "arkouda.scipy.stats.chi2.generic_moment", false]], "get() (arkouda.dtypes.number_format_strings method)": [[23, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.dtypes.seriesdtypes method)": [[23, "arkouda.dtypes.SeriesDTypes.get", false]], "get() (arkouda.number_format_strings method)": [[26, "arkouda.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.get", false]], "get() (arkouda.numpy.number_format_strings method)": [[37, "arkouda.numpy.NUMBER_FORMAT_STRINGS.get", false]], "get() (arkouda.numpy.sctypedict method)": [[37, "arkouda.numpy.sctypeDict.get", false]], "get() (arkouda.numpy.sctypes method)": [[37, "arkouda.numpy.sctypes.get", false]], "get() (arkouda.numpy.seriesdtypes method)": [[37, "arkouda.numpy.SeriesDTypes.get", false]], "get() (arkouda.sctypedict method)": [[26, "arkouda.sctypeDict.get", false]], "get() (arkouda.sctypes method)": [[26, "arkouda.sctypes.get", false]], "get() (arkouda.seriesdtypes method)": [[26, "arkouda.SeriesDTypes.get", false]], "get_arkouda_client_directory() (in module arkouda.security)": [[49, "arkouda.security.get_arkouda_client_directory", false]], "get_byteorder() (in module arkouda)": [[26, "arkouda.get_byteorder", false]], "get_byteorder() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.get_byteorder", false]], "get_byteorder() (in module arkouda.numpy)": [[37, "arkouda.numpy.get_byteorder", false]], "get_byteorder() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.get_byteorder", false]], "get_bytes() (arkouda.strings method)": [[26, "arkouda.Strings.get_bytes", false], [26, "id519", false], [26, "id595", false], [26, "id671", false], [26, "id747", false]], "get_bytes() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.get_bytes", false]], "get_callback() (in module arkouda)": [[26, "arkouda.get_callback", false]], "get_callback() (in module arkouda.util)": [[58, "arkouda.util.get_callback", false]], "get_columns() (in module arkouda)": [[26, "arkouda.get_columns", false]], "get_columns() (in module arkouda.io)": [[29, "arkouda.io.get_columns", false]], "get_comm_diagnostics() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics", false]], "get_comm_diagnostics_amo() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_amo", false]], "get_comm_diagnostics_cache_get_hits() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_get_hits", false]], "get_comm_diagnostics_cache_get_misses() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_get_misses", false]], "get_comm_diagnostics_cache_num_page_readaheads() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_num_page_readaheads", false]], "get_comm_diagnostics_cache_num_prefetches() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_num_prefetches", false]], "get_comm_diagnostics_cache_prefetch_unused() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_prefetch_unused", false]], "get_comm_diagnostics_cache_prefetch_waited() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_prefetch_waited", false]], "get_comm_diagnostics_cache_put_hits() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_put_hits", false]], "get_comm_diagnostics_cache_put_misses() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_put_misses", false]], "get_comm_diagnostics_cache_readahead_unused() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_readahead_unused", false]], "get_comm_diagnostics_cache_readahead_waited() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_cache_readahead_waited", false]], "get_comm_diagnostics_execute_on() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_execute_on", false]], "get_comm_diagnostics_execute_on_fast() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_execute_on_fast", false]], "get_comm_diagnostics_execute_on_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_execute_on_nb", false]], "get_comm_diagnostics_get() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_get", false]], "get_comm_diagnostics_get_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_get_nb", false]], "get_comm_diagnostics_put() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_put", false]], "get_comm_diagnostics_put_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_put_nb", false]], "get_comm_diagnostics_try_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_try_nb", false]], "get_comm_diagnostics_wait_nb() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.get_comm_diagnostics_wait_nb", false]], "get_config() (in module arkouda.client)": [[19, "arkouda.client.get_config", false]], "get_datasets() (in module arkouda)": [[26, "arkouda.get_datasets", false], [87, "arkouda.get_datasets", false]], "get_datasets() (in module arkouda.io)": [[29, "arkouda.io.get_datasets", false]], "get_directory() (in module arkouda.io_util)": [[30, "arkouda.io_util.get_directory", false]], "get_filetype() (in module arkouda)": [[26, "arkouda.get_filetype", false]], "get_filetype() (in module arkouda.io)": [[29, "arkouda.io.get_filetype", false]], "get_home_directory() (in module arkouda.security)": [[49, "arkouda.security.get_home_directory", false]], "get_jth() (arkouda.segarray method)": [[26, "arkouda.SegArray.get_jth", false]], "get_jth() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.get_jth", false]], "get_jth() (in module arkouda.segarray)": [[99, "arkouda.SegArray.get_jth", false]], "get_length_n() (arkouda.segarray method)": [[26, "arkouda.SegArray.get_length_n", false]], "get_length_n() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.get_length_n", false]], "get_length_n() (in module arkouda.segarray)": [[99, "arkouda.SegArray.get_length_n", false]], "get_lengths() (arkouda.strings method)": [[26, "arkouda.Strings.get_lengths", false], [26, "id520", false], [26, "id596", false], [26, "id672", false], [26, "id748", false]], "get_lengths() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.get_lengths", false]], "get_level_values() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.get_level_values", false]], "get_level_values() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.get_level_values", false]], "get_match() (arkouda.matcher.matcher method)": [[34, "arkouda.matcher.Matcher.get_match", false]], "get_max_array_rank() (in module arkouda.client)": [[19, "arkouda.client.get_max_array_rank", false]], "get_mem_avail() (in module arkouda.client)": [[19, "arkouda.client.get_mem_avail", false]], "get_mem_status() (in module arkouda.client)": [[19, "arkouda.client.get_mem_status", false]], "get_mem_used() (in module arkouda.client)": [[19, "arkouda.client.get_mem_used", false]], "get_ngrams() (arkouda.segarray method)": [[26, "arkouda.SegArray.get_ngrams", false]], "get_ngrams() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.get_ngrams", false]], "get_ngrams() (in module arkouda.segarray)": [[99, "arkouda.SegArray.get_ngrams", false]], "get_null_indices() (in module arkouda)": [[26, "arkouda.get_null_indices", false]], "get_null_indices() (in module arkouda.io)": [[29, "arkouda.io.get_null_indices", false]], "get_offsets() (arkouda.strings method)": [[26, "arkouda.Strings.get_offsets", false], [26, "id521", false], [26, "id597", false], [26, "id673", false], [26, "id749", false]], "get_offsets() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.get_offsets", false]], "get_prefixes() (arkouda.segarray method)": [[26, "arkouda.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.get_prefixes", false]], "get_prefixes() (arkouda.strings method)": [[26, "arkouda.Strings.get_prefixes", false], [26, "id522", false], [26, "id598", false], [26, "id674", false], [26, "id750", false]], "get_prefixes() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.get_prefixes", false]], "get_prefixes() (in module arkouda.segarray)": [[99, "arkouda.SegArray.get_prefixes", false]], "get_server_byteorder() (in module arkouda)": [[26, "arkouda.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.numpy)": [[37, "arkouda.numpy.get_server_byteorder", false]], "get_server_byteorder() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.get_server_byteorder", false]], "get_server_commands() (in module arkouda.client)": [[19, "arkouda.client.get_server_commands", false]], "get_suffixes() (arkouda.segarray method)": [[26, "arkouda.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.get_suffixes", false]], "get_suffixes() (arkouda.strings method)": [[26, "arkouda.Strings.get_suffixes", false], [26, "id523", false], [26, "id599", false], [26, "id675", false], [26, "id751", false]], "get_suffixes() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.get_suffixes", false]], "get_suffixes() (in module arkouda.segarray)": [[99, "arkouda.SegArray.get_suffixes", false]], "get_username() (in module arkouda.security)": [[49, "arkouda.security.get_username", false]], "getarkoudalogger() (in module arkouda)": [[26, "arkouda.getArkoudaLogger", false]], "getfield() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.getfield", false]], "getfield() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.getfield", false]], "getfield() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.getfield", false]], "getfield() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.getfield", false]], "getfield() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.getfield", false]], "getfield() (arkouda.str_ method)": [[26, "arkouda.str_.getfield", false], [26, "id1315", false]], "getmandatoryrelease() (arkouda.dtypes.annotations method)": [[23, "arkouda.dtypes.annotations.getMandatoryRelease", false]], "getmandatoryrelease() (arkouda.numpy.dtypes.annotations method)": [[36, "arkouda.numpy.dtypes.annotations.getMandatoryRelease", false]], "getoptionalrelease() (arkouda.dtypes.annotations method)": [[23, "arkouda.dtypes.annotations.getOptionalRelease", false]], "getoptionalrelease() (arkouda.numpy.dtypes.annotations method)": [[36, "arkouda.numpy.dtypes.annotations.getOptionalRelease", false]], "greater() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.greater", false]], "greater_equal() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.greater_equal", false]], "group() (arkouda.categorical method)": [[26, "arkouda.Categorical.group", false], [26, "id27", false], [26, "id85", false]], "group() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.group", false]], "group() (arkouda.match.match method)": [[33, "arkouda.match.Match.group", false], [103, "arkouda.match.Match.group", false]], "group() (arkouda.strings method)": [[26, "arkouda.Strings.group", false], [26, "id524", false], [26, "id600", false], [26, "id676", false], [26, "id752", false]], "group() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.group", false]], "groupby (class in arkouda)": [[26, "arkouda.GroupBy", false], [26, "id245", false], [26, "id292", false], [26, "id339", false], [26, "id386", false], [26, "id433", false], [94, "arkouda.GroupBy", false]], "groupby (class in arkouda.groupbyclass)": [[24, "arkouda.groupbyclass.GroupBy", false]], "groupby() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.GroupBy", false], [26, "id123", false], [26, "arkouda.DataFrame.groupby", false], [26, "id144", false]], "groupby() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.GroupBy", false], [22, "arkouda.dataframe.DataFrame.groupby", false]], "groupby() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.groupby", false]], "groupby_reduction_types (class in arkouda)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES", false]], "groupby_reduction_types (class in arkouda.groupbyclass)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES", false]], "grouping (arkouda.segarray property)": [[26, "arkouda.SegArray.grouping", false]], "grouping (arkouda.segarray.segarray property)": [[50, "arkouda.segarray.SegArray.grouping", false]], "half (class in arkouda)": [[26, "arkouda.half", false]], "half (class in arkouda.numpy)": [[37, "arkouda.numpy.half", false]], "handled_functions (in module arkouda.array_api.array_object)": [[5, "arkouda.array_api.array_object.HANDLED_FUNCTIONS", false]], "has_repeat_labels() (arkouda.series method)": [[26, "arkouda.Series.has_repeat_labels", false]], "has_repeat_labels() (arkouda.series.series method)": [[51, "arkouda.series.Series.has_repeat_labels", false]], "hash() (arkouda.categorical method)": [[26, "arkouda.Categorical.hash", false], [26, "id28", false], [26, "id86", false]], "hash() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.hash", false]], "hash() (arkouda.segarray method)": [[26, "arkouda.SegArray.hash", false]], "hash() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.hash", false]], "hash() (arkouda.strings method)": [[26, "arkouda.Strings.hash", false], [26, "id525", false], [26, "id601", false], [26, "id677", false], [26, "id753", false]], "hash() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.hash", false]], "hash() (in module arkouda)": [[26, "arkouda.hash", false]], "hash() (in module arkouda.numpy)": [[37, "arkouda.numpy.hash", false]], "hasnans() (arkouda.series method)": [[26, "arkouda.Series.hasnans", false]], "hasnans() (arkouda.series.series method)": [[51, "arkouda.series.Series.hasnans", false]], "head() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.head", false], [26, "id145", false]], "head() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.head", false]], "head() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.head", false]], "head() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.head", false]], "head() (arkouda.groupby method)": [[26, "arkouda.GroupBy.head", false], [26, "id269", false], [26, "id316", false], [26, "id363", false], [26, "id410", false], [26, "id457", false], [94, "arkouda.GroupBy.head", false]], "head() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.head", false]], "head() (arkouda.series method)": [[26, "arkouda.Series.head", false]], "head() (arkouda.series.series method)": [[51, "arkouda.series.Series.head", false]], "head() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.head", false]], "head() (in module arkouda.series)": [[100, "arkouda.Series.head", false]], "hex() (arkouda.akfloat64 method)": [[26, "arkouda.akfloat64.hex", false], [26, "id824", false]], "hex() (arkouda.double method)": [[26, "arkouda.double.hex", false]], "hex() (arkouda.dtypes.float64 method)": [[23, "arkouda.dtypes.float64.hex", false]], "hex() (arkouda.float64 method)": [[26, "arkouda.float64.hex", false]], "hex() (arkouda.float_ method)": [[26, "arkouda.float_.hex", false]], "hex() (arkouda.numpy.double method)": [[37, "arkouda.numpy.double.hex", false]], "hex() (arkouda.numpy.dtypes.float64 method)": [[36, "arkouda.numpy.dtypes.float64.hex", false]], "hex() (arkouda.numpy.float64 method)": [[37, "arkouda.numpy.float64.hex", false]], "hex() (arkouda.numpy.float_ method)": [[37, "arkouda.numpy.float_.hex", false]], "hist_all() (in module arkouda)": [[26, "arkouda.hist_all", false]], "hist_all() (in module arkouda.plotting)": [[43, "arkouda.plotting.hist_all", false]], "histogram() (in module arkouda)": [[26, "arkouda.histogram", false], [26, "id879", false], [95, "arkouda.histogram", false]], "histogram() (in module arkouda.numpy)": [[37, "arkouda.numpy.histogram", false]], "histogram2d() (in module arkouda)": [[26, "arkouda.histogram2d", false]], "histogram2d() (in module arkouda.numpy)": [[37, "arkouda.numpy.histogram2d", false]], "histogramdd() (in module arkouda)": [[26, "arkouda.histogramdd", false]], "histogramdd() (in module arkouda.numpy)": [[37, "arkouda.numpy.histogramdd", false]], "historyretriever (class in arkouda.history)": [[25, "arkouda.history.HistoryRetriever", false]], "hour (arkouda.datetime property)": [[26, "arkouda.Datetime.hour", false], [26, "id185", false], [26, "id218", false]], "hour (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.hour", false]], "iat (arkouda.series property)": [[26, "arkouda.Series.iat", false]], "iat (arkouda.series.series property)": [[51, "arkouda.series.Series.iat", false]], "identity() (in module arkouda.util)": [[58, "arkouda.util.identity", false]], "iexp (arkouda.finfo attribute)": [[26, "arkouda.finfo.iexp", false]], "iexp (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.iexp", false]], "ignore() (arkouda.errormode method)": [[26, "arkouda.ErrorMode.ignore", false]], "ignore() (arkouda.numpy.errormode method)": [[37, "arkouda.numpy.ErrorMode.ignore", false]], "iinfo (class in arkouda)": [[26, "arkouda.iinfo", false]], "iinfo (class in arkouda.numpy)": [[37, "arkouda.numpy.iinfo", false]], "iinfo() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.iinfo", false]], "iinfo_object (class in arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.iinfo_object", false]], "iloc (arkouda.series property)": [[26, "arkouda.Series.iloc", false]], "iloc (arkouda.series.series property)": [[51, "arkouda.series.Series.iloc", false]], "imag() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.imag", false]], "imag() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.imag", false]], "imag() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.imag", false]], "imag() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.imag", false]], "imag() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.imag", false]], "imag() (arkouda.str_ method)": [[26, "arkouda.str_.imag", false], [26, "id1316", false]], "imag() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.imag", false]], "implements_numpy() (in module arkouda.array_api.array_object)": [[5, "arkouda.array_api.array_object.implements_numpy", false]], "import_data() (in module arkouda)": [[26, "arkouda.import_data", false], [87, "arkouda.import_data", false]], "import_data() (in module arkouda.io)": [[29, "arkouda.io.import_data", false]], "in1d() (arkouda.categorical method)": [[26, "arkouda.Categorical.in1d", false], [26, "id29", false], [26, "id87", false]], "in1d() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.in1d", false]], "in1d() (in module arkouda)": [[26, "arkouda.in1d", false], [26, "id882", false], [26, "id883", false], [101, "arkouda.in1d", false]], "in1d() (in module arkouda.pdarraysetops)": [[42, "arkouda.pdarraysetops.in1d", false]], "in1d_intervals() (in module arkouda)": [[26, "arkouda.in1d_intervals", false]], "in1d_intervals() (in module arkouda.alignment)": [[3, "arkouda.alignment.in1d_intervals", false]], "index (arkouda.dataframe property)": [[26, "arkouda.DataFrame.index", false], [26, "id146", false]], "index (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.index", false]], "index (arkouda.index property)": [[26, "arkouda.Index.index", false]], "index (arkouda.index.index property)": [[27, "arkouda.index.Index.index", false]], "index (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.index", false]], "index (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.index", false]], "index (class in arkouda)": [[26, "arkouda.Index", false], [88, "arkouda.Index", false]], "index (class in arkouda.index)": [[27, "arkouda.index.Index", false]], "index() (arkouda.arkouda_supported_ints method)": [[26, "arkouda.ARKOUDA_SUPPORTED_INTS.index", false]], "index() (arkouda.dtypes.arkouda_supported_bools method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_BOOLS.index", false]], "index() (arkouda.dtypes.arkouda_supported_floats method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_FLOATS.index", false]], "index() (arkouda.dtypes.arkouda_supported_ints method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_INTS.index", false]], "index() (arkouda.dtypes.arkouda_supported_numbers method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_NUMBERS.index", false]], "index() (arkouda.numpy.arkouda_supported_ints method)": [[37, "arkouda.numpy.ARKOUDA_SUPPORTED_INTS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_bools method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_BOOLS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_floats method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_ints method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS.index", false]], "index() (arkouda.numpy.dtypes.arkouda_supported_numbers method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS.index", false]], "index() (arkouda.numpy.scalartype method)": [[37, "arkouda.numpy.ScalarType.index", false]], "index() (arkouda.scalartype method)": [[26, "arkouda.ScalarType.index", false]], "indexof1d() (in module arkouda)": [[26, "arkouda.indexof1d", false]], "indexof1d() (in module arkouda.pdarraysetops)": [[42, "arkouda.pdarraysetops.indexof1d", false]], "indices (arkouda.array_api.set_functions.uniqueallresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueAllResult.indices", false]], "indices (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.indices", false]], "inexact (class in arkouda)": [[26, "arkouda.inexact", false]], "inexact (class in arkouda.numpy)": [[37, "arkouda.numpy.inexact", false]], "inf (in module arkouda)": [[26, "arkouda.Inf", false], [26, "arkouda.inf", false]], "inf (in module arkouda.numpy)": [[37, "arkouda.numpy.Inf", false], [37, "arkouda.numpy.inf", false]], "inferred_type (arkouda.categorical property)": [[26, "arkouda.Categorical.inferred_type", false], [26, "id30", false], [26, "id88", false]], "inferred_type (arkouda.categorical.categorical property)": [[18, "arkouda.categorical.Categorical.inferred_type", false]], "inferred_type (arkouda.index property)": [[26, "arkouda.Index.inferred_type", false]], "inferred_type (arkouda.index.index property)": [[27, "arkouda.index.Index.inferred_type", false]], "inferred_type (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.inferred_type", false]], "inferred_type (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.inferred_type", false]], "inferred_type (arkouda.pdarray property)": [[26, "arkouda.pdarray.inferred_type", false], [26, "id1019", false], [26, "id1090", false], [26, "id1161", false], [26, "id1232", false], [26, "id948", false]], "inferred_type (arkouda.pdarrayclass.pdarray property)": [[39, "arkouda.pdarrayclass.pdarray.inferred_type", false]], "inferred_type (arkouda.strings property)": [[26, "arkouda.Strings.inferred_type", false], [26, "id526", false], [26, "id602", false], [26, "id678", false], [26, "id754", false]], "inferred_type (arkouda.strings.strings property)": [[55, "arkouda.strings.Strings.inferred_type", false]], "infinity (in module arkouda)": [[26, "arkouda.Infinity", false]], "infinity (in module arkouda.numpy)": [[37, "arkouda.numpy.Infinity", false]], "info (arkouda.dataframe property)": [[26, "arkouda.DataFrame.info", false], [26, "id147", false]], "info (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.info", false]], "info (arkouda.logger.loglevel attribute)": [[32, "arkouda.logger.LogLevel.INFO", false]], "info (arkouda.loglevel attribute)": [[26, "arkouda.LogLevel.INFO", false]], "info() (arkouda.categorical method)": [[26, "arkouda.Categorical.info", false], [26, "id31", false], [26, "id89", false]], "info() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.info", false]], "info() (arkouda.pdarray method)": [[26, "arkouda.pdarray.info", false], [26, "id1020", false], [26, "id1091", false], [26, "id1162", false], [26, "id1233", false], [26, "id949", false]], "info() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.info", false]], "info() (arkouda.strings method)": [[26, "arkouda.Strings.info", false], [26, "id527", false], [26, "id603", false], [26, "id679", false], [26, "id755", false]], "info() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.info", false]], "information() (in module arkouda)": [[26, "arkouda.information", false]], "information() (in module arkouda.infoclass)": [[28, "arkouda.infoclass.information", false]], "infty (in module arkouda)": [[26, "arkouda.infty", false]], "infty (in module arkouda.numpy)": [[37, "arkouda.numpy.infty", false]], "int() (arkouda.dtype method)": [[26, "arkouda.DType.INT", false]], "int() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.INT", false]], "int() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.INT", false]], "int() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.INT", false]], "int16 (class in arkouda)": [[26, "arkouda.int16", false]], "int16 (class in arkouda.dtypes)": [[23, "arkouda.dtypes.int16", false]], "int16 (class in arkouda.numpy)": [[37, "arkouda.numpy.int16", false]], "int16 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.int16", false]], "int16() (arkouda.dtype method)": [[26, "arkouda.DType.INT16", false]], "int16() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.INT16", false]], "int16() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.INT16", false]], "int16() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.INT16", false]], "int16dtype (class in arkouda)": [[26, "arkouda.Int16DType", false]], "int16dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.Int16DType", false]], "int32 (class in arkouda)": [[26, "arkouda.int32", false]], "int32 (class in arkouda.dtypes)": [[23, "arkouda.dtypes.int32", false]], "int32 (class in arkouda.numpy)": [[37, "arkouda.numpy.int32", false]], "int32 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.int32", false]], "int32() (arkouda.dtype method)": [[26, "arkouda.DType.INT32", false]], "int32() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.INT32", false]], "int32() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.INT32", false]], "int32() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.INT32", false]], "int32dtype (class in arkouda)": [[26, "arkouda.Int32DType", false]], "int32dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.Int32DType", false]], "int64 (class in arkouda)": [[26, "arkouda.int64", false], [26, "id884", false]], "int64 (class in arkouda.dtypes)": [[23, "arkouda.dtypes.int64", false]], "int64 (class in arkouda.numpy)": [[37, "arkouda.numpy.int64", false]], "int64 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.int64", false]], "int64() (arkouda.dtype method)": [[26, "arkouda.DType.INT64", false]], "int64() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.INT64", false]], "int64() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.INT64", false]], "int64() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.INT64", false]], "int64dtype (class in arkouda)": [[26, "arkouda.Int64DType", false]], "int64dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.Int64DType", false]], "int8 (class in arkouda)": [[26, "arkouda.int8", false]], "int8 (class in arkouda.dtypes)": [[23, "arkouda.dtypes.int8", false]], "int8 (class in arkouda.numpy)": [[37, "arkouda.numpy.int8", false]], "int8 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.int8", false]], "int8() (arkouda.dtype method)": [[26, "arkouda.DType.INT8", false]], "int8() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.INT8", false]], "int8() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.INT8", false]], "int8() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.INT8", false]], "int8dtype (class in arkouda)": [[26, "arkouda.Int8DType", false]], "int8dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.Int8DType", false]], "int_ (class in arkouda)": [[26, "arkouda.int_", false]], "int_ (class in arkouda.numpy)": [[37, "arkouda.numpy.int_", false]], "int_scalars (class in arkouda)": [[26, "arkouda.int_scalars", false], [26, "id904", false], [26, "id905", false]], "int_scalars (class in arkouda.dtypes)": [[23, "arkouda.dtypes.int_scalars", false]], "int_scalars (class in arkouda.numpy)": [[37, "arkouda.numpy.int_scalars", false]], "int_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.int_scalars", false]], "intc (class in arkouda)": [[26, "arkouda.intc", false]], "intc (class in arkouda.numpy)": [[37, "arkouda.numpy.intc", false]], "intdtype (class in arkouda)": [[26, "arkouda.IntDType", false]], "intdtype (class in arkouda.numpy)": [[37, "arkouda.numpy.IntDType", false]], "integer (class in arkouda)": [[26, "arkouda.integer", false]], "integer (class in arkouda.numpy)": [[37, "arkouda.numpy.integer", false]], "integers() (arkouda.numpy.random.generator method)": [[38, "arkouda.numpy.random.Generator.integers", false]], "integers() (arkouda.random.generator method)": [[44, "arkouda.random.Generator.integers", false]], "integers() (in module arkouda.random.generator)": [[98, "arkouda.random.Generator.integers", false]], "intersect() (arkouda.segarray method)": [[26, "arkouda.SegArray.intersect", false]], "intersect() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.intersect", false]], "intersect() (in module arkouda)": [[26, "arkouda.intersect", false]], "intersect() (in module arkouda.dataframe)": [[22, "arkouda.dataframe.intersect", false]], "intersect() (in module arkouda.segarray)": [[99, "arkouda.SegArray.intersect", false]], "intersect1d() (in module arkouda)": [[26, "arkouda.intersect1d", false], [101, "arkouda.intersect1d", false]], "intersect1d() (in module arkouda.pdarraysetops)": [[42, "arkouda.pdarraysetops.intersect1d", false]], "intersection() (arkouda.arkouda_supported_dtypes method)": [[26, "arkouda.ARKOUDA_SUPPORTED_DTYPES.intersection", false]], "intersection() (arkouda.dtypeobjects method)": [[26, "arkouda.DTypeObjects.intersection", false]], "intersection() (arkouda.dtypes method)": [[26, "arkouda.DTypes.intersection", false]], "intersection() (arkouda.dtypes.arkouda_supported_dtypes method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.intersection", false]], "intersection() (arkouda.dtypes.dtypeobjects method)": [[23, "arkouda.dtypes.DTypeObjects.intersection", false]], "intersection() (arkouda.dtypes.dtypes method)": [[23, "arkouda.dtypes.DTypes.intersection", false]], "intersection() (arkouda.dtypes.inttypes method)": [[23, "arkouda.dtypes.intTypes.intersection", false]], "intersection() (arkouda.dtypes.numericdtypes method)": [[23, "arkouda.dtypes.NumericDTypes.intersection", false]], "intersection() (arkouda.dtypes.scalardtypes method)": [[23, "arkouda.dtypes.ScalarDTypes.intersection", false]], "intersection() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.intersection", false]], "intersection() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.intersection", false]], "intersection() (arkouda.inttypes method)": [[26, "arkouda.intTypes.intersection", false], [26, "id889", false], [26, "id898", false]], "intersection() (arkouda.numericdtypes method)": [[26, "arkouda.NumericDTypes.intersection", false]], "intersection() (arkouda.numpy.arkouda_supported_dtypes method)": [[37, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.intersection", false]], "intersection() (arkouda.numpy.dtypeobjects method)": [[37, "arkouda.numpy.DTypeObjects.intersection", false]], "intersection() (arkouda.numpy.dtypes method)": [[37, "arkouda.numpy.DTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.intersection", false]], "intersection() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.intersection", false]], "intersection() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.intersection", false]], "intersection() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.intersection", false]], "intersection() (arkouda.numpy.inttypes method)": [[37, "arkouda.numpy.intTypes.intersection", false]], "intersection() (arkouda.numpy.numericdtypes method)": [[37, "arkouda.numpy.NumericDTypes.intersection", false]], "intersection() (arkouda.numpy.scalardtypes method)": [[37, "arkouda.numpy.ScalarDTypes.intersection", false]], "intersection() (arkouda.scalardtypes method)": [[26, "arkouda.ScalarDTypes.intersection", false]], "interval_lookup() (in module arkouda)": [[26, "arkouda.interval_lookup", false]], "interval_lookup() (in module arkouda.alignment)": [[3, "arkouda.alignment.interval_lookup", false]], "intp (class in arkouda)": [[26, "arkouda.intp", false]], "intp (class in arkouda.numpy)": [[37, "arkouda.numpy.intp", false]], "inttypes (class in arkouda)": [[26, "arkouda.intTypes", false], [26, "id886", false], [26, "id895", false]], "inttypes (class in arkouda.dtypes)": [[23, "arkouda.dtypes.intTypes", false]], "inttypes (class in arkouda.numpy)": [[37, "arkouda.numpy.intTypes", false]], "inttypes (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.intTypes", false]], "intx() (in module arkouda)": [[26, "arkouda.intx", false]], "intx() (in module arkouda.dataframe)": [[22, "arkouda.dataframe.intx", false]], "inverse_indices (arkouda.array_api.set_functions.uniqueallresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueAllResult.inverse_indices", false]], "inverse_indices (arkouda.array_api.set_functions.uniqueinverseresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueInverseResult.inverse_indices", false]], "invert_permutation() (in module arkouda)": [[26, "arkouda.invert_permutation", false]], "invert_permutation() (in module arkouda.dataframe)": [[22, "arkouda.dataframe.invert_permutation", false]], "invert_permutation() (in module arkouda.util)": [[58, "arkouda.util.invert_permutation", false]], "ip_address() (in module arkouda)": [[26, "arkouda.ip_address", false]], "ip_address() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.ip_address", false]], "ipv4 (class in arkouda)": [[26, "arkouda.IPv4", false]], "ipv4 (class in arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.IPv4", false]], "is_cosorted() (in module arkouda)": [[26, "arkouda.is_cosorted", false]], "is_cosorted() (in module arkouda.alignment)": [[3, "arkouda.alignment.is_cosorted", false]], "is_float() (in module arkouda.util)": [[58, "arkouda.util.is_float", false]], "is_int() (in module arkouda.util)": [[58, "arkouda.util.is_int", false]], "is_integer() (arkouda.akfloat64 method)": [[26, "arkouda.akfloat64.is_integer", false], [26, "id825", false]], "is_integer() (arkouda.double method)": [[26, "arkouda.double.is_integer", false]], "is_integer() (arkouda.dtypes.float16 method)": [[23, "arkouda.dtypes.float16.is_integer", false]], "is_integer() (arkouda.dtypes.float32 method)": [[23, "arkouda.dtypes.float32.is_integer", false]], "is_integer() (arkouda.dtypes.float64 method)": [[23, "arkouda.dtypes.float64.is_integer", false]], "is_integer() (arkouda.float16 method)": [[26, "arkouda.float16.is_integer", false]], "is_integer() (arkouda.float32 method)": [[26, "arkouda.float32.is_integer", false]], "is_integer() (arkouda.float64 method)": [[26, "arkouda.float64.is_integer", false]], "is_integer() (arkouda.float_ method)": [[26, "arkouda.float_.is_integer", false]], "is_integer() (arkouda.half method)": [[26, "arkouda.half.is_integer", false]], "is_integer() (arkouda.integer method)": [[26, "arkouda.integer.is_integer", false]], "is_integer() (arkouda.longdouble method)": [[26, "arkouda.longdouble.is_integer", false]], "is_integer() (arkouda.longfloat method)": [[26, "arkouda.longfloat.is_integer", false]], "is_integer() (arkouda.numpy.double method)": [[37, "arkouda.numpy.double.is_integer", false]], "is_integer() (arkouda.numpy.dtypes.float16 method)": [[36, "arkouda.numpy.dtypes.float16.is_integer", false]], "is_integer() (arkouda.numpy.dtypes.float32 method)": [[36, "arkouda.numpy.dtypes.float32.is_integer", false]], "is_integer() (arkouda.numpy.dtypes.float64 method)": [[36, "arkouda.numpy.dtypes.float64.is_integer", false]], "is_integer() (arkouda.numpy.float16 method)": [[37, "arkouda.numpy.float16.is_integer", false]], "is_integer() (arkouda.numpy.float32 method)": [[37, "arkouda.numpy.float32.is_integer", false]], "is_integer() (arkouda.numpy.float64 method)": [[37, "arkouda.numpy.float64.is_integer", false]], "is_integer() (arkouda.numpy.float_ method)": [[37, "arkouda.numpy.float_.is_integer", false]], "is_integer() (arkouda.numpy.half method)": [[37, "arkouda.numpy.half.is_integer", false]], "is_integer() (arkouda.numpy.integer method)": [[37, "arkouda.numpy.integer.is_integer", false]], "is_integer() (arkouda.numpy.longdouble method)": [[37, "arkouda.numpy.longdouble.is_integer", false]], "is_integer() (arkouda.numpy.longfloat method)": [[37, "arkouda.numpy.longfloat.is_integer", false]], "is_integer() (arkouda.numpy.single method)": [[37, "arkouda.numpy.single.is_integer", false]], "is_integer() (arkouda.single method)": [[26, "arkouda.single.is_integer", false]], "is_ipv4() (in module arkouda)": [[26, "arkouda.is_ipv4", false]], "is_ipv4() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.is_ipv4", false]], "is_ipv6() (in module arkouda)": [[26, "arkouda.is_ipv6", false]], "is_ipv6() (in module arkouda.client_dtypes)": [[20, "arkouda.client_dtypes.is_ipv6", false]], "is_leap_year (arkouda.datetime property)": [[26, "arkouda.Datetime.is_leap_year", false], [26, "id186", false], [26, "id219", false]], "is_leap_year (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.is_leap_year", false]], "is_numeric() (in module arkouda.util)": [[58, "arkouda.util.is_numeric", false]], "is_registered() (arkouda.categorical method)": [[26, "arkouda.Categorical.is_registered", false], [26, "id32", false], [26, "id90", false]], "is_registered() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.is_registered", false]], "is_registered() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.is_registered", false], [26, "id148", false]], "is_registered() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.is_registered", false]], "is_registered() (arkouda.datetime method)": [[26, "arkouda.Datetime.is_registered", false], [26, "id187", false], [26, "id220", false]], "is_registered() (arkouda.groupby method)": [[26, "arkouda.GroupBy.is_registered", false], [26, "id270", false], [26, "id317", false], [26, "id364", false], [26, "id411", false], [26, "id458", false], [94, "arkouda.GroupBy.is_registered", false]], "is_registered() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.is_registered", false]], "is_registered() (arkouda.index method)": [[26, "arkouda.Index.is_registered", false]], "is_registered() (arkouda.index.index method)": [[27, "arkouda.index.Index.is_registered", false]], "is_registered() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.is_registered", false]], "is_registered() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.is_registered", false]], "is_registered() (arkouda.pdarray method)": [[26, "arkouda.pdarray.is_registered", false], [26, "id1021", false], [26, "id1092", false], [26, "id1163", false], [26, "id1234", false], [26, "id950", false]], "is_registered() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.is_registered", false]], "is_registered() (arkouda.segarray method)": [[26, "arkouda.SegArray.is_registered", false]], "is_registered() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.is_registered", false]], "is_registered() (arkouda.series method)": [[26, "arkouda.Series.is_registered", false]], "is_registered() (arkouda.series.series method)": [[51, "arkouda.series.Series.is_registered", false]], "is_registered() (arkouda.strings method)": [[26, "arkouda.Strings.is_registered", false], [26, "id528", false], [26, "id604", false], [26, "id680", false], [26, "id756", false]], "is_registered() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.is_registered", false]], "is_registered() (arkouda.timeclass.datetime method)": [[57, "arkouda.timeclass.Datetime.is_registered", false]], "is_registered() (arkouda.timeclass.timedelta method)": [[57, "arkouda.timeclass.Timedelta.is_registered", false]], "is_registered() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.is_registered", false], [26, "id801", false]], "is_registered() (in module arkouda)": [[26, "arkouda.is_registered", false]], "is_registered() (in module arkouda.util)": [[58, "arkouda.util.is_registered", false]], "is_sorted() (arkouda.pdarray method)": [[26, "arkouda.pdarray.is_sorted", false], [26, "id1022", false], [26, "id1093", false], [26, "id1164", false], [26, "id1235", false], [26, "id951", false], [95, "arkouda.pdarray.is_sorted", false]], "is_sorted() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.is_sorted", false]], "is_sorted() (in module arkouda)": [[90, "arkouda.is_sorted", false]], "is_unique (arkouda.index property)": [[26, "arkouda.Index.is_unique", false]], "is_unique (arkouda.index.index property)": [[27, "arkouda.index.Index.is_unique", false]], "isalnum() (arkouda.strings method)": [[26, "arkouda.Strings.isalnum", false], [26, "id529", false], [26, "id605", false], [26, "id681", false], [26, "id757", false]], "isalnum() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.isalnum", false]], "isalpha() (arkouda.strings method)": [[26, "arkouda.Strings.isalpha", false], [26, "id530", false], [26, "id606", false], [26, "id682", false], [26, "id758", false]], "isalpha() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.isalpha", false]], "isdecimal() (arkouda.strings method)": [[26, "arkouda.Strings.isdecimal", false], [26, "id531", false], [26, "id607", false], [26, "id683", false], [26, "id759", false]], "isdecimal() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.isdecimal", false]], "isdigit() (arkouda.strings method)": [[26, "arkouda.Strings.isdigit", false], [26, "id532", false], [26, "id608", false], [26, "id684", false], [26, "id760", false]], "isdigit() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.isdigit", false]], "isdisjoint() (arkouda.arkouda_supported_dtypes method)": [[26, "arkouda.ARKOUDA_SUPPORTED_DTYPES.isdisjoint", false]], "isdisjoint() (arkouda.dtypeobjects method)": [[26, "arkouda.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.dtypes method)": [[26, "arkouda.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.arkouda_supported_dtypes method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.dtypeobjects method)": [[23, "arkouda.dtypes.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.dtypes method)": [[23, "arkouda.dtypes.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.inttypes method)": [[23, "arkouda.dtypes.intTypes.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.numericdtypes method)": [[23, "arkouda.dtypes.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.dtypes.scalardtypes method)": [[23, "arkouda.dtypes.ScalarDTypes.isdisjoint", false]], "isdisjoint() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.isdisjoint", false]], "isdisjoint() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.isdisjoint", false]], "isdisjoint() (arkouda.inttypes method)": [[26, "arkouda.intTypes.isdisjoint", false], [26, "id890", false], [26, "id899", false]], "isdisjoint() (arkouda.numericdtypes method)": [[26, "arkouda.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.arkouda_supported_dtypes method)": [[37, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypeobjects method)": [[37, "arkouda.numpy.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes method)": [[37, "arkouda.numpy.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.inttypes method)": [[37, "arkouda.numpy.intTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.numericdtypes method)": [[37, "arkouda.numpy.NumericDTypes.isdisjoint", false]], "isdisjoint() (arkouda.numpy.scalardtypes method)": [[37, "arkouda.numpy.ScalarDTypes.isdisjoint", false]], "isdisjoint() (arkouda.scalardtypes method)": [[26, "arkouda.ScalarDTypes.isdisjoint", false]], "isdtype() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.isdtype", false]], "isempty() (arkouda.strings method)": [[26, "arkouda.Strings.isempty", false], [26, "id533", false], [26, "id609", false], [26, "id685", false], [26, "id761", false]], "isempty() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.isempty", false]], "isfinite() (in module arkouda)": [[26, "arkouda.isfinite", false]], "isfinite() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.isfinite", false]], "isfinite() (in module arkouda.numpy)": [[37, "arkouda.numpy.isfinite", false]], "isin() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.isin", false], [26, "id149", false]], "isin() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.isin", false]], "isin() (arkouda.series method)": [[26, "arkouda.Series.isin", false]], "isin() (arkouda.series.series method)": [[51, "arkouda.series.Series.isin", false]], "isinf() (in module arkouda)": [[26, "arkouda.isinf", false]], "isinf() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.isinf", false]], "isinf() (in module arkouda.numpy)": [[37, "arkouda.numpy.isinf", false]], "islower() (arkouda.strings method)": [[26, "arkouda.Strings.islower", false], [26, "id534", false], [26, "id610", false], [26, "id686", false], [26, "id762", false]], "islower() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.islower", false]], "isna() (arkouda.categorical method)": [[26, "arkouda.Categorical.isna", false], [26, "id33", false], [26, "id91", false]], "isna() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.isna", false]], "isna() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.isna", false], [26, "id150", false]], "isna() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.isna", false]], "isna() (arkouda.series method)": [[26, "arkouda.Series.isna", false]], "isna() (arkouda.series.series method)": [[51, "arkouda.series.Series.isna", false]], "isnan() (in module arkouda)": [[26, "arkouda.isnan", false], [26, "id909", false]], "isnan() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.isnan", false]], "isnan() (in module arkouda.numpy)": [[37, "arkouda.numpy.isnan", false]], "isnull() (arkouda.series method)": [[26, "arkouda.Series.isnull", false]], "isnull() (arkouda.series.series method)": [[51, "arkouda.series.Series.isnull", false]], "isocalendar() (arkouda.datetime method)": [[26, "arkouda.Datetime.isocalendar", false], [26, "id188", false], [26, "id221", false]], "isocalendar() (arkouda.timeclass.datetime method)": [[57, "arkouda.timeclass.Datetime.isocalendar", false]], "isscalar() (in module arkouda)": [[26, "arkouda.isscalar", false]], "isscalar() (in module arkouda.numpy)": [[37, "arkouda.numpy.isscalar", false]], "issctype() (in module arkouda)": [[26, "arkouda.issctype", false]], "issctype() (in module arkouda.numpy)": [[37, "arkouda.numpy.issctype", false]], "isspace() (arkouda.strings method)": [[26, "arkouda.Strings.isspace", false], [26, "id535", false], [26, "id611", false], [26, "id687", false], [26, "id763", false]], "isspace() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.isspace", false]], "issubclass_() (in module arkouda)": [[26, "arkouda.issubclass_", false]], "issubclass_() (in module arkouda.numpy)": [[37, "arkouda.numpy.issubclass_", false]], "issubdtype() (in module arkouda)": [[26, "arkouda.issubdtype", false]], "issubdtype() (in module arkouda.numpy)": [[37, "arkouda.numpy.issubdtype", false]], "issubset() (arkouda.arkouda_supported_dtypes method)": [[26, "arkouda.ARKOUDA_SUPPORTED_DTYPES.issubset", false]], "issubset() (arkouda.dtypeobjects method)": [[26, "arkouda.DTypeObjects.issubset", false]], "issubset() (arkouda.dtypes method)": [[26, "arkouda.DTypes.issubset", false]], "issubset() (arkouda.dtypes.arkouda_supported_dtypes method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.issubset", false]], "issubset() (arkouda.dtypes.dtypeobjects method)": [[23, "arkouda.dtypes.DTypeObjects.issubset", false]], "issubset() (arkouda.dtypes.dtypes method)": [[23, "arkouda.dtypes.DTypes.issubset", false]], "issubset() (arkouda.dtypes.inttypes method)": [[23, "arkouda.dtypes.intTypes.issubset", false]], "issubset() (arkouda.dtypes.numericdtypes method)": [[23, "arkouda.dtypes.NumericDTypes.issubset", false]], "issubset() (arkouda.dtypes.scalardtypes method)": [[23, "arkouda.dtypes.ScalarDTypes.issubset", false]], "issubset() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.issubset", false]], "issubset() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.issubset", false]], "issubset() (arkouda.inttypes method)": [[26, "arkouda.intTypes.issubset", false], [26, "id891", false], [26, "id900", false]], "issubset() (arkouda.numericdtypes method)": [[26, "arkouda.NumericDTypes.issubset", false]], "issubset() (arkouda.numpy.arkouda_supported_dtypes method)": [[37, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.issubset", false]], "issubset() (arkouda.numpy.dtypeobjects method)": [[37, "arkouda.numpy.DTypeObjects.issubset", false]], "issubset() (arkouda.numpy.dtypes method)": [[37, "arkouda.numpy.DTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.issubset", false]], "issubset() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.issubset", false]], "issubset() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.issubset", false]], "issubset() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.issubset", false]], "issubset() (arkouda.numpy.inttypes method)": [[37, "arkouda.numpy.intTypes.issubset", false]], "issubset() (arkouda.numpy.numericdtypes method)": [[37, "arkouda.numpy.NumericDTypes.issubset", false]], "issubset() (arkouda.numpy.scalardtypes method)": [[37, "arkouda.numpy.ScalarDTypes.issubset", false]], "issubset() (arkouda.scalardtypes method)": [[26, "arkouda.ScalarDTypes.issubset", false]], "issuperset() (arkouda.arkouda_supported_dtypes method)": [[26, "arkouda.ARKOUDA_SUPPORTED_DTYPES.issuperset", false]], "issuperset() (arkouda.dtypeobjects method)": [[26, "arkouda.DTypeObjects.issuperset", false]], "issuperset() (arkouda.dtypes method)": [[26, "arkouda.DTypes.issuperset", false]], "issuperset() (arkouda.dtypes.arkouda_supported_dtypes method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.issuperset", false]], "issuperset() (arkouda.dtypes.dtypeobjects method)": [[23, "arkouda.dtypes.DTypeObjects.issuperset", false]], "issuperset() (arkouda.dtypes.dtypes method)": [[23, "arkouda.dtypes.DTypes.issuperset", false]], "issuperset() (arkouda.dtypes.inttypes method)": [[23, "arkouda.dtypes.intTypes.issuperset", false]], "issuperset() (arkouda.dtypes.numericdtypes method)": [[23, "arkouda.dtypes.NumericDTypes.issuperset", false]], "issuperset() (arkouda.dtypes.scalardtypes method)": [[23, "arkouda.dtypes.ScalarDTypes.issuperset", false]], "issuperset() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.issuperset", false]], "issuperset() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.issuperset", false]], "issuperset() (arkouda.inttypes method)": [[26, "arkouda.intTypes.issuperset", false], [26, "id892", false], [26, "id901", false]], "issuperset() (arkouda.numericdtypes method)": [[26, "arkouda.NumericDTypes.issuperset", false]], "issuperset() (arkouda.numpy.arkouda_supported_dtypes method)": [[37, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.issuperset", false]], "issuperset() (arkouda.numpy.dtypeobjects method)": [[37, "arkouda.numpy.DTypeObjects.issuperset", false]], "issuperset() (arkouda.numpy.dtypes method)": [[37, "arkouda.numpy.DTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.issuperset", false]], "issuperset() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.issuperset", false]], "issuperset() (arkouda.numpy.inttypes method)": [[37, "arkouda.numpy.intTypes.issuperset", false]], "issuperset() (arkouda.numpy.numericdtypes method)": [[37, "arkouda.numpy.NumericDTypes.issuperset", false]], "issuperset() (arkouda.numpy.scalardtypes method)": [[37, "arkouda.numpy.ScalarDTypes.issuperset", false]], "issuperset() (arkouda.scalardtypes method)": [[26, "arkouda.ScalarDTypes.issuperset", false]], "issupportedbool() (in module arkouda)": [[26, "arkouda.isSupportedBool", false]], "issupportedbool() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.isSupportedBool", false]], "issupportedbool() (in module arkouda.numpy)": [[37, "arkouda.numpy.isSupportedBool", false]], "issupportedbool() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.isSupportedBool", false]], "issupporteddtype() (in module arkouda)": [[26, "arkouda.isSupportedDType", false]], "issupporteddtype() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.isSupportedDType", false]], "issupporteddtype() (in module arkouda.numpy)": [[37, "arkouda.numpy.isSupportedDType", false]], "issupporteddtype() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.isSupportedDType", false]], "issupportedfloat() (in module arkouda)": [[26, "arkouda.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.numpy)": [[37, "arkouda.numpy.isSupportedFloat", false]], "issupportedfloat() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.isSupportedFloat", false]], "issupportedint() (in module arkouda)": [[26, "arkouda.isSupportedInt", false], [26, "id906", false], [26, "id907", false], [26, "id908", false]], "issupportedint() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.isSupportedInt", false]], "issupportedint() (in module arkouda.numpy)": [[37, "arkouda.numpy.isSupportedInt", false]], "issupportedint() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.isSupportedInt", false]], "issupportednumber() (in module arkouda)": [[26, "arkouda.isSupportedNumber", false]], "issupportednumber() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.isSupportedNumber", false]], "issupportednumber() (in module arkouda.numpy)": [[37, "arkouda.numpy.isSupportedNumber", false]], "issupportednumber() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.isSupportedNumber", false]], "istitle() (arkouda.strings method)": [[26, "arkouda.Strings.istitle", false], [26, "id536", false], [26, "id612", false], [26, "id688", false], [26, "id764", false]], "istitle() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.istitle", false]], "isupper() (arkouda.strings method)": [[26, "arkouda.Strings.isupper", false], [26, "id537", false], [26, "id613", false], [26, "id689", false], [26, "id765", false]], "isupper() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.isupper", false]], "item() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.item", false]], "item() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.item", false]], "item() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.item", false]], "item() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.item", false]], "item() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.item", false]], "item() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.item", false]], "item() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.item", false]], "item() (arkouda.str_ method)": [[26, "arkouda.str_.item", false], [26, "id1317", false]], "items() (arkouda.dtypes.number_format_strings method)": [[23, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.dtypes.seriesdtypes method)": [[23, "arkouda.dtypes.SeriesDTypes.items", false]], "items() (arkouda.number_format_strings method)": [[26, "arkouda.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.items", false]], "items() (arkouda.numpy.number_format_strings method)": [[37, "arkouda.numpy.NUMBER_FORMAT_STRINGS.items", false]], "items() (arkouda.numpy.sctypedict method)": [[37, "arkouda.numpy.sctypeDict.items", false]], "items() (arkouda.numpy.sctypes method)": [[37, "arkouda.numpy.sctypes.items", false]], "items() (arkouda.numpy.seriesdtypes method)": [[37, "arkouda.numpy.SeriesDTypes.items", false]], "items() (arkouda.sctypedict method)": [[26, "arkouda.sctypeDict.items", false]], "items() (arkouda.sctypes method)": [[26, "arkouda.sctypes.items", false]], "items() (arkouda.seriesdtypes method)": [[26, "arkouda.SeriesDTypes.items", false]], "itemset() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.itemset", false]], "itemset() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.itemset", false]], "itemset() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.itemset", false]], "itemset() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.itemset", false]], "itemset() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.itemset", false]], "itemset() (arkouda.str_ method)": [[26, "arkouda.str_.itemset", false], [26, "id1318", false]], "itemsize (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.itemsize", false], [26, "id1023", false], [26, "id1069", false], [26, "id1094", false], [26, "id1140", false], [26, "id1165", false], [26, "id1211", false], [26, "id1236", false], [26, "id914", false], [26, "id927", false], [26, "id952", false], [26, "id998", false], [97, "arkouda.pdarray.itemsize", false]], "itemsize (arkouda.pdarrayclass.pdarray attribute)": [[39, "arkouda.pdarrayclass.pdarray.itemsize", false], [39, "id1", false]], "itemsize (arkouda.sparray attribute)": [[26, "arkouda.sparray.itemsize", false], [26, "id1281", false]], "itemsize (arkouda.sparrayclass.sparray attribute)": [[53, "arkouda.sparrayclass.sparray.itemsize", false], [53, "id1", false]], "itemsize() (arkouda.bigint method)": [[26, "arkouda.bigint.itemsize", false], [26, "id845", false]], "itemsize() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.itemsize", false]], "itemsize() (arkouda.dtypes.bigint method)": [[23, "arkouda.dtypes.bigint.itemsize", false]], "itemsize() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.itemsize", false]], "itemsize() (arkouda.numpy.bigint method)": [[37, "arkouda.numpy.bigint.itemsize", false]], "itemsize() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.itemsize", false]], "itemsize() (arkouda.numpy.dtypes.bigint method)": [[36, "arkouda.numpy.dtypes.bigint.itemsize", false]], "itemsize() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.itemsize", false]], "itemsize() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.itemsize", false]], "itemsize() (arkouda.str_ method)": [[26, "arkouda.str_.itemsize", false], [26, "id1319", false]], "join_on_eq_with_dt() (in module arkouda)": [[26, "arkouda.join_on_eq_with_dt", false]], "join_on_eq_with_dt() (in module arkouda.join)": [[31, "arkouda.join.join_on_eq_with_dt", false]], "keys() (arkouda.dtypes.number_format_strings method)": [[23, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.dtypes.seriesdtypes method)": [[23, "arkouda.dtypes.SeriesDTypes.keys", false]], "keys() (arkouda.number_format_strings method)": [[26, "arkouda.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.keys", false]], "keys() (arkouda.numpy.number_format_strings method)": [[37, "arkouda.numpy.NUMBER_FORMAT_STRINGS.keys", false]], "keys() (arkouda.numpy.sctypedict method)": [[37, "arkouda.numpy.sctypeDict.keys", false]], "keys() (arkouda.numpy.sctypes method)": [[37, "arkouda.numpy.sctypes.keys", false]], "keys() (arkouda.numpy.seriesdtypes method)": [[37, "arkouda.numpy.SeriesDTypes.keys", false]], "keys() (arkouda.sctypedict method)": [[26, "arkouda.sctypeDict.keys", false]], "keys() (arkouda.sctypes method)": [[26, "arkouda.sctypes.keys", false]], "keys() (arkouda.seriesdtypes method)": [[26, "arkouda.SeriesDTypes.keys", false]], "layout (arkouda.sparray attribute)": [[26, "arkouda.sparray.layout", false], [26, "id1282", false]], "layout (arkouda.sparrayclass.sparray attribute)": [[53, "arkouda.sparrayclass.sparray.layout", false], [53, "id2", false]], "left_align() (in module arkouda)": [[26, "arkouda.left_align", false]], "left_align() (in module arkouda.alignment)": [[3, "arkouda.alignment.left_align", false]], "len_suffix (in module arkouda)": [[26, "arkouda.LEN_SUFFIX", false]], "len_suffix (in module arkouda.segarray)": [[50, "arkouda.segarray.LEN_SUFFIX", false]], "lengths (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.lengths", false]], "less() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.less", false]], "less_equal() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.less_equal", false]], "levels (arkouda.index.multiindex attribute)": [[27, "arkouda.index.MultiIndex.levels", false]], "levels (arkouda.multiindex attribute)": [[26, "arkouda.MultiIndex.levels", false]], "linspace() (in module arkouda)": [[26, "arkouda.linspace", false], [92, "arkouda.linspace", false]], "linspace() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.linspace", false]], "linspace() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.linspace", false]], "list_registry() (in module arkouda)": [[26, "arkouda.list_registry", false]], "list_registry() (in module arkouda.infoclass)": [[28, "arkouda.infoclass.list_registry", false]], "list_symbol_table() (in module arkouda)": [[26, "arkouda.list_symbol_table", false]], "list_symbol_table() (in module arkouda.infoclass)": [[28, "arkouda.infoclass.list_symbol_table", false]], "load() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.load", false], [26, "id151", false]], "load() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.load", false]], "load() (arkouda.segarray class method)": [[26, "arkouda.SegArray.load", false]], "load() (arkouda.segarray.segarray class method)": [[50, "arkouda.segarray.SegArray.load", false]], "load() (in module arkouda)": [[26, "arkouda.load", false]], "load() (in module arkouda.io)": [[29, "arkouda.io.load", false]], "load_all() (in module arkouda)": [[26, "arkouda.load_all", false]], "load_all() (in module arkouda.io)": [[29, "arkouda.io.load_all", false]], "loc (arkouda.series property)": [[26, "arkouda.Series.loc", false]], "loc (arkouda.series.series property)": [[51, "arkouda.series.Series.loc", false]], "locate() (arkouda.series method)": [[26, "arkouda.Series.locate", false]], "locate() (arkouda.series.series method)": [[51, "arkouda.series.Series.locate", false]], "locate() (in module arkouda.series)": [[100, "arkouda.Series.locate", false], [100, "id0", false]], "locationsinfo (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.LocationsInfo", false]], "log() (in module arkouda)": [[26, "arkouda.log", false], [90, "arkouda.log", false]], "log() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.log", false]], "log() (in module arkouda.numpy)": [[37, "arkouda.numpy.log", false]], "log10() (in module arkouda)": [[26, "arkouda.log10", false]], "log10() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.log10", false]], "log10() (in module arkouda.numpy)": [[37, "arkouda.numpy.log10", false]], "log1p() (in module arkouda)": [[26, "arkouda.log1p", false]], "log1p() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.log1p", false]], "log1p() (in module arkouda.numpy)": [[37, "arkouda.numpy.log1p", false]], "log2() (in module arkouda)": [[26, "arkouda.log2", false]], "log2() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.log2", false]], "log2() (in module arkouda.numpy)": [[37, "arkouda.numpy.log2", false]], "logaddexp() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logaddexp", false]], "logger (arkouda.categorical attribute)": [[26, "arkouda.Categorical.logger", false], [26, "id34", false], [26, "id92", false]], "logger (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.logger", false]], "logger (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.logger", false], [26, "id252", false], [26, "id299", false], [26, "id346", false], [26, "id393", false], [26, "id440", false], [94, "arkouda.GroupBy.logger", false]], "logger (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.logger", false]], "logger (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.logger", false]], "logger (arkouda.segarray attribute)": [[26, "arkouda.SegArray.logger", false]], "logger (arkouda.segarray.segarray attribute)": [[50, "arkouda.segarray.SegArray.logger", false]], "logger (arkouda.strings attribute)": [[26, "arkouda.Strings.logger", false], [26, "id492", false], [26, "id500", false], [26, "id538", false], [26, "id576", false], [26, "id614", false], [26, "id652", false], [26, "id690", false], [26, "id728", false], [26, "id766", false]], "logger (arkouda.strings.strings attribute)": [[55, "arkouda.strings.Strings.logger", false], [55, "id2", false]], "logical_and() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logical_and", false]], "logical_not() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logical_not", false]], "logical_or() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logical_or", false]], "logical_xor() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.logical_xor", false]], "logistic() (arkouda.numpy.random.generator method)": [[38, "arkouda.numpy.random.Generator.logistic", false]], "logistic() (arkouda.random.generator method)": [[44, "arkouda.random.Generator.logistic", false]], "logistic() (in module arkouda.random.generator)": [[98, "arkouda.random.Generator.logistic", false]], "loglevel (class in arkouda)": [[26, "arkouda.LogLevel", false]], "loglevel (class in arkouda.logger)": [[32, "arkouda.logger.LogLevel", false]], "lognormal() (arkouda.numpy.random.generator method)": [[38, "arkouda.numpy.random.Generator.lognormal", false]], "lognormal() (arkouda.random.generator method)": [[44, "arkouda.random.Generator.lognormal", false]], "lognormal() (in module arkouda.random.generator)": [[98, "arkouda.random.Generator.lognormal", false]], "longdouble (class in arkouda)": [[26, "arkouda.longdouble", false]], "longdouble (class in arkouda.numpy)": [[37, "arkouda.numpy.longdouble", false]], "longdoubledtype (class in arkouda)": [[26, "arkouda.LongDoubleDType", false]], "longdoubledtype (class in arkouda.numpy)": [[37, "arkouda.numpy.LongDoubleDType", false]], "longdtype (class in arkouda)": [[26, "arkouda.LongDType", false]], "longdtype (class in arkouda.numpy)": [[37, "arkouda.numpy.LongDType", false]], "longfloat (class in arkouda)": [[26, "arkouda.longfloat", false]], "longfloat (class in arkouda.numpy)": [[37, "arkouda.numpy.longfloat", false]], "longlong (class in arkouda)": [[26, "arkouda.longlong", false]], "longlong (class in arkouda.numpy)": [[37, "arkouda.numpy.longlong", false]], "longlongdtype (class in arkouda)": [[26, "arkouda.LongLongDType", false]], "longlongdtype (class in arkouda.numpy)": [[37, "arkouda.numpy.LongLongDType", false]], "lookup() (arkouda.index method)": [[26, "arkouda.Index.lookup", false]], "lookup() (arkouda.index.index method)": [[27, "arkouda.index.Index.lookup", false]], "lookup() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.lookup", false]], "lookup() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.lookup", false]], "lookup() (in module arkouda)": [[26, "arkouda.lookup", false]], "lookup() (in module arkouda.alignment)": [[3, "arkouda.alignment.lookup", false]], "lookup() (in module arkouda.index)": [[88, "arkouda.Index.lookup", false]], "lookup() (in module arkouda.multiindex)": [[88, "arkouda.MultiIndex.lookup", false]], "lower() (arkouda.strings method)": [[26, "arkouda.Strings.lower", false], [26, "id539", false], [26, "id615", false], [26, "id691", false], [26, "id767", false]], "lower() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.lower", false]], "ls() (in module arkouda)": [[26, "arkouda.ls", false]], "ls() (in module arkouda.io)": [[29, "arkouda.io.ls", false]], "ls_csv() (in module arkouda)": [[26, "arkouda.ls_csv", false]], "ls_csv() (in module arkouda.io)": [[29, "arkouda.io.ls_csv", false]], "lstick() (arkouda.strings method)": [[26, "arkouda.Strings.lstick", false], [26, "id540", false], [26, "id616", false], [26, "id692", false], [26, "id768", false], [103, "arkouda.Strings.lstick", false]], "lstick() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.lstick", false]], "machep (arkouda.finfo attribute)": [[26, "arkouda.finfo.machep", false]], "machep (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.machep", false]], "mandatory() (arkouda.dtypes.annotations method)": [[23, "arkouda.dtypes.annotations.mandatory", false]], "mandatory() (arkouda.numpy.dtypes.annotations method)": [[36, "arkouda.numpy.dtypes.annotations.mandatory", false]], "map() (arkouda.index method)": [[26, "arkouda.Index.map", false]], "map() (arkouda.index.index method)": [[27, "arkouda.index.Index.map", false]], "map() (arkouda.series method)": [[26, "arkouda.Series.map", false]], "map() (arkouda.series.series method)": [[51, "arkouda.series.Series.map", false]], "map() (in module arkouda.util)": [[58, "arkouda.util.map", false]], "match (class in arkouda.match)": [[33, "arkouda.match.Match", false]], "match() (arkouda.strings method)": [[26, "arkouda.Strings.match", false], [26, "id541", false], [26, "id617", false], [26, "id693", false], [26, "id769", false], [103, "arkouda.Strings.match", false]], "match() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.match", false]], "match_bool (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.match_bool", false]], "match_ind (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.match_ind", false]], "match_type() (arkouda.match.match method)": [[33, "arkouda.match.Match.match_type", false], [103, "arkouda.match.Match.match_type", false]], "matched() (arkouda.match.match method)": [[33, "arkouda.match.Match.matched", false], [103, "arkouda.match.Match.matched", false]], "matcher (class in arkouda.matcher)": [[34, "arkouda.matcher.Matcher", false]], "matmul() (in module arkouda)": [[26, "arkouda.matmul", false]], "matmul() (in module arkouda.array_api.linalg)": [[11, "arkouda.array_api.linalg.matmul", false]], "matmul() (in module arkouda.numpy)": [[37, "arkouda.numpy.matmul", false]], "matrix_transpose() (in module arkouda.array_api.linalg)": [[11, "arkouda.array_api.linalg.matrix_transpose", false]], "max (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.max", false]], "max (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.iinfo_object.max", false]], "max (arkouda.finfo attribute)": [[26, "arkouda.finfo.max", false]], "max (arkouda.iinfo attribute)": [[26, "arkouda.iinfo.max", false]], "max (arkouda.iinfo property)": [[26, "id880", false]], "max (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.max", false]], "max (arkouda.numpy.iinfo attribute)": [[37, "arkouda.numpy.iinfo.max", false]], "max (arkouda.numpy.iinfo property)": [[37, "id12", false]], "max() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.max", false]], "max() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.max", false]], "max() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.max", false]], "max() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.max", false]], "max() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.max", false]], "max() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.max", false]], "max() (arkouda.groupby method)": [[26, "arkouda.GroupBy.max", false], [26, "id271", false], [26, "id318", false], [26, "id365", false], [26, "id412", false], [26, "id459", false], [94, "arkouda.GroupBy.max", false]], "max() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.max", false]], "max() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.max", false]], "max() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.max", false]], "max() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.max", false]], "max() (arkouda.pdarray method)": [[26, "arkouda.pdarray.max", false], [26, "id1024", false], [26, "id1095", false], [26, "id1166", false], [26, "id1237", false], [26, "id953", false], [95, "arkouda.pdarray.max", false]], "max() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.max", false]], "max() (arkouda.segarray method)": [[26, "arkouda.SegArray.max", false]], "max() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.max", false]], "max() (arkouda.series method)": [[26, "arkouda.Series.max", false]], "max() (arkouda.series.series method)": [[51, "arkouda.series.Series.max", false]], "max() (arkouda.str_ method)": [[26, "arkouda.str_.max", false], [26, "id1320", false]], "max() (in module arkouda)": [[90, "arkouda.max", false]], "max() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.max", false]], "max_bits (arkouda.pdarray property)": [[26, "arkouda.pdarray.max_bits", false], [26, "id1025", false], [26, "id1096", false], [26, "id1167", false], [26, "id1238", false], [26, "id954", false]], "max_bits (arkouda.pdarrayclass.pdarray property)": [[39, "arkouda.pdarrayclass.pdarray.max_bits", false]], "max_list_size (arkouda.index attribute)": [[26, "arkouda.Index.max_list_size", false]], "max_list_size (arkouda.index.index attribute)": [[27, "arkouda.index.Index.max_list_size", false]], "maxexp (arkouda.finfo attribute)": [[26, "arkouda.finfo.maxexp", false]], "maxexp (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.maxexp", false]], "maximum_sctype() (in module arkouda)": [[26, "arkouda.maximum_sctype", false]], "maximum_sctype() (in module arkouda.numpy)": [[37, "arkouda.numpy.maximum_sctype", false]], "maxk() (arkouda.pdarray method)": [[26, "arkouda.pdarray.maxk", false], [26, "id1026", false], [26, "id1097", false], [26, "id1168", false], [26, "id1239", false], [26, "id955", false], [95, "arkouda.pdarray.maxk", false]], "maxk() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.maxk", false]], "maxk() (in module arkouda)": [[26, "arkouda.maxk", false], [90, "arkouda.maxk", false]], "maxk() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.maxk", false]], "mean() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.mean", false]], "mean() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.mean", false]], "mean() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.mean", false]], "mean() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.mean", false]], "mean() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.mean", false]], "mean() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.mean", false]], "mean() (arkouda.groupby method)": [[26, "arkouda.GroupBy.mean", false], [26, "id272", false], [26, "id319", false], [26, "id366", false], [26, "id413", false], [26, "id460", false], [94, "arkouda.GroupBy.mean", false]], "mean() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.mean", false]], "mean() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.mean", false]], "mean() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.mean", false]], "mean() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.mean", false]], "mean() (arkouda.pdarray method)": [[26, "arkouda.pdarray.mean", false], [26, "id1027", false], [26, "id1098", false], [26, "id1169", false], [26, "id1240", false], [26, "id956", false], [95, "arkouda.pdarray.mean", false]], "mean() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.mean", false]], "mean() (arkouda.segarray method)": [[26, "arkouda.SegArray.mean", false]], "mean() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.mean", false]], "mean() (arkouda.series method)": [[26, "arkouda.Series.mean", false]], "mean() (arkouda.series.series method)": [[51, "arkouda.series.Series.mean", false]], "mean() (arkouda.str_ method)": [[26, "arkouda.str_.mean", false], [26, "id1321", false]], "mean() (in module arkouda)": [[26, "arkouda.mean", false], [90, "arkouda.mean", false]], "mean() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.mean", false]], "mean() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.mean", false]], "mean_shim() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.mean_shim", false]], "median() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.median", false]], "median() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.median", false]], "median() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.median", false]], "median() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.median", false]], "median() (arkouda.groupby method)": [[26, "arkouda.GroupBy.median", false], [26, "id273", false], [26, "id320", false], [26, "id367", false], [26, "id414", false], [26, "id461", false], [94, "arkouda.GroupBy.median", false]], "median() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.median", false]], "median() (in module arkouda)": [[26, "arkouda.median", false]], "median() (in module arkouda.numpy)": [[37, "arkouda.numpy.median", false]], "memory_usage() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.memory_usage", false], [26, "id152", false]], "memory_usage() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.memory_usage", false]], "memory_usage() (arkouda.index method)": [[26, "arkouda.Index.memory_usage", false]], "memory_usage() (arkouda.index.index method)": [[27, "arkouda.index.Index.memory_usage", false]], "memory_usage() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.memory_usage", false]], "memory_usage() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.memory_usage", false]], "memory_usage() (arkouda.series method)": [[26, "arkouda.Series.memory_usage", false]], "memory_usage() (arkouda.series.series method)": [[51, "arkouda.series.Series.memory_usage", false]], "memory_usage_info() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.memory_usage_info", false], [26, "id153", false]], "memory_usage_info() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.memory_usage_info", false]], "merge() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.merge", false], [26, "id154", false]], "merge() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.merge", false]], "merge() (in module arkouda)": [[26, "arkouda.merge", false]], "merge() (in module arkouda.dataframe)": [[22, "arkouda.dataframe.merge", false]], "meshgrid() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.meshgrid", false]], "microsecond (arkouda.datetime property)": [[26, "arkouda.Datetime.microsecond", false], [26, "id189", false], [26, "id222", false]], "microsecond (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.microsecond", false]], "microseconds (arkouda.timeclass.timedelta property)": [[57, "arkouda.timeclass.Timedelta.microseconds", false]], "microseconds (arkouda.timedelta property)": [[26, "arkouda.Timedelta.microseconds", false], [26, "id802", false]], "millisecond (arkouda.datetime property)": [[26, "arkouda.Datetime.millisecond", false], [26, "id190", false], [26, "id223", false]], "millisecond (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.millisecond", false]], "min (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.min", false]], "min (arkouda.array_api.data_type_functions.iinfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.iinfo_object.min", false]], "min (arkouda.finfo attribute)": [[26, "arkouda.finfo.min", false]], "min (arkouda.iinfo attribute)": [[26, "arkouda.iinfo.min", false]], "min (arkouda.iinfo property)": [[26, "id881", false]], "min (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.min", false]], "min (arkouda.numpy.iinfo attribute)": [[37, "arkouda.numpy.iinfo.min", false]], "min (arkouda.numpy.iinfo property)": [[37, "id13", false]], "min() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.min", false]], "min() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.min", false]], "min() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.min", false]], "min() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.min", false]], "min() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.min", false]], "min() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.min", false]], "min() (arkouda.groupby method)": [[26, "arkouda.GroupBy.min", false], [26, "id274", false], [26, "id321", false], [26, "id368", false], [26, "id415", false], [26, "id462", false], [94, "arkouda.GroupBy.min", false]], "min() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.min", false]], "min() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.min", false]], "min() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.min", false]], "min() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.min", false]], "min() (arkouda.pdarray method)": [[26, "arkouda.pdarray.min", false], [26, "id1028", false], [26, "id1099", false], [26, "id1170", false], [26, "id1241", false], [26, "id957", false], [95, "arkouda.pdarray.min", false]], "min() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.min", false]], "min() (arkouda.segarray method)": [[26, "arkouda.SegArray.min", false]], "min() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.min", false]], "min() (arkouda.series method)": [[26, "arkouda.Series.min", false]], "min() (arkouda.series.series method)": [[51, "arkouda.series.Series.min", false]], "min() (arkouda.str_ method)": [[26, "arkouda.str_.min", false], [26, "id1322", false]], "min() (in module arkouda)": [[90, "arkouda.min", false]], "min() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.min", false]], "minexp (arkouda.finfo attribute)": [[26, "arkouda.finfo.minexp", false]], "minexp (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.minexp", false]], "mink() (arkouda.pdarray method)": [[26, "arkouda.pdarray.mink", false], [26, "id1029", false], [26, "id1100", false], [26, "id1171", false], [26, "id1242", false], [26, "id958", false], [95, "arkouda.pdarray.mink", false]], "mink() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.mink", false]], "mink() (in module arkouda)": [[26, "arkouda.mink", false], [90, "arkouda.mink", false]], "mink() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.mink", false]], "minute (arkouda.datetime property)": [[26, "arkouda.Datetime.minute", false], [26, "id191", false], [26, "id224", false]], "minute (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.minute", false]], "mod() (in module arkouda)": [[26, "arkouda.mod", false]], "mod() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.mod", false]], "mode() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.mode", false]], "mode() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.mode", false]], "mode() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.mode", false]], "mode() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.mode", false]], "mode() (arkouda.groupby method)": [[26, "arkouda.GroupBy.mode", false], [26, "id275", false], [26, "id322", false], [26, "id369", false], [26, "id416", false], [26, "id463", false], [94, "arkouda.GroupBy.mode", false]], "mode() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.mode", false]], "module": [[2, "module-arkouda.accessor", false], [3, "module-arkouda.alignment", false], [4, "module-arkouda.apply", false], [5, "module-arkouda.array_api.array_object", false], [6, "module-arkouda.array_api.creation_functions", false], [7, "module-arkouda.array_api.data_type_functions", false], [8, "module-arkouda.array_api.elementwise_functions", false], [9, "module-arkouda.array_api", false], [10, "module-arkouda.array_api.indexing_functions", false], [11, "module-arkouda.array_api.linalg", false], [12, "module-arkouda.array_api.manipulation_functions", false], [13, "module-arkouda.array_api.searching_functions", false], [14, "module-arkouda.array_api.set_functions", false], [15, "module-arkouda.array_api.sorting_functions", false], [16, "module-arkouda.array_api.statistical_functions", false], [17, "module-arkouda.array_api.utility_functions", false], [18, "module-arkouda.categorical", false], [19, "module-arkouda.client", false], [20, "module-arkouda.client_dtypes", false], [21, "module-arkouda.comm_diagnostics", false], [22, "module-arkouda.dataframe", false], [23, "module-arkouda.dtypes", false], [24, "module-arkouda.groupbyclass", false], [25, "module-arkouda.history", false], [26, "module-arkouda", false], [27, "module-arkouda.index", false], [28, "module-arkouda.infoclass", false], [29, "module-arkouda.io", false], [30, "module-arkouda.io_util", false], [31, "module-arkouda.join", false], [32, "module-arkouda.logger", false], [33, "module-arkouda.match", false], [34, "module-arkouda.matcher", false], [35, "module-arkouda.numeric", false], [36, "module-arkouda.numpy.dtypes", false], [37, "module-arkouda.numpy", false], [38, "module-arkouda.numpy.random", false], [39, "module-arkouda.pdarrayclass", false], [40, "module-arkouda.pdarraycreation", false], [41, "module-arkouda.pdarraymanipulation", false], [42, "module-arkouda.pdarraysetops", false], [43, "module-arkouda.plotting", false], [44, "module-arkouda.random", false], [45, "module-arkouda.row", false], [46, "module-arkouda.scipy", false], [47, "module-arkouda.scipy.special", false], [48, "module-arkouda.scipy.stats", false], [49, "module-arkouda.security", false], [50, "module-arkouda.segarray", false], [51, "module-arkouda.series", false], [52, "module-arkouda.sorting", false], [53, "module-arkouda.sparrayclass", false], [54, "module-arkouda.sparsematrix", false], [55, "module-arkouda.strings", false], [56, "module-arkouda.testing", false], [57, "module-arkouda.timeclass", false], [58, "module-arkouda.util", false]], "moment_type() (arkouda.scipy.stats.chi2 method)": [[48, "arkouda.scipy.stats.chi2.moment_type", false]], "month (arkouda.datetime property)": [[26, "arkouda.Datetime.month", false], [26, "id192", false], [26, "id225", false]], "month (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.month", false]], "most_common() (arkouda.groupby method)": [[26, "arkouda.GroupBy.most_common", false], [26, "id276", false], [26, "id323", false], [26, "id370", false], [26, "id417", false], [26, "id464", false], [94, "arkouda.GroupBy.most_common", false]], "most_common() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.most_common", false]], "most_common() (in module arkouda.util)": [[58, "arkouda.util.most_common", false]], "moveaxis() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.moveaxis", false]], "msb_left (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.MSB_left", false]], "msb_left (arkouda.fields attribute)": [[26, "arkouda.Fields.MSB_left", false]], "mt (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.mT", false]], "mt (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.mT", false]], "multiindex (class in arkouda)": [[26, "arkouda.MultiIndex", false]], "multiindex (class in arkouda.index)": [[27, "arkouda.index.MultiIndex", false]], "multiply() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.multiply", false]], "name (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.name", false]], "name (arkouda.fields attribute)": [[26, "arkouda.Fields.name", false]], "name (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.name", false]], "name (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.name", false]], "name (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.name", false], [26, "id1030", false], [26, "id1064", false], [26, "id1101", false], [26, "id1135", false], [26, "id1172", false], [26, "id1206", false], [26, "id1243", false], [26, "id915", false], [26, "id922", false], [26, "id959", false], [26, "id993", false], [97, "arkouda.pdarray.name", false]], "name (arkouda.pdarrayclass.pdarray attribute)": [[39, "arkouda.pdarrayclass.pdarray.name", false], [39, "id2", false]], "name (arkouda.sparray attribute)": [[26, "arkouda.sparray.name", false], [26, "id1283", false]], "name (arkouda.sparrayclass.sparray attribute)": [[53, "arkouda.sparrayclass.sparray.name", false], [53, "id3", false]], "name() (arkouda.bigint method)": [[26, "arkouda.bigint.name", false], [26, "id846", false]], "name() (arkouda.dtype method)": [[26, "arkouda.DType.name", false]], "name() (arkouda.dtypes.bigint method)": [[23, "arkouda.dtypes.bigint.name", false]], "name() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.name", false]], "name() (arkouda.errormode method)": [[26, "arkouda.ErrorMode.name", false]], "name() (arkouda.numpy.bigint method)": [[37, "arkouda.numpy.bigint.name", false]], "name() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.name", false]], "name() (arkouda.numpy.dtypes.bigint method)": [[36, "arkouda.numpy.dtypes.bigint.name", false]], "name() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.name", false]], "name() (arkouda.numpy.errormode method)": [[37, "arkouda.numpy.ErrorMode.name", false]], "name() (arkouda.scipy.stats.chi2 method)": [[48, "arkouda.scipy.stats.chi2.name", false]], "names (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.names", false]], "names (arkouda.fields attribute)": [[26, "arkouda.Fields.names", false]], "names (arkouda.index property)": [[26, "arkouda.Index.names", false]], "names (arkouda.index.index property)": [[27, "arkouda.index.Index.names", false]], "names (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.names", false]], "names (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.names", false]], "namewidth (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.namewidth", false]], "namewidth (arkouda.fields attribute)": [[26, "arkouda.Fields.namewidth", false]], "nan (in module arkouda)": [[26, "arkouda.NAN", false], [26, "arkouda.NaN", false], [26, "arkouda.nan", false]], "nan (in module arkouda.numpy)": [[37, "arkouda.numpy.NAN", false], [37, "arkouda.numpy.NaN", false], [37, "arkouda.numpy.nan", false]], "nanosecond (arkouda.datetime property)": [[26, "arkouda.Datetime.nanosecond", false], [26, "id193", false], [26, "id226", false]], "nanosecond (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.nanosecond", false]], "nanoseconds (arkouda.timeclass.timedelta property)": [[57, "arkouda.timeclass.Timedelta.nanoseconds", false]], "nanoseconds (arkouda.timedelta property)": [[26, "arkouda.Timedelta.nanoseconds", false], [26, "id803", false]], "nbytes (arkouda.categorical property)": [[26, "arkouda.Categorical.nbytes", false], [26, "id35", false], [26, "id93", false]], "nbytes (arkouda.categorical.categorical property)": [[18, "arkouda.categorical.Categorical.nbytes", false]], "nbytes (arkouda.pdarray property)": [[26, "arkouda.pdarray.nbytes", false], [26, "id1031", false], [26, "id1102", false], [26, "id1173", false], [26, "id1244", false], [26, "id960", false]], "nbytes (arkouda.pdarrayclass.pdarray property)": [[39, "arkouda.pdarrayclass.pdarray.nbytes", false]], "nbytes (arkouda.segarray property)": [[26, "arkouda.SegArray.nbytes", false]], "nbytes (arkouda.segarray.segarray property)": [[50, "arkouda.segarray.SegArray.nbytes", false]], "nbytes (arkouda.strings attribute)": [[26, "arkouda.Strings.nbytes", false], [26, "id496", false], [26, "id572", false], [26, "id648", false], [26, "id724", false]], "nbytes (arkouda.strings.strings attribute)": [[55, "arkouda.strings.Strings.nbytes", false]], "nbytes() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.nbytes", false]], "nbytes() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.nbytes", false]], "nbytes() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.nbytes", false]], "nbytes() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.nbytes", false]], "nbytes() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.nbytes", false]], "nbytes() (arkouda.str_ method)": [[26, "arkouda.str_.nbytes", false], [26, "id1323", false]], "ndim (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.ndim", false]], "ndim (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.ndim", false]], "ndim (arkouda.categorical attribute)": [[26, "arkouda.Categorical.ndim", false], [26, "id0", false], [26, "id13", false], [26, "id36", false], [26, "id71", false], [26, "id94", false], [91, "arkouda.Categorical.ndim", false]], "ndim (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.ndim", false], [18, "id0", false]], "ndim (arkouda.index property)": [[26, "arkouda.Index.ndim", false]], "ndim (arkouda.index.index property)": [[27, "arkouda.index.Index.ndim", false]], "ndim (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.ndim", false]], "ndim (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.ndim", false]], "ndim (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.ndim", false], [26, "id1032", false], [26, "id1067", false], [26, "id1103", false], [26, "id1138", false], [26, "id1174", false], [26, "id1209", false], [26, "id1245", false], [26, "id916", false], [26, "id925", false], [26, "id961", false], [26, "id996", false], [97, "arkouda.pdarray.ndim", false]], "ndim (arkouda.pdarrayclass.pdarray attribute)": [[39, "arkouda.pdarrayclass.pdarray.ndim", false], [39, "id3", false]], "ndim (arkouda.series property)": [[26, "arkouda.Series.ndim", false]], "ndim (arkouda.series.series property)": [[51, "arkouda.series.Series.ndim", false]], "ndim (arkouda.sparray attribute)": [[26, "arkouda.sparray.ndim", false], [26, "id1284", false]], "ndim (arkouda.sparrayclass.sparray attribute)": [[53, "arkouda.sparrayclass.sparray.ndim", false], [53, "id4", false]], "ndim (arkouda.strings attribute)": [[26, "arkouda.Strings.ndim", false], [26, "id497", false], [26, "id573", false], [26, "id649", false], [26, "id725", false]], "ndim (arkouda.strings.strings attribute)": [[55, "arkouda.strings.Strings.ndim", false]], "ndim() (arkouda.bigint method)": [[26, "arkouda.bigint.ndim", false], [26, "id847", false]], "ndim() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.ndim", false]], "ndim() (arkouda.dtypes.bigint method)": [[23, "arkouda.dtypes.bigint.ndim", false]], "ndim() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.ndim", false]], "ndim() (arkouda.numpy.bigint method)": [[37, "arkouda.numpy.bigint.ndim", false]], "ndim() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.ndim", false]], "ndim() (arkouda.numpy.dtypes.bigint method)": [[36, "arkouda.numpy.dtypes.bigint.ndim", false]], "ndim() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.ndim", false]], "ndim() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.ndim", false]], "ndim() (arkouda.str_ method)": [[26, "arkouda.str_.ndim", false], [26, "id1324", false]], "negative() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.negative", false]], "negep (arkouda.finfo attribute)": [[26, "arkouda.finfo.negep", false]], "negep (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.negep", false]], "newbyteorder() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.newbyteorder", false]], "newbyteorder() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.newbyteorder", false]], "newbyteorder() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.newbyteorder", false]], "newbyteorder() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.newbyteorder", false]], "newbyteorder() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.newbyteorder", false]], "newbyteorder() (arkouda.str_ method)": [[26, "arkouda.str_.newbyteorder", false], [26, "id1325", false]], "nexp (arkouda.finfo attribute)": [[26, "arkouda.finfo.nexp", false]], "nexp (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.nexp", false]], "ngroups (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.ngroups", false], [26, "id250", false], [26, "id297", false], [26, "id344", false], [26, "id391", false], [26, "id438", false], [94, "arkouda.GroupBy.ngroups", false]], "ngroups (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.ngroups", false]], "ninf (in module arkouda)": [[26, "arkouda.NINF", false]], "ninf (in module arkouda.numpy)": [[37, "arkouda.numpy.NINF", false]], "nkeys (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.nkeys", false], [26, "id246", false], [26, "id293", false], [26, "id340", false], [26, "id387", false], [26, "id434", false], [94, "arkouda.GroupBy.nkeys", false]], "nkeys (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.nkeys", false]], "nlevels (arkouda.categorical attribute)": [[26, "arkouda.Categorical.nlevels", false], [26, "id1", false], [26, "id12", false], [26, "id37", false], [26, "id70", false], [26, "id95", false], [91, "arkouda.Categorical.nlevels", false]], "nlevels (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.nlevels", false], [18, "id1", false]], "nlevels (arkouda.index property)": [[26, "arkouda.Index.nlevels", false]], "nlevels (arkouda.index.index property)": [[27, "arkouda.index.Index.nlevels", false]], "nlevels (arkouda.index.multiindex property)": [[27, "arkouda.index.MultiIndex.nlevels", false]], "nlevels (arkouda.multiindex property)": [[26, "arkouda.MultiIndex.nlevels", false]], "nmant (arkouda.finfo attribute)": [[26, "arkouda.finfo.nmant", false]], "nmant (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.nmant", false]], "nnz (arkouda.sparray attribute)": [[26, "arkouda.sparray.nnz", false], [26, "id1285", false]], "nnz (arkouda.sparrayclass.sparray attribute)": [[53, "arkouda.sparrayclass.sparray.nnz", false], [53, "id5", false]], "non_empty (arkouda.segarray property)": [[26, "arkouda.SegArray.non_empty", false]], "non_empty (arkouda.segarray.segarray property)": [[50, "arkouda.segarray.SegArray.non_empty", false]], "nonuniqueerror": [[3, "arkouda.alignment.NonUniqueError", false], [26, "arkouda.NonUniqueError", false]], "nonzero() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.nonzero", false]], "nonzero() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.nonzero", false]], "nonzero() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.nonzero", false]], "nonzero() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.nonzero", false]], "nonzero() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.nonzero", false]], "nonzero() (arkouda.str_ method)": [[26, "arkouda.str_.nonzero", false], [26, "id1326", false]], "nonzero() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.nonzero", false]], "normal() (arkouda.numpy.random.generator method)": [[38, "arkouda.numpy.random.Generator.normal", false]], "normal() (arkouda.random.generator method)": [[44, "arkouda.random.Generator.normal", false]], "normal() (in module arkouda.random.generator)": [[98, "arkouda.random.Generator.normal", false]], "normalize() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.normalize", false]], "normalize() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.normalize", false]], "not_equal() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.not_equal", false]], "notebookhistoryretriever (class in arkouda.history)": [[25, "arkouda.history.NotebookHistoryRetriever", false]], "notna() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.notna", false], [26, "id155", false]], "notna() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.notna", false]], "notna() (arkouda.series method)": [[26, "arkouda.Series.notna", false]], "notna() (arkouda.series.series method)": [[51, "arkouda.series.Series.notna", false]], "notnull() (arkouda.series method)": [[26, "arkouda.Series.notnull", false]], "notnull() (arkouda.series.series method)": [[51, "arkouda.series.Series.notnull", false]], "num_matches (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.num_matches", false]], "numargs() (arkouda.scipy.stats.chi2 method)": [[48, "arkouda.scipy.stats.chi2.numargs", false]], "number (class in arkouda)": [[26, "arkouda.number", false]], "number (class in arkouda.numpy)": [[37, "arkouda.numpy.number", false]], "number_format_strings (class in arkouda)": [[26, "arkouda.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (class in arkouda.dtypes)": [[23, "arkouda.dtypes.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (class in arkouda.numpy)": [[37, "arkouda.numpy.NUMBER_FORMAT_STRINGS", false]], "number_format_strings (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS", false]], "numerator() (arkouda.integer method)": [[26, "arkouda.integer.numerator", false]], "numerator() (arkouda.numpy.integer method)": [[37, "arkouda.numpy.integer.numerator", false]], "numeric_and_bool_scalars (class in arkouda)": [[26, "arkouda.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (class in arkouda.dtypes)": [[23, "arkouda.dtypes.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (class in arkouda.numpy)": [[37, "arkouda.numpy.numeric_and_bool_scalars", false]], "numeric_and_bool_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.numeric_and_bool_scalars", false]], "numeric_scalars (class in arkouda)": [[26, "arkouda.numeric_scalars", false]], "numeric_scalars (class in arkouda.dtypes)": [[23, "arkouda.dtypes.numeric_scalars", false]], "numeric_scalars (class in arkouda.numpy)": [[37, "arkouda.numpy.numeric_scalars", false]], "numeric_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.numeric_scalars", false]], "numericdtypes (class in arkouda)": [[26, "arkouda.NumericDTypes", false]], "numericdtypes (class in arkouda.dtypes)": [[23, "arkouda.dtypes.NumericDTypes", false]], "numericdtypes (class in arkouda.numpy)": [[37, "arkouda.numpy.NumericDTypes", false]], "numericdtypes (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.NumericDTypes", false]], "numpy_scalars (class in arkouda)": [[26, "arkouda.numpy_scalars", false]], "numpy_scalars (class in arkouda.dtypes)": [[23, "arkouda.dtypes.numpy_scalars", false]], "numpy_scalars (class in arkouda.numpy)": [[37, "arkouda.numpy.numpy_scalars", false]], "numpy_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.numpy_scalars", false]], "nunique() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.nunique", false]], "nunique() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.nunique", false]], "nunique() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.nunique", false]], "nunique() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.nunique", false]], "nunique() (arkouda.groupby method)": [[26, "arkouda.GroupBy.nunique", false], [26, "id277", false], [26, "id324", false], [26, "id371", false], [26, "id418", false], [26, "id465", false], [94, "arkouda.GroupBy.nunique", false]], "nunique() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.nunique", false]], "nunique() (arkouda.segarray method)": [[26, "arkouda.SegArray.nunique", false]], "nunique() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.nunique", false]], "nzero (in module arkouda)": [[26, "arkouda.NZERO", false]], "nzero (in module arkouda.numpy)": [[37, "arkouda.numpy.NZERO", false]], "object_ (class in arkouda)": [[26, "arkouda.object_", false]], "object_ (class in arkouda.numpy)": [[37, "arkouda.numpy.object_", false]], "objectdtype (class in arkouda)": [[26, "arkouda.ObjectDType", false]], "objectdtype (class in arkouda.numpy)": [[37, "arkouda.numpy.ObjectDType", false]], "objtype (arkouda.categorical attribute)": [[26, "arkouda.Categorical.objType", false], [26, "id38", false], [26, "id96", false]], "objtype (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.objType", false]], "objtype (arkouda.index attribute)": [[26, "arkouda.Index.objType", false]], "objtype (arkouda.index.index attribute)": [[27, "arkouda.index.Index.objType", false]], "objtype (arkouda.index.multiindex attribute)": [[27, "arkouda.index.MultiIndex.objType", false]], "objtype (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.objType", false]], "objtype (arkouda.multiindex attribute)": [[26, "arkouda.MultiIndex.objType", false]], "objtype (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.objType", false], [26, "id1033", false], [26, "id1104", false], [26, "id1175", false], [26, "id1246", false], [26, "id962", false]], "objtype (arkouda.pdarrayclass.pdarray attribute)": [[39, "arkouda.pdarrayclass.pdarray.objType", false]], "objtype (arkouda.segarray attribute)": [[26, "arkouda.SegArray.objType", false]], "objtype (arkouda.segarray.segarray attribute)": [[50, "arkouda.segarray.SegArray.objType", false]], "objtype (arkouda.strings attribute)": [[26, "arkouda.Strings.objType", false], [26, "id542", false], [26, "id618", false], [26, "id694", false], [26, "id770", false]], "objtype (arkouda.strings.strings attribute)": [[55, "arkouda.strings.Strings.objType", false]], "objtype() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.objType", false], [26, "id156", false]], "objtype() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.objType", false]], "objtype() (arkouda.groupby method)": [[26, "arkouda.GroupBy.objType", false], [26, "id278", false], [26, "id325", false], [26, "id372", false], [26, "id419", false], [26, "id466", false]], "objtype() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.objType", false]], "objtype() (arkouda.series method)": [[26, "arkouda.Series.objType", false]], "objtype() (arkouda.series.series method)": [[51, "arkouda.series.Series.objType", false]], "ones() (in module arkouda)": [[26, "arkouda.ones", false], [26, "id910", false], [26, "id911", false], [26, "id912", false], [92, "arkouda.ones", false]], "ones() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.ones", false]], "ones() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.ones", false]], "ones_like() (in module arkouda)": [[26, "arkouda.ones_like", false], [92, "arkouda.ones_like", false]], "ones_like() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.ones_like", false]], "ones_like() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.ones_like", false]], "open() (arkouda.datasource method)": [[26, "arkouda.DataSource.open", false]], "open() (arkouda.numpy.datasource method)": [[37, "arkouda.numpy.DataSource.open", false]], "opeq() (arkouda.bitvector method)": [[26, "arkouda.BitVector.opeq", false]], "opeq() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.opeq", false]], "opeq() (arkouda.client_dtypes.fields method)": [[20, "arkouda.client_dtypes.Fields.opeq", false]], "opeq() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.opeq", false]], "opeq() (arkouda.fields method)": [[26, "arkouda.Fields.opeq", false]], "opeq() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.opeq", false]], "opeq() (arkouda.pdarray method)": [[26, "arkouda.pdarray.opeq", false], [26, "id1034", false], [26, "id1105", false], [26, "id1176", false], [26, "id1247", false], [26, "id963", false]], "opeq() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.opeq", false]], "opeqops (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.OpEqOps", false], [26, "id1000", false], [26, "id1071", false], [26, "id1142", false], [26, "id1213", false], [26, "id929", false]], "opeqops (arkouda.pdarrayclass.pdarray attribute)": [[39, "arkouda.pdarrayclass.pdarray.OpEqOps", false]], "optional() (arkouda.dtypes.annotations method)": [[23, "arkouda.dtypes.annotations.optional", false]], "optional() (arkouda.numpy.dtypes.annotations method)": [[36, "arkouda.numpy.dtypes.annotations.optional", false]], "or() (arkouda.groupby method)": [[26, "arkouda.GroupBy.OR", false], [26, "id255", false], [26, "id302", false], [26, "id349", false], [26, "id396", false], [26, "id443", false], [94, "arkouda.GroupBy.OR", false]], "or() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.OR", false]], "or() (arkouda.segarray method)": [[26, "arkouda.SegArray.OR", false]], "or() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.OR", false]], "pad (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.pad", false]], "pad (arkouda.fields attribute)": [[26, "arkouda.Fields.pad", false]], "pad() (in module arkouda.array_api.utility_functions)": [[17, "arkouda.array_api.utility_functions.pad", false]], "padchar (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.padchar", false]], "padchar (arkouda.fields attribute)": [[26, "arkouda.Fields.padchar", false]], "parent_entry_name (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.parent_entry_name", false]], "parity() (arkouda.pdarray method)": [[26, "arkouda.pdarray.parity", false], [26, "id1035", false], [26, "id1106", false], [26, "id1177", false], [26, "id1248", false], [26, "id964", false]], "parity() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.parity", false]], "parity() (in module arkouda)": [[26, "arkouda.parity", false]], "parity() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.parity", false]], "parse_hdf_categoricals() (arkouda.categorical static method)": [[26, "arkouda.Categorical.parse_hdf_categoricals", false], [26, "id39", false], [26, "id97", false]], "parse_hdf_categoricals() (arkouda.categorical.categorical static method)": [[18, "arkouda.categorical.Categorical.parse_hdf_categoricals", false]], "pdarray (class in arkouda)": [[26, "arkouda.pdarray", false], [26, "id1063", false], [26, "id1134", false], [26, "id1205", false], [26, "id921", false], [26, "id992", false], [97, "arkouda.pdarray", false]], "pdarray (class in arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.pdarray", false]], "pdconcat() (arkouda.series method)": [[26, "arkouda.Series.pdconcat", false]], "pdconcat() (arkouda.series.series method)": [[51, "arkouda.series.Series.pdconcat", false]], "pdconcat() (in module arkouda.series)": [[100, "arkouda.Series.pdconcat", false]], "peel() (arkouda.strings method)": [[26, "arkouda.Strings.peel", false], [26, "id543", false], [26, "id619", false], [26, "id695", false], [26, "id771", false], [103, "arkouda.Strings.peel", false]], "peel() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.peel", false]], "permutation (arkouda.categorical attribute)": [[26, "arkouda.Categorical.permutation", false], [26, "id2", false], [26, "id40", false], [26, "id67", false], [26, "id9", false], [26, "id98", false], [91, "arkouda.Categorical.permutation", false]], "permutation (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.permutation", false], [18, "id2", false]], "permutation (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.permutation", false], [26, "id248", false], [26, "id295", false], [26, "id342", false], [26, "id389", false], [26, "id436", false], [94, "arkouda.GroupBy.permutation", false]], "permutation (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.permutation", false]], "permutation() (arkouda.numpy.random.generator method)": [[38, "arkouda.numpy.random.Generator.permutation", false]], "permutation() (arkouda.random.generator method)": [[44, "arkouda.random.Generator.permutation", false]], "permutation() (in module arkouda.random.generator)": [[98, "arkouda.random.Generator.permutation", false]], "permute_dims() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.permute_dims", false]], "pi (in module arkouda)": [[26, "arkouda.pi", false]], "pi (in module arkouda.numpy)": [[37, "arkouda.numpy.pi", false]], "pinf (in module arkouda)": [[26, "arkouda.PINF", false]], "pinf (in module arkouda.numpy)": [[37, "arkouda.numpy.PINF", false]], "plot_dist() (in module arkouda)": [[26, "arkouda.plot_dist", false]], "plot_dist() (in module arkouda.plotting)": [[43, "arkouda.plotting.plot_dist", false]], "poisson() (arkouda.numpy.random.generator method)": [[38, "arkouda.numpy.random.Generator.poisson", false]], "poisson() (arkouda.random.generator method)": [[44, "arkouda.random.Generator.poisson", false]], "poisson() (in module arkouda.random.generator)": [[98, "arkouda.random.Generator.poisson", false]], "pop() (arkouda.dtypes.number_format_strings method)": [[23, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.dtypes.seriesdtypes method)": [[23, "arkouda.dtypes.SeriesDTypes.pop", false]], "pop() (arkouda.number_format_strings method)": [[26, "arkouda.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.pop", false]], "pop() (arkouda.numpy.number_format_strings method)": [[37, "arkouda.numpy.NUMBER_FORMAT_STRINGS.pop", false]], "pop() (arkouda.numpy.sctypedict method)": [[37, "arkouda.numpy.sctypeDict.pop", false]], "pop() (arkouda.numpy.sctypes method)": [[37, "arkouda.numpy.sctypes.pop", false]], "pop() (arkouda.numpy.seriesdtypes method)": [[37, "arkouda.numpy.SeriesDTypes.pop", false]], "pop() (arkouda.sctypedict method)": [[26, "arkouda.sctypeDict.pop", false]], "pop() (arkouda.sctypes method)": [[26, "arkouda.sctypes.pop", false]], "pop() (arkouda.seriesdtypes method)": [[26, "arkouda.SeriesDTypes.pop", false]], "popcount() (arkouda.pdarray method)": [[26, "arkouda.pdarray.popcount", false], [26, "id1036", false], [26, "id1107", false], [26, "id1178", false], [26, "id1249", false], [26, "id965", false]], "popcount() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.popcount", false]], "popcount() (in module arkouda)": [[26, "arkouda.popcount", false]], "popcount() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.popcount", false]], "popitem() (arkouda.dtypes.number_format_strings method)": [[23, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.dtypes.seriesdtypes method)": [[23, "arkouda.dtypes.SeriesDTypes.popitem", false]], "popitem() (arkouda.number_format_strings method)": [[26, "arkouda.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.popitem", false]], "popitem() (arkouda.numpy.number_format_strings method)": [[37, "arkouda.numpy.NUMBER_FORMAT_STRINGS.popitem", false]], "popitem() (arkouda.numpy.sctypedict method)": [[37, "arkouda.numpy.sctypeDict.popitem", false]], "popitem() (arkouda.numpy.sctypes method)": [[37, "arkouda.numpy.sctypes.popitem", false]], "popitem() (arkouda.numpy.seriesdtypes method)": [[37, "arkouda.numpy.SeriesDTypes.popitem", false]], "popitem() (arkouda.sctypedict method)": [[26, "arkouda.sctypeDict.popitem", false]], "popitem() (arkouda.sctypes method)": [[26, "arkouda.sctypes.popitem", false]], "popitem() (arkouda.seriesdtypes method)": [[26, "arkouda.SeriesDTypes.popitem", false]], "populated (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.populated", false]], "positive() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.positive", false]], "pow() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.pow", false]], "power() (in module arkouda)": [[26, "arkouda.power", false]], "power() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.power", false]], "power_divergence() (in module arkouda)": [[26, "arkouda.power_divergence", false]], "power_divergence() (in module arkouda.scipy)": [[46, "arkouda.scipy.power_divergence", false]], "power_divergenceresult (class in arkouda)": [[26, "arkouda.Power_divergenceResult", false]], "power_divergenceresult (class in arkouda.scipy)": [[46, "arkouda.scipy.Power_divergenceResult", false]], "precision (arkouda.finfo attribute)": [[26, "arkouda.finfo.precision", false]], "precision (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.precision", false]], "prepend_single() (arkouda.segarray method)": [[26, "arkouda.SegArray.prepend_single", false]], "prepend_single() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.prepend_single", false]], "prepend_single() (in module arkouda.segarray)": [[99, "arkouda.SegArray.prepend_single", false]], "pretty_print_info() (arkouda.categorical method)": [[26, "arkouda.Categorical.pretty_print_info", false], [26, "id41", false], [26, "id99", false]], "pretty_print_info() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.pretty_print_info", false]], "pretty_print_info() (arkouda.pdarray method)": [[26, "arkouda.pdarray.pretty_print_info", false], [26, "id1037", false], [26, "id1108", false], [26, "id1179", false], [26, "id1250", false], [26, "id966", false]], "pretty_print_info() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.pretty_print_info", false]], "pretty_print_info() (arkouda.strings method)": [[26, "arkouda.Strings.pretty_print_info", false], [26, "id544", false], [26, "id620", false], [26, "id696", false], [26, "id772", false]], "pretty_print_info() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.pretty_print_info", false]], "pretty_print_information() (in module arkouda)": [[26, "arkouda.pretty_print_information", false]], "pretty_print_information() (in module arkouda.infoclass)": [[28, "arkouda.infoclass.pretty_print_information", false]], "print_comm_diagnostics_table() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.print_comm_diagnostics_table", false]], "print_server_commands() (in module arkouda.client)": [[19, "arkouda.client.print_server_commands", false]], "prod() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.prod", false]], "prod() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.prod", false]], "prod() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.prod", false]], "prod() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.prod", false]], "prod() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.prod", false]], "prod() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.prod", false]], "prod() (arkouda.groupby method)": [[26, "arkouda.GroupBy.prod", false], [26, "id279", false], [26, "id326", false], [26, "id373", false], [26, "id420", false], [26, "id467", false], [94, "arkouda.GroupBy.prod", false]], "prod() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.prod", false]], "prod() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.prod", false]], "prod() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.prod", false]], "prod() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.prod", false]], "prod() (arkouda.pdarray method)": [[26, "arkouda.pdarray.prod", false], [26, "id1038", false], [26, "id1109", false], [26, "id1180", false], [26, "id1251", false], [26, "id967", false], [95, "arkouda.pdarray.prod", false]], "prod() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.prod", false]], "prod() (arkouda.segarray method)": [[26, "arkouda.SegArray.prod", false]], "prod() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.prod", false]], "prod() (arkouda.series method)": [[26, "arkouda.Series.prod", false]], "prod() (arkouda.series.series method)": [[51, "arkouda.series.Series.prod", false]], "prod() (arkouda.str_ method)": [[26, "arkouda.str_.prod", false], [26, "id1327", false]], "prod() (in module arkouda)": [[90, "arkouda.prod", false]], "prod() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.prod", false]], "promote_to_common_dtype() (in module arkouda)": [[26, "arkouda.promote_to_common_dtype", false]], "promote_to_common_dtype() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.promote_to_common_dtype", false]], "properties (class in arkouda)": [[26, "arkouda.Properties", false]], "properties (class in arkouda.accessor)": [[2, "arkouda.accessor.Properties", false]], "ptp() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.ptp", false]], "ptp() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.ptp", false]], "ptp() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.ptp", false]], "ptp() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.ptp", false]], "ptp() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.ptp", false]], "ptp() (arkouda.str_ method)": [[26, "arkouda.str_.ptp", false], [26, "id1328", false]], "purge_cached_regex_patterns() (arkouda.strings method)": [[26, "arkouda.Strings.purge_cached_regex_patterns", false], [26, "id545", false], [26, "id621", false], [26, "id697", false], [26, "id773", false]], "purge_cached_regex_patterns() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.purge_cached_regex_patterns", false]], "put() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.put", false]], "put() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.put", false]], "put() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.put", false]], "put() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.put", false]], "put() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.put", false]], "put() (arkouda.str_ method)": [[26, "arkouda.str_.put", false], [26, "id1329", false]], "putmask() (in module arkouda)": [[26, "arkouda.putmask", false]], "putmask() (in module arkouda.numpy)": [[37, "arkouda.numpy.putmask", false]], "pvalue (arkouda.power_divergenceresult attribute)": [[26, "arkouda.Power_divergenceResult.pvalue", false]], "pvalue (arkouda.scipy.power_divergenceresult attribute)": [[46, "arkouda.scipy.Power_divergenceResult.pvalue", false]], "pzero (in module arkouda)": [[26, "arkouda.PZERO", false]], "pzero (in module arkouda.numpy)": [[37, "arkouda.numpy.PZERO", false]], "rad2deg() (in module arkouda)": [[26, "arkouda.rad2deg", false]], "rad2deg() (in module arkouda.numpy)": [[37, "arkouda.numpy.rad2deg", false]], "randint() (in module arkouda)": [[26, "arkouda.randint", false], [92, "arkouda.randint", false]], "randint() (in module arkouda.numpy.random)": [[38, "arkouda.numpy.random.randint", false]], "randint() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.randint", false]], "randint() (in module arkouda.random)": [[44, "arkouda.random.randint", false]], "random() (arkouda.numpy.random.generator method)": [[38, "arkouda.numpy.random.Generator.random", false]], "random() (arkouda.random.generator method)": [[44, "arkouda.random.Generator.random", false]], "random() (in module arkouda.random.generator)": [[98, "arkouda.random.Generator.random", false]], "random_sparse_matrix() (in module arkouda)": [[26, "arkouda.random_sparse_matrix", false]], "random_sparse_matrix() (in module arkouda.sparsematrix)": [[54, "arkouda.sparsematrix.random_sparse_matrix", false]], "random_strings_lognormal() (in module arkouda)": [[26, "arkouda.random_strings_lognormal", false]], "random_strings_lognormal() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.random_strings_lognormal", false]], "random_strings_uniform() (in module arkouda)": [[26, "arkouda.random_strings_uniform", false]], "random_strings_uniform() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.random_strings_uniform", false]], "rankwarning (class in arkouda)": [[26, "arkouda.RankWarning", false]], "rankwarning (class in arkouda.numpy)": [[37, "arkouda.numpy.RankWarning", false]], "ravel() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.ravel", false]], "ravel() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.ravel", false]], "ravel() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.ravel", false]], "ravel() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.ravel", false]], "ravel() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.ravel", false]], "ravel() (arkouda.str_ method)": [[26, "arkouda.str_.ravel", false], [26, "id1330", false]], "re (arkouda.match.match attribute)": [[33, "arkouda.match.Match.re", false]], "read() (in module arkouda)": [[26, "arkouda.read", false], [87, "arkouda.read", false]], "read() (in module arkouda.io)": [[29, "arkouda.io.read", false]], "read_csv() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.read_csv", false], [26, "id157", false]], "read_csv() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.read_csv", false]], "read_csv() (in module arkouda)": [[26, "arkouda.read_csv", false]], "read_csv() (in module arkouda.io)": [[29, "arkouda.io.read_csv", false]], "read_hdf() (arkouda.segarray class method)": [[26, "arkouda.SegArray.read_hdf", false]], "read_hdf() (arkouda.segarray.segarray class method)": [[50, "arkouda.segarray.SegArray.read_hdf", false]], "read_hdf() (in module arkouda)": [[26, "arkouda.read_hdf", false]], "read_hdf() (in module arkouda.io)": [[29, "arkouda.io.read_hdf", false]], "read_parquet() (in module arkouda)": [[26, "arkouda.read_parquet", false]], "read_parquet() (in module arkouda.io)": [[29, "arkouda.io.read_parquet", false]], "read_tagged_data() (in module arkouda)": [[26, "arkouda.read_tagged_data", false]], "read_tagged_data() (in module arkouda.io)": [[29, "arkouda.io.read_tagged_data", false]], "read_zarr() (in module arkouda)": [[26, "arkouda.read_zarr", false]], "read_zarr() (in module arkouda.io)": [[29, "arkouda.io.read_zarr", false]], "real() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.real", false]], "real() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.real", false]], "real() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.real", false]], "real() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.real", false]], "real() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.real", false]], "real() (arkouda.str_ method)": [[26, "arkouda.str_.real", false], [26, "id1331", false]], "real() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.real", false]], "receive() (in module arkouda)": [[26, "arkouda.receive", false]], "receive() (in module arkouda.io)": [[29, "arkouda.io.receive", false]], "receive_dataframe() (in module arkouda)": [[26, "arkouda.receive_dataframe", false]], "receive_dataframe() (in module arkouda.io)": [[29, "arkouda.io.receive_dataframe", false]], "reductions() (arkouda.groupby method)": [[26, "arkouda.GroupBy.Reductions", false], [26, "id256", false], [26, "id303", false], [26, "id350", false], [26, "id397", false], [26, "id444", false]], "reductions() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.Reductions", false]], "regex_split() (arkouda.strings method)": [[26, "arkouda.Strings.regex_split", false], [26, "id546", false], [26, "id622", false], [26, "id698", false], [26, "id774", false]], "regex_split() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.regex_split", false]], "register() (arkouda.bitvector method)": [[26, "arkouda.BitVector.register", false]], "register() (arkouda.categorical method)": [[26, "arkouda.Categorical.register", false], [26, "id100", false], [26, "id42", false]], "register() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.register", false]], "register() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.register", false]], "register() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.register", false]], "register() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.register", false], [26, "id158", false]], "register() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.register", false]], "register() (arkouda.datetime method)": [[26, "arkouda.Datetime.register", false], [26, "id194", false], [26, "id227", false]], "register() (arkouda.groupby method)": [[26, "arkouda.GroupBy.register", false], [26, "id280", false], [26, "id327", false], [26, "id374", false], [26, "id421", false], [26, "id468", false], [94, "arkouda.GroupBy.register", false]], "register() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.register", false]], "register() (arkouda.index method)": [[26, "arkouda.Index.register", false]], "register() (arkouda.index.index method)": [[27, "arkouda.index.Index.register", false]], "register() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.register", false]], "register() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.register", false]], "register() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.register", false]], "register() (arkouda.pdarray method)": [[26, "arkouda.pdarray.register", false], [26, "id1039", false], [26, "id1110", false], [26, "id1181", false], [26, "id1252", false], [26, "id968", false]], "register() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.register", false]], "register() (arkouda.segarray method)": [[26, "arkouda.SegArray.register", false]], "register() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.register", false]], "register() (arkouda.series method)": [[26, "arkouda.Series.register", false]], "register() (arkouda.series.series method)": [[51, "arkouda.series.Series.register", false]], "register() (arkouda.strings method)": [[26, "arkouda.Strings.register", false], [26, "id547", false], [26, "id623", false], [26, "id699", false], [26, "id775", false]], "register() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.register", false]], "register() (arkouda.timeclass.datetime method)": [[57, "arkouda.timeclass.Datetime.register", false]], "register() (arkouda.timeclass.timedelta method)": [[57, "arkouda.timeclass.Timedelta.register", false]], "register() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.register", false], [26, "id804", false]], "register() (in module arkouda.util)": [[58, "arkouda.util.register", false]], "register_all() (in module arkouda)": [[26, "arkouda.register_all", false]], "register_all() (in module arkouda.util)": [[58, "arkouda.util.register_all", false]], "registerablepieces (arkouda.categorical attribute)": [[26, "arkouda.Categorical.RegisterablePieces", false], [26, "id16", false], [26, "id74", false]], "registerablepieces (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.RegisterablePieces", false]], "registered_name (arkouda.bitvector attribute)": [[26, "arkouda.BitVector.registered_name", false]], "registered_name (arkouda.categorical attribute)": [[26, "arkouda.Categorical.registered_name", false], [26, "id101", false], [26, "id43", false]], "registered_name (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.registered_name", false]], "registered_name (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.registered_name", false]], "registered_name (arkouda.index attribute)": [[26, "arkouda.Index.registered_name", false]], "registered_name (arkouda.index.index attribute)": [[27, "arkouda.index.Index.registered_name", false]], "registered_name (arkouda.index.multiindex attribute)": [[27, "arkouda.index.MultiIndex.registered_name", false]], "registered_name (arkouda.multiindex attribute)": [[26, "arkouda.MultiIndex.registered_name", false]], "registered_name (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.registered_name", false], [26, "id1040", false], [26, "id1111", false], [26, "id1182", false], [26, "id1253", false], [26, "id969", false]], "registered_name (arkouda.pdarrayclass.pdarray attribute)": [[39, "arkouda.pdarrayclass.pdarray.registered_name", false]], "registered_name (arkouda.segarray attribute)": [[26, "arkouda.SegArray.registered_name", false]], "registered_name (arkouda.segarray.segarray attribute)": [[50, "arkouda.segarray.SegArray.registered_name", false]], "registered_name (arkouda.strings attribute)": [[26, "arkouda.Strings.registered_name", false], [26, "id548", false], [26, "id624", false], [26, "id700", false], [26, "id776", false]], "registered_name (arkouda.strings.strings attribute)": [[55, "arkouda.strings.Strings.registered_name", false]], "registeredsymbols (in module arkouda)": [[26, "arkouda.RegisteredSymbols", false]], "registeredsymbols (in module arkouda.infoclass)": [[28, "arkouda.infoclass.RegisteredSymbols", false]], "registrationerror": [[26, "arkouda.RegistrationError", false], [26, "id484", false], [26, "id485", false], [26, "id486", false], [26, "id487", false], [39, "arkouda.pdarrayclass.RegistrationError", false]], "remainder() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.remainder", false]], "remove_repeats() (arkouda.segarray method)": [[26, "arkouda.SegArray.remove_repeats", false]], "remove_repeats() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.remove_repeats", false]], "remove_repeats() (in module arkouda.segarray)": [[99, "arkouda.SegArray.remove_repeats", false]], "rename() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.rename", false], [26, "id159", false]], "rename() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.rename", false]], "rename() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.rename", false]], "repeat() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.repeat", false]], "repeat() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.repeat", false]], "repeat() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.repeat", false]], "repeat() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.repeat", false]], "repeat() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.repeat", false]], "repeat() (arkouda.str_ method)": [[26, "arkouda.str_.repeat", false], [26, "id1332", false]], "repeat() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.repeat", false]], "report_mem() (in module arkouda.util)": [[58, "arkouda.util.report_mem", false]], "requiredpieces (arkouda.categorical attribute)": [[26, "arkouda.Categorical.RequiredPieces", false], [26, "id17", false], [26, "id75", false]], "requiredpieces (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.RequiredPieces", false]], "reset_categories() (arkouda.categorical method)": [[26, "arkouda.Categorical.reset_categories", false], [26, "id102", false], [26, "id44", false]], "reset_categories() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.reset_categories", false]], "reset_comm_diagnostics() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.reset_comm_diagnostics", false]], "reset_index() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.reset_index", false], [26, "id160", false]], "reset_index() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.reset_index", false]], "reset_index() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.reset_index", false]], "reshape() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.reshape", false]], "reshape() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.reshape", false]], "reshape() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.reshape", false]], "reshape() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.reshape", false]], "reshape() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.reshape", false]], "reshape() (arkouda.pdarray method)": [[26, "arkouda.pdarray.reshape", false], [26, "id1041", false], [26, "id1112", false], [26, "id1183", false], [26, "id1254", false], [26, "id970", false]], "reshape() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.reshape", false]], "reshape() (arkouda.str_ method)": [[26, "arkouda.str_.reshape", false], [26, "id1333", false]], "reshape() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.reshape", false]], "resize() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.resize", false]], "resize() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.resize", false]], "resize() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.resize", false]], "resize() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.resize", false]], "resize() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.resize", false]], "resize() (arkouda.str_ method)": [[26, "arkouda.str_.resize", false], [26, "id1334", false]], "resolution (arkouda.finfo attribute)": [[26, "arkouda.finfo.resolution", false]], "resolution (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.resolution", false]], "resolve_scalar_dtype() (in module arkouda)": [[26, "arkouda.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.dtypes)": [[23, "arkouda.dtypes.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.numpy)": [[37, "arkouda.numpy.resolve_scalar_dtype", false]], "resolve_scalar_dtype() (in module arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.resolve_scalar_dtype", false]], "restore() (in module arkouda)": [[26, "arkouda.restore", false]], "restore() (in module arkouda.io)": [[29, "arkouda.io.restore", false]], "result_type() (in module arkouda.array_api.data_type_functions)": [[7, "arkouda.array_api.data_type_functions.result_type", false]], "retrieve() (arkouda.history.historyretriever method)": [[25, "arkouda.history.HistoryRetriever.retrieve", false]], "retrieve() (arkouda.history.notebookhistoryretriever method)": [[25, "arkouda.history.NotebookHistoryRetriever.retrieve", false]], "retrieve() (arkouda.history.shellhistoryretriever method)": [[25, "arkouda.history.ShellHistoryRetriever.retrieve", false]], "return_validity() (arkouda.errormode method)": [[26, "arkouda.ErrorMode.return_validity", false]], "return_validity() (arkouda.numpy.errormode method)": [[37, "arkouda.numpy.ErrorMode.return_validity", false]], "reverse (arkouda.bitvector attribute)": [[26, "arkouda.BitVector.reverse", false]], "reverse (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.reverse", false]], "right_align() (in module arkouda)": [[26, "arkouda.right_align", false]], "right_align() (in module arkouda.alignment)": [[3, "arkouda.alignment.right_align", false]], "roll() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.roll", false]], "rotl() (arkouda.pdarray method)": [[26, "arkouda.pdarray.rotl", false], [26, "id1042", false], [26, "id1113", false], [26, "id1184", false], [26, "id1255", false], [26, "id971", false]], "rotl() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.rotl", false]], "rotl() (in module arkouda)": [[26, "arkouda.rotl", false]], "rotl() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.rotl", false]], "rotr() (arkouda.pdarray method)": [[26, "arkouda.pdarray.rotr", false], [26, "id1043", false], [26, "id1114", false], [26, "id1185", false], [26, "id1256", false], [26, "id972", false]], "rotr() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.rotr", false]], "rotr() (in module arkouda)": [[26, "arkouda.rotr", false]], "rotr() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.rotr", false]], "round() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.round", false]], "round() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.round", false]], "round() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.round", false]], "round() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.round", false]], "round() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.round", false]], "round() (arkouda.str_ method)": [[26, "arkouda.str_.round", false], [26, "id1335", false]], "round() (in module arkouda)": [[26, "arkouda.round", false]], "round() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.round", false]], "round() (in module arkouda.numpy)": [[37, "arkouda.numpy.round", false]], "row (class in arkouda)": [[26, "arkouda.Row", false]], "row (class in arkouda.row)": [[45, "arkouda.row.Row", false]], "rpeel() (arkouda.strings method)": [[26, "arkouda.Strings.rpeel", false], [26, "id549", false], [26, "id625", false], [26, "id701", false], [26, "id777", false], [103, "arkouda.Strings.rpeel", false]], "rpeel() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.rpeel", false]], "ruok() (in module arkouda.client)": [[19, "arkouda.client.ruok", false]], "sample() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.sample", false], [26, "id161", false]], "sample() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.sample", false]], "sample() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.sample", false]], "sample() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.sample", false]], "sample() (arkouda.groupby method)": [[26, "arkouda.GroupBy.sample", false], [26, "id281", false], [26, "id328", false], [26, "id375", false], [26, "id422", false], [26, "id469", false], [94, "arkouda.GroupBy.sample", false]], "sample() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.sample", false]], "save() (arkouda.categorical method)": [[26, "arkouda.Categorical.save", false], [26, "id103", false], [26, "id45", false]], "save() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.save", false]], "save() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.save", false], [26, "id162", false]], "save() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.save", false]], "save() (arkouda.index method)": [[26, "arkouda.Index.save", false]], "save() (arkouda.index.index method)": [[27, "arkouda.index.Index.save", false]], "save() (arkouda.pdarray method)": [[26, "arkouda.pdarray.save", false], [26, "id1044", false], [26, "id1115", false], [26, "id1186", false], [26, "id1257", false], [26, "id973", false]], "save() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.save", false]], "save() (arkouda.segarray method)": [[26, "arkouda.SegArray.save", false]], "save() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.save", false]], "save() (arkouda.strings method)": [[26, "arkouda.Strings.save", false], [26, "id550", false], [26, "id626", false], [26, "id702", false], [26, "id778", false]], "save() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.save", false]], "save_all() (in module arkouda)": [[26, "arkouda.save_all", false]], "save_all() (in module arkouda.io)": [[29, "arkouda.io.save_all", false]], "scalar_array() (in module arkouda)": [[26, "arkouda.scalar_array", false]], "scalar_array() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.scalar_array", false]], "scalardtypes (class in arkouda)": [[26, "arkouda.ScalarDTypes", false]], "scalardtypes (class in arkouda.dtypes)": [[23, "arkouda.dtypes.ScalarDTypes", false]], "scalardtypes (class in arkouda.numpy)": [[37, "arkouda.numpy.ScalarDTypes", false]], "scalardtypes (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.ScalarDTypes", false]], "scalartype (class in arkouda)": [[26, "arkouda.ScalarType", false]], "scalartype (class in arkouda.numpy)": [[37, "arkouda.numpy.ScalarType", false]], "sctypedict (class in arkouda)": [[26, "arkouda.sctypeDict", false]], "sctypedict (class in arkouda.numpy)": [[37, "arkouda.numpy.sctypeDict", false]], "sctypes (class in arkouda)": [[26, "arkouda.sctypes", false]], "sctypes (class in arkouda.numpy)": [[37, "arkouda.numpy.sctypes", false]], "search() (arkouda.strings method)": [[26, "arkouda.Strings.search", false], [26, "id551", false], [26, "id627", false], [26, "id703", false], [26, "id779", false], [103, "arkouda.Strings.search", false]], "search() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.search", false]], "search_bool (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.search_bool", false]], "search_ind (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.search_ind", false]], "search_intervals() (in module arkouda)": [[26, "arkouda.search_intervals", false]], "search_intervals() (in module arkouda.alignment)": [[3, "arkouda.alignment.search_intervals", false]], "searchsorted() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.searchsorted", false]], "searchsorted() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.searchsorted", false]], "searchsorted() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.searchsorted", false]], "searchsorted() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.searchsorted", false]], "searchsorted() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.searchsorted", false]], "searchsorted() (arkouda.str_ method)": [[26, "arkouda.str_.searchsorted", false], [26, "id1336", false]], "searchsorted() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.searchsorted", false]], "second (arkouda.datetime property)": [[26, "arkouda.Datetime.second", false], [26, "id195", false], [26, "id228", false]], "second (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.second", false]], "seconds (arkouda.timeclass.timedelta property)": [[57, "arkouda.timeclass.Timedelta.seconds", false]], "seconds (arkouda.timedelta property)": [[26, "arkouda.Timedelta.seconds", false], [26, "id805", false]], "seg_suffix (in module arkouda)": [[26, "arkouda.SEG_SUFFIX", false]], "seg_suffix (in module arkouda.segarray)": [[50, "arkouda.segarray.SEG_SUFFIX", false]], "segarray (class in arkouda)": [[26, "arkouda.SegArray", false]], "segarray (class in arkouda.segarray)": [[50, "arkouda.segarray.SegArray", false]], "segarray() (in module arkouda)": [[26, "arkouda.segarray", false]], "segarray() (in module arkouda.segarray)": [[50, "arkouda.segarray.segarray", false]], "segments (arkouda.categorical attribute)": [[26, "arkouda.Categorical.segments", false], [26, "id10", false], [26, "id104", false], [26, "id3", false], [26, "id46", false], [26, "id68", false], [91, "arkouda.Categorical.segments", false]], "segments (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.segments", false], [18, "id3", false]], "segments (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.segments", false], [26, "id251", false], [26, "id298", false], [26, "id345", false], [26, "id392", false], [26, "id439", false], [94, "arkouda.GroupBy.segments", false]], "segments (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.segments", false]], "segments (arkouda.segarray attribute)": [[26, "arkouda.SegArray.segments", false]], "segments (arkouda.segarray.segarray attribute)": [[50, "arkouda.segarray.SegArray.segments", false]], "separator (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.separator", false]], "separator (arkouda.fields attribute)": [[26, "arkouda.Fields.separator", false]], "series (arkouda.accessor.datetimeaccessor attribute)": [[2, "arkouda.accessor.DatetimeAccessor.series", false]], "series (arkouda.accessor.stringaccessor attribute)": [[2, "arkouda.accessor.StringAccessor.series", false]], "series (arkouda.datetimeaccessor attribute)": [[26, "arkouda.DatetimeAccessor.series", false]], "series (arkouda.stringaccessor attribute)": [[26, "arkouda.StringAccessor.series", false]], "series (class in arkouda)": [[26, "arkouda.Series", false], [100, "arkouda.Series", false]], "series (class in arkouda.series)": [[51, "arkouda.series.Series", false]], "seriesdtypes (class in arkouda)": [[26, "arkouda.SeriesDTypes", false]], "seriesdtypes (class in arkouda.dtypes)": [[23, "arkouda.dtypes.SeriesDTypes", false]], "seriesdtypes (class in arkouda.numpy)": [[37, "arkouda.numpy.SeriesDTypes", false]], "seriesdtypes (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.SeriesDTypes", false]], "set_categories() (arkouda.categorical method)": [[26, "arkouda.Categorical.set_categories", false], [26, "id105", false], [26, "id47", false]], "set_categories() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.set_categories", false]], "set_dtype() (arkouda.index method)": [[26, "arkouda.Index.set_dtype", false]], "set_dtype() (arkouda.index.index method)": [[27, "arkouda.index.Index.set_dtype", false]], "set_dtype() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.set_dtype", false]], "set_dtype() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.set_dtype", false]], "set_dtype() (in module arkouda.index)": [[88, "arkouda.Index.set_dtype", false]], "set_dtype() (in module arkouda.multiindex)": [[88, "arkouda.MultiIndex.set_dtype", false]], "set_jth() (arkouda.segarray method)": [[26, "arkouda.SegArray.set_jth", false]], "set_jth() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.set_jth", false]], "set_jth() (in module arkouda.segarray)": [[99, "arkouda.SegArray.set_jth", false]], "setdefault() (arkouda.dtypes.number_format_strings method)": [[23, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.dtypes.seriesdtypes method)": [[23, "arkouda.dtypes.SeriesDTypes.setdefault", false]], "setdefault() (arkouda.number_format_strings method)": [[26, "arkouda.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.setdefault", false]], "setdefault() (arkouda.numpy.number_format_strings method)": [[37, "arkouda.numpy.NUMBER_FORMAT_STRINGS.setdefault", false]], "setdefault() (arkouda.numpy.sctypedict method)": [[37, "arkouda.numpy.sctypeDict.setdefault", false]], "setdefault() (arkouda.numpy.sctypes method)": [[37, "arkouda.numpy.sctypes.setdefault", false]], "setdefault() (arkouda.numpy.seriesdtypes method)": [[37, "arkouda.numpy.SeriesDTypes.setdefault", false]], "setdefault() (arkouda.sctypedict method)": [[26, "arkouda.sctypeDict.setdefault", false]], "setdefault() (arkouda.sctypes method)": [[26, "arkouda.sctypes.setdefault", false]], "setdefault() (arkouda.seriesdtypes method)": [[26, "arkouda.SeriesDTypes.setdefault", false]], "setdiff() (arkouda.segarray method)": [[26, "arkouda.SegArray.setdiff", false]], "setdiff() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.setdiff", false]], "setdiff() (in module arkouda.segarray)": [[99, "arkouda.SegArray.setdiff", false]], "setdiff1d() (in module arkouda)": [[26, "arkouda.setdiff1d", false], [101, "arkouda.setdiff1d", false]], "setdiff1d() (in module arkouda.pdarraysetops)": [[42, "arkouda.pdarraysetops.setdiff1d", false]], "setfield() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.setfield", false]], "setfield() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.setfield", false]], "setfield() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.setfield", false]], "setfield() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.setfield", false]], "setfield() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.setfield", false]], "setfield() (arkouda.str_ method)": [[26, "arkouda.str_.setfield", false], [26, "id1337", false]], "setflags() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.setflags", false]], "setflags() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.setflags", false]], "setflags() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.setflags", false]], "setflags() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.setflags", false]], "setflags() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.setflags", false]], "setflags() (arkouda.str_ method)": [[26, "arkouda.str_.setflags", false], [26, "id1338", false]], "setxor() (arkouda.segarray method)": [[26, "arkouda.SegArray.setxor", false]], "setxor() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.setxor", false]], "setxor() (in module arkouda.segarray)": [[99, "arkouda.SegArray.setxor", false]], "setxor1d() (in module arkouda)": [[26, "arkouda.setxor1d", false], [101, "arkouda.setxor1d", false]], "setxor1d() (in module arkouda.pdarraysetops)": [[42, "arkouda.pdarraysetops.setxor1d", false]], "shape (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.shape", false]], "shape (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.shape", false]], "shape (arkouda.categorical attribute)": [[26, "arkouda.Categorical.shape", false], [26, "id106", false], [26, "id14", false], [26, "id4", false], [26, "id48", false], [26, "id72", false], [91, "arkouda.Categorical.shape", false]], "shape (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.shape", false], [18, "id4", false]], "shape (arkouda.dataframe property)": [[26, "arkouda.DataFrame.shape", false], [26, "id163", false]], "shape (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.shape", false]], "shape (arkouda.index property)": [[26, "arkouda.Index.shape", false]], "shape (arkouda.index.index property)": [[27, "arkouda.index.Index.shape", false]], "shape (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.shape", false], [26, "id1068", false], [26, "id1139", false], [26, "id1210", false], [26, "id926", false], [26, "id997", false], [97, "arkouda.pdarray.shape", false]], "shape (arkouda.pdarray property)": [[26, "id1045", false], [26, "id1116", false], [26, "id1187", false], [26, "id1258", false], [26, "id917", false], [26, "id974", false]], "shape (arkouda.pdarrayclass.pdarray attribute)": [[39, "arkouda.pdarrayclass.pdarray.shape", false]], "shape (arkouda.pdarrayclass.pdarray property)": [[39, "id4", false]], "shape (arkouda.series property)": [[26, "arkouda.Series.shape", false]], "shape (arkouda.series.series property)": [[51, "arkouda.series.Series.shape", false]], "shape (arkouda.sparray attribute)": [[26, "arkouda.sparray.shape", false], [26, "id1286", false]], "shape (arkouda.sparrayclass.sparray attribute)": [[53, "arkouda.sparrayclass.sparray.shape", false], [53, "id6", false]], "shape (arkouda.strings attribute)": [[26, "arkouda.Strings.shape", false], [26, "id498", false], [26, "id574", false], [26, "id650", false], [26, "id726", false]], "shape (arkouda.strings.strings attribute)": [[55, "arkouda.strings.Strings.shape", false]], "shape() (arkouda.bigint method)": [[26, "arkouda.bigint.shape", false], [26, "id848", false]], "shape() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.shape", false]], "shape() (arkouda.dtypes.bigint method)": [[23, "arkouda.dtypes.bigint.shape", false]], "shape() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.shape", false]], "shape() (arkouda.numpy.bigint method)": [[37, "arkouda.numpy.bigint.shape", false]], "shape() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.shape", false]], "shape() (arkouda.numpy.dtypes.bigint method)": [[36, "arkouda.numpy.dtypes.bigint.shape", false]], "shape() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.shape", false]], "shape() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.shape", false]], "shape() (arkouda.str_ method)": [[26, "arkouda.str_.shape", false], [26, "id1339", false]], "shape() (in module arkouda)": [[26, "arkouda.shape", false]], "shape() (in module arkouda.numpy)": [[37, "arkouda.numpy.shape", false]], "shapes() (arkouda.scipy.stats.chi2 method)": [[48, "arkouda.scipy.stats.chi2.shapes", false]], "shellhistoryretriever (class in arkouda.history)": [[25, "arkouda.history.ShellHistoryRetriever", false]], "short (class in arkouda)": [[26, "arkouda.short", false]], "short (class in arkouda.numpy)": [[37, "arkouda.numpy.short", false]], "shortdtype (class in arkouda)": [[26, "arkouda.ShortDType", false]], "shortdtype (class in arkouda.numpy)": [[37, "arkouda.numpy.ShortDType", false]], "show_int (arkouda.client_dtypes.fields attribute)": [[20, "arkouda.client_dtypes.Fields.show_int", false]], "show_int (arkouda.fields attribute)": [[26, "arkouda.Fields.show_int", false]], "shuffle() (arkouda.numpy.random.generator method)": [[38, "arkouda.numpy.random.Generator.shuffle", false]], "shuffle() (arkouda.random.generator method)": [[44, "arkouda.random.Generator.shuffle", false]], "shuffle() (in module arkouda.random.generator)": [[98, "arkouda.random.Generator.shuffle", false]], "shutdown() (in module arkouda.client)": [[19, "arkouda.client.shutdown", false]], "sign() (in module arkouda)": [[26, "arkouda.sign", false]], "sign() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.sign", false]], "sign() (in module arkouda.numpy)": [[37, "arkouda.numpy.sign", false]], "signedinteger (class in arkouda)": [[26, "arkouda.signedinteger", false]], "signedinteger (class in arkouda.numpy)": [[37, "arkouda.numpy.signedinteger", false]], "sin() (in module arkouda)": [[26, "arkouda.sin", false], [90, "arkouda.sin", false]], "sin() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.sin", false]], "sin() (in module arkouda.numpy)": [[37, "arkouda.numpy.sin", false]], "single (class in arkouda)": [[26, "arkouda.single", false]], "single (class in arkouda.numpy)": [[37, "arkouda.numpy.single", false]], "sinh() (in module arkouda)": [[26, "arkouda.sinh", false]], "sinh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.sinh", false]], "sinh() (in module arkouda.numpy)": [[37, "arkouda.numpy.sinh", false]], "size (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.size", false]], "size (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.size", false]], "size (arkouda.categorical attribute)": [[26, "arkouda.Categorical.size", false], [26, "id107", false], [26, "id11", false], [26, "id49", false], [26, "id5", false], [26, "id69", false], [91, "arkouda.Categorical.size", false]], "size (arkouda.categorical.categorical attribute)": [[18, "arkouda.categorical.Categorical.size", false], [18, "id5", false]], "size (arkouda.dataframe property)": [[26, "arkouda.DataFrame.size", false], [26, "id164", false]], "size (arkouda.dataframe.dataframe property)": [[22, "arkouda.dataframe.DataFrame.size", false]], "size (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.size", false], [26, "id247", false], [26, "id294", false], [26, "id341", false], [26, "id388", false], [26, "id435", false], [94, "arkouda.GroupBy.size", false]], "size (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.size", false]], "size (arkouda.pdarray attribute)": [[26, "arkouda.pdarray.size", false], [26, "id1046", false], [26, "id1066", false], [26, "id1117", false], [26, "id1137", false], [26, "id1188", false], [26, "id1208", false], [26, "id1259", false], [26, "id918", false], [26, "id924", false], [26, "id975", false], [26, "id995", false], [97, "arkouda.pdarray.size", false]], "size (arkouda.pdarrayclass.pdarray attribute)": [[39, "arkouda.pdarrayclass.pdarray.size", false], [39, "id5", false]], "size (arkouda.segarray attribute)": [[26, "arkouda.SegArray.size", false]], "size (arkouda.segarray.segarray attribute)": [[50, "arkouda.segarray.SegArray.size", false]], "size (arkouda.sparray attribute)": [[26, "arkouda.sparray.size", false], [26, "id1287", false]], "size (arkouda.sparrayclass.sparray attribute)": [[53, "arkouda.sparrayclass.sparray.size", false], [53, "id7", false]], "size (arkouda.strings attribute)": [[26, "arkouda.Strings.size", false], [26, "id495", false], [26, "id571", false], [26, "id647", false], [26, "id723", false]], "size (arkouda.strings.strings attribute)": [[55, "arkouda.strings.Strings.size", false]], "size() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.size", false]], "size() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.size", false]], "size() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.size", false]], "size() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.size", false]], "size() (arkouda.groupby method)": [[26, "id244", false], [26, "id282", false], [26, "id329", false], [26, "id376", false], [26, "id423", false], [26, "id470", false], [94, "id0", false]], "size() (arkouda.groupbyclass.groupby method)": [[24, "id0", false]], "size() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.size", false]], "size() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.size", false]], "size() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.size", false]], "size() (arkouda.str_ method)": [[26, "arkouda.str_.size", false], [26, "id1340", false]], "skew() (in module arkouda)": [[26, "arkouda.skew", false]], "slice_bits() (arkouda.pdarray method)": [[26, "arkouda.pdarray.slice_bits", false], [26, "id1047", false], [26, "id1118", false], [26, "id1189", false], [26, "id1260", false], [26, "id976", false]], "slice_bits() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.slice_bits", false]], "smallest_normal (arkouda.array_api.data_type_functions.finfo_object attribute)": [[7, "arkouda.array_api.data_type_functions.finfo_object.smallest_normal", false]], "smallest_normal (arkouda.finfo attribute)": [[26, "arkouda.finfo.smallest_normal", false]], "smallest_normal (arkouda.finfo property)": [[26, "id874", false]], "smallest_normal (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.smallest_normal", false]], "smallest_normal (arkouda.numpy.finfo property)": [[37, "id0", false]], "smallest_subnormal (arkouda.finfo attribute)": [[26, "arkouda.finfo.smallest_subnormal", false]], "smallest_subnormal (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.smallest_subnormal", false]], "snapshot() (in module arkouda)": [[26, "arkouda.snapshot", false]], "snapshot() (in module arkouda.io)": [[29, "arkouda.io.snapshot", false]], "sort() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.sort", false]], "sort() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.sort", false]], "sort() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.sort", false]], "sort() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.sort", false]], "sort() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.sort", false]], "sort() (arkouda.str_ method)": [[26, "arkouda.str_.sort", false], [26, "id1341", false]], "sort() (in module arkouda)": [[26, "arkouda.sort", false]], "sort() (in module arkouda.array_api.sorting_functions)": [[15, "arkouda.array_api.sorting_functions.sort", false]], "sort() (in module arkouda.sorting)": [[52, "arkouda.sorting.sort", false]], "sort_index() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.sort_index", false], [26, "id165", false]], "sort_index() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.sort_index", false]], "sort_index() (arkouda.series method)": [[26, "arkouda.Series.sort_index", false]], "sort_index() (arkouda.series.series method)": [[51, "arkouda.series.Series.sort_index", false]], "sort_index() (in module arkouda.series)": [[100, "arkouda.Series.sort_index", false]], "sort_values() (arkouda.categorical method)": [[26, "arkouda.Categorical.sort_values", false], [26, "id108", false], [26, "id50", false]], "sort_values() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.sort_values", false]], "sort_values() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.sort_values", false], [26, "id166", false]], "sort_values() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.sort_values", false]], "sort_values() (arkouda.series method)": [[26, "arkouda.Series.sort_values", false]], "sort_values() (arkouda.series.series method)": [[51, "arkouda.series.Series.sort_values", false]], "sort_values() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.sort_values", false]], "sort_values() (in module arkouda.series)": [[100, "arkouda.Series.sort_values", false]], "sortingalgorithm (in module arkouda)": [[26, "arkouda.SortingAlgorithm", false]], "sortingalgorithm (in module arkouda.sorting)": [[52, "arkouda.sorting.SortingAlgorithm", false]], "sparray (class in arkouda)": [[26, "arkouda.sparray", false]], "sparray (class in arkouda.sparrayclass)": [[53, "arkouda.sparrayclass.sparray", false]], "sparse_matrix_matrix_mult() (in module arkouda)": [[26, "arkouda.sparse_matrix_matrix_mult", false]], "sparse_matrix_matrix_mult() (in module arkouda.sparsematrix)": [[54, "arkouda.sparsematrix.sparse_matrix_matrix_mult", false]], "sparse_sum_help() (in module arkouda.util)": [[58, "arkouda.util.sparse_sum_help", false]], "special_objtype (arkouda.bitvector attribute)": [[26, "arkouda.BitVector.special_objType", false]], "special_objtype (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.special_objType", false]], "special_objtype (arkouda.client_dtypes.ipv4 attribute)": [[20, "arkouda.client_dtypes.IPv4.special_objType", false]], "special_objtype (arkouda.datetime attribute)": [[26, "arkouda.Datetime.special_objType", false], [26, "id196", false], [26, "id229", false]], "special_objtype (arkouda.ipv4 attribute)": [[26, "arkouda.IPv4.special_objType", false]], "special_objtype (arkouda.timeclass.datetime attribute)": [[57, "arkouda.timeclass.Datetime.special_objType", false]], "special_objtype (arkouda.timeclass.timedelta attribute)": [[57, "arkouda.timeclass.Timedelta.special_objType", false]], "special_objtype (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.special_objType", false], [26, "id806", false]], "split() (arkouda.matcher.matcher method)": [[34, "arkouda.matcher.Matcher.split", false]], "split() (arkouda.strings method)": [[26, "arkouda.Strings.split", false], [26, "id552", false], [26, "id628", false], [26, "id704", false], [26, "id780", false], [103, "arkouda.Strings.split", false]], "split() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.split", false]], "sqrt() (in module arkouda)": [[26, "arkouda.sqrt", false]], "sqrt() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.sqrt", false]], "sqrt() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.sqrt", false]], "square() (in module arkouda)": [[26, "arkouda.square", false]], "square() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.square", false]], "square() (in module arkouda.numpy)": [[37, "arkouda.numpy.square", false]], "squeeze() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.squeeze", false]], "squeeze() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.squeeze", false]], "squeeze() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.squeeze", false]], "squeeze() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.squeeze", false]], "squeeze() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.squeeze", false]], "squeeze() (arkouda.str_ method)": [[26, "arkouda.str_.squeeze", false], [26, "id1342", false]], "squeeze() (in module arkouda)": [[26, "arkouda.squeeze", false]], "squeeze() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.squeeze", false]], "squeeze() (in module arkouda.numpy)": [[37, "arkouda.numpy.squeeze", false]], "stack() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.stack", false]], "standard_exponential() (arkouda.numpy.random.generator method)": [[38, "arkouda.numpy.random.Generator.standard_exponential", false]], "standard_exponential() (arkouda.random.generator method)": [[44, "arkouda.random.Generator.standard_exponential", false]], "standard_exponential() (in module arkouda.random.generator)": [[98, "arkouda.random.Generator.standard_exponential", false]], "standard_normal() (arkouda.numpy.random.generator method)": [[38, "arkouda.numpy.random.Generator.standard_normal", false]], "standard_normal() (arkouda.random.generator method)": [[44, "arkouda.random.Generator.standard_normal", false]], "standard_normal() (in module arkouda)": [[26, "arkouda.standard_normal", false]], "standard_normal() (in module arkouda.numpy.random)": [[38, "arkouda.numpy.random.standard_normal", false]], "standard_normal() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.standard_normal", false]], "standard_normal() (in module arkouda.random)": [[44, "arkouda.random.standard_normal", false]], "standard_normal() (in module arkouda.random.generator)": [[98, "arkouda.random.Generator.standard_normal", false]], "standardize_categories() (arkouda.categorical class method)": [[26, "arkouda.Categorical.standardize_categories", false], [26, "id109", false], [26, "id51", false]], "standardize_categories() (arkouda.categorical.categorical class method)": [[18, "arkouda.categorical.Categorical.standardize_categories", false]], "start() (arkouda.match.match method)": [[33, "arkouda.match.Match.start", false], [103, "arkouda.match.Match.start", false]], "start_comm_diagnostics() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.start_comm_diagnostics", false]], "start_verbose_comm() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.start_verbose_comm", false]], "starts (arkouda.matcher.matcher attribute)": [[34, "arkouda.matcher.Matcher.starts", false]], "startswith() (arkouda.categorical method)": [[26, "arkouda.Categorical.startswith", false], [26, "id110", false], [26, "id52", false], [91, "arkouda.Categorical.startswith", false]], "startswith() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.startswith", false]], "startswith() (arkouda.strings method)": [[26, "arkouda.Strings.startswith", false], [26, "id553", false], [26, "id629", false], [26, "id705", false], [26, "id781", false], [103, "arkouda.Strings.startswith", false]], "startswith() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.startswith", false]], "statistic (arkouda.power_divergenceresult attribute)": [[26, "arkouda.Power_divergenceResult.statistic", false]], "statistic (arkouda.scipy.power_divergenceresult attribute)": [[46, "arkouda.scipy.Power_divergenceResult.statistic", false]], "std() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.std", false]], "std() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.std", false]], "std() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.std", false]], "std() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.std", false]], "std() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.std", false]], "std() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.std", false]], "std() (arkouda.groupby method)": [[26, "arkouda.GroupBy.std", false], [26, "id283", false], [26, "id330", false], [26, "id377", false], [26, "id424", false], [26, "id471", false], [94, "arkouda.GroupBy.std", false]], "std() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.std", false]], "std() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.std", false]], "std() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.std", false]], "std() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.std", false]], "std() (arkouda.pdarray method)": [[26, "arkouda.pdarray.std", false], [26, "id1048", false], [26, "id1119", false], [26, "id1190", false], [26, "id1261", false], [26, "id977", false], [95, "arkouda.pdarray.std", false]], "std() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.std", false]], "std() (arkouda.series method)": [[26, "arkouda.Series.std", false]], "std() (arkouda.series.series method)": [[51, "arkouda.series.Series.std", false]], "std() (arkouda.str_ method)": [[26, "arkouda.str_.std", false], [26, "id1343", false]], "std() (arkouda.timeclass.timedelta method)": [[57, "arkouda.timeclass.Timedelta.std", false]], "std() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.std", false], [26, "id807", false]], "std() (in module arkouda)": [[26, "arkouda.std", false], [90, "arkouda.std", false]], "std() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.std", false]], "std() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.std", false]], "stick() (arkouda.strings method)": [[26, "arkouda.Strings.stick", false], [26, "id554", false], [26, "id630", false], [26, "id706", false], [26, "id782", false], [103, "arkouda.Strings.stick", false]], "stick() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.stick", false]], "stop_comm_diagnostics() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.stop_comm_diagnostics", false]], "stop_verbose_comm() (in module arkouda.comm_diagnostics)": [[21, "arkouda.comm_diagnostics.stop_verbose_comm", false]], "str() (arkouda.dtype method)": [[26, "arkouda.DType.STR", false]], "str() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.STR", false]], "str() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.STR", false]], "str() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.STR", false]], "str_ (class in arkouda)": [[26, "arkouda.str_", false], [26, "id1288", false]], "str_ (class in arkouda.dtypes)": [[23, "arkouda.dtypes.str_", false]], "str_ (class in arkouda.numpy)": [[37, "arkouda.numpy.str_", false]], "str_ (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.str_", false]], "str_acc() (arkouda.series method)": [[26, "arkouda.Series.str_acc", false]], "str_acc() (arkouda.series.series method)": [[51, "arkouda.series.Series.str_acc", false]], "str_scalars (class in arkouda)": [[26, "arkouda.str_scalars", false]], "str_scalars (class in arkouda.dtypes)": [[23, "arkouda.dtypes.str_scalars", false]], "str_scalars (class in arkouda.numpy)": [[37, "arkouda.numpy.str_scalars", false]], "str_scalars (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.str_scalars", false]], "strdtype (class in arkouda)": [[26, "arkouda.StrDType", false]], "strdtype (class in arkouda.numpy)": [[37, "arkouda.numpy.StrDType", false]], "strict() (arkouda.errormode method)": [[26, "arkouda.ErrorMode.strict", false]], "strict() (arkouda.numpy.errormode method)": [[37, "arkouda.numpy.ErrorMode.strict", false]], "strides() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.strides", false]], "strides() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.strides", false]], "strides() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.strides", false]], "strides() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.strides", false]], "strides() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.strides", false]], "strides() (arkouda.str_ method)": [[26, "arkouda.str_.strides", false], [26, "id1344", false]], "string_operators() (in module arkouda)": [[26, "arkouda.string_operators", false]], "string_operators() (in module arkouda.accessor)": [[2, "arkouda.accessor.string_operators", false]], "stringaccessor (class in arkouda)": [[26, "arkouda.StringAccessor", false]], "stringaccessor (class in arkouda.accessor)": [[2, "arkouda.accessor.StringAccessor", false]], "strings (class in arkouda)": [[26, "arkouda.Strings", false], [26, "id493", false], [26, "id569", false], [26, "id645", false], [26, "id721", false]], "strings (class in arkouda.strings)": [[55, "arkouda.strings.Strings", false]], "strip() (arkouda.strings method)": [[26, "arkouda.Strings.strip", false], [26, "id555", false], [26, "id631", false], [26, "id707", false], [26, "id783", false]], "strip() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.strip", false]], "sub() (arkouda.matcher.matcher method)": [[34, "arkouda.matcher.Matcher.sub", false]], "sub() (arkouda.strings method)": [[26, "arkouda.Strings.sub", false], [26, "id556", false], [26, "id632", false], [26, "id708", false], [26, "id784", false], [103, "arkouda.Strings.sub", false]], "sub() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.sub", false]], "subn() (arkouda.strings method)": [[26, "arkouda.Strings.subn", false], [26, "id557", false], [26, "id633", false], [26, "id709", false], [26, "id785", false], [103, "arkouda.Strings.subn", false]], "subn() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.subn", false]], "subtract() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.subtract", false]], "sum() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.sum", false]], "sum() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.sum", false]], "sum() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.sum", false]], "sum() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.sum", false]], "sum() (arkouda.datetime method)": [[26, "arkouda.Datetime.sum", false], [26, "id197", false], [26, "id230", false]], "sum() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.sum", false]], "sum() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.sum", false]], "sum() (arkouda.groupby method)": [[26, "arkouda.GroupBy.sum", false], [26, "id284", false], [26, "id331", false], [26, "id378", false], [26, "id425", false], [26, "id472", false], [94, "arkouda.GroupBy.sum", false]], "sum() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.sum", false]], "sum() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.sum", false]], "sum() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.sum", false]], "sum() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.sum", false]], "sum() (arkouda.pdarray method)": [[26, "arkouda.pdarray.sum", false], [26, "id1049", false], [26, "id1120", false], [26, "id1191", false], [26, "id1262", false], [26, "id978", false], [95, "arkouda.pdarray.sum", false]], "sum() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.sum", false]], "sum() (arkouda.segarray method)": [[26, "arkouda.SegArray.sum", false]], "sum() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.sum", false]], "sum() (arkouda.series method)": [[26, "arkouda.Series.sum", false]], "sum() (arkouda.series.series method)": [[51, "arkouda.series.Series.sum", false]], "sum() (arkouda.str_ method)": [[26, "arkouda.str_.sum", false], [26, "id1345", false]], "sum() (arkouda.timeclass.datetime method)": [[57, "arkouda.timeclass.Datetime.sum", false]], "sum() (arkouda.timeclass.timedelta method)": [[57, "arkouda.timeclass.Timedelta.sum", false]], "sum() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.sum", false], [26, "id808", false]], "sum() (in module arkouda)": [[90, "arkouda.sum", false]], "sum() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.sum", false]], "supported_opeq (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_opeq", false], [26, "id198", false], [26, "id231", false]], "supported_opeq (arkouda.timeclass.datetime attribute)": [[57, "arkouda.timeclass.Datetime.supported_opeq", false]], "supported_opeq (arkouda.timeclass.timedelta attribute)": [[57, "arkouda.timeclass.Timedelta.supported_opeq", false]], "supported_opeq (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_opeq", false], [26, "id809", false]], "supported_with_datetime (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_with_datetime", false], [26, "id199", false], [26, "id232", false]], "supported_with_datetime (arkouda.timeclass.datetime attribute)": [[57, "arkouda.timeclass.Datetime.supported_with_datetime", false]], "supported_with_datetime (arkouda.timeclass.timedelta attribute)": [[57, "arkouda.timeclass.Timedelta.supported_with_datetime", false]], "supported_with_datetime (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_with_datetime", false], [26, "id810", false]], "supported_with_pdarray (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_with_pdarray", false], [26, "id200", false], [26, "id233", false]], "supported_with_pdarray (arkouda.timeclass.datetime attribute)": [[57, "arkouda.timeclass.Datetime.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.timeclass.timedelta attribute)": [[57, "arkouda.timeclass.Timedelta.supported_with_pdarray", false]], "supported_with_pdarray (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_with_pdarray", false], [26, "id811", false]], "supported_with_r_datetime (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_with_r_datetime", false], [26, "id201", false], [26, "id234", false]], "supported_with_r_datetime (arkouda.timeclass.datetime attribute)": [[57, "arkouda.timeclass.Datetime.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.timeclass.timedelta attribute)": [[57, "arkouda.timeclass.Timedelta.supported_with_r_datetime", false]], "supported_with_r_datetime (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_with_r_datetime", false], [26, "id812", false]], "supported_with_r_pdarray (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_with_r_pdarray", false], [26, "id202", false], [26, "id235", false]], "supported_with_r_pdarray (arkouda.timeclass.datetime attribute)": [[57, "arkouda.timeclass.Datetime.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.timeclass.timedelta attribute)": [[57, "arkouda.timeclass.Timedelta.supported_with_r_pdarray", false]], "supported_with_r_pdarray (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_with_r_pdarray", false], [26, "id813", false]], "supported_with_r_timedelta (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_with_r_timedelta", false], [26, "id203", false], [26, "id236", false]], "supported_with_r_timedelta (arkouda.timeclass.datetime attribute)": [[57, "arkouda.timeclass.Datetime.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.timeclass.timedelta attribute)": [[57, "arkouda.timeclass.Timedelta.supported_with_r_timedelta", false]], "supported_with_r_timedelta (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_with_r_timedelta", false], [26, "id814", false]], "supported_with_timedelta (arkouda.datetime attribute)": [[26, "arkouda.Datetime.supported_with_timedelta", false], [26, "id204", false], [26, "id237", false]], "supported_with_timedelta (arkouda.timeclass.datetime attribute)": [[57, "arkouda.timeclass.Datetime.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.timeclass.timedelta attribute)": [[57, "arkouda.timeclass.Timedelta.supported_with_timedelta", false]], "supported_with_timedelta (arkouda.timedelta attribute)": [[26, "arkouda.Timedelta.supported_with_timedelta", false], [26, "id815", false]], "swapaxes() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.swapaxes", false]], "swapaxes() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.swapaxes", false]], "swapaxes() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.swapaxes", false]], "swapaxes() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.swapaxes", false]], "swapaxes() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.swapaxes", false]], "swapaxes() (arkouda.str_ method)": [[26, "arkouda.str_.swapaxes", false], [26, "id1346", false]], "symmetric_difference() (arkouda.arkouda_supported_dtypes method)": [[26, "arkouda.ARKOUDA_SUPPORTED_DTYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypeobjects method)": [[26, "arkouda.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes method)": [[26, "arkouda.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.arkouda_supported_dtypes method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.dtypeobjects method)": [[23, "arkouda.dtypes.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.dtypes method)": [[23, "arkouda.dtypes.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.inttypes method)": [[23, "arkouda.dtypes.intTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.numericdtypes method)": [[23, "arkouda.dtypes.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.dtypes.scalardtypes method)": [[23, "arkouda.dtypes.ScalarDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.inttypes method)": [[26, "arkouda.intTypes.symmetric_difference", false], [26, "id893", false], [26, "id902", false]], "symmetric_difference() (arkouda.numericdtypes method)": [[26, "arkouda.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.arkouda_supported_dtypes method)": [[37, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypeobjects method)": [[37, "arkouda.numpy.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes method)": [[37, "arkouda.numpy.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.inttypes method)": [[37, "arkouda.numpy.intTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.numericdtypes method)": [[37, "arkouda.numpy.NumericDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.numpy.scalardtypes method)": [[37, "arkouda.numpy.ScalarDTypes.symmetric_difference", false]], "symmetric_difference() (arkouda.scalardtypes method)": [[26, "arkouda.ScalarDTypes.symmetric_difference", false]], "t (arkouda.array_api.array property)": [[9, "arkouda.array_api.Array.T", false]], "t (arkouda.array_api.array_object.array property)": [[5, "arkouda.array_api.array_object.Array.T", false]], "t() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.T", false]], "t() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.T", false]], "t() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.T", false]], "t() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.T", false]], "t() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.T", false]], "t() (arkouda.str_ method)": [[26, "arkouda.str_.T", false], [26, "id1289", false]], "tail() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.tail", false], [26, "id167", false]], "tail() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.tail", false]], "tail() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.tail", false]], "tail() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.tail", false]], "tail() (arkouda.groupby method)": [[26, "arkouda.GroupBy.tail", false], [26, "id285", false], [26, "id332", false], [26, "id379", false], [26, "id426", false], [26, "id473", false], [94, "arkouda.GroupBy.tail", false]], "tail() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.tail", false]], "tail() (arkouda.series method)": [[26, "arkouda.Series.tail", false]], "tail() (arkouda.series.series method)": [[51, "arkouda.series.Series.tail", false]], "tail() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.tail", false]], "tail() (in module arkouda.series)": [[100, "arkouda.Series.tail", false]], "take() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.take", false]], "take() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.take", false]], "take() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.take", false]], "take() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.take", false]], "take() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.take", false]], "take() (arkouda.str_ method)": [[26, "arkouda.str_.take", false], [26, "id1347", false]], "take() (in module arkouda.array_api.indexing_functions)": [[10, "arkouda.array_api.indexing_functions.take", false]], "tan() (in module arkouda)": [[26, "arkouda.tan", false]], "tan() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.tan", false]], "tan() (in module arkouda.numpy)": [[37, "arkouda.numpy.tan", false]], "tanh() (in module arkouda)": [[26, "arkouda.tanh", false]], "tanh() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.tanh", false]], "tanh() (in module arkouda.numpy)": [[37, "arkouda.numpy.tanh", false]], "tensordot() (in module arkouda.array_api.linalg)": [[11, "arkouda.array_api.linalg.tensordot", false]], "tile() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.tile", false]], "timedelta (class in arkouda)": [[26, "arkouda.Timedelta", false], [26, "id797", false]], "timedelta (class in arkouda.timeclass)": [[57, "arkouda.timeclass.Timedelta", false]], "timedelta64 (class in arkouda)": [[26, "arkouda.timedelta64", false]], "timedelta64 (class in arkouda.numpy)": [[37, "arkouda.numpy.timedelta64", false]], "timedelta64dtype (class in arkouda)": [[26, "arkouda.TimeDelta64DType", false]], "timedelta64dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.TimeDelta64DType", false]], "timedelta_range() (in module arkouda)": [[26, "arkouda.timedelta_range", false], [26, "id1356", false]], "timedelta_range() (in module arkouda.timeclass)": [[57, "arkouda.timeclass.timedelta_range", false]], "tiny (arkouda.finfo attribute)": [[26, "arkouda.finfo.tiny", false]], "tiny (arkouda.finfo property)": [[26, "id875", false]], "tiny (arkouda.numpy.finfo attribute)": [[37, "arkouda.numpy.finfo.tiny", false]], "tiny (arkouda.numpy.finfo property)": [[37, "id11", false]], "title() (arkouda.strings method)": [[26, "arkouda.Strings.title", false], [26, "id558", false], [26, "id634", false], [26, "id710", false], [26, "id786", false]], "title() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.title", false]], "to_csv() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.to_csv", false], [26, "id168", false]], "to_csv() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_csv", false]], "to_csv() (arkouda.index method)": [[26, "arkouda.Index.to_csv", false]], "to_csv() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_csv", false]], "to_csv() (arkouda.pdarray method)": [[26, "arkouda.pdarray.to_csv", false], [26, "id1050", false], [26, "id1121", false], [26, "id1192", false], [26, "id1263", false], [26, "id979", false]], "to_csv() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.to_csv", false]], "to_csv() (arkouda.strings method)": [[26, "arkouda.Strings.to_csv", false], [26, "id559", false], [26, "id635", false], [26, "id711", false], [26, "id787", false]], "to_csv() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.to_csv", false]], "to_csv() (in module arkouda)": [[26, "arkouda.to_csv", false]], "to_csv() (in module arkouda.io)": [[29, "arkouda.io.to_csv", false]], "to_cuda() (arkouda.pdarray method)": [[26, "arkouda.pdarray.to_cuda", false], [26, "id1053", false], [26, "id1124", false], [26, "id1195", false], [26, "id1266", false], [26, "id982", false]], "to_cuda() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.to_cuda", false]], "to_dataframe() (arkouda.series method)": [[26, "arkouda.Series.to_dataframe", false]], "to_dataframe() (arkouda.series.series method)": [[51, "arkouda.series.Series.to_dataframe", false]], "to_device() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.to_device", false]], "to_device() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.to_device", false]], "to_dict() (arkouda.index method)": [[26, "arkouda.Index.to_dict", false]], "to_dict() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_dict", false]], "to_dict() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.to_dict", false]], "to_dict() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.to_dict", false]], "to_hdf() (arkouda.categorical method)": [[26, "arkouda.Categorical.to_hdf", false], [26, "id111", false], [26, "id53", false]], "to_hdf() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_hdf", false]], "to_hdf() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.to_hdf", false]], "to_hdf() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.to_hdf", false], [26, "id169", false]], "to_hdf() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_hdf", false]], "to_hdf() (arkouda.groupby method)": [[26, "arkouda.GroupBy.to_hdf", false], [26, "id286", false], [26, "id333", false], [26, "id380", false], [26, "id427", false], [26, "id474", false], [94, "arkouda.GroupBy.to_hdf", false]], "to_hdf() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.to_hdf", false]], "to_hdf() (arkouda.index method)": [[26, "arkouda.Index.to_hdf", false]], "to_hdf() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_hdf", false]], "to_hdf() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.to_hdf", false]], "to_hdf() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.to_hdf", false]], "to_hdf() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.to_hdf", false]], "to_hdf() (arkouda.pdarray method)": [[26, "arkouda.pdarray.to_hdf", false], [26, "id1054", false], [26, "id1125", false], [26, "id1196", false], [26, "id1267", false], [26, "id983", false]], "to_hdf() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.to_hdf", false]], "to_hdf() (arkouda.segarray method)": [[26, "arkouda.SegArray.to_hdf", false]], "to_hdf() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.to_hdf", false]], "to_hdf() (arkouda.strings method)": [[26, "arkouda.Strings.to_hdf", false], [26, "id560", false], [26, "id636", false], [26, "id712", false], [26, "id788", false]], "to_hdf() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.to_hdf", false]], "to_hdf() (in module arkouda)": [[26, "arkouda.to_hdf", false]], "to_hdf() (in module arkouda.io)": [[29, "arkouda.io.to_hdf", false]], "to_list() (arkouda.bitvector method)": [[26, "arkouda.BitVector.to_list", false]], "to_list() (arkouda.categorical method)": [[26, "arkouda.Categorical.to_list", false], [26, "id112", false], [26, "id54", false]], "to_list() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_list", false]], "to_list() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.to_list", false]], "to_list() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.to_list", false]], "to_list() (arkouda.index method)": [[26, "arkouda.Index.to_list", false]], "to_list() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_list", false]], "to_list() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.to_list", false]], "to_list() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.to_list", false]], "to_list() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.to_list", false]], "to_list() (arkouda.pdarray method)": [[26, "arkouda.pdarray.to_list", false], [26, "id1055", false], [26, "id1126", false], [26, "id1197", false], [26, "id1268", false], [26, "id984", false]], "to_list() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.to_list", false]], "to_list() (arkouda.segarray method)": [[26, "arkouda.SegArray.to_list", false]], "to_list() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.to_list", false]], "to_list() (arkouda.series method)": [[26, "arkouda.Series.to_list", false]], "to_list() (arkouda.series.series method)": [[51, "arkouda.series.Series.to_list", false]], "to_list() (arkouda.strings method)": [[26, "arkouda.Strings.to_list", false], [26, "id561", false], [26, "id637", false], [26, "id713", false], [26, "id789", false]], "to_list() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.to_list", false]], "to_markdown() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.to_markdown", false], [26, "id170", false]], "to_markdown() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_markdown", false]], "to_markdown() (arkouda.series method)": [[26, "arkouda.Series.to_markdown", false]], "to_markdown() (arkouda.series.series method)": [[51, "arkouda.series.Series.to_markdown", false]], "to_ndarray() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.to_ndarray", false]], "to_ndarray() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.to_ndarray", false]], "to_ndarray() (arkouda.bitvector method)": [[26, "arkouda.BitVector.to_ndarray", false]], "to_ndarray() (arkouda.categorical method)": [[26, "arkouda.Categorical.to_ndarray", false], [26, "id113", false], [26, "id55", false]], "to_ndarray() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_ndarray", false]], "to_ndarray() (arkouda.client_dtypes.bitvector method)": [[20, "arkouda.client_dtypes.BitVector.to_ndarray", false]], "to_ndarray() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.to_ndarray", false]], "to_ndarray() (arkouda.index method)": [[26, "arkouda.Index.to_ndarray", false]], "to_ndarray() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_ndarray", false]], "to_ndarray() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.to_ndarray", false]], "to_ndarray() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.to_ndarray", false]], "to_ndarray() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.to_ndarray", false]], "to_ndarray() (arkouda.pdarray method)": [[26, "arkouda.pdarray.to_ndarray", false], [26, "id1056", false], [26, "id1127", false], [26, "id1198", false], [26, "id1269", false], [26, "id985", false]], "to_ndarray() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.to_ndarray", false]], "to_ndarray() (arkouda.segarray method)": [[26, "arkouda.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.to_ndarray", false]], "to_ndarray() (arkouda.series method)": [[26, "arkouda.Series.to_ndarray", false]], "to_ndarray() (arkouda.series.series method)": [[51, "arkouda.series.Series.to_ndarray", false]], "to_ndarray() (arkouda.strings method)": [[26, "arkouda.Strings.to_ndarray", false], [26, "id562", false], [26, "id638", false], [26, "id714", false], [26, "id790", false]], "to_ndarray() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.to_ndarray", false]], "to_ndarray() (in module arkouda.categorical)": [[91, "arkouda.Categorical.to_ndarray", false]], "to_ndarray() (in module arkouda.pdarray)": [[87, "arkouda.pdarray.to_ndarray", false], [97, "arkouda.pdarray.to_ndarray", false]], "to_ndarray() (in module arkouda.segarray)": [[99, "arkouda.SegArray.to_ndarray", false]], "to_ndarray() (in module arkouda.strings)": [[87, "arkouda.Strings.to_ndarray", false], [103, "arkouda.Strings.to_ndarray", false]], "to_pandas() (arkouda.categorical method)": [[26, "arkouda.Categorical.to_pandas", false], [26, "id114", false], [26, "id56", false]], "to_pandas() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_pandas", false]], "to_pandas() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.to_pandas", false], [26, "id171", false]], "to_pandas() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_pandas", false]], "to_pandas() (arkouda.datetime method)": [[26, "arkouda.Datetime.to_pandas", false], [26, "id205", false], [26, "id238", false]], "to_pandas() (arkouda.index method)": [[26, "arkouda.Index.to_pandas", false]], "to_pandas() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_pandas", false]], "to_pandas() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.to_pandas", false]], "to_pandas() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.to_pandas", false]], "to_pandas() (arkouda.series method)": [[26, "arkouda.Series.to_pandas", false]], "to_pandas() (arkouda.series.series method)": [[51, "arkouda.series.Series.to_pandas", false]], "to_pandas() (arkouda.timeclass.datetime method)": [[57, "arkouda.timeclass.Datetime.to_pandas", false]], "to_pandas() (arkouda.timeclass.timedelta method)": [[57, "arkouda.timeclass.Timedelta.to_pandas", false]], "to_pandas() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.to_pandas", false], [26, "id816", false]], "to_pandas() (in module arkouda.dataframe)": [[93, "arkouda.DataFrame.to_pandas", false]], "to_pandas() (in module arkouda.series)": [[100, "arkouda.Series.to_pandas", false]], "to_parquet() (arkouda.categorical method)": [[26, "arkouda.Categorical.to_parquet", false], [26, "id115", false], [26, "id57", false]], "to_parquet() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_parquet", false]], "to_parquet() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.to_parquet", false], [26, "id172", false]], "to_parquet() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.to_parquet", false]], "to_parquet() (arkouda.index method)": [[26, "arkouda.Index.to_parquet", false]], "to_parquet() (arkouda.index.index method)": [[27, "arkouda.index.Index.to_parquet", false]], "to_parquet() (arkouda.pdarray method)": [[26, "arkouda.pdarray.to_parquet", false], [26, "id1057", false], [26, "id1128", false], [26, "id1199", false], [26, "id1270", false], [26, "id986", false]], "to_parquet() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.to_parquet", false]], "to_parquet() (arkouda.segarray method)": [[26, "arkouda.SegArray.to_parquet", false]], "to_parquet() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.to_parquet", false]], "to_parquet() (arkouda.strings method)": [[26, "arkouda.Strings.to_parquet", false], [26, "id563", false], [26, "id639", false], [26, "id715", false], [26, "id791", false]], "to_parquet() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.to_parquet", false]], "to_parquet() (in module arkouda)": [[26, "arkouda.to_parquet", false]], "to_parquet() (in module arkouda.io)": [[29, "arkouda.io.to_parquet", false]], "to_pdarray() (arkouda.sparray method)": [[26, "arkouda.sparray.to_pdarray", false]], "to_pdarray() (arkouda.sparrayclass.sparray method)": [[53, "arkouda.sparrayclass.sparray.to_pdarray", false]], "to_strings() (arkouda.categorical method)": [[26, "arkouda.Categorical.to_strings", false], [26, "id116", false], [26, "id58", false]], "to_strings() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.to_strings", false]], "to_zarr() (in module arkouda)": [[26, "arkouda.to_zarr", false]], "to_zarr() (in module arkouda.io)": [[29, "arkouda.io.to_zarr", false]], "tobytes() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.tobytes", false]], "tobytes() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.tobytes", false]], "tobytes() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.tobytes", false]], "tobytes() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.tobytes", false]], "tobytes() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.tobytes", false]], "tobytes() (arkouda.str_ method)": [[26, "arkouda.str_.tobytes", false], [26, "id1348", false]], "tofile() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.tofile", false]], "tofile() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.tofile", false]], "tofile() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.tofile", false]], "tofile() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.tofile", false]], "tofile() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.tofile", false]], "tofile() (arkouda.str_ method)": [[26, "arkouda.str_.tofile", false], [26, "id1349", false]], "tolist() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.tolist", false]], "tolist() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.tolist", false]], "tolist() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.tolist", false]], "tolist() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.tolist", false]], "tolist() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.tolist", false]], "tolist() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.tolist", false]], "tolist() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.tolist", false]], "tolist() (arkouda.str_ method)": [[26, "arkouda.str_.tolist", false], [26, "id1350", false]], "tooharderror (class in arkouda)": [[26, "arkouda.TooHardError", false]], "tooharderror (class in arkouda.numpy)": [[37, "arkouda.numpy.TooHardError", false]], "topn() (arkouda.series method)": [[26, "arkouda.Series.topn", false]], "topn() (arkouda.series.series method)": [[51, "arkouda.series.Series.topn", false]], "topn() (in module arkouda.series)": [[100, "arkouda.Series.topn", false]], "tostring() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.tostring", false]], "tostring() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.tostring", false]], "tostring() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.tostring", false]], "tostring() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.tostring", false]], "tostring() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.tostring", false]], "tostring() (arkouda.str_ method)": [[26, "arkouda.str_.tostring", false], [26, "id1351", false]], "total_seconds() (arkouda.timeclass.timedelta method)": [[57, "arkouda.timeclass.Timedelta.total_seconds", false]], "total_seconds() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.total_seconds", false], [26, "id817", false]], "trace() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.trace", false]], "trace() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.trace", false]], "trace() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.trace", false]], "trace() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.trace", false]], "trace() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.trace", false]], "trace() (arkouda.str_ method)": [[26, "arkouda.str_.trace", false], [26, "id1352", false]], "transfer() (arkouda.categorical method)": [[26, "arkouda.Categorical.transfer", false], [26, "id117", false], [26, "id59", false]], "transfer() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.transfer", false]], "transfer() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.transfer", false], [26, "id173", false]], "transfer() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.transfer", false]], "transfer() (arkouda.pdarray method)": [[26, "arkouda.pdarray.transfer", false], [26, "id1058", false], [26, "id1129", false], [26, "id1200", false], [26, "id1271", false], [26, "id987", false]], "transfer() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.transfer", false]], "transfer() (arkouda.segarray method)": [[26, "arkouda.SegArray.transfer", false]], "transfer() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.transfer", false]], "transfer() (arkouda.strings method)": [[26, "arkouda.Strings.transfer", false], [26, "id564", false], [26, "id640", false], [26, "id716", false], [26, "id792", false]], "transfer() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.transfer", false]], "transpose() (arkouda.array_api.array method)": [[9, "arkouda.array_api.Array.transpose", false]], "transpose() (arkouda.array_api.array_object.array method)": [[5, "arkouda.array_api.array_object.Array.transpose", false]], "transpose() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.transpose", false]], "transpose() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.transpose", false]], "transpose() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.transpose", false]], "transpose() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.transpose", false]], "transpose() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.transpose", false]], "transpose() (arkouda.str_ method)": [[26, "arkouda.str_.transpose", false], [26, "id1353", false]], "transpose() (in module arkouda)": [[26, "arkouda.transpose", false]], "transpose() (in module arkouda.numpy)": [[37, "arkouda.numpy.transpose", false]], "tril() (in module arkouda)": [[26, "arkouda.tril", false]], "tril() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.tril", false]], "tril() (in module arkouda.numpy)": [[37, "arkouda.numpy.tril", false]], "triu() (in module arkouda)": [[26, "arkouda.triu", false]], "triu() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.triu", false]], "triu() (in module arkouda.numpy)": [[37, "arkouda.numpy.triu", false]], "true_ (class in arkouda)": [[26, "arkouda.True_", false]], "true_ (class in arkouda.numpy)": [[37, "arkouda.numpy.True_", false]], "trunc() (in module arkouda)": [[26, "arkouda.trunc", false]], "trunc() (in module arkouda.array_api.elementwise_functions)": [[8, "arkouda.array_api.elementwise_functions.trunc", false]], "trunc() (in module arkouda.numpy)": [[37, "arkouda.numpy.trunc", false]], "type() (arkouda.bigint method)": [[26, "arkouda.bigint.type", false], [26, "id849", false]], "type() (arkouda.dtypes.bigint method)": [[23, "arkouda.dtypes.bigint.type", false]], "type() (arkouda.numpy.bigint method)": [[37, "arkouda.numpy.bigint.type", false]], "type() (arkouda.numpy.dtypes.bigint method)": [[36, "arkouda.numpy.dtypes.bigint.type", false]], "typename() (in module arkouda)": [[26, "arkouda.typename", false]], "typename() (in module arkouda.numpy)": [[37, "arkouda.numpy.typename", false]], "ubyte (class in arkouda)": [[26, "arkouda.ubyte", false]], "ubyte (class in arkouda.numpy)": [[37, "arkouda.numpy.ubyte", false]], "ubytedtype (class in arkouda)": [[26, "arkouda.UByteDType", false]], "ubytedtype (class in arkouda.numpy)": [[37, "arkouda.numpy.UByteDType", false]], "uint (class in arkouda)": [[26, "arkouda.uint", false]], "uint (class in arkouda.numpy)": [[37, "arkouda.numpy.uint", false]], "uint() (arkouda.dtype method)": [[26, "arkouda.DType.UINT", false]], "uint() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.UINT", false]], "uint() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.UINT", false]], "uint() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.UINT", false]], "uint16 (class in arkouda)": [[26, "arkouda.uint16", false]], "uint16 (class in arkouda.dtypes)": [[23, "arkouda.dtypes.uint16", false]], "uint16 (class in arkouda.numpy)": [[37, "arkouda.numpy.uint16", false]], "uint16 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.uint16", false]], "uint16() (arkouda.dtype method)": [[26, "arkouda.DType.UINT16", false]], "uint16() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.UINT16", false]], "uint16() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.UINT16", false]], "uint16() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.UINT16", false]], "uint16dtype (class in arkouda)": [[26, "arkouda.UInt16DType", false]], "uint16dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.UInt16DType", false]], "uint32 (class in arkouda)": [[26, "arkouda.uint32", false]], "uint32 (class in arkouda.dtypes)": [[23, "arkouda.dtypes.uint32", false]], "uint32 (class in arkouda.numpy)": [[37, "arkouda.numpy.uint32", false]], "uint32 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.uint32", false]], "uint32() (arkouda.dtype method)": [[26, "arkouda.DType.UINT32", false]], "uint32() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.UINT32", false]], "uint32() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.UINT32", false]], "uint32() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.UINT32", false]], "uint32dtype (class in arkouda)": [[26, "arkouda.UInt32DType", false]], "uint32dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.UInt32DType", false]], "uint64 (class in arkouda)": [[26, "arkouda.uint64", false]], "uint64 (class in arkouda.dtypes)": [[23, "arkouda.dtypes.uint64", false]], "uint64 (class in arkouda.numpy)": [[37, "arkouda.numpy.uint64", false]], "uint64 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.uint64", false]], "uint64() (arkouda.dtype method)": [[26, "arkouda.DType.UINT64", false]], "uint64() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.UINT64", false]], "uint64() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.UINT64", false]], "uint64() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.UINT64", false]], "uint64dtype (class in arkouda)": [[26, "arkouda.UInt64DType", false]], "uint64dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.UInt64DType", false]], "uint8 (class in arkouda)": [[26, "arkouda.uint8", false]], "uint8 (class in arkouda.dtypes)": [[23, "arkouda.dtypes.uint8", false]], "uint8 (class in arkouda.numpy)": [[37, "arkouda.numpy.uint8", false]], "uint8 (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.uint8", false]], "uint8() (arkouda.dtype method)": [[26, "arkouda.DType.UINT8", false]], "uint8() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.UINT8", false]], "uint8() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.UINT8", false]], "uint8() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.UINT8", false]], "uint8dtype (class in arkouda)": [[26, "arkouda.UInt8DType", false]], "uint8dtype (class in arkouda.numpy)": [[37, "arkouda.numpy.UInt8DType", false]], "uintc (class in arkouda)": [[26, "arkouda.uintc", false]], "uintc (class in arkouda.numpy)": [[37, "arkouda.numpy.uintc", false]], "uintdtype (class in arkouda)": [[26, "arkouda.UIntDType", false]], "uintdtype (class in arkouda.numpy)": [[37, "arkouda.numpy.UIntDType", false]], "uintp (class in arkouda)": [[26, "arkouda.uintp", false]], "uintp (class in arkouda.numpy)": [[37, "arkouda.numpy.uintp", false]], "ulongdtype (class in arkouda)": [[26, "arkouda.ULongDType", false]], "ulongdtype (class in arkouda.numpy)": [[37, "arkouda.numpy.ULongDType", false]], "ulonglong (class in arkouda)": [[26, "arkouda.ulonglong", false]], "ulonglong (class in arkouda.numpy)": [[37, "arkouda.numpy.ulonglong", false]], "ulonglongdtype (class in arkouda)": [[26, "arkouda.ULongLongDType", false]], "ulonglongdtype (class in arkouda.numpy)": [[37, "arkouda.numpy.ULongLongDType", false]], "uniform() (arkouda.numpy.random.generator method)": [[38, "arkouda.numpy.random.Generator.uniform", false]], "uniform() (arkouda.random.generator method)": [[44, "arkouda.random.Generator.uniform", false]], "uniform() (in module arkouda)": [[26, "arkouda.uniform", false]], "uniform() (in module arkouda.numpy.random)": [[38, "arkouda.numpy.random.uniform", false]], "uniform() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.uniform", false]], "uniform() (in module arkouda.random)": [[44, "arkouda.random.uniform", false]], "uniform() (in module arkouda.random.generator)": [[98, "arkouda.random.Generator.uniform", false]], "union (class in arkouda.dtypes)": [[23, "arkouda.dtypes.Union", false]], "union (class in arkouda.numpy.dtypes)": [[36, "arkouda.numpy.dtypes.Union", false]], "union() (arkouda.arkouda_supported_dtypes method)": [[26, "arkouda.ARKOUDA_SUPPORTED_DTYPES.union", false]], "union() (arkouda.dtypeobjects method)": [[26, "arkouda.DTypeObjects.union", false]], "union() (arkouda.dtypes method)": [[26, "arkouda.DTypes.union", false]], "union() (arkouda.dtypes.arkouda_supported_dtypes method)": [[23, "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES.union", false]], "union() (arkouda.dtypes.dtypeobjects method)": [[23, "arkouda.dtypes.DTypeObjects.union", false]], "union() (arkouda.dtypes.dtypes method)": [[23, "arkouda.dtypes.DTypes.union", false]], "union() (arkouda.dtypes.inttypes method)": [[23, "arkouda.dtypes.intTypes.union", false]], "union() (arkouda.dtypes.numericdtypes method)": [[23, "arkouda.dtypes.NumericDTypes.union", false]], "union() (arkouda.dtypes.scalardtypes method)": [[23, "arkouda.dtypes.ScalarDTypes.union", false]], "union() (arkouda.groupby_reduction_types method)": [[26, "arkouda.GROUPBY_REDUCTION_TYPES.union", false]], "union() (arkouda.groupbyclass.groupby_reduction_types method)": [[24, "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES.union", false]], "union() (arkouda.inttypes method)": [[26, "arkouda.intTypes.union", false], [26, "id894", false], [26, "id903", false]], "union() (arkouda.numericdtypes method)": [[26, "arkouda.NumericDTypes.union", false]], "union() (arkouda.numpy.arkouda_supported_dtypes method)": [[37, "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES.union", false]], "union() (arkouda.numpy.dtypeobjects method)": [[37, "arkouda.numpy.DTypeObjects.union", false]], "union() (arkouda.numpy.dtypes method)": [[37, "arkouda.numpy.DTypes.union", false]], "union() (arkouda.numpy.dtypes.arkouda_supported_dtypes method)": [[36, "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES.union", false]], "union() (arkouda.numpy.dtypes.dtypeobjects method)": [[36, "arkouda.numpy.dtypes.DTypeObjects.union", false]], "union() (arkouda.numpy.dtypes.dtypes method)": [[36, "arkouda.numpy.dtypes.DTypes.union", false]], "union() (arkouda.numpy.dtypes.inttypes method)": [[36, "arkouda.numpy.dtypes.intTypes.union", false]], "union() (arkouda.numpy.dtypes.numericdtypes method)": [[36, "arkouda.numpy.dtypes.NumericDTypes.union", false]], "union() (arkouda.numpy.dtypes.scalardtypes method)": [[36, "arkouda.numpy.dtypes.ScalarDTypes.union", false]], "union() (arkouda.numpy.inttypes method)": [[37, "arkouda.numpy.intTypes.union", false]], "union() (arkouda.numpy.numericdtypes method)": [[37, "arkouda.numpy.NumericDTypes.union", false]], "union() (arkouda.numpy.scalardtypes method)": [[37, "arkouda.numpy.ScalarDTypes.union", false]], "union() (arkouda.scalardtypes method)": [[26, "arkouda.ScalarDTypes.union", false]], "union() (arkouda.segarray method)": [[26, "arkouda.SegArray.union", false]], "union() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.union", false]], "union() (in module arkouda.segarray)": [[99, "arkouda.SegArray.union", false]], "union1d() (in module arkouda)": [[26, "arkouda.union1d", false], [101, "arkouda.union1d", false]], "union1d() (in module arkouda.pdarraysetops)": [[42, "arkouda.pdarraysetops.union1d", false]], "unique() (arkouda.categorical method)": [[26, "arkouda.Categorical.unique", false], [26, "id118", false], [26, "id60", false]], "unique() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.unique", false]], "unique() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.unique", false]], "unique() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.unique", false]], "unique() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.unique", false]], "unique() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.unique", false]], "unique() (arkouda.groupby method)": [[26, "arkouda.GroupBy.unique", false], [26, "id287", false], [26, "id334", false], [26, "id381", false], [26, "id428", false], [26, "id475", false], [94, "arkouda.GroupBy.unique", false]], "unique() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.unique", false]], "unique() (arkouda.segarray method)": [[26, "arkouda.SegArray.unique", false]], "unique() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.unique", false]], "unique() (in module arkouda)": [[26, "arkouda.unique", false], [26, "id1357", false], [26, "id1358", false], [101, "arkouda.unique", false]], "unique() (in module arkouda.groupbyclass)": [[24, "arkouda.groupbyclass.unique", false]], "unique_all() (in module arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.unique_all", false]], "unique_counts() (in module arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.unique_counts", false]], "unique_inverse() (in module arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.unique_inverse", false]], "unique_keys (arkouda.groupby attribute)": [[26, "arkouda.GroupBy.unique_keys", false], [26, "id249", false], [26, "id296", false], [26, "id343", false], [26, "id390", false], [26, "id437", false], [94, "arkouda.GroupBy.unique_keys", false]], "unique_keys (arkouda.groupbyclass.groupby attribute)": [[24, "arkouda.groupbyclass.GroupBy.unique_keys", false]], "unique_values() (in module arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.unique_values", false]], "uniqueallresult (class in arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.UniqueAllResult", false]], "uniquecountsresult (class in arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.UniqueCountsResult", false]], "uniqueinverseresult (class in arkouda.array_api.set_functions)": [[14, "arkouda.array_api.set_functions.UniqueInverseResult", false]], "unregister() (arkouda.categorical method)": [[26, "arkouda.Categorical.unregister", false], [26, "id119", false], [26, "id61", false]], "unregister() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.unregister", false]], "unregister() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.unregister", false], [26, "id174", false]], "unregister() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.unregister", false]], "unregister() (arkouda.datetime method)": [[26, "arkouda.Datetime.unregister", false], [26, "id206", false], [26, "id239", false]], "unregister() (arkouda.groupby method)": [[26, "arkouda.GroupBy.unregister", false], [26, "id288", false], [26, "id335", false], [26, "id382", false], [26, "id429", false], [26, "id476", false], [94, "arkouda.GroupBy.unregister", false]], "unregister() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.unregister", false]], "unregister() (arkouda.index method)": [[26, "arkouda.Index.unregister", false]], "unregister() (arkouda.index.index method)": [[27, "arkouda.index.Index.unregister", false]], "unregister() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.unregister", false]], "unregister() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.unregister", false]], "unregister() (arkouda.pdarray method)": [[26, "arkouda.pdarray.unregister", false], [26, "id1059", false], [26, "id1130", false], [26, "id1201", false], [26, "id1272", false], [26, "id988", false]], "unregister() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.unregister", false]], "unregister() (arkouda.segarray method)": [[26, "arkouda.SegArray.unregister", false]], "unregister() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.unregister", false]], "unregister() (arkouda.series method)": [[26, "arkouda.Series.unregister", false]], "unregister() (arkouda.series.series method)": [[51, "arkouda.series.Series.unregister", false]], "unregister() (arkouda.strings method)": [[26, "arkouda.Strings.unregister", false], [26, "id565", false], [26, "id641", false], [26, "id717", false], [26, "id793", false]], "unregister() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.unregister", false]], "unregister() (arkouda.timeclass.datetime method)": [[57, "arkouda.timeclass.Datetime.unregister", false]], "unregister() (arkouda.timeclass.timedelta method)": [[57, "arkouda.timeclass.Timedelta.unregister", false]], "unregister() (arkouda.timedelta method)": [[26, "arkouda.Timedelta.unregister", false], [26, "id818", false]], "unregister() (in module arkouda)": [[26, "arkouda.unregister", false]], "unregister() (in module arkouda.util)": [[58, "arkouda.util.unregister", false]], "unregister_all() (in module arkouda)": [[26, "arkouda.unregister_all", false]], "unregister_all() (in module arkouda.util)": [[58, "arkouda.util.unregister_all", false]], "unregister_categorical_by_name() (arkouda.categorical static method)": [[26, "arkouda.Categorical.unregister_categorical_by_name", false], [26, "id120", false], [26, "id62", false]], "unregister_categorical_by_name() (arkouda.categorical.categorical static method)": [[18, "arkouda.categorical.Categorical.unregister_categorical_by_name", false]], "unregister_dataframe_by_name() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.unregister_dataframe_by_name", false], [26, "id175", false]], "unregister_dataframe_by_name() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.unregister_dataframe_by_name", false]], "unregister_groupby_by_name() (arkouda.groupby method)": [[26, "arkouda.GroupBy.unregister_groupby_by_name", false], [26, "id289", false], [26, "id336", false], [26, "id383", false], [26, "id430", false], [26, "id477", false]], "unregister_groupby_by_name() (arkouda.groupby static method)": [[94, "arkouda.GroupBy.unregister_groupby_by_name", false]], "unregister_groupby_by_name() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.unregister_groupby_by_name", false]], "unregister_pdarray_by_name() (in module arkouda)": [[26, "arkouda.unregister_pdarray_by_name", false]], "unregister_pdarray_by_name() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.unregister_pdarray_by_name", false]], "unregister_segarray_by_name() (arkouda.segarray static method)": [[26, "arkouda.SegArray.unregister_segarray_by_name", false]], "unregister_segarray_by_name() (arkouda.segarray.segarray static method)": [[50, "arkouda.segarray.SegArray.unregister_segarray_by_name", false]], "unregister_strings_by_name() (arkouda.strings static method)": [[26, "arkouda.Strings.unregister_strings_by_name", false], [26, "id566", false], [26, "id642", false], [26, "id718", false], [26, "id794", false]], "unregister_strings_by_name() (arkouda.strings.strings static method)": [[55, "arkouda.strings.Strings.unregister_strings_by_name", false]], "unsignedinteger (class in arkouda)": [[26, "arkouda.unsignedinteger", false]], "unsignedinteger (class in arkouda.numpy)": [[37, "arkouda.numpy.unsignedinteger", false]], "unsqueeze() (in module arkouda)": [[26, "arkouda.unsqueeze", false]], "unsqueeze() (in module arkouda.alignment)": [[3, "arkouda.alignment.unsqueeze", false]], "unstack() (in module arkouda.array_api.manipulation_functions)": [[12, "arkouda.array_api.manipulation_functions.unstack", false]], "update() (arkouda.dtypes.number_format_strings method)": [[23, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.dtypes.seriesdtypes method)": [[23, "arkouda.dtypes.SeriesDTypes.update", false]], "update() (arkouda.number_format_strings method)": [[26, "arkouda.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.update", false]], "update() (arkouda.numpy.number_format_strings method)": [[37, "arkouda.numpy.NUMBER_FORMAT_STRINGS.update", false]], "update() (arkouda.numpy.sctypedict method)": [[37, "arkouda.numpy.sctypeDict.update", false]], "update() (arkouda.numpy.sctypes method)": [[37, "arkouda.numpy.sctypes.update", false]], "update() (arkouda.numpy.seriesdtypes method)": [[37, "arkouda.numpy.SeriesDTypes.update", false]], "update() (arkouda.sctypedict method)": [[26, "arkouda.sctypeDict.update", false]], "update() (arkouda.sctypes method)": [[26, "arkouda.sctypes.update", false]], "update() (arkouda.seriesdtypes method)": [[26, "arkouda.SeriesDTypes.update", false]], "update_hdf() (arkouda.categorical method)": [[26, "arkouda.Categorical.update_hdf", false], [26, "id121", false], [26, "id63", false]], "update_hdf() (arkouda.categorical.categorical method)": [[18, "arkouda.categorical.Categorical.update_hdf", false]], "update_hdf() (arkouda.client_dtypes.ipv4 method)": [[20, "arkouda.client_dtypes.IPv4.update_hdf", false]], "update_hdf() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.update_hdf", false], [26, "id176", false]], "update_hdf() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.update_hdf", false]], "update_hdf() (arkouda.groupby method)": [[26, "arkouda.GroupBy.update_hdf", false], [26, "id290", false], [26, "id337", false], [26, "id384", false], [26, "id431", false], [26, "id478", false]], "update_hdf() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.update_hdf", false]], "update_hdf() (arkouda.index method)": [[26, "arkouda.Index.update_hdf", false]], "update_hdf() (arkouda.index.index method)": [[27, "arkouda.index.Index.update_hdf", false]], "update_hdf() (arkouda.index.multiindex method)": [[27, "arkouda.index.MultiIndex.update_hdf", false]], "update_hdf() (arkouda.ipv4 method)": [[26, "arkouda.IPv4.update_hdf", false]], "update_hdf() (arkouda.multiindex method)": [[26, "arkouda.MultiIndex.update_hdf", false]], "update_hdf() (arkouda.pdarray method)": [[26, "arkouda.pdarray.update_hdf", false], [26, "id1060", false], [26, "id1131", false], [26, "id1202", false], [26, "id1273", false], [26, "id989", false]], "update_hdf() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.update_hdf", false]], "update_hdf() (arkouda.segarray method)": [[26, "arkouda.SegArray.update_hdf", false]], "update_hdf() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.update_hdf", false]], "update_hdf() (arkouda.strings method)": [[26, "arkouda.Strings.update_hdf", false], [26, "id567", false], [26, "id643", false], [26, "id719", false], [26, "id795", false]], "update_hdf() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.update_hdf", false]], "update_hdf() (in module arkouda)": [[26, "arkouda.update_hdf", false]], "update_hdf() (in module arkouda.io)": [[29, "arkouda.io.update_hdf", false]], "update_nrows() (arkouda.dataframe method)": [[26, "arkouda.DataFrame.update_nrows", false], [26, "id177", false]], "update_nrows() (arkouda.dataframe.dataframe method)": [[22, "arkouda.dataframe.DataFrame.update_nrows", false]], "upper() (arkouda.strings method)": [[26, "arkouda.Strings.upper", false], [26, "id568", false], [26, "id644", false], [26, "id720", false], [26, "id796", false]], "upper() (arkouda.strings.strings method)": [[55, "arkouda.strings.Strings.upper", false]], "username_tokenizer (in module arkouda.security)": [[49, "arkouda.security.username_tokenizer", false]], "ushort (class in arkouda)": [[26, "arkouda.ushort", false]], "ushort (class in arkouda.numpy)": [[37, "arkouda.numpy.ushort", false]], "ushortdtype (class in arkouda)": [[26, "arkouda.UShortDType", false]], "ushortdtype (class in arkouda.numpy)": [[37, "arkouda.numpy.UShortDType", false]], "val_suffix (in module arkouda)": [[26, "arkouda.VAL_SUFFIX", false]], "val_suffix (in module arkouda.segarray)": [[50, "arkouda.segarray.VAL_SUFFIX", false]], "validate_key() (arkouda.series method)": [[26, "arkouda.Series.validate_key", false]], "validate_key() (arkouda.series.series method)": [[51, "arkouda.series.Series.validate_key", false]], "validate_val() (arkouda.series method)": [[26, "arkouda.Series.validate_val", false]], "validate_val() (arkouda.series.series method)": [[51, "arkouda.series.Series.validate_val", false]], "valsize (arkouda.segarray attribute)": [[26, "arkouda.SegArray.valsize", false]], "valsize (arkouda.segarray.segarray attribute)": [[50, "arkouda.segarray.SegArray.valsize", false]], "value() (arkouda.dtype method)": [[26, "arkouda.DType.value", false]], "value() (arkouda.dtypes.dtype method)": [[23, "arkouda.dtypes.DType.value", false]], "value() (arkouda.errormode method)": [[26, "arkouda.ErrorMode.value", false]], "value() (arkouda.numpy.dtype method)": [[37, "arkouda.numpy.DType.value", false]], "value() (arkouda.numpy.dtypes.dtype method)": [[36, "arkouda.numpy.dtypes.DType.value", false]], "value() (arkouda.numpy.errormode method)": [[37, "arkouda.numpy.ErrorMode.value", false]], "value_counts() (arkouda.pdarray method)": [[26, "arkouda.pdarray.value_counts", false], [26, "id1061", false], [26, "id1132", false], [26, "id1203", false], [26, "id1274", false], [26, "id990", false]], "value_counts() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.value_counts", false]], "value_counts() (arkouda.series method)": [[26, "arkouda.Series.value_counts", false]], "value_counts() (arkouda.series.series method)": [[51, "arkouda.series.Series.value_counts", false]], "value_counts() (in module arkouda)": [[26, "arkouda.value_counts", false], [95, "arkouda.value_counts", false]], "value_counts() (in module arkouda.numpy)": [[37, "arkouda.numpy.value_counts", false]], "value_counts() (in module arkouda.series)": [[100, "arkouda.Series.value_counts", false]], "values (arkouda.array_api.set_functions.uniqueallresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueAllResult.values", false]], "values (arkouda.array_api.set_functions.uniquecountsresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueCountsResult.values", false]], "values (arkouda.array_api.set_functions.uniqueinverseresult attribute)": [[14, "arkouda.array_api.set_functions.UniqueInverseResult.values", false]], "values (arkouda.bitvector attribute)": [[26, "arkouda.BitVector.values", false]], "values (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.values", false]], "values (arkouda.client_dtypes.ipv4 attribute)": [[20, "arkouda.client_dtypes.IPv4.values", false]], "values (arkouda.dataframe.diffaggregate attribute)": [[22, "arkouda.dataframe.DiffAggregate.values", false]], "values (arkouda.diffaggregate attribute)": [[26, "arkouda.DiffAggregate.values", false]], "values (arkouda.ipv4 attribute)": [[26, "arkouda.IPv4.values", false]], "values (arkouda.segarray attribute)": [[26, "arkouda.SegArray.values", false]], "values (arkouda.segarray.segarray attribute)": [[50, "arkouda.segarray.SegArray.values", false]], "values() (arkouda.dtypes.number_format_strings method)": [[23, "arkouda.dtypes.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.dtypes.seriesdtypes method)": [[23, "arkouda.dtypes.SeriesDTypes.values", false]], "values() (arkouda.number_format_strings method)": [[26, "arkouda.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.numpy.dtypes.number_format_strings method)": [[36, "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.numpy.dtypes.seriesdtypes method)": [[36, "arkouda.numpy.dtypes.SeriesDTypes.values", false]], "values() (arkouda.numpy.number_format_strings method)": [[37, "arkouda.numpy.NUMBER_FORMAT_STRINGS.values", false]], "values() (arkouda.numpy.sctypedict method)": [[37, "arkouda.numpy.sctypeDict.values", false]], "values() (arkouda.numpy.sctypes method)": [[37, "arkouda.numpy.sctypes.values", false]], "values() (arkouda.numpy.seriesdtypes method)": [[37, "arkouda.numpy.SeriesDTypes.values", false]], "values() (arkouda.sctypedict method)": [[26, "arkouda.sctypeDict.values", false]], "values() (arkouda.sctypes method)": [[26, "arkouda.sctypes.values", false]], "values() (arkouda.seriesdtypes method)": [[26, "arkouda.SeriesDTypes.values", false]], "var() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.var", false]], "var() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.var", false]], "var() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.var", false]], "var() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.var", false]], "var() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.var", false]], "var() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.var", false]], "var() (arkouda.groupby method)": [[26, "arkouda.GroupBy.var", false], [26, "id291", false], [26, "id338", false], [26, "id385", false], [26, "id432", false], [26, "id479", false], [94, "arkouda.GroupBy.var", false]], "var() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.var", false]], "var() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.var", false]], "var() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.var", false]], "var() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.var", false]], "var() (arkouda.pdarray method)": [[26, "arkouda.pdarray.var", false], [26, "id1062", false], [26, "id1133", false], [26, "id1204", false], [26, "id1275", false], [26, "id991", false], [95, "arkouda.pdarray.var", false]], "var() (arkouda.pdarrayclass.pdarray method)": [[39, "arkouda.pdarrayclass.pdarray.var", false]], "var() (arkouda.series method)": [[26, "arkouda.Series.var", false]], "var() (arkouda.series.series method)": [[51, "arkouda.series.Series.var", false]], "var() (arkouda.str_ method)": [[26, "arkouda.str_.var", false], [26, "id1354", false]], "var() (in module arkouda)": [[26, "arkouda.var", false], [90, "arkouda.var", false]], "var() (in module arkouda.array_api.statistical_functions)": [[16, "arkouda.array_api.statistical_functions.var", false]], "var() (in module arkouda.pdarrayclass)": [[39, "arkouda.pdarrayclass.var", false]], "vecdot() (in module arkouda)": [[26, "arkouda.vecdot", false]], "vecdot() (in module arkouda.array_api.linalg)": [[11, "arkouda.array_api.linalg.vecdot", false]], "vecdot() (in module arkouda.numpy)": [[37, "arkouda.numpy.vecdot", false]], "vecentropy() (arkouda.scipy.stats.chi2 method)": [[48, "arkouda.scipy.stats.chi2.vecentropy", false]], "view() (arkouda.bytes_ method)": [[26, "arkouda.bytes_.view", false]], "view() (arkouda.dtypes.str_ method)": [[23, "arkouda.dtypes.str_.view", false]], "view() (arkouda.numpy.bytes_ method)": [[37, "arkouda.numpy.bytes_.view", false]], "view() (arkouda.numpy.dtypes.str_ method)": [[36, "arkouda.numpy.dtypes.str_.view", false]], "view() (arkouda.numpy.str_ method)": [[37, "arkouda.numpy.str_.view", false]], "view() (arkouda.str_ method)": [[26, "arkouda.str_.view", false], [26, "id1355", false]], "void (class in arkouda)": [[26, "arkouda.void", false]], "void (class in arkouda.numpy)": [[37, "arkouda.numpy.void", false]], "voiddtype (class in arkouda)": [[26, "arkouda.VoidDType", false]], "voiddtype (class in arkouda.numpy)": [[37, "arkouda.numpy.VoidDType", false]], "vstack() (in module arkouda)": [[26, "arkouda.vstack", false]], "vstack() (in module arkouda.pdarraymanipulation)": [[41, "arkouda.pdarraymanipulation.vstack", false]], "warn (arkouda.logger.loglevel attribute)": [[32, "arkouda.logger.LogLevel.WARN", false]], "warn (arkouda.loglevel attribute)": [[26, "arkouda.LogLevel.WARN", false]], "week (arkouda.datetime property)": [[26, "arkouda.Datetime.week", false], [26, "id207", false], [26, "id240", false]], "week (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.week", false]], "weekday (arkouda.datetime property)": [[26, "arkouda.Datetime.weekday", false], [26, "id208", false], [26, "id241", false]], "weekday (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.weekday", false]], "weekofyear (arkouda.datetime property)": [[26, "arkouda.Datetime.weekofyear", false], [26, "id209", false], [26, "id242", false]], "weekofyear (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.weekofyear", false]], "where() (in module arkouda)": [[26, "arkouda.where", false], [26, "id1359", false], [26, "id1360", false], [90, "arkouda.where", false]], "where() (in module arkouda.array_api.searching_functions)": [[13, "arkouda.array_api.searching_functions.where", false]], "where() (in module arkouda.numpy)": [[37, "arkouda.numpy.where", false]], "width (arkouda.bitvector attribute)": [[26, "arkouda.BitVector.width", false]], "width (arkouda.client_dtypes.bitvector attribute)": [[20, "arkouda.client_dtypes.BitVector.width", false]], "write_line_to_file() (in module arkouda.io_util)": [[30, "arkouda.io_util.write_line_to_file", false]], "write_log() (in module arkouda)": [[26, "arkouda.write_log", false]], "write_log() (in module arkouda.logger)": [[32, "arkouda.logger.write_log", false]], "xlogy() (in module arkouda)": [[26, "arkouda.xlogy", false]], "xlogy() (in module arkouda.scipy.special)": [[47, "arkouda.scipy.special.xlogy", false]], "xor() (arkouda.dataframe.dataframegroupby method)": [[22, "arkouda.dataframe.DataFrameGroupBy.xor", false]], "xor() (arkouda.dataframe.diffaggregate method)": [[22, "arkouda.dataframe.DiffAggregate.xor", false]], "xor() (arkouda.dataframegroupby method)": [[26, "arkouda.DataFrameGroupBy.xor", false]], "xor() (arkouda.diffaggregate method)": [[26, "arkouda.DiffAggregate.xor", false]], "xor() (arkouda.groupby method)": [[26, "arkouda.GroupBy.XOR", false], [26, "id257", false], [26, "id304", false], [26, "id351", false], [26, "id398", false], [26, "id445", false], [94, "arkouda.GroupBy.XOR", false]], "xor() (arkouda.groupbyclass.groupby method)": [[24, "arkouda.groupbyclass.GroupBy.XOR", false]], "xor() (arkouda.segarray method)": [[26, "arkouda.SegArray.XOR", false]], "xor() (arkouda.segarray.segarray method)": [[50, "arkouda.segarray.SegArray.XOR", false]], "xtol() (arkouda.scipy.stats.chi2 method)": [[48, "arkouda.scipy.stats.chi2.xtol", false]], "year (arkouda.datetime property)": [[26, "arkouda.Datetime.year", false], [26, "id210", false], [26, "id243", false]], "year (arkouda.timeclass.datetime property)": [[57, "arkouda.timeclass.Datetime.year", false]], "zero_up() (in module arkouda)": [[26, "arkouda.zero_up", false]], "zero_up() (in module arkouda.alignment)": [[3, "arkouda.alignment.zero_up", false]], "zeros() (in module arkouda)": [[26, "arkouda.zeros", false], [26, "id1361", false], [26, "id1362", false], [26, "id1363", false], [92, "arkouda.zeros", false]], "zeros() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.zeros", false]], "zeros() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.zeros", false]], "zeros_like() (in module arkouda)": [[26, "arkouda.zeros_like", false], [92, "arkouda.zeros_like", false]], "zeros_like() (in module arkouda.array_api.creation_functions)": [[6, "arkouda.array_api.creation_functions.zeros_like", false]], "zeros_like() (in module arkouda.pdarraycreation)": [[40, "arkouda.pdarraycreation.zeros_like", false]]}, "objects": {"": [[26, 0, 0, "-", "arkouda"]], "arkouda": [[26, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [26, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [26, 3, 1, "", "AllSymbols"], [26, 1, 1, "", "BitVector"], [26, 5, 1, "", "BitVectorizer"], [26, 1, 1, "", "BoolDType"], [26, 1, 1, "", "ByteDType"], [26, 1, 1, "", "BytesDType"], [26, 1, 1, "", "CLongDoubleDType"], [26, 1, 1, "", "CachedAccessor"], [91, 1, 1, "", "Categorical"], [26, 1, 1, "", "Complex128DType"], [26, 1, 1, "", "Complex64DType"], [26, 1, 1, "", "DType"], [26, 1, 1, "", "DTypeObjects"], [26, 1, 1, "", "DTypes"], [93, 1, 1, "", "DataFrame"], [26, 1, 1, "", "DataFrameGroupBy"], [26, 1, 1, "", "DataSource"], [26, 1, 1, "", "DateTime64DType"], [26, 1, 1, "id211", "Datetime"], [26, 1, 1, "", "DatetimeAccessor"], [26, 1, 1, "", "DiffAggregate"], [26, 1, 1, "", "ErrorMode"], [26, 1, 1, "", "False_"], [26, 1, 1, "", "Fields"], [26, 1, 1, "", "Float16DType"], [26, 1, 1, "", "Float32DType"], [26, 1, 1, "", "Float64DType"], [26, 1, 1, "", "GROUPBY_REDUCTION_TYPES"], [94, 1, 1, "", "GroupBy"], [26, 1, 1, "", "IPv4"], [88, 1, 1, "", "Index"], [26, 3, 1, "", "Inf"], [26, 3, 1, "", "Infinity"], [26, 1, 1, "", "Int16DType"], [26, 1, 1, "", "Int32DType"], [26, 1, 1, "", "Int64DType"], [26, 1, 1, "", "Int8DType"], [26, 1, 1, "", "IntDType"], [26, 3, 1, "", "LEN_SUFFIX"], [26, 1, 1, "", "LogLevel"], [26, 1, 1, "", "LongDType"], [26, 1, 1, "", "LongDoubleDType"], [26, 1, 1, "", "LongLongDType"], [26, 1, 1, "", "MultiIndex"], [26, 3, 1, "", "NAN"], [26, 3, 1, "", "NINF"], [26, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [26, 3, 1, "", "NZERO"], [26, 3, 1, "", "NaN"], [26, 7, 1, "", "NonUniqueError"], [26, 1, 1, "", "NumericDTypes"], [26, 1, 1, "", "ObjectDType"], [26, 3, 1, "", "PINF"], [26, 3, 1, "", "PZERO"], [26, 1, 1, "", "Power_divergenceResult"], [26, 1, 1, "", "Properties"], [26, 1, 1, "", "RankWarning"], [26, 3, 1, "", "RegisteredSymbols"], [26, 7, 1, "id487", "RegistrationError"], [26, 1, 1, "", "Row"], [26, 3, 1, "", "SEG_SUFFIX"], [26, 1, 1, "", "ScalarDTypes"], [26, 1, 1, "", "ScalarType"], [26, 1, 1, "", "SegArray"], [100, 1, 1, "", "Series"], [26, 1, 1, "", "SeriesDTypes"], [26, 1, 1, "", "ShortDType"], [26, 3, 1, "", "SortingAlgorithm"], [26, 1, 1, "", "StrDType"], [26, 1, 1, "", "StringAccessor"], [26, 1, 1, "id721", "Strings"], [26, 1, 1, "", "TimeDelta64DType"], [26, 1, 1, "id797", "Timedelta"], [26, 1, 1, "", "TooHardError"], [26, 1, 1, "", "True_"], [26, 1, 1, "", "UByteDType"], [26, 1, 1, "", "UInt16DType"], [26, 1, 1, "", "UInt32DType"], [26, 1, 1, "", "UInt64DType"], [26, 1, 1, "", "UInt8DType"], [26, 1, 1, "", "UIntDType"], [26, 1, 1, "", "ULongDType"], [26, 1, 1, "", "ULongLongDType"], [26, 1, 1, "", "UShortDType"], [26, 3, 1, "", "VAL_SUFFIX"], [26, 1, 1, "", "VoidDType"], [90, 5, 1, "", "abs"], [2, 0, 0, "-", "accessor"], [26, 5, 1, "", "add_newdoc"], [26, 5, 1, "", "akabs"], [26, 1, 1, "id819", "akbool"], [26, 5, 1, "id820", "akcast"], [26, 1, 1, "id821", "akfloat64"], [26, 1, 1, "id828", "akint64"], [26, 1, 1, "id832", "akuint64"], [26, 5, 1, "", "align"], [3, 0, 0, "-", "alignment"], [90, 5, 1, "", "all"], [26, 1, 1, "", "all_scalars"], [90, 5, 1, "", "any"], [26, 5, 1, "", "apply"], [4, 0, 0, "-", "apply"], [92, 5, 1, "", "arange"], [26, 5, 1, "", "arccos"], [26, 5, 1, "", "arccosh"], [26, 5, 1, "", "arcsin"], [26, 5, 1, "", "arcsinh"], [26, 5, 1, "", "arctan"], [26, 5, 1, "", "arctan2"], [26, 5, 1, "", "arctanh"], [90, 5, 1, "", "argmax"], [90, 5, 1, "", "argmaxk"], [90, 5, 1, "", "argmin"], [90, 5, 1, "", "argmink"], [89, 5, 1, "", "argsort"], [87, 5, 1, "", "array"], [9, 0, 0, "-", "array_api"], [26, 5, 1, "", "array_equal"], [26, 5, 1, "", "assert_almost_equal"], [26, 5, 1, "", "assert_almost_equivalent"], [26, 5, 1, "", "assert_arkouda_array_equal"], [26, 5, 1, "", "assert_arkouda_array_equivalent"], [26, 5, 1, "", "assert_arkouda_pdarray_equal"], [26, 5, 1, "", "assert_arkouda_segarray_equal"], [26, 5, 1, "", "assert_arkouda_strings_equal"], [26, 5, 1, "", "assert_attr_equal"], [26, 5, 1, "", "assert_categorical_equal"], [26, 5, 1, "", "assert_class_equal"], [26, 5, 1, "", "assert_contains_all"], [26, 5, 1, "", "assert_copy"], [26, 5, 1, "", "assert_dict_equal"], [26, 5, 1, "", "assert_equal"], [26, 5, 1, "", "assert_equivalent"], [26, 5, 1, "", "assert_frame_equal"], [26, 5, 1, "", "assert_frame_equivalent"], [26, 5, 1, "", "assert_index_equal"], [26, 5, 1, "", "assert_index_equivalent"], [26, 5, 1, "", "assert_is_sorted"], [26, 5, 1, "", "assert_series_equal"], [26, 5, 1, "", "assert_series_equivalent"], [26, 5, 1, "", "attach"], [26, 5, 1, "", "attach_all"], [26, 5, 1, "", "attach_pdarray"], [26, 5, 1, "", "base_repr"], [26, 1, 1, "id844", "bigint"], [26, 5, 1, "", "bigint_from_uint_arrays"], [26, 5, 1, "", "binary_repr"], [26, 1, 1, "id852", "bitType"], [26, 1, 1, "", "bool_"], [26, 1, 1, "id854", "bool_scalars"], [26, 5, 1, "id857", "broadcast"], [26, 5, 1, "", "broadcast_dims"], [26, 5, 1, "", "broadcast_to_shape"], [26, 1, 1, "", "byte"], [26, 1, 1, "", "bytes_"], [97, 5, 1, "", "cast"], [18, 0, 0, "-", "categorical"], [26, 1, 1, "", "cdouble"], [26, 5, 1, "", "ceil"], [26, 1, 1, "", "cfloat"], [26, 1, 1, "", "character"], [26, 5, 1, "", "chisquare"], [26, 5, 1, "", "clear"], [19, 0, 0, "-", "client"], [20, 0, 0, "-", "client_dtypes"], [26, 5, 1, "", "clip"], [26, 1, 1, "", "clongdouble"], [26, 1, 1, "", "clongfloat"], [26, 5, 1, "", "clz"], [89, 5, 1, "", "coargsort"], [21, 0, 0, "-", "comm_diagnostics"], [26, 1, 1, "", "complex128"], [26, 1, 1, "", "complex64"], [26, 5, 1, "", "compute_join_size"], [92, 5, 1, "", "concatenate"], [102, 5, 1, "", "connect"], [26, 5, 1, "", "convert_if_categorical"], [26, 5, 1, "", "corr"], [90, 5, 1, "", "cos"], [26, 5, 1, "", "cosh"], [26, 5, 1, "", "count_nonzero"], [26, 5, 1, "", "cov"], [26, 5, 1, "id866", "create_pdarray"], [26, 5, 1, "", "create_sparray"], [26, 5, 1, "", "create_sparse_matrix"], [26, 1, 1, "", "csingle"], [26, 5, 1, "", "ctz"], [90, 5, 1, "", "cumprod"], [90, 5, 1, "", "cumsum"], [22, 0, 0, "-", "dataframe"], [26, 5, 1, "", "date_operators"], [26, 5, 1, "id869", "date_range"], [26, 1, 1, "", "datetime64"], [26, 5, 1, "", "deg2rad"], [26, 5, 1, "", "delete"], [26, 5, 1, "", "deprecate"], [26, 5, 1, "", "deprecate_with_doc"], [26, 5, 1, "", "disableVerbose"], [26, 5, 1, "", "disp"], [26, 5, 1, "", "divmod"], [26, 5, 1, "", "dot"], [26, 1, 1, "", "double"], [26, 5, 1, "", "dtype"], [23, 0, 0, "-", "dtypes"], [26, 3, 1, "", "e"], [26, 5, 1, "", "enableVerbose"], [26, 3, 1, "", "euler_gamma"], [90, 5, 1, "", "exp"], [26, 5, 1, "", "expm1"], [87, 5, 1, "", "export"], [26, 5, 1, "", "eye"], [26, 5, 1, "", "find"], [26, 1, 1, "", "finfo"], [26, 1, 1, "", "flexible"], [26, 5, 1, "", "flip"], [26, 1, 1, "", "float16"], [26, 1, 1, "", "float32"], [26, 1, 1, "", "float64"], [26, 1, 1, "", "float_"], [26, 1, 1, "", "float_scalars"], [26, 1, 1, "", "floating"], [26, 5, 1, "", "floor"], [26, 5, 1, "", "fmod"], [26, 5, 1, "", "format_float_positional"], [26, 5, 1, "", "format_float_scientific"], [26, 1, 1, "", "format_parser"], [26, 5, 1, "id876", "from_series"], [26, 5, 1, "id877", "full"], [26, 5, 1, "", "full_like"], [26, 5, 1, "id878", "gen_ranges"], [26, 5, 1, "", "generic_concat"], [26, 5, 1, "", "getArkoudaLogger"], [26, 5, 1, "", "get_byteorder"], [26, 5, 1, "", "get_callback"], [26, 5, 1, "", "get_columns"], [87, 5, 1, "", "get_datasets"], [26, 5, 1, "", "get_filetype"], [26, 5, 1, "", "get_null_indices"], [26, 5, 1, "", "get_server_byteorder"], [24, 0, 0, "-", "groupbyclass"], [26, 1, 1, "", "half"], [26, 5, 1, "", "hash"], [26, 5, 1, "", "hist_all"], [95, 5, 1, "", "histogram"], [26, 5, 1, "", "histogram2d"], [26, 5, 1, "", "histogramdd"], [25, 0, 0, "-", "history"], [26, 1, 1, "", "iinfo"], [87, 5, 1, "", "import_data"], [101, 5, 1, "", "in1d"], [26, 5, 1, "", "in1d_intervals"], [27, 0, 0, "-", "index"], [26, 5, 1, "", "indexof1d"], [26, 1, 1, "", "inexact"], [26, 3, 1, "", "inf"], [28, 0, 0, "-", "infoclass"], [26, 5, 1, "", "information"], [26, 3, 1, "", "infty"], [26, 1, 1, "", "int16"], [26, 1, 1, "", "int32"], [26, 1, 1, "id884", "int64"], [26, 1, 1, "", "int8"], [26, 1, 1, "id895", "intTypes"], [26, 1, 1, "", "int_"], [26, 1, 1, "id905", "int_scalars"], [26, 1, 1, "", "intc"], [26, 1, 1, "", "integer"], [26, 5, 1, "", "intersect"], [101, 5, 1, "", "intersect1d"], [26, 5, 1, "", "interval_lookup"], [26, 1, 1, "", "intp"], [26, 5, 1, "", "intx"], [26, 5, 1, "", "invert_permutation"], [29, 0, 0, "-", "io"], [30, 0, 0, "-", "io_util"], [26, 5, 1, "", "ip_address"], [26, 5, 1, "", "isSupportedBool"], [26, 5, 1, "", "isSupportedDType"], [26, 5, 1, "", "isSupportedFloat"], [26, 5, 1, "id908", "isSupportedInt"], [26, 5, 1, "", "isSupportedNumber"], [26, 5, 1, "", "is_cosorted"], [26, 5, 1, "", "is_ipv4"], [26, 5, 1, "", "is_ipv6"], [26, 5, 1, "", "is_registered"], [90, 5, 1, "", "is_sorted"], [26, 5, 1, "", "isfinite"], [26, 5, 1, "", "isinf"], [26, 5, 1, "id909", "isnan"], [26, 5, 1, "", "isscalar"], [26, 5, 1, "", "issctype"], [26, 5, 1, "", "issubclass_"], [26, 5, 1, "", "issubdtype"], [31, 0, 0, "-", "join"], [26, 5, 1, "", "join_on_eq_with_dt"], [26, 5, 1, "", "left_align"], [92, 5, 1, "", "linspace"], [26, 5, 1, "", "list_registry"], [26, 5, 1, "", "list_symbol_table"], [26, 5, 1, "", "load"], [26, 5, 1, "", "load_all"], [90, 5, 1, "", "log"], [26, 5, 1, "", "log10"], [26, 5, 1, "", "log1p"], [26, 5, 1, "", "log2"], [32, 0, 0, "-", "logger"], [26, 1, 1, "", "longdouble"], [26, 1, 1, "", "longfloat"], [26, 1, 1, "", "longlong"], [26, 5, 1, "", "lookup"], [26, 5, 1, "", "ls"], [26, 5, 1, "", "ls_csv"], [33, 0, 0, "-", "match"], [34, 0, 0, "-", "matcher"], [26, 5, 1, "", "matmul"], [90, 5, 1, "", "max"], [26, 5, 1, "", "maximum_sctype"], [90, 5, 1, "", "maxk"], [90, 5, 1, "", "mean"], [26, 5, 1, "", "median"], [26, 5, 1, "", "merge"], [90, 5, 1, "", "min"], [90, 5, 1, "", "mink"], [26, 5, 1, "", "mod"], [26, 3, 1, "", "nan"], [26, 1, 1, "", "number"], [35, 0, 0, "-", "numeric"], [26, 1, 1, "", "numeric_and_bool_scalars"], [26, 1, 1, "", "numeric_scalars"], [37, 0, 0, "-", "numpy"], [26, 1, 1, "", "numpy_scalars"], [26, 1, 1, "", "object_"], [92, 5, 1, "", "ones"], [92, 5, 1, "", "ones_like"], [26, 5, 1, "", "parity"], [97, 1, 1, "", "pdarray"], [39, 0, 0, "-", "pdarrayclass"], [40, 0, 0, "-", "pdarraycreation"], [41, 0, 0, "-", "pdarraymanipulation"], [42, 0, 0, "-", "pdarraysetops"], [26, 3, 1, "", "pi"], [26, 5, 1, "", "plot_dist"], [43, 0, 0, "-", "plotting"], [26, 5, 1, "", "popcount"], [26, 5, 1, "", "power"], [26, 5, 1, "", "power_divergence"], [26, 5, 1, "", "pretty_print_information"], [90, 5, 1, "", "prod"], [26, 5, 1, "", "promote_to_common_dtype"], [26, 5, 1, "", "putmask"], [26, 5, 1, "", "rad2deg"], [92, 5, 1, "", "randint"], [44, 0, 0, "-", "random"], [26, 5, 1, "", "random_sparse_matrix"], [26, 5, 1, "", "random_strings_lognormal"], [26, 5, 1, "", "random_strings_uniform"], [87, 5, 1, "", "read"], [26, 5, 1, "", "read_csv"], [26, 5, 1, "", "read_hdf"], [26, 5, 1, "", "read_parquet"], [26, 5, 1, "", "read_tagged_data"], [26, 5, 1, "", "read_zarr"], [26, 5, 1, "", "receive"], [26, 5, 1, "", "receive_dataframe"], [26, 5, 1, "", "register_all"], [26, 5, 1, "", "resolve_scalar_dtype"], [26, 5, 1, "", "restore"], [26, 5, 1, "", "right_align"], [26, 5, 1, "", "rotl"], [26, 5, 1, "", "rotr"], [26, 5, 1, "", "round"], [45, 0, 0, "-", "row"], [26, 5, 1, "", "save_all"], [26, 5, 1, "", "scalar_array"], [46, 0, 0, "-", "scipy"], [26, 1, 1, "", "sctypeDict"], [26, 1, 1, "", "sctypes"], [26, 5, 1, "", "search_intervals"], [49, 0, 0, "-", "security"], [50, 0, 0, "-", "segarray"], [51, 0, 0, "-", "series"], [101, 5, 1, "", "setdiff1d"], [101, 5, 1, "", "setxor1d"], [26, 5, 1, "", "shape"], [26, 1, 1, "", "short"], [26, 5, 1, "", "sign"], [26, 1, 1, "", "signedinteger"], [90, 5, 1, "", "sin"], [26, 1, 1, "", "single"], [26, 5, 1, "", "sinh"], [26, 5, 1, "", "skew"], [26, 5, 1, "", "snapshot"], [26, 5, 1, "", "sort"], [52, 0, 0, "-", "sorting"], [26, 1, 1, "", "sparray"], [53, 0, 0, "-", "sparrayclass"], [26, 5, 1, "", "sparse_matrix_matrix_mult"], [54, 0, 0, "-", "sparsematrix"], [26, 5, 1, "", "sqrt"], [26, 5, 1, "", "square"], [26, 5, 1, "", "squeeze"], [26, 5, 1, "", "standard_normal"], [90, 5, 1, "", "std"], [26, 1, 1, "id1288", "str_"], [26, 1, 1, "", "str_scalars"], [26, 5, 1, "", "string_operators"], [55, 0, 0, "-", "strings"], [90, 5, 1, "", "sum"], [26, 5, 1, "", "tan"], [26, 5, 1, "", "tanh"], [56, 0, 0, "-", "testing"], [57, 0, 0, "-", "timeclass"], [26, 1, 1, "", "timedelta64"], [26, 5, 1, "id1356", "timedelta_range"], [26, 5, 1, "", "to_csv"], [26, 5, 1, "", "to_hdf"], [26, 5, 1, "", "to_parquet"], [26, 5, 1, "", "to_zarr"], [26, 5, 1, "", "transpose"], [26, 5, 1, "", "tril"], [26, 5, 1, "", "triu"], [26, 5, 1, "", "trunc"], [26, 5, 1, "", "typename"], [26, 1, 1, "", "ubyte"], [26, 1, 1, "", "uint"], [26, 1, 1, "", "uint16"], [26, 1, 1, "", "uint32"], [26, 1, 1, "", "uint64"], [26, 1, 1, "", "uint8"], [26, 1, 1, "", "uintc"], [26, 1, 1, "", "uintp"], [26, 1, 1, "", "ulonglong"], [26, 5, 1, "", "uniform"], [101, 5, 1, "", "union1d"], [101, 5, 1, "", "unique"], [26, 5, 1, "", "unregister"], [26, 5, 1, "", "unregister_all"], [26, 5, 1, "", "unregister_pdarray_by_name"], [26, 1, 1, "", "unsignedinteger"], [26, 5, 1, "", "unsqueeze"], [26, 5, 1, "", "update_hdf"], [26, 1, 1, "", "ushort"], [58, 0, 0, "-", "util"], [95, 5, 1, "", "value_counts"], [90, 5, 1, "", "var"], [26, 5, 1, "", "vecdot"], [26, 1, 1, "", "void"], [26, 5, 1, "", "vstack"], [90, 5, 1, "", "where"], [26, 5, 1, "", "write_log"], [26, 5, 1, "", "xlogy"], [26, 5, 1, "", "zero_up"], [92, 5, 1, "", "zeros"], [92, 5, 1, "", "zeros_like"]], "arkouda.ARKOUDA_SUPPORTED_DTYPES": [[26, 2, 1, "", "copy"], [26, 2, 1, "", "difference"], [26, 2, 1, "", "intersection"], [26, 2, 1, "", "isdisjoint"], [26, 2, 1, "", "issubset"], [26, 2, 1, "", "issuperset"], [26, 2, 1, "", "symmetric_difference"], [26, 2, 1, "", "union"]], "arkouda.ARKOUDA_SUPPORTED_INTS": [[26, 2, 1, "", "count"], [26, 2, 1, "", "index"]], "arkouda.BitVector": [[26, 4, 1, "", "conserves"], [26, 2, 1, "", "format"], [26, 2, 1, "", "from_return_msg"], [26, 2, 1, "", "opeq"], [26, 2, 1, "", "register"], [26, 4, 1, "", "registered_name"], [26, 4, 1, "", "reverse"], [26, 4, 1, "", "special_objType"], [26, 2, 1, "", "to_list"], [26, 2, 1, "", "to_ndarray"], [26, 4, 1, "", "values"], [26, 4, 1, "", "width"]], "arkouda.Categorical": [[26, 4, 1, "id73", "BinOps"], [26, 4, 1, "id74", "RegisterablePieces"], [26, 4, 1, "id75", "RequiredPieces"], [26, 2, 1, "id76", "argsort"], [26, 2, 1, "id77", "attach"], [91, 4, 1, "", "categories"], [91, 4, 1, "", "codes"], [26, 2, 1, "id78", "concatenate"], [91, 2, 1, "", "contains"], [26, 4, 1, "id80", "dtype"], [91, 2, 1, "", "endswith"], [26, 2, 1, "id82", "equals"], [91, 2, 1, "", "from_codes"], [26, 2, 1, "id84", "from_return_msg"], [26, 2, 1, "id85", "group"], [26, 2, 1, "id86", "hash"], [26, 2, 1, "id87", "in1d"], [26, 6, 1, "id88", "inferred_type"], [26, 2, 1, "id89", "info"], [26, 2, 1, "id90", "is_registered"], [26, 2, 1, "id91", "isna"], [26, 4, 1, "id92", "logger"], [26, 6, 1, "id93", "nbytes"], [91, 4, 1, "", "ndim"], [91, 4, 1, "", "nlevels"], [26, 4, 1, "id96", "objType"], [26, 2, 1, "id97", "parse_hdf_categoricals"], [91, 4, 1, "", "permutation"], [26, 2, 1, "id99", "pretty_print_info"], [26, 2, 1, "id100", "register"], [26, 4, 1, "id101", "registered_name"], [26, 2, 1, "id102", "reset_categories"], [26, 2, 1, "id103", "save"], [91, 4, 1, "", "segments"], [26, 2, 1, "id105", "set_categories"], [91, 4, 1, "", "shape"], [91, 4, 1, "", "size"], [26, 2, 1, "id108", "sort_values"], [26, 2, 1, "id109", "standardize_categories"], [91, 2, 1, "", "startswith"], [26, 2, 1, "id111", "to_hdf"], [26, 2, 1, "id112", "to_list"], [91, 5, 1, "", "to_ndarray"], [26, 2, 1, "id114", "to_pandas"], [26, 2, 1, "id115", "to_parquet"], [26, 2, 1, "id116", "to_strings"], [26, 2, 1, "id117", "transfer"], [26, 2, 1, "id118", "unique"], [26, 2, 1, "id119", "unregister"], [26, 2, 1, "id120", "unregister_categorical_by_name"], [26, 2, 1, "id121", "update_hdf"]], "arkouda.DType": [[26, 2, 1, "", "BIGINT"], [26, 2, 1, "", "BOOL"], [26, 2, 1, "", "COMPLEX128"], [26, 2, 1, "", "COMPLEX64"], [26, 2, 1, "", "FLOAT"], [26, 2, 1, "", "FLOAT32"], [26, 2, 1, "", "FLOAT64"], [26, 2, 1, "", "INT"], [26, 2, 1, "", "INT16"], [26, 2, 1, "", "INT32"], [26, 2, 1, "", "INT64"], [26, 2, 1, "", "INT8"], [26, 2, 1, "", "STR"], [26, 2, 1, "", "UINT"], [26, 2, 1, "", "UINT16"], [26, 2, 1, "", "UINT32"], [26, 2, 1, "", "UINT64"], [26, 2, 1, "", "UINT8"], [26, 2, 1, "", "name"], [26, 2, 1, "", "value"]], "arkouda.DTypeObjects": [[26, 2, 1, "", "copy"], [26, 2, 1, "", "difference"], [26, 2, 1, "", "intersection"], [26, 2, 1, "", "isdisjoint"], [26, 2, 1, "", "issubset"], [26, 2, 1, "", "issuperset"], [26, 2, 1, "", "symmetric_difference"], [26, 2, 1, "", "union"]], "arkouda.DTypes": [[26, 2, 1, "", "copy"], [26, 2, 1, "", "difference"], [26, 2, 1, "", "intersection"], [26, 2, 1, "", "isdisjoint"], [26, 2, 1, "", "issubset"], [26, 2, 1, "", "issuperset"], [26, 2, 1, "", "symmetric_difference"], [26, 2, 1, "", "union"]], "arkouda.DataFrame": [[26, 2, 1, "id123", "GroupBy"], [26, 2, 1, "id124", "all"], [26, 2, 1, "id125", "any"], [26, 2, 1, "id126", "append"], [93, 5, 1, "", "apply_permutation"], [93, 5, 1, "", "argsort"], [26, 2, 1, "id129", "assign"], [26, 2, 1, "id130", "attach"], [93, 5, 1, "", "coargsort"], [26, 6, 1, "id132", "columns"], [93, 5, 1, "", "concat"], [93, 5, 1, "", "copy"], [26, 2, 1, "id134", "corr"], [26, 2, 1, "id135", "count"], [93, 5, 1, "", "drop"], [93, 5, 1, "", "drop_duplicates"], [26, 2, 1, "id138", "dropna"], [26, 6, 1, "id139", "dtypes"], [26, 6, 1, "id140", "empty"], [26, 2, 1, "id141", "filter_by_range"], [26, 2, 1, "id142", "from_pandas"], [26, 2, 1, "id143", "from_return_msg"], [93, 5, 1, "", "groupby"], [93, 5, 1, "", "head"], [26, 6, 1, "id146", "index"], [26, 6, 1, "id147", "info"], [26, 2, 1, "id148", "is_registered"], [26, 2, 1, "id149", "isin"], [26, 2, 1, "id150", "isna"], [26, 2, 1, "id151", "load"], [26, 2, 1, "id152", "memory_usage"], [26, 2, 1, "id153", "memory_usage_info"], [26, 2, 1, "id154", "merge"], [26, 2, 1, "id155", "notna"], [26, 2, 1, "id156", "objType"], [26, 2, 1, "id157", "read_csv"], [26, 2, 1, "id158", "register"], [93, 5, 1, "", "rename"], [93, 5, 1, "", "reset_index"], [26, 2, 1, "id161", "sample"], [26, 2, 1, "id162", "save"], [26, 6, 1, "id163", "shape"], [26, 6, 1, "id164", "size"], [26, 2, 1, "id165", "sort_index"], [93, 5, 1, "", "sort_values"], [93, 5, 1, "", "tail"], [26, 2, 1, "id168", "to_csv"], [26, 2, 1, "id169", "to_hdf"], [26, 2, 1, "id170", "to_markdown"], [93, 5, 1, "", "to_pandas"], [26, 2, 1, "id172", "to_parquet"], [26, 2, 1, "id173", "transfer"], [26, 2, 1, "id174", "unregister"], [26, 2, 1, "id175", "unregister_dataframe_by_name"], [26, 2, 1, "id176", "update_hdf"], [26, 2, 1, "id177", "update_nrows"]], "arkouda.DataFrameGroupBy": [[26, 2, 1, "", "all"], [26, 2, 1, "", "any"], [26, 2, 1, "", "argmax"], [26, 2, 1, "", "argmin"], [26, 4, 1, "", "as_index"], [26, 2, 1, "", "broadcast"], [26, 2, 1, "", "count"], [26, 4, 1, "", "df"], [26, 2, 1, "", "diff"], [26, 2, 1, "", "first"], [26, 4, 1, "", "gb"], [26, 4, 1, "", "gb_key_names"], [26, 2, 1, "", "head"], [26, 2, 1, "", "max"], [26, 2, 1, "", "mean"], [26, 2, 1, "", "median"], [26, 2, 1, "", "min"], [26, 2, 1, "", "mode"], [26, 2, 1, "", "nunique"], [26, 2, 1, "", "prod"], [26, 2, 1, "", "sample"], [26, 2, 1, "", "size"], [26, 2, 1, "", "std"], [26, 2, 1, "", "sum"], [26, 2, 1, "", "tail"], [26, 2, 1, "", "unique"], [26, 2, 1, "", "var"], [26, 2, 1, "", "xor"]], "arkouda.DataSource": [[26, 2, 1, "", "abspath"], [26, 2, 1, "", "exists"], [26, 2, 1, "", "open"]], "arkouda.Datetime": [[26, 6, 1, "id212", "date"], [26, 6, 1, "id213", "day"], [26, 6, 1, "id214", "day_of_week"], [26, 6, 1, "id215", "day_of_year"], [26, 6, 1, "id216", "dayofweek"], [26, 6, 1, "id217", "dayofyear"], [26, 6, 1, "id218", "hour"], [26, 6, 1, "id219", "is_leap_year"], [26, 2, 1, "id220", "is_registered"], [26, 2, 1, "id221", "isocalendar"], [26, 6, 1, "id222", "microsecond"], [26, 6, 1, "id223", "millisecond"], [26, 6, 1, "id224", "minute"], [26, 6, 1, "id225", "month"], [26, 6, 1, "id226", "nanosecond"], [26, 2, 1, "id227", "register"], [26, 6, 1, "id228", "second"], [26, 4, 1, "id229", "special_objType"], [26, 2, 1, "id230", "sum"], [26, 4, 1, "id231", "supported_opeq"], [26, 4, 1, "id232", "supported_with_datetime"], [26, 4, 1, "id233", "supported_with_pdarray"], [26, 4, 1, "id234", "supported_with_r_datetime"], [26, 4, 1, "id235", "supported_with_r_pdarray"], [26, 4, 1, "id236", "supported_with_r_timedelta"], [26, 4, 1, "id237", "supported_with_timedelta"], [26, 2, 1, "id238", "to_pandas"], [26, 2, 1, "id239", "unregister"], [26, 6, 1, "id240", "week"], [26, 6, 1, "id241", "weekday"], [26, 6, 1, "id242", "weekofyear"], [26, 6, 1, "id243", "year"]], "arkouda.DatetimeAccessor": [[26, 4, 1, "", "series"]], "arkouda.DiffAggregate": [[26, 2, 1, "", "all"], [26, 2, 1, "", "any"], [26, 2, 1, "", "argmax"], [26, 2, 1, "", "argmin"], [26, 2, 1, "", "count"], [26, 2, 1, "", "first"], [26, 4, 1, "", "gb"], [26, 2, 1, "", "max"], [26, 2, 1, "", "mean"], [26, 2, 1, "", "median"], [26, 2, 1, "", "min"], [26, 2, 1, "", "mode"], [26, 2, 1, "", "nunique"], [26, 2, 1, "", "prod"], [26, 2, 1, "", "std"], [26, 2, 1, "", "sum"], [26, 2, 1, "", "unique"], [26, 4, 1, "", "values"], [26, 2, 1, "", "var"], [26, 2, 1, "", "xor"]], "arkouda.ErrorMode": [[26, 2, 1, "", "ignore"], [26, 2, 1, "", "name"], [26, 2, 1, "", "return_validity"], [26, 2, 1, "", "strict"], [26, 2, 1, "", "value"]], "arkouda.Fields": [[26, 4, 1, "", "MSB_left"], [26, 2, 1, "", "format"], [26, 4, 1, "", "name"], [26, 4, 1, "", "names"], [26, 4, 1, "", "namewidth"], [26, 2, 1, "", "opeq"], [26, 4, 1, "", "pad"], [26, 4, 1, "", "padchar"], [26, 4, 1, "", "separator"], [26, 4, 1, "", "show_int"]], "arkouda.GROUPBY_REDUCTION_TYPES": [[26, 2, 1, "", "copy"], [26, 2, 1, "", "difference"], [26, 2, 1, "", "intersection"], [26, 2, 1, "", "isdisjoint"], [26, 2, 1, "", "issubset"], [26, 2, 1, "", "issuperset"], [26, 2, 1, "", "symmetric_difference"], [26, 2, 1, "", "union"]], "arkouda.GroupBy": [[94, 2, 1, "", "AND"], [94, 2, 1, "", "OR"], [26, 2, 1, "id444", "Reductions"], [94, 2, 1, "", "XOR"], [94, 2, 1, "", "aggregate"], [94, 2, 1, "", "all"], [94, 2, 1, "", "any"], [94, 2, 1, "", "argmax"], [94, 2, 1, "", "argmin"], [94, 2, 1, "", "attach"], [94, 2, 1, "", "broadcast"], [94, 2, 1, "", "build_from_components"], [94, 2, 1, "", "count"], [94, 4, 1, "", "dropna"], [94, 2, 1, "", "first"], [26, 2, 1, "id456", "from_return_msg"], [94, 2, 1, "", "head"], [94, 2, 1, "", "is_registered"], [94, 4, 1, "", "logger"], [94, 2, 1, "", "max"], [94, 2, 1, "", "mean"], [94, 2, 1, "", "median"], [94, 2, 1, "", "min"], [94, 2, 1, "", "mode"], [94, 2, 1, "", "most_common"], [94, 4, 1, "", "ngroups"], [94, 4, 1, "", "nkeys"], [94, 2, 1, "", "nunique"], [26, 2, 1, "id466", "objType"], [94, 4, 1, "", "permutation"], [94, 2, 1, "", "prod"], [94, 2, 1, "", "register"], [94, 2, 1, "", "sample"], [94, 4, 1, "", "segments"], [94, 2, 1, "id0", "size"], [94, 2, 1, "", "std"], [94, 2, 1, "", "sum"], [94, 2, 1, "", "tail"], [94, 2, 1, "", "to_hdf"], [94, 2, 1, "", "unique"], [94, 4, 1, "", "unique_keys"], [94, 2, 1, "", "unregister"], [94, 2, 1, "", "unregister_groupby_by_name"], [26, 2, 1, "id478", "update_hdf"], [94, 2, 1, "", "var"]], "arkouda.IPv4": [[26, 2, 1, "", "export_uint"], [26, 2, 1, "", "format"], [26, 2, 1, "", "normalize"], [26, 2, 1, "", "opeq"], [26, 2, 1, "", "register"], [26, 4, 1, "", "special_objType"], [26, 2, 1, "", "to_hdf"], [26, 2, 1, "", "to_list"], [26, 2, 1, "", "to_ndarray"], [26, 2, 1, "", "update_hdf"], [26, 4, 1, "", "values"]], "arkouda.Index": [[88, 5, 1, "", "argsort"], [88, 5, 1, "", "concat"], [26, 2, 1, "", "equals"], [26, 2, 1, "", "factory"], [26, 2, 1, "", "from_return_msg"], [26, 6, 1, "", "index"], [26, 6, 1, "", "inferred_type"], [26, 2, 1, "", "is_registered"], [26, 6, 1, "", "is_unique"], [88, 5, 1, "", "lookup"], [26, 2, 1, "", "map"], [26, 4, 1, "", "max_list_size"], [26, 2, 1, "", "memory_usage"], [26, 6, 1, "", "names"], [26, 6, 1, "", "ndim"], [26, 6, 1, "", "nlevels"], [26, 4, 1, "", "objType"], [26, 2, 1, "", "register"], [26, 4, 1, "", "registered_name"], [26, 2, 1, "", "save"], [88, 5, 1, "", "set_dtype"], [26, 6, 1, "", "shape"], [26, 2, 1, "", "to_csv"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "to_hdf"], [26, 2, 1, "", "to_list"], [26, 2, 1, "", "to_ndarray"], [26, 2, 1, "", "to_pandas"], [26, 2, 1, "", "to_parquet"], [26, 2, 1, "", "unregister"], [26, 2, 1, "", "update_hdf"]], "arkouda.LogLevel": [[26, 4, 1, "", "CRITICAL"], [26, 4, 1, "", "DEBUG"], [26, 4, 1, "", "ERROR"], [26, 4, 1, "", "INFO"], [26, 4, 1, "", "WARN"]], "arkouda.MultiIndex": [[88, 5, 1, "", "argsort"], [88, 5, 1, "", "concat"], [26, 6, 1, "", "dtype"], [26, 2, 1, "", "equal_levels"], [26, 2, 1, "", "get_level_values"], [26, 6, 1, "", "index"], [26, 6, 1, "", "inferred_type"], [26, 2, 1, "", "is_registered"], [26, 4, 1, "", "levels"], [88, 5, 1, "", "lookup"], [26, 2, 1, "", "memory_usage"], [26, 6, 1, "", "name"], [26, 6, 1, "", "names"], [26, 6, 1, "", "ndim"], [26, 6, 1, "", "nlevels"], [26, 4, 1, "", "objType"], [26, 2, 1, "", "register"], [26, 4, 1, "", "registered_name"], [88, 5, 1, "", "set_dtype"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "to_hdf"], [26, 2, 1, "", "to_list"], [26, 2, 1, "", "to_ndarray"], [26, 2, 1, "", "to_pandas"], [26, 2, 1, "", "unregister"], [26, 2, 1, "", "update_hdf"]], "arkouda.NUMBER_FORMAT_STRINGS": [[26, 2, 1, "", "clear"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "fromkeys"], [26, 2, 1, "", "get"], [26, 2, 1, "", "items"], [26, 2, 1, "", "keys"], [26, 2, 1, "", "pop"], [26, 2, 1, "", "popitem"], [26, 2, 1, "", "setdefault"], [26, 2, 1, "", "update"], [26, 2, 1, "", "values"]], "arkouda.NumericDTypes": [[26, 2, 1, "", "copy"], [26, 2, 1, "", "difference"], [26, 2, 1, "", "intersection"], [26, 2, 1, "", "isdisjoint"], [26, 2, 1, "", "issubset"], [26, 2, 1, "", "issuperset"], [26, 2, 1, "", "symmetric_difference"], [26, 2, 1, "", "union"]], "arkouda.Power_divergenceResult": [[26, 4, 1, "", "pvalue"], [26, 4, 1, "", "statistic"]], "arkouda.ScalarDTypes": [[26, 2, 1, "", "copy"], [26, 2, 1, "", "difference"], [26, 2, 1, "", "intersection"], [26, 2, 1, "", "isdisjoint"], [26, 2, 1, "", "issubset"], [26, 2, 1, "", "issuperset"], [26, 2, 1, "", "symmetric_difference"], [26, 2, 1, "", "union"]], "arkouda.ScalarType": [[26, 2, 1, "", "count"], [26, 2, 1, "", "index"]], "arkouda.SegArray": [[26, 2, 1, "", "AND"], [26, 2, 1, "", "OR"], [26, 2, 1, "", "XOR"], [26, 2, 1, "", "aggregate"], [26, 2, 1, "", "all"], [26, 2, 1, "", "any"], [99, 5, 1, "", "append"], [99, 5, 1, "", "append_single"], [26, 2, 1, "", "argmax"], [26, 2, 1, "", "argmin"], [26, 2, 1, "", "attach"], [26, 2, 1, "", "concat"], [26, 2, 1, "", "copy"], [26, 4, 1, "", "dtype"], [26, 2, 1, "", "filter"], [26, 2, 1, "", "from_multi_array"], [26, 2, 1, "", "from_parts"], [26, 2, 1, "", "from_return_msg"], [99, 5, 1, "", "get_jth"], [99, 5, 1, "", "get_length_n"], [99, 5, 1, "", "get_ngrams"], [99, 5, 1, "", "get_prefixes"], [99, 5, 1, "", "get_suffixes"], [26, 6, 1, "", "grouping"], [26, 2, 1, "", "hash"], [99, 5, 1, "", "intersect"], [26, 2, 1, "", "is_registered"], [26, 2, 1, "", "load"], [26, 4, 1, "", "logger"], [26, 2, 1, "", "max"], [26, 2, 1, "", "mean"], [26, 2, 1, "", "min"], [26, 6, 1, "", "nbytes"], [26, 6, 1, "", "non_empty"], [26, 2, 1, "", "nunique"], [26, 4, 1, "", "objType"], [99, 5, 1, "", "prepend_single"], [26, 2, 1, "", "prod"], [26, 2, 1, "", "read_hdf"], [26, 2, 1, "", "register"], [26, 4, 1, "", "registered_name"], [99, 5, 1, "", "remove_repeats"], [26, 2, 1, "", "save"], [26, 4, 1, "", "segments"], [99, 5, 1, "", "set_jth"], [99, 5, 1, "", "setdiff"], [99, 5, 1, "", "setxor"], [26, 4, 1, "", "size"], [26, 2, 1, "", "sum"], [26, 2, 1, "", "to_hdf"], [26, 2, 1, "", "to_list"], [99, 5, 1, "", "to_ndarray"], [26, 2, 1, "", "to_parquet"], [26, 2, 1, "", "transfer"], [99, 5, 1, "", "union"], [26, 2, 1, "", "unique"], [26, 2, 1, "", "unregister"], [26, 2, 1, "", "unregister_segarray_by_name"], [26, 2, 1, "", "update_hdf"], [26, 4, 1, "", "valsize"], [26, 4, 1, "", "values"]], "arkouda.Series": [[26, 2, 1, "", "add"], [26, 2, 1, "", "argmax"], [26, 2, 1, "", "argmin"], [26, 6, 1, "", "at"], [26, 2, 1, "", "attach"], [26, 2, 1, "", "concat"], [26, 2, 1, "", "diff"], [26, 2, 1, "", "dt"], [26, 6, 1, "", "dtype"], [26, 2, 1, "", "fillna"], [26, 2, 1, "", "from_return_msg"], [26, 2, 1, "", "has_repeat_labels"], [26, 2, 1, "", "hasnans"], [100, 5, 1, "", "head"], [26, 6, 1, "", "iat"], [26, 6, 1, "", "iloc"], [26, 2, 1, "", "is_registered"], [26, 2, 1, "", "isin"], [26, 2, 1, "", "isna"], [26, 2, 1, "", "isnull"], [26, 6, 1, "", "loc"], [100, 5, 1, "id0", "locate"], [26, 2, 1, "", "map"], [26, 2, 1, "", "max"], [26, 2, 1, "", "mean"], [26, 2, 1, "", "memory_usage"], [26, 2, 1, "", "min"], [26, 6, 1, "", "ndim"], [26, 2, 1, "", "notna"], [26, 2, 1, "", "notnull"], [26, 2, 1, "", "objType"], [100, 5, 1, "", "pdconcat"], [26, 2, 1, "", "prod"], [26, 2, 1, "", "register"], [26, 6, 1, "", "shape"], [100, 5, 1, "", "sort_index"], [100, 5, 1, "", "sort_values"], [26, 2, 1, "", "std"], [26, 2, 1, "", "str_acc"], [26, 2, 1, "", "sum"], [100, 5, 1, "", "tail"], [26, 2, 1, "", "to_dataframe"], [26, 2, 1, "", "to_list"], [26, 2, 1, "", "to_markdown"], [26, 2, 1, "", "to_ndarray"], [100, 5, 1, "", "to_pandas"], [100, 5, 1, "", "topn"], [26, 2, 1, "", "unregister"], [26, 2, 1, "", "validate_key"], [26, 2, 1, "", "validate_val"], [100, 5, 1, "", "value_counts"], [26, 2, 1, "", "var"]], "arkouda.SeriesDTypes": [[26, 2, 1, "", "clear"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "fromkeys"], [26, 2, 1, "", "get"], [26, 2, 1, "", "items"], [26, 2, 1, "", "keys"], [26, 2, 1, "", "pop"], [26, 2, 1, "", "popitem"], [26, 2, 1, "", "setdefault"], [26, 2, 1, "", "update"], [26, 2, 1, "", "values"]], "arkouda.StringAccessor": [[26, 4, 1, "", "series"]], "arkouda.Strings": [[26, 4, 1, "id729", "BinOps"], [26, 2, 1, "id730", "astype"], [26, 2, 1, "id731", "attach"], [26, 2, 1, "id732", "cached_regex_patterns"], [26, 2, 1, "id733", "capitalize"], [103, 2, 1, "", "contains"], [26, 2, 1, "id735", "decode"], [26, 4, 1, "id736", "dtype"], [26, 2, 1, "id737", "encode"], [103, 2, 1, "", "endswith"], [26, 4, 1, "id739", "entry"], [26, 2, 1, "id740", "equals"], [103, 2, 1, "", "find_locations"], [103, 2, 1, "", "findall"], [103, 2, 1, "", "flatten"], [26, 2, 1, "id744", "from_parts"], [26, 2, 1, "id745", "from_return_msg"], [103, 2, 1, "", "fullmatch"], [26, 2, 1, "id747", "get_bytes"], [26, 2, 1, "id748", "get_lengths"], [26, 2, 1, "id749", "get_offsets"], [26, 2, 1, "id750", "get_prefixes"], [26, 2, 1, "id751", "get_suffixes"], [26, 2, 1, "id752", "group"], [26, 2, 1, "id753", "hash"], [26, 6, 1, "id754", "inferred_type"], [26, 2, 1, "id755", "info"], [26, 2, 1, "id756", "is_registered"], [26, 2, 1, "id757", "isalnum"], [26, 2, 1, "id758", "isalpha"], [26, 2, 1, "id759", "isdecimal"], [26, 2, 1, "id760", "isdigit"], [26, 2, 1, "id761", "isempty"], [26, 2, 1, "id762", "islower"], [26, 2, 1, "id763", "isspace"], [26, 2, 1, "id764", "istitle"], [26, 2, 1, "id765", "isupper"], [26, 4, 1, "id766", "logger"], [26, 2, 1, "id767", "lower"], [103, 2, 1, "", "lstick"], [103, 2, 1, "", "match"], [26, 4, 1, "id724", "nbytes"], [26, 4, 1, "id725", "ndim"], [26, 4, 1, "id770", "objType"], [103, 2, 1, "", "peel"], [26, 2, 1, "id772", "pretty_print_info"], [26, 2, 1, "id773", "purge_cached_regex_patterns"], [26, 2, 1, "id774", "regex_split"], [26, 2, 1, "id775", "register"], [26, 4, 1, "id776", "registered_name"], [103, 2, 1, "", "rpeel"], [26, 2, 1, "id778", "save"], [103, 2, 1, "", "search"], [26, 4, 1, "id726", "shape"], [26, 4, 1, "id723", "size"], [103, 2, 1, "", "split"], [103, 2, 1, "", "startswith"], [103, 2, 1, "", "stick"], [26, 2, 1, "id783", "strip"], [103, 2, 1, "", "sub"], [103, 2, 1, "", "subn"], [26, 2, 1, "id786", "title"], [26, 2, 1, "id787", "to_csv"], [26, 2, 1, "id788", "to_hdf"], [26, 2, 1, "id789", "to_list"], [103, 5, 1, "", "to_ndarray"], [26, 2, 1, "id791", "to_parquet"], [26, 2, 1, "id792", "transfer"], [26, 2, 1, "id793", "unregister"], [26, 2, 1, "id794", "unregister_strings_by_name"], [26, 2, 1, "id795", "update_hdf"], [26, 2, 1, "id796", "upper"]], "arkouda.Timedelta": [[26, 2, 1, "id798", "abs"], [26, 6, 1, "id799", "components"], [26, 6, 1, "id800", "days"], [26, 2, 1, "id801", "is_registered"], [26, 6, 1, "id802", "microseconds"], [26, 6, 1, "id803", "nanoseconds"], [26, 2, 1, "id804", "register"], [26, 6, 1, "id805", "seconds"], [26, 4, 1, "id806", "special_objType"], [26, 2, 1, "id807", "std"], [26, 2, 1, "id808", "sum"], [26, 4, 1, "id809", "supported_opeq"], [26, 4, 1, "id810", "supported_with_datetime"], [26, 4, 1, "id811", "supported_with_pdarray"], [26, 4, 1, "id812", "supported_with_r_datetime"], [26, 4, 1, "id813", "supported_with_r_pdarray"], [26, 4, 1, "id814", "supported_with_r_timedelta"], [26, 4, 1, "id815", "supported_with_timedelta"], [26, 2, 1, "id816", "to_pandas"], [26, 2, 1, "id817", "total_seconds"], [26, 2, 1, "id818", "unregister"]], "arkouda.accessor": [[2, 1, 1, "", "CachedAccessor"], [2, 1, 1, "", "DatetimeAccessor"], [2, 1, 1, "", "Properties"], [2, 1, 1, "", "StringAccessor"], [2, 5, 1, "", "date_operators"], [2, 5, 1, "", "string_operators"]], "arkouda.accessor.DatetimeAccessor": [[2, 4, 1, "", "series"]], "arkouda.accessor.StringAccessor": [[2, 4, 1, "", "series"]], "arkouda.akfloat64": [[26, 2, 1, "id822", "as_integer_ratio"], [26, 2, 1, "id823", "fromhex"], [26, 2, 1, "id824", "hex"], [26, 2, 1, "id825", "is_integer"]], "arkouda.akint64": [[26, 2, 1, "id829", "bit_count"]], "arkouda.akuint64": [[26, 2, 1, "id833", "bit_count"]], "arkouda.alignment": [[3, 7, 1, "", "NonUniqueError"], [3, 5, 1, "", "align"], [3, 5, 1, "", "find"], [3, 5, 1, "", "in1d_intervals"], [3, 5, 1, "", "interval_lookup"], [3, 5, 1, "", "is_cosorted"], [3, 5, 1, "", "left_align"], [3, 5, 1, "", "lookup"], [3, 5, 1, "", "right_align"], [3, 5, 1, "", "search_intervals"], [3, 5, 1, "", "unsqueeze"], [3, 5, 1, "", "zero_up"]], "arkouda.apply": [[4, 5, 1, "", "apply"]], "arkouda.array_api": [[9, 1, 1, "", "Array"], [5, 0, 0, "-", "array_object"], [6, 0, 0, "-", "creation_functions"], [7, 0, 0, "-", "data_type_functions"], [8, 0, 0, "-", "elementwise_functions"], [10, 0, 0, "-", "indexing_functions"], [11, 0, 0, "-", "linalg"], [12, 0, 0, "-", "manipulation_functions"], [13, 0, 0, "-", "searching_functions"], [14, 0, 0, "-", "set_functions"], [15, 0, 0, "-", "sorting_functions"], [16, 0, 0, "-", "statistical_functions"], [17, 0, 0, "-", "utility_functions"]], "arkouda.array_api.Array": [[9, 6, 1, "", "T"], [9, 2, 1, "", "chunk_info"], [9, 6, 1, "", "device"], [9, 6, 1, "", "dtype"], [9, 2, 1, "", "item"], [9, 6, 1, "", "mT"], [9, 6, 1, "", "ndim"], [9, 6, 1, "", "shape"], [9, 6, 1, "", "size"], [9, 2, 1, "", "to_device"], [9, 2, 1, "", "to_ndarray"], [9, 2, 1, "", "tolist"], [9, 2, 1, "", "transpose"]], "arkouda.array_api.array_object": [[5, 1, 1, "", "Array"], [5, 3, 1, "", "HANDLED_FUNCTIONS"], [5, 5, 1, "", "implements_numpy"]], "arkouda.array_api.array_object.Array": [[5, 6, 1, "", "T"], [5, 2, 1, "", "chunk_info"], [5, 6, 1, "", "device"], [5, 6, 1, "", "dtype"], [5, 2, 1, "", "item"], [5, 6, 1, "", "mT"], [5, 6, 1, "", "ndim"], [5, 6, 1, "", "shape"], [5, 6, 1, "", "size"], [5, 2, 1, "", "to_device"], [5, 2, 1, "", "to_ndarray"], [5, 2, 1, "", "tolist"], [5, 2, 1, "", "transpose"]], "arkouda.array_api.creation_functions": [[6, 5, 1, "", "arange"], [6, 5, 1, "", "asarray"], [6, 5, 1, "", "empty"], [6, 5, 1, "", "empty_like"], [6, 5, 1, "", "eye"], [6, 5, 1, "", "from_dlpack"], [6, 5, 1, "", "full"], [6, 5, 1, "", "full_like"], [6, 5, 1, "", "linspace"], [6, 5, 1, "", "meshgrid"], [6, 5, 1, "", "ones"], [6, 5, 1, "", "ones_like"], [6, 5, 1, "", "tril"], [6, 5, 1, "", "triu"], [6, 5, 1, "", "zeros"], [6, 5, 1, "", "zeros_like"]], "arkouda.array_api.data_type_functions": [[7, 5, 1, "", "astype"], [7, 5, 1, "", "can_cast"], [7, 5, 1, "", "finfo"], [7, 1, 1, "", "finfo_object"], [7, 5, 1, "", "iinfo"], [7, 1, 1, "", "iinfo_object"], [7, 5, 1, "", "isdtype"], [7, 5, 1, "", "result_type"]], "arkouda.array_api.data_type_functions.finfo_object": [[7, 4, 1, "", "bits"], [7, 4, 1, "", "dtype"], [7, 4, 1, "", "eps"], [7, 4, 1, "", "max"], [7, 4, 1, "", "min"], [7, 4, 1, "", "smallest_normal"]], "arkouda.array_api.data_type_functions.iinfo_object": [[7, 4, 1, "", "bits"], [7, 4, 1, "", "dtype"], [7, 4, 1, "", "max"], [7, 4, 1, "", "min"]], "arkouda.array_api.elementwise_functions": [[8, 5, 1, "", "abs"], [8, 5, 1, "", "acos"], [8, 5, 1, "", "acosh"], [8, 5, 1, "", "add"], [8, 5, 1, "", "asin"], [8, 5, 1, "", "asinh"], [8, 5, 1, "", "atan"], [8, 5, 1, "", "atan2"], [8, 5, 1, "", "atanh"], [8, 5, 1, "", "bitwise_and"], [8, 5, 1, "", "bitwise_invert"], [8, 5, 1, "", "bitwise_left_shift"], [8, 5, 1, "", "bitwise_or"], [8, 5, 1, "", "bitwise_right_shift"], [8, 5, 1, "", "bitwise_xor"], [8, 5, 1, "", "ceil"], [8, 5, 1, "", "conj"], [8, 5, 1, "", "cos"], [8, 5, 1, "", "cosh"], [8, 5, 1, "", "divide"], [8, 5, 1, "", "equal"], [8, 5, 1, "", "exp"], [8, 5, 1, "", "expm1"], [8, 5, 1, "", "floor"], [8, 5, 1, "", "floor_divide"], [8, 5, 1, "", "greater"], [8, 5, 1, "", "greater_equal"], [8, 5, 1, "", "imag"], [8, 5, 1, "", "isfinite"], [8, 5, 1, "", "isinf"], [8, 5, 1, "", "isnan"], [8, 5, 1, "", "less"], [8, 5, 1, "", "less_equal"], [8, 5, 1, "", "log"], [8, 5, 1, "", "log10"], [8, 5, 1, "", "log1p"], [8, 5, 1, "", "log2"], [8, 5, 1, "", "logaddexp"], [8, 5, 1, "", "logical_and"], [8, 5, 1, "", "logical_not"], [8, 5, 1, "", "logical_or"], [8, 5, 1, "", "logical_xor"], [8, 5, 1, "", "multiply"], [8, 5, 1, "", "negative"], [8, 5, 1, "", "not_equal"], [8, 5, 1, "", "positive"], [8, 5, 1, "", "pow"], [8, 5, 1, "", "real"], [8, 5, 1, "", "remainder"], [8, 5, 1, "", "round"], [8, 5, 1, "", "sign"], [8, 5, 1, "", "sin"], [8, 5, 1, "", "sinh"], [8, 5, 1, "", "sqrt"], [8, 5, 1, "", "square"], [8, 5, 1, "", "subtract"], [8, 5, 1, "", "tan"], [8, 5, 1, "", "tanh"], [8, 5, 1, "", "trunc"]], "arkouda.array_api.indexing_functions": [[10, 5, 1, "", "take"]], "arkouda.array_api.linalg": [[11, 5, 1, "", "matmul"], [11, 5, 1, "", "matrix_transpose"], [11, 5, 1, "", "tensordot"], [11, 5, 1, "", "vecdot"]], "arkouda.array_api.manipulation_functions": [[12, 5, 1, "", "broadcast_arrays"], [12, 5, 1, "", "broadcast_to"], [12, 5, 1, "", "concat"], [12, 5, 1, "", "expand_dims"], [12, 5, 1, "", "flip"], [12, 5, 1, "", "moveaxis"], [12, 5, 1, "", "permute_dims"], [12, 5, 1, "", "repeat"], [12, 5, 1, "", "reshape"], [12, 5, 1, "", "roll"], [12, 5, 1, "", "squeeze"], [12, 5, 1, "", "stack"], [12, 5, 1, "", "tile"], [12, 5, 1, "", "unstack"]], "arkouda.array_api.searching_functions": [[13, 5, 1, "", "argmax"], [13, 5, 1, "", "argmin"], [13, 5, 1, "", "nonzero"], [13, 5, 1, "", "searchsorted"], [13, 5, 1, "", "where"]], "arkouda.array_api.set_functions": [[14, 1, 1, "", "UniqueAllResult"], [14, 1, 1, "", "UniqueCountsResult"], [14, 1, 1, "", "UniqueInverseResult"], [14, 5, 1, "", "unique_all"], [14, 5, 1, "", "unique_counts"], [14, 5, 1, "", "unique_inverse"], [14, 5, 1, "", "unique_values"]], "arkouda.array_api.set_functions.UniqueAllResult": [[14, 4, 1, "", "counts"], [14, 4, 1, "", "indices"], [14, 4, 1, "", "inverse_indices"], [14, 4, 1, "", "values"]], "arkouda.array_api.set_functions.UniqueCountsResult": [[14, 4, 1, "", "counts"], [14, 4, 1, "", "values"]], "arkouda.array_api.set_functions.UniqueInverseResult": [[14, 4, 1, "", "inverse_indices"], [14, 4, 1, "", "values"]], "arkouda.array_api.sorting_functions": [[15, 5, 1, "", "argsort"], [15, 5, 1, "", "sort"]], "arkouda.array_api.statistical_functions": [[16, 5, 1, "", "cumulative_sum"], [16, 5, 1, "", "max"], [16, 5, 1, "", "mean"], [16, 5, 1, "", "mean_shim"], [16, 5, 1, "", "min"], [16, 5, 1, "", "prod"], [16, 5, 1, "", "std"], [16, 5, 1, "", "sum"], [16, 5, 1, "", "var"]], "arkouda.array_api.utility_functions": [[17, 5, 1, "", "all"], [17, 5, 1, "", "any"], [17, 5, 1, "", "clip"], [17, 5, 1, "", "diff"], [17, 5, 1, "", "pad"]], "arkouda.bigint": [[26, 2, 1, "id845", "itemsize"], [26, 2, 1, "id846", "name"], [26, 2, 1, "id847", "ndim"], [26, 2, 1, "id848", "shape"], [26, 2, 1, "id849", "type"]], "arkouda.bitType": [[26, 2, 1, "id853", "bit_count"]], "arkouda.byte": [[26, 2, 1, "", "bit_count"]], "arkouda.bytes_": [[26, 2, 1, "", "T"], [26, 2, 1, "", "all"], [26, 2, 1, "", "any"], [26, 2, 1, "", "argmax"], [26, 2, 1, "", "argmin"], [26, 2, 1, "", "argsort"], [26, 2, 1, "", "astype"], [26, 2, 1, "", "base"], [26, 2, 1, "", "byteswap"], [26, 2, 1, "", "choose"], [26, 2, 1, "", "clip"], [26, 2, 1, "", "compress"], [26, 2, 1, "", "conj"], [26, 2, 1, "", "conjugate"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "cumprod"], [26, 2, 1, "", "cumsum"], [26, 2, 1, "", "data"], [26, 2, 1, "", "diagonal"], [26, 2, 1, "", "dtype"], [26, 2, 1, "", "dump"], [26, 2, 1, "", "dumps"], [26, 2, 1, "", "fill"], [26, 2, 1, "", "flags"], [26, 2, 1, "", "flat"], [26, 2, 1, "", "flatten"], [26, 2, 1, "", "getfield"], [26, 2, 1, "", "imag"], [26, 2, 1, "", "item"], [26, 2, 1, "", "itemset"], [26, 2, 1, "", "itemsize"], [26, 2, 1, "", "max"], [26, 2, 1, "", "mean"], [26, 2, 1, "", "min"], [26, 2, 1, "", "nbytes"], [26, 2, 1, "", "ndim"], [26, 2, 1, "", "newbyteorder"], [26, 2, 1, "", "nonzero"], [26, 2, 1, "", "prod"], [26, 2, 1, "", "ptp"], [26, 2, 1, "", "put"], [26, 2, 1, "", "ravel"], [26, 2, 1, "", "real"], [26, 2, 1, "", "repeat"], [26, 2, 1, "", "reshape"], [26, 2, 1, "", "resize"], [26, 2, 1, "", "round"], [26, 2, 1, "", "searchsorted"], [26, 2, 1, "", "setfield"], [26, 2, 1, "", "setflags"], [26, 2, 1, "", "shape"], [26, 2, 1, "", "size"], [26, 2, 1, "", "sort"], [26, 2, 1, "", "squeeze"], [26, 2, 1, "", "std"], [26, 2, 1, "", "strides"], [26, 2, 1, "", "sum"], [26, 2, 1, "", "swapaxes"], [26, 2, 1, "", "take"], [26, 2, 1, "", "tobytes"], [26, 2, 1, "", "tofile"], [26, 2, 1, "", "tolist"], [26, 2, 1, "", "tostring"], [26, 2, 1, "", "trace"], [26, 2, 1, "", "transpose"], [26, 2, 1, "", "var"], [26, 2, 1, "", "view"]], "arkouda.categorical": [[18, 1, 1, "", "Categorical"]], "arkouda.categorical.Categorical": [[18, 4, 1, "", "BinOps"], [18, 4, 1, "", "RegisterablePieces"], [18, 4, 1, "", "RequiredPieces"], [18, 2, 1, "", "argsort"], [18, 2, 1, "", "attach"], [18, 4, 1, "", "categories"], [18, 4, 1, "", "codes"], [18, 2, 1, "", "concatenate"], [18, 2, 1, "", "contains"], [18, 4, 1, "", "dtype"], [18, 2, 1, "", "endswith"], [18, 2, 1, "", "equals"], [18, 2, 1, "", "from_codes"], [18, 2, 1, "", "from_return_msg"], [18, 2, 1, "", "group"], [18, 2, 1, "", "hash"], [18, 2, 1, "", "in1d"], [18, 6, 1, "", "inferred_type"], [18, 2, 1, "", "info"], [18, 2, 1, "", "is_registered"], [18, 2, 1, "", "isna"], [18, 4, 1, "", "logger"], [18, 6, 1, "", "nbytes"], [18, 4, 1, "id0", "ndim"], [18, 4, 1, "id1", "nlevels"], [18, 4, 1, "", "objType"], [18, 2, 1, "", "parse_hdf_categoricals"], [18, 4, 1, "id2", "permutation"], [18, 2, 1, "", "pretty_print_info"], [18, 2, 1, "", "register"], [18, 4, 1, "", "registered_name"], [18, 2, 1, "", "reset_categories"], [18, 2, 1, "", "save"], [18, 4, 1, "id3", "segments"], [18, 2, 1, "", "set_categories"], [18, 4, 1, "id4", "shape"], [18, 4, 1, "id5", "size"], [18, 2, 1, "", "sort_values"], [18, 2, 1, "", "standardize_categories"], [18, 2, 1, "", "startswith"], [18, 2, 1, "", "to_hdf"], [18, 2, 1, "", "to_list"], [18, 2, 1, "", "to_ndarray"], [18, 2, 1, "", "to_pandas"], [18, 2, 1, "", "to_parquet"], [18, 2, 1, "", "to_strings"], [18, 2, 1, "", "transfer"], [18, 2, 1, "", "unique"], [18, 2, 1, "", "unregister"], [18, 2, 1, "", "unregister_categorical_by_name"], [18, 2, 1, "", "update_hdf"]], "arkouda.client": [[19, 5, 1, "", "connect"], [19, 5, 1, "", "disconnect"], [19, 5, 1, "", "generate_history"], [19, 5, 1, "", "get_config"], [19, 5, 1, "", "get_max_array_rank"], [19, 5, 1, "", "get_mem_avail"], [19, 5, 1, "", "get_mem_status"], [19, 5, 1, "", "get_mem_used"], [19, 5, 1, "", "get_server_commands"], [19, 5, 1, "", "print_server_commands"], [19, 5, 1, "", "ruok"], [19, 5, 1, "", "shutdown"]], "arkouda.client_dtypes": [[20, 1, 1, "", "BitVector"], [20, 5, 1, "", "BitVectorizer"], [20, 1, 1, "", "Fields"], [20, 1, 1, "", "IPv4"], [20, 5, 1, "", "ip_address"], [20, 5, 1, "", "is_ipv4"], [20, 5, 1, "", "is_ipv6"]], "arkouda.client_dtypes.BitVector": [[20, 4, 1, "", "conserves"], [20, 2, 1, "", "format"], [20, 2, 1, "", "from_return_msg"], [20, 2, 1, "", "opeq"], [20, 2, 1, "", "register"], [20, 4, 1, "", "registered_name"], [20, 4, 1, "", "reverse"], [20, 4, 1, "", "special_objType"], [20, 2, 1, "", "to_list"], [20, 2, 1, "", "to_ndarray"], [20, 4, 1, "", "values"], [20, 4, 1, "", "width"]], "arkouda.client_dtypes.Fields": [[20, 4, 1, "", "MSB_left"], [20, 2, 1, "", "format"], [20, 4, 1, "", "name"], [20, 4, 1, "", "names"], [20, 4, 1, "", "namewidth"], [20, 2, 1, "", "opeq"], [20, 4, 1, "", "pad"], [20, 4, 1, "", "padchar"], [20, 4, 1, "", "separator"], [20, 4, 1, "", "show_int"]], "arkouda.client_dtypes.IPv4": [[20, 2, 1, "", "export_uint"], [20, 2, 1, "", "format"], [20, 2, 1, "", "normalize"], [20, 2, 1, "", "opeq"], [20, 2, 1, "", "register"], [20, 4, 1, "", "special_objType"], [20, 2, 1, "", "to_hdf"], [20, 2, 1, "", "to_list"], [20, 2, 1, "", "to_ndarray"], [20, 2, 1, "", "update_hdf"], [20, 4, 1, "", "values"]], "arkouda.comm_diagnostics": [[21, 5, 1, "", "get_comm_diagnostics"], [21, 5, 1, "", "get_comm_diagnostics_amo"], [21, 5, 1, "", "get_comm_diagnostics_cache_get_hits"], [21, 5, 1, "", "get_comm_diagnostics_cache_get_misses"], [21, 5, 1, "", "get_comm_diagnostics_cache_num_page_readaheads"], [21, 5, 1, "", "get_comm_diagnostics_cache_num_prefetches"], [21, 5, 1, "", "get_comm_diagnostics_cache_prefetch_unused"], [21, 5, 1, "", "get_comm_diagnostics_cache_prefetch_waited"], [21, 5, 1, "", "get_comm_diagnostics_cache_put_hits"], [21, 5, 1, "", "get_comm_diagnostics_cache_put_misses"], [21, 5, 1, "", "get_comm_diagnostics_cache_readahead_unused"], [21, 5, 1, "", "get_comm_diagnostics_cache_readahead_waited"], [21, 5, 1, "", "get_comm_diagnostics_execute_on"], [21, 5, 1, "", "get_comm_diagnostics_execute_on_fast"], [21, 5, 1, "", "get_comm_diagnostics_execute_on_nb"], [21, 5, 1, "", "get_comm_diagnostics_get"], [21, 5, 1, "", "get_comm_diagnostics_get_nb"], [21, 5, 1, "", "get_comm_diagnostics_put"], [21, 5, 1, "", "get_comm_diagnostics_put_nb"], [21, 5, 1, "", "get_comm_diagnostics_try_nb"], [21, 5, 1, "", "get_comm_diagnostics_wait_nb"], [21, 5, 1, "", "print_comm_diagnostics_table"], [21, 5, 1, "", "reset_comm_diagnostics"], [21, 5, 1, "", "start_comm_diagnostics"], [21, 5, 1, "", "start_verbose_comm"], [21, 5, 1, "", "stop_comm_diagnostics"], [21, 5, 1, "", "stop_verbose_comm"]], "arkouda.dataframe": [[22, 1, 1, "", "DataFrame"], [22, 1, 1, "", "DataFrameGroupBy"], [22, 1, 1, "", "DiffAggregate"], [22, 5, 1, "", "intersect"], [22, 5, 1, "", "intx"], [22, 5, 1, "", "invert_permutation"], [22, 5, 1, "", "merge"]], "arkouda.dataframe.DataFrame": [[22, 2, 1, "", "GroupBy"], [22, 2, 1, "", "all"], [22, 2, 1, "", "any"], [22, 2, 1, "", "append"], [22, 2, 1, "", "apply_permutation"], [22, 2, 1, "", "argsort"], [22, 2, 1, "", "assign"], [22, 2, 1, "", "attach"], [22, 2, 1, "", "coargsort"], [22, 6, 1, "", "columns"], [22, 2, 1, "", "concat"], [22, 2, 1, "", "corr"], [22, 2, 1, "", "count"], [22, 2, 1, "", "drop"], [22, 2, 1, "", "drop_duplicates"], [22, 2, 1, "", "dropna"], [22, 6, 1, "", "dtypes"], [22, 6, 1, "", "empty"], [22, 2, 1, "", "filter_by_range"], [22, 2, 1, "", "from_pandas"], [22, 2, 1, "", "from_return_msg"], [22, 2, 1, "", "groupby"], [22, 2, 1, "", "head"], [22, 6, 1, "", "index"], [22, 6, 1, "", "info"], [22, 2, 1, "", "is_registered"], [22, 2, 1, "", "isin"], [22, 2, 1, "", "isna"], [22, 2, 1, "", "load"], [22, 2, 1, "", "memory_usage"], [22, 2, 1, "", "memory_usage_info"], [22, 2, 1, "", "merge"], [22, 2, 1, "", "notna"], [22, 2, 1, "", "objType"], [22, 2, 1, "", "read_csv"], [22, 2, 1, "", "register"], [22, 2, 1, "", "rename"], [22, 2, 1, "", "reset_index"], [22, 2, 1, "", "sample"], [22, 2, 1, "", "save"], [22, 6, 1, "", "shape"], [22, 6, 1, "", "size"], [22, 2, 1, "", "sort_index"], [22, 2, 1, "", "sort_values"], [22, 2, 1, "", "tail"], [22, 2, 1, "", "to_csv"], [22, 2, 1, "", "to_hdf"], [22, 2, 1, "", "to_markdown"], [22, 2, 1, "", "to_pandas"], [22, 2, 1, "", "to_parquet"], [22, 2, 1, "", "transfer"], [22, 2, 1, "", "unregister"], [22, 2, 1, "", "unregister_dataframe_by_name"], [22, 2, 1, "", "update_hdf"], [22, 2, 1, "", "update_nrows"]], "arkouda.dataframe.DataFrameGroupBy": [[22, 2, 1, "", "all"], [22, 2, 1, "", "any"], [22, 2, 1, "", "argmax"], [22, 2, 1, "", "argmin"], [22, 4, 1, "", "as_index"], [22, 2, 1, "", "broadcast"], [22, 2, 1, "", "count"], [22, 4, 1, "", "df"], [22, 2, 1, "", "diff"], [22, 2, 1, "", "first"], [22, 4, 1, "", "gb"], [22, 4, 1, "", "gb_key_names"], [22, 2, 1, "", "head"], [22, 2, 1, "", "max"], [22, 2, 1, "", "mean"], [22, 2, 1, "", "median"], [22, 2, 1, "", "min"], [22, 2, 1, "", "mode"], [22, 2, 1, "", "nunique"], [22, 2, 1, "", "prod"], [22, 2, 1, "", "sample"], [22, 2, 1, "", "size"], [22, 2, 1, "", "std"], [22, 2, 1, "", "sum"], [22, 2, 1, "", "tail"], [22, 2, 1, "", "unique"], [22, 2, 1, "", "var"], [22, 2, 1, "", "xor"]], "arkouda.dataframe.DiffAggregate": [[22, 2, 1, "", "all"], [22, 2, 1, "", "any"], [22, 2, 1, "", "argmax"], [22, 2, 1, "", "argmin"], [22, 2, 1, "", "count"], [22, 2, 1, "", "first"], [22, 4, 1, "", "gb"], [22, 2, 1, "", "max"], [22, 2, 1, "", "mean"], [22, 2, 1, "", "median"], [22, 2, 1, "", "min"], [22, 2, 1, "", "mode"], [22, 2, 1, "", "nunique"], [22, 2, 1, "", "prod"], [22, 2, 1, "", "std"], [22, 2, 1, "", "sum"], [22, 2, 1, "", "unique"], [22, 4, 1, "", "values"], [22, 2, 1, "", "var"], [22, 2, 1, "", "xor"]], "arkouda.double": [[26, 2, 1, "", "as_integer_ratio"], [26, 2, 1, "", "fromhex"], [26, 2, 1, "", "hex"], [26, 2, 1, "", "is_integer"]], "arkouda.dtypes": [[23, 1, 1, "", "ARKOUDA_SUPPORTED_BOOLS"], [23, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [23, 1, 1, "", "ARKOUDA_SUPPORTED_FLOATS"], [23, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [23, 1, 1, "", "ARKOUDA_SUPPORTED_NUMBERS"], [23, 1, 1, "", "DType"], [23, 1, 1, "", "DTypeObjects"], [23, 1, 1, "", "DTypes"], [23, 1, 1, "", "Enum"], [23, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [23, 1, 1, "", "NumericDTypes"], [23, 1, 1, "", "ScalarDTypes"], [23, 1, 1, "", "SeriesDTypes"], [23, 1, 1, "", "Union"], [23, 1, 1, "", "all_scalars"], [23, 1, 1, "", "annotations"], [23, 1, 1, "", "bigint"], [23, 1, 1, "", "bitType"], [23, 1, 1, "", "bool_"], [23, 1, 1, "", "bool_scalars"], [23, 5, 1, "", "cast"], [23, 1, 1, "", "complex128"], [23, 1, 1, "", "complex64"], [23, 5, 1, "", "dtype"], [23, 1, 1, "", "float16"], [23, 1, 1, "", "float32"], [23, 1, 1, "", "float64"], [23, 1, 1, "", "float_scalars"], [23, 5, 1, "", "get_byteorder"], [23, 5, 1, "", "get_server_byteorder"], [23, 1, 1, "", "int16"], [23, 1, 1, "", "int32"], [23, 1, 1, "", "int64"], [23, 1, 1, "", "int8"], [23, 1, 1, "", "intTypes"], [23, 1, 1, "", "int_scalars"], [23, 5, 1, "", "isSupportedBool"], [23, 5, 1, "", "isSupportedDType"], [23, 5, 1, "", "isSupportedFloat"], [23, 5, 1, "", "isSupportedInt"], [23, 5, 1, "", "isSupportedNumber"], [23, 1, 1, "", "numeric_and_bool_scalars"], [23, 1, 1, "", "numeric_scalars"], [23, 1, 1, "", "numpy_scalars"], [23, 5, 1, "", "resolve_scalar_dtype"], [23, 1, 1, "", "str_"], [23, 1, 1, "", "str_scalars"], [23, 1, 1, "", "uint16"], [23, 1, 1, "", "uint32"], [23, 1, 1, "", "uint64"], [23, 1, 1, "", "uint8"]], "arkouda.dtypes.ARKOUDA_SUPPORTED_BOOLS": [[23, 2, 1, "", "count"], [23, 2, 1, "", "index"]], "arkouda.dtypes.ARKOUDA_SUPPORTED_DTYPES": [[23, 2, 1, "", "copy"], [23, 2, 1, "", "difference"], [23, 2, 1, "", "intersection"], [23, 2, 1, "", "isdisjoint"], [23, 2, 1, "", "issubset"], [23, 2, 1, "", "issuperset"], [23, 2, 1, "", "symmetric_difference"], [23, 2, 1, "", "union"]], "arkouda.dtypes.ARKOUDA_SUPPORTED_FLOATS": [[23, 2, 1, "", "count"], [23, 2, 1, "", "index"]], "arkouda.dtypes.ARKOUDA_SUPPORTED_INTS": [[23, 2, 1, "", "count"], [23, 2, 1, "", "index"]], "arkouda.dtypes.ARKOUDA_SUPPORTED_NUMBERS": [[23, 2, 1, "", "count"], [23, 2, 1, "", "index"]], "arkouda.dtypes.DType": [[23, 2, 1, "", "BIGINT"], [23, 2, 1, "", "BOOL"], [23, 2, 1, "", "COMPLEX128"], [23, 2, 1, "", "COMPLEX64"], [23, 2, 1, "", "FLOAT"], [23, 2, 1, "", "FLOAT32"], [23, 2, 1, "", "FLOAT64"], [23, 2, 1, "", "INT"], [23, 2, 1, "", "INT16"], [23, 2, 1, "", "INT32"], [23, 2, 1, "", "INT64"], [23, 2, 1, "", "INT8"], [23, 2, 1, "", "STR"], [23, 2, 1, "", "UINT"], [23, 2, 1, "", "UINT16"], [23, 2, 1, "", "UINT32"], [23, 2, 1, "", "UINT64"], [23, 2, 1, "", "UINT8"], [23, 2, 1, "", "name"], [23, 2, 1, "", "value"]], "arkouda.dtypes.DTypeObjects": [[23, 2, 1, "", "copy"], [23, 2, 1, "", "difference"], [23, 2, 1, "", "intersection"], [23, 2, 1, "", "isdisjoint"], [23, 2, 1, "", "issubset"], [23, 2, 1, "", "issuperset"], [23, 2, 1, "", "symmetric_difference"], [23, 2, 1, "", "union"]], "arkouda.dtypes.DTypes": [[23, 2, 1, "", "copy"], [23, 2, 1, "", "difference"], [23, 2, 1, "", "intersection"], [23, 2, 1, "", "isdisjoint"], [23, 2, 1, "", "issubset"], [23, 2, 1, "", "issuperset"], [23, 2, 1, "", "symmetric_difference"], [23, 2, 1, "", "union"]], "arkouda.dtypes.NUMBER_FORMAT_STRINGS": [[23, 2, 1, "", "clear"], [23, 2, 1, "", "copy"], [23, 2, 1, "", "fromkeys"], [23, 2, 1, "", "get"], [23, 2, 1, "", "items"], [23, 2, 1, "", "keys"], [23, 2, 1, "", "pop"], [23, 2, 1, "", "popitem"], [23, 2, 1, "", "setdefault"], [23, 2, 1, "", "update"], [23, 2, 1, "", "values"]], "arkouda.dtypes.NumericDTypes": [[23, 2, 1, "", "copy"], [23, 2, 1, "", "difference"], [23, 2, 1, "", "intersection"], [23, 2, 1, "", "isdisjoint"], [23, 2, 1, "", "issubset"], [23, 2, 1, "", "issuperset"], [23, 2, 1, "", "symmetric_difference"], [23, 2, 1, "", "union"]], "arkouda.dtypes.ScalarDTypes": [[23, 2, 1, "", "copy"], [23, 2, 1, "", "difference"], [23, 2, 1, "", "intersection"], [23, 2, 1, "", "isdisjoint"], [23, 2, 1, "", "issubset"], [23, 2, 1, "", "issuperset"], [23, 2, 1, "", "symmetric_difference"], [23, 2, 1, "", "union"]], "arkouda.dtypes.SeriesDTypes": [[23, 2, 1, "", "clear"], [23, 2, 1, "", "copy"], [23, 2, 1, "", "fromkeys"], [23, 2, 1, "", "get"], [23, 2, 1, "", "items"], [23, 2, 1, "", "keys"], [23, 2, 1, "", "pop"], [23, 2, 1, "", "popitem"], [23, 2, 1, "", "setdefault"], [23, 2, 1, "", "update"], [23, 2, 1, "", "values"]], "arkouda.dtypes.annotations": [[23, 2, 1, "", "compiler_flag"], [23, 2, 1, "", "getMandatoryRelease"], [23, 2, 1, "", "getOptionalRelease"], [23, 2, 1, "", "mandatory"], [23, 2, 1, "", "optional"]], "arkouda.dtypes.bigint": [[23, 2, 1, "", "itemsize"], [23, 2, 1, "", "name"], [23, 2, 1, "", "ndim"], [23, 2, 1, "", "shape"], [23, 2, 1, "", "type"]], "arkouda.dtypes.bitType": [[23, 2, 1, "", "bit_count"]], "arkouda.dtypes.float16": [[23, 2, 1, "", "as_integer_ratio"], [23, 2, 1, "", "is_integer"]], "arkouda.dtypes.float32": [[23, 2, 1, "", "as_integer_ratio"], [23, 2, 1, "", "is_integer"]], "arkouda.dtypes.float64": [[23, 2, 1, "", "as_integer_ratio"], [23, 2, 1, "", "fromhex"], [23, 2, 1, "", "hex"], [23, 2, 1, "", "is_integer"]], "arkouda.dtypes.int16": [[23, 2, 1, "", "bit_count"]], "arkouda.dtypes.int32": [[23, 2, 1, "", "bit_count"]], "arkouda.dtypes.int64": [[23, 2, 1, "", "bit_count"]], "arkouda.dtypes.int8": [[23, 2, 1, "", "bit_count"]], "arkouda.dtypes.intTypes": [[23, 2, 1, "", "copy"], [23, 2, 1, "", "difference"], [23, 2, 1, "", "intersection"], [23, 2, 1, "", "isdisjoint"], [23, 2, 1, "", "issubset"], [23, 2, 1, "", "issuperset"], [23, 2, 1, "", "symmetric_difference"], [23, 2, 1, "", "union"]], "arkouda.dtypes.str_": [[23, 2, 1, "", "T"], [23, 2, 1, "", "all"], [23, 2, 1, "", "any"], [23, 2, 1, "", "argmax"], [23, 2, 1, "", "argmin"], [23, 2, 1, "", "argsort"], [23, 2, 1, "", "astype"], [23, 2, 1, "", "base"], [23, 2, 1, "", "byteswap"], [23, 2, 1, "", "choose"], [23, 2, 1, "", "clip"], [23, 2, 1, "", "compress"], [23, 2, 1, "", "conj"], [23, 2, 1, "", "conjugate"], [23, 2, 1, "", "copy"], [23, 2, 1, "", "cumprod"], [23, 2, 1, "", "cumsum"], [23, 2, 1, "", "data"], [23, 2, 1, "", "diagonal"], [23, 2, 1, "", "dtype"], [23, 2, 1, "", "dump"], [23, 2, 1, "", "dumps"], [23, 2, 1, "", "fill"], [23, 2, 1, "", "flags"], [23, 2, 1, "", "flat"], [23, 2, 1, "", "flatten"], [23, 2, 1, "", "getfield"], [23, 2, 1, "", "imag"], [23, 2, 1, "", "item"], [23, 2, 1, "", "itemset"], [23, 2, 1, "", "itemsize"], [23, 2, 1, "", "max"], [23, 2, 1, "", "mean"], [23, 2, 1, "", "min"], [23, 2, 1, "", "nbytes"], [23, 2, 1, "", "ndim"], [23, 2, 1, "", "newbyteorder"], [23, 2, 1, "", "nonzero"], [23, 2, 1, "", "prod"], [23, 2, 1, "", "ptp"], [23, 2, 1, "", "put"], [23, 2, 1, "", "ravel"], [23, 2, 1, "", "real"], [23, 2, 1, "", "repeat"], [23, 2, 1, "", "reshape"], [23, 2, 1, "", "resize"], [23, 2, 1, "", "round"], [23, 2, 1, "", "searchsorted"], [23, 2, 1, "", "setfield"], [23, 2, 1, "", "setflags"], [23, 2, 1, "", "shape"], [23, 2, 1, "", "size"], [23, 2, 1, "", "sort"], [23, 2, 1, "", "squeeze"], [23, 2, 1, "", "std"], [23, 2, 1, "", "strides"], [23, 2, 1, "", "sum"], [23, 2, 1, "", "swapaxes"], [23, 2, 1, "", "take"], [23, 2, 1, "", "tobytes"], [23, 2, 1, "", "tofile"], [23, 2, 1, "", "tolist"], [23, 2, 1, "", "tostring"], [23, 2, 1, "", "trace"], [23, 2, 1, "", "transpose"], [23, 2, 1, "", "var"], [23, 2, 1, "", "view"]], "arkouda.dtypes.uint16": [[23, 2, 1, "", "bit_count"]], "arkouda.dtypes.uint32": [[23, 2, 1, "", "bit_count"]], "arkouda.dtypes.uint64": [[23, 2, 1, "", "bit_count"]], "arkouda.dtypes.uint8": [[23, 2, 1, "", "bit_count"]], "arkouda.finfo": [[26, 4, 1, "", "bits"], [26, 4, 1, "", "dtype"], [26, 4, 1, "", "eps"], [26, 4, 1, "", "epsneg"], [26, 4, 1, "", "iexp"], [26, 4, 1, "", "machep"], [26, 4, 1, "", "max"], [26, 4, 1, "", "maxexp"], [26, 4, 1, "", "min"], [26, 4, 1, "", "minexp"], [26, 4, 1, "", "negep"], [26, 4, 1, "", "nexp"], [26, 4, 1, "", "nmant"], [26, 4, 1, "", "precision"], [26, 4, 1, "", "resolution"], [26, 6, 1, "id874", "smallest_normal"], [26, 4, 1, "", "smallest_subnormal"], [26, 6, 1, "id875", "tiny"]], "arkouda.float16": [[26, 2, 1, "", "as_integer_ratio"], [26, 2, 1, "", "is_integer"]], "arkouda.float32": [[26, 2, 1, "", "as_integer_ratio"], [26, 2, 1, "", "is_integer"]], "arkouda.float64": [[26, 2, 1, "", "as_integer_ratio"], [26, 2, 1, "", "fromhex"], [26, 2, 1, "", "hex"], [26, 2, 1, "", "is_integer"]], "arkouda.float_": [[26, 2, 1, "", "as_integer_ratio"], [26, 2, 1, "", "fromhex"], [26, 2, 1, "", "hex"], [26, 2, 1, "", "is_integer"]], "arkouda.format_parser": [[26, 4, 1, "", "dtype"]], "arkouda.groupbyclass": [[24, 1, 1, "", "GROUPBY_REDUCTION_TYPES"], [24, 1, 1, "", "GroupBy"], [24, 5, 1, "", "broadcast"], [24, 5, 1, "", "unique"]], "arkouda.groupbyclass.GROUPBY_REDUCTION_TYPES": [[24, 2, 1, "", "copy"], [24, 2, 1, "", "difference"], [24, 2, 1, "", "intersection"], [24, 2, 1, "", "isdisjoint"], [24, 2, 1, "", "issubset"], [24, 2, 1, "", "issuperset"], [24, 2, 1, "", "symmetric_difference"], [24, 2, 1, "", "union"]], "arkouda.groupbyclass.GroupBy": [[24, 2, 1, "", "AND"], [24, 2, 1, "", "OR"], [24, 2, 1, "", "Reductions"], [24, 2, 1, "", "XOR"], [24, 2, 1, "", "aggregate"], [24, 2, 1, "", "all"], [24, 2, 1, "", "any"], [24, 2, 1, "", "argmax"], [24, 2, 1, "", "argmin"], [24, 2, 1, "", "attach"], [24, 2, 1, "", "broadcast"], [24, 2, 1, "", "build_from_components"], [24, 2, 1, "", "count"], [24, 4, 1, "", "dropna"], [24, 2, 1, "", "first"], [24, 2, 1, "", "from_return_msg"], [24, 2, 1, "", "head"], [24, 2, 1, "", "is_registered"], [24, 4, 1, "", "logger"], [24, 2, 1, "", "max"], [24, 2, 1, "", "mean"], [24, 2, 1, "", "median"], [24, 2, 1, "", "min"], [24, 2, 1, "", "mode"], [24, 2, 1, "", "most_common"], [24, 4, 1, "", "ngroups"], [24, 4, 1, "", "nkeys"], [24, 2, 1, "", "nunique"], [24, 2, 1, "", "objType"], [24, 4, 1, "", "permutation"], [24, 2, 1, "", "prod"], [24, 2, 1, "", "register"], [24, 2, 1, "", "sample"], [24, 4, 1, "", "segments"], [24, 2, 1, "id0", "size"], [24, 2, 1, "", "std"], [24, 2, 1, "", "sum"], [24, 2, 1, "", "tail"], [24, 2, 1, "", "to_hdf"], [24, 2, 1, "", "unique"], [24, 4, 1, "", "unique_keys"], [24, 2, 1, "", "unregister"], [24, 2, 1, "", "unregister_groupby_by_name"], [24, 2, 1, "", "update_hdf"], [24, 2, 1, "", "var"]], "arkouda.half": [[26, 2, 1, "", "as_integer_ratio"], [26, 2, 1, "", "is_integer"]], "arkouda.history": [[25, 1, 1, "", "HistoryRetriever"], [25, 1, 1, "", "NotebookHistoryRetriever"], [25, 1, 1, "", "ShellHistoryRetriever"]], "arkouda.history.HistoryRetriever": [[25, 2, 1, "", "retrieve"]], "arkouda.history.NotebookHistoryRetriever": [[25, 2, 1, "", "retrieve"]], "arkouda.history.ShellHistoryRetriever": [[25, 2, 1, "", "retrieve"]], "arkouda.iinfo": [[26, 4, 1, "", "bits"], [26, 4, 1, "", "dtype"], [26, 6, 1, "id880", "max"], [26, 6, 1, "id881", "min"]], "arkouda.index": [[27, 1, 1, "", "Index"], [27, 1, 1, "", "MultiIndex"]], "arkouda.index.Index": [[27, 2, 1, "", "argsort"], [27, 2, 1, "", "concat"], [27, 2, 1, "", "equals"], [27, 2, 1, "", "factory"], [27, 2, 1, "", "from_return_msg"], [27, 6, 1, "", "index"], [27, 6, 1, "", "inferred_type"], [27, 2, 1, "", "is_registered"], [27, 6, 1, "", "is_unique"], [27, 2, 1, "", "lookup"], [27, 2, 1, "", "map"], [27, 4, 1, "", "max_list_size"], [27, 2, 1, "", "memory_usage"], [27, 6, 1, "", "names"], [27, 6, 1, "", "ndim"], [27, 6, 1, "", "nlevels"], [27, 4, 1, "", "objType"], [27, 2, 1, "", "register"], [27, 4, 1, "", "registered_name"], [27, 2, 1, "", "save"], [27, 2, 1, "", "set_dtype"], [27, 6, 1, "", "shape"], [27, 2, 1, "", "to_csv"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_hdf"], [27, 2, 1, "", "to_list"], [27, 2, 1, "", "to_ndarray"], [27, 2, 1, "", "to_pandas"], [27, 2, 1, "", "to_parquet"], [27, 2, 1, "", "unregister"], [27, 2, 1, "", "update_hdf"]], "arkouda.index.MultiIndex": [[27, 2, 1, "", "argsort"], [27, 2, 1, "", "concat"], [27, 6, 1, "", "dtype"], [27, 2, 1, "", "equal_levels"], [27, 2, 1, "", "get_level_values"], [27, 6, 1, "", "index"], [27, 6, 1, "", "inferred_type"], [27, 2, 1, "", "is_registered"], [27, 4, 1, "", "levels"], [27, 2, 1, "", "lookup"], [27, 2, 1, "", "memory_usage"], [27, 6, 1, "", "name"], [27, 6, 1, "", "names"], [27, 6, 1, "", "ndim"], [27, 6, 1, "", "nlevels"], [27, 4, 1, "", "objType"], [27, 2, 1, "", "register"], [27, 4, 1, "", "registered_name"], [27, 2, 1, "", "set_dtype"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_hdf"], [27, 2, 1, "", "to_list"], [27, 2, 1, "", "to_ndarray"], [27, 2, 1, "", "to_pandas"], [27, 2, 1, "", "unregister"], [27, 2, 1, "", "update_hdf"]], "arkouda.infoclass": [[28, 3, 1, "", "AllSymbols"], [28, 3, 1, "", "RegisteredSymbols"], [28, 5, 1, "", "information"], [28, 5, 1, "", "list_registry"], [28, 5, 1, "", "list_symbol_table"], [28, 5, 1, "", "pretty_print_information"]], "arkouda.int16": [[26, 2, 1, "", "bit_count"]], "arkouda.int32": [[26, 2, 1, "", "bit_count"]], "arkouda.int64": [[26, 2, 1, "id885", "bit_count"]], "arkouda.int8": [[26, 2, 1, "", "bit_count"]], "arkouda.intTypes": [[26, 2, 1, "id896", "copy"], [26, 2, 1, "id897", "difference"], [26, 2, 1, "id898", "intersection"], [26, 2, 1, "id899", "isdisjoint"], [26, 2, 1, "id900", "issubset"], [26, 2, 1, "id901", "issuperset"], [26, 2, 1, "id902", "symmetric_difference"], [26, 2, 1, "id903", "union"]], "arkouda.int_": [[26, 2, 1, "", "bit_count"]], "arkouda.intc": [[26, 2, 1, "", "bit_count"]], "arkouda.integer": [[26, 2, 1, "", "denominator"], [26, 2, 1, "", "is_integer"], [26, 2, 1, "", "numerator"]], "arkouda.intp": [[26, 2, 1, "", "bit_count"]], "arkouda.io": [[29, 5, 1, "", "export"], [29, 5, 1, "", "get_columns"], [29, 5, 1, "", "get_datasets"], [29, 5, 1, "", "get_filetype"], [29, 5, 1, "", "get_null_indices"], [29, 5, 1, "", "import_data"], [29, 5, 1, "", "load"], [29, 5, 1, "", "load_all"], [29, 5, 1, "", "ls"], [29, 5, 1, "", "ls_csv"], [29, 5, 1, "", "read"], [29, 5, 1, "", "read_csv"], [29, 5, 1, "", "read_hdf"], [29, 5, 1, "", "read_parquet"], [29, 5, 1, "", "read_tagged_data"], [29, 5, 1, "", "read_zarr"], [29, 5, 1, "", "receive"], [29, 5, 1, "", "receive_dataframe"], [29, 5, 1, "", "restore"], [29, 5, 1, "", "save_all"], [29, 5, 1, "", "snapshot"], [29, 5, 1, "", "to_csv"], [29, 5, 1, "", "to_hdf"], [29, 5, 1, "", "to_parquet"], [29, 5, 1, "", "to_zarr"], [29, 5, 1, "", "update_hdf"]], "arkouda.io_util": [[30, 5, 1, "", "delete_directory"], [30, 5, 1, "", "delimited_file_to_dict"], [30, 5, 1, "", "dict_to_delimited_file"], [30, 5, 1, "", "get_directory"], [30, 5, 1, "", "write_line_to_file"]], "arkouda.join": [[31, 5, 1, "", "compute_join_size"], [31, 5, 1, "", "gen_ranges"], [31, 5, 1, "", "join_on_eq_with_dt"]], "arkouda.logger": [[32, 1, 1, "", "LogLevel"], [32, 5, 1, "", "disableVerbose"], [32, 5, 1, "", "enableVerbose"], [32, 5, 1, "", "write_log"]], "arkouda.logger.LogLevel": [[32, 4, 1, "", "CRITICAL"], [32, 4, 1, "", "DEBUG"], [32, 4, 1, "", "ERROR"], [32, 4, 1, "", "INFO"], [32, 4, 1, "", "WARN"]], "arkouda.longdouble": [[26, 2, 1, "", "as_integer_ratio"], [26, 2, 1, "", "is_integer"]], "arkouda.longfloat": [[26, 2, 1, "", "as_integer_ratio"], [26, 2, 1, "", "is_integer"]], "arkouda.longlong": [[26, 2, 1, "", "bit_count"]], "arkouda.match": [[33, 1, 1, "", "Match"]], "arkouda.match.Match": [[103, 2, 1, "", "end"], [103, 2, 1, "", "find_matches"], [103, 2, 1, "", "group"], [103, 2, 1, "", "match_type"], [103, 2, 1, "", "matched"], [33, 4, 1, "", "re"], [103, 2, 1, "", "start"]], "arkouda.matcher": [[34, 1, 1, "", "Matcher"]], "arkouda.matcher.Matcher": [[34, 4, 1, "", "LocationsInfo"], [34, 2, 1, "", "find_locations"], [34, 2, 1, "", "findall"], [34, 4, 1, "", "full_match_bool"], [34, 4, 1, "", "full_match_ind"], [34, 2, 1, "", "get_match"], [34, 4, 1, "", "indices"], [34, 4, 1, "", "lengths"], [34, 4, 1, "", "logger"], [34, 4, 1, "", "match_bool"], [34, 4, 1, "", "match_ind"], [34, 4, 1, "", "num_matches"], [34, 4, 1, "", "objType"], [34, 4, 1, "", "parent_entry_name"], [34, 4, 1, "", "populated"], [34, 4, 1, "", "search_bool"], [34, 4, 1, "", "search_ind"], [34, 2, 1, "", "split"], [34, 4, 1, "", "starts"], [34, 2, 1, "", "sub"]], "arkouda.numpy": [[37, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [37, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [37, 1, 1, "", "BoolDType"], [37, 1, 1, "", "ByteDType"], [37, 1, 1, "", "BytesDType"], [37, 1, 1, "", "CLongDoubleDType"], [37, 1, 1, "", "Complex128DType"], [37, 1, 1, "", "Complex64DType"], [37, 1, 1, "", "DType"], [37, 1, 1, "", "DTypeObjects"], [37, 1, 1, "", "DTypes"], [37, 1, 1, "", "DataSource"], [37, 1, 1, "", "DateTime64DType"], [37, 1, 1, "", "ErrorMode"], [37, 1, 1, "", "False_"], [37, 1, 1, "", "Float16DType"], [37, 1, 1, "", "Float32DType"], [37, 1, 1, "", "Float64DType"], [37, 3, 1, "", "Inf"], [37, 3, 1, "", "Infinity"], [37, 1, 1, "", "Int16DType"], [37, 1, 1, "", "Int32DType"], [37, 1, 1, "", "Int64DType"], [37, 1, 1, "", "Int8DType"], [37, 1, 1, "", "IntDType"], [37, 1, 1, "", "LongDType"], [37, 1, 1, "", "LongDoubleDType"], [37, 1, 1, "", "LongLongDType"], [37, 3, 1, "", "NAN"], [37, 3, 1, "", "NINF"], [37, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [37, 3, 1, "", "NZERO"], [37, 3, 1, "", "NaN"], [37, 1, 1, "", "NumericDTypes"], [37, 1, 1, "", "ObjectDType"], [37, 3, 1, "", "PINF"], [37, 3, 1, "", "PZERO"], [37, 1, 1, "", "RankWarning"], [37, 1, 1, "", "ScalarDTypes"], [37, 1, 1, "", "ScalarType"], [37, 1, 1, "", "SeriesDTypes"], [37, 1, 1, "", "ShortDType"], [37, 1, 1, "", "StrDType"], [37, 1, 1, "", "TimeDelta64DType"], [37, 1, 1, "", "TooHardError"], [37, 1, 1, "", "True_"], [37, 1, 1, "", "UByteDType"], [37, 1, 1, "", "UInt16DType"], [37, 1, 1, "", "UInt32DType"], [37, 1, 1, "", "UInt64DType"], [37, 1, 1, "", "UInt8DType"], [37, 1, 1, "", "UIntDType"], [37, 1, 1, "", "ULongDType"], [37, 1, 1, "", "ULongLongDType"], [37, 1, 1, "", "UShortDType"], [37, 1, 1, "", "VoidDType"], [37, 5, 1, "", "abs"], [37, 5, 1, "", "add_newdoc"], [37, 1, 1, "", "all_scalars"], [37, 5, 1, "", "arccos"], [37, 5, 1, "", "arccosh"], [37, 5, 1, "", "arcsin"], [37, 5, 1, "", "arcsinh"], [37, 5, 1, "", "arctan"], [37, 5, 1, "", "arctan2"], [37, 5, 1, "", "arctanh"], [37, 5, 1, "", "array_equal"], [37, 5, 1, "", "base_repr"], [37, 1, 1, "", "bigint"], [37, 5, 1, "", "binary_repr"], [37, 1, 1, "", "bitType"], [37, 1, 1, "", "bool_"], [37, 1, 1, "", "bool_scalars"], [37, 1, 1, "", "byte"], [37, 1, 1, "", "bytes_"], [37, 5, 1, "", "cast"], [37, 1, 1, "", "cdouble"], [37, 5, 1, "", "ceil"], [37, 1, 1, "", "cfloat"], [37, 1, 1, "", "character"], [37, 5, 1, "", "clip"], [37, 1, 1, "", "clongdouble"], [37, 1, 1, "", "clongfloat"], [37, 1, 1, "", "complex128"], [37, 1, 1, "", "complex64"], [37, 5, 1, "", "cos"], [37, 5, 1, "", "cosh"], [37, 5, 1, "", "count_nonzero"], [37, 1, 1, "", "csingle"], [37, 5, 1, "", "cumprod"], [37, 5, 1, "", "cumsum"], [37, 1, 1, "", "datetime64"], [37, 5, 1, "", "deg2rad"], [37, 5, 1, "", "deprecate"], [37, 5, 1, "", "deprecate_with_doc"], [37, 5, 1, "", "disp"], [37, 1, 1, "", "double"], [37, 5, 1, "", "dtype"], [36, 0, 0, "-", "dtypes"], [37, 3, 1, "", "e"], [37, 3, 1, "", "euler_gamma"], [37, 5, 1, "", "exp"], [37, 5, 1, "", "expm1"], [37, 5, 1, "", "eye"], [37, 1, 1, "", "finfo"], [37, 1, 1, "", "flexible"], [37, 5, 1, "", "flip"], [37, 1, 1, "", "float16"], [37, 1, 1, "", "float32"], [37, 1, 1, "", "float64"], [37, 1, 1, "", "float_"], [37, 1, 1, "", "float_scalars"], [37, 1, 1, "", "floating"], [37, 5, 1, "", "floor"], [37, 5, 1, "", "format_float_positional"], [37, 5, 1, "", "format_float_scientific"], [37, 1, 1, "", "format_parser"], [37, 5, 1, "", "get_byteorder"], [37, 5, 1, "", "get_server_byteorder"], [37, 1, 1, "", "half"], [37, 5, 1, "", "hash"], [37, 5, 1, "", "histogram"], [37, 5, 1, "", "histogram2d"], [37, 5, 1, "", "histogramdd"], [37, 1, 1, "", "iinfo"], [37, 1, 1, "", "inexact"], [37, 3, 1, "", "inf"], [37, 3, 1, "", "infty"], [37, 1, 1, "", "int16"], [37, 1, 1, "", "int32"], [37, 1, 1, "", "int64"], [37, 1, 1, "", "int8"], [37, 1, 1, "", "intTypes"], [37, 1, 1, "", "int_"], [37, 1, 1, "", "int_scalars"], [37, 1, 1, "", "intc"], [37, 1, 1, "", "integer"], [37, 1, 1, "", "intp"], [37, 5, 1, "", "isSupportedBool"], [37, 5, 1, "", "isSupportedDType"], [37, 5, 1, "", "isSupportedFloat"], [37, 5, 1, "", "isSupportedInt"], [37, 5, 1, "", "isSupportedNumber"], [37, 5, 1, "", "isfinite"], [37, 5, 1, "", "isinf"], [37, 5, 1, "", "isnan"], [37, 5, 1, "", "isscalar"], [37, 5, 1, "", "issctype"], [37, 5, 1, "", "issubclass_"], [37, 5, 1, "", "issubdtype"], [37, 5, 1, "", "log"], [37, 5, 1, "", "log10"], [37, 5, 1, "", "log1p"], [37, 5, 1, "", "log2"], [37, 1, 1, "", "longdouble"], [37, 1, 1, "", "longfloat"], [37, 1, 1, "", "longlong"], [37, 5, 1, "", "matmul"], [37, 5, 1, "", "maximum_sctype"], [37, 5, 1, "", "median"], [37, 3, 1, "", "nan"], [37, 1, 1, "", "number"], [37, 1, 1, "", "numeric_and_bool_scalars"], [37, 1, 1, "", "numeric_scalars"], [37, 1, 1, "", "numpy_scalars"], [37, 1, 1, "", "object_"], [37, 3, 1, "", "pi"], [37, 5, 1, "", "putmask"], [37, 5, 1, "", "rad2deg"], [38, 0, 0, "-", "random"], [37, 5, 1, "", "resolve_scalar_dtype"], [37, 5, 1, "", "round"], [37, 1, 1, "", "sctypeDict"], [37, 1, 1, "", "sctypes"], [37, 5, 1, "", "shape"], [37, 1, 1, "", "short"], [37, 5, 1, "", "sign"], [37, 1, 1, "", "signedinteger"], [37, 5, 1, "", "sin"], [37, 1, 1, "", "single"], [37, 5, 1, "", "sinh"], [37, 5, 1, "", "square"], [37, 5, 1, "", "squeeze"], [37, 1, 1, "", "str_"], [37, 1, 1, "", "str_scalars"], [37, 5, 1, "", "tan"], [37, 5, 1, "", "tanh"], [37, 1, 1, "", "timedelta64"], [37, 5, 1, "", "transpose"], [37, 5, 1, "", "tril"], [37, 5, 1, "", "triu"], [37, 5, 1, "", "trunc"], [37, 5, 1, "", "typename"], [37, 1, 1, "", "ubyte"], [37, 1, 1, "", "uint"], [37, 1, 1, "", "uint16"], [37, 1, 1, "", "uint32"], [37, 1, 1, "", "uint64"], [37, 1, 1, "", "uint8"], [37, 1, 1, "", "uintc"], [37, 1, 1, "", "uintp"], [37, 1, 1, "", "ulonglong"], [37, 1, 1, "", "unsignedinteger"], [37, 1, 1, "", "ushort"], [37, 5, 1, "", "value_counts"], [37, 5, 1, "", "vecdot"], [37, 1, 1, "", "void"], [37, 5, 1, "", "where"]], "arkouda.numpy.ARKOUDA_SUPPORTED_DTYPES": [[37, 2, 1, "", "copy"], [37, 2, 1, "", "difference"], [37, 2, 1, "", "intersection"], [37, 2, 1, "", "isdisjoint"], [37, 2, 1, "", "issubset"], [37, 2, 1, "", "issuperset"], [37, 2, 1, "", "symmetric_difference"], [37, 2, 1, "", "union"]], "arkouda.numpy.ARKOUDA_SUPPORTED_INTS": [[37, 2, 1, "", "count"], [37, 2, 1, "", "index"]], "arkouda.numpy.DType": [[37, 2, 1, "", "BIGINT"], [37, 2, 1, "", "BOOL"], [37, 2, 1, "", "COMPLEX128"], [37, 2, 1, "", "COMPLEX64"], [37, 2, 1, "", "FLOAT"], [37, 2, 1, "", "FLOAT32"], [37, 2, 1, "", "FLOAT64"], [37, 2, 1, "", "INT"], [37, 2, 1, "", "INT16"], [37, 2, 1, "", "INT32"], [37, 2, 1, "", "INT64"], [37, 2, 1, "", "INT8"], [37, 2, 1, "", "STR"], [37, 2, 1, "", "UINT"], [37, 2, 1, "", "UINT16"], [37, 2, 1, "", "UINT32"], [37, 2, 1, "", "UINT64"], [37, 2, 1, "", "UINT8"], [37, 2, 1, "", "name"], [37, 2, 1, "", "value"]], "arkouda.numpy.DTypeObjects": [[37, 2, 1, "", "copy"], [37, 2, 1, "", "difference"], [37, 2, 1, "", "intersection"], [37, 2, 1, "", "isdisjoint"], [37, 2, 1, "", "issubset"], [37, 2, 1, "", "issuperset"], [37, 2, 1, "", "symmetric_difference"], [37, 2, 1, "", "union"]], "arkouda.numpy.DTypes": [[37, 2, 1, "", "copy"], [37, 2, 1, "", "difference"], [37, 2, 1, "", "intersection"], [37, 2, 1, "", "isdisjoint"], [37, 2, 1, "", "issubset"], [37, 2, 1, "", "issuperset"], [37, 2, 1, "", "symmetric_difference"], [37, 2, 1, "", "union"]], "arkouda.numpy.DataSource": [[37, 2, 1, "", "abspath"], [37, 2, 1, "", "exists"], [37, 2, 1, "", "open"]], "arkouda.numpy.ErrorMode": [[37, 2, 1, "", "ignore"], [37, 2, 1, "", "name"], [37, 2, 1, "", "return_validity"], [37, 2, 1, "", "strict"], [37, 2, 1, "", "value"]], "arkouda.numpy.NUMBER_FORMAT_STRINGS": [[37, 2, 1, "", "clear"], [37, 2, 1, "", "copy"], [37, 2, 1, "", "fromkeys"], [37, 2, 1, "", "get"], [37, 2, 1, "", "items"], [37, 2, 1, "", "keys"], [37, 2, 1, "", "pop"], [37, 2, 1, "", "popitem"], [37, 2, 1, "", "setdefault"], [37, 2, 1, "", "update"], [37, 2, 1, "", "values"]], "arkouda.numpy.NumericDTypes": [[37, 2, 1, "", "copy"], [37, 2, 1, "", "difference"], [37, 2, 1, "", "intersection"], [37, 2, 1, "", "isdisjoint"], [37, 2, 1, "", "issubset"], [37, 2, 1, "", "issuperset"], [37, 2, 1, "", "symmetric_difference"], [37, 2, 1, "", "union"]], "arkouda.numpy.ScalarDTypes": [[37, 2, 1, "", "copy"], [37, 2, 1, "", "difference"], [37, 2, 1, "", "intersection"], [37, 2, 1, "", "isdisjoint"], [37, 2, 1, "", "issubset"], [37, 2, 1, "", "issuperset"], [37, 2, 1, "", "symmetric_difference"], [37, 2, 1, "", "union"]], "arkouda.numpy.ScalarType": [[37, 2, 1, "", "count"], [37, 2, 1, "", "index"]], "arkouda.numpy.SeriesDTypes": [[37, 2, 1, "", "clear"], [37, 2, 1, "", "copy"], [37, 2, 1, "", "fromkeys"], [37, 2, 1, "", "get"], [37, 2, 1, "", "items"], [37, 2, 1, "", "keys"], [37, 2, 1, "", "pop"], [37, 2, 1, "", "popitem"], [37, 2, 1, "", "setdefault"], [37, 2, 1, "", "update"], [37, 2, 1, "", "values"]], "arkouda.numpy.bigint": [[37, 2, 1, "", "itemsize"], [37, 2, 1, "", "name"], [37, 2, 1, "", "ndim"], [37, 2, 1, "", "shape"], [37, 2, 1, "", "type"]], "arkouda.numpy.bitType": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.byte": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.bytes_": [[37, 2, 1, "", "T"], [37, 2, 1, "", "all"], [37, 2, 1, "", "any"], [37, 2, 1, "", "argmax"], [37, 2, 1, "", "argmin"], [37, 2, 1, "", "argsort"], [37, 2, 1, "", "astype"], [37, 2, 1, "", "base"], [37, 2, 1, "", "byteswap"], [37, 2, 1, "", "choose"], [37, 2, 1, "", "clip"], [37, 2, 1, "", "compress"], [37, 2, 1, "", "conj"], [37, 2, 1, "", "conjugate"], [37, 2, 1, "", "copy"], [37, 2, 1, "", "cumprod"], [37, 2, 1, "", "cumsum"], [37, 2, 1, "", "data"], [37, 2, 1, "", "diagonal"], [37, 2, 1, "", "dtype"], [37, 2, 1, "", "dump"], [37, 2, 1, "", "dumps"], [37, 2, 1, "", "fill"], [37, 2, 1, "", "flags"], [37, 2, 1, "", "flat"], [37, 2, 1, "", "flatten"], [37, 2, 1, "", "getfield"], [37, 2, 1, "", "imag"], [37, 2, 1, "", "item"], [37, 2, 1, "", "itemset"], [37, 2, 1, "", "itemsize"], [37, 2, 1, "", "max"], [37, 2, 1, "", "mean"], [37, 2, 1, "", "min"], [37, 2, 1, "", "nbytes"], [37, 2, 1, "", "ndim"], [37, 2, 1, "", "newbyteorder"], [37, 2, 1, "", "nonzero"], [37, 2, 1, "", "prod"], [37, 2, 1, "", "ptp"], [37, 2, 1, "", "put"], [37, 2, 1, "", "ravel"], [37, 2, 1, "", "real"], [37, 2, 1, "", "repeat"], [37, 2, 1, "", "reshape"], [37, 2, 1, "", "resize"], [37, 2, 1, "", "round"], [37, 2, 1, "", "searchsorted"], [37, 2, 1, "", "setfield"], [37, 2, 1, "", "setflags"], [37, 2, 1, "", "shape"], [37, 2, 1, "", "size"], [37, 2, 1, "", "sort"], [37, 2, 1, "", "squeeze"], [37, 2, 1, "", "std"], [37, 2, 1, "", "strides"], [37, 2, 1, "", "sum"], [37, 2, 1, "", "swapaxes"], [37, 2, 1, "", "take"], [37, 2, 1, "", "tobytes"], [37, 2, 1, "", "tofile"], [37, 2, 1, "", "tolist"], [37, 2, 1, "", "tostring"], [37, 2, 1, "", "trace"], [37, 2, 1, "", "transpose"], [37, 2, 1, "", "var"], [37, 2, 1, "", "view"]], "arkouda.numpy.double": [[37, 2, 1, "", "as_integer_ratio"], [37, 2, 1, "", "fromhex"], [37, 2, 1, "", "hex"], [37, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes": [[36, 1, 1, "", "ARKOUDA_SUPPORTED_BOOLS"], [36, 1, 1, "", "ARKOUDA_SUPPORTED_DTYPES"], [36, 1, 1, "", "ARKOUDA_SUPPORTED_FLOATS"], [36, 1, 1, "", "ARKOUDA_SUPPORTED_INTS"], [36, 1, 1, "", "ARKOUDA_SUPPORTED_NUMBERS"], [36, 1, 1, "", "DType"], [36, 1, 1, "", "DTypeObjects"], [36, 1, 1, "", "DTypes"], [36, 1, 1, "", "Enum"], [36, 1, 1, "", "NUMBER_FORMAT_STRINGS"], [36, 1, 1, "", "NumericDTypes"], [36, 1, 1, "", "ScalarDTypes"], [36, 1, 1, "", "SeriesDTypes"], [36, 1, 1, "", "Union"], [36, 1, 1, "", "all_scalars"], [36, 1, 1, "", "annotations"], [36, 1, 1, "", "bigint"], [36, 1, 1, "", "bitType"], [36, 1, 1, "", "bool_"], [36, 1, 1, "", "bool_scalars"], [36, 5, 1, "", "cast"], [36, 1, 1, "", "complex128"], [36, 1, 1, "", "complex64"], [36, 5, 1, "", "dtype"], [36, 1, 1, "", "float16"], [36, 1, 1, "", "float32"], [36, 1, 1, "", "float64"], [36, 1, 1, "", "float_scalars"], [36, 5, 1, "", "get_byteorder"], [36, 5, 1, "", "get_server_byteorder"], [36, 1, 1, "", "int16"], [36, 1, 1, "", "int32"], [36, 1, 1, "", "int64"], [36, 1, 1, "", "int8"], [36, 1, 1, "", "intTypes"], [36, 1, 1, "", "int_scalars"], [36, 5, 1, "", "isSupportedBool"], [36, 5, 1, "", "isSupportedDType"], [36, 5, 1, "", "isSupportedFloat"], [36, 5, 1, "", "isSupportedInt"], [36, 5, 1, "", "isSupportedNumber"], [36, 1, 1, "", "numeric_and_bool_scalars"], [36, 1, 1, "", "numeric_scalars"], [36, 1, 1, "", "numpy_scalars"], [36, 5, 1, "", "resolve_scalar_dtype"], [36, 1, 1, "", "str_"], [36, 1, 1, "", "str_scalars"], [36, 1, 1, "", "uint16"], [36, 1, 1, "", "uint32"], [36, 1, 1, "", "uint64"], [36, 1, 1, "", "uint8"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_BOOLS": [[36, 2, 1, "", "count"], [36, 2, 1, "", "index"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_DTYPES": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_FLOATS": [[36, 2, 1, "", "count"], [36, 2, 1, "", "index"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_INTS": [[36, 2, 1, "", "count"], [36, 2, 1, "", "index"]], "arkouda.numpy.dtypes.ARKOUDA_SUPPORTED_NUMBERS": [[36, 2, 1, "", "count"], [36, 2, 1, "", "index"]], "arkouda.numpy.dtypes.DType": [[36, 2, 1, "", "BIGINT"], [36, 2, 1, "", "BOOL"], [36, 2, 1, "", "COMPLEX128"], [36, 2, 1, "", "COMPLEX64"], [36, 2, 1, "", "FLOAT"], [36, 2, 1, "", "FLOAT32"], [36, 2, 1, "", "FLOAT64"], [36, 2, 1, "", "INT"], [36, 2, 1, "", "INT16"], [36, 2, 1, "", "INT32"], [36, 2, 1, "", "INT64"], [36, 2, 1, "", "INT8"], [36, 2, 1, "", "STR"], [36, 2, 1, "", "UINT"], [36, 2, 1, "", "UINT16"], [36, 2, 1, "", "UINT32"], [36, 2, 1, "", "UINT64"], [36, 2, 1, "", "UINT8"], [36, 2, 1, "", "name"], [36, 2, 1, "", "value"]], "arkouda.numpy.dtypes.DTypeObjects": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.dtypes.DTypes": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.dtypes.NUMBER_FORMAT_STRINGS": [[36, 2, 1, "", "clear"], [36, 2, 1, "", "copy"], [36, 2, 1, "", "fromkeys"], [36, 2, 1, "", "get"], [36, 2, 1, "", "items"], [36, 2, 1, "", "keys"], [36, 2, 1, "", "pop"], [36, 2, 1, "", "popitem"], [36, 2, 1, "", "setdefault"], [36, 2, 1, "", "update"], [36, 2, 1, "", "values"]], "arkouda.numpy.dtypes.NumericDTypes": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.dtypes.ScalarDTypes": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.dtypes.SeriesDTypes": [[36, 2, 1, "", "clear"], [36, 2, 1, "", "copy"], [36, 2, 1, "", "fromkeys"], [36, 2, 1, "", "get"], [36, 2, 1, "", "items"], [36, 2, 1, "", "keys"], [36, 2, 1, "", "pop"], [36, 2, 1, "", "popitem"], [36, 2, 1, "", "setdefault"], [36, 2, 1, "", "update"], [36, 2, 1, "", "values"]], "arkouda.numpy.dtypes.annotations": [[36, 2, 1, "", "compiler_flag"], [36, 2, 1, "", "getMandatoryRelease"], [36, 2, 1, "", "getOptionalRelease"], [36, 2, 1, "", "mandatory"], [36, 2, 1, "", "optional"]], "arkouda.numpy.dtypes.bigint": [[36, 2, 1, "", "itemsize"], [36, 2, 1, "", "name"], [36, 2, 1, "", "ndim"], [36, 2, 1, "", "shape"], [36, 2, 1, "", "type"]], "arkouda.numpy.dtypes.bitType": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.float16": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes.float32": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes.float64": [[36, 2, 1, "", "as_integer_ratio"], [36, 2, 1, "", "fromhex"], [36, 2, 1, "", "hex"], [36, 2, 1, "", "is_integer"]], "arkouda.numpy.dtypes.int16": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.int32": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.int64": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.int8": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.intTypes": [[36, 2, 1, "", "copy"], [36, 2, 1, "", "difference"], [36, 2, 1, "", "intersection"], [36, 2, 1, "", "isdisjoint"], [36, 2, 1, "", "issubset"], [36, 2, 1, "", "issuperset"], [36, 2, 1, "", "symmetric_difference"], [36, 2, 1, "", "union"]], "arkouda.numpy.dtypes.str_": [[36, 2, 1, "", "T"], [36, 2, 1, "", "all"], [36, 2, 1, "", "any"], [36, 2, 1, "", "argmax"], [36, 2, 1, "", "argmin"], [36, 2, 1, "", "argsort"], [36, 2, 1, "", "astype"], [36, 2, 1, "", "base"], [36, 2, 1, "", "byteswap"], [36, 2, 1, "", "choose"], [36, 2, 1, "", "clip"], [36, 2, 1, "", "compress"], [36, 2, 1, "", "conj"], [36, 2, 1, "", "conjugate"], [36, 2, 1, "", "copy"], [36, 2, 1, "", "cumprod"], [36, 2, 1, "", "cumsum"], [36, 2, 1, "", "data"], [36, 2, 1, "", "diagonal"], [36, 2, 1, "", "dtype"], [36, 2, 1, "", "dump"], [36, 2, 1, "", "dumps"], [36, 2, 1, "", "fill"], [36, 2, 1, "", "flags"], [36, 2, 1, "", "flat"], [36, 2, 1, "", "flatten"], [36, 2, 1, "", "getfield"], [36, 2, 1, "", "imag"], [36, 2, 1, "", "item"], [36, 2, 1, "", "itemset"], [36, 2, 1, "", "itemsize"], [36, 2, 1, "", "max"], [36, 2, 1, "", "mean"], [36, 2, 1, "", "min"], [36, 2, 1, "", "nbytes"], [36, 2, 1, "", "ndim"], [36, 2, 1, "", "newbyteorder"], [36, 2, 1, "", "nonzero"], [36, 2, 1, "", "prod"], [36, 2, 1, "", "ptp"], [36, 2, 1, "", "put"], [36, 2, 1, "", "ravel"], [36, 2, 1, "", "real"], [36, 2, 1, "", "repeat"], [36, 2, 1, "", "reshape"], [36, 2, 1, "", "resize"], [36, 2, 1, "", "round"], [36, 2, 1, "", "searchsorted"], [36, 2, 1, "", "setfield"], [36, 2, 1, "", "setflags"], [36, 2, 1, "", "shape"], [36, 2, 1, "", "size"], [36, 2, 1, "", "sort"], [36, 2, 1, "", "squeeze"], [36, 2, 1, "", "std"], [36, 2, 1, "", "strides"], [36, 2, 1, "", "sum"], [36, 2, 1, "", "swapaxes"], [36, 2, 1, "", "take"], [36, 2, 1, "", "tobytes"], [36, 2, 1, "", "tofile"], [36, 2, 1, "", "tolist"], [36, 2, 1, "", "tostring"], [36, 2, 1, "", "trace"], [36, 2, 1, "", "transpose"], [36, 2, 1, "", "var"], [36, 2, 1, "", "view"]], "arkouda.numpy.dtypes.uint16": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.uint32": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.uint64": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.dtypes.uint8": [[36, 2, 1, "", "bit_count"]], "arkouda.numpy.finfo": [[37, 4, 1, "", "bits"], [37, 4, 1, "", "dtype"], [37, 4, 1, "", "eps"], [37, 4, 1, "", "epsneg"], [37, 4, 1, "", "iexp"], [37, 4, 1, "", "machep"], [37, 4, 1, "", "max"], [37, 4, 1, "", "maxexp"], [37, 4, 1, "", "min"], [37, 4, 1, "", "minexp"], [37, 4, 1, "", "negep"], [37, 4, 1, "", "nexp"], [37, 4, 1, "", "nmant"], [37, 4, 1, "", "precision"], [37, 4, 1, "", "resolution"], [37, 6, 1, "id0", "smallest_normal"], [37, 4, 1, "", "smallest_subnormal"], [37, 6, 1, "id11", "tiny"]], "arkouda.numpy.float16": [[37, 2, 1, "", "as_integer_ratio"], [37, 2, 1, "", "is_integer"]], "arkouda.numpy.float32": [[37, 2, 1, "", "as_integer_ratio"], [37, 2, 1, "", "is_integer"]], "arkouda.numpy.float64": [[37, 2, 1, "", "as_integer_ratio"], [37, 2, 1, "", "fromhex"], [37, 2, 1, "", "hex"], [37, 2, 1, "", "is_integer"]], "arkouda.numpy.float_": [[37, 2, 1, "", "as_integer_ratio"], [37, 2, 1, "", "fromhex"], [37, 2, 1, "", "hex"], [37, 2, 1, "", "is_integer"]], "arkouda.numpy.format_parser": [[37, 4, 1, "", "dtype"]], "arkouda.numpy.half": [[37, 2, 1, "", "as_integer_ratio"], [37, 2, 1, "", "is_integer"]], "arkouda.numpy.iinfo": [[37, 4, 1, "", "bits"], [37, 4, 1, "", "dtype"], [37, 6, 1, "id12", "max"], [37, 6, 1, "id13", "min"]], "arkouda.numpy.int16": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.int32": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.int64": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.int8": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.intTypes": [[37, 2, 1, "", "copy"], [37, 2, 1, "", "difference"], [37, 2, 1, "", "intersection"], [37, 2, 1, "", "isdisjoint"], [37, 2, 1, "", "issubset"], [37, 2, 1, "", "issuperset"], [37, 2, 1, "", "symmetric_difference"], [37, 2, 1, "", "union"]], "arkouda.numpy.int_": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.intc": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.integer": [[37, 2, 1, "", "denominator"], [37, 2, 1, "", "is_integer"], [37, 2, 1, "", "numerator"]], "arkouda.numpy.intp": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.longdouble": [[37, 2, 1, "", "as_integer_ratio"], [37, 2, 1, "", "is_integer"]], "arkouda.numpy.longfloat": [[37, 2, 1, "", "as_integer_ratio"], [37, 2, 1, "", "is_integer"]], "arkouda.numpy.longlong": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.random": [[38, 1, 1, "", "Generator"], [38, 5, 1, "", "default_rng"], [38, 5, 1, "", "randint"], [38, 5, 1, "", "standard_normal"], [38, 5, 1, "", "uniform"]], "arkouda.numpy.random.Generator": [[38, 2, 1, "", "choice"], [38, 2, 1, "", "exponential"], [38, 2, 1, "", "integers"], [38, 2, 1, "", "logistic"], [38, 2, 1, "", "lognormal"], [38, 2, 1, "", "normal"], [38, 2, 1, "", "permutation"], [38, 2, 1, "", "poisson"], [38, 2, 1, "", "random"], [38, 2, 1, "", "shuffle"], [38, 2, 1, "", "standard_exponential"], [38, 2, 1, "", "standard_normal"], [38, 2, 1, "", "uniform"]], "arkouda.numpy.sctypeDict": [[37, 2, 1, "", "clear"], [37, 2, 1, "", "copy"], [37, 2, 1, "", "fromkeys"], [37, 2, 1, "", "get"], [37, 2, 1, "", "items"], [37, 2, 1, "", "keys"], [37, 2, 1, "", "pop"], [37, 2, 1, "", "popitem"], [37, 2, 1, "", "setdefault"], [37, 2, 1, "", "update"], [37, 2, 1, "", "values"]], "arkouda.numpy.sctypes": [[37, 2, 1, "", "clear"], [37, 2, 1, "", "copy"], [37, 2, 1, "", "fromkeys"], [37, 2, 1, "", "get"], [37, 2, 1, "", "items"], [37, 2, 1, "", "keys"], [37, 2, 1, "", "pop"], [37, 2, 1, "", "popitem"], [37, 2, 1, "", "setdefault"], [37, 2, 1, "", "update"], [37, 2, 1, "", "values"]], "arkouda.numpy.short": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.single": [[37, 2, 1, "", "as_integer_ratio"], [37, 2, 1, "", "is_integer"]], "arkouda.numpy.str_": [[37, 2, 1, "", "T"], [37, 2, 1, "", "all"], [37, 2, 1, "", "any"], [37, 2, 1, "", "argmax"], [37, 2, 1, "", "argmin"], [37, 2, 1, "", "argsort"], [37, 2, 1, "", "astype"], [37, 2, 1, "", "base"], [37, 2, 1, "", "byteswap"], [37, 2, 1, "", "choose"], [37, 2, 1, "", "clip"], [37, 2, 1, "", "compress"], [37, 2, 1, "", "conj"], [37, 2, 1, "", "conjugate"], [37, 2, 1, "", "copy"], [37, 2, 1, "", "cumprod"], [37, 2, 1, "", "cumsum"], [37, 2, 1, "", "data"], [37, 2, 1, "", "diagonal"], [37, 2, 1, "", "dtype"], [37, 2, 1, "", "dump"], [37, 2, 1, "", "dumps"], [37, 2, 1, "", "fill"], [37, 2, 1, "", "flags"], [37, 2, 1, "", "flat"], [37, 2, 1, "", "flatten"], [37, 2, 1, "", "getfield"], [37, 2, 1, "", "imag"], [37, 2, 1, "", "item"], [37, 2, 1, "", "itemset"], [37, 2, 1, "", "itemsize"], [37, 2, 1, "", "max"], [37, 2, 1, "", "mean"], [37, 2, 1, "", "min"], [37, 2, 1, "", "nbytes"], [37, 2, 1, "", "ndim"], [37, 2, 1, "", "newbyteorder"], [37, 2, 1, "", "nonzero"], [37, 2, 1, "", "prod"], [37, 2, 1, "", "ptp"], [37, 2, 1, "", "put"], [37, 2, 1, "", "ravel"], [37, 2, 1, "", "real"], [37, 2, 1, "", "repeat"], [37, 2, 1, "", "reshape"], [37, 2, 1, "", "resize"], [37, 2, 1, "", "round"], [37, 2, 1, "", "searchsorted"], [37, 2, 1, "", "setfield"], [37, 2, 1, "", "setflags"], [37, 2, 1, "", "shape"], [37, 2, 1, "", "size"], [37, 2, 1, "", "sort"], [37, 2, 1, "", "squeeze"], [37, 2, 1, "", "std"], [37, 2, 1, "", "strides"], [37, 2, 1, "", "sum"], [37, 2, 1, "", "swapaxes"], [37, 2, 1, "", "take"], [37, 2, 1, "", "tobytes"], [37, 2, 1, "", "tofile"], [37, 2, 1, "", "tolist"], [37, 2, 1, "", "tostring"], [37, 2, 1, "", "trace"], [37, 2, 1, "", "transpose"], [37, 2, 1, "", "var"], [37, 2, 1, "", "view"]], "arkouda.numpy.ubyte": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.uint": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.uint16": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.uint32": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.uint64": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.uint8": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.uintc": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.uintp": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.ulonglong": [[37, 2, 1, "", "bit_count"]], "arkouda.numpy.ushort": [[37, 2, 1, "", "bit_count"]], "arkouda.pdarray": [[26, 4, 1, "id1212", "BinOps"], [26, 4, 1, "id1213", "OpEqOps"], [95, 2, 1, "", "all"], [95, 2, 1, "", "any"], [95, 2, 1, "", "argmax"], [95, 2, 1, "", "argmaxk"], [95, 2, 1, "", "argmin"], [95, 2, 1, "", "argmink"], [26, 2, 1, "id1220", "astype"], [26, 2, 1, "id1221", "attach"], [26, 2, 1, "id1222", "bigint_to_uint_arrays"], [26, 2, 1, "id1223", "clz"], [26, 2, 1, "id1224", "corr"], [26, 2, 1, "id1225", "cov"], [26, 2, 1, "id1226", "ctz"], [97, 4, 1, "", "dtype"], [26, 2, 1, "id1228", "equals"], [26, 2, 1, "id1229", "fill"], [26, 2, 1, "id1230", "flatten"], [26, 2, 1, "id1231", "format_other"], [26, 6, 1, "id1232", "inferred_type"], [26, 2, 1, "id1233", "info"], [26, 2, 1, "id1234", "is_registered"], [95, 2, 1, "", "is_sorted"], [97, 4, 1, "", "itemsize"], [95, 2, 1, "", "max"], [26, 6, 1, "id1238", "max_bits"], [95, 2, 1, "", "maxk"], [95, 2, 1, "", "mean"], [95, 2, 1, "", "min"], [95, 2, 1, "", "mink"], [97, 4, 1, "", "name"], [26, 6, 1, "id1244", "nbytes"], [97, 4, 1, "", "ndim"], [26, 4, 1, "id1246", "objType"], [26, 2, 1, "id1247", "opeq"], [26, 2, 1, "id1248", "parity"], [26, 2, 1, "id1249", "popcount"], [26, 2, 1, "id1250", "pretty_print_info"], [95, 2, 1, "", "prod"], [26, 2, 1, "id1252", "register"], [26, 4, 1, "id1253", "registered_name"], [26, 2, 1, "id1254", "reshape"], [26, 2, 1, "id1255", "rotl"], [26, 2, 1, "id1256", "rotr"], [26, 2, 1, "id1257", "save"], [97, 4, 1, "", "shape"], [97, 4, 1, "", "size"], [26, 2, 1, "id1260", "slice_bits"], [95, 2, 1, "", "std"], [95, 2, 1, "", "sum"], [26, 2, 1, "id1263", "to_csv"], [26, 2, 1, "id1266", "to_cuda"], [26, 2, 1, "id1267", "to_hdf"], [26, 2, 1, "id1268", "to_list"], [97, 5, 1, "", "to_ndarray"], [26, 2, 1, "id1270", "to_parquet"], [26, 2, 1, "id1271", "transfer"], [26, 2, 1, "id1272", "unregister"], [26, 2, 1, "id1273", "update_hdf"], [26, 2, 1, "id1274", "value_counts"], [95, 2, 1, "", "var"]], "arkouda.pdarrayclass": [[39, 7, 1, "", "RegistrationError"], [39, 5, 1, "", "argmaxk"], [39, 5, 1, "", "argmink"], [39, 5, 1, "", "attach_pdarray"], [39, 5, 1, "", "broadcast_to_shape"], [39, 5, 1, "", "clear"], [39, 5, 1, "", "clz"], [39, 5, 1, "", "corr"], [39, 5, 1, "", "cov"], [39, 5, 1, "", "ctz"], [39, 5, 1, "", "divmod"], [39, 5, 1, "", "dot"], [39, 5, 1, "", "fmod"], [39, 5, 1, "", "maxk"], [39, 5, 1, "", "mean"], [39, 5, 1, "", "mink"], [39, 5, 1, "", "mod"], [39, 5, 1, "", "parity"], [39, 1, 1, "", "pdarray"], [39, 5, 1, "", "popcount"], [39, 5, 1, "", "power"], [39, 5, 1, "", "rotl"], [39, 5, 1, "", "rotr"], [39, 5, 1, "", "sqrt"], [39, 5, 1, "", "std"], [39, 5, 1, "", "unregister_pdarray_by_name"], [39, 5, 1, "", "var"]], "arkouda.pdarrayclass.pdarray": [[39, 4, 1, "", "BinOps"], [39, 4, 1, "", "OpEqOps"], [39, 2, 1, "", "all"], [39, 2, 1, "", "any"], [39, 2, 1, "", "argmax"], [39, 2, 1, "", "argmaxk"], [39, 2, 1, "", "argmin"], [39, 2, 1, "", "argmink"], [39, 2, 1, "", "astype"], [39, 2, 1, "", "attach"], [39, 2, 1, "", "bigint_to_uint_arrays"], [39, 2, 1, "", "clz"], [39, 2, 1, "", "corr"], [39, 2, 1, "", "cov"], [39, 2, 1, "", "ctz"], [39, 4, 1, "id0", "dtype"], [39, 2, 1, "", "equals"], [39, 2, 1, "", "fill"], [39, 2, 1, "", "flatten"], [39, 2, 1, "", "format_other"], [39, 6, 1, "", "inferred_type"], [39, 2, 1, "", "info"], [39, 2, 1, "", "is_registered"], [39, 2, 1, "", "is_sorted"], [39, 4, 1, "id1", "itemsize"], [39, 2, 1, "", "max"], [39, 6, 1, "", "max_bits"], [39, 2, 1, "", "maxk"], [39, 2, 1, "", "mean"], [39, 2, 1, "", "min"], [39, 2, 1, "", "mink"], [39, 4, 1, "id2", "name"], [39, 6, 1, "", "nbytes"], [39, 4, 1, "id3", "ndim"], [39, 4, 1, "", "objType"], [39, 2, 1, "", "opeq"], [39, 2, 1, "", "parity"], [39, 2, 1, "", "popcount"], [39, 2, 1, "", "pretty_print_info"], [39, 2, 1, "", "prod"], [39, 2, 1, "", "register"], [39, 4, 1, "", "registered_name"], [39, 2, 1, "", "reshape"], [39, 2, 1, "", "rotl"], [39, 2, 1, "", "rotr"], [39, 2, 1, "", "save"], [39, 6, 1, "id4", "shape"], [39, 4, 1, "id5", "size"], [39, 2, 1, "", "slice_bits"], [39, 2, 1, "", "std"], [39, 2, 1, "", "sum"], [39, 2, 1, "", "to_csv"], [39, 2, 1, "", "to_cuda"], [39, 2, 1, "", "to_hdf"], [39, 2, 1, "", "to_list"], [39, 2, 1, "", "to_ndarray"], [39, 2, 1, "", "to_parquet"], [39, 2, 1, "", "transfer"], [39, 2, 1, "", "unregister"], [39, 2, 1, "", "update_hdf"], [39, 2, 1, "", "value_counts"], [39, 2, 1, "", "var"]], "arkouda.pdarraycreation": [[40, 5, 1, "", "arange"], [40, 5, 1, "", "array"], [40, 5, 1, "", "bigint_from_uint_arrays"], [40, 5, 1, "", "from_series"], [40, 5, 1, "", "full"], [40, 5, 1, "", "full_like"], [40, 5, 1, "", "linspace"], [40, 5, 1, "", "ones"], [40, 5, 1, "", "ones_like"], [40, 5, 1, "", "promote_to_common_dtype"], [40, 5, 1, "", "randint"], [40, 5, 1, "", "random_strings_lognormal"], [40, 5, 1, "", "random_strings_uniform"], [40, 5, 1, "", "scalar_array"], [40, 5, 1, "", "standard_normal"], [40, 5, 1, "", "uniform"], [40, 5, 1, "", "zeros"], [40, 5, 1, "", "zeros_like"]], "arkouda.pdarraymanipulation": [[41, 5, 1, "", "delete"], [41, 5, 1, "", "vstack"]], "arkouda.pdarraysetops": [[42, 5, 1, "", "concatenate"], [42, 5, 1, "", "in1d"], [42, 5, 1, "", "indexof1d"], [42, 5, 1, "", "intersect1d"], [42, 5, 1, "", "setdiff1d"], [42, 5, 1, "", "setxor1d"], [42, 5, 1, "", "union1d"]], "arkouda.plotting": [[43, 5, 1, "", "hist_all"], [43, 5, 1, "", "plot_dist"]], "arkouda.random": [[98, 1, 1, "", "Generator"], [44, 5, 1, "", "default_rng"], [44, 5, 1, "", "randint"], [44, 5, 1, "", "standard_normal"], [44, 5, 1, "", "uniform"]], "arkouda.random.Generator": [[98, 5, 1, "", "choice"], [98, 5, 1, "", "exponential"], [98, 5, 1, "", "integers"], [98, 5, 1, "", "logistic"], [98, 5, 1, "", "lognormal"], [98, 5, 1, "", "normal"], [98, 5, 1, "", "permutation"], [98, 5, 1, "", "poisson"], [98, 5, 1, "", "random"], [98, 5, 1, "", "shuffle"], [98, 5, 1, "", "standard_exponential"], [98, 5, 1, "", "standard_normal"], [98, 5, 1, "", "uniform"]], "arkouda.row": [[45, 1, 1, "", "Row"]], "arkouda.scipy": [[46, 1, 1, "", "Power_divergenceResult"], [46, 5, 1, "", "chisquare"], [46, 5, 1, "", "power_divergence"], [47, 0, 0, "-", "special"], [48, 0, 0, "-", "stats"]], "arkouda.scipy.Power_divergenceResult": [[46, 4, 1, "", "pvalue"], [46, 4, 1, "", "statistic"]], "arkouda.scipy.special": [[47, 5, 1, "", "xlogy"]], "arkouda.scipy.stats": [[48, 1, 1, "", "chi2"]], "arkouda.scipy.stats.chi2": [[48, 2, 1, "", "a"], [48, 2, 1, "", "b"], [48, 2, 1, "", "badvalue"], [48, 2, 1, "", "generic_moment"], [48, 2, 1, "", "moment_type"], [48, 2, 1, "", "name"], [48, 2, 1, "", "numargs"], [48, 2, 1, "", "shapes"], [48, 2, 1, "", "vecentropy"], [48, 2, 1, "", "xtol"]], "arkouda.sctypeDict": [[26, 2, 1, "", "clear"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "fromkeys"], [26, 2, 1, "", "get"], [26, 2, 1, "", "items"], [26, 2, 1, "", "keys"], [26, 2, 1, "", "pop"], [26, 2, 1, "", "popitem"], [26, 2, 1, "", "setdefault"], [26, 2, 1, "", "update"], [26, 2, 1, "", "values"]], "arkouda.sctypes": [[26, 2, 1, "", "clear"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "fromkeys"], [26, 2, 1, "", "get"], [26, 2, 1, "", "items"], [26, 2, 1, "", "keys"], [26, 2, 1, "", "pop"], [26, 2, 1, "", "popitem"], [26, 2, 1, "", "setdefault"], [26, 2, 1, "", "update"], [26, 2, 1, "", "values"]], "arkouda.security": [[49, 5, 1, "", "generate_token"], [49, 5, 1, "", "generate_username_token_json"], [49, 5, 1, "", "get_arkouda_client_directory"], [49, 5, 1, "", "get_home_directory"], [49, 5, 1, "", "get_username"], [49, 3, 1, "", "username_tokenizer"]], "arkouda.segarray": [[50, 3, 1, "", "LEN_SUFFIX"], [50, 3, 1, "", "SEG_SUFFIX"], [50, 1, 1, "", "SegArray"], [50, 3, 1, "", "VAL_SUFFIX"], [50, 5, 1, "", "segarray"]], "arkouda.segarray.SegArray": [[50, 2, 1, "", "AND"], [50, 2, 1, "", "OR"], [50, 2, 1, "", "XOR"], [50, 2, 1, "", "aggregate"], [50, 2, 1, "", "all"], [50, 2, 1, "", "any"], [50, 2, 1, "", "append"], [50, 2, 1, "", "append_single"], [50, 2, 1, "", "argmax"], [50, 2, 1, "", "argmin"], [50, 2, 1, "", "attach"], [50, 2, 1, "", "concat"], [50, 2, 1, "", "copy"], [50, 4, 1, "", "dtype"], [50, 2, 1, "", "filter"], [50, 2, 1, "", "from_multi_array"], [50, 2, 1, "", "from_parts"], [50, 2, 1, "", "from_return_msg"], [50, 2, 1, "", "get_jth"], [50, 2, 1, "", "get_length_n"], [50, 2, 1, "", "get_ngrams"], [50, 2, 1, "", "get_prefixes"], [50, 2, 1, "", "get_suffixes"], [50, 6, 1, "", "grouping"], [50, 2, 1, "", "hash"], [50, 2, 1, "", "intersect"], [50, 2, 1, "", "is_registered"], [50, 2, 1, "", "load"], [50, 4, 1, "", "logger"], [50, 2, 1, "", "max"], [50, 2, 1, "", "mean"], [50, 2, 1, "", "min"], [50, 6, 1, "", "nbytes"], [50, 6, 1, "", "non_empty"], [50, 2, 1, "", "nunique"], [50, 4, 1, "", "objType"], [50, 2, 1, "", "prepend_single"], [50, 2, 1, "", "prod"], [50, 2, 1, "", "read_hdf"], [50, 2, 1, "", "register"], [50, 4, 1, "", "registered_name"], [50, 2, 1, "", "remove_repeats"], [50, 2, 1, "", "save"], [50, 4, 1, "", "segments"], [50, 2, 1, "", "set_jth"], [50, 2, 1, "", "setdiff"], [50, 2, 1, "", "setxor"], [50, 4, 1, "", "size"], [50, 2, 1, "", "sum"], [50, 2, 1, "", "to_hdf"], [50, 2, 1, "", "to_list"], [50, 2, 1, "", "to_ndarray"], [50, 2, 1, "", "to_parquet"], [50, 2, 1, "", "transfer"], [50, 2, 1, "", "union"], [50, 2, 1, "", "unique"], [50, 2, 1, "", "unregister"], [50, 2, 1, "", "unregister_segarray_by_name"], [50, 2, 1, "", "update_hdf"], [50, 4, 1, "", "valsize"], [50, 4, 1, "", "values"]], "arkouda.series": [[51, 1, 1, "", "Series"]], "arkouda.series.Series": [[51, 2, 1, "", "add"], [51, 2, 1, "", "argmax"], [51, 2, 1, "", "argmin"], [51, 6, 1, "", "at"], [51, 2, 1, "", "attach"], [51, 2, 1, "", "concat"], [51, 2, 1, "", "diff"], [51, 2, 1, "", "dt"], [51, 6, 1, "", "dtype"], [51, 2, 1, "", "fillna"], [51, 2, 1, "", "from_return_msg"], [51, 2, 1, "", "has_repeat_labels"], [51, 2, 1, "", "hasnans"], [51, 2, 1, "", "head"], [51, 6, 1, "", "iat"], [51, 6, 1, "", "iloc"], [51, 2, 1, "", "is_registered"], [51, 2, 1, "", "isin"], [51, 2, 1, "", "isna"], [51, 2, 1, "", "isnull"], [51, 6, 1, "", "loc"], [51, 2, 1, "", "locate"], [51, 2, 1, "", "map"], [51, 2, 1, "", "max"], [51, 2, 1, "", "mean"], [51, 2, 1, "", "memory_usage"], [51, 2, 1, "", "min"], [51, 6, 1, "", "ndim"], [51, 2, 1, "", "notna"], [51, 2, 1, "", "notnull"], [51, 2, 1, "", "objType"], [51, 2, 1, "", "pdconcat"], [51, 2, 1, "", "prod"], [51, 2, 1, "", "register"], [51, 6, 1, "", "shape"], [51, 2, 1, "", "sort_index"], [51, 2, 1, "", "sort_values"], [51, 2, 1, "", "std"], [51, 2, 1, "", "str_acc"], [51, 2, 1, "", "sum"], [51, 2, 1, "", "tail"], [51, 2, 1, "", "to_dataframe"], [51, 2, 1, "", "to_list"], [51, 2, 1, "", "to_markdown"], [51, 2, 1, "", "to_ndarray"], [51, 2, 1, "", "to_pandas"], [51, 2, 1, "", "topn"], [51, 2, 1, "", "unregister"], [51, 2, 1, "", "validate_key"], [51, 2, 1, "", "validate_val"], [51, 2, 1, "", "value_counts"], [51, 2, 1, "", "var"]], "arkouda.short": [[26, 2, 1, "", "bit_count"]], "arkouda.single": [[26, 2, 1, "", "as_integer_ratio"], [26, 2, 1, "", "is_integer"]], "arkouda.sorting": [[52, 3, 1, "", "SortingAlgorithm"], [52, 5, 1, "", "argsort"], [52, 5, 1, "", "coargsort"], [52, 5, 1, "", "sort"]], "arkouda.sparray": [[26, 4, 1, "id1280", "dtype"], [26, 2, 1, "", "fill_vals"], [26, 4, 1, "id1281", "itemsize"], [26, 4, 1, "id1282", "layout"], [26, 4, 1, "id1283", "name"], [26, 4, 1, "id1284", "ndim"], [26, 4, 1, "id1285", "nnz"], [26, 4, 1, "id1286", "shape"], [26, 4, 1, "id1287", "size"], [26, 2, 1, "", "to_pdarray"]], "arkouda.sparrayclass": [[53, 5, 1, "", "create_sparray"], [53, 1, 1, "", "sparray"]], "arkouda.sparrayclass.sparray": [[53, 4, 1, "id0", "dtype"], [53, 2, 1, "", "fill_vals"], [53, 4, 1, "id1", "itemsize"], [53, 4, 1, "id2", "layout"], [53, 4, 1, "id3", "name"], [53, 4, 1, "id4", "ndim"], [53, 4, 1, "id5", "nnz"], [53, 4, 1, "id6", "shape"], [53, 4, 1, "id7", "size"], [53, 2, 1, "", "to_pdarray"]], "arkouda.sparsematrix": [[54, 5, 1, "", "create_sparse_matrix"], [54, 5, 1, "", "random_sparse_matrix"], [54, 5, 1, "", "sparse_matrix_matrix_mult"]], "arkouda.str_": [[26, 2, 1, "id1289", "T"], [26, 2, 1, "id1290", "all"], [26, 2, 1, "id1291", "any"], [26, 2, 1, "id1292", "argmax"], [26, 2, 1, "id1293", "argmin"], [26, 2, 1, "id1294", "argsort"], [26, 2, 1, "id1295", "astype"], [26, 2, 1, "id1296", "base"], [26, 2, 1, "id1297", "byteswap"], [26, 2, 1, "id1298", "choose"], [26, 2, 1, "id1299", "clip"], [26, 2, 1, "id1300", "compress"], [26, 2, 1, "id1301", "conj"], [26, 2, 1, "id1302", "conjugate"], [26, 2, 1, "id1303", "copy"], [26, 2, 1, "id1304", "cumprod"], [26, 2, 1, "id1305", "cumsum"], [26, 2, 1, "id1306", "data"], [26, 2, 1, "id1307", "diagonal"], [26, 2, 1, "id1308", "dtype"], [26, 2, 1, "id1309", "dump"], [26, 2, 1, "id1310", "dumps"], [26, 2, 1, "id1311", "fill"], [26, 2, 1, "id1312", "flags"], [26, 2, 1, "id1313", "flat"], [26, 2, 1, "id1314", "flatten"], [26, 2, 1, "id1315", "getfield"], [26, 2, 1, "id1316", "imag"], [26, 2, 1, "id1317", "item"], [26, 2, 1, "id1318", "itemset"], [26, 2, 1, "id1319", "itemsize"], [26, 2, 1, "id1320", "max"], [26, 2, 1, "id1321", "mean"], [26, 2, 1, "id1322", "min"], [26, 2, 1, "id1323", "nbytes"], [26, 2, 1, "id1324", "ndim"], [26, 2, 1, "id1325", "newbyteorder"], [26, 2, 1, "id1326", "nonzero"], [26, 2, 1, "id1327", "prod"], [26, 2, 1, "id1328", "ptp"], [26, 2, 1, "id1329", "put"], [26, 2, 1, "id1330", "ravel"], [26, 2, 1, "id1331", "real"], [26, 2, 1, "id1332", "repeat"], [26, 2, 1, "id1333", "reshape"], [26, 2, 1, "id1334", "resize"], [26, 2, 1, "id1335", "round"], [26, 2, 1, "id1336", "searchsorted"], [26, 2, 1, "id1337", "setfield"], [26, 2, 1, "id1338", "setflags"], [26, 2, 1, "id1339", "shape"], [26, 2, 1, "id1340", "size"], [26, 2, 1, "id1341", "sort"], [26, 2, 1, "id1342", "squeeze"], [26, 2, 1, "id1343", "std"], [26, 2, 1, "id1344", "strides"], [26, 2, 1, "id1345", "sum"], [26, 2, 1, "id1346", "swapaxes"], [26, 2, 1, "id1347", "take"], [26, 2, 1, "id1348", "tobytes"], [26, 2, 1, "id1349", "tofile"], [26, 2, 1, "id1350", "tolist"], [26, 2, 1, "id1351", "tostring"], [26, 2, 1, "id1352", "trace"], [26, 2, 1, "id1353", "transpose"], [26, 2, 1, "id1354", "var"], [26, 2, 1, "id1355", "view"]], "arkouda.strings": [[55, 1, 1, "", "Strings"]], "arkouda.strings.Strings": [[55, 4, 1, "", "BinOps"], [55, 2, 1, "", "astype"], [55, 2, 1, "", "attach"], [55, 2, 1, "", "cached_regex_patterns"], [55, 2, 1, "", "capitalize"], [55, 2, 1, "", "contains"], [55, 2, 1, "", "decode"], [55, 4, 1, "id0", "dtype"], [55, 2, 1, "", "encode"], [55, 2, 1, "", "endswith"], [55, 4, 1, "id1", "entry"], [55, 2, 1, "", "equals"], [55, 2, 1, "", "find_locations"], [55, 2, 1, "", "findall"], [55, 2, 1, "", "flatten"], [55, 2, 1, "", "from_parts"], [55, 2, 1, "", "from_return_msg"], [55, 2, 1, "", "fullmatch"], [55, 2, 1, "", "get_bytes"], [55, 2, 1, "", "get_lengths"], [55, 2, 1, "", "get_offsets"], [55, 2, 1, "", "get_prefixes"], [55, 2, 1, "", "get_suffixes"], [55, 2, 1, "", "group"], [55, 2, 1, "", "hash"], [55, 6, 1, "", "inferred_type"], [55, 2, 1, "", "info"], [55, 2, 1, "", "is_registered"], [55, 2, 1, "", "isalnum"], [55, 2, 1, "", "isalpha"], [55, 2, 1, "", "isdecimal"], [55, 2, 1, "", "isdigit"], [55, 2, 1, "", "isempty"], [55, 2, 1, "", "islower"], [55, 2, 1, "", "isspace"], [55, 2, 1, "", "istitle"], [55, 2, 1, "", "isupper"], [55, 4, 1, "id2", "logger"], [55, 2, 1, "", "lower"], [55, 2, 1, "", "lstick"], [55, 2, 1, "", "match"], [55, 4, 1, "", "nbytes"], [55, 4, 1, "", "ndim"], [55, 4, 1, "", "objType"], [55, 2, 1, "", "peel"], [55, 2, 1, "", "pretty_print_info"], [55, 2, 1, "", "purge_cached_regex_patterns"], [55, 2, 1, "", "regex_split"], [55, 2, 1, "", "register"], [55, 4, 1, "", "registered_name"], [55, 2, 1, "", "rpeel"], [55, 2, 1, "", "save"], [55, 2, 1, "", "search"], [55, 4, 1, "", "shape"], [55, 4, 1, "", "size"], [55, 2, 1, "", "split"], [55, 2, 1, "", "startswith"], [55, 2, 1, "", "stick"], [55, 2, 1, "", "strip"], [55, 2, 1, "", "sub"], [55, 2, 1, "", "subn"], [55, 2, 1, "", "title"], [55, 2, 1, "", "to_csv"], [55, 2, 1, "", "to_hdf"], [55, 2, 1, "", "to_list"], [55, 2, 1, "", "to_ndarray"], [55, 2, 1, "", "to_parquet"], [55, 2, 1, "", "transfer"], [55, 2, 1, "", "unregister"], [55, 2, 1, "", "unregister_strings_by_name"], [55, 2, 1, "", "update_hdf"], [55, 2, 1, "", "upper"]], "arkouda.testing": [[56, 5, 1, "", "assert_almost_equal"], [56, 5, 1, "", "assert_almost_equivalent"], [56, 5, 1, "", "assert_arkouda_array_equal"], [56, 5, 1, "", "assert_arkouda_array_equivalent"], [56, 5, 1, "", "assert_arkouda_pdarray_equal"], [56, 5, 1, "", "assert_arkouda_segarray_equal"], [56, 5, 1, "", "assert_arkouda_strings_equal"], [56, 5, 1, "", "assert_attr_equal"], [56, 5, 1, "", "assert_categorical_equal"], [56, 5, 1, "", "assert_class_equal"], [56, 5, 1, "", "assert_contains_all"], [56, 5, 1, "", "assert_copy"], [56, 5, 1, "", "assert_dict_equal"], [56, 5, 1, "", "assert_equal"], [56, 5, 1, "", "assert_equivalent"], [56, 5, 1, "", "assert_frame_equal"], [56, 5, 1, "", "assert_frame_equivalent"], [56, 5, 1, "", "assert_index_equal"], [56, 5, 1, "", "assert_index_equivalent"], [56, 5, 1, "", "assert_is_sorted"], [56, 5, 1, "", "assert_series_equal"], [56, 5, 1, "", "assert_series_equivalent"]], "arkouda.timeclass": [[57, 1, 1, "", "Datetime"], [57, 1, 1, "", "Timedelta"], [57, 5, 1, "", "date_range"], [57, 5, 1, "", "timedelta_range"]], "arkouda.timeclass.Datetime": [[57, 6, 1, "", "date"], [57, 6, 1, "", "day"], [57, 6, 1, "", "day_of_week"], [57, 6, 1, "", "day_of_year"], [57, 6, 1, "", "dayofweek"], [57, 6, 1, "", "dayofyear"], [57, 6, 1, "", "hour"], [57, 6, 1, "", "is_leap_year"], [57, 2, 1, "", "is_registered"], [57, 2, 1, "", "isocalendar"], [57, 6, 1, "", "microsecond"], [57, 6, 1, "", "millisecond"], [57, 6, 1, "", "minute"], [57, 6, 1, "", "month"], [57, 6, 1, "", "nanosecond"], [57, 2, 1, "", "register"], [57, 6, 1, "", "second"], [57, 4, 1, "", "special_objType"], [57, 2, 1, "", "sum"], [57, 4, 1, "", "supported_opeq"], [57, 4, 1, "", "supported_with_datetime"], [57, 4, 1, "", "supported_with_pdarray"], [57, 4, 1, "", "supported_with_r_datetime"], [57, 4, 1, "", "supported_with_r_pdarray"], [57, 4, 1, "", "supported_with_r_timedelta"], [57, 4, 1, "", "supported_with_timedelta"], [57, 2, 1, "", "to_pandas"], [57, 2, 1, "", "unregister"], [57, 6, 1, "", "week"], [57, 6, 1, "", "weekday"], [57, 6, 1, "", "weekofyear"], [57, 6, 1, "", "year"]], "arkouda.timeclass.Timedelta": [[57, 2, 1, "", "abs"], [57, 6, 1, "", "components"], [57, 6, 1, "", "days"], [57, 2, 1, "", "is_registered"], [57, 6, 1, "", "microseconds"], [57, 6, 1, "", "nanoseconds"], [57, 2, 1, "", "register"], [57, 6, 1, "", "seconds"], [57, 4, 1, "", "special_objType"], [57, 2, 1, "", "std"], [57, 2, 1, "", "sum"], [57, 4, 1, "", "supported_opeq"], [57, 4, 1, "", "supported_with_datetime"], [57, 4, 1, "", "supported_with_pdarray"], [57, 4, 1, "", "supported_with_r_datetime"], [57, 4, 1, "", "supported_with_r_pdarray"], [57, 4, 1, "", "supported_with_r_timedelta"], [57, 4, 1, "", "supported_with_timedelta"], [57, 2, 1, "", "to_pandas"], [57, 2, 1, "", "total_seconds"], [57, 2, 1, "", "unregister"]], "arkouda.ubyte": [[26, 2, 1, "", "bit_count"]], "arkouda.uint": [[26, 2, 1, "", "bit_count"]], "arkouda.uint16": [[26, 2, 1, "", "bit_count"]], "arkouda.uint32": [[26, 2, 1, "", "bit_count"]], "arkouda.uint64": [[26, 2, 1, "", "bit_count"]], "arkouda.uint8": [[26, 2, 1, "", "bit_count"]], "arkouda.uintc": [[26, 2, 1, "", "bit_count"]], "arkouda.uintp": [[26, 2, 1, "", "bit_count"]], "arkouda.ulonglong": [[26, 2, 1, "", "bit_count"]], "arkouda.ushort": [[26, 2, 1, "", "bit_count"]], "arkouda.util": [[58, 5, 1, "", "attach"], [58, 5, 1, "", "attach_all"], [58, 5, 1, "", "broadcast_dims"], [58, 5, 1, "", "concatenate"], [58, 5, 1, "", "convert_bytes"], [58, 5, 1, "", "convert_if_categorical"], [58, 5, 1, "", "enrich_inplace"], [58, 5, 1, "", "expand"], [58, 5, 1, "", "generic_concat"], [58, 5, 1, "", "get_callback"], [58, 5, 1, "", "identity"], [58, 5, 1, "", "invert_permutation"], [58, 5, 1, "", "is_float"], [58, 5, 1, "", "is_int"], [58, 5, 1, "", "is_numeric"], [58, 5, 1, "", "is_registered"], [58, 5, 1, "", "map"], [58, 5, 1, "", "most_common"], [58, 5, 1, "", "register"], [58, 5, 1, "", "register_all"], [58, 5, 1, "", "report_mem"], [58, 5, 1, "", "sparse_sum_help"], [58, 5, 1, "", "unregister"], [58, 5, 1, "", "unregister_all"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:attribute", "5": "py:function", "6": "py:property", "7": "py:exception"}, "terms": {"": [0, 1, 2, 3, 5, 8, 9, 12, 15, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 36, 37, 38, 39, 44, 48, 49, 50, 51, 53, 55, 56, 57, 58, 60, 63, 64, 68, 77, 79, 80, 83, 84, 85, 87, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 103], "0": [0, 3, 4, 5, 6, 9, 12, 16, 18, 19, 22, 23, 24, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 68, 69, 70, 75, 79, 80, 82, 83, 85, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "00": [22, 26, 37, 61], "00000000000000000": [22, 24, 26, 27, 37, 40, 47, 58, 90, 92, 93, 94, 95], "00000000000003": [24, 26, 94], "00012": [26, 37], "00018361238254747651": 61, "0001_0d4865d7c9453adc6af6409568da326845c358b9_20230406_165330": 61, "0002": 61, "0002090000002681336": 61, "0009575499998391024": 61, "001": 48, "0011": [26, 37], "001326192548940973": 61, "0014_31de39be8b19c76d073a8999def6673a305c250d_20230405_145759_uncommit": 61, "0015_31de39be8b19c76d073a8999def6673a305c250d_20230405_145947_uncommit": 61, "0024": [26, 37], "00383609999971668": 61, "0039507749997937935": 61, "0040258999997604406": 61, "004057779999857303": 61, "004066600000442122": 61, "004131924999910552": 61, "004159775000061927": 61, "004246700000294368": 61, "0043372999998609885": 61, "0048064200000226265": 61, "005089474999749655": 61, "007168699999965611": 61, "01": [26, 37, 40, 48, 61, 64, 66], "011410423448327005": [26, 40, 92], "013": 95, "0197": 61, "01t00": [26, 37], "02": 61, "020288899999286514": 61, "021728052940979934": [38, 44, 98], "024032100000113132": 61, "03": 61, "030785499755523249": [38, 44, 98], "03960235520756414": [26, 46], "04": [61, 83], "04380595350226197": [26, 46], "0441791878997098": [26, 38, 40, 44], "0472855509390593": [26, 37, 90], "04t12": 61, "04t16": 61, "05": [26, 56], "05309592737584": [26, 37, 90], "0532529435624589": [38, 44, 98], "0550596900172": 61, "055256829926011691": [38, 44, 98], "0598322696795694": [38, 44, 98], "05t15": 61, "06": 61, "0625": [22, 26], "07": 61, "07734942223993": 95, "08": [26, 56], "083130710959903542": [38, 44], "08505865366367038": [38, 44, 98], "085536923187668": [26, 37, 90], "0889": 61, "089433234324597599": [26, 40], "09": [61, 79], "0954451150103321": [24, 26, 94], "097392": 61, "0986122886681098": [26, 37], "0b10": [26, 39], "0b100": [23, 26, 36, 37, 48], "0b101111111111111111111111111111111111111111111111111111111111111111": [26, 39], "0d": [26, 37], "0x1": [23, 26, 36, 37], "0x1p": [23, 26, 36, 37], "0x7f2cf23e10c0": [22, 26, 93], "0x91d4430": [26, 37], "1": [0, 1, 3, 4, 6, 8, 11, 12, 15, 17, 18, 19, 22, 23, 24, 26, 27, 29, 31, 33, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 68, 69, 70, 73, 75, 79, 80, 81, 82, 83, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "10": [3, 4, 8, 18, 22, 23, 24, 26, 29, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 50, 51, 52, 55, 58, 60, 61, 68, 80, 82, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100], "100": [22, 26, 37, 39, 43, 48, 51, 58, 61, 68, 90], "1000": [22, 26, 27, 31, 48, 88, 95], "10000": 19, "100000": 68, "100000000": 85, "1000000000000001": [26, 37], "100x40": [5, 9], "101": [26, 37, 55], "1024": [1, 26, 39], "104": [26, 55], "105": [0, 19, 78], "106": [38, 44, 98], "1073741824": [22, 26, 93], "1074": [23, 26, 36, 37], "108": [24, 26, 94], "109302162163285": [26, 46], "10_000": [4, 26], "11": [3, 22, 23, 26, 36, 37, 42, 50, 58, 61, 66, 68, 69, 90, 93, 95, 96, 99], "110": [26, 55], "110680464442257309696": [3, 26], "110680464442257309708": [3, 26], "1109": [26, 37], "111": [22, 26, 55, 93], "11101": [26, 37], "11111111111111116": [24, 26, 94], "114": [26, 55], "1153776854774361": [26, 40], "116": [26, 55], "119": [26, 55], "11e": [26, 37], "12": [3, 22, 24, 26, 29, 37, 42, 46, 50, 55, 58, 61, 77, 82, 83, 90, 94, 96, 99], "120": [26, 55], "121": [26, 55], "122": [26, 55], "1234": [18, 22, 26, 29, 39, 50, 55, 64], "1235": [18, 22, 26, 29, 39, 50, 55], "1236": [18, 22, 26, 29, 39, 50, 55], "12367222192448891": [26, 40, 92], "1237": [18, 22, 26, 29, 39, 50, 55], "127": [23, 26, 36, 37, 62], "128": [18, 23, 26, 36, 37, 50, 55], "12gb": 83, "13": [3, 26, 37, 38, 42, 44, 58, 61, 79, 82, 90, 95, 96, 98], "1319566682702642": [38, 44, 98], "134": [26, 37, 90], "14": [3, 22, 24, 26, 37, 38, 42, 44, 48, 55, 61, 68, 69, 90, 94, 96, 98], "14159": [23, 26, 36, 37], "1415927": [26, 37], "1415927e": [26, 37], "1436": 61, "15": [3, 18, 22, 26, 37, 38, 42, 44, 55, 96, 98], "1514764800000000000": [26, 40], "15461882265": 75, "158": 61, "1598310770203937": [26, 37, 90], "16": [22, 23, 24, 26, 36, 37, 38, 44, 58, 61, 62, 79, 80, 90, 94, 96, 98], "160": [26, 39], "1622479306453748": [26, 37, 90], "16400145561571539": [38, 44, 98], "166020696663385964564": [3, 26], "166020696663385964574": [3, 26], "1665150633720014": [38, 44, 98], "17": [22, 26, 37, 38, 44, 61, 68, 96, 98], "1701": [26, 40, 92], "1723810583573375": [38, 44], "1723810583573377": [26, 40], "18": [22, 24, 26, 38, 39, 44, 61, 90, 94, 96, 98], "18446744073709551616": [26, 39, 40], "18446744073709551617": [26, 39, 40], "18446744073709551618": [26, 39, 40], "18446744073709551619": [26, 39, 40], "18446744073709551620": [26, 39, 40], "1864": [26, 40], "1882": 61, "18_446_744_073_709_551_615": [23, 26, 36, 37], "19": [26, 37, 58, 96], "1923875335537315": [38, 44, 98], "196608": 61, "1970": [26, 37], "1980": [26, 37], "1_2___": [26, 33, 55, 103], "1d": [6, 10, 12, 16, 26, 37, 42, 50, 51, 60, 99, 100, 101], "1e": [26, 48, 56], "1string": [26, 55], "2": [0, 3, 4, 8, 18, 22, 23, 24, 26, 27, 29, 33, 36, 37, 38, 39, 40, 42, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 58, 60, 61, 62, 64, 68, 69, 70, 77, 79, 80, 81, 82, 83, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "20": [1, 3, 5, 9, 22, 26, 37, 38, 42, 44, 46, 64, 68, 82, 83, 90, 96, 98], "2000": 61, "2000000000000002": [26, 37], "2008": [26, 37], "20159494048757": [38, 44, 98], "2018": [26, 40], "2020": 61, "2022": 80, "2023": [61, 79], "2024": [26, 46], "2047": [23, 26, 36, 37], "2048": [26, 39], "208": 61, "2080": 61, "20ghz": 61, "21": [3, 26, 37, 90], "210": 61, "2147483647": [26, 37], "2147483648": [26, 37], "21589865655358": [26, 37, 90], "22": [3, 23, 26, 36, 37, 90], "2200000000": 61, "2207999000": 61, "222": [22, 26, 93], "2250": 61, "22e": [26, 37], "23": [3, 23, 26, 36, 37, 39], "230000071797338e": [26, 37], "2324_pytest_benchmark_doc": 61, "236": 61, "23e": [26, 37], "23e24": [26, 37], "24": [3, 26, 27, 37, 39, 51, 61, 82, 90], "246": 61, "25": [3, 22, 23, 24, 26, 27, 29, 36, 37, 39, 40, 51, 58, 92, 94], "255": [23, 26, 36, 37], "256": [26, 39, 61], "2561": 61, "25x": [26, 37], "26": 61, "263": 61, "264": 61, "267": 61, "27": [22, 26, 39, 61, 68], "28": 58, "281": 61, "290": [22, 26], "298": [22, 26], "2_147_483_647": [23, 26, 36, 37], "2_147_483_648": [23, 26, 36, 37], "2d": [5, 6, 9, 26, 40], "2\u00b3x\u2087": [26, 55], "2\u00b3\u2087": [26, 55], "3": [3, 4, 22, 23, 24, 26, 27, 29, 33, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 50, 51, 52, 55, 56, 58, 60, 61, 68, 69, 70, 79, 80, 82, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103], "30": [3, 26, 27, 46, 51, 58, 65], "3000": [26, 51], "3000000000000007": [26, 37], "3000488281": [26, 37], "30013431967121934": [26, 38, 40, 44], "3025850929940459": [26, 37, 90], "31": [64, 83], "3141": [26, 37], "317766166719343": [26, 47], "31de39be8b19c76d073a8999def6673a305c250d": 61, "32": [22, 23, 26, 29, 36, 37, 39, 49, 61, 68, 70], "3219280948873626": [26, 37, 90], "324": [23, 26, 36, 37], "32767": [26, 37], "32768": [26, 37], "32_767": [23, 26, 36, 37], "32_768": [23, 26, 36, 37], "33": [26, 37, 90], "3304": 61, "3306": 61, "333": [22, 26, 93], "333333333333333": [24, 26, 94], "33333333333333326": [24, 26, 94], "33333333333333337": [24, 26, 94], "33333333333333348": [24, 26, 94], "333333333333334": [26, 46], "35": 68, "350": 61, "35000": 68, "353429832157099": [38, 44], "36": [23, 26, 36, 37, 48, 95], "3620": 61, "3673425816523577": [38, 44, 98], "36893488147419103233": [3, 26], "37": 68, "3805": 61, "384": [26, 39], "38552048588998722": [38, 44, 98], "3862943611198906": [26, 37], "3866978126031091": [38, 44, 98], "3890560989306504": [26, 37, 90], "39": [22, 26, 61], "3dnowprefetch": 61, "3w": [23, 26, 36, 37], "4": [3, 5, 9, 18, 22, 23, 24, 26, 27, 29, 33, 36, 37, 38, 39, 40, 42, 44, 47, 48, 50, 51, 52, 55, 56, 58, 61, 68, 70, 79, 80, 82, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103], "40000": [22, 26], "4000000000000004": [26, 37], "4097": 61, "4110385860243131": [26, 37, 90], "4142135623730951": [26, 39], "41619265571741659": [26, 40], "4177": 61, "42": 96, "4231": 61, "4298": 61, "4328": 61, "44017172817806": 61, "4444": 61, "45": [26, 37], "450": [26, 37, 90], "454368507659211": [26, 37, 90], "457": 19, "459": [22, 26], "46": [26, 37, 51, 90], "4608": [26, 39], "4610935": [26, 37], "4621": 61, "4657359027997265": [26, 47], "47108547995356098": [38, 44, 98], "47383036230759112": [26, 38, 40, 44], "478894913238722": [26, 37, 90], "48": [26, 27, 51], "4869": 61, "4875": 61, "49": [26, 37], "4930614433405491": [26, 47], "494295836924771": [26, 37, 90], "4_294_967_295": [23, 26, 36, 37], "5": [3, 18, 19, 22, 23, 24, 26, 27, 36, 37, 38, 39, 40, 42, 44, 46, 47, 48, 50, 51, 52, 55, 56, 58, 61, 68, 69, 70, 72, 80, 82, 87, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 103], "50": [5, 9, 61, 68], "500": [19, 62, 65], "5000": [22, 26], "512": [26, 39], "51874393620990389": [26, 40], "52": [23, 26, 36, 37, 68], "5246": 61, "5255": 61, "5275252316519465": [24, 26, 94], "53": [26, 37], "5306": 61, "5392023718621486": [38, 44], "54": [26, 37, 90], "5424399190667666": [38, 44, 98], "55": [26, 37, 48], "5541": 61, "5555": [19, 75, 102], "55555555555555536": [24, 26, 94], "55555555555555558": [24, 26, 94], "5571769623557188": [26, 37, 90], "56": [26, 39, 69], "5622": 61, "5652": 61, "567584107142031": [26, 38, 40, 44], "57": 61, "5728783400481925": [26, 37, 90], "57600036956445599": [26, 40], "58": 61, "5801": 61, "5835189384561099": [26, 47], "5837": 61, "598150033144236": [26, 37, 90], "5____6___7": [26, 55, 103], "5e": [23, 26, 36, 37, 61], "5h": [26, 57], "6": [3, 22, 24, 26, 27, 29, 37, 39, 40, 42, 47, 48, 50, 52, 55, 58, 61, 68, 79, 80, 82, 83, 85, 87, 89, 90, 92, 93, 94, 95, 96, 99, 101, 103], "60": [26, 39], "6000000000000001": [26, 37], "600000000000001": [26, 37], "6051701859880918": [26, 37, 90], "6094379124341003": [26, 37, 47], "61": [26, 39], "6125": 61, "62": [22, 26, 39, 61], "62511314008006458": [38, 44, 98], "63": [26, 37, 39, 97], "64": [20, 23, 26, 29, 36, 37, 38, 39, 40, 44, 60, 61, 92, 93, 97], "6438561897747253": [26, 37, 90], "6450": 61, "6465": 61, "647": 19, "64bit": 61, "65": [26, 39], "65_535": [23, 26, 36, 37], "6615356693784662": [26, 40], "6666666666666665": [24, 26, 94], "67": [22, 26], "68586185091150265": [26, 38, 40, 44], "6864": 61, "68894208386667544": [38, 44], "69314718055994529": [26, 37], "7": [3, 22, 23, 24, 26, 27, 36, 37, 38, 39, 40, 42, 44, 47, 50, 51, 52, 58, 68, 79, 80, 82, 87, 89, 90, 92, 93, 94, 96, 98, 99, 101], "70": [26, 37], "7085325853376141": [38, 44, 98], "71": 68, "710615785506533": [26, 37, 90], "7182818284590451": [26, 37, 90], "7208667145173608": [38, 44, 98], "7320508075688772": [26, 39], "7336": 61, "73618171558685619": [26, 40, 92], "75": [24, 26, 40, 92, 94], "75000": 68, "754": [26, 37], "7544": 61, "7659": 61, "77": [22, 26], "77000": 68, "77777777777777768": [24, 26, 94], "77777777777777779": [24, 26, 94], "7852": 61, "78523998586553": [26, 37, 90], "79": 61, "7912": 61, "7999999999999998": [24, 26, 94], "7wjef": [26, 40], "8": [3, 22, 23, 24, 26, 29, 36, 37, 38, 39, 40, 42, 44, 46, 47, 50, 52, 55, 56, 61, 62, 63, 68, 69, 79, 80, 82, 83, 87, 89, 90, 92, 93, 94, 96, 97, 98, 99], "80": 68, "8000000000000007": [26, 37], "8075": 61, "81": [26, 37], "8377304471659395": [26, 47], "8380": 61, "84": 68, "84010843172504": [26, 37, 90], "86": [22, 26], "8601": [26, 37], "8675309": [26, 40], "87": 61, "875": [26, 51], "8750h": 61, "8797352989638163": [38, 44, 98], "88": 61, "8800": 61, "88281": [22, 26], "896": [26, 39], "9": [3, 18, 22, 24, 26, 29, 37, 39, 40, 42, 50, 52, 55, 58, 61, 68, 79, 80, 82, 87, 89, 90, 92, 93, 94, 95, 96, 99, 103], "90": 61, "9012": 61, "9160772326374946": [38, 44], "9177": 61, "92176432277231968": [38, 44], "921f9f01b866ep": [23, 26, 36, 37], "9223372036854775807": [23, 26, 36, 37], "92233720368547758085": [3, 26], "92233720368547758090": [3, 26], "92233720368547758091": [3, 26], "92233720368547758095": [3, 26], "931": 82, "9314718055994531": [26, 47], "934176000000015": 95, "9362": 19, "94": 61, "9437184": 61, "9442193396379163": 26, "945880905466208": [26, 37, 90], "96": [26, 39], "9602": 19, "9683": 19, "984375": [23, 26, 36, 37], "99": [22, 26, 48, 61, 93], "999": 48, "9991": 61, "99999": 0, "9999999999999982": [24, 26, 94], "999999999999ap": [23, 26, 36, 37], "9_223_372_036_854_775_807": [23, 26, 36, 37], "9_223_372_036_854_775_808": [23, 26, 36, 37], "A": [1, 2, 10, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 53, 54, 55, 58, 64, 68, 74, 85, 87, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103], "AND": [8, 24, 26, 50, 86, 94], "And": [48, 97], "As": [0, 26, 37, 39, 48, 51, 53, 55, 64, 69, 71, 79, 80, 87, 90, 97, 100, 103], "At": [26, 37, 39, 90], "Be": [0, 22, 26, 27, 29, 39, 55, 60], "But": [3, 26], "By": [18, 20, 21, 22, 24, 26, 27, 29, 37, 39, 42, 50, 55, 56, 57, 83, 94, 101, 103], "For": [0, 2, 3, 4, 5, 9, 18, 22, 23, 24, 26, 29, 33, 36, 37, 38, 40, 42, 44, 48, 52, 55, 57, 58, 60, 61, 65, 68, 73, 75, 77, 79, 80, 81, 84, 87, 89, 92, 94, 95, 96, 97, 98, 99, 101, 103], "IN": 68, "If": [0, 1, 3, 4, 6, 10, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 29, 30, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 48, 50, 51, 53, 55, 56, 57, 58, 60, 62, 63, 64, 65, 69, 70, 72, 75, 77, 79, 80, 81, 83, 84, 87, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103], "In": [18, 22, 23, 24, 26, 29, 36, 37, 38, 39, 44, 55, 60, 61, 62, 64, 65, 68, 75, 77, 78, 79, 81, 83, 87, 90, 94, 95, 96, 98, 99, 102, 103], "It": [0, 5, 20, 22, 26, 37, 39, 49, 50, 56, 58, 60, 62, 63, 66, 68, 69, 70, 72, 75, 79, 80, 83, 93, 94, 99], "Its": [38, 44, 98], "NO": 61, "NOT": [8, 22, 26, 27, 29, 37, 39, 55, 77, 87, 97], "No": [26, 39, 77, 83], "Not": [8, 26, 29, 37, 51, 57, 61, 93], "ONE": 70, "OR": [8, 24, 26, 50, 64, 86, 94], "Of": [26, 57], "On": [18, 19, 26, 102], "One": [22, 24, 26, 27, 37, 39, 51, 58, 60, 68, 94, 100], "Ones": [26, 40, 92], "Or": [4, 26, 37, 64, 78], "The": [0, 1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 68, 69, 70, 71, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103], "Then": [26, 56], "There": [1, 23, 24, 26, 29, 36, 37, 61, 68, 77, 78, 79, 80, 83, 92, 101], "These": [1, 22, 23, 26, 36, 37, 51, 68, 70, 73, 75, 87], "To": [0, 1, 22, 23, 24, 26, 29, 36, 37, 38, 44, 48, 57, 60, 61, 62, 66, 69, 75, 77, 80, 81, 83, 91, 93, 95, 97, 98, 103], "Will": 61, "With": [24, 26, 37, 60, 81, 94, 96], "_": [3, 24, 26, 33, 37, 55, 94, 103], "__": [26, 33, 55, 103], "__4___5____6___7": [26, 33, 55, 103], "___": [26, 55, 103], "____": [26, 33, 55, 103], "__all__": 60, "__allsymbols__": [26, 28], "__array_function__": 5, "__dict__": 81, "__init__": [2, 26], "__int__": [23, 26, 36, 37, 48], "__name__": [26, 37], "__registeredsymbols__": [26, 28], "__str__": [22, 23, 24, 26, 36, 37, 48, 51], "_abstractbasetim": [26, 57], "_b3yc": [26, 40], "_base_unit": [26, 57], "_distn_infrastructur": 48, "_equal": [26, 56], "_equival": [26, 56], "_filter_arkouda_command": 25, "_final": [23, 36], "_genericalia": [23, 26, 36, 37], "_get_grouping_kei": [24, 26, 94], "_length": [26, 50], "_local": [18, 22, 26, 27, 29, 39, 50, 55, 70], "_locale0000": [22, 26], "_numer": [26, 37], "_segment": [26, 50, 70], "_type": [5, 6, 7, 9, 16], "_valu": [26, 50, 70], "_x": [22, 26], "_y": [22, 26], "a1": [26, 31, 37, 90], "a2": [26, 31, 37, 39, 90], "a5": [26, 37], "a_cpi": [26, 39], "a_max": 17, "a_min": 17, "ab": [8, 26, 37, 57, 86, 90], "abc": [23, 26, 27, 36, 37, 69], "abcd": [26, 37], "abil": 99, "abl": [60, 64, 70, 71, 77, 87], "abm": 61, "about": [18, 19, 26, 28, 37, 39, 55, 57, 60, 61, 65, 75, 81, 90, 103], "abov": [6, 23, 26, 36, 37, 38, 44, 48, 60, 61, 66, 68, 77, 79, 93, 98, 103], "abs_dt": [26, 31], "absolut": [1, 8, 23, 26, 36, 37, 56, 57, 81, 90], "abspath": [26, 37], "abstract": [25, 26, 37], "acceler": 63, "accept": [26, 37, 51, 57, 61, 100], "access": [1, 2, 19, 21, 26, 29, 37, 49, 51, 55, 60, 68, 73, 77, 80, 86, 87, 98, 102], "access_channel": [19, 102], "access_token": [19, 102], "accessor": [26, 59], "accomod": [20, 26], "accomplish": [81, 87], "accord": [20, 22, 24, 26, 27, 37, 51, 58, 93, 94, 97], "accordingli": [26, 40, 70, 92], "account": 83, "accur": 48, "accuraci": 48, "achiev": [3, 22, 26, 77], "aco": 8, "acosh": 8, "acquir": 60, "across": [5, 9, 21, 22, 26, 29, 70, 79, 80, 87, 98], "act": [26, 38, 39, 44, 98], "action": 64, "activ": [21, 75, 77, 78, 79, 80, 94], "actual": [23, 26, 31, 36, 37, 69], "ad": [18, 20, 22, 23, 26, 27, 29, 32, 36, 37, 39, 50, 55, 65, 67, 68, 72, 77, 78, 87, 102], "add": [0, 1, 8, 18, 22, 24, 26, 29, 37, 38, 44, 50, 51, 60, 64, 75, 77, 79, 80, 81, 83, 93, 94, 98], "add_newdoc": [26, 37], "addit": [1, 12, 22, 24, 26, 37, 38, 43, 44, 56, 62, 70, 72, 79, 97, 98, 101, 102], "addition": [81, 88], "address": [0, 19, 20, 26, 102], "adher": 70, "adjac": [26, 37], "advanc": 78, "adversari": [26, 37], "adx": 61, "ae": 61, "affect": [20, 26, 38, 44, 98], "after": [0, 4, 18, 22, 24, 26, 37, 41, 55, 64, 66, 77, 78, 93, 94, 98, 103], "ag": 68, "again": [0, 66, 68, 69, 77, 79], "against": [18, 26, 50, 55, 61, 68, 87, 99, 103], "aggreg": [1, 21, 22, 24, 26, 50, 58, 68, 86, 87, 94], "aggress": 87, "ahead": 21, "aid": [68, 70], "aim": 68, "ak": [0, 1, 3, 4, 18, 19, 20, 22, 24, 26, 27, 28, 29, 33, 37, 38, 39, 40, 42, 43, 44, 46, 47, 50, 51, 52, 55, 56, 57, 58, 60, 65, 66, 68, 69, 75, 81, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103], "ak_arr": 68, "ak_data": [26, 29, 87], "ak_df": [22, 26, 43, 93], "ak_in1d": 68, "ak_in1dmult": 68, "ak_in1dmulti": 68, "ak_int": 68, "ak_int64": [26, 37], "ak_intmult": 68, "ak_io_benchmark": 61, "aka": [49, 77], "akab": 26, "akbool": 26, "akcast": 26, "akfloat64": 26, "akint64": [26, 40], "akstat": [26, 46], "aku": [26, 27, 45, 88], "akuint64": 26, "algorithm": [15, 26, 37, 52, 58, 75, 89], "alia": [22, 23, 26, 36, 37, 42, 50, 51, 57, 93], "alias": [23, 26, 36, 37, 57], "alic": [22, 26, 93], "align": [26, 27, 37, 59, 95], "all": [0, 3, 5, 6, 9, 12, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 50, 53, 55, 56, 57, 58, 60, 61, 64, 65, 66, 69, 70, 72, 75, 78, 79, 80, 81, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 103], "all_occurr": [3, 26, 42], "all_scalar": [23, 26, 36, 37, 40, 92], "allclos": [26, 48, 56], "alloc": [19, 77, 83], "allow": [0, 18, 20, 22, 24, 26, 27, 29, 32, 37, 38, 39, 40, 44, 46, 50, 51, 55, 56, 58, 61, 62, 68, 71, 73, 81, 83, 87, 94, 98, 99], "allow_error": [22, 26, 27, 29, 39, 55, 87], "allow_list": [26, 27, 88], "allsymbol": [26, 28], "almost": [91, 93, 97, 103], "alnum": [26, 55], "alon": [91, 103], "along": [5, 9, 10, 12, 13, 15, 16, 17, 22, 24, 26, 37, 40, 41, 90, 92, 101], "alongsid": [26, 29], "alpha": [26, 48, 55, 61, 85], "alphabet": [26, 55], "alphanumer": [26, 55], "alreadi": [0, 1, 18, 21, 22, 24, 26, 27, 29, 37, 39, 50, 51, 55, 57, 65, 69, 70, 72, 77, 91, 94, 101], "also": [1, 3, 5, 18, 20, 23, 24, 26, 31, 36, 37, 38, 40, 42, 44, 48, 50, 51, 55, 56, 60, 63, 65, 68, 69, 71, 72, 73, 75, 78, 79, 80, 83, 87, 92, 96, 97, 98, 99, 101, 103], "altern": [1, 22, 26, 37, 38, 44, 48, 51, 64, 65, 77, 80, 83, 98], "although": [5, 9], "alwai": [0, 12, 15, 23, 24, 26, 27, 29, 36, 37, 39, 55, 57, 60, 69, 87, 90, 91, 93, 94, 95, 97, 103], "amount": [19, 22, 26, 39, 77, 81, 93, 103], "an": [0, 1, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 75, 78, 79, 83, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "anaconda": [1, 75, 77, 83, 84], "anaconda3": [77, 79, 80], "analog": [23, 24, 26, 36, 37, 57, 94], "analyt": 74, "angl": [26, 37], "ani": [0, 3, 4, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 44, 50, 51, 53, 55, 56, 60, 61, 64, 66, 70, 72, 79, 80, 86, 90, 93, 94, 95, 97, 98, 99, 103], "anim": [26, 51], "animal_1": [22, 26], "animal_2": [22, 26], "annot": [23, 36, 60, 77], "anoth": [0, 6, 7, 13, 22, 23, 24, 26, 29, 36, 37, 39, 55, 60, 70, 75, 80, 83, 87, 93, 94, 96, 97, 99, 103], "anyon": 0, "anyth": [0, 23, 26, 36, 39, 64], "anywai": [0, 92], "aom": [26, 40], "api": [1, 5, 6, 8, 9, 12, 22, 23, 24, 26, 36, 37, 51, 58, 60, 74, 94, 97], "api_specif": [12, 26, 58], "apic": 61, "app": 83, "appear": [3, 18, 22, 24, 26, 27, 29, 37, 39, 42, 51, 55, 64, 94, 95], "append": [17, 18, 22, 24, 26, 27, 29, 37, 39, 42, 50, 51, 55, 70, 72, 86, 92, 94, 103], "append_singl": [26, 50, 86, 99], "appli": [3, 8, 12, 16, 22, 24, 26, 37, 56, 59, 60, 61, 90, 93, 94, 103], "applic": [24, 26, 37, 78, 87, 92, 94, 101], "apply_permut": [22, 26, 93], "appreci": 0, "approach": [81, 99], "appropri": [0, 22, 26, 29, 37, 56, 64, 71, 75, 77, 82, 87], "approv": [0, 78], "approxim": [22, 26, 37, 56], "ar": [0, 1, 3, 5, 8, 9, 12, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 68, 69, 70, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "arang": [3, 6, 22, 24, 26, 29, 37, 38, 39, 40, 42, 43, 44, 50, 51, 58, 60, 68, 86, 87, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101], "arbitrari": [22, 26, 37, 93], "arbitrarili": [18, 26], "arcco": [26, 37], "arccosh": [26, 37], "arccosin": 8, "arch": 61, "arch_cap": 61, "arch_string_raw": 61, "architectur": 61, "archiv": 79, "arcsin": [8, 26, 37], "arcsinh": [26, 37], "arctan": [26, 37], "arctan2": [26, 37], "arctang": 8, "arctanh": [26, 37], "area": [26, 48, 56, 61], "aren": [79, 80], "arg": [0, 3, 22, 23, 24, 26, 27, 36, 37, 40, 48, 50, 51, 57, 58, 60, 81, 92, 94], "arg1": [26, 37, 60], "arg2": [26, 37], "argmax": [13, 22, 23, 24, 26, 36, 37, 39, 50, 51, 86, 90, 94, 95], "argmaxk": [26, 39, 86, 90, 95], "argmin": [13, 22, 23, 24, 26, 36, 37, 39, 50, 51, 86, 90, 94, 95], "argmink": [26, 39, 86, 90, 95], "argpars": 82, "args1": [3, 26], "args2": [3, 26], "argsort": [15, 18, 19, 22, 23, 24, 26, 27, 36, 37, 38, 39, 44, 52, 86, 89, 90, 91, 93, 94, 98, 103], "argument": [2, 3, 4, 15, 16, 17, 20, 21, 22, 23, 24, 26, 36, 37, 38, 39, 44, 48, 50, 51, 55, 56, 58, 60, 81, 98, 100], "arithmet": [26, 37, 86, 97], "arkodua": [69, 70], "arkouda": [59, 61, 64, 66, 67, 71, 73, 78, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 101], "arkouda_arrow_path": 1, "arkouda_client_directori": [1, 49], "arkouda_client_mod": 1, "arkouda_client_timeout": 1, "arkouda_config_fil": [65, 81], "arkouda_develop": [1, 65], "arkouda_full_stack_test": 1, "arkouda_hdf5_path": 1, "arkouda_hom": 1, "arkouda_iconv_path": 1, "arkouda_idn2_path": 1, "arkouda_key_fil": 1, "arkouda_log_level": [1, 26], "arkouda_mem_alloc": 19, "arkouda_numlocal": 1, "arkouda_password": 1, "arkouda_print_passes_fil": 1, "arkouda_quick_compil": [1, 65, 80], "arkouda_root": 61, "arkouda_serv": [1, 19, 23, 26, 36, 37, 62, 65, 66, 75, 77, 81, 102], "arkouda_server_aggregation_dst_buff_s": 1, "arkouda_server_aggregation_src_buff_s": 1, "arkouda_server_aggregation_yield_frequ": 1, "arkouda_server_connection_info": 1, "arkouda_server_host": 1, "arkouda_server_port": 1, "arkouda_server_user_modul": [1, 81], "arkouda_skip_check_dep": 1, "arkouda_supported_bool": [23, 36], "arkouda_supported_dtyp": [23, 26, 36, 37], "arkouda_supported_float": [23, 36], "arkouda_supported_int": [23, 26, 36, 37], "arkouda_supported_numb": [23, 36], "arkouda_tunnel_serv": 1, "arkouda_typ": [22, 26, 27, 29, 39, 55], "arkouda_verbos": 1, "arkouda_vers": 70, "arkouda_zmq_path": 1, "arkoudalogg": [24, 26, 32, 55, 94], "arkoudavers": 0, "arm64": 80, "around": [0, 5, 9, 20, 23, 26, 36, 37, 48, 64, 66], "arr": [4, 26, 29, 41, 42], "arr1": [3, 26, 42], "arr2": [3, 26, 42], "arrai": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 29, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 69, 70, 75, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 103], "array_api": [26, 59], "array_dtyp": 60, "array_equ": [26, 37], "array_nd": 60, "array_object": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 59], "arrays2": [26, 27], "arrays_and_dtyp": 7, "arraysetop": 101, "arraysetopsmsg": 60, "arrayview": [70, 97], "arri": 58, "arriv": 21, "arrow": [1, 82], "artifact": 49, "artist": [26, 37, 95], "as_compon": [26, 58], "as_index": [22, 26, 93], "as_integer_ratio": [23, 26, 36, 37], "as_perc": 19, "as_seri": [22, 26], "asarrai": [5, 6, 9], "ascend": [13, 22, 24, 26, 27, 37, 39, 51, 88, 93, 95, 100], "ascii": 61, "asia": [26, 57], "asin": 8, "asinh": 8, "ask": 0, "assembl": [26, 55], "assert": [26, 56], "assert_": [26, 56], "assert_almost_equ": [26, 56], "assert_almost_equival": [26, 56], "assert_arkouda_array_equ": [26, 56], "assert_arkouda_array_equival": [26, 56], "assert_arkouda_pdarray_equ": [26, 56], "assert_arkouda_segarray_equ": [26, 56], "assert_arkouda_strings_equ": [26, 56], "assert_attr_equ": [26, 56], "assert_categorical_equ": [26, 56], "assert_class_equ": [26, 56], "assert_contains_al": [26, 56], "assert_copi": [26, 56], "assert_dict_equ": [26, 56], "assert_equ": [26, 56], "assert_equival": [26, 56], "assert_frame_equ": [26, 56], "assert_frame_equival": [26, 56], "assert_index_equ": [26, 56], "assert_index_equival": [26, 56], "assert_is_sort": [26, 56], "assert_series_equ": [26, 56], "assert_series_equival": [26, 56], "assertionerror": [26, 56], "asset": 75, "assig": 96, "assign": [0, 18, 22, 24, 26, 37, 51, 69, 70, 86, 91, 94, 99, 103], "assist": [0, 81], "associ": [0, 1, 22, 26, 29, 37, 38, 44, 51, 58, 61, 64, 87, 98, 99, 100], "assum": [2, 13, 22, 24, 26, 29, 37, 38, 40, 42, 44, 51, 53, 64, 69, 70, 71, 79, 80, 84, 87, 93, 94, 98, 100, 101], "assume_sort": [24, 26, 94, 101], "assume_uniqu": [26, 42, 101], "assumpt": [18, 26, 39, 40, 55, 87, 91, 97, 103], "ast": 82, "astyp": [7, 22, 23, 26, 36, 37, 39, 55], "atan": 8, "atan2": 8, "atanh": 8, "atol": [26, 56], "atom": 21, "attach": [18, 20, 22, 24, 26, 27, 37, 39, 50, 51, 55, 57, 58, 86, 94], "attach_al": [26, 58], "attach_pdarrai": [26, 39], "attahc": [26, 39], "attempt": [18, 22, 24, 26, 27, 29, 39, 50, 51, 52, 55, 57, 77, 87, 93, 94], "attent": 61, "attr": [26, 56], "attribut": [9, 18, 22, 23, 27, 29, 36, 39, 53, 55, 56, 57, 87, 97], "attributeerror": [26, 37], "attributi": [26, 39, 53, 97], "augment": 78, "authent": [19, 49, 75, 102], "author": 0, "author_tim": 61, "auto": [48, 59, 64], "autoapi": [59, 82], "autoclass": 88, "autodoc": 82, "autom": [1, 64], "automat": [1, 3, 18, 26, 29, 51, 70, 78, 87, 91, 100], "autopackagesummari": 82, "autosav": 61, "avail": [1, 19, 26, 29, 37, 38, 39, 44, 48, 61, 66, 70, 78, 83, 87, 95], "avail_mem": 19, "averag": [24, 26, 39, 40, 61, 90, 94], "avoid": [0, 26, 37, 63, 66], "avx": 61, "avx2": 61, "awar": 0, "awk": 83, "ax": [0, 5, 9, 12, 16, 17, 22, 26, 37, 48, 90], "axi": [10, 11, 12, 13, 15, 16, 17, 22, 26, 27, 37, 39, 41, 43, 50, 51, 52, 89, 90, 93, 95, 99, 100], "b": [18, 19, 22, 23, 24, 26, 27, 29, 31, 36, 37, 38, 39, 40, 42, 43, 44, 48, 50, 51, 52, 54, 55, 56, 58, 68, 85, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 103], "b_np": [26, 37, 95], "b_width": [26, 37, 95], "back": [20, 22, 24, 26, 37, 58, 63, 66, 87, 94], "backbon": 97, "backend": [22, 26, 51, 63, 77], "backward": [26, 37, 50, 58, 99], "badvalu": 48, "balanc": [18, 26, 55], "bandwidth": [26, 40, 87], "bar": [26, 37, 95], "barcontain": [26, 37, 95], "base": [0, 1, 2, 3, 5, 8, 14, 18, 20, 22, 23, 25, 26, 27, 29, 32, 36, 37, 38, 39, 44, 45, 46, 48, 52, 57, 58, 64, 77, 80, 84, 87, 88, 89, 90, 91, 93, 97, 100, 103], "base_repr": [26, 37], "bash": [79, 80], "bashrc": [79, 80, 83], "basic": [19, 26, 27, 39, 49, 64, 83, 97], "bear": [0, 64, 79, 80], "bebbxjhgm": [26, 40], "becaus": [18, 22, 26, 27, 29, 37, 38, 40, 44, 50, 55, 56, 65, 68, 69, 70, 71, 75, 87, 91, 92, 93, 99, 103], "becom": [23, 26, 36, 37], "been": [1, 18, 19, 22, 26, 29, 37, 39, 41, 42, 50, 55, 62, 63, 64, 77, 81, 90, 91, 92], "befor": [0, 12, 13, 17, 21, 26, 37, 41, 57, 61, 77, 78, 87], "begin": [0, 5, 9, 17, 26, 55, 96, 103], "behav": 0, "behavior": [0, 5, 21, 22, 26, 37, 38, 39, 40, 44, 60, 90, 92, 93, 98, 103], "being": [21, 22, 26, 27, 29, 37, 39, 51, 56, 60, 68, 70, 71, 72, 78, 81, 87, 93, 96, 100], "believ": 64, "belong": [18, 26, 91], "below": [6, 26, 37, 43, 48, 61, 62, 68, 79, 80, 82, 87, 93], "bench_decod": 61, "bench_encod": 61, "benchmark": [65, 67, 81, 82, 85], "benchmark_v2": 61, "benefici": [61, 72], "berkelei": [22, 26], "besid": [26, 37], "best": [0, 3, 26, 37, 48], "beta": [38, 44, 98], "better": [18, 22, 26, 27, 29, 39, 50, 55], "between": [1, 6, 18, 19, 22, 26, 31, 37, 39, 40, 55, 57, 58, 61, 68, 81, 92, 95, 97, 103], "beyond": [12, 26, 39, 68, 90], "bi": [26, 37], "bi_end": [3, 26], "bi_start": [3, 26], "bi_val": [3, 26], "bia": [26, 37], "big": [23, 26, 36, 37], "biggest": 65, "bigint": [23, 26, 36, 37, 39, 40, 61, 87, 92, 97], "bigint_from_uint_arrai": [3, 26, 39, 40], "bigint_to_uint_arrai": [26, 39, 40], "bin": [26, 37, 39, 43, 48, 77, 79, 80, 83, 95], "binari": [20, 26, 37, 40, 79, 80, 90], "binary_repr": [26, 37], "bind": 77, "binomi": [38, 44, 98], "binop": [18, 22, 26, 29, 39, 50, 55], "bit": [0, 7, 18, 20, 23, 26, 29, 36, 37, 39, 40, 50, 55, 61, 65, 87, 92, 93, 97], "bit_count": [23, 26, 36, 37], "bittyp": [23, 26, 36, 37], "bitvector": [20, 26], "bitwis": [8, 24, 26, 94, 97], "bitwise_and": 8, "bitwise_invert": 8, "bitwise_left_shift": 8, "bitwise_or": 8, "bitwise_right_shift": 8, "bitwise_xor": 8, "black": [0, 26, 37, 82, 95], "block": [0, 18, 21, 26, 42, 51, 55, 60, 68, 92], "blosc": [26, 29], "blue": [26, 27], "bmi1": 61, "bmi2": 61, "bob": [22, 26, 93], "bodi": 0, "bool": [3, 6, 7, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 50, 51, 52, 55, 56, 57, 58, 61, 70, 85, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "bool_": [18, 23, 26, 36, 37, 38, 39, 40, 44, 55, 57, 90, 92, 95, 96, 97], "bool_onli": [22, 26], "bool_scalar": [18, 23, 26, 27, 36, 37, 39, 51, 55], "booldtyp": [26, 37], "boolean": [3, 7, 8, 18, 22, 23, 24, 26, 33, 36, 37, 39, 42, 50, 51, 55, 68, 70, 91, 93, 94, 96, 97, 99, 100, 101, 103], "boost": 77, "borrow": 60, "both": [3, 12, 19, 22, 23, 24, 26, 27, 29, 31, 36, 37, 39, 42, 56, 57, 65, 68, 70, 71, 75, 77, 87, 91, 101, 103], "bottleneck": 63, "bottom": [26, 39, 64], "bound": [26, 38, 39, 40, 44, 50, 57, 92, 99], "boundari": [26, 38, 44, 57, 98], "box": [38, 44, 64, 98], "branch": [0, 61, 64, 77], "brand_raw": 61, "brew": 80, "bring": 64, "broad": 0, "broadcast": [12, 22, 24, 26, 37, 39, 58, 86, 90, 94], "broadcast_arrai": 12, "broadcast_dim": [26, 58], "broadcast_to": 12, "broadcast_to_shap": [26, 39], "brotli": [18, 22, 26, 27, 29, 39, 50, 55, 61, 72], "brown": 68, "browser": 77, "buf": [26, 37], "buffer": [1, 6, 22, 23, 24, 26, 36, 37, 48, 51], "bufferobject": [23, 26, 36, 37], "bug": [64, 67], "build": [1, 23, 24, 26, 36, 37, 60, 61, 64, 67, 75, 78, 79, 83, 94, 102], "build_from_compon": [24, 26, 86, 94], "built": [0, 18, 23, 26, 36, 37, 39, 55, 62, 64, 65, 66, 75, 77, 79, 80, 81, 87, 91, 97, 103], "builtin": [23, 26, 36, 37, 39], "bump": [62, 79, 80], "bundl": [79, 80], "button": 64, "bydayofweek": 94, "byte": [18, 22, 23, 26, 27, 29, 31, 36, 37, 39, 40, 48, 50, 51, 53, 55, 58, 70, 75, 87, 91, 93, 97, 103], "bytearrai": [23, 26, 36, 37, 48], "bytedtyp": [26, 37], "byteord": [23, 26, 36, 37], "bytes_": [26, 37], "bytes_attrib": [26, 55], "bytes_or_buff": [22, 23, 24, 26, 36, 37, 48, 51], "bytes_s": [26, 55], "bytesdtyp": [26, 37], "byteswap": [23, 26, 36, 37], "c": [18, 22, 23, 26, 27, 36, 37, 40, 42, 43, 50, 51, 55, 58, 61, 63, 65, 79, 85, 93, 97, 99, 101, 103], "c1": [26, 37, 90], "c2": [18, 26, 37, 90], "c_cpy": [18, 26], "c_string": 70, "cach": [2, 18, 21, 26, 37, 55], "cached_regex_pattern": [26, 55], "cachedaccessor": [2, 26], "calc_string_offset": [26, 29, 87], "calcul": [17, 22, 24, 26, 29, 37, 39, 42, 48, 61, 70, 87, 90, 94, 95, 101], "calculu": [33, 103], "call": [4, 5, 9, 18, 19, 20, 21, 22, 24, 26, 29, 37, 38, 39, 40, 44, 48, 50, 51, 53, 55, 56, 60, 68, 72, 75, 77, 80, 81, 87, 90, 92, 93, 94, 97, 98, 102], "callabl": [4, 5, 20, 22, 26, 93], "callback": [20, 26], "caller": [22, 26, 37, 51, 93], "came": [26, 50, 99], "can": [1, 3, 4, 5, 7, 9, 18, 20, 21, 22, 23, 24, 26, 27, 29, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 55, 57, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "can_cast": 7, "cancel": [26, 37], "candid": [26, 37], "cannot": [3, 12, 18, 20, 22, 23, 24, 26, 27, 29, 36, 37, 39, 40, 50, 51, 55, 56, 57, 72, 83, 87, 91, 94, 97, 103], "canon": [23, 26, 36, 37], "capac": [26, 37, 97], "capit": [26, 55], "capitilz": [26, 55], "captur": [1, 33, 103], "care": 61, "carol": [22, 26, 93], "carri": [26, 57], "case": [18, 19, 23, 24, 26, 27, 29, 36, 37, 38, 39, 44, 48, 51, 55, 57, 61, 63, 68, 69, 70, 72, 77, 79, 81, 83, 90, 98, 100], "cask": 80, "caskroom": [77, 80], "cast": [3, 5, 7, 20, 23, 26, 36, 37, 39, 40, 41, 55, 60, 86, 87, 92, 103], "castabl": [26, 47], "castarrai": 60, "castmsg": 60, "cat": [18, 26, 29, 83], "catch": 0, "categor": [22, 24, 26, 27, 29, 37, 42, 51, 52, 56, 58, 59, 86, 89, 90, 92, 93, 94, 95, 97, 100, 101], "categori": [0, 18, 26, 52, 56, 64, 70, 86, 89, 91], "categorical_arrai": [18, 26], "categorical_test": 0, "categoricaltest": 0, "cattwo": [18, 26], "caus": [18, 22, 26, 27, 29, 37, 39, 50, 55, 75, 77], "caution": [18, 26, 39, 40, 55, 87, 91, 97, 103], "ccflag": 1, "cd": [62, 75, 77, 78, 79, 80, 82], "cdf": [38, 44, 48, 98], "cdot": [38, 44, 98], "cdoubl": [23, 26, 36, 37], "ceil": [8, 26, 37], "cell": [22, 26], "cento": 79, "central": [23, 26, 36, 37, 48], "certain": [26, 39, 62, 81, 90], "cfg": [1, 26, 29, 65, 66, 81], "cfloat": [23, 26, 36, 37], "chang": [1, 20, 22, 23, 26, 27, 29, 36, 37, 38, 39, 44, 61, 64, 66, 75, 78, 79, 80, 82, 87, 90, 93], "channel": [19, 102], "chapel": [19, 21, 26, 37, 38, 44, 60, 63, 65, 70, 74, 75, 81, 82, 83, 84, 97, 102, 103], "chapel_vers": 75, "char": [23, 26, 36, 37, 55], "charact": [18, 19, 20, 23, 25, 26, 36, 37, 40, 51, 55, 81, 103], "check": [0, 1, 3, 17, 18, 22, 23, 24, 26, 27, 29, 36, 37, 39, 48, 50, 55, 56, 58, 60, 64, 65, 66, 78, 85, 91, 101, 102, 103], "check_categor": [26, 56], "check_category_ord": [26, 56], "check_column_typ": [26, 56], "check_dtyp": [26, 56], "check_exact": [26, 56], "check_frame_typ": [26, 56], "check_index": [26, 56], "check_index_typ": [26, 56], "check_lik": [26, 56], "check_nam": [26, 56], "check_ord": [26, 56], "check_sam": [26, 56], "check_series_typ": [26, 56], "checker": [23, 36], "checkout": 66, "chess": [38, 44, 98], "chi": [26, 46, 48], "chi2": 48, "chipset": 80, "chisquar": [26, 46], "choic": [26, 38, 40, 44, 77, 86], "choos": [23, 26, 36, 37, 64, 80, 83, 90, 102], "chosen": [3, 26, 37, 39, 90, 97, 99], "chpl": [1, 26, 29, 60, 65, 77, 78, 79, 80, 81], "chpl_comm": [62, 79, 80], "chpl_comm_remote_prefetch": 21, "chpl_debug_flag": 1, "chpl_develop": [65, 80], "chpl_flag": [1, 63], "chpl_gasnet_cfg_opt": 62, "chpl_gmp": [79, 80], "chpl_home": [62, 77, 79, 80], "chpl_llvm": [79, 80], "chpl_re2": [79, 80], "chpl_rt_oversubscrib": 62, "chpl_target_compil": 63, "chpl_target_cpu": 80, "chpl_test_timeout": 62, "chplconfig": 79, "chpldoc": [77, 79], "chunk": [5, 9, 18, 26, 27, 29, 39, 50, 55], "chunk_info": [5, 9], "chunk_shap": [26, 29], "ci": [0, 78], "circl": [26, 37], "cl": [2, 26, 91], "clang": [63, 79], "class": [0, 40, 56, 60, 61, 86, 87, 88, 91, 92, 93, 94, 98, 99, 100, 103], "classmethod": [18, 20, 26, 27, 50, 91], "claus": [26, 37, 90], "clean": 77, "clear": [23, 26, 36, 37, 39], "clflush": 61, "clflushopt": 61, "click": [64, 77, 78, 84], "client": [5, 9, 18, 22, 26, 39, 40, 55, 56, 57, 59, 71, 77, 79, 80, 81, 82, 83, 86, 91, 93, 97, 99, 103], "client_dtyp": [26, 29, 59], "clientgeneratedlog": [26, 32], "clip": [17, 23, 26, 36, 37], "clobber": 77, "clone": 84, "clongdoubl": [26, 37], "clongdoubledtyp": [26, 37], "clongfloat": [26, 37], "close": [0, 3, 26, 40, 57, 60, 68, 92], "clz": [26, 39], "cm_version": 79, "cmake": [79, 82], "cmd": [60, 81], "cmd_filter": 19, "cmov": 61, "co": [8, 24, 26, 37, 86, 90, 94], "coargsort": [22, 26, 52, 86, 89, 91, 93, 103], "code": [1, 18, 23, 26, 27, 29, 36, 37, 46, 52, 56, 64, 65, 68, 70, 78, 81, 86, 89, 91], "codepoint": [23, 26, 36, 37], "coeffici": [26, 39], "coercibl": [26, 37], "col": [26, 37, 43, 54], "col1": [22, 26, 37, 93], "col2": [22, 26, 37, 93], "col2_i": [22, 26], "col2_x": [22, 26], "col3": [22, 26, 37, 93], "col_a": [22, 26], "col_b": [22, 26], "col_c": [22, 26], "col_delim": [22, 26, 27, 29, 39, 55], "col_nam": [26, 29], "cola": 69, "colb": 69, "colc": 69, "collaps": [26, 39, 55, 103], "collect": [18, 22, 23, 24, 26, 27, 29, 36, 37, 39, 45, 48, 50, 55, 79, 94], "collis": [18, 26, 37, 55], "colnam": [22, 26], "colors2": [26, 27], "column": [3, 6, 18, 21, 22, 24, 26, 27, 29, 39, 43, 50, 51, 52, 54, 55, 56, 68, 69, 72, 73, 87, 89, 94, 99, 100], "column_data": 68, "column_delim": [26, 29, 87], "column_nam": 68, "columnar": 87, "com": [0, 26, 37, 46, 79, 80], "combin": [22, 26, 55, 57, 58, 60, 66], "come": [24, 26, 37, 66, 87, 92, 101], "comm_diagnost": [26, 59], "comma": [4, 26, 37, 61, 69, 77], "command": [19, 25, 26, 39, 60, 61, 62, 64, 66, 75, 77, 78, 80, 81, 82, 83, 102], "command_filt": [19, 25], "commandlin": 61, "commandmap": [19, 60, 81], "comment": [0, 65, 81], "commit": [0, 64], "commit_info": 61, "common": [0, 3, 12, 24, 26, 37, 40, 42, 83, 87, 94, 101, 103], "common_typ": [26, 41], "commonli": 68, "commun": [1, 21, 26, 52, 64, 80, 89, 92], "compar": [18, 23, 26, 27, 36, 37, 39, 48, 55, 56, 64, 85, 87, 103], "compare_kei": [26, 56], "comparison": [61, 69, 91, 97, 99, 103], "compat": [8, 18, 22, 23, 26, 36, 37, 39, 50, 57, 58, 93, 94], "compet": 1, "compil": [19, 26, 37, 55, 63, 66, 67, 77, 79, 80, 81, 83], "compiler_flag": [23, 36], "complement": [26, 37], "complementari": [26, 39], "complet": [18, 19, 21, 22, 26, 37, 39, 48, 50, 55, 60, 62, 64, 77, 102, 103], "complex": [3, 8, 23, 26, 36, 37, 75], "complex128": [23, 26, 36, 37], "complex128dtyp": [26, 37], "complex256": [26, 37], "complex64": [23, 26, 36, 37], "complex64dtyp": [26, 37], "complex_": [23, 26, 36, 37], "complexflo": [23, 26, 36, 37], "compliant": [5, 6], "compon": [3, 18, 20, 22, 24, 26, 27, 28, 37, 39, 50, 51, 55, 57, 58, 61, 70, 72, 94], "compos": [23, 26, 36, 37, 40, 55, 75, 87], "composit": [26, 55], "compress": [18, 22, 23, 26, 27, 29, 36, 37, 39, 50, 55, 61, 96, 99], "compris": 103, "comput": [5, 7, 8, 9, 16, 18, 19, 22, 23, 24, 26, 31, 36, 37, 39, 46, 47, 50, 55, 60, 68, 87, 90, 91, 93, 94, 95, 97, 99, 101, 103], "computation": 68, "compute_join_s": [26, 31], "concat": [12, 22, 26, 27, 50, 51, 93, 100], "concaten": [12, 18, 22, 26, 41, 42, 50, 51, 55, 58, 60, 86, 99, 100, 103], "concept": 91, "concis": 64, "concret": [23, 26, 36, 37], "concurr": [0, 87], "cond": [26, 37, 90], "conda": [75, 79, 80, 82], "conda_prefix": [75, 77], "condens": [26, 50, 99], "condit": [3, 13, 22, 26, 37, 39, 48, 90], "conf": 83, "confid": 48, "config": [19, 60, 81], "configur": [0, 1, 26, 60, 61, 68, 80, 83, 88, 93, 100], "confirm": [0, 64], "conflict": 0, "conform": [26, 37, 60], "conj": [8, 23, 26, 36, 37], "conjug": [8, 23, 26, 36, 37], "conjunct": [18, 26, 87, 91, 103], "connect": [18, 19, 22, 26, 27, 37, 39, 40, 46, 47, 49, 51, 55, 58, 60, 65, 83, 86, 87, 93], "connect_url": [19, 75, 102], "connectionerror": [19, 102], "consecut": [26, 40, 51, 92], "consensu": [0, 64], "consequ": 79, "conserv": [20, 26], "consid": [18, 22, 26, 37, 51, 64, 77, 103], "consider": [24, 26, 101, 103], "consist": [0, 22, 26, 37, 40, 68, 79, 80, 90, 92, 93], "consol": [26, 78], "const": 60, "constant": [17, 22, 24, 26, 39, 86, 94], "constant_tsc": 61, "constant_valu": 17, "construct": [5, 6, 9, 18, 26, 37, 38, 40, 44, 50, 55, 60, 68, 86, 94, 96], "constructor": [18, 23, 26, 36, 37, 38, 44, 50, 68, 91, 98], "consum": [26, 27, 51], "conta": [26, 55, 103], "contain": [3, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 42, 43, 44, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 65, 66, 68, 69, 70, 75, 77, 81, 85, 86, 87, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103], "content": [1, 69, 83, 87], "contigu": [18, 26, 31, 55], "continu": [0, 48, 64, 78], "contribut": [22, 26, 51], "contributor": [0, 26, 46], "control": [1, 20, 26, 37, 41, 60, 97], "conveni": [26, 37, 79, 80, 87], "convent": [18, 26, 37], "convers": [0, 18, 26, 87, 91, 97, 103], "convert": [5, 6, 9, 18, 20, 22, 23, 26, 27, 36, 37, 39, 40, 48, 50, 51, 55, 56, 57, 58, 69, 87, 91, 93, 97, 99, 100, 101, 103], "convert_byt": 58, "convert_categor": [22, 26, 29], "convert_if_categor": [26, 58], "convert_int": [22, 26], "cool": 0, "coordin": [6, 26, 37], "copi": [5, 6, 7, 9, 12, 15, 22, 23, 24, 26, 27, 29, 36, 37, 38, 39, 41, 44, 50, 52, 55, 56, 98, 99, 103], "core": [22, 25, 26, 61, 64, 93], "corr": [22, 26, 39], "correct": [3, 16, 22, 26, 65, 79, 83, 85, 93], "correctli": [22, 26, 83, 93], "correl": [22, 26, 39], "correspond": [3, 5, 9, 18, 19, 20, 22, 23, 24, 26, 27, 29, 30, 31, 33, 36, 37, 39, 40, 46, 49, 50, 51, 55, 58, 70, 72, 87, 90, 91, 93, 94, 95, 96, 99, 100, 103], "cosh": [8, 26, 37], "cosin": [8, 26, 37, 90], "cosort": [3, 26], "cosorted": [3, 26], "cost": [18, 26, 91], "could": [5, 9, 26, 39, 43, 50, 55, 60, 65, 81, 103], "count": [14, 21, 22, 23, 24, 26, 34, 36, 37, 39, 50, 51, 55, 61, 68, 86, 90, 94, 99, 103], "count_nonzero": [26, 37], "counter": 21, "counter_nam": 61, "counterpart": 60, "coupl": 65, "cours": [26, 39], "cov": [26, 39], "covari": [26, 39], "cpp": 77, "cpu": 61, "cpuid": 61, "cpuinfo_vers": 61, "cpuinfo_version_str": 61, "cpython": 61, "crazi": 1, "creat": [0, 6, 12, 18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 34, 36, 37, 39, 40, 43, 48, 50, 51, 53, 54, 55, 57, 59, 60, 61, 64, 66, 70, 72, 75, 77, 79, 80, 81, 82, 83, 86, 87, 91, 93, 94, 95, 97, 98], "create_pdarrai": [26, 60], "create_sparrai": [26, 53], "create_sparse_matrix": [26, 54], "creation": [5, 9, 18, 26, 37, 64, 86], "creation_funct": [9, 59], "cressi": [26, 46], "critic": [26, 32], "crucial": 65, "cryptograph": [26, 37], "csc": [26, 53], "csingl": [23, 26, 36, 37], "csr": [26, 53], "csv": [22, 26, 27, 29, 39, 55, 73, 87], "csv_output": [22, 26], "ctrl": 65, "ctz": [26, 39], "cuda": [26, 39], "cumprod": [23, 26, 36, 37, 86, 90], "cumsum": [23, 26, 36, 37, 86, 90], "cumul": [16, 26, 37, 43, 48, 85, 90], "cumulative_sum": 16, "curl": 79, "current": [0, 12, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 36, 37, 38, 39, 40, 41, 44, 49, 53, 55, 63, 64, 65, 69, 70, 71, 72, 78, 79, 80, 84, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 102, 103], "current_arkouda_vers": 70, "custom": [2, 26, 32, 60, 69, 77, 95], "customiz": 87, "cut": [63, 64, 66], "cutoff": [26, 37], "cwd": [26, 29, 39], "cx16": 61, "cx8": 61, "cycl": [80, 82], "d": [0, 5, 9, 18, 22, 23, 26, 27, 36, 37, 38, 40, 41, 42, 43, 44, 50, 51, 55, 57, 58, 60, 68, 85, 98, 99, 101, 103], "dai": [22, 26, 57, 64, 93, 94], "dangl": [4, 26], "darwin": [49, 80], "dash": 64, "dask": [5, 9], "data": [2, 5, 6, 7, 9, 12, 18, 20, 22, 23, 24, 26, 27, 29, 36, 37, 39, 40, 41, 42, 43, 48, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 68, 71, 73, 74, 86, 88, 89, 91, 92, 94, 99, 100, 102, 103], "data2": 58, "data_type_funct": [9, 59], "databas": [22, 26], "datafram": [2, 21, 26, 27, 29, 43, 45, 51, 56, 59, 71, 87, 100], "dataframegroupbi": [22, 26, 93], "datalimit": [22, 26, 93], "datapar": 80, "dataset": [18, 20, 22, 24, 26, 27, 29, 39, 50, 55, 69, 70, 72, 73, 94, 103], "dataset_nam": [26, 29, 87], "datasetnam": [26, 29, 87], "datasourc": [26, 37], "datatyp": [26, 37, 40, 47, 53, 70], "date": [26, 37, 57, 64], "date_oper": [2, 26], "date_rang": [26, 57], "datefram": [22, 26, 93], "dateoffset": [26, 57], "datetim": [26, 29, 37, 40, 57, 61], "datetime64": [26, 37, 40, 57], "datetime64dtyp": [26, 37], "datetimeaccessor": [2, 26], "datetimeindex": [26, 57], "dateutil": 82, "datsetnam": [26, 29], "day_of_week": [26, 57], "day_of_year": [26, 57], "dayofweek": [26, 57, 94], "dayofyear": [26, 57], "dd": 64, "ddof": [24, 26, 39, 46, 57, 90, 94, 95], "de": 61, "deactiv": 77, "deal": [20, 26], "debandi99": 0, "debug": [26, 32, 62, 66], "decid": 0, "decim": [26, 37, 55], "decod": [22, 23, 24, 26, 36, 37, 48, 51, 55], "decompos": 12, "decor": [26, 37], "decreas": [26, 39, 40, 65, 90, 92, 95], "dedup": [22, 26, 93], "dedupl": 86, "deep": [26, 50, 93], "def": [4, 26, 60, 69, 81], "default": [1, 3, 6, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 61, 63, 69, 70, 75, 79, 80, 81, 83, 85, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "default_log_format": 26, "default_rng": [22, 26, 38, 44, 98], "defaultt": [26, 32], "defici": [26, 37], "defin": [3, 5, 18, 20, 22, 23, 24, 25, 26, 27, 29, 32, 36, 37, 39, 40, 48, 50, 51, 55, 57, 60, 64, 91, 92, 93, 94, 95, 97], "definit": [26, 27], "deg2rad": [26, 37], "degener": [12, 26, 37], "degrad": [26, 39, 90], "degre": [16, 24, 26, 37, 39, 46, 48, 90, 94, 95], "degred": [26, 39, 90], "deleg": [26, 37, 38, 40, 44, 92, 95], "delet": [18, 19, 20, 22, 24, 26, 27, 29, 30, 37, 39, 41, 50, 51, 55, 57, 61, 66, 75, 94], "delete_directori": 30, "delimit": [22, 26, 27, 29, 30, 39, 51, 53, 55, 61, 64, 69, 87, 103], "delimited_file_to_dict": 30, "delta": [24, 26, 31, 39, 46, 90, 94, 95], "demo": 68, "demonstr": [0, 60], "denom": [26, 37], "denomin": [23, 26, 36, 37, 39], "denorm": [26, 37], "denormal_numb": [26, 37], "denot": [22, 26, 27, 29, 39, 48, 55, 57], "dens": [3, 18, 24, 26, 94], "densiti": [26, 38, 44, 48, 54, 98], "dep": [1, 77, 79, 80], "depend": [13, 22, 26, 29, 37, 39, 70, 79, 80, 83, 84, 90, 99], "deprec": [18, 22, 24, 26, 27, 29, 37, 39, 50, 51, 55, 57, 64, 70, 87, 94], "deprecate_with_doc": [26, 37], "deprecationwarn": [26, 37], "dequ": [26, 40, 87], "deriv": [23, 26, 29, 30, 32, 36, 38, 44, 55, 97, 98], "descend": [15, 22, 26, 40, 51, 92, 93, 100], "describ": [38, 44, 60, 64, 98], "descript": [26, 37, 61, 64, 68, 78, 86], "descriptor": [2, 23, 26, 36, 37, 55], "design": [0, 23, 26, 36, 37, 64, 82, 87], "desir": [3, 19, 20, 26, 37, 38, 39, 40, 44, 49, 61, 62, 75, 78, 81, 90, 92, 95, 97, 98, 102, 103], "destin": [12, 26, 37], "destpath": [26, 37], "detail": [0, 12, 23, 26, 28, 36, 37, 39, 48, 61, 64, 77, 78, 79, 80, 82, 95, 102, 103], "detect": [22, 26, 29, 51, 70, 87], "determin": [7, 8, 12, 18, 22, 24, 26, 27, 29, 37, 39, 41, 50, 55, 58, 64, 70, 81, 87, 91, 93, 94], "determinist": [18, 26, 42, 51, 92], "dev": [0, 79, 80, 82], "devel": 79, "develop": [1, 18, 26, 37, 64, 65, 66, 78, 79, 80, 81, 84, 87], "deviat": [16, 24, 26, 38, 39, 40, 44, 48, 57, 90, 94, 95, 98], "devic": [5, 6, 9, 26, 37], "devicend": [26, 39], "devicendarrai": [26, 39], "devtoolset": 79, "df": [2, 22, 26, 48, 68, 93], "df1": [22, 26, 56], "df2": [22, 26, 56], "df_deep": 93, "df_shallow": 93, "diag": [26, 37], "diagnost": 21, "diagon": [6, 23, 26, 36, 37], "dic": [26, 56], "dict": [5, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 36, 37, 38, 44, 45, 51, 56, 58, 93, 94, 98], "dict_to_delimited_fil": 30, "dictionari": [18, 19, 22, 23, 24, 26, 29, 30, 36, 37, 38, 44, 55, 56, 58, 81, 87, 93, 94, 98], "did": [0, 19, 21], "diff": [17, 22, 26, 37, 51, 95], "diffaggreg": [22, 26], "differ": [3, 5, 8, 17, 18, 19, 20, 22, 23, 24, 26, 27, 29, 31, 36, 37, 39, 40, 42, 49, 50, 51, 55, 56, 57, 58, 61, 66, 68, 69, 70, 72, 79, 80, 86, 87, 92, 93, 94, 95, 101, 102], "differenc": [22, 26], "differenti": 48, "difficult": 81, "digit": [26, 37, 52, 55, 89], "dim": [26, 37], "dimens": [3, 5, 9, 12, 13, 16, 17, 18, 22, 23, 26, 27, 29, 36, 37, 39, 53, 55, 68, 90, 91, 97, 99, 103], "dimension": [3, 5, 9, 22, 26, 29, 37, 51, 97, 100], "dir": 30, "direct": [3, 26, 64, 70, 77], "directli": [5, 9, 18, 22, 26, 39, 51, 52, 53, 55, 68, 77, 89, 91, 93, 97, 103], "directori": [18, 22, 24, 26, 27, 29, 30, 37, 39, 49, 50, 55, 61, 62, 65, 66, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 94], "dirti": 61, "disabl": [26, 32, 62], "disable_gc": 61, "disableverbos": [26, 32], "disallow": [22, 24, 26, 94], "discard": [3, 18, 26, 91], "discard_empti": [26, 50], "disconnect": [19, 26, 39], "discourag": [91, 93, 97, 99, 103], "discov": 81, "discret": [17, 38, 44, 98], "discrimin": [26, 37], "discuss": 0, "disk": [22, 26, 27, 29, 39, 55, 103], "disp": [26, 37], "dispatch": [26, 56], "displai": [1, 20, 21, 22, 26, 27, 37, 43, 48, 51, 58, 77, 83, 93], "dist": 77, "distanc": [26, 37], "distinct": [18, 22, 26, 91], "distribut": [5, 9, 18, 20, 22, 24, 26, 27, 29, 38, 39, 40, 43, 44, 48, 50, 54, 55, 75, 79, 80, 87, 90, 91, 92, 94, 97, 98, 101, 103], "distro": 79, "div": [26, 39], "diverg": [26, 46], "divid": [8, 26, 39], "dividend": [26, 39], "divis": [8, 26, 39], "divisor": [24, 26, 39, 90, 94], "divmod": [26, 39], "dlpack": 6, "do": [1, 3, 18, 19, 22, 24, 26, 27, 29, 37, 38, 39, 44, 50, 51, 55, 56, 61, 65, 66, 77, 79, 81, 82, 84, 90, 93, 94, 98, 100], "doc": [0, 22, 26, 37, 46, 51, 60, 77, 79], "docstr": [5, 8, 9, 26, 37, 60], "docstring1": [26, 37], "docstring2": [26, 37], "document": [0, 1, 26, 37, 48, 59, 60, 61, 65, 66, 68, 73, 80, 81], "doe": [18, 19, 22, 23, 24, 26, 27, 29, 30, 36, 37, 39, 40, 43, 48, 50, 51, 55, 56, 65, 68, 70, 72, 87, 91, 92, 93, 94, 97, 100, 102, 103], "doesn": [0, 22, 26, 37, 60, 64, 77], "dog": [22, 26, 51], "doi": [26, 37], "domain": [3, 26], "don": [0, 3, 5, 9, 22, 23, 26, 29, 36, 42, 55, 65, 66, 83], "done": [0, 22, 26, 66, 77, 81, 93], "dot": [26, 37, 39, 64], "doubl": [23, 26, 36, 37, 60, 78], "doubt": [0, 64], "down": [19, 63, 64, 66, 75, 77, 78, 81], "download": [26, 37, 75, 78, 79, 80, 84], "draft": 64, "dragon4": [26, 37], "draw": [26, 38, 40, 44, 98], "drawn": [26, 38, 40, 44, 92, 98], "drop": [22, 23, 24, 26, 36, 39, 64, 78, 90, 94], "drop_dupl": [22, 26, 93], "dropna": [22, 24, 26, 86, 93, 94], "dt": [23, 26, 31, 36, 37, 51, 97], "dtype": [3, 4, 5, 6, 7, 9, 16, 18, 22, 24, 26, 27, 29, 31, 34, 37, 38, 39, 40, 41, 42, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 85, 86, 87, 90, 92, 93, 94, 95, 96, 97, 98, 101, 103], "dtype_lik": [26, 37], "dtypeobject": [23, 26, 36, 37], "due": [18, 22, 26, 29, 69, 72, 77, 87], "dump": [23, 26, 36, 37], "duplcat": [22, 26, 93], "duplic": [0, 3, 22, 26, 42, 93], "durat": [26, 57], "dure": [0, 1, 26, 29, 58, 66, 68, 70, 71, 81, 82], "dx": [26, 37], "dynam": 26, "e": [0, 1, 2, 3, 4, 8, 18, 20, 21, 22, 23, 24, 26, 29, 36, 37, 38, 39, 40, 44, 50, 51, 55, 57, 64, 65, 66, 75, 77, 79, 80, 82, 87, 90, 91, 92, 94, 98, 99, 102, 103], "each": [3, 4, 12, 14, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 44, 50, 51, 53, 55, 57, 58, 60, 61, 68, 70, 77, 81, 87, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 103], "eager": 82, "earli": [0, 21], "earlier": [58, 68], "easi": [0, 26, 32, 61, 64, 68, 77], "easier": [26, 37], "easiest": 65, "easili": 68, "echo": [75, 77], "ecwo": [26, 40], "edg": [17, 26, 37, 43, 95], "edgecolor": [26, 37, 95], "edit": [26, 37, 78], "effect": [22, 26, 37, 57, 66, 101], "effici": [18, 22, 26, 27, 39, 55, 99, 103], "egg": [26, 37], "either": [0, 4, 13, 18, 22, 23, 24, 26, 28, 29, 36, 37, 38, 39, 40, 42, 44, 50, 51, 60, 75, 81, 83, 87, 94, 98, 99, 100, 101], "el7": 79, "el96": [26, 40], "elect": [70, 71], "element": [4, 5, 6, 8, 9, 10, 12, 13, 16, 17, 18, 22, 23, 24, 26, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 44, 50, 51, 53, 54, 55, 56, 57, 60, 68, 81, 86, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103], "elementwis": [26, 39], "elementwise_funct": [9, 59], "elimin": [18, 26, 72], "elk": [22, 26, 51], "ellips": 64, "ellipsi": [5, 6, 7, 9, 12, 13, 16, 17, 26, 37, 38, 39, 40, 44, 58], "elo": [38, 44, 98], "els": [0, 22, 23, 26, 36, 37, 51, 60, 64], "elsewher": [6, 26, 37, 38, 39, 44, 90, 98], "emit": [26, 37], "emploi": [26, 37], "empti": [3, 6, 20, 22, 23, 24, 26, 29, 36, 37, 39, 40, 42, 50, 51, 55, 77, 90, 92, 93, 95, 100], "empty_lik": 6, "en": [26, 37, 46, 60], "enabl": [3, 19, 26, 32, 39, 49, 65, 77, 79, 81, 87, 102], "enableverbos": [26, 32], "encapsul": [26, 40, 49, 55], "encod": [22, 23, 24, 26, 36, 37, 48, 51, 55, 61, 103], "encoding_benchmark": 61, "encount": [0, 26, 29], "encourag": [78, 79, 80], "end": [3, 6, 17, 18, 22, 26, 31, 33, 37, 39, 40, 50, 55, 57, 63, 86, 91, 92, 96, 99, 103], "endian": [23, 26, 36, 37], "endpoint": [6, 38, 44, 98], "endswith": [18, 26, 55, 86, 91, 103], "enforc": [26, 37], "engin": [26, 37], "enough": [23, 26, 36, 37, 50, 55, 60, 62, 70, 79, 80, 99], "enrich_inplac": 58, "ensur": [0, 3, 22, 26, 29, 37, 42, 56, 64, 70, 77, 78, 80, 93, 97], "enter": [26, 51, 87, 100], "entir": [16, 22, 26, 37, 50, 55, 61, 66, 90, 93, 99], "entiti": [26, 55], "entri": [3, 6, 18, 22, 26, 27, 37, 39, 51, 55, 56, 60, 61, 93], "entropi": 48, "enum": [23, 26, 32, 36, 37, 70], "enumer": [23, 26, 32, 36, 37], "env": [1, 26, 65, 75, 77, 79, 80, 82], "env_nam": 82, "environ": [49, 61, 81, 82], "environmenterror": 49, "ep": [7, 26, 37], "epidemiologi": [38, 44, 98], "epsneg": [26, 37], "eql_kwarg": [26, 56], "equal": [8, 12, 18, 22, 23, 24, 26, 27, 31, 36, 37, 38, 39, 44, 48, 53, 54, 55, 56, 72, 94, 95, 98, 99], "equal_level": [26, 27], "equal_nan": [26, 37], "equiv": [26, 41, 56], "equival": [3, 18, 22, 24, 26, 27, 29, 37, 39, 40, 41, 42, 48, 52, 55, 56, 57, 58, 65, 68, 89, 90, 92, 101], "erm": 61, "err_msg": [26, 56], "error": [18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 36, 37, 39, 40, 48, 50, 51, 53, 55, 57, 70, 72, 83, 87, 90, 91, 93, 94, 95, 97, 102, 103], "errormod": [26, 37, 97], "especi": [0, 18, 22, 26, 66, 77, 80, 91], "essenti": [22, 26, 39, 50, 55, 93, 99], "estim": [22, 24, 26, 39, 48, 90, 93, 94], "etc": [22, 26, 37, 51, 64, 79, 83], "ethan": 0, "euler_gamma": [26, 37], "eval": [75, 77], "evalu": [3, 17, 22, 26, 39, 90, 95], "even": [18, 22, 23, 24, 26, 36, 37, 39, 90, 93, 94, 102], "evenli": [6, 26, 37, 40, 92, 95], "event": [38, 44, 98], "everi": [0, 1, 3, 22, 26, 37, 61, 93, 103], "everyth": [22, 26, 51, 63, 64], "everywher": [26, 37], "evict": 21, "evolv": 64, "exact": [26, 56, 80], "exactli": [23, 24, 26, 36, 37, 56, 57], "exampl": [0, 3, 4, 5, 9, 18, 19, 22, 23, 24, 26, 27, 29, 33, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 50, 51, 52, 55, 56, 57, 58, 61, 64, 70, 75, 80, 81, 83, 87, 89, 90, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103], "example_featur": 0, "exce": [18, 22, 26, 38, 39, 40, 44, 55, 57, 58, 87, 91, 92, 93, 97, 103], "exceed": [26, 37], "excel": 64, "except": [0, 12, 37, 60, 68, 79, 103], "exchang": 103, "exclud": [3, 24, 26, 42, 81, 94], "exclus": [1, 6, 26, 31, 38, 40, 42, 44, 68, 92, 96, 98, 101], "execut": [1, 19, 21, 25, 26, 29, 39, 55, 60, 62, 63, 65, 66, 69, 77, 78, 79, 81, 91, 102], "exhaust": [68, 70], "exist": [18, 19, 21, 22, 24, 26, 27, 29, 30, 37, 39, 40, 50, 51, 55, 70, 72, 77, 78, 92, 93, 94, 102], "exist_ok": [22, 26], "exit": [75, 83], "exp": [8, 26, 37, 38, 40, 44, 48, 86, 90, 98], "exp_digit": [26, 37], "expand": [12, 18, 22, 26, 27, 29, 39, 50, 55, 58, 87], "expand_dim": 12, "expandus": 49, "expans": 96, "expect": [0, 4, 22, 24, 26, 27, 29, 38, 39, 44, 46, 48, 55, 61, 70, 79, 80, 87, 94, 97, 98], "expens": [18, 26, 37], "experi": [0, 87], "experiment": [4, 26, 55, 103], "explan": [26, 37], "explicit": [70, 97], "explicitli": [1, 22, 26, 42, 81, 101], "explod": 79, "expm1": [8, 26, 37], "expon": [23, 26, 36, 37], "exponenti": [8, 26, 37, 38, 44, 86, 90], "export": [20, 26, 29, 37, 62, 65, 77, 79, 80, 83, 95], "export_uint": [20, 26], "expos": [22, 23, 24, 26, 36, 37, 38, 44, 48, 51, 97, 98], "express": [3, 18, 26, 29, 37, 55, 61, 86, 87, 91, 93, 96, 97], "extend": [26, 37], "extens": [2, 18, 26, 27, 29, 39, 50, 55, 77, 78, 87], "extent": 61, "extern": [79, 80], "external_tool": [79, 80], "extra": [22, 26, 51], "extra_info": 61, "extract": 94, "extrem": [38, 44, 68, 70, 72, 98], "ey": [6, 26, 37], "f": [18, 22, 23, 26, 36, 37, 38, 40, 44, 48, 55, 60, 75, 79, 80, 82, 87, 90, 98, 103], "f0": [26, 37], "f1": [26, 37], "f16c": 61, "f2": [26, 37], "f4": [26, 37], "f8": [26, 37], "f_exp": [26, 46], "f_name": 68, "f_ob": [26, 46], "face": [26, 50, 64, 97], "fact": 72, "factori": [26, 27, 55], "fail": [0, 5, 9, 22, 26, 29, 37, 64, 77, 87, 93, 97], "failur": [0, 26, 29, 77, 87], "fall": [0, 12, 58], "fals": [3, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 48, 50, 51, 55, 56, 57, 58, 61, 68, 85, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103], "false_": [26, 37], "famili": 61, "fast": [1, 18, 23, 26, 36, 55], "faster": [3, 18, 26, 37, 42, 65, 91, 101], "featur": [23, 36, 62, 63, 64, 65, 67, 77, 81, 86, 87, 94], "feder": [38, 44, 98], "feed": [26, 37], "feedback": 0, "feel": 0, "fetch": [64, 66], "few": [26, 37, 68], "fewer": [26, 37], "ffffp10": [23, 26, 36, 37], "fide": [38, 44, 98], "field": [20, 23, 26, 36, 37, 40, 55, 64, 87, 103], "fig": 48, "figur": [26, 37, 43, 66], "file": [0, 1, 18, 19, 22, 24, 26, 27, 29, 30, 37, 39, 49, 50, 51, 55, 60, 62, 65, 66, 71, 72, 75, 77, 78, 79, 80, 82, 83, 94, 103], "file_format": [18, 22, 26, 27, 29, 39, 50, 55], "file_typ": [18, 20, 22, 24, 26, 27, 29, 39, 50, 55, 94], "file_vers": 70, "filenam": [18, 22, 24, 26, 27, 29, 39, 50, 55, 61, 87, 94], "filename_cod": [26, 29], "filenotfound": [26, 29], "filepath": 78, "filetyp": [26, 29, 87], "fill": [6, 22, 23, 24, 26, 36, 37, 38, 39, 40, 44, 51, 61, 85, 92, 94, 98], "fill_val": [26, 53], "fill_valu": [6, 26, 40], "fill_values1": [26, 51], "fill_values2": [26, 51], "fill_values3": [26, 51], "fillna": [26, 51], "fillvalu": [3, 26], "filname_cod": [26, 29], "filter": [0, 22, 25, 26, 50, 87], "filter_by_rang": [22, 26], "filtered_df": [22, 26], "final": [60, 61, 64, 77], "find": [0, 3, 13, 18, 22, 24, 26, 34, 39, 42, 49, 51, 55, 58, 61, 64, 67, 75, 79, 90, 94, 95, 101, 103], "find_loc": [26, 34, 55, 86, 103], "find_match": [33, 86, 103], "findal": [26, 34, 55, 86, 103], "fine": 60, "finfo": [7, 26, 37], "finfo_object": 7, "finit": [8, 17, 23, 26, 36, 37], "firewal": 83, "first": [0, 3, 5, 9, 12, 13, 14, 16, 22, 23, 24, 26, 29, 30, 36, 37, 39, 40, 41, 48, 51, 55, 56, 58, 62, 66, 67, 68, 69, 70, 75, 77, 79, 81, 86, 87, 90, 92, 93, 94, 95, 100, 103], "fishery": [38, 44, 98], "fit": [0, 23, 26, 36, 37, 48, 61, 64, 87], "five": [3, 26, 37, 42, 55, 92, 103], "fix": [0, 26, 37, 38, 44, 48, 57, 64, 83, 98, 103], "fixed_len": [26, 29, 87], "flag": [20, 23, 26, 29, 36, 37, 43, 61, 66, 81, 87, 102], "flake8": [0, 82], "flat": [23, 26, 36, 37, 55, 103], "flatten": [12, 13, 23, 26, 31, 36, 37, 39, 41, 50, 55, 86, 99], "flexibl": [26, 37, 70], "flip": [12, 26, 37], "float": [3, 6, 7, 8, 16, 19, 22, 23, 24, 26, 29, 36, 37, 38, 39, 40, 44, 48, 54, 56, 58, 87, 90, 92, 93, 94, 97, 98], "float128": [26, 37], "float16": [23, 26, 36, 37], "float16dtyp": [26, 37], "float32": [23, 26, 36, 37, 38, 44, 95], "float32dtyp": [26, 37], "float64": [4, 6, 22, 23, 24, 26, 27, 36, 37, 38, 39, 40, 42, 44, 46, 47, 52, 56, 60, 61, 69, 70, 85, 89, 90, 92, 93, 94, 95, 97, 101], "float64dtyp": [26, 37], "float_": [23, 26, 36, 37], "float_scalar": [23, 26, 36, 37, 38, 39, 40, 44], "floor": [8, 26, 37, 39], "floor_divid": [8, 26, 39], "floordivis": [26, 39], "fluid": [18, 20, 22, 24, 26, 27, 39, 50, 51, 55, 57, 94], "flush": [26, 37], "flush_l1d": 61, "fly": 21, "fma": 61, "fmod": [26, 39], "fname": 68, "focus": 65, "folder": 77, "folk": 1, "follow": [0, 1, 3, 19, 23, 26, 36, 37, 46, 60, 61, 62, 64, 75, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 94, 97, 99, 101, 102, 103], "foo": [0, 2, 26], "foo_test": 0, "foobar": [26, 37], "foopar": 0, "forc": [23, 26, 36, 37, 91, 93, 97, 103], "forget": [66, 83], "fork": [0, 77, 79, 80, 84], "form": [18, 23, 26, 27, 36, 37, 39, 48, 49, 50, 55, 64, 81, 103], "format": [5, 9, 17, 18, 19, 20, 22, 23, 26, 27, 28, 29, 36, 37, 39, 49, 50, 51, 55, 60, 68, 70, 71, 72, 78, 81, 93, 99, 102, 103], "format_float_posit": [26, 37], "format_float_scientif": [26, 37], "format_oth": [26, 39], "format_pars": [26, 37], "former": [26, 39, 55, 103], "fortran": 97, "forward": [26, 52, 83, 89, 99], "found": [1, 3, 13, 22, 23, 26, 27, 29, 36, 37, 39, 42, 55, 61, 68, 72, 79, 81, 83], "four": [3, 26, 42, 48, 55, 57, 92, 103], "fpu": 61, "frac": [22, 24, 26, 38, 44, 48, 94, 98], "fraction": [22, 24, 26, 37, 54, 94], "frame": [22, 26, 51, 93, 100], "frameon": 48, "free": [26, 39, 55], "freedom": [16, 24, 26, 39, 46, 48, 90, 94, 95], "freeman": [26, 46], "freez": 48, "freq": [26, 57], "frequenc": [1, 26, 46, 57], "frequent": [26, 51, 81, 100], "friendli": [22, 26, 51], "from": [0, 3, 4, 5, 6, 9, 10, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 54, 55, 56, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 75, 77, 78, 79, 81, 83, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103], "from_": 7, "from_cod": [18, 26, 86, 91], "from_dlpack": 6, "from_multi_arrai": [26, 50], "from_panda": [22, 26], "from_part": [26, 50, 55], "from_return_msg": [18, 20, 22, 24, 26, 27, 50, 51, 55], "from_seri": [26, 40], "fromencod": [26, 55], "fromhex": [23, 26, 36, 37], "fromkei": [23, 26, 36, 37], "fromright": [26, 55, 103], "front": [26, 37], "frontend": 77, "frozen": 48, "frozenset": [23, 24, 26, 36, 37], "frustrat": 66, "fsgsbase": 61, "fsspec": [22, 26, 51], "ftp": [26, 37], "full": [6, 18, 26, 33, 37, 40, 43, 48, 55, 57, 63, 65, 75, 78, 80, 84, 91, 92, 103], "full_lik": [6, 26, 40], "full_match_bool": 34, "full_match_ind": 34, "fullmatch": [26, 55, 86, 103], "fullnam": 61, "func": [4, 26, 37, 48], "funcion": 81, "functioanl": 99, "function": [0, 1, 9, 18, 48, 51, 55, 61, 64, 65, 68, 69, 71, 72, 75, 81, 86, 87, 88, 91, 93, 94, 95, 97, 98, 99, 100, 101, 103], "furo": 82, "further": [79, 80, 84], "futur": [1, 20, 26, 29, 38, 44, 55, 87, 95], "fxsr": 61, "g": [2, 4, 18, 20, 22, 23, 24, 26, 29, 36, 37, 39, 50, 51, 55, 57, 58, 65, 66, 68, 87, 90, 91, 92, 94, 99, 102, 103], "gain": [60, 64], "gamma": 48, "gap": [26, 37], "gasnet": [66, 67, 79, 80], "gasnet_masterip": 62, "gasnet_quiet": 62, "gasnet_route_output": 62, "gasnet_spawnfn": 62, "gasnet_workerip": 62, "gasnetsetup": 62, "gather": [61, 86], "gaussian": [38, 44, 98], "gawk": 79, "gb": [19, 22, 26, 27, 51, 58, 83], "gb_key_nam": [22, 26], "gc": [22, 26, 51], "gcc": [61, 79], "gen_rang": [26, 31], "gener": [18, 19, 22, 23, 24, 25, 26, 31, 32, 36, 37, 38, 39, 40, 43, 44, 46, 48, 49, 51, 57, 59, 60, 61, 65, 66, 68, 69, 70, 72, 77, 79, 83, 85, 86, 87, 90, 92, 94, 98, 100], "generate_histori": 19, "generate_token": 49, "generate_username_token_json": 49, "generic_concat": [26, 58], "generic_mo": 48, "generic_msg": [60, 81], "gentyp": [23, 26, 36, 37], "genuineintel": 61, "get": [5, 8, 9, 10, 19, 21, 22, 23, 25, 26, 29, 36, 37, 50, 51, 61, 64, 65, 66, 83, 87, 97, 99], "get_arkouda_client_directori": 49, "get_byt": [26, 55], "get_byteord": [23, 26, 36, 37], "get_callback": [26, 58], "get_column": [26, 29, 69, 73], "get_comm_diagnost": 21, "get_comm_diagnostics_amo": 21, "get_comm_diagnostics_cache_get_hit": 21, "get_comm_diagnostics_cache_get_miss": 21, "get_comm_diagnostics_cache_num_page_readahead": 21, "get_comm_diagnostics_cache_num_prefetch": 21, "get_comm_diagnostics_cache_prefetch_unus": 21, "get_comm_diagnostics_cache_prefetch_wait": 21, "get_comm_diagnostics_cache_put_hit": 21, "get_comm_diagnostics_cache_put_miss": 21, "get_comm_diagnostics_cache_readahead_unus": 21, "get_comm_diagnostics_cache_readahead_wait": 21, "get_comm_diagnostics_execute_on": 21, "get_comm_diagnostics_execute_on_fast": 21, "get_comm_diagnostics_execute_on_nb": 21, "get_comm_diagnostics_get": 21, "get_comm_diagnostics_get_nb": 21, "get_comm_diagnostics_put": 21, "get_comm_diagnostics_put_nb": 21, "get_comm_diagnostics_try_nb": 21, "get_comm_diagnostics_wait_nb": 21, "get_config": [0, 19], "get_dataset": [26, 29, 69, 73, 87], "get_directori": 30, "get_filetyp": [26, 29], "get_home_directori": 49, "get_jth": [26, 50, 86, 99], "get_length": [26, 55], "get_length_n": [26, 50, 86, 99], "get_level_valu": [26, 27], "get_match": 34, "get_max_array_rank": [19, 26, 40, 87, 92], "get_mem_avail": 19, "get_mem_statu": 19, "get_mem_us": 19, "get_ngram": [26, 50, 86, 99], "get_null_indic": [26, 29], "get_offset": [26, 55], "get_prefix": [26, 50, 55, 86, 99], "get_server_byteord": [23, 26, 36, 37], "get_server_command": 19, "get_suffix": [26, 50, 55, 86, 99], "get_usernam": 49, "getarkoudalogg": 26, "getcwd": [22, 26], "getdefaultencod": [22, 23, 24, 26, 36, 37, 48, 51], "getfield": [23, 26, 36, 37], "getmandatoryreleas": [23, 36], "getmodulenam": 81, "getoptionalreleas": [23, 36], "getter": [26, 55], "getvalu": [26, 37], "gfile": [26, 37], "ghi": 69, "ghpage": 77, "ghz": 61, "gib": 61, "git": [0, 66, 79, 80], "github": [0, 26, 46, 64, 66, 77, 78, 79, 80, 84], "gitk": 64, "give": [26, 37, 39, 51, 69, 77, 82, 100, 102], "given": [3, 6, 13, 16, 17, 18, 22, 23, 24, 26, 29, 36, 37, 38, 39, 40, 42, 44, 48, 51, 55, 57, 58, 61, 82, 87, 91, 92, 93, 94, 98, 103], "glob": [26, 29, 87], "global": [5, 9], "gmp": 80, "gnu": [63, 83], "go": [24, 26, 64, 66, 79, 83, 92], "goal": 5, "goe": [26, 40], "good": [0, 64, 66], "googl": [26, 37, 103], "got": 66, "gottfri": [33, 103], "gpu": [26, 39], "grab": [26, 37], "gradient": [26, 37], "gram": [26, 50, 99], "granular": 21, "graph": [26, 43, 94], "graphic": 64, "greater": [8, 26, 38, 40, 44, 92, 98], "greater_equ": 8, "greatli": [18, 26, 42, 51, 92], "green": [26, 27, 64], "grep": [77, 83], "grid": [22, 26, 43, 51], "group": [1, 7, 18, 22, 24, 26, 33, 50, 51, 52, 55, 61, 68, 70, 78, 86, 89, 91, 93, 94, 100, 101, 103], "group_ani": [24, 26, 94], "group_argmaxima": [24, 26, 94], "group_argminima": [24, 26, 94], "group_maxima": [24, 26, 94], "group_mean": [24, 26, 94], "group_median": [24, 26, 94], "group_minima": [24, 26, 94], "group_num": [33, 103], "group_nuniqu": [24, 26, 94], "group_product": [24, 26, 94], "group_std": [24, 26, 94], "group_sum": [24, 26, 94], "group_var": [24, 26, 94], "groupabl": [24, 26, 42, 94, 101], "groupable_element_typ": [24, 26, 51, 100], "groupbi": [18, 22, 24, 26, 29, 50, 55, 58, 86, 91, 103], "groupby_reduction_typ": [24, 26], "groupbyclass": [22, 26, 42, 59, 93, 101], "grow": [26, 39, 90], "guarante": [18, 26, 52, 55, 89, 98, 103], "guid": [60, 75, 77, 79, 80], "guidelin": [64, 103], "guido": [26, 37], "gumbel": [38, 44, 98], "gz": [75, 77, 79, 80], "gzip": [18, 22, 26, 27, 29, 39, 50, 55, 61, 72], "h": [23, 26, 36, 37, 43, 57, 85, 95, 102], "h5": [26, 29, 39, 87], "h5l": [26, 29], "h5py": [82, 87], "ha": [0, 5, 9, 18, 20, 22, 23, 24, 26, 27, 29, 36, 37, 38, 39, 40, 42, 44, 50, 51, 55, 57, 58, 60, 62, 64, 65, 69, 70, 81, 87, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100], "half": [3, 6, 23, 26, 36, 37, 38, 44, 98], "hand": [3, 26, 54, 64, 96], "handl": [18, 19, 21, 22, 26, 37, 55, 60, 71, 87, 91, 93, 97, 103], "handled_funct": 5, "handler": [21, 22, 23, 24, 26, 36, 37, 48, 51], "happen": [60, 64], "has_non_float_nul": [26, 29, 87], "has_repeat_label": [26, 51], "hash": [18, 26, 37, 50, 52, 55, 89], "hasnan": [26, 51], "have": [0, 1, 3, 5, 9, 12, 18, 21, 22, 23, 24, 26, 27, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 50, 51, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 77, 79, 80, 81, 82, 87, 90, 91, 92, 93, 94, 97, 98, 99, 100], "hd15iqr": 61, "hdf5": [1, 18, 22, 24, 26, 27, 29, 39, 50, 55, 69, 71, 72, 73, 77, 82, 87, 94, 103], "hdf5_output": [22, 26], "hdf_output": [22, 26], "head": [22, 24, 26, 51, 64, 86, 94], "header": [22, 26, 27, 29, 39, 55, 87], "healthcheck": 19, "heavi": [26, 40], "hei": 64, "hello": [26, 37, 55, 87, 103], "hello3": 80, "help": [0, 20, 26, 78, 81], "helper": [20, 26, 58], "henc": [26, 37], "here": [1, 21, 26, 37, 55, 58, 61, 62, 65, 66, 67, 68, 70, 72, 77, 79, 80, 81, 82, 83, 84, 102], "heroic": 63, "hex": [23, 26, 36, 37], "hexadecim": [23, 26, 36, 37], "hexidecim": 49, "hi": [26, 37], "hide": [26, 37], "hierarch": [3, 26], "hierarchi": [26, 37], "high": [3, 20, 22, 26, 37, 38, 39, 40, 44, 68, 92, 98], "higher": [26, 37], "highest": [22, 26, 37, 39, 40], "highli": 79, "highlight": [1, 64, 68], "hist": [26, 37, 48], "hist_al": [26, 43], "hist_fil": 25, "histogram": [26, 37, 43, 48, 86], "histogram2d": [26, 37, 95], "histogramdd": [26, 37], "histor": [26, 37], "histori": [0, 19, 26, 59, 64], "historyaccessor": 25, "historyretriev": 25, "histtyp": 48, "hit": 65, "hog": 66, "hold": [26, 37, 48, 97], "hole": [26, 51], "home": [26, 37, 49, 77, 81], "homebrew": [65, 77], "homepag": 77, "homogen": [22, 26, 93], "hong_kong": [26, 57], "horizont": [26, 50, 51, 99, 100], "host": [19, 22, 26, 49, 51, 77], "hostnam": [1, 18, 19, 22, 26, 29, 39, 50, 55, 65, 75, 85, 102], "hour": [26, 57], "hous": 83, "how": [0, 5, 9, 18, 20, 22, 26, 27, 29, 37, 39, 50, 55, 60, 61, 64, 69, 82, 94, 97], "howev": [24, 26, 37, 39, 70, 77, 82, 83, 90, 91, 94], "hpe": 78, "ht": 61, "html": [12, 22, 26, 37, 46, 51, 58, 60, 77], "htop": 83, "http": [0, 12, 22, 26, 37, 46, 51, 58, 60, 79, 80], "human": [18, 26, 28, 39, 55], "hundr": 87, "hyperbol": [8, 26, 37], "hyperlink": 64, "hypervisor": 61, "hypothet": [24, 26, 31, 39, 90, 94], "hz_actual": 61, "hz_actual_friendli": 61, "hz_advertis": 61, "hz_advertised_friendli": 61, "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "i2": [26, 27, 37], "i4": [26, 37], "i7": 61, "i_cpi": [26, 27], "iat": [26, 51], "ibpb": 61, "ibr": 61, "ibv": 62, "iconv": [1, 77, 82], "id": [19, 61, 83, 94], "idea": [0, 64, 66, 69, 87], "ideal": [0, 64], "ident": [22, 23, 26, 36, 37, 38, 44, 48, 56, 58, 90, 97, 98], "identif": [26, 32], "identifi": [0, 3, 18, 26, 29, 37, 39, 53, 78, 97], "idn2": [1, 77, 82], "idna": 61, "idx": [3, 22, 24, 26, 27, 68, 94], "idx1": 58, "idx2": [24, 26, 58, 94], "ieee": [26, 37, 93, 97], "ieeestd": [26, 37], "iexp": [26, 37], "iff": [3, 18, 26, 27, 39, 51, 55, 57, 90, 95], "ignor": [12, 15, 22, 23, 24, 26, 29, 36, 37, 56, 57, 87, 93, 97], "ignore_index": [22, 26], "ii16": [26, 37], "ii32": [26, 37], "iinfo": [7, 26, 37], "iinfo_object": 7, "iloc": [26, 51, 56], "imag": [8, 23, 26, 36, 37], "imagin": 94, "imaginari": [8, 23, 26, 36, 37], "imit": [26, 29], "immun": [18, 20, 22, 24, 26, 27, 39, 50, 51, 55, 57, 94], "immut": [23, 24, 26, 36, 37], "imnotok": 19, "imok": 19, "impact": [18, 24, 26, 27, 29, 37, 39, 50, 63, 64, 66, 87, 94], "implement": [0, 5, 6, 8, 11, 18, 19, 20, 22, 23, 25, 26, 36, 37, 38, 39, 42, 44, 48, 49, 50, 51, 55, 60, 69, 75, 90, 92, 102, 103], "implements_numpi": 5, "impli": [3, 26, 56, 96], "implicit": 97, "import": [4, 18, 20, 22, 26, 27, 29, 37, 39, 43, 46, 47, 48, 49, 51, 55, 56, 58, 60, 64, 70, 75, 77, 78, 81, 93, 95, 102], "import_data": [26, 29, 71, 87], "importerror": [26, 39], "impos": [26, 57], "improv": [18, 26, 42, 51, 64, 65, 81, 92], "in1d": [18, 26, 42, 60, 68, 86, 91, 101, 103], "in1d_interv": [3, 26], "inaccess": [18, 22, 26, 27, 29, 39, 50, 55], "inadvert": [20, 26], "inappropri": [3, 26], "includ": [0, 1, 3, 16, 22, 24, 26, 27, 28, 29, 37, 39, 40, 51, 55, 57, 61, 64, 69, 70, 75, 77, 79, 81, 87, 90, 92, 93, 94, 97, 99], "include_initi": 16, "includedelimit": [26, 55, 103], "inclus": [3, 6, 22, 26, 37, 38, 39, 40, 44, 57, 90, 92, 96, 98], "incompat": [26, 37, 79], "incorpor": 97, "increas": [26, 50, 77, 83, 99], "increment": [63, 64], "ind": 96, "independ": [26, 29, 38, 44, 49, 87, 98], "index": [2, 3, 5, 6, 9, 13, 18, 20, 22, 23, 24, 26, 29, 31, 33, 36, 37, 39, 40, 42, 50, 51, 55, 56, 58, 59, 61, 68, 77, 85, 86, 87, 90, 91, 92, 94, 95, 99, 100, 103], "index_label": [26, 51], "index_s": [61, 85], "index_valu": [26, 56], "indexerror": [26, 51], "indexing_funct": [9, 59], "indexof1d": [26, 42], "indic": [0, 3, 5, 7, 9, 10, 13, 14, 15, 18, 19, 20, 22, 24, 26, 27, 29, 31, 33, 34, 37, 39, 41, 42, 50, 51, 52, 54, 55, 57, 58, 68, 70, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 103], "indici": [33, 103], "individu": [26, 45, 62, 103], "inds2": 58, "ineffiec": 72, "inexact": [26, 37], "inf": [26, 37], "infer": [6, 18, 22, 23, 24, 26, 27, 29, 36, 37, 39, 40, 55, 70, 87], "inferred_typ": [18, 26, 27, 39, 55, 56], "infin": [23, 26, 36, 37], "infinit": [8, 24, 26, 37, 39, 90, 94], "info": [0, 1, 18, 22, 26, 28, 32, 39, 55], "infoclass": [26, 59], "inform": [0, 1, 5, 8, 9, 18, 19, 24, 26, 28, 37, 38, 39, 44, 55, 61, 64, 65, 66, 68, 69, 70, 72, 73, 75, 77, 79, 80, 81, 82, 91, 98, 99, 101, 103], "infrastructur": [1, 60], "infti": [26, 37], "ing": [26, 55, 103], "ingest": [87, 103], "inherit": [24, 26, 48, 94, 97], "ini": [0, 61], "init": [24, 26, 80, 94], "initi": [6, 16, 18, 19, 21, 23, 26, 36, 37, 38, 39, 40, 44, 53, 61, 80, 85, 91, 92, 97, 98, 102], "initialdata": [22, 26, 93], "inner": [5, 9, 17, 22, 26, 31], "inplac": [22, 26, 93], "input": [4, 6, 12, 13, 16, 18, 20, 22, 23, 24, 26, 27, 36, 37, 39, 40, 41, 42, 50, 51, 52, 55, 56, 57, 58, 60, 64, 87, 89, 90, 91, 94, 97, 100, 101, 103], "insensit": [26, 27, 39, 55, 61], "insert": [12, 13, 23, 26, 36, 37, 55, 60, 103], "insid": [4, 26, 37], "inspect": [81, 87], "inst": [23, 26, 36, 37], "instal": [1, 4, 26, 29, 39, 65, 78, 83, 102], "instanc": [18, 20, 22, 23, 24, 26, 36, 37, 39, 40, 48, 51, 53, 55, 61, 72, 77, 78, 81, 87, 90, 93, 94, 95, 97, 103], "instanti": [23, 26, 36, 37, 60], "instantiateandregist": 60, "instead": [18, 20, 22, 24, 26, 29, 37, 38, 39, 44, 55, 61, 85, 87, 90, 91, 94, 98, 103], "instruct": [1, 26, 55, 75, 77, 78, 79, 80, 82, 83, 84, 102], "insuffici": [26, 37], "int": [3, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 44, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 70, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103], "int16": [23, 26, 36, 37, 38, 44, 95], "int16dtyp": [26, 37], "int32": [23, 26, 36, 37, 38, 44, 95], "int32dtyp": [26, 37], "int64": [3, 18, 20, 22, 23, 24, 26, 27, 29, 31, 33, 36, 37, 38, 39, 40, 42, 44, 50, 52, 54, 55, 56, 57, 60, 61, 68, 69, 70, 85, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103], "int64dtyp": [26, 37], "int8": [23, 26, 36, 37, 38, 44, 95], "int8dtyp": [26, 37], "int_": [23, 26, 36, 37], "int_scalar": [18, 22, 23, 24, 26, 29, 36, 37, 38, 39, 40, 44, 50, 52, 53, 55, 57, 89, 90, 92, 94, 95, 97, 103], "int_typ": [26, 37], "intc": [23, 26, 36, 37], "intdtyp": [26, 37], "integ": [1, 5, 9, 10, 12, 18, 20, 22, 23, 24, 26, 27, 29, 31, 36, 37, 38, 39, 40, 41, 44, 48, 56, 57, 70, 86, 90, 91, 92, 93, 94, 97, 99, 101, 103], "integr": [0, 23, 24, 26, 29, 36, 37, 38, 39, 40, 44, 64, 87, 92, 94], "intel": 61, "intend": [0, 18, 20, 22, 26, 37, 39, 50, 55, 56, 69, 75, 79, 80, 88, 93, 100], "intens": [26, 52, 68, 89, 92], "intention": [23, 36], "interact": [65, 69, 73, 74, 75, 80, 82], "interest": 68, "interfac": [0, 64], "interleav": [18, 22, 26, 42, 51, 92], "intermedi": [3, 26], "intern": [1, 5, 9, 23, 26, 31, 36, 37, 39, 55, 56, 60, 64], "interoper": 0, "interpret": [19, 22, 23, 26, 29, 36, 37, 48, 61, 87, 102], "intersect": [22, 23, 24, 26, 36, 37, 42, 50, 68, 86, 101], "intersect1d": [18, 26, 42, 50, 60, 68, 86, 99, 101], "intersect_df": [22, 26], "interv": [3, 6, 26, 37, 38, 40, 44, 48, 57, 92, 95, 98], "interval_lookup": [3, 26], "intp": [23, 26, 36, 37], "intptr_t": [23, 26, 36, 37], "introduc": 12, "introduct": 68, "inttyp": [23, 26, 36, 37], "intx": [22, 26], "inv": [38, 44, 98], "invalid": [26, 29, 87], "invari": 1, "invers": [14, 22, 26, 37, 38, 44, 48, 58, 93, 98], "inverse_indic": 14, "invert": [24, 26, 42, 101], "invert_permut": [22, 26, 58], "invok": [26, 38, 40, 44, 77], "involv": [5, 9, 65, 84], "invpcid": 61, "invpcid_singl": 61, "io": [26, 37, 59, 60, 61, 71, 72, 73], "io_compress": 61, "io_files_per_loc": 61, "io_only_delet": 61, "io_only_read": 61, "io_only_writ": 61, "io_path": 61, "io_util": [26, 59], "ior": [26, 55, 103], "ip": [20, 26], "ip2": [20, 26], "ip_address": [20, 26, 27, 88], "ipaddress": [20, 26], "ipv4": [20, 26, 29], "ipv6": [20, 26], "ipython": [19, 25, 75], "iqr": 61, "iqr_outli": 61, "is_cosort": [3, 26], "is_float": 58, "is_int": 58, "is_integ": [23, 26, 36, 37], "is_ipv4": [20, 26], "is_ipv6": [20, 26], "is_leap_year": [26, 57], "is_numer": 58, "is_regist": [18, 20, 22, 24, 26, 27, 39, 50, 51, 55, 57, 58, 86, 94], "is_sort": [26, 39, 86, 90, 95], "is_uniqu": [26, 27], "isaac": [33, 103], "isalnum": [26, 55], "isalpha": [26, 55], "isbool": 70, "isdecim": [26, 55], "isdigit": [26, 55], "isdisjoint": [23, 24, 26, 36, 37], "isdtyp": 7, "isempti": [26, 55], "isf": 48, "isfinit": [8, 26, 37], "isin": [22, 26, 51], "isinf": [8, 26, 37], "isinst": [18, 26, 37, 40, 60], "islow": [26, 55], "isn": [26, 37, 66], "isna": [18, 22, 26, 51], "isnan": [8, 26, 37], "isnul": [26, 51], "iso": [26, 37], "isocalendar": [26, 57], "isort": [0, 82], "isscalar": [26, 37], "issctyp": [26, 37], "isspac": [26, 55], "issu": [18, 21, 22, 24, 26, 37, 60, 64, 77, 83, 94, 99], "issubclass": [26, 37], "issubclass_": [26, 37], "issubdtyp": [26, 37], "issubsctyp": [26, 37], "issubset": [23, 24, 26, 36, 37], "issuperset": [23, 24, 26, 36, 37], "issupportedbool": [23, 26, 36, 37], "issupporteddtyp": [23, 26, 36, 37], "issupportedfloat": [23, 26, 36, 37], "issupportedint": [23, 26, 36, 37], "issupportednumb": [23, 26, 36, 37], "istitl": [26, 55], "isupp": [26, 55], "item": [3, 5, 9, 18, 22, 23, 24, 26, 36, 37, 39, 40, 42, 51, 56, 58, 91, 93, 94, 100, 101], "items": [23, 26, 36, 37, 39, 40, 53, 55, 86, 87, 97], "itemset": [23, 26, 36, 37], "iter": [22, 23, 24, 26, 29, 36, 37, 40, 52, 56, 61, 86, 87, 89], "iter1": [26, 56], "iter2": [26, 56], "ith": [18, 26, 50, 55], "its": [3, 8, 18, 23, 26, 27, 36, 37, 39, 42, 50, 51, 55, 60, 64, 70, 79, 80, 90, 97, 99, 100, 103], "itself": [26, 37, 38, 39, 44, 55, 56, 64, 98, 103], "j": [26, 50, 62, 63, 79, 80, 99], "j16": 63, "jake": 68, "jane": 68, "john": 68, "join": [22, 26, 50, 55, 59, 86], "join_on_eq_with_dt": [26, 31], "json": [18, 19, 26, 28, 39, 49, 55, 60, 82], "judici": [26, 37], "jupyt": [19, 25, 75, 82], "just": [26, 37, 65, 66, 97, 98], "k": [6, 23, 26, 36, 37, 38, 39, 40, 44, 48, 61, 90, 95, 98], "kb": [19, 22, 26, 27, 51, 58], "keep": [0, 3, 13, 16, 17, 22, 24, 26, 37, 68, 80, 83, 87, 90, 93, 94], "keepdim": [13, 16, 17, 26, 39, 90, 95], "keepparti": [26, 55, 103], "kei": [3, 18, 22, 23, 24, 26, 27, 28, 29, 30, 36, 37, 42, 51, 56, 68, 70, 81, 83, 88, 93, 94, 100, 101], "kept": [22, 24, 26, 37, 50, 93, 94], "kextrememsg": 81, "key_": 70, "keyerror": [23, 26, 36, 37, 51], "keyfil": 1, "keynam": 58, "keys1": [3, 26], "keys2": [3, 26], "keyword": [0, 17, 18, 22, 23, 26, 36, 37, 38, 44, 48, 50, 51, 56, 92, 98, 100], "kind": [7, 23, 26, 36, 37, 41], "kitwar": 79, "know": [5, 9, 65, 75], "known": [0, 4, 26, 29, 37, 87], "kurt": 48, "kurtosi": 48, "kwarg": [17, 18, 22, 23, 24, 26, 36, 37, 40, 45, 48, 51, 56, 57, 58, 91, 92, 94], "kwd": 48, "l": [5, 9, 23, 26, 29, 36, 37, 57, 62, 64, 68, 69, 77, 87], "l1_data_cache_s": 61, "l1_instruction_cache_s": 61, "l2_cache_associ": 61, "l2_cache_line_s": 61, "l2_cache_s": 61, "l3_cache_s": 61, "l_name": 68, "label": [0, 18, 22, 24, 26, 27, 43, 48, 51, 56, 91, 93, 94, 100], "lack": [23, 26, 36, 37], "lahf_lm": 61, "laid": 0, "lam": [38, 44, 98], "lambda": [4, 22, 26, 38, 44, 46, 98], "lambda_": [26, 46], "lang": 79, "larg": [5, 9, 18, 23, 26, 36, 37, 38, 44, 61, 77, 90, 98], "larger": [18, 22, 24, 26, 37, 39, 40, 55, 64, 68, 87, 91, 94, 97, 103], "largest": [26, 37, 38, 39, 44, 51, 90, 98, 100], "last": [12, 13, 17, 22, 23, 24, 26, 36, 37, 39, 40, 51, 52, 55, 56, 64, 81, 89, 93, 94, 100, 102, 103], "late": 21, "later": [22, 26, 37, 39, 55, 82], "latest": [12, 26, 58, 60, 75, 79, 80, 83], "latter": [19, 103], "launch": [60, 83, 86], "layer": 87, "layout": [26, 53, 54], "lb": 48, "ld15iqr": 61, "ld_library_path": 1, "lead": [26, 37, 39, 55], "learn": [26, 57, 60, 75], "least": [0, 20, 22, 23, 24, 26, 36, 37, 39, 50, 52, 55, 89, 94, 99], "leav": [0, 26, 37, 95], "left": [0, 3, 8, 13, 20, 22, 26, 37, 39, 48, 52, 54, 55, 56, 57, 89, 95, 103], "left_align": [3, 26], "left_df": [22, 26], "left_suffix": [22, 26], "legend": 48, "leibniz": [33, 103], "len": [24, 26, 39, 50, 55, 90, 94, 96, 99, 103], "len_suffix": [26, 50], "length": [0, 3, 12, 18, 22, 23, 24, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 49, 50, 51, 55, 61, 78, 85, 87, 90, 92, 94, 99, 100, 101, 103], "length_or_data": [26, 37], "less": [8, 18, 22, 24, 26, 27, 37, 38, 39, 44, 50, 55, 94, 98], "less_equ": 8, "lesser": 61, "let": 68, "letter": [26, 55], "level": [1, 26, 27, 32, 37, 42, 51, 56, 60, 61, 65, 69, 70, 77, 79, 80, 81, 84, 87, 100, 101], "levelnam": 26, "leverag": [63, 79], "lexicograph": [26, 52, 64, 89], "lhdf5": 1, "lhdf5_hl": 1, "lib": [1, 77, 83, 101], "libiconv": 82, "libidn2": 82, "librari": [0, 1, 60, 77, 83, 103], "libtic": 83, "libtinfow": 83, "licens": 79, "liconv": 1, "lidn2": 1, "lie": [18, 26, 37, 55], "life": [80, 82], "lifo": [23, 26, 36, 37], "like": [0, 2, 3, 5, 9, 20, 22, 23, 24, 26, 36, 37, 38, 44, 57, 60, 62, 64, 65, 66, 68, 71, 75, 77, 81, 83, 87, 88, 93, 94, 96, 98, 100, 102, 103], "likelihood": [24, 26, 39, 46, 90, 94], "lim": 96, "limit": [0, 4, 5, 17, 18, 26, 31, 37, 38, 39, 40, 44, 55, 57, 69, 72, 75, 83, 87, 91, 93, 97, 98, 103], "linalg": [9, 59], "line": [0, 26, 30, 37, 65, 69, 75, 78, 81, 102], "linear": [26, 37, 103], "linearli": [26, 40, 57, 92], "linefe": [26, 37], "lineno": 26, "link": [0, 1, 26, 29, 57, 64, 77, 79], "linkifi": 82, "linspac": [6, 24, 26, 37, 40, 48, 86, 90, 92, 94, 97], "linter": 0, "linux": [23, 26, 36, 37, 49, 61, 77, 83, 84], "linux64": 79, "linux_instal": 78, "list": [0, 3, 5, 6, 9, 12, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 36, 37, 39, 40, 41, 42, 43, 48, 50, 51, 53, 55, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 73, 75, 81, 84, 87, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103], "list_registri": [26, 28, 39], "list_symbol_t": [26, 28], "listen": [75, 102], "liter": [13, 23, 26, 36, 37, 41, 48, 55, 91, 103], "littl": [23, 26, 36, 37], "live": [79, 80], "ll": [65, 66, 77], "llvm": [79, 80, 83], "lm": 61, "ln": [38, 44, 83, 98], "lname": 68, "lnjcsdxd": [26, 40], "lo": [26, 37], "load": [18, 22, 26, 27, 29, 39, 50, 55, 69, 70, 72, 73, 83, 87], "load_al": [18, 22, 26, 27, 29, 39, 55, 73], "loc": [26, 38, 44, 48, 51, 98], "local": [0, 1, 5, 9, 18, 19, 21, 22, 24, 26, 27, 29, 37, 39, 50, 51, 55, 57, 58, 61, 62, 70, 75, 77, 79, 80, 87, 92, 94, 100, 102], "locale_hostnam": 19, "locale_id": 19, "localhost": [19, 75, 102], "locat": [1, 13, 24, 26, 27, 37, 38, 39, 44, 48, 49, 51, 55, 61, 64, 66, 77, 83, 90, 94, 98, 100, 103], "locationsinfo": 34, "log": [1, 8, 21, 24, 26, 32, 37, 38, 40, 43, 44, 46, 47, 48, 55, 86, 90, 94, 98], "log10": [8, 26, 37], "log1p": [8, 26, 37], "log2": [8, 26, 37], "log_lvl": [26, 32], "log_msg": [26, 32], "logaddexp": 8, "logarithm": [8, 26, 37, 38, 44, 90, 98], "logcdf": 48, "logformat": 26, "logger": [18, 24, 26, 34, 50, 55, 59, 86, 94], "logic": [3, 8, 18, 26, 37, 38, 40, 44, 50, 55, 86, 92, 95, 99], "logical_and": 8, "logical_not": 8, "logical_or": 8, "logical_xor": 8, "logist": [38, 44, 86], "loglevel": [26, 32], "logmean": [26, 40], "lognorm": [26, 38, 40, 44, 86], "logpdf": 48, "logsf": 48, "logstd": [26, 40], "long": [23, 26, 36, 37, 50, 55, 66, 99], "longcomplex": [26, 37], "longdoubl": [26, 37], "longdoubledtyp": [26, 37], "longdtyp": [26, 37], "longer": [22, 26, 40, 70, 82, 93], "longfloat": [26, 37], "longlong": [26, 37], "longlongdtyp": [26, 37], "longnam": 48, "look": [0, 1, 26, 37, 60, 64, 65, 68, 81, 83, 87, 102], "lookahead": [18, 26, 55, 91, 103], "lookbehind": [18, 26, 55, 91, 103], "lookup": [3, 26, 27, 51], "loop": 1, "loos": 64, "lose": [26, 37], "loss": 99, "lot": 61, "love": 0, "low": [3, 20, 22, 26, 37, 38, 39, 40, 44, 68, 87, 92, 98], "lower": [6, 22, 26, 37, 38, 44, 55, 60, 70, 93, 98], "lower_bounds_inclus": [3, 26], "lowercamelcas": 0, "lowercas": [26, 40, 55], "lowest": [3, 22, 26, 38, 39, 40, 44, 98], "lr": [26, 40], "ls_csv": [26, 29, 69, 73], "lst": [26, 51], "lstick": [26, 55, 86, 103], "lt": 83, "lw": 48, "lz": [26, 39], "lz4": [18, 22, 26, 27, 29, 39, 50, 55, 61, 72], "lzmq": 1, "m": [0, 23, 26, 27, 33, 36, 37, 40, 48, 50, 57, 61, 77, 83, 103], "m1": 68, "m2": [26, 27, 68], "m4": 79, "mac": [77, 80], "mac_instal": 78, "machep": [26, 37], "machin": [19, 26, 37, 61, 62, 65, 78, 79, 80, 102], "machine_info": 61, "maco": [49, 79, 84], "macosx": 80, "made": [20, 22, 23, 26, 36, 37, 55, 103], "mai": [4, 18, 22, 26, 27, 29, 37, 38, 39, 40, 41, 42, 44, 51, 55, 56, 60, 68, 70, 77, 80, 82, 83, 87, 91, 92, 93, 97, 103], "main": [6, 26, 37, 61, 64, 70], "mainli": 1, "maintain": [13, 26, 27, 29, 50, 71, 87], "major": [64, 69, 88, 93, 100], "make": [0, 1, 12, 18, 20, 22, 26, 29, 37, 38, 44, 48, 51, 57, 60, 61, 62, 63, 64, 66, 75, 77, 78, 79, 80, 81, 83, 91, 93, 98], "makebinari": 63, "makefil": [75, 77], "malform": [26, 40, 87], "manag": [77, 79, 80, 82, 84], "mandatori": [23, 36], "mani": [3, 18, 22, 26, 37, 61, 78, 91, 94], "manipul": 0, "manipulation_funct": [9, 59], "manner": [38, 44], "mantissa": [23, 26, 36, 37], "manual": [26, 37, 60, 80, 82], "map": [3, 18, 19, 20, 22, 23, 26, 27, 29, 30, 36, 37, 38, 44, 51, 55, 58, 93, 98, 103], "mapper": [22, 26, 93], "mark": 70, "markdown": [0, 21, 22, 26, 51], "mask": [22, 26, 37, 50, 51, 55, 99], "mass": [38, 44, 98], "master": [0, 64, 77], "match": [1, 6, 12, 18, 22, 24, 26, 27, 29, 34, 37, 39, 40, 50, 51, 55, 56, 57, 58, 59, 61, 86, 87, 90, 92, 94, 97, 100, 102], "match_bool": 34, "match_ind": 34, "match_typ": [33, 34, 86, 103], "matcher": [26, 59], "matchtyp": [33, 34, 103], "math": [4, 26, 33, 103], "mathemat": 90, "mathjax": 82, "matlab": 96, "matmul": [11, 26, 37], "matplotlib": [26, 37, 43, 48, 82, 95], "matric": [6, 26, 37, 54, 58], "matrix": [11, 22, 24, 26, 37, 54, 58, 94], "matrix_transpos": 11, "matter": 65, "max": [7, 16, 22, 23, 24, 26, 36, 37, 39, 50, 51, 55, 61, 86, 90, 94, 95, 103], "max_bit": [26, 39, 40, 53, 61, 87, 92, 97], "max_list_s": [26, 27, 88], "max_tim": 61, "max_work": [26, 37], "maxbit": 61, "maxexp": [26, 37], "maxima": [24, 26, 94], "maximum": [1, 13, 16, 17, 19, 22, 24, 26, 27, 37, 38, 39, 40, 44, 58, 61, 87, 90, 92, 93, 94, 95], "maximum_sctyp": [26, 37], "maxk": [26, 39, 81, 86, 90, 95], "maxkmsg": 81, "maxlen": [26, 40], "maxmum": [26, 39, 90], "maxsplit": [26, 34, 55], "maxtaskpar": 19, "maxtransferbyt": [5, 9, 18, 22, 26, 39, 40, 55, 56, 57, 87, 91, 93, 97, 103], "mb": [19, 22, 26, 27, 51, 58], "mca": 61, "mce": 61, "md": [77, 78, 79, 80], "mean": [16, 19, 22, 23, 24, 26, 29, 36, 37, 38, 39, 40, 44, 48, 49, 50, 51, 52, 55, 61, 86, 87, 90, 94, 95, 98], "mean_shim": 16, "measur": [61, 85], "median": [22, 24, 26, 37, 38, 44, 48, 61, 86, 94, 98], "meet": 0, "megabyt": [22, 26, 93], "member": [0, 23, 26, 36, 37], "membership": [3, 24, 26, 42, 94, 101], "memori": [18, 19, 21, 22, 26, 27, 29, 39, 50, 51, 55, 56, 62, 66, 67, 70, 75, 77, 79, 80, 83, 87, 91, 97, 103], "memory_usag": [22, 26, 27, 51], "memory_usage_info": [22, 26], "memoryview": [23, 26, 36, 37, 55], "mention": [0, 66], "menu": 78, "mere": [26, 55], "merg": [18, 22, 26, 58, 64], "mesg": [26, 37], "meshgrid": 6, "messag": [1, 18, 19, 21, 22, 26, 27, 32, 37, 39, 40, 50, 55, 56, 60, 75, 78, 87], "messagearg": 60, "meta": 60, "metadata": [26, 29], "method": [2, 5, 18, 19, 20, 22, 23, 24, 25, 26, 29, 36, 37, 38, 39, 40, 44, 48, 49, 50, 51, 55, 56, 60, 63, 68, 69, 86, 87, 91, 92, 94, 95, 97, 98], "method1": [26, 37], "method2": [26, 37], "mi": [18, 26, 27, 51, 57], "mib": 61, "microsecond": [26, 57], "microsoft": [61, 83], "middl": [26, 37], "midnight": [26, 57], "might": [26, 51, 77, 80, 81], "milli": [26, 31], "million": [26, 37, 39, 90], "millisecond": [26, 57], "mimic": [38, 44, 98], "min": [7, 16, 22, 23, 24, 26, 36, 37, 39, 50, 51, 61, 86, 90, 94, 95], "min_digit": [26, 37], "min_round": 61, "min_tim": 61, "mind": [0, 68, 83], "mine": 66, "minexp": [26, 37], "miniforg": 77, "minim": [5, 22, 26, 65, 66, 92, 93], "minima": [24, 26, 94], "minimum": [13, 16, 17, 24, 26, 37, 39, 40, 79, 90, 94, 95], "mink": [26, 39, 81, 86, 90, 95], "minkmsg": 81, "minlen": [26, 40], "minor": 64, "mintypecod": [26, 37], "minu": [26, 37], "minut": [26, 57], "mismatch": [22, 24, 26, 77, 94], "miss": [3, 18, 22, 26, 37, 51, 91], "mistak": 64, "mix": [26, 55, 57, 61], "mixtur": [38, 44, 98], "mkdir": [22, 26], "mm": 64, "mmx": 61, "mod": [26, 39, 46], "modal": [24, 26, 94], "mode": [1, 17, 18, 20, 22, 24, 26, 27, 29, 37, 39, 50, 51, 55, 86, 92, 94], "model": [61, 98], "modif": [18, 20, 22, 24, 26, 27, 39, 50, 51, 55, 57, 81, 93, 94], "modifi": [22, 26, 37, 46, 65, 93], "modul": [26, 60, 65, 66, 75, 87, 103], "modular": [26, 39, 66], "modulenotfounderror": [26, 39], "moment": 48, "moment_typ": 48, "momtyp": 48, "monoton": [26, 39, 90, 95], "month": [26, 57, 64], "more": [0, 1, 3, 5, 8, 9, 12, 18, 22, 23, 24, 26, 27, 29, 36, 37, 39, 48, 51, 55, 57, 60, 61, 62, 64, 65, 66, 68, 70, 72, 73, 75, 77, 78, 79, 80, 82, 87, 91, 93, 94, 97, 99, 103], "most": [0, 1, 20, 24, 26, 34, 37, 51, 55, 56, 61, 63, 64, 68, 70, 75, 77, 80, 83, 87, 92, 94, 97, 100, 103], "most_common": [24, 26, 58, 86, 94], "mostli": [20, 26, 56], "motion": 1, "movb": 61, "move": [12, 26, 52, 58, 66, 68, 89, 92, 99], "moveaxi": 12, "movement": 92, "mpi": 87, "msb_left": [20, 26], "msg": [26, 37], "msgarg": 60, "msgtupl": 60, "msi": 61, "msr": 61, "mt": [5, 9], "mtrr": 61, "mu": [26, 38, 40, 44, 98], "much": [0, 3, 18, 22, 26, 29, 39, 50, 55, 63, 68, 70, 87, 91, 97, 103], "muller": [38, 44, 98], "multi": [3, 20, 24, 26, 29, 37, 42, 51, 68, 77, 88, 92, 94, 97, 100, 101], "multia": [26, 42, 101], "multib": [26, 42, 101], "multidimension": [26, 37, 55, 103], "multiindex": [22, 26, 27, 51, 88, 100], "multipl": [3, 12, 22, 26, 29, 37, 42, 50, 57, 61, 62, 68, 70, 72, 73, 81, 85, 87, 88, 90, 93, 99], "multiplex": 90, "multipli": [8, 24, 26, 38, 44, 54, 60, 94, 98], "must": [1, 3, 4, 10, 12, 18, 19, 20, 22, 23, 24, 26, 27, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 50, 51, 55, 56, 57, 60, 62, 65, 68, 69, 75, 79, 81, 87, 90, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103], "mutual": 1, "mv": [48, 65, 66], "mvsk": 48, "my": [26, 55, 65, 87, 103], "my_data": [22, 26], "my_data_locale0000": [22, 26], "my_dir": [22, 26], "my_path": [22, 26], "my_table_nam": [22, 26], "my_zero": [26, 39], "myarrai": [5, 26, 58], "mydtyp": [26, 39, 53, 97], "mypi": [0, 82], "myst": 82, "n": [5, 9, 12, 17, 18, 22, 24, 26, 29, 37, 38, 39, 40, 41, 42, 44, 50, 51, 55, 57, 69, 80, 82, 85, 90, 91, 92, 93, 94, 98, 99, 100], "n_col": 6, "n_row": 6, "na": [18, 22, 26, 51, 70], "na_cod": 70, "naiv": [26, 57], "name": [0, 1, 2, 3, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 32, 36, 37, 38, 39, 40, 44, 48, 50, 51, 53, 55, 56, 57, 58, 60, 61, 62, 64, 68, 69, 70, 72, 77, 78, 80, 81, 82, 86, 87, 88, 91, 92, 93, 94, 98, 100], "name_dict": [38, 44, 98], "name_prefix": [26, 29, 39, 87], "name_prefix_local": [26, 29, 39], "namedtupl": 14, "nameserv": 83, "namespac": [2, 5, 9, 26, 29], "namewidth": [20, 26], "nan": [8, 22, 23, 24, 26, 36, 37, 51, 58, 93, 94, 97], "nanosecond": [26, 40, 57], "nativ": [23, 24, 26, 36, 37, 71, 72, 80, 87, 94, 99], "natur": [8, 26, 37, 90], "navalu": [18, 26, 91], "navig": [61, 64, 77, 78, 79, 80, 82], "nbin": [26, 37, 95], "nbyte": [18, 22, 23, 26, 27, 36, 37, 39, 40, 50, 51, 55, 58, 87], "ncx2": 48, "nd": [19, 26, 37, 60], "ndarrai": [5, 6, 9, 18, 23, 26, 36, 37, 39, 40, 43, 50, 55, 56, 68, 87, 90, 91, 97, 99, 103], "ndim": [5, 9, 12, 18, 23, 26, 27, 29, 36, 37, 39, 51, 52, 53, 55, 60, 86, 91, 97], "nearest": [26, 37], "necessari": [0, 26, 37, 60, 64, 77, 83], "necessarili": [18, 26, 37, 51, 55], "need": [0, 5, 18, 22, 26, 29, 37, 39, 50, 51, 53, 55, 60, 61, 64, 65, 66, 69, 77, 79, 80, 81, 83, 87, 93, 100], "neg": [6, 8, 22, 24, 26, 37, 38, 40, 44, 50, 63, 92, 94, 96, 98, 99], "negat": 8, "negep": [26, 37], "neglig": [18, 26, 55], "neither": [18, 26, 27, 37, 39, 40, 55, 57, 92, 103], "nest": [5, 9, 26, 29, 70, 87], "nestedsequ": 6, "never": [26, 37, 97], "new": [0, 4, 6, 12, 18, 21, 22, 23, 24, 26, 27, 29, 30, 32, 33, 34, 36, 37, 38, 39, 43, 44, 48, 50, 51, 53, 55, 58, 60, 64, 65, 66, 78, 82, 93, 94, 97, 98, 99, 100, 103], "new_categori": [18, 26], "new_dtyp": [23, 26, 36, 37], "new_nam": [26, 37], "new_ord": [23, 26, 36, 37], "new_str": [26, 55, 103], "newbyteord": [23, 26, 36, 37], "newer": 79, "newfig": [26, 43], "newli": [22, 26], "newlin": [22, 26, 27, 29, 37, 39, 55, 69], "newton": [33, 103], "nexp": [26, 37], "next": [26, 37, 64, 66, 77, 81, 102], "nextaft": [26, 37], "neyman": [26, 46], "ngram": [26, 50, 86], "ngroup": [24, 26, 86, 94], "nice": 0, "nightli": 1, "ninf": [26, 37], "nkedqc": [26, 40], "nkei": [24, 26, 51, 86, 94], "nl": [62, 75, 102], "nlevel": [18, 26, 27, 86, 91], "nmant": [26, 37], "nnz": [24, 26, 53], "node": [5, 9, 18, 22, 26, 29, 39, 50, 55, 61, 70, 85, 87], "node01": [75, 102], "non": [1, 3, 13, 18, 21, 22, 24, 26, 29, 34, 37, 38, 39, 40, 42, 44, 48, 51, 52, 53, 54, 55, 63, 87, 89, 90, 92, 94, 95, 96, 98, 103], "non_empti": [26, 50], "noncentr": 48, "none": [3, 4, 5, 6, 9, 10, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 51, 53, 55, 56, 57, 58, 61, 79, 80, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 102], "nonetyp": [26, 37, 38, 44], "nonexist": [22, 26, 93], "nonuniqueerror": [3, 26], "nonzero": [13, 23, 24, 26, 34, 36, 37, 55, 103], "nopl": 61, "nor": [18, 26, 27, 37, 39, 40, 55, 92, 103], "norepeat": [26, 50, 99], "normal": [18, 19, 20, 22, 24, 26, 37, 38, 39, 40, 44, 57, 86, 90, 91, 93, 94], "not_alnum": [26, 55], "not_alpha": [26, 55], "not_decim": [26, 55], "not_digit": [26, 55], "not_empti": [26, 55], "not_equ": 8, "not_spac": [26, 55], "notabl": 103, "notat": [26, 37], "note": [0, 1, 2, 3, 4, 5, 9, 15, 18, 19, 20, 22, 24, 26, 27, 29, 30, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 55, 56, 57, 58, 60, 62, 66, 68, 70, 72, 77, 80, 81, 83, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103], "notebook": [19, 25, 75], "notebookhistoryretriev": 25, "notic": [60, 68], "notifi": 70, "notimplementederror": [26, 37, 95], "notion": [5, 9], "notna": [22, 26, 51], "notnul": [26, 51], "nov": 61, "now": [18, 20, 22, 24, 26, 27, 37, 38, 39, 44, 50, 51, 53, 54, 55, 57, 58, 65, 66, 69, 72, 77, 78, 79, 80, 94], "np": [4, 5, 8, 9, 18, 22, 23, 24, 26, 31, 36, 37, 39, 40, 41, 43, 47, 48, 50, 51, 55, 56, 57, 58, 68, 87, 90, 91, 92, 93, 94, 95, 97, 99, 103], "np_arr": 68, "nparrai": [26, 56], "null": [18, 22, 23, 24, 26, 29, 36, 37, 55, 70, 87, 91, 103], "num": [6, 19, 23, 26, 36, 37], "num_command": [19, 25], "num_match": [26, 34, 55, 103], "numarg": 48, "numba": [26, 39], "number": [0, 1, 3, 6, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 34, 36, 37, 38, 39, 40, 44, 48, 50, 51, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 68, 70, 79, 81, 83, 85, 87, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103], "number_format_str": [23, 26, 36, 37], "number_of_substit": [26, 55, 103], "numbers2": [26, 27], "numer": [3, 22, 26, 29, 37, 39, 40, 43, 51, 52, 58, 59, 70, 86, 87, 89, 91, 97, 100, 103], "numeric_and_bool_scalar": [23, 26, 36, 37], "numeric_onli": [22, 26], "numeric_scalar": [23, 26, 36, 37, 38, 39, 40, 44, 90, 92, 98], "numericdtyp": [23, 26, 36, 37], "numid": 94, "numlocal": [18, 19, 22, 26, 27, 29, 39, 50, 55, 102], "numpi": [0, 4, 5, 6, 9, 18, 20, 22, 23, 26, 27, 31, 34, 39, 40, 44, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 68, 82, 85, 87, 90, 91, 92, 95, 96, 97, 98, 99, 101, 103], "numpu": 19, "numpy_funct": 5, "numpy_scalar": [23, 26, 36, 37, 39, 90], "numpydoc": 60, "nuniqu": [22, 24, 26, 50, 86, 94], "nx": [26, 37, 61], "ny": [26, 37], "nzero": [26, 37], "o": [18, 22, 24, 26, 27, 37, 39, 40, 49, 50, 55, 84, 86, 94], "o0": 1, "o1": 1, "obj": [6, 26, 29, 37, 41, 56, 58], "obj2sctyp": [26, 37], "object": [2, 3, 4, 5, 6, 9, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 48, 49, 50, 51, 55, 56, 57, 58, 60, 69, 70, 71, 72, 73, 83, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101], "object_": [26, 37], "objectdtyp": [26, 37], "objtyp": [18, 22, 24, 26, 27, 34, 39, 50, 51, 55, 70], "observ": [0, 26, 38, 39, 44, 46, 90, 98], "obtain": [26, 34, 37, 55, 103], "occasion": 60, "occupi": [26, 37], "occur": [19, 22, 24, 26, 29, 34, 37, 38, 39, 41, 44, 51, 55, 77, 94, 95, 98, 100, 103], "occurr": [3, 14, 23, 26, 34, 36, 37, 39, 42, 55, 95, 103], "odd": [26, 37, 39], "oerror": 30, "off": [26, 55, 65, 103], "offer": [88, 93, 100, 103], "offset": [18, 24, 26, 29, 37, 40, 55, 70, 87, 91, 101, 103], "offset_alias": [26, 57], "offset_attrib": [26, 55], "often": [18, 26, 91, 95], "ok": [64, 78], "old": [18, 26, 64], "old_func": [26, 37], "old_nam": [26, 37], "older": [26, 27, 39, 70, 79], "olduint": [26, 37], "omit": [26, 37, 55, 57, 61, 70], "onc": [0, 22, 24, 26, 29, 39, 51, 55, 62, 63, 64, 66, 68, 69, 72, 77, 83, 94], "one": [0, 1, 2, 3, 4, 5, 6, 9, 12, 18, 22, 23, 24, 26, 27, 29, 30, 36, 37, 38, 39, 40, 42, 44, 48, 50, 51, 53, 55, 60, 61, 64, 66, 68, 69, 70, 72, 75, 79, 80, 81, 82, 83, 87, 90, 91, 92, 93, 94, 98, 99, 101, 103], "one_two": [26, 55, 103], "onelin": 64, "ones": [1, 6, 12, 19, 22, 23, 26, 36, 37, 40, 51, 61, 65, 85, 86, 90, 92], "ones_lik": [6, 26, 40, 86, 92], "onli": [3, 5, 9, 17, 18, 21, 22, 24, 26, 27, 29, 31, 33, 37, 38, 39, 40, 42, 44, 50, 51, 52, 53, 55, 56, 58, 60, 61, 63, 65, 66, 68, 70, 72, 77, 81, 82, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103], "onlin": [64, 83], "onto": [22, 26, 55, 103], "op": [18, 20, 22, 26, 29, 39, 50, 55, 61], "open": [0, 3, 6, 18, 22, 26, 27, 29, 30, 37, 38, 39, 44, 50, 51, 55, 57, 78, 83, 98], "opeq": [20, 26, 39], "opeqop": [26, 39], "oper": [18, 19, 20, 21, 22, 24, 26, 27, 29, 37, 39, 49, 50, 52, 53, 55, 60, 61, 64, 71, 75, 82, 84, 85, 86, 89, 93, 94, 96, 102], "opposit": [23, 26, 36, 37], "opt": [77, 79, 80], "optim": [65, 78], "option": [1, 3, 4, 6, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 50, 51, 55, 56, 57, 60, 61, 64, 70, 77, 78, 79, 82, 85, 87, 90, 92, 93, 94, 98, 100, 101, 102, 103], "order": [0, 5, 9, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 26, 29, 36, 37, 39, 40, 42, 46, 48, 50, 51, 52, 55, 56, 58, 62, 70, 72, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 103], "ordin": [26, 37], "org": [12, 22, 26, 37, 46, 51, 58, 60], "organ": 78, "orient": [72, 91, 93, 97, 103], "orig": [26, 55, 103], "orig_kei": [24, 26, 94], "origin": [12, 18, 20, 22, 23, 24, 26, 27, 29, 33, 36, 37, 39, 42, 50, 51, 55, 57, 90, 91, 92, 93, 94, 99, 103], "origin_indic": [26, 50, 55, 99], "oserror": 30, "osxsav": 61, "other": [3, 6, 18, 20, 22, 23, 24, 26, 27, 29, 36, 37, 38, 39, 40, 44, 50, 52, 55, 57, 61, 65, 66, 68, 87, 88, 89, 90, 91, 94, 98, 99, 101, 103], "other_df": [22, 26], "otherwis": [0, 3, 6, 13, 16, 18, 22, 23, 24, 26, 27, 29, 33, 36, 37, 38, 39, 40, 42, 44, 48, 50, 51, 55, 58, 84, 87, 91, 93, 94, 97, 98, 99, 101, 103], "our": [0, 26, 39, 60, 61, 63, 64, 68, 70, 75, 77, 78, 83, 84, 87], "out": [0, 16, 19, 22, 23, 26, 36, 37, 50, 65, 66, 69, 70, 72, 77, 81, 95, 96, 99], "outer": [5, 9, 22, 26, 96], "outlier": 61, "outlin": [64, 70], "outperform": [26, 39, 90], "output": [0, 1, 6, 13, 16, 18, 20, 22, 24, 26, 27, 29, 37, 38, 39, 41, 44, 50, 51, 55, 56, 64, 68, 72, 75, 78, 87, 90, 94, 95, 97, 98, 101, 102], "outsid": [0, 26, 37, 69, 81], "outstand": 0, "over": [3, 18, 22, 26, 29, 37, 38, 39, 44, 50, 52, 55, 60, 85, 89, 90, 91, 93, 95, 97, 98, 99, 103], "overflow": [18, 26, 37, 39, 55, 87, 91, 97, 103], "overflowerror": [23, 26, 36, 37], "overlap": [3, 22, 26, 34, 55, 103], "overload": [24, 26, 37, 94], "overnight": 66, "overrid": [18, 20, 26, 39, 40, 55, 65, 87, 91, 97, 103], "overridden": [26, 40, 49], "overview": [26, 37, 61], "overwhelm": [26, 40, 87], "overwrit": [18, 22, 24, 26, 27, 29, 37, 39, 50, 55, 94, 97], "overwritten": [18, 22, 26, 27, 29, 37, 39, 50, 55, 70, 72], "own": [0, 1, 26, 57, 99, 103], "p": [3, 26, 38, 39, 40, 44, 46, 98], "packag": [79, 80, 82, 84], "pad": [17, 20, 26, 37, 64], "pad_left": [26, 37], "pad_right": [26, 37], "pad_width": 17, "padchar": [20, 26], "pae": 61, "page": [21, 59, 64, 77], "pai": 61, "pair": [23, 26, 30, 31, 36, 37, 50, 99], "pairwis": [22, 26, 37], "panda": [0, 18, 22, 26, 27, 29, 40, 51, 56, 57, 60, 71, 73, 82, 87, 88, 91, 93], "parallel": [63, 87, 97, 101], "parallel_start_test": 0, "param": [2, 18, 23, 26, 27, 29, 36, 37, 39, 50, 55, 56, 60, 61], "paramet": [0, 3, 4, 6, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 80, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "parameter": [38, 44, 98], "parameter_class": 19, "parent": [1, 22, 26, 34], "parent_entry_nam": [33, 34], "pariti": [26, 39], "parquet": [18, 22, 24, 26, 27, 29, 39, 50, 55, 61, 69, 71, 73, 87, 94], "parquet_output": [22, 26], "pars": [19, 20, 22, 26, 27, 39, 51, 53, 102], "parse_hdf_categor": [18, 26], "parseabl": [26, 40, 92], "parser": 82, "part": [0, 5, 8, 9, 23, 26, 36, 37, 50, 55, 83, 103], "parti": [26, 37, 77, 78], "particular": [5, 12, 22, 26, 37, 48, 51, 60, 81], "particularli": [79, 81], "partit": [26, 55, 103], "paruqet": 72, "pass": [0, 1, 3, 4, 18, 20, 22, 24, 26, 29, 37, 38, 39, 44, 50, 51, 55, 56, 64, 87, 93, 94, 100], "password": [1, 22, 26, 51, 83], "past": [26, 37, 66], "pat": 61, "path": [22, 26, 27, 29, 30, 37, 39, 49, 61, 66, 75, 77, 79, 80, 81, 83, 87], "path_prefix": [26, 29], "path_to_ark": 80, "path_to_arkouda": [78, 82], "path_to_chpl": 80, "pathlib": [22, 26, 30, 37, 49], "pattern": [26, 33, 34, 55, 64, 68, 94, 103], "pb": 19, "pcg64": [38, 44], "pcid": 61, "pclmulqdq": 61, "pct_avail_mem": 19, "pd": [18, 22, 26, 29, 40, 51, 56, 57, 58, 68, 87, 91, 93], "pd_df": [22, 26, 68, 93], "pda": [24, 26, 37, 39, 40, 52, 57, 58, 60, 89, 90, 92, 95, 97, 101], "pda1": [26, 39, 42, 101], "pda2": [26, 39, 42, 101], "pda_a": [26, 37], "pda_b": [26, 37], "pdaleft": [26, 37], "pdaright": [26, 37], "pdarrai": [3, 4, 6, 18, 19, 20, 21, 22, 24, 26, 27, 29, 31, 33, 34, 37, 38, 39, 40, 41, 42, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103], "pdarrayclass": [4, 18, 20, 22, 26, 27, 29, 31, 33, 34, 37, 38, 40, 41, 42, 44, 47, 50, 51, 52, 53, 54, 55, 58, 59, 93], "pdarraycr": [26, 39, 59], "pdarraymanipul": [26, 59], "pdarraysetop": [26, 50, 59, 60, 99], "pdconcat": [26, 51, 100], "pdf": 48, "pdpe1gb": 61, "pdrrai": [26, 37, 40, 87], "pearson": [22, 26, 39, 46], "peel": [26, 55, 86, 103], "pep": [26, 37], "pep8": [0, 78], "per": [1, 18, 19, 21, 22, 24, 26, 27, 29, 39, 50, 55, 61, 66, 70, 81, 87, 90, 94], "percent": [19, 48], "percent_transfer_limit": 58, "percentag": [19, 58], "percentil": 48, "perf_count": 61, "perform": [18, 21, 22, 24, 26, 27, 29, 31, 37, 38, 39, 42, 44, 50, 51, 55, 56, 61, 63, 64, 65, 68, 69, 71, 77, 86, 87, 90, 92, 93, 94, 97, 98], "period": [26, 57], "perl": 79, "perm": [22, 26, 52, 58, 89, 93], "perm_arri": [22, 26, 93], "perm_df": [22, 26, 93], "permiss": [18, 26, 27, 39, 50, 55], "permut": [12, 18, 22, 24, 26, 38, 44, 52, 55, 58, 70, 86, 89, 91, 94, 101], "permute_dim": 12, "permute_sampl": [24, 26, 94], "person": 0, "pexpect": 82, "pge": 61, "physic": [19, 33, 103], "physicalmemori": 19, "pi": [4, 26, 37, 38, 44, 98], "piec": 65, "pierce314159": 0, "pig": [22, 26, 51], "pinf": [26, 37], "pip": [79, 80], "pipe": 103, "pipelin": [87, 103], "place": [18, 20, 22, 24, 26, 27, 29, 32, 37, 38, 39, 44, 49, 50, 51, 55, 57, 58, 62, 66, 90, 93, 94, 98], "placement": [26, 37], "plan": [83, 84, 95, 97], "platform": [23, 26, 36, 37, 49], "player": [38, 44, 98], "pleas": [0, 18, 20, 22, 23, 24, 26, 27, 29, 36, 37, 39, 50, 51, 55, 57, 62, 64, 65, 68, 70, 72, 73, 77, 79, 80, 81, 91, 93, 94], "plot": [26, 37, 48, 59, 87, 95], "plot_dist": [26, 43], "plt": [26, 37, 43, 48, 95], "plu": [26, 37], "pni": 61, "point": [8, 22, 23, 26, 27, 31, 36, 37, 38, 39, 40, 44, 48, 51, 53, 83, 92, 93, 97], "pointer": [23, 26, 36, 37], "poisson": [38, 44, 86], "polyfit": [26, 37], "pop": [23, 26, 36, 37], "popcnt": 61, "popcount": [23, 26, 36, 37, 39], "popitem": [23, 26, 36, 37], "popul": [21, 24, 26, 30, 34, 39, 90, 94], "port": [1, 18, 19, 22, 26, 29, 39, 50, 51, 55, 65, 75, 85, 102], "portion": [26, 37, 70], "portland": [22, 26], "pos_dt": [26, 31], "posit": [6, 8, 12, 22, 23, 24, 26, 33, 34, 36, 37, 39, 51, 55, 94, 96, 100, 103], "position": [22, 26], "positon": [26, 55, 103], "possibl": [0, 22, 23, 26, 29, 36, 37, 48, 50, 55, 57, 60, 61, 64, 68, 77, 83, 87, 99, 103], "possibli": 60, "post": [0, 26, 37, 64], "postit": [26, 55, 103], "potenti": [22, 26, 37, 39, 77], "pow": 8, "power": [8, 26, 37, 39, 46, 74, 96], "power_diverg": [26, 46], "power_divergenceresult": [26, 46], "powershel": 83, "pp": [26, 37], "ppf": 48, "pr": [0, 64], "practic": [0, 24, 26, 37, 39, 81, 90, 94], "pre": [18, 26, 58, 91], "preced": [23, 26, 36, 37, 48], "precis": [23, 26, 29, 36, 37, 56, 87, 97], "pred": [26, 31], "predefin": [26, 37], "predic": [26, 31], "prefer": [0, 80, 82, 84, 98], "prefetch": 21, "prefix": [18, 22, 24, 26, 27, 29, 39, 50, 55, 57, 86, 94, 103], "prefix_path": [18, 20, 22, 24, 26, 27, 29, 39, 50, 55, 94], "prepar": [22, 24, 26, 77, 94], "prepend": [12, 17, 26, 50, 55, 86, 103], "prepend_singl": [26, 50, 86, 99], "prerequisit": [77, 79, 80], "present": [0, 3, 18, 20, 22, 23, 26, 27, 29, 36, 37, 39, 42, 50, 51, 55, 68, 70, 87, 95, 101], "preserv": [22, 26, 37, 51, 100, 103], "pretti": 66, "pretty_print_info": [18, 26, 39, 55], "pretty_print_inform": [26, 28], "prev": 64, "prevent": [20, 26, 29, 39, 50, 69, 70, 79, 99], "previou": [64, 66, 80], "previous": [18, 22, 24, 26, 27, 29, 39, 50, 51, 55, 57, 94], "primarili": [26, 37, 87], "print": [0, 1, 18, 19, 21, 22, 26, 28, 37, 39, 45, 51, 55, 83, 102], "print_comm_diagnostics_t": 21, "print_empty_column": 21, "print_server_command": 19, "printabl": [26, 40], "printit": 0, "prior": [78, 81], "probabl": [18, 22, 24, 26, 38, 44, 48, 55, 94, 98], "problem": [0, 26, 37, 38, 44, 61, 85, 98], "problem_s": 61, "proc": [0, 60], "proce": [18, 26, 37, 39, 40, 55, 87, 91, 97, 103], "procedur": [0, 60], "proceed": 77, "process": [19, 26, 28, 29, 37, 51, 53, 60, 67, 70, 75, 78, 83, 87, 99, 103], "processor": [19, 61], "prod": [16, 22, 23, 24, 26, 36, 37, 39, 50, 51, 86, 90, 94, 95], "produc": [18, 26, 55, 56, 91, 98, 103], "product": [8, 11, 16, 24, 26, 37, 38, 39, 40, 44, 54, 87, 90, 94, 95, 98], "profil": 25, "program": [0, 18, 20, 21, 22, 24, 26, 27, 39, 50, 51, 55, 57, 75, 78, 94, 102], "progress": 80, "project": [0, 22, 26, 51, 61, 64, 77], "projectfiledir": 78, "promot": [5, 26, 40, 60], "promote_dtyp": [26, 40], "promote_to_common_dtyp": [26, 40], "proof": [20, 26], "proper": [26, 37, 50, 55, 58, 99], "properli": [0, 65, 70, 79, 80], "properti": [2, 5, 9, 18, 22, 26, 27, 37, 39, 50, 51, 55, 57, 60, 70], "protect": [18, 26, 39, 40, 55, 87, 91, 97, 103], "provid": [0, 7, 18, 22, 23, 24, 26, 27, 29, 36, 37, 38, 39, 41, 44, 50, 51, 55, 56, 58, 60, 61, 63, 68, 69, 70, 72, 73, 77, 79, 80, 82, 87, 90, 93, 94, 98, 99], "prune": 82, "pse": 61, "pse36": 61, "pseudo": 98, "pti": 61, "ptp": [23, 26, 36, 37], "publish": 64, "pull": [26, 29, 40, 60, 64, 70, 92], "pure": [26, 37], "purg": [26, 55], "purge_cached_regex_pattern": [26, 55], "purpos": [26, 37, 61, 64, 88, 93, 100], "push": [64, 77, 78], "put": [21, 22, 23, 24, 26, 36, 37, 66, 94], "putmask": [26, 37], "pv": [26, 40], "pvalu": [26, 46], "pwd": [79, 80], "pwr": [26, 39], "py": [0, 1, 60, 61, 65, 81, 82, 85], "py_incref": [26, 37], "pyarrow": [82, 87], "pycharm": 0, "pydata": [22, 26, 51], "pyfiglet": 82, "pyinterpreterdirectori": 78, "pypi": [22, 26, 51], "pyplot": [26, 37, 43, 48, 95], "pytabl": 82, "pytest": [0, 67, 82], "python": [3, 4, 5, 9, 18, 19, 20, 23, 25, 26, 36, 37, 39, 40, 42, 49, 51, 55, 61, 74, 77, 78, 83, 84, 86, 87, 90, 91, 92, 93, 96, 97, 103], "python3": [61, 65, 77, 79], "python_build": 61, "python_compil": 61, "python_implement": 61, "python_implementation_vers": 61, "python_vers": 61, "pythonpath": [79, 80], "pytype_readi": [26, 37], "pytypeobject": [26, 37], "pyzmq": 82, "pzero": [26, 37], "q": [26, 37, 48], "q1": 61, "q3": 61, "quadrupl": [26, 37], "qualifi": [22, 26], "queri": [3, 26, 42, 87], "quetzal": [22, 26, 51], "quick": [19, 65], "quickli": [22, 26, 62, 93], "quickstart": [79, 80, 84], "quit": [0, 75], "quotient": [26, 39], "r": [0, 22, 26, 37, 48, 55, 61, 64, 68, 79, 80, 85], "rad2deg": [26, 37], "radian": [26, 37], "radix": [26, 52, 89], "radixsortlsd": [26, 52, 89], "rai": [26, 37], "rais": [3, 5, 9, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 42, 44, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103], "ram": 77, "ran": [61, 65], "randint": [3, 4, 19, 24, 26, 37, 38, 40, 42, 44, 52, 68, 86, 89, 90, 92, 94, 95], "randn": [26, 43], "random": [22, 24, 26, 37, 40, 43, 48, 54, 59, 61, 85, 86, 94], "random_sparse_matrix": [26, 54], "random_st": [22, 24, 26, 48, 94], "random_strings_lognorm": [26, 40], "random_strings_uniform": [26, 40], "randomli": [22, 26, 38, 44, 98], "rang": [3, 12, 17, 18, 22, 26, 27, 29, 31, 37, 38, 39, 40, 44, 50, 51, 54, 55, 57, 85, 87, 90, 92, 93, 95, 98, 100, 103], "rank": [18, 19, 26, 37, 38, 39, 40, 44, 53, 55, 60, 86, 87, 91, 96, 98], "rankwarn": [26, 37], "rasi": [18, 26, 55, 91, 103], "rate": [38, 44, 61, 98], "rather": [5, 9, 18, 22, 26, 37, 55], "ratio": [23, 26, 36, 37], "ravel": [23, 26, 36, 37], "raw": [26, 55, 103], "rc": 80, "rdrand": 61, "rdrnd": 61, "rdseed": 61, "rdtscp": 61, "re": [0, 12, 18, 19, 22, 24, 26, 33, 37, 77, 94, 102, 103], "re2": [18, 26, 55, 77, 91, 103], "reach": 0, "reachabl": 102, "reactiv": 80, "read": [5, 9, 18, 21, 22, 26, 27, 29, 30, 37, 39, 46, 51, 55, 69, 70, 71, 72, 103], "read_": [26, 29], "read_all_test": 1, "read_csv": [22, 26, 29, 69, 73], "read_hdf": [26, 29, 50, 73, 87], "read_nest": [26, 29, 87], "read_parquet": [26, 29, 73, 87], "read_path": [26, 29, 87], "read_tagged_data": [26, 29], "read_zarr": [26, 29], "readabl": [18, 26, 28, 29, 39, 55, 70, 87], "readahead": 21, "readalltest": 1, "readi": [0, 62, 64, 78, 79, 80], "readm": 1, "readthedoc": 60, "real": [0, 8, 23, 26, 36, 37, 38, 40, 44, 60, 64, 70], "realist": [18, 26, 55], "realli": [0, 26, 55], "reason": [26, 37, 64, 66, 79, 80], "rebas": 0, "rebind": [26, 37], "rebuild": [24, 26, 60, 63, 65, 66, 94], "rebuilt": 65, "receiv": [18, 19, 22, 26, 27, 29, 39, 50, 55, 87, 97, 102], "receive_arrai": [18, 22, 26, 39, 50, 55], "receive_datafram": [26, 29], "recent": [26, 56, 64], "recogn": [23, 36], "recommend": [0, 26, 37, 38, 44, 62, 66, 72, 79, 82, 83, 84, 93, 98, 99], "recompil": 66, "recomput": [18, 26, 29], "reconnect": [26, 39], "reconstitut": [18, 26], "reconstruct": 14, "record": [26, 29], "recurs": [26, 40, 87], "red": [26, 27], "reduc": [22, 24, 26, 37, 65, 67, 94], "reduct": [24, 26, 39, 85, 86, 94, 95], "redund": [23, 36], "ref": 60, "refer": [0, 6, 22, 24, 26, 37, 46, 51, 56, 65, 68, 80, 82, 94], "referenc": [22, 26], "reflect": [22, 26, 80, 93, 99], "reformat": [0, 87], "regard": 79, "regardless": [26, 29, 40, 56, 92], "regex": [18, 26, 55, 91, 103], "regex_max_captur": 1, "regex_split": [26, 55], "regist": [1, 5, 18, 20, 22, 24, 26, 27, 28, 39, 50, 51, 55, 57, 58, 60, 86, 94], "register_al": [26, 58], "registerablepiec": [18, 26], "registercommand": 60, "registerd": [26, 51], "registered_nam": [18, 20, 26, 27, 39, 50, 55], "registeredsymbol": [26, 28], "registerfunct": 81, "registr": [19, 26, 39, 55, 60, 77], "registrationerror": [18, 20, 22, 24, 26, 27, 39, 50, 51, 55, 57, 94], "registri": [18, 22, 24, 26, 27, 28, 39, 51, 55, 57, 58, 94], "regular": [18, 26, 55, 86, 91], "rel": [26, 56], "relat": [61, 64, 68], "releas": [18, 22, 23, 26, 27, 29, 36, 37, 39, 50, 55, 61, 66, 67, 75, 79, 80, 98], "release_d": 75, "reli": [18, 26, 27, 39, 50, 55, 94], "remain": [18, 22, 26, 27, 29, 37, 39, 50, 55, 79, 87, 88, 93, 100], "remaind": [8, 26, 39, 55, 103], "remap": [18, 26], "rememb": [66, 68], "remot": [21, 26, 37, 64, 79, 80, 102], "remov": [3, 12, 18, 22, 23, 26, 27, 29, 36, 37, 39, 41, 42, 50, 55, 61, 65, 82, 93, 99, 103], "remove_miss": [3, 26, 42], "remove_repeat": [26, 50, 86, 99], "renam": [22, 26], "reorder": [12, 26, 37], "rep": [26, 37], "rep_good": 61, "rep_msg": [18, 20, 22, 24, 26, 27, 50, 55, 81], "repack": [18, 20, 22, 24, 26, 27, 29, 39, 50, 55], "repeat": [1, 12, 18, 23, 26, 36, 37, 50, 91, 99], "repeatedli": [26, 37], "repetit": 12, "repl": [25, 26, 34, 55, 103], "replac": [3, 22, 23, 24, 26, 29, 34, 36, 38, 39, 44, 50, 55, 62, 64, 70, 80, 81, 82, 94, 98, 99, 103], "repli": 60, "replic": [24, 26, 94], "repmsg": [26, 51, 53, 60], "repo": [26, 37, 78, 79, 80, 84], "repons": [26, 27, 39], "report": [21, 23, 24, 26, 36, 37, 66, 82], "report_mem": 58, "repr": [22, 23, 24, 26, 36, 37, 48, 51], "repres": [18, 20, 23, 24, 26, 36, 37, 40, 48, 50, 51, 54, 55, 57, 61, 70, 91, 92, 94, 103], "represent": [20, 22, 23, 26, 36, 37, 39], "reproduc": [0, 22, 24, 26, 38, 44, 67, 94, 98], "request": [22, 24, 26, 30, 37, 39, 40, 55, 60, 64, 92, 93, 94], "requir": [0, 3, 4, 5, 9, 16, 19, 21, 22, 24, 26, 27, 29, 31, 37, 39, 40, 51, 62, 63, 65, 66, 70, 71, 72, 75, 77, 81, 87, 92, 93, 94], "requiredpiec": [18, 26], "rerun": 77, "reset": 21, "reset_categori": [18, 26], "reset_comm_diagnost": 21, "reset_index": [22, 26, 93], "reshap": [12, 23, 26, 36, 37, 39, 41, 86], "resid": [26, 39, 53, 55, 97], "resili": [26, 52, 89], "resiz": [23, 26, 36, 37], "resolut": [26, 37], "resolv": [0, 63, 83], "resolve_scalar_dtyp": [23, 26, 36, 37], "respect": [22, 26, 37, 39, 40, 42, 48, 56, 57, 64, 87, 92], "respons": [19, 22, 26, 55, 60], "rest": [26, 51], "restart": 83, "restor": [26, 29], "restrict": [5, 9], "result": [3, 4, 6, 7, 12, 13, 16, 17, 18, 21, 22, 23, 24, 26, 27, 29, 31, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 50, 51, 53, 55, 56, 57, 60, 61, 68, 69, 70, 71, 80, 87, 90, 92, 93, 94, 97, 98, 99, 100, 103], "result_array_on": [26, 31], "result_dtyp": [4, 26], "result_limit": [26, 31], "result_typ": 7, "ret": 60, "retain": [26, 37, 39, 58, 90], "retain_index": [22, 26, 93], "retriev": [19, 25, 26, 28, 39, 49, 51, 64], "return": [3, 4, 5, 6, 7, 9, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 69, 71, 78, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103], "return_count": [26, 37, 95], "return_group": [24, 26, 101], "return_group_origin": [33, 103], "return_indic": [24, 26, 94, 101], "return_length": [26, 31], "return_match_origin": [26, 33, 34, 55, 103], "return_multipl": [26, 50, 99], "return_num_sub": 34, "return_obj": [26, 29, 87], "return_origin": [26, 50, 55, 99], "return_seg": [26, 34, 55, 103], "return_valid": [26, 37, 97], "revarg": [3, 26], "revers": [5, 9, 12, 20, 21, 24, 26, 37], "review": 64, "revindic": [3, 26], "revkei": [3, 26], "rf": 77, "rh": 79, "right": [3, 8, 13, 20, 22, 26, 37, 38, 39, 44, 48, 52, 54, 55, 56, 57, 64, 78, 89, 93, 96, 102, 103], "right_align": [3, 26], "right_df": [22, 26], "right_suffix": [22, 26], "risk": [26, 37, 70], "rm": 77, "rng": [26, 38, 44, 57, 98], "role": 1, "roll": 12, "root": [8, 18, 20, 22, 24, 26, 27, 39, 51, 57, 61, 70, 79, 87, 90, 94], "rot": [26, 39], "rotat": [26, 37, 39], "rotl": [26, 39], "rotr": [26, 39], "roughli": [26, 37], "round": [8, 23, 26, 36, 37, 61], "rout": 83, "routin": [26, 37], "row": [3, 6, 21, 22, 24, 26, 27, 29, 37, 39, 41, 42, 50, 51, 52, 54, 55, 56, 59, 68, 69, 87, 89, 93, 94, 99, 101], "row_numb": [24, 26], "row_start": [24, 26], "rpartit": [26, 55, 103], "rpath": 77, "rpeel": [26, 55, 86, 103], "rtol": [26, 56], "rtype": [26, 27], "rule": [5, 26, 37, 97], "run": [18, 19, 22, 26, 29, 37, 39, 50, 55, 65, 66, 68, 75, 77, 79, 80, 82, 83, 85, 87, 91, 97, 99, 102, 103], "runtim": [19, 23, 26, 29, 36, 63, 78, 87], "runtimeerror": [18, 19, 22, 24, 26, 27, 28, 29, 33, 37, 39, 40, 42, 50, 51, 53, 55, 57, 87, 90, 91, 92, 94, 95, 97, 101, 102, 103], "runtimewarn": [26, 29, 87], "ruok": 19, "rv": 48, "rv_continu": 48, "rw": [26, 40], "rwovkbur": [26, 40], "s1": [26, 37, 90], "s2": [26, 27, 37, 51, 55, 90], "s3": [22, 26, 51], "s5": [26, 37], "s_complement": [26, 37], "s_cpy": [26, 55], "sa": [26, 58], "sacrific": 103, "safe": [26, 37, 41, 64, 97], "sai": 102, "salari": 68, "same": [3, 4, 12, 17, 18, 20, 22, 23, 24, 26, 27, 29, 36, 37, 38, 39, 40, 42, 44, 49, 50, 51, 52, 53, 55, 56, 57, 60, 64, 68, 69, 70, 72, 78, 79, 80, 81, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103], "same_kind": [26, 41], "sampl": [22, 24, 26, 37, 38, 40, 44, 86, 94, 98], "satisfi": [3, 22, 26, 29], "save": [18, 22, 24, 26, 27, 29, 39, 50, 55, 61, 62, 64, 65, 70, 71, 72, 78, 87, 91, 94, 101], "save_al": [26, 27, 29, 39, 73], "save_offset": [26, 55], "saveusedmodul": [65, 66, 81], "sb": [26, 58], "scalar": [3, 5, 6, 9, 16, 17, 18, 22, 23, 26, 36, 37, 39, 40, 50, 51, 61, 85, 86, 91, 95, 96, 99, 100], "scalar_arrai": [26, 40], "scalardtyp": [23, 26, 36, 37], "scalartyp": [26, 37], "scale": [18, 26, 38, 43, 44, 46, 48, 63, 68, 74, 98], "scaler": [26, 51, 100], "scan": 86, "scatter": [61, 86], "schema": 87, "scheme": [26, 37, 64], "scienc": 94, "scientif": [26, 37], "scipi": [0, 26, 59, 82], "scl": 79, "scope": [0, 81], "script": [60, 65, 80, 81, 85], "scroll": 77, "sctype": [26, 37], "sctype2char": [26, 37], "sctypedict": [26, 37], "se": [24, 26, 39, 90, 94], "search": [3, 13, 18, 26, 33, 42, 55, 78, 86, 91], "search_bool": 34, "search_ind": 34, "search_interv": [3, 26], "searching_funct": [9, 59], "searchsort": [13, 23, 26, 36, 37], "sec": [26, 57, 61], "second": [3, 5, 9, 19, 26, 30, 37, 40, 42, 51, 55, 56, 57, 58, 60, 61, 65, 68, 90, 92, 97, 100, 101, 102, 103], "secret": 49, "section": [1, 26, 37, 61, 63, 64, 65, 66, 68, 70, 75, 77, 78, 82, 90], "secur": [26, 37, 59], "see": [0, 1, 3, 5, 8, 9, 12, 22, 23, 24, 26, 36, 37, 38, 39, 43, 44, 48, 51, 55, 57, 58, 60, 61, 64, 65, 66, 75, 77, 81, 87, 90, 91, 94, 95, 97, 98, 99, 100, 101, 103], "seealso": [26, 27], "seed": [3, 22, 24, 26, 38, 40, 42, 44, 48, 61, 85, 92, 94, 98], "seen": [19, 102], "seg": 58, "seg_a": [26, 50, 99], "seg_b": [26, 50, 99], "seg_suffix": [26, 50], "segarr": [26, 50, 99], "segarrai": [3, 24, 26, 29, 37, 51, 56, 59, 86, 87, 93, 94, 100], "segment": [3, 18, 22, 24, 26, 29, 31, 50, 55, 58, 70, 86, 87, 91, 94, 99, 101, 103], "segment_nam": [26, 50], "segstr": [26, 55], "select": [13, 19, 22, 24, 25, 26, 29, 38, 44, 50, 51, 60, 64, 77, 78, 84, 93, 94, 98, 99], "select_from": [3, 26, 42], "self": [18, 22, 26, 39, 50, 55, 87, 88, 91, 93, 97, 98, 99, 100, 103], "send": [18, 19, 22, 26, 29, 39, 40, 50, 55, 60, 87, 93, 102], "send_arrai": [26, 29], "sens": [22, 26, 51], "sensit": [26, 57], "sent": [26, 29, 71], "sep": 61, "separ": [1, 5, 20, 22, 26, 27, 29, 30, 37, 38, 39, 44, 48, 55, 61, 69, 70, 81, 87, 97, 98, 103], "seq": [26, 56], "sequenc": [3, 6, 18, 20, 22, 23, 26, 27, 36, 37, 38, 39, 40, 41, 42, 44, 50, 52, 53, 56, 58, 89, 92, 94, 95, 97, 98, 99, 101, 103], "sequenti": [26, 29, 87], "seri": [2, 22, 26, 27, 40, 56, 57, 58, 59], "seriesdtyp": [23, 26, 36, 37], "serv": 84, "server": [0, 1, 4, 5, 9, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 32, 33, 36, 37, 38, 39, 40, 44, 49, 50, 51, 53, 55, 57, 63, 65, 66, 78, 79, 80, 83, 85, 86, 90, 91, 92, 93, 94, 95, 97, 98, 99, 103], "server_util": [0, 1], "serverdaemon": 60, "serverhostnam": 19, "servermodul": [1, 26, 29, 65, 66, 81], "serverport": 19, "session": [65, 75], "set": [1, 3, 18, 20, 22, 23, 24, 26, 27, 29, 32, 36, 37, 39, 40, 42, 49, 50, 51, 52, 55, 57, 60, 61, 62, 64, 69, 70, 77, 78, 79, 80, 81, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 103], "set_categori": [18, 26], "set_dtyp": [26, 27, 88], "set_funct": [9, 59], "set_jth": [26, 50, 86, 99], "set_xlim": 48, "setchplenv": [79, 80], "setdefault": [23, 26, 36, 37], "setdiff": [26, 50, 86, 99], "setdiff1d": [26, 42, 50, 60, 68, 86, 99, 101], "setfield": [23, 26, 36, 37], "setflag": [23, 26, 36, 37], "setop": 86, "setup": [1, 77, 83], "setxor": [26, 50, 86, 99], "setxor1d": [26, 42, 50, 60, 68, 86, 99, 101], "sever": [60, 68, 70, 78, 79, 80, 87, 90, 92], "sf": 48, "sh": [79, 80], "shallow": [23, 24, 26, 36, 37, 93], "shape": [3, 5, 6, 9, 12, 18, 22, 23, 26, 27, 29, 36, 37, 38, 39, 40, 41, 42, 44, 48, 51, 53, 55, 58, 86, 90, 91, 92, 97, 98], "share": [18, 22, 24, 26, 27, 39, 50, 55, 56, 64, 83, 94], "shell": [19, 25, 26, 29, 80, 87], "shellhistoryretriev": 25, "shift": [8, 12, 48], "ship": [77, 82], "short": [23, 26, 36, 37], "shortdtyp": [26, 37], "shortest": [26, 37], "shorthand": [23, 26, 36, 39, 55], "should": [0, 1, 4, 5, 9, 18, 22, 23, 24, 26, 29, 36, 37, 39, 40, 51, 53, 55, 56, 58, 60, 64, 65, 66, 68, 69, 70, 71, 75, 77, 79, 80, 82, 83, 87, 93, 94, 97, 102], "shouldn": [65, 66], "show": [22, 26, 29, 37, 43, 48, 56, 77, 87, 94, 95], "show_int": [20, 26], "shown": 102, "shuffl": [38, 44, 86], "shut": [19, 75, 81], "shutdown": [19, 65, 66, 81], "side": [1, 13, 18, 19, 22, 24, 26, 27, 28, 29, 33, 37, 38, 39, 40, 44, 50, 51, 53, 55, 57, 60, 64, 65, 75, 81, 83, 87, 90, 91, 94, 95, 96, 97, 98, 99, 102, 103], "sigma": [26, 38, 40, 44, 98], "sign": [8, 23, 26, 29, 36, 37, 38, 39, 40, 44, 87, 92, 93, 97, 98], "signal": [23, 36], "signatur": [25, 60], "signedinteg": [23, 26, 36, 37], "signific": [20, 26, 37, 39, 52, 64, 81, 89, 90], "significantli": [18, 26, 37, 65, 91], "similar": [0, 26, 29, 37, 55, 61, 68, 87, 97, 99, 103], "similarli": [61, 68], "simpl": [0, 68, 81, 95], "simplest": 61, "simpli": [18, 19, 22, 26, 37, 92], "simplifi": [0, 61], "simul": [79, 80], "sin": [8, 26, 37, 86, 90], "sinc": [1, 5, 26, 37, 38, 44, 66, 91, 93, 97, 103], "sine": [8, 26, 37, 90], "singl": [0, 2, 3, 4, 5, 9, 17, 18, 20, 22, 23, 24, 26, 27, 29, 31, 36, 37, 38, 39, 40, 42, 44, 50, 55, 65, 66, 68, 70, 72, 77, 81, 85, 87, 92, 93, 94, 96, 98, 99, 101], "singlecomplex": [23, 26, 36, 37], "singleton": [12, 13, 16, 17, 26, 39, 90], "sinh": [8, 26, 37], "siphash": [26, 37], "siphash128": [18, 26, 55], "site": 77, "situat": [26, 40], "six": [26, 53, 55, 103], "size": [3, 5, 9, 12, 18, 21, 22, 23, 24, 26, 27, 29, 31, 36, 37, 38, 39, 40, 42, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 68, 71, 72, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 103], "skew": [26, 48], "skip": [1, 23, 24, 26, 29, 36, 55, 79, 87, 94, 101, 103], "skipna": [24, 26, 94], "slice": [18, 22, 26, 39, 41, 68, 86, 91, 93, 99, 103], "slice_bit": [26, 39], "slightli": [22, 26, 29, 93], "slot": [26, 37], "slower": [18, 26, 103], "small": [22, 26, 37, 51, 70, 87], "smaller": [26, 51, 64, 69, 87], "smallest": [22, 24, 26, 37, 39, 51, 90, 94, 100], "smallest_norm": [7, 26, 37], "smallest_subnorm": [26, 37], "smap": 61, "smemtrack": 1, "smep": 61, "smith": 68, "snappi": [18, 22, 26, 27, 29, 39, 50, 55, 61, 72, 77], "snapshot": [26, 29], "so": [0, 1, 15, 18, 20, 22, 24, 26, 29, 37, 38, 39, 44, 50, 51, 55, 61, 63, 64, 65, 66, 75, 81, 82, 83, 87, 90, 93, 94, 98, 100, 101], "socket": [19, 102], "softwar": 79, "solut": [26, 37], "some": [0, 3, 5, 18, 22, 26, 37, 42, 48, 62, 68, 72, 77, 91, 93, 99, 103], "someon": [0, 64], "someth": [64, 65, 83, 102], "sometim": [48, 81, 97], "somewhat": 63, "somewher": 60, "sort": [1, 3, 13, 15, 18, 22, 23, 24, 26, 36, 37, 39, 42, 50, 51, 55, 56, 58, 59, 64, 78, 85, 86, 90, 91, 92, 94, 95, 101, 103], "sort_index": [22, 26, 51, 100], "sort_valu": [18, 22, 26, 51, 93, 100], "sorted_df1": [22, 26, 93], "sorted_df2": [22, 26, 93], "sorter": 13, "sorting_funct": [9, 59], "sortingalgorithm": [26, 52, 89], "sought": [26, 55, 103], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 70, 75, 77, 79, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103], "space": [0, 1, 3, 6, 26, 37, 40, 42, 53, 55, 57, 61, 77, 81, 92, 95, 103], "span": [26, 55, 103], "sparrai": [26, 53, 54], "sparrayclass": [26, 54, 59], "spars": [3, 24, 26, 53, 54, 58, 94, 97], "sparse_matrix_matrix_mult": [26, 54], "sparse_sum_help": 58, "sparsematrix": [26, 59], "special": [20, 23, 26, 36, 37, 46, 48, 51, 55, 59, 97, 100], "special_objtyp": [20, 26, 57], "special_str": [26, 55], "specif": [0, 5, 9, 21, 22, 23, 26, 29, 36, 37, 38, 44, 48, 56, 66, 69, 70, 71, 79, 81, 86, 87, 93, 98], "specifi": [1, 3, 5, 6, 7, 9, 10, 12, 15, 17, 20, 22, 23, 24, 26, 27, 29, 30, 36, 37, 38, 39, 40, 41, 43, 44, 48, 50, 51, 54, 55, 56, 57, 58, 60, 61, 65, 71, 87, 90, 92, 93, 94, 98, 99], "speed": [18, 26, 42, 63, 67, 78, 81, 91, 92, 101], "sphinx": [59, 77, 82], "splash": 1, "split": [26, 34, 55, 64, 86], "spread": 87, "sqrt": [8, 24, 26, 38, 39, 44, 90, 94, 98], "squar": [8, 24, 26, 37, 38, 39, 44, 46, 48, 90, 94, 98], "squared_test": [26, 46], "squash": 0, "squeez": [12, 23, 26, 36, 37], "src": [60, 81], "ss": 61, "ssbd": 61, "sse": 61, "sse2": 61, "sse4_1": 61, "sse4_2": 61, "ssegmentedstr": [26, 55], "ssh": 1, "ssse3": 61, "st": 60, "stabl": [15, 26, 52, 89], "stack": [12, 26, 41, 103], "stale": 77, "standard": [0, 5, 16, 18, 24, 26, 37, 38, 39, 40, 44, 48, 57, 60, 61, 62, 90, 94, 95, 98], "standard_exponenti": [38, 44, 86], "standard_norm": [26, 38, 40, 44, 86], "standardize_categori": [18, 26], "start": [0, 3, 5, 6, 9, 18, 21, 22, 23, 24, 26, 27, 31, 33, 34, 36, 37, 39, 40, 50, 51, 52, 55, 57, 70, 86, 89, 91, 92, 94, 96, 99, 103], "start_comm_diagnost": 21, "start_verbose_comm": 21, "startswith": [18, 26, 55, 86, 91, 103], "startup": [1, 75, 86], "stat": [26, 46, 59, 61], "state": [18, 26, 38, 44, 55, 64, 98], "static": [18, 26, 27, 39, 50, 55, 94], "statist": [21, 24, 26, 39, 46, 61, 86, 90, 94], "statistical_funct": [9, 59], "statu": 19, "std": [16, 22, 23, 24, 26, 36, 37, 39, 48, 51, 57, 86, 90, 94, 95], "stddev": 61, "stddev_outli": 61, "stderr": 78, "stdev": [38, 44, 98], "stdout": [26, 37, 78], "step": [0, 6, 23, 24, 26, 36, 37, 61, 62, 63, 66, 77, 81, 84, 101, 102], "stepfil": 48, "stibp": 61, "stick": [26, 55, 66, 86, 103], "still": [70, 103], "stop": [6, 19, 21, 23, 26, 36, 37, 40, 92, 96], "stop_comm_diagnost": 21, "stop_verbose_comm": 21, "storag": [22, 26, 51, 61], "storage_opt": [22, 26, 51], "store": [5, 9, 13, 20, 21, 22, 23, 24, 26, 27, 29, 36, 37, 38, 40, 44, 49, 55, 60, 61, 69, 70, 73, 83, 87, 91, 92, 94, 99, 103], "store_path": [26, 29], "str": [2, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 61, 69, 87, 90, 91, 92, 93, 94, 97, 98, 102, 103], "str_": [23, 26, 36, 37, 95], "str_acc": [26, 51], "str_scalar": [18, 23, 26, 34, 36, 37, 55, 91, 103], "straight": 64, "strategi": [26, 37, 82, 83, 87], "strdtype": [26, 37], "stream": [5, 9, 38, 44, 65, 98], "streamhandl": 26, "strict": [22, 23, 24, 26, 36, 37, 48, 51, 56, 97], "strict_typ": [26, 29], "stricter": [26, 37], "stricttyp": [26, 29, 87], "stride": [22, 23, 26, 31, 36, 37, 40, 92, 93, 96], "string": [0, 1, 3, 4, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 36, 37, 39, 40, 42, 46, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 64, 81, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101], "string_": [26, 37], "string_oper": [2, 26], "stringa": [26, 55], "stringaccessor": [2, 26], "stringb": [26, 55], "stringc": [26, 55], "stringifi": [22, 26, 93], "stringio": [26, 37], "strings0": [26, 55], "strings1": [26, 55], "strings2": [26, 55], "strings_arrai": [26, 55, 70], "strings_encodedecod": 61, "strings_end": [26, 55, 103], "strings_pdarrai": [26, 55], "strings_start": [26, 55, 103], "strip": [23, 26, 36, 37, 55], "strive": 64, "strongli": [26, 37], "structur": [18, 22, 26, 37, 50, 68, 72, 93, 94, 97, 99, 103], "strucutur": 99, "stub": 82, "style": [0, 18, 20, 22, 24, 26, 27, 37, 39, 50, 51, 55, 57, 93, 94, 97], "sub": [23, 26, 34, 36, 37, 50, 55, 86, 103], "subclass": [5, 23, 26, 36, 37], "subdir": 79, "subdirectori": 60, "subdomain": [5, 9], "subdtyp": [26, 37], "subject": [1, 26, 57], "subn": [26, 55, 86, 103], "subnorm": [26, 37], "subplot": 48, "subsequ": [26, 37, 70], "subset": [5, 18, 19, 22, 25, 26, 50, 81, 90, 93, 99], "substanti": 64, "substitu": [26, 55, 103], "substitut": [26, 34, 55, 75, 77, 103], "substr": [18, 20, 26, 55, 86, 91], "subsystem": 83, "subtract": [8, 26, 37], "subtyp": [26, 37], "succeed": [26, 37, 97], "success": [18, 19, 22, 26, 27, 29, 31, 37, 39, 50, 55, 97, 102], "successfulli": 80, "sudo": 83, "suffici": [26, 37], "suffix": [22, 26, 29, 50, 55, 70, 86, 103], "suggest": [66, 83], "suitabl": 13, "sum": [8, 16, 22, 23, 24, 26, 36, 37, 38, 39, 44, 50, 51, 57, 58, 86, 90, 94, 95, 98], "summar": [86, 87], "summari": [0, 22, 26], "super": 0, "supercomput": 74, "suppli": [24, 26, 29, 37, 40, 50, 70, 72, 73, 92, 93], "support": [0, 3, 4, 17, 18, 19, 20, 22, 23, 24, 26, 27, 29, 30, 36, 37, 38, 39, 40, 42, 44, 49, 50, 51, 53, 55, 57, 60, 68, 71, 75, 77, 79, 80, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103], "supported_opeq": [26, 57], "supported_scalar": [26, 51], "supported_with_datetim": [26, 57], "supported_with_pdarrai": [26, 57], "supported_with_r_datetim": [26, 57], "supported_with_r_pdarrai": [26, 57], "supported_with_r_timedelta": [26, 57], "supported_with_timedelta": [26, 57], "supportsbufferprotocol": 6, "suppress": [22, 26, 37], "sure": [0, 22, 26, 27, 29, 39, 55, 64, 83], "surround": [0, 23, 26, 36, 37, 48], "surviv": [3, 26, 48], "swap": [23, 26, 36, 37], "swapax": [23, 26, 36, 37], "switch": 81, "sy": [22, 23, 24, 26, 36, 37, 48, 51], "symbol": [19, 26, 28, 39, 50, 55, 60, 97], "symentri": 60, "symlink": 83, "symmetr": [3, 23, 24, 26, 36, 37, 42, 50, 68, 86, 101], "symmetric_differ": [23, 24, 26, 36, 37], "symtab": 60, "symtabl": 19, "sync": 80, "synchron": [18, 26, 78], "syntax": 96, "syscal": 61, "system": [1, 18, 26, 37, 38, 39, 44, 49, 55, 60, 61, 77, 80, 81, 82, 83, 84, 87, 90, 91, 97, 98, 102, 103], "t": [0, 3, 5, 9, 22, 23, 26, 29, 36, 37, 42, 55, 57, 60, 64, 65, 66, 77, 79, 80, 83, 85, 103], "t1": [26, 31, 37], "t2": [26, 31, 37], "t3": [26, 37], "tab": [0, 64, 77, 78], "tabl": [3, 19, 21, 22, 26, 28, 39, 50, 51, 55, 60, 61, 97, 99], "tablefmt": [22, 26, 51], "tablul": [22, 26, 51], "tabul": [22, 26, 51, 82], "tag": [0, 26, 29, 32, 64, 66], "tag_data": [26, 29], "tagdata": [26, 29], "taht": 87, "tail": [22, 24, 26, 40, 51, 86, 94], "take": [0, 4, 10, 20, 23, 24, 26, 32, 36, 37, 38, 39, 44, 48, 60, 62, 63, 65, 66, 68, 71, 87, 94, 98], "taken": [64, 81], "tan": [8, 26, 37], "tangent": [8, 26, 37], "tanh": [8, 26, 37], "tar": [75, 77, 79, 80], "target": [21, 26, 30, 37, 40, 61, 63, 64, 77, 87, 92, 96, 97], "task": [1, 19], "tb": 19, "tblgen": 83, "tcp": [19, 75, 102], "team": 64, "technic": [26, 29], "techniqu": 66, "tell": [26, 29, 60, 61, 87], "temp_c": [22, 26], "temp_f": [22, 26], "temp_k": [22, 26], "temporari": [26, 37], "temporarili": 77, "tend": 63, "tensor": [6, 24, 26, 37, 94], "tensordot": 11, "term": [3, 26, 42], "termin": [26, 29, 70, 75, 83, 102], "test": [3, 18, 21, 22, 26, 29, 37, 42, 46, 59, 62, 64, 65, 66, 68, 75, 81, 93, 101], "test_": 0, "test_command": 81, "test_data_url": 1, "testmsg": 81, "text": [26, 37, 64, 69, 87], "texttt": [38, 44, 98], "th": [5, 6, 9, 12, 17, 26, 37, 50, 90, 99], "than": [3, 5, 9, 12, 18, 22, 23, 24, 26, 27, 29, 36, 37, 38, 39, 40, 42, 44, 50, 51, 52, 55, 62, 64, 65, 72, 87, 89, 91, 92, 93, 94, 97, 98, 101, 103], "thei": [1, 12, 18, 19, 20, 22, 24, 26, 27, 29, 37, 39, 50, 51, 55, 56, 57, 58, 62, 64, 69, 70, 71, 78, 79, 80, 87, 91, 94, 100], "them": [1, 21, 22, 26, 29, 42, 48, 55, 64, 79, 87, 93, 101], "therefor": 70, "thi": [0, 1, 4, 5, 6, 9, 12, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 75, 77, 79, 80, 81, 83, 84, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103], "thin": [20, 26], "thing": [0, 5, 9, 68], "third": [26, 37, 40, 64, 77, 78, 92], "thirti": [3, 26], "those": [0, 5, 9, 17, 26, 37, 52, 68, 79, 81, 89, 96], "though": [21, 22, 26, 68], "thousand": 87, "three": [3, 26, 37, 40, 42, 54, 55, 57, 60, 77, 92, 96, 97, 103], "three_____four____f": [26, 55, 103], "thresh": [22, 26], "threshold": 103, "thrift": 77, "through": [1, 26, 37, 56, 60, 62, 64, 75, 80], "throw": [12, 60], "thrown": [18, 22, 26, 27, 28, 29, 33, 39, 40, 50, 51, 53, 55, 87, 90, 91, 95, 97, 103], "thu": [5, 9, 26, 29, 40, 52, 70, 71, 89, 99], "tiebreak": [3, 26], "tile": 12, "time": [1, 18, 19, 22, 24, 26, 27, 29, 31, 37, 38, 39, 44, 50, 51, 55, 57, 61, 63, 65, 66, 69, 70, 72, 81, 85, 87, 91, 94, 95, 98, 99, 101, 103], "timeclass": [26, 29, 59], "timedelta": [26, 29, 37, 40, 57], "timedelta64": [26, 37, 57], "timedelta64dtyp": [26, 37], "timedelta_rang": [26, 57], "timedeltaindex": [26, 57], "timeout": [1, 19, 102], "timer": 61, "times2": 60, "times_pi": [4, 26], "timeseri": [26, 57], "timestamp": [26, 31], "timezon": [26, 57], "tini": [26, 37], "tip": [67, 77], "titl": [0, 26, 37, 55, 64, 78], "titlecas": [26, 55], "tm": [26, 56, 61], "tmp": [26, 37], "to_csv": [22, 26, 27, 29, 39, 55, 69, 73], "to_cuda": [26, 39], "to_datafram": [26, 51], "to_datetim": [26, 40], "to_devic": [5, 9], "to_dict": [26, 27], "to_hdf": [18, 20, 22, 24, 26, 27, 29, 39, 50, 55, 70, 73, 86, 87, 94], "to_list": [3, 18, 20, 26, 27, 39, 50, 51, 55, 68, 87, 97, 99, 103], "to_markdown": [22, 26, 51], "to_ndarrai": [5, 9, 18, 20, 26, 27, 37, 39, 40, 43, 50, 51, 55, 57, 68, 86, 87, 91, 95, 97, 99, 103], "to_panda": [18, 22, 26, 27, 51, 57, 68, 93, 100], "to_parqet": [26, 39], "to_parquet": [18, 22, 26, 27, 29, 39, 50, 55, 72, 73, 87], "to_pdarrai": [26, 53], "to_str": [18, 26], "to_zarr": [26, 29], "tobyt": [23, 26, 36, 37], "toencod": [26, 55], "tofil": [23, 26, 36, 37], "togeth": [18, 22, 24, 26, 55, 58, 93, 94, 101], "token": [1, 19, 49, 75, 102], "token_hex": 49, "token_str": 75, "token_valu": [19, 102], "toleft": [26, 55, 103], "toler": [26, 56], "tolist": [5, 9, 23, 26, 36, 37], "too": [5, 9, 21, 26, 37, 63, 87], "tooharderror": [26, 37], "tool": [0, 77, 79, 80], "toolset": 68, "top": [26, 51, 60, 65, 70, 77, 79, 80, 83, 84, 100], "topn": [26, 51, 100], "tostr": [23, 26, 36, 37], "total": [19, 22, 24, 26, 29, 37, 55, 61, 87, 94], "total_mem": 19, "total_second": [26, 57], "totestmsg": 81, "touch": 96, "toward": [23, 26, 36, 37, 40, 48], "tp_doc": [26, 37], "trace": [23, 26, 36, 37], "traceback": [26, 56], "track": [0, 65, 72], "trail": [23, 26, 36, 37, 39, 55], "trait": 25, "transfer": [18, 22, 26, 29, 39, 50, 55, 61, 87, 91, 93, 97, 99, 103], "transfer_r": 61, "transform": [26, 27, 38, 44, 98], "transit": 68, "transpos": [5, 9, 23, 26, 36, 37, 50, 87], "treat": [3, 20, 22, 23, 26, 36, 37, 52, 61, 68, 89, 93], "trial": [61, 85], "triangl": [26, 37], "trigger": 21, "tril": [6, 26, 37], "trim": [26, 37], "triu": [6, 26, 37], "trivial": [3, 26], "true": [1, 3, 6, 7, 13, 15, 17, 18, 19, 20, 22, 23, 24, 26, 27, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 48, 50, 51, 55, 56, 57, 58, 61, 68, 80, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103], "true_": [26, 37], "true_dt": [26, 31], "trunc": [8, 26, 37], "truncat": [8, 18, 20, 23, 24, 26, 27, 29, 36, 37, 39, 48, 50, 55, 70, 72, 94], "try": [0, 23, 26, 27, 29, 36, 37, 39, 77, 83], "tsc": 61, "tukei": [26, 46], "tune": 1, "tunnel": 1, "tup": [26, 41], "tupl": [3, 5, 6, 7, 9, 12, 13, 14, 16, 17, 18, 20, 22, 23, 24, 26, 27, 29, 31, 36, 37, 38, 39, 40, 41, 42, 44, 50, 51, 53, 55, 58, 68, 87, 90, 91, 92, 93, 94, 95, 97, 100, 101, 103], "turn": [23, 26, 36, 37, 51, 65, 75, 100], "tutori": 83, "twenti": [3, 26], "twice": [26, 40, 87], "two": [3, 8, 11, 17, 18, 20, 22, 23, 24, 26, 27, 31, 36, 37, 39, 40, 42, 50, 51, 54, 55, 56, 57, 58, 60, 68, 69, 81, 87, 90, 92, 94, 101, 103], "twoarrayradixsort": [26, 52, 89], "txt": [1, 26, 37], "typ": [23, 36], "type": [2, 3, 4, 5, 6, 7, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 71, 77, 82, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103], "typechar": [26, 37], "typecheck": [26, 37, 60], "typecod": [26, 37], "typeerror": [3, 18, 20, 22, 24, 26, 27, 29, 31, 32, 37, 38, 39, 40, 42, 44, 50, 51, 52, 55, 57, 58, 60, 87, 89, 90, 91, 92, 94, 95, 98, 100, 101, 103], "typeguard": 82, "typehint": 82, "typenam": [26, 37], "typevar": 97, "typic": [0, 20, 26, 37, 60, 65, 66, 91], "tz": [26, 57], "tzg": [26, 40], "tzinfo": [26, 57], "u": [0, 20, 23, 26, 36, 37, 40, 57, 64, 78, 79, 80, 87], "u0": [22, 26, 27], "u0009": [26, 55], "u0009nu000bu000cu000d": [26, 55], "u000b": [26, 55], "u000c": [26, 55], "u000d": [26, 55], "u5": [26, 55, 87, 103], "ub": 48, "ubuntu": 83, "ubyt": [23, 26, 36, 37], "ubytedtyp": [26, 37], "ucs4": [23, 26, 36, 37], "ui": 1, "uint": [3, 22, 23, 26, 29, 36, 37, 39, 40, 55, 69], "uint16": [23, 26, 36, 37, 38, 44, 95], "uint16dtyp": [26, 37], "uint32": [23, 26, 29, 36, 37, 38, 44, 87, 95], "uint32dtyp": [26, 37], "uint64": [3, 20, 23, 24, 26, 36, 37, 38, 39, 40, 44, 52, 61, 70, 85, 89, 90, 92, 93, 95, 97], "uint64dtyp": [26, 37], "uint8": [23, 26, 36, 37, 38, 44, 55, 70, 95, 97, 103], "uint8dtyp": [26, 37], "uintc": [23, 26, 36, 37], "uintdtyp": [26, 37], "uintp": [23, 26, 36, 37], "uintptr_t": [23, 26, 36, 37], "ulongdtyp": [26, 37], "ulonglong": [26, 37], "ulonglongdtyp": [26, 37], "unabl": [18, 20, 22, 24, 26, 27, 39, 51, 55, 57, 94], "unaffect": 61, "unalt": [38, 44], "unbias": [24, 26, 37, 39, 90, 94], "unchang": [18, 23, 26, 36], "uncompress": [26, 37], "undefin": [26, 38, 40, 44, 92], "under": [0, 2, 18, 20, 22, 24, 26, 27, 29, 39, 40, 50, 51, 55, 57, 61, 64, 87, 91, 94, 97, 103], "under_map": [26, 55, 103], "under_split": [26, 55, 103], "underflow": [26, 37, 97], "underli": [18, 20, 22, 24, 26, 27, 37, 38, 44, 50, 51, 56, 57, 94, 98], "underneath": 64, "underscor": [5, 9], "undoubl": 60, "unequ": [26, 37, 90], "unicod": [23, 26, 36, 37], "unicode_": [23, 26, 36, 37], "uniform": [26, 37, 38, 40, 44, 52, 86, 87, 89, 90, 92], "uniformli": [26, 38, 40, 44, 54, 92, 98], "uniniti": [26, 39], "uninterpret": [26, 37, 97], "union": [4, 6, 18, 19, 22, 23, 24, 26, 28, 29, 31, 36, 37, 38, 39, 40, 41, 42, 44, 50, 54, 68, 86, 87, 91, 92, 94, 95, 97, 100, 101, 103], "union1d": [18, 26, 42, 50, 60, 68, 86, 99, 101], "uniqu": [3, 12, 14, 18, 22, 23, 24, 26, 27, 36, 37, 39, 42, 50, 51, 55, 68, 70, 86, 87, 91, 94, 95, 96, 99, 100, 101, 103], "unique_al": 14, "unique_count": 14, "unique_invers": 14, "unique_kei": [24, 26, 86, 94], "unique_key_idx": 70, "unique_valu": [14, 26, 37, 39, 95], "uniqueallresult": 14, "uniquecountsresult": 14, "uniqueinverseresult": 14, "unit": [0, 1, 19, 22, 26, 27, 37, 51, 56, 57, 58], "unknown": [22, 26, 27, 29, 39, 40, 55], "unless": [1, 22, 24, 26, 29, 37, 38, 44, 55, 94, 98, 103], "unlik": [22, 23, 26, 29, 36, 37, 55, 57], "unlimit": [22, 26], "unnecessari": 66, "unord": [23, 24, 26, 36, 37, 50], "unpack": [26, 55, 75, 80, 103], "unregist": [18, 20, 22, 24, 26, 27, 39, 50, 51, 55, 57, 58, 86, 94], "unregister_al": [26, 58], "unregister_categorical_by_nam": [18, 26], "unregister_dataframe_by_nam": [22, 26], "unregister_groupby_by_nam": [24, 26, 86, 94], "unregister_pdarray_by_nam": [26, 39], "unregister_segarray_by_nam": [26, 50], "unregister_strings_by_nam": [26, 55], "unrel": 92, "unsaf": [26, 41], "unselect": 78, "unset": [65, 80], "unsign": [23, 26, 36, 37, 93], "unsignedinteg": [23, 26, 36, 37], "unsort": [22, 26, 93], "unsqueez": [3, 26], "unstabl": [38, 44], "unstack": 12, "unstructur": [26, 37], "unsupport": [24, 26, 29, 49, 52, 87, 101], "unsupportedoper": 30, "unsupportedopt": 30, "unsur": 0, "until": [18, 20, 22, 24, 26, 27, 37, 39, 50, 51, 55, 57, 66, 94], "unus": [18, 26, 29, 41, 87], "up": [1, 3, 18, 19, 22, 24, 26, 29, 37, 39, 42, 50, 55, 60, 62, 63, 66, 67, 77, 78, 79, 80, 81, 87, 90, 91, 92, 101, 103], "updat": [18, 20, 22, 23, 24, 26, 27, 29, 36, 37, 39, 43, 50, 51, 55, 57, 72, 77, 79, 83, 87, 94], "update_hdf": [18, 20, 22, 24, 26, 27, 29, 39, 50, 55], "update_nrow": [22, 26], "upgrad": [77, 82], "upon": [26, 37, 55, 80, 81, 84, 90], "upper": [6, 26, 37, 38, 44, 55, 64, 98], "upper_bounds_exclus": [3, 26], "upper_bounds_inclus": [3, 26], "uppercamelcas": 0, "uppercas": [26, 40, 55], "upstream": [64, 79, 80], "url": [1, 19, 22, 26, 37, 51, 75, 77, 102], "urlnam": [26, 37], "us": [0, 1, 3, 4, 5, 6, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 79, 80, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "usag": [5, 9, 22, 26, 27, 51, 67, 75, 85, 99, 102], "use_seri": [22, 26, 93], "usedmodul": [65, 66, 81], "usehash": [26, 55], "user": [0, 1, 18, 20, 22, 23, 24, 26, 27, 29, 32, 36, 37, 39, 40, 43, 49, 50, 51, 53, 55, 57, 58, 61, 64, 67, 68, 70, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 87, 91, 94, 97, 103], "user_defined_nam": [18, 20, 22, 24, 26, 27, 39, 50, 51, 55, 57, 94], "userdict": [22, 26, 45], "userid": [22, 26, 93, 94], "usernam": [22, 26, 49, 51, 93], "username_token": 49, "userwarn": [26, 37], "ushort": [23, 26, 36, 37], "ushortdtyp": [26, 37], "usual": [0, 22, 24, 26, 94], "utf": [22, 26, 29, 55], "utf8proc": 77, "util": [0, 26, 29, 59, 64, 77, 79, 80], "utility_funct": [9, 59], "v": [0, 23, 24, 26, 36, 37, 48, 50, 55, 64, 78, 79, 85, 94, 99], "v1": [26, 46], "v10": [26, 37], "v2": [24, 26, 94], "v2022": 64, "v2023": 66, "v5": [26, 37], "val": [3, 23, 24, 26, 36, 37, 48, 50, 51, 54, 58, 94, 99], "val1": 58, "val2": 58, "val_suffix": [26, 50], "valid": [3, 4, 18, 23, 26, 29, 36, 37, 40, 48, 51, 53, 55, 78, 87, 91, 97, 103], "validate_kei": [26, 51], "validate_v": [26, 51], "vals1": 58, "vals2": 58, "valsiz": [26, 50], "valu": [3, 4, 5, 6, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 36, 37, 38, 39, 40, 42, 44, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 68, 70, 72, 80, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103], "valuabl": 81, "value_count": [26, 37, 39, 51, 86, 95, 100], "value_label": [26, 51], "value_nam": [26, 50], "value_s": [61, 85], "valueerror": [3, 5, 9, 12, 18, 19, 22, 23, 24, 26, 27, 29, 30, 31, 36, 37, 38, 39, 40, 42, 44, 50, 51, 52, 53, 54, 55, 87, 89, 90, 91, 92, 94, 95, 98, 99, 100, 102, 103], "values2": [24, 26, 94], "valuetypeerror": [26, 37], "vandermond": [26, 37], "vanish": [23, 36], "var": [0, 1, 16, 22, 23, 24, 26, 36, 37, 39, 48, 51, 60, 86, 90, 94, 95], "vari": [26, 37, 39, 56, 68, 77, 80, 82, 84, 99], "variabl": [0, 24, 26, 29, 31, 38, 39, 44, 48, 49, 50, 55, 60, 61, 62, 79, 80, 81, 90, 94, 98, 99, 103], "varianc": [16, 24, 26, 38, 39, 44, 48, 90, 94, 95, 98], "variat": 48, "varieti": [38, 44, 98], "variou": [1, 69], "vcxsrv": 83, "ve": [66, 77, 79, 80], "vecdot": [11, 26, 37], "vecentropi": 48, "vector": [6, 20, 24, 26, 37, 86, 94], "vendor_id_raw": 61, "venv": 77, "verbos": [1, 26, 28, 32], "veri": [0, 22, 26, 37, 68, 92, 93], "verifi": [0, 1, 22, 26, 71, 83, 87, 93], "versa": [87, 93], "version": [0, 18, 22, 23, 26, 36, 37, 46, 58, 61, 64, 70, 75, 77, 78, 79, 80, 82, 83], "version_info": [23, 36], "versionad": [26, 37], "versu": [26, 29, 87], "vertic": [26, 41, 50, 51, 99], "verticl": [26, 51, 100], "via": [0, 1, 18, 21, 22, 23, 24, 26, 36, 37, 39, 40, 55, 77, 79, 80, 87, 91, 94, 96, 97, 98, 103], "vice": [87, 93], "view": [5, 9, 23, 26, 36, 37, 64, 68, 73, 77, 78, 84, 97], "violat": [26, 37], "virtual": 77, "visibl": [18, 19, 26, 27, 29, 39, 50, 55, 102], "visit": [75, 79, 80], "visual": [26, 43], "vm": 83, "vme": 61, "void": [26, 37], "voiddtyp": [26, 37], "vstack": [26, 41], "vwhjex": [26, 40], "w": [18, 24, 26, 27, 33, 37, 39, 55, 57, 94, 103], "wa": [0, 18, 19, 20, 22, 23, 24, 26, 27, 29, 36, 37, 39, 50, 51, 55, 57, 65, 70, 71, 77, 80, 87, 94, 97, 99], "wai": [4, 19, 26, 37, 38, 44, 61, 65, 70, 75, 78, 81, 90, 91, 92, 93, 97, 98, 103], "wait": 21, "walk": [60, 62, 75], "want": [0, 1, 22, 23, 26, 36, 60, 75, 80, 82, 83, 93], "warmup": 61, "warn": [1, 4, 6, 8, 11, 12, 26, 29, 32, 37, 55, 87, 103], "warn_on_python": [26, 37], "we": [0, 1, 3, 5, 22, 23, 26, 27, 29, 36, 37, 38, 39, 42, 44, 55, 56, 58, 60, 61, 62, 64, 66, 68, 69, 72, 77, 78, 79, 80, 82, 83, 95, 97, 98], "web": [0, 64], "week": [26, 57, 94], "weekdai": [26, 57], "weekofyear": [26, 57], "weight": [22, 24, 26, 38, 44, 94, 98], "welcom": 0, "well": [20, 26, 37, 56, 61, 68, 82], "went": 102, "were": [3, 21, 24, 26, 27, 29, 37, 39, 50, 55, 65, 81, 94, 99, 103], "wget": 79, "what": [0, 23, 26, 36, 37, 38, 41, 44, 50, 60, 64, 65, 66, 81, 102], "wheel": 77, "when": [0, 1, 3, 13, 18, 19, 20, 22, 23, 24, 26, 27, 29, 36, 37, 39, 42, 50, 51, 53, 55, 56, 57, 58, 60, 61, 64, 65, 66, 68, 70, 72, 77, 78, 80, 81, 82, 83, 87, 90, 91, 93, 94, 97, 99, 101], "whenev": [26, 37, 103], "where": [1, 3, 5, 9, 12, 13, 18, 19, 21, 22, 24, 26, 27, 29, 30, 31, 37, 38, 39, 40, 42, 44, 49, 50, 55, 58, 60, 61, 62, 63, 70, 75, 79, 80, 86, 87, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103], "wherea": 103, "wherev": 66, "whether": [6, 7, 12, 13, 15, 16, 17, 18, 22, 23, 24, 26, 27, 29, 31, 33, 36, 37, 39, 42, 50, 51, 55, 56, 57, 68, 87, 90, 91, 99, 100, 101, 103], "which": [0, 3, 4, 6, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 36, 37, 38, 39, 40, 41, 42, 44, 50, 51, 52, 55, 56, 57, 61, 63, 64, 66, 68, 77, 79, 80, 81, 85, 87, 89, 90, 91, 92, 93, 94, 97, 98, 99, 101, 102, 103], "whichev": 83, "whicn": [19, 102], "while": [3, 26, 29, 52, 60, 66, 70, 72, 77, 83, 87, 89], "whitespac": [23, 26, 29, 36, 37, 48, 55], "whl": 77, "who": [0, 79, 80], "whole": [21, 26, 55, 64, 103], "whose": [6, 12, 22, 23, 26, 36, 37, 50, 51, 55, 100], "why": 60, "wide": [38, 44, 98, 103], "width": [20, 26, 37, 95, 103], "wiki": [0, 26, 37, 46], "wikipedia": [26, 37, 46], "window": [26, 31, 49, 75, 84], "wise": [8, 18, 26, 37, 39, 41, 86], "wish": 81, "within": [6, 12, 18, 19, 22, 24, 25, 26, 27, 29, 37, 38, 39, 40, 44, 50, 55, 61, 70, 72, 92, 93, 94, 98, 99], "without": [6, 18, 26, 29, 37, 38, 39, 44, 66, 77, 87, 93, 98], "won": 66, "word": [3, 26, 38, 44, 98], "work": [0, 4, 18, 22, 26, 29, 39, 42, 45, 55, 65, 68, 70, 72, 78, 79, 80, 81, 87, 91, 93, 96, 101, 103], "workflow": [0, 26, 29, 58, 64, 78, 81, 87], "workhors": 94, "world": [26, 38, 44, 55, 87, 98, 103], "worri": 65, "wors": 65, "would": [13, 26, 29, 37, 58, 62, 66, 71, 87, 90, 94], "wrap": 60, "wraparound": 61, "wrapper": [5, 6, 8, 9, 20, 23, 26, 36, 37, 56, 97], "writ": 72, "write": [1, 5, 9, 18, 22, 26, 27, 29, 30, 32, 37, 39, 50, 51, 55, 60, 61, 64, 69, 87], "write_fil": [26, 29, 87], "write_line_to_fil": 30, "write_log": [26, 32], "writeln": 0, "written": [18, 22, 24, 26, 27, 29, 30, 32, 37, 39, 50, 51, 55, 60, 69, 70, 71, 72, 73, 77, 87, 94, 97], "wrong": [26, 29, 102], "wrote": 0, "wsl": [77, 83], "wsl2": [61, 84], "wslconfig": 83, "wss": [26, 40], "wt": [22, 26, 51], "www": [26, 37], "x": [0, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 26, 29, 36, 37, 38, 39, 43, 44, 46, 47, 48, 50, 55, 58, 60, 68, 83, 87, 90, 91, 93, 94, 97, 98, 99, 103], "x00": [23, 26, 36, 37], "x00b": [23, 26, 36, 37], "x00c": [23, 26, 36, 37], "x1": [8, 11, 13, 26, 37], "x2": [8, 11, 13, 26, 37], "x410": 83, "x61": [26, 37], "x62": [26, 37], "x63": [26, 37], "x64": [26, 37], "x86": 79, "x86_64": [23, 26, 36, 37, 61, 79, 83], "x_edg": [26, 37], "xgetbv1": 61, "xlabel": [26, 43], "xlogi": [26, 47], "xor": [8, 22, 24, 26, 39, 50, 86, 94], "xore": [26, 37], "xsave": 61, "xsavec": 61, "xsaveopt": 61, "xserver": 83, "xtol": 48, "xtopologi": 61, "xvf": 79, "xy": 6, "xzf": [75, 80], "y": [23, 26, 36, 37, 39, 43, 46, 47, 48, 60, 62, 79], "y_edg": [26, 37], "yaml": 82, "yaml_fil": 82, "ye": 62, "year": [26, 57], "yet": [3, 6, 8, 11, 26, 50, 77, 87], "yhf": [26, 40], "yield": [1, 18, 22, 26, 27, 29, 37, 39, 50, 55, 93, 96], "yml": [75, 79, 80, 82], "you": [0, 1, 18, 20, 22, 23, 24, 26, 27, 29, 36, 37, 39, 50, 51, 55, 57, 60, 61, 62, 64, 65, 66, 67, 68, 70, 71, 75, 77, 78, 79, 80, 81, 82, 83, 84, 93, 94, 96], "your": [0, 1, 22, 26, 27, 29, 37, 39, 55, 62, 63, 64, 66, 67, 75, 77, 78, 79, 80, 81, 82, 83, 84, 93, 102, 103], "your_fork": [79, 80], "your_machin": 75, "yum": 79, "yyyi": 64, "z": [26, 37, 40], "zarr": [5, 9, 26, 29], "zarrai": [26, 29], "zarrmsg": [26, 29], "zero": [6, 13, 21, 23, 24, 26, 36, 37, 39, 40, 48, 53, 54, 64, 86, 92, 94, 96, 97], "zero_up": [3, 26], "zerodivisionerror": [26, 39, 40, 92], "zeromq": [77, 82], "zeros_lik": [6, 26, 40, 86, 92], "zig": [38, 44, 98], "ziggurat": [38, 44, 98], "zip": 75, "zmq": [1, 77], "zmqchannel": [19, 102], "zone": [26, 57], "zsh": 80, "zshrc": 80, "zstd": [18, 22, 26, 27, 29, 39, 50, 55, 61, 72], "\u00b2": [26, 55]}, "titles": ["Contributing", "Environment Variables", "arkouda.accessor", "arkouda.alignment", "arkouda.apply", "arkouda.array_api.array_object", "arkouda.array_api.creation_functions", "arkouda.array_api.data_type_functions", "arkouda.array_api.elementwise_functions", "arkouda.array_api", "arkouda.array_api.indexing_functions", "arkouda.array_api.linalg", "arkouda.array_api.manipulation_functions", "arkouda.array_api.searching_functions", "arkouda.array_api.set_functions", "arkouda.array_api.sorting_functions", "arkouda.array_api.statistical_functions", "arkouda.array_api.utility_functions", "arkouda.categorical", "arkouda.client", "arkouda.client_dtypes", "arkouda.comm_diagnostics", "arkouda.dataframe", "arkouda.dtypes", "arkouda.groupbyclass", "arkouda.history", "arkouda", "arkouda.index", "arkouda.infoclass", "arkouda.io", "arkouda.io_util", "arkouda.join", "arkouda.logger", "arkouda.match", "arkouda.matcher", "arkouda.numeric", "arkouda.numpy.dtypes", "arkouda.numpy", "arkouda.numpy.random", "arkouda.pdarrayclass", "arkouda.pdarraycreation", "arkouda.pdarraymanipulation", "arkouda.pdarraysetops", "arkouda.plotting", "arkouda.random", "arkouda.row", "arkouda.scipy", "arkouda.scipy.special", "arkouda.scipy.stats", "arkouda.security", "arkouda.segarray", "arkouda.series", "arkouda.sorting", "arkouda.sparrayclass", "arkouda.sparsematrix", "arkouda.strings", "arkouda.testing", "arkouda.timeclass", "arkouda.util", "API Reference", "Adding Your First Feature", "PyTest Benchmarks", "GASNet Development", "Reducing Memory Usage of Arkouda Builds", "Release Process", "Speeding up Arkouda Compilation", "Tips for Reproducing User Bugs", "Developer Documentation", "Examples", "CSV", "HDF5", "Import/Export", "Parquet", "File I/O", "Arkouda Documentation", "Quickstart", "Chapel API Reference", "Building the Server", "External Tools", "Linux", "MacOS", "Modular Server Builds", "Requirements", "Windows (WSL2)", "Installation", "Performance Testing", "Usage Guide", "Data I/O", "Indexs in Arkouda", "Sorting", "Arithmetic and Numeric Operations", "Categoricals", "Creating Arrays", "DataFrames in Arkouda", "GroupBy", "Summarizing Data", "Indexing and Assignment", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">pdarray</span></code> class", "Random in Arkouda", "SegArrays in Arkouda", "Series in Arkouda", "Array Set Operations", "Startup", "Strings in Arkouda"], "titleterms": {"3": [75, 102], "The": [61, 97], "access": 99, "accessor": 2, "ad": [0, 1, 60, 81], "add": 78, "align": 3, "all": 77, "alwai": 65, "an": 81, "anaconda": [79, 80, 82], "api": [59, 69, 70, 71, 72, 73, 76], "append": [93, 99], "appli": 4, "argsort": [85, 88], "argument": [61, 85], "arithmet": 90, "arkouda": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 65, 68, 69, 70, 72, 74, 75, 77, 79, 80, 81, 88, 93, 98, 99, 100, 102, 103], "arrai": [68, 92, 99, 101], "array_api": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "array_object": 5, "arrow": 77, "assign": 96, "attribut": [5, 26, 28, 37, 49, 50, 52, 70], "basic": 68, "benchmark": 61, "between": 87, "black": 78, "bug": [0, 66], "build": [62, 63, 65, 66, 77, 80, 81], "cast": 97, "categor": [18, 70, 72, 91], "chang": 88, "chapel": [0, 1, 62, 76, 77, 78, 79, 80], "choic": 98, "class": [2, 5, 7, 9, 14, 18, 20, 22, 23, 24, 25, 26, 27, 32, 33, 34, 36, 37, 38, 39, 44, 45, 46, 48, 50, 51, 53, 55, 57, 97], "client": [1, 19, 60, 75, 87, 102], "client_dtyp": 20, "clone": [79, 80], "code": 0, "column": 93, "comm_diagnost": 21, "compil": [1, 65], "compress": 72, "concat": 88, "concaten": [92, 93], "conda": 77, "configur": [62, 70, 77, 78, 81], "connect": [75, 102], "constant": 92, "construct": 91, "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "contribut": 0, "convent": 0, "copi": 93, "core": 0, "count": [95, 100], "creat": [68, 92], "creation": [68, 98], "creation_funct": 6, "csv": 69, "custom": 81, "data": [69, 70, 72, 87, 93, 95, 97], "data_type_funct": 7, "datafram": [22, 68, 69, 70, 72, 93], "dataset": 87, "dedupl": [93, 99], "depend": [1, 75, 77, 82], "descript": 95, "develop": [0, 62, 67, 82], "diff": 64, "differ": 99, "directori": 1, "disconnect": 75, "disk": 87, "distribut": [70, 77], "document": [67, 74, 77], "drop": 93, "dtype": [23, 36, 88], "each": 78, "effici": 66, "element": [90, 99], "elementwise_funct": 8, "environ": [1, 62, 65, 77, 79, 80], "exampl": [60, 68, 69], "except": [3, 26, 39], "exponenti": 98, "export": [68, 71, 73, 87], "express": 103, "extern": 78, "featur": [0, 60, 88, 93, 98, 100], "file": [61, 69, 70, 73, 81, 87], "filter": 93, "first": 60, "flag": 1, "flake8": 78, "flatten": 103, "format": [69, 73, 87], "from": [1, 80, 87], "full": [61, 66], "function": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 56, 57, 58, 60, 73, 90], "gasnet": 62, "gather": [85, 96], "gener": [64, 73], "get": 77, "git": 64, "groupbi": [68, 70, 93, 94], "groupbyclass": 24, "guid": [84, 86], "hdf5": 70, "head": [93, 100], "header": 69, "highlight": 78, "histogram": 95, "histori": 25, "homebrew": 80, "i": [73, 87, 103], "import": [68, 71, 73, 87], "index": [27, 69, 70, 72, 88, 93, 96], "indexing_funct": 10, "individu": 77, "infoclass": 28, "instal": [75, 77, 79, 80, 82, 84], "instruct": 64, "integ": [96, 98], "integr": 100, "interact": 68, "interfac": 60, "intersect": 99, "io": 29, "io_util": 30, "isort": 78, "issu": 0, "iter": [91, 93, 97, 99, 103], "join": [31, 103], "json": 61, "l": 73, "languag": 78, "larg": 87, "launch": [75, 102], "legaci": 70, "linalg": 11, "lint": 0, "linux": 79, "list": 82, "local": 78, "log": 64, "logger": 32, "logic": 96, "logist": 98, "lognorm": 98, "lookup": [88, 100], "maco": 80, "makefil": 1, "manipulation_funct": 12, "manual": 77, "map": 68, "match": [33, 103], "matcher": 34, "memori": 63, "merg": 0, "metadata": 70, "method": [99, 103], "mode": [70, 72], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 81], "modular": [65, 77, 81], "name": [85, 97], "new": 81, "next": [78, 79, 80], "ngram": 99, "normal": 98, "note": 64, "numer": [35, 90], "numpi": [36, 37, 38], "o": [73, 87, 103], "object": [68, 103], "onli": 0, "oper": [68, 90, 91, 97, 99, 101, 103], "output": 61, "outsid": 1, "overview": 84, "packag": [9, 23, 26, 44, 56, 77], "panda": [68, 100], "parquet": 72, "path": 1, "pdarrai": [68, 69, 70, 72, 96, 97], "pdarrayclass": 39, "pdarraycr": 40, "pdarraymanipul": 41, "pdarraysetop": 42, "perform": [85, 99, 103], "permut": [93, 98], "pip": [77, 78, 82], "plot": 43, "poisson": 98, "posit": 85, "prefix": 99, "prepend": 99, "preprocess": 87, "process": [0, 64, 81], "pull": 0, "py": 77, "pycharm": 78, "pytest": 61, "python": [0, 1, 60, 68, 75, 79, 80, 82, 102], "python3": 0, "quickstart": 75, "random": [38, 44, 92, 98], "rank": 97, "read": [61, 73, 87], "recommend": [77, 80], "reduc": [63, 85], "reduct": 90, "refer": [59, 69, 70, 71, 72, 76], "regular": [92, 103], "releas": [0, 64], "renam": 93, "report": 0, "repositori": [79, 80], "reproduc": 66, "request": 0, "requir": [82, 84], "reset": 93, "reshap": 97, "review": 0, "rhel": 79, "row": 45, "run": [0, 1, 61, 62, 78, 81], "save": [66, 81], "scalar": 90, "scan": [85, 90], "scatter": [85, 96], "schema": 70, "scipi": [46, 47, 48], "search": 103, "searching_funct": 13, "secur": 49, "segarrai": [50, 70, 72, 99], "seri": [51, 100], "server": [60, 75, 77, 81, 87, 102], "set": [65, 68, 99, 101], "set_funct": 14, "setop": 99, "shuffl": 98, "shutdown": 75, "singl": 61, "size": 99, "slice": 96, "sort": [52, 89, 93, 100], "sorting_funct": 15, "sourc": 80, "sparrayclass": 53, "sparsematrix": 54, "special": 47, "specif": [82, 99, 103], "specifi": 81, "speed": 65, "split": 103, "src": 1, "standard_exponenti": 98, "standard_norm": 98, "start": 77, "startup": 102, "stat": 48, "statist": 95, "statistical_funct": 16, "step": [64, 78, 79, 80], "stream": 85, "string": [55, 69, 70, 72, 103], "sub": 99, "submodul": [9, 26, 37, 46], "substr": 103, "suffix": 99, "suit": 61, "summar": 95, "support": [69, 70, 72, 73, 87], "symmetr": 99, "syntax": 78, "system": 65, "tail": [93, 100], "team": 0, "test": [0, 1, 56, 61, 85], "timeclass": 57, "tip": 66, "tool": 78, "troubleshoot": 77, "type": [69, 70, 72, 93, 97], "ubuntu": 79, "uniform": 98, "union": 99, "up": 65, "updat": [80, 82], "us": [65, 68, 75, 77, 78, 81, 82], "usag": [63, 86], "user": 66, "util": 58, "utility_funct": 17, "valu": [95, 100], "variabl": [1, 65], "vector": 90, "vscode": 78, "where": 90, "window": 83, "wise": 90, "without": 69, "write": [0, 70, 72, 73], "wsl2": 83, "your": 60}})