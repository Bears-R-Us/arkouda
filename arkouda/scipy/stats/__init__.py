# mypy: ignore-errors
from scipy.stats import (  # noqa
    ConstantInputWarning,
    DegenerateDataWarning,
    FitError,
    NearConstantInputWarning,
    alpha,
    anglit,
    arcsine,
    argus,
    bernoulli,
    beta,
    betabinom,
    biasedurn,
    binom,
    binomtest,
    boltzmann,
    bradford,
    burr,
    burr12,
    cauchy,
    chi,
    chi2,
    contingency,
    cosine,
    crystalball,
    dgamma,
    distributions,
    dlaplace,
    dweibull,
    erlang,
    expon,
    exponnorm,
    exponpow,
    exponweib,
    f,
    fatiguelife,
    fisk,
    foldcauchy,
    foldnorm,
    gamma,
    gausshyper,
    genexpon,
    genextreme,
    gengamma,
    genhalflogistic,
    genhyperbolic,
    geninvgauss,
    genlogistic,
    gennorm,
    genpareto,
    geom,
    gibrat,
    gompertz,
    gumbel_l,
    gumbel_r,
    halfcauchy,
    halfgennorm,
    halflogistic,
    halfnorm,
    hypergeom,
    hypsecant,
    invgamma,
    invgauss,
    invweibull,
    johnsonsb,
    johnsonsu,
    kappa3,
    kappa4,
    kde,
    ksone,
    kstwo,
    kstwobign,
    laplace,
    laplace_asymmetric,
    levy,
    levy_l,
    levy_stable,
    loggamma,
    logistic,
    loglaplace,
    lognorm,
    logser,
    loguniform,
    lomax,
    maxwell,
    mielke,
    morestats,
    moyal,
    mstats_basic,
    mstats_extras,
    mvn,
    nakagami,
    nbinom,
    ncf,
    nchypergeom_fisher,
    nchypergeom_wallenius,
    nct,
    ncx2,
    nhypergeom,
    norm,
    norminvgauss,
    pareto,
    pearson3,
    planck,
    poisson,
    poisson_means_test,
    powerlaw,
    powerlognorm,
    powernorm,
    randint,
    rayleigh,
    rdist,
    recipinvgauss,
    reciprocal,
    rice,
    sampling,
    semicircular,
    skellam,
    skewcauchy,
    skewnorm,
    stats,
    studentized_range,
    t,
    trapezoid,
    trapz,
    triang,
    truncexpon,
    truncnorm,
    truncpareto,
    truncweibull_min,
    tukeylambda,
    uniform,
    vonmises,
    vonmises_line,
    wald,
    weibull_max,
    weibull_min,
    wrapcauchy,
    yulesimon,
    zipf,
    zipfian,
)

from ._stats_py import Power_divergenceResult, chisquare, power_divergence  # noqa

scipy_imports = [
    "ConstantInputWarning",
    "DegenerateDataWarning",
    "FitError",
    "NearConstantInputWarning",
    "alpha",
    "anglit",
    "arcsine",
    "argus",
    "bernoulli",
    "beta",
    "betabinom",
    "biasedurn",
    "binom",
    "binomtest",
    "boltzmann",
    "bradford",
    "burr",
    "burr12",
    "cauchy",
    "chi",
    "chi2",
    "contingency",
    "cosine",
    "crystalball",
    "dgamma",
    "distributions",
    "dlaplace",
    "dweibull",
    "erlang",
    "expon",
    "exponnorm",
    "exponpow",
    "exponweib",
    "f",
    "fatiguelife",
    "fisk",
    "foldcauchy",
    "foldnorm",
    "gamma",
    "gausshyper",
    "genexpon",
    "genextreme",
    "gengamma",
    "genhalflogistic",
    "genhyperbolic",
    "geninvgauss",
    "genlogistic",
    "gennorm",
    "genpareto",
    "geom",
    "gibrat",
    "gompertz",
    "gumbel_l",
    "gumbel_r",
    "halfcauchy",
    "halfgennorm",
    "halflogistic",
    "halfnorm",
    "hypergeom",
    "hypsecant",
    "invgamma",
    "invgauss",
    "invweibull",
    "johnsonsb",
    "johnsonsu",
    "kappa3",
    "kappa4",
    "kde",
    "ksone",
    "kstwo",
    "kstwobign",
    "laplace",
    "laplace_asymmetric",
    "levy",
    "levy_l",
    "levy_stable",
    "loggamma",
    "logistic",
    "loglaplace",
    "lognorm",
    "logser",
    "loguniform",
    "lomax",
    "maxwell",
    "mielke",
    "morestats",
    "moyal",
    "mstats_basic",
    "mstats_extras",
    "mvn",
    "nakagami",
    "nbinom",
    "ncf",
    "nchypergeom_fisher",
    "nchypergeom_wallenius",
    "nct",
    "ncx2",
    "nhypergeom",
    "norm",
    "norminvgauss",
    "pareto",
    "pearson3",
    "planck",
    "poisson",
    "poisson_means_test",
    "powerlaw",
    "powerlognorm",
    "powernorm",
    "randint",
    "rayleigh",
    "rdist",
    "recipinvgauss",
    "reciprocal",
    "rice",
    "sampling",
    "semicircular",
    "skellam",
    "skewcauchy",
    "skewnorm",
    "stats",
    "studentized_range",
    "t",
    "test",
    "trapezoid",
    "trapz",
    "triang",
    "truncexpon",
    "truncnorm",
    "truncpareto",
    "truncweibull_min",
    "tukeylambda",
    "uniform",
    "vonmises",
    "vonmises_line",
    "wald",
    "weibull_max",
    "weibull_min",
    "wrapcauchy",
    "yulesimon",
    "zipf",
    "zipfian",
]

__all__ = scipy_imports + ["Power_divergenceResult", "power_divergence", "chisquare"]
