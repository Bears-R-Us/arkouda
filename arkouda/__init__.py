# isort: skip_file
# flake8: noqa
# isort: skip_file
# arkouda/__init__.py
# do not run isort, imports are order dependent
"""
Arkouda: Exploratory data science at scale.

Arkouda is a Python API for exploratory data analysis on massive datasets. It
leverages a Chapel-based backend to enable high-performance computing on
distributed systems, while exposing a familiar NumPy- and Pandas-like interface
to Python users.

Key Features
------------
- `pdarray` and `Strings` types for working with large numeric and string arrays.
- `Categorical`, `Series`, `DataFrame`, and `Index` for labeled data analysis.
- High-performance `GroupBy`, reductions, and broadcasting operations.
- Interoperability with NumPy and Pandas for ease of use.
- A scalable architecture suitable for HPC and cloud environments.

Example:
-------
>>> import arkouda as ak
>>> ak.connect()
>>> a = ak.array([1, 2, 3])
>>> b = a + 5
>>> print(b)
array([6 7 8])

For full documentation, visit: https://bears-r-us.github.io/arkouda/

"""

from ._version import get_versions

__version__ = get_versions()["version"]
del get_versions

from arkouda.numpy import (
    ARKOUDA_SUPPORTED_DTYPES,
    ARKOUDA_SUPPORTED_INTS,
    BoolDType,
    ByteDType,
    BytesDType,
    CLongDoubleDType,
    Complex128DType,
    Complex64DType,
    DType,
    DTypeObjects,
    DTypes,
    DateTime64DType,
    Datetime,
    ErrorMode,
    False_,
    Float16DType,
    Float32DType,
    Float64DType,
    Int16DType,
    Int32DType,
    Int64DType,
    Int8DType,
    IntDType,
    LongDType,
    LongDoubleDType,
    LongLongDType,
    NUMBER_FORMAT_STRINGS,
    NumericDTypes,
    ObjectDType,
    RankWarning,
    RegistrationError,
    ScalarDTypes,
    ScalarType,
    SegArray,
    SeriesDTypes,
    ShortDType,
    SortingAlgorithm,
    StrDType,
    Strings,
    TimeDelta64DType,
    Timedelta,
    TooHardError,
    True_,
    UByteDType,
    UInt16DType,
    UInt32DType,
    UInt64DType,
    UInt8DType,
    UIntDType,
    ULongDType,
    ULongLongDType,
    UShortDType,
    VoidDType,
    abs,
    add_docstring,
    add_newdoc,
    all,
    all_scalars,
    any,
    append,
    arange,
    arccos,
    arccosh,
    arcsin,
    arcsinh,
    arctan,
    arctan2,
    arctanh,
    argmax,
    argmaxk,
    argmin,
    argmink,
    argsort,
    array,
    array_equal,
    attach,
    attach_all,
    base_repr,
    bigint,
    bigint_from_uint_arrays,
    binary_repr,
    bitType,
    bool,
    bool_,
    bool,
    bool_scalars,
    broadcast_dims,
    broadcast_to_shape,
    byte,
    bytes_,
    can_cast,
    cast,
    cdouble,
    ceil,
    char,
    character,
    clear,
    clip,
    clongdouble,
    clz,
    coargsort,
    complex128,
    complex64,
    concatenate,
    copy,
    corr,
    cos,
    cosh,
    count_nonzero,
    cov,
    csingle,
    ctypeslib,
    ctz,
    cumprod,
    cumsum,
    date_range,
    datetime64,
    deg2rad,
    delete,
    diff,
    divmod,
    dot,
    double,
    dtype,
    dtypes,
    e,
    emath,
    euler_gamma,
    exceptions,
    exp,
    expm1,
    eye,
    finfo,
    flexible,
    flip,
    float16,
    float32,
    float64,
    float_scalars,
    floating,
    floor,
    fmod,
    format_float_positional,
    format_float_scientific,
    format_parser,
    from_series,
    full,
    full_like,
    get_byteorder,
    get_server_byteorder,
    half,
    hash,
    histogram,
    histogram2d,
    histogramdd,
    hstack,
    iinfo,
    imports,
    in1d,
    indexof1d,
    inexact,
    inf,
    int16,
    int32,
    int64,
    int8,
    intTypes,
    int_,
    int_scalars,
    intc,
    integer,
    intersect1d,
    intp,
    isnumeric,
    isSupportedBool,
    isSupportedDType,
    isSupportedFloat,
    isSupportedInt,
    isSupportedNumber,
    is_registered,
    is_sorted,
    isfinite,
    isinf,
    isnan,
    isscalar,
    issubdtype,
    lib,
    linspace,
    logspace,
    log,
    log10,
    log1p,
    log2,
    longdouble,
    longlong,
    ma,
    manipulation_functions,
    matmul,
    max,
    maxk,
    mean,
    median,
    min,
    mink,
    mod,
    nan,
    newaxis,
    nextafter,
    number,
    numeric,
    numeric_and_bool_scalars,
    numeric_scalars,
    numpy_scalars,
    object_,
    ones,
    ones_like,
    parity,
    pdarray,
    pdarrayclass,
    pdarraycreation,
    pdarraymanipulation,
    pdarraysetops,
    percentile,
    pi,
    polynomial,
    popcount,
    power,
    prod,
    promote_to_common_dtype,
    promote_types,
    putmask,
    quantile,
    rad2deg,
    randint,
    random,
    random_strings_lognormal,
    random_strings_uniform,
    rec,
    register_all,
    repeat,
    resolve_scalar_dtype,
    result_type,
    rotl,
    rotr,
    round,
    scalar_array,
    sctypeDict,
    searchsorted,
    segarray,
    setdiff1d,
    setxor1d,
    shape,
    short,
    sign,
    signedinteger,
    sin,
    single,
    sinh,
    sort,
    sorting,
    sqrt,
    square,
    squeeze,
    standard_normal,
    std,
    str_,
    str_scalars,
    strings,
    sum,
    take,
    tan,
    tanh,
    tile,
    timeclass,
    timedelta64,
    timedelta_range,
    transpose,
    tril,
    triu,
    trunc,
    typename,
    ubyte,
    uint,
    uint16,
    uint32,
    uint64,
    uint8,
    uintc,
    uintp,
    ulonglong,
    uniform,
    union1d,
    unregister,
    unregister_all,
    unsignedinteger,
    ushort,
    util,
    utils,
    value_counts,
    var,
    vecdot,
    void,
    vstack,
    where,
    zeros,
    zeros_like,
)
from arkouda.pandas import (
    Row,
    Series,
    compute_join_size,
    gen_ranges,
    join,
    join_on_eq_with_dt,
    row,
    series,
    ArkoudaArray,
    ArkoudaDtype,
    ArkoudaStringArray,
    ArkoudaStringDtype,
    ArkoudaCategoricalArray,
    ArkoudaCategoricalDtype,
)
from arkouda.client import (
    connect,
    disconnect,
    generate_history,
    get_config,
    get_max_array_rank,
    get_mem_avail,
    get_mem_status,
    get_mem_used,
    get_server_commands,
    print_server_commands,
    ruok,
    shutdown,
)
from arkouda.client_dtypes import BitVector, BitVectorizer, Fields, IPv4, ip_address, is_ipv4, is_ipv6
from arkouda.groupbyclass import GROUPBY_REDUCTION_TYPES, GroupBy, broadcast, groupable, unique
from arkouda.categorical import Categorical
from arkouda.logger import LogLevel, disableVerbose, enableVerbose, write_log
from arkouda.infoclass import (
    AllSymbols,
    RegisteredSymbols,
    information,
    list_registry,
    list_symbol_table,
    pretty_print_information,
)
from arkouda.dataframe import (
    DataFrame,
    DataFrameGroupBy,
    DiffAggregate,
    intersect,
    intx,
    invert_permutation,
    merge,
)
from arkouda.index import Index, MultiIndex
from arkouda.alignment import (
    NonUniqueError,
    align,
    find,
    in1d_intervals,
    interval_lookup,
    is_cosorted,
    left_align,
    lookup,
    right_align,
    search_intervals,
    unsqueeze,
    zero_up,
)
from arkouda.plotting import hist_all, plot_dist
from arkouda.accessor import (
    CachedAccessor,
    DatetimeAccessor,
    Properties,
    StringAccessor,
    date_operators,
    string_operators,
)
from arkouda.io import (
    export,
    get_columns,
    get_datasets,
    get_filetype,
    get_null_indices,
    import_data,
    load,
    load_all,
    load_checkpoint,
    ls,
    ls_csv,
    read,
    read_csv,
    read_hdf,
    read_parquet,
    read_tagged_data,
    read_zarr,
    receive,
    receive_dataframe,
    restore,
    save_checkpoint,
    snapshot,
    to_csv,
    to_hdf,
    to_parquet,
    to_zarr,
    update_hdf,
)
from arkouda.scipy.special import xlogy
from arkouda.scipy import Power_divergenceResult, chisquare, power_divergence
from arkouda.testing import (
    assert_almost_equal,
    assert_almost_equivalent,
    assert_arkouda_array_equal,
    assert_arkouda_array_equivalent,
    assert_arkouda_pdarray_equal,
    assert_arkouda_segarray_equal,
    assert_arkouda_strings_equal,
    assert_attr_equal,
    assert_categorical_equal,
    assert_class_equal,
    assert_contains_all,
    assert_copy,
    assert_dict_equal,
    assert_equal,
    assert_equivalent,
    assert_frame_equal,
    assert_frame_equivalent,
    assert_index_equal,
    assert_index_equivalent,
    assert_is_sorted,
    assert_series_equal,
    assert_series_equivalent,
)
from arkouda.apply import apply
