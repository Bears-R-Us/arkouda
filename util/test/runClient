#!/usr/bin/env python3
"""
Run arkouda client program(s), automatically starting/stopping the server.
Assumes the client takes `hostname port` as the first positional arguments and
does not shut down the server. Any unknown arguments are passed to the client
script. Example usage:

# run checks wih 2 locales for CHPL_COMM!=none, 1 otherwise
./runClient tests/check.py

# run stream with 4 locales, passing size to stream
./util/test/runClient ./benchmarks/stream.py -nl 4 --size=100
"""

import argparse
import sys

from util import *

parser = argparse.ArgumentParser(description=__doc__)
parser.add_argument(
    "clients", type=argparse.FileType("r"), help="The arkouda client program(s) to run", nargs="+"
)
parser.add_argument(
    "-nl",
    "--num-locales",
    "--numLocales",
    default=get_arkouda_numlocales(),
    help="Number of locales to use for the server",
)
parser.add_argument("-sp", "--server-port", default="5555", help="Port number to use for the server")
parser.add_argument("--server-args", action="append", help="Additional server arguments")

args, client_args = parser.parse_known_args()

start_arkouda_server(args.num_locales, port=args.server_port, server_args=args.server_args)
ret = 0
for client in args.clients:
    cmd_string = "{} {}".format(client.name, " ".join(client_args)).strip()
    print('Running "{}"'.format(cmd_string))
    ret |= run_client_live(client.name, client_args)
stop_arkouda_server()
sys.exit(ret)
