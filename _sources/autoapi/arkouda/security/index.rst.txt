arkouda.security
================

.. py:module:: arkouda.security


Attributes
----------

.. autoapisummary::

   arkouda.security.username_tokenizer


Functions
---------

.. autoapisummary::

   arkouda.security.generate_token
   arkouda.security.generate_username_token_json
   arkouda.security.get_arkouda_client_directory
   arkouda.security.get_home_directory
   arkouda.security.get_username


Module Contents
---------------

.. py:function:: generate_token(length: int = 32) -> str

   Uses the secrets.token_hex() method to generate a
   a hexidecimal token

   :param length: The desired length of token
   :type length: int

   :returns: The hexidecimal string generated by Python
   :rtype: str

   .. rubric:: Notes

   This method uses the Python secrets.token_hex method


.. py:function:: generate_username_token_json(token: str) -> str

   Generates a JSON object encapsulating the user's username
   and token for connecting to an arkouda server with basic
   authentication enabled

   :param token: The token to be used to access arkouda server
   :type token: string

   :returns: The JSON-formatted string encapsulating username and token
   :rtype: str


.. py:function:: get_arkouda_client_directory() -> pathlib.Path

   A platform-independent means of finding path to
   the current user's .arkouda directory where artifacts
   such as server access tokens are stored.

   :returns: Path corresponding to the user's .arkouda directory path
   :rtype: Path

   .. rubric:: Notes

   The default implementation is to place the .arkouda
   directory in the current user's home directory. The
   default can be overridden by setting the ARKOUDA_CLIENT_DIRECTORY
   environment variable.  It is important this is not the same location
   as the server's token directory as the file format is different.


.. py:function:: get_home_directory() -> str

   A platform-independent means of finding path to
   the current user's home directory

   :returns: The user's home directory path
   :rtype: str

   .. rubric:: Notes

   This method uses the Python os.path.expanduser method
   to retrieve the user's home directory


.. py:function:: get_username() -> str

   A platform-independent means of retrieving the current
   user's username for the host system.

   :returns: The username in the form of string
   :rtype: str

   :raises EnvironmentError: Raised if the host OS is unsupported

   .. rubric:: Notes

   The currently supported operating systems are Windows, Linux,
   and MacOS AKA Darwin


.. py:data:: username_tokenizer

