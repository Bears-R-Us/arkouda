arkouda.history
===============

.. py:module:: arkouda.history

.. autoapi-nested-parse::

   History retrieval utilities for Arkouda command execution.

   This module provides tools for retrieving the history of commands executed
   in Python REPL shells or Jupyter/IPython notebooks. It defines abstract and
   concrete retrievers to access interactive command history for reproducibility,
   debugging, or audit purposes.

   Classes
   -------
   HistoryRetriever
       Abstract base class defining the `retrieve` method and a helper for filtering commands.

   ShellHistoryRetriever
       Retrieves command history from a Python REPL shell using `readline`.

   NotebookHistoryRetriever
       Retrieves command history from a Jupyter notebook or IPython shell via IPython's history database.

   Usage
   -----
   Used internally by `arkouda.generate_history()` to provide a user-friendly interface
   for querying and filtering past commands based on optional string filters and count limits.

   .. rubric:: Examples

   >>> from arkouda.history import ShellHistoryRetriever, NotebookHistoryRetriever

   # REPL mode
   >>> h = ShellHistoryRetriever()
   >>> h.retrieve(command_filter="ak.", num_commands=5)   # doctest: +SKIP
   ['ak.array([1,2,3])', 'ak.sum(...)', ...]

   # Notebook mode
   >>> h = NotebookHistoryRetriever()  # doctest: +SKIP
   >>> h.retrieve(num_commands=3)  # doctest: +SKIP
   ['ak.connect()', 'df = ak.DataFrame(...)', 'ak.argsort(...)']

   .. seealso::

      :py:obj:`arkouda.generate_history`
          High-level function for retrieving command history.



Classes
-------

.. autoapisummary::

   arkouda.history.HistoryRetriever
   arkouda.history.NotebookHistoryRetriever
   arkouda.history.ShellHistoryRetriever


Module Contents
---------------

.. py:class:: HistoryRetriever

   Abstract base class that defines the retrieve method signature.

   Implements _filter_arkouda_command.


   .. py:method:: retrieve(command_filter: Optional[str] = None, num_commands: Optional[int] = None) -> List[str]
      :abstractmethod:


      Generate list of commands executed.

      Generate list of commands executed within a Python REPL shell, Jupyter notebook,
      or IPython notebook, with an optional command filter and number of commands to return.

      :param num_commands: The number of commands from history to retrieve
      :type num_commands: int
      :param command_filter: String containing characters used to select a subset of command history.
      :type command_filter: str
      :param Returns  # noqa:
      :type Returns  # noqa: DAR202
      :param -------:
      :param List[str]: A list of commands from the Python shell, Jupyter notebook, or IPython notebook



.. py:class:: NotebookHistoryRetriever(profile: str = 'default', hist_file: str = '', **traits: Any)

   Bases: :py:obj:`IPython.core.history.HistoryAccessor`, :py:obj:`HistoryRetriever`


   Implement the retrieve method to get command history from a Jupyter notebook or IPython shell.


   .. py:method:: retrieve(command_filter: Optional[str] = None, num_commands: Optional[int] = None) -> List[str]

      Generate list of commands executed.

      Generate list of commands executed within a Jupyter notebook or IPython shell,
      with an optional command filter and number of commands to return.

      :param num_commands: The number of commands from history to retrieve
      :type num_commands: int
      :param command_filter: String containing characters used to select a subset of command history.
      :type command_filter: str

      :returns: A list of commands from the Python shell, Jupyter notebook, or IPython notebook
      :rtype: List[str]

      .. rubric:: Examples

      >>> import arkouda as ak
      >>> from arkouda.history import NotebookHistoryRetriever
      >>> h = NotebookHistoryRetriever()  # doctest: +SKIP
      >>> 1+2
      3
      >>> 4*6
      24
      >>> 2**3
      8
      >>> h.retrieve(num_commands=3)  # doctest: +SKIP
      ['1+2', '4*6', '2**3']



.. py:class:: ShellHistoryRetriever

   Bases: :py:obj:`HistoryRetriever`


   Implement the retrieve method to get command history from the Python REPL shell.


   .. py:method:: retrieve(command_filter: Optional[str] = None, num_commands: Optional[int] = None) -> List[str]

      Generate list of commands executed.

      Generate list of commands executed within the a Python REPL shell, with an
      optional command filter and number of commands to return.

      :param num_commands: The number of commands from history to retrieve
      :type num_commands: int
      :param command_filter: String containing characters used to select a subset of command history.
      :type command_filter: str

      :returns: A list of commands from the Python shell, Jupyter notebook, or IPython notebook
      :rtype: List[str]

      .. rubric:: Examples

      >>> import arkouda as ak
      >>> from arkouda.history import ShellHistoryRetriever
      >>> import readline
      >>> h = ShellHistoryRetriever()
      >>> readline.clear_history()
      >>> 1 + 2
      3
      >>> h.retrieve() # doctest: +SKIP
      [' 1 + 2', 'h.retrieve()']



